

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Apr 07 22:10:21 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    63                           	dabs	1,0x7E,2
    64     0000                     
    65                           ; Version 2.40
    66                           ; Generated 17/11/2021 GMT
    67                           ; 
    68                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F1936 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100     0000                     	;# 
   101     0001                     	;# 
   102     0002                     	;# 
   103     0003                     	;# 
   104     0004                     	;# 
   105     0005                     	;# 
   106     0006                     	;# 
   107     0007                     	;# 
   108     0008                     	;# 
   109     0009                     	;# 
   110     000A                     	;# 
   111     000B                     	;# 
   112     000C                     	;# 
   113     000D                     	;# 
   114     000E                     	;# 
   115     0010                     	;# 
   116     0011                     	;# 
   117     0012                     	;# 
   118     0013                     	;# 
   119     0015                     	;# 
   120     0016                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001B                     	;# 
   127     001C                     	;# 
   128     001E                     	;# 
   129     001F                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     0110                     	;# 
   152     0111                     	;# 
   153     0112                     	;# 
   154     0113                     	;# 
   155     0114                     	;# 
   156     0115                     	;# 
   157     0116                     	;# 
   158     0117                     	;# 
   159     0118                     	;# 
   160     0119                     	;# 
   161     011A                     	;# 
   162     011B                     	;# 
   163     011D                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0191                     	;# 
   167     0191                     	;# 
   168     0192                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0193                     	;# 
   172     0194                     	;# 
   173     0195                     	;# 
   174     0196                     	;# 
   175     0199                     	;# 
   176     019A                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019C                     	;# 
   182     019C                     	;# 
   183     019D                     	;# 
   184     019E                     	;# 
   185     019F                     	;# 
   186     020D                     	;# 
   187     0210                     	;# 
   188     0211                     	;# 
   189     0212                     	;# 
   190     0213                     	;# 
   191     0214                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0216                     	;# 
   195     0217                     	;# 
   196     0291                     	;# 
   197     0291                     	;# 
   198     0292                     	;# 
   199     0293                     	;# 
   200     0294                     	;# 
   201     0295                     	;# 
   202     0295                     	;# 
   203     0296                     	;# 
   204     0298                     	;# 
   205     0298                     	;# 
   206     0299                     	;# 
   207     029A                     	;# 
   208     029B                     	;# 
   209     029C                     	;# 
   210     029C                     	;# 
   211     029D                     	;# 
   212     029E                     	;# 
   213     029F                     	;# 
   214     0311                     	;# 
   215     0311                     	;# 
   216     0312                     	;# 
   217     0313                     	;# 
   218     0314                     	;# 
   219     0315                     	;# 
   220     0315                     	;# 
   221     0316                     	;# 
   222     0318                     	;# 
   223     0318                     	;# 
   224     0319                     	;# 
   225     031A                     	;# 
   226     031C                     	;# 
   227     031C                     	;# 
   228     031D                     	;# 
   229     031E                     	;# 
   230     0394                     	;# 
   231     0395                     	;# 
   232     0396                     	;# 
   233     0415                     	;# 
   234     0416                     	;# 
   235     0417                     	;# 
   236     041C                     	;# 
   237     041D                     	;# 
   238     041E                     	;# 
   239     0791                     	;# 
   240     0792                     	;# 
   241     0793                     	;# 
   242     0794                     	;# 
   243     0795                     	;# 
   244     0798                     	;# 
   245     0799                     	;# 
   246     07A0                     	;# 
   247     07A1                     	;# 
   248     07A3                     	;# 
   249     07A4                     	;# 
   250     07A6                     	;# 
   251     07A7                     	;# 
   252     07A9                     	;# 
   253     07AA                     	;# 
   254     0FE4                     	;# 
   255     0FE5                     	;# 
   256     0FE6                     	;# 
   257     0FE7                     	;# 
   258     0FE8                     	;# 
   259     0FE9                     	;# 
   260     0FEA                     	;# 
   261     0FEB                     	;# 
   262     0FED                     	;# 
   263     0FEE                     	;# 
   264     0FEF                     	;# 
   265     0000                     	;# 
   266     0001                     	;# 
   267     0002                     	;# 
   268     0003                     	;# 
   269     0004                     	;# 
   270     0005                     	;# 
   271     0006                     	;# 
   272     0007                     	;# 
   273     0008                     	;# 
   274     0009                     	;# 
   275     000A                     	;# 
   276     000B                     	;# 
   277     000C                     	;# 
   278     000D                     	;# 
   279     000E                     	;# 
   280     0010                     	;# 
   281     0011                     	;# 
   282     0012                     	;# 
   283     0013                     	;# 
   284     0015                     	;# 
   285     0016                     	;# 
   286     0016                     	;# 
   287     0017                     	;# 
   288     0018                     	;# 
   289     0019                     	;# 
   290     001A                     	;# 
   291     001B                     	;# 
   292     001C                     	;# 
   293     001E                     	;# 
   294     001F                     	;# 
   295     008C                     	;# 
   296     008D                     	;# 
   297     008E                     	;# 
   298     0090                     	;# 
   299     0091                     	;# 
   300     0092                     	;# 
   301     0093                     	;# 
   302     0095                     	;# 
   303     0096                     	;# 
   304     0097                     	;# 
   305     0098                     	;# 
   306     0099                     	;# 
   307     009A                     	;# 
   308     009B                     	;# 
   309     009B                     	;# 
   310     009C                     	;# 
   311     009D                     	;# 
   312     009E                     	;# 
   313     010C                     	;# 
   314     010D                     	;# 
   315     010E                     	;# 
   316     0110                     	;# 
   317     0111                     	;# 
   318     0112                     	;# 
   319     0113                     	;# 
   320     0114                     	;# 
   321     0115                     	;# 
   322     0116                     	;# 
   323     0117                     	;# 
   324     0118                     	;# 
   325     0119                     	;# 
   326     011A                     	;# 
   327     011B                     	;# 
   328     011D                     	;# 
   329     018C                     	;# 
   330     018D                     	;# 
   331     0191                     	;# 
   332     0191                     	;# 
   333     0192                     	;# 
   334     0193                     	;# 
   335     0193                     	;# 
   336     0193                     	;# 
   337     0194                     	;# 
   338     0195                     	;# 
   339     0196                     	;# 
   340     0199                     	;# 
   341     019A                     	;# 
   342     019B                     	;# 
   343     019B                     	;# 
   344     019B                     	;# 
   345     019B                     	;# 
   346     019C                     	;# 
   347     019C                     	;# 
   348     019D                     	;# 
   349     019E                     	;# 
   350     019F                     	;# 
   351     020D                     	;# 
   352     0210                     	;# 
   353     0211                     	;# 
   354     0212                     	;# 
   355     0213                     	;# 
   356     0214                     	;# 
   357     0215                     	;# 
   358     0215                     	;# 
   359     0216                     	;# 
   360     0217                     	;# 
   361     0291                     	;# 
   362     0291                     	;# 
   363     0292                     	;# 
   364     0293                     	;# 
   365     0294                     	;# 
   366     0295                     	;# 
   367     0295                     	;# 
   368     0296                     	;# 
   369     0298                     	;# 
   370     0298                     	;# 
   371     0299                     	;# 
   372     029A                     	;# 
   373     029B                     	;# 
   374     029C                     	;# 
   375     029C                     	;# 
   376     029D                     	;# 
   377     029E                     	;# 
   378     029F                     	;# 
   379     0311                     	;# 
   380     0311                     	;# 
   381     0312                     	;# 
   382     0313                     	;# 
   383     0314                     	;# 
   384     0315                     	;# 
   385     0315                     	;# 
   386     0316                     	;# 
   387     0318                     	;# 
   388     0318                     	;# 
   389     0319                     	;# 
   390     031A                     	;# 
   391     031C                     	;# 
   392     031C                     	;# 
   393     031D                     	;# 
   394     031E                     	;# 
   395     0394                     	;# 
   396     0395                     	;# 
   397     0396                     	;# 
   398     0415                     	;# 
   399     0416                     	;# 
   400     0417                     	;# 
   401     041C                     	;# 
   402     041D                     	;# 
   403     041E                     	;# 
   404     0791                     	;# 
   405     0792                     	;# 
   406     0793                     	;# 
   407     0794                     	;# 
   408     0795                     	;# 
   409     0798                     	;# 
   410     0799                     	;# 
   411     07A0                     	;# 
   412     07A1                     	;# 
   413     07A3                     	;# 
   414     07A4                     	;# 
   415     07A6                     	;# 
   416     07A7                     	;# 
   417     07A9                     	;# 
   418     07AA                     	;# 
   419     0FE4                     	;# 
   420     0FE5                     	;# 
   421     0FE6                     	;# 
   422     0FE7                     	;# 
   423     0FE8                     	;# 
   424     0FE9                     	;# 
   425     0FEA                     	;# 
   426     0FEB                     	;# 
   427     0FED                     	;# 
   428     0FEE                     	;# 
   429     0FEF                     	;# 
   430     0000                     	;# 
   431     0001                     	;# 
   432     0002                     	;# 
   433     0003                     	;# 
   434     0004                     	;# 
   435     0005                     	;# 
   436     0006                     	;# 
   437     0007                     	;# 
   438     0008                     	;# 
   439     0009                     	;# 
   440     000A                     	;# 
   441     000B                     	;# 
   442     000C                     	;# 
   443     000D                     	;# 
   444     000E                     	;# 
   445     0010                     	;# 
   446     0011                     	;# 
   447     0012                     	;# 
   448     0013                     	;# 
   449     0015                     	;# 
   450     0016                     	;# 
   451     0016                     	;# 
   452     0017                     	;# 
   453     0018                     	;# 
   454     0019                     	;# 
   455     001A                     	;# 
   456     001B                     	;# 
   457     001C                     	;# 
   458     001E                     	;# 
   459     001F                     	;# 
   460     008C                     	;# 
   461     008D                     	;# 
   462     008E                     	;# 
   463     0090                     	;# 
   464     0091                     	;# 
   465     0092                     	;# 
   466     0093                     	;# 
   467     0095                     	;# 
   468     0096                     	;# 
   469     0097                     	;# 
   470     0098                     	;# 
   471     0099                     	;# 
   472     009A                     	;# 
   473     009B                     	;# 
   474     009B                     	;# 
   475     009C                     	;# 
   476     009D                     	;# 
   477     009E                     	;# 
   478     010C                     	;# 
   479     010D                     	;# 
   480     010E                     	;# 
   481     0110                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     018C                     	;# 
   495     018D                     	;# 
   496     0191                     	;# 
   497     0191                     	;# 
   498     0192                     	;# 
   499     0193                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0194                     	;# 
   503     0195                     	;# 
   504     0196                     	;# 
   505     0199                     	;# 
   506     019A                     	;# 
   507     019B                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019C                     	;# 
   512     019C                     	;# 
   513     019D                     	;# 
   514     019E                     	;# 
   515     019F                     	;# 
   516     020D                     	;# 
   517     0210                     	;# 
   518     0211                     	;# 
   519     0212                     	;# 
   520     0213                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0216                     	;# 
   525     0217                     	;# 
   526     0291                     	;# 
   527     0291                     	;# 
   528     0292                     	;# 
   529     0293                     	;# 
   530     0294                     	;# 
   531     0295                     	;# 
   532     0295                     	;# 
   533     0296                     	;# 
   534     0298                     	;# 
   535     0298                     	;# 
   536     0299                     	;# 
   537     029A                     	;# 
   538     029B                     	;# 
   539     029C                     	;# 
   540     029C                     	;# 
   541     029D                     	;# 
   542     029E                     	;# 
   543     029F                     	;# 
   544     0311                     	;# 
   545     0311                     	;# 
   546     0312                     	;# 
   547     0313                     	;# 
   548     0314                     	;# 
   549     0315                     	;# 
   550     0315                     	;# 
   551     0316                     	;# 
   552     0318                     	;# 
   553     0318                     	;# 
   554     0319                     	;# 
   555     031A                     	;# 
   556     031C                     	;# 
   557     031C                     	;# 
   558     031D                     	;# 
   559     031E                     	;# 
   560     0394                     	;# 
   561     0395                     	;# 
   562     0396                     	;# 
   563     0415                     	;# 
   564     0416                     	;# 
   565     0417                     	;# 
   566     041C                     	;# 
   567     041D                     	;# 
   568     041E                     	;# 
   569     0791                     	;# 
   570     0792                     	;# 
   571     0793                     	;# 
   572     0794                     	;# 
   573     0795                     	;# 
   574     0798                     	;# 
   575     0799                     	;# 
   576     07A0                     	;# 
   577     07A1                     	;# 
   578     07A3                     	;# 
   579     07A4                     	;# 
   580     07A6                     	;# 
   581     07A7                     	;# 
   582     07A9                     	;# 
   583     07AA                     	;# 
   584     0FE4                     	;# 
   585     0FE5                     	;# 
   586     0FE6                     	;# 
   587     0FE7                     	;# 
   588     0FE8                     	;# 
   589     0FE9                     	;# 
   590     0FEA                     	;# 
   591     0FEB                     	;# 
   592     0FED                     	;# 
   593     0FEE                     	;# 
   594     0FEF                     	;# 
   595     0000                     	;# 
   596     0001                     	;# 
   597     0002                     	;# 
   598     0003                     	;# 
   599     0004                     	;# 
   600     0005                     	;# 
   601     0006                     	;# 
   602     0007                     	;# 
   603     0008                     	;# 
   604     0009                     	;# 
   605     000A                     	;# 
   606     000B                     	;# 
   607     000C                     	;# 
   608     000D                     	;# 
   609     000E                     	;# 
   610     0010                     	;# 
   611     0011                     	;# 
   612     0012                     	;# 
   613     0013                     	;# 
   614     0015                     	;# 
   615     0016                     	;# 
   616     0016                     	;# 
   617     0017                     	;# 
   618     0018                     	;# 
   619     0019                     	;# 
   620     001A                     	;# 
   621     001B                     	;# 
   622     001C                     	;# 
   623     001E                     	;# 
   624     001F                     	;# 
   625     008C                     	;# 
   626     008D                     	;# 
   627     008E                     	;# 
   628     0090                     	;# 
   629     0091                     	;# 
   630     0092                     	;# 
   631     0093                     	;# 
   632     0095                     	;# 
   633     0096                     	;# 
   634     0097                     	;# 
   635     0098                     	;# 
   636     0099                     	;# 
   637     009A                     	;# 
   638     009B                     	;# 
   639     009B                     	;# 
   640     009C                     	;# 
   641     009D                     	;# 
   642     009E                     	;# 
   643     010C                     	;# 
   644     010D                     	;# 
   645     010E                     	;# 
   646     0110                     	;# 
   647     0111                     	;# 
   648     0112                     	;# 
   649     0113                     	;# 
   650     0114                     	;# 
   651     0115                     	;# 
   652     0116                     	;# 
   653     0117                     	;# 
   654     0118                     	;# 
   655     0119                     	;# 
   656     011A                     	;# 
   657     011B                     	;# 
   658     011D                     	;# 
   659     018C                     	;# 
   660     018D                     	;# 
   661     0191                     	;# 
   662     0191                     	;# 
   663     0192                     	;# 
   664     0193                     	;# 
   665     0193                     	;# 
   666     0193                     	;# 
   667     0194                     	;# 
   668     0195                     	;# 
   669     0196                     	;# 
   670     0199                     	;# 
   671     019A                     	;# 
   672     019B                     	;# 
   673     019B                     	;# 
   674     019B                     	;# 
   675     019B                     	;# 
   676     019C                     	;# 
   677     019C                     	;# 
   678     019D                     	;# 
   679     019E                     	;# 
   680     019F                     	;# 
   681     020D                     	;# 
   682     0210                     	;# 
   683     0211                     	;# 
   684     0212                     	;# 
   685     0213                     	;# 
   686     0214                     	;# 
   687     0215                     	;# 
   688     0215                     	;# 
   689     0216                     	;# 
   690     0217                     	;# 
   691     0291                     	;# 
   692     0291                     	;# 
   693     0292                     	;# 
   694     0293                     	;# 
   695     0294                     	;# 
   696     0295                     	;# 
   697     0295                     	;# 
   698     0296                     	;# 
   699     0298                     	;# 
   700     0298                     	;# 
   701     0299                     	;# 
   702     029A                     	;# 
   703     029B                     	;# 
   704     029C                     	;# 
   705     029C                     	;# 
   706     029D                     	;# 
   707     029E                     	;# 
   708     029F                     	;# 
   709     0311                     	;# 
   710     0311                     	;# 
   711     0312                     	;# 
   712     0313                     	;# 
   713     0314                     	;# 
   714     0315                     	;# 
   715     0315                     	;# 
   716     0316                     	;# 
   717     0318                     	;# 
   718     0318                     	;# 
   719     0319                     	;# 
   720     031A                     	;# 
   721     031C                     	;# 
   722     031C                     	;# 
   723     031D                     	;# 
   724     031E                     	;# 
   725     0394                     	;# 
   726     0395                     	;# 
   727     0396                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0791                     	;# 
   735     0792                     	;# 
   736     0793                     	;# 
   737     0794                     	;# 
   738     0795                     	;# 
   739     0798                     	;# 
   740     0799                     	;# 
   741     07A0                     	;# 
   742     07A1                     	;# 
   743     07A3                     	;# 
   744     07A4                     	;# 
   745     07A6                     	;# 
   746     07A7                     	;# 
   747     07A9                     	;# 
   748     07AA                     	;# 
   749     0FE4                     	;# 
   750     0FE5                     	;# 
   751     0FE6                     	;# 
   752     0FE7                     	;# 
   753     0FE8                     	;# 
   754     0FE9                     	;# 
   755     0FEA                     	;# 
   756     0FEB                     	;# 
   757     0FED                     	;# 
   758     0FEE                     	;# 
   759     0FEF                     	;# 
   760     0000                     	;# 
   761     0001                     	;# 
   762     0002                     	;# 
   763     0003                     	;# 
   764     0004                     	;# 
   765     0005                     	;# 
   766     0006                     	;# 
   767     0007                     	;# 
   768     0008                     	;# 
   769     0009                     	;# 
   770     000A                     	;# 
   771     000B                     	;# 
   772     000C                     	;# 
   773     000D                     	;# 
   774     000E                     	;# 
   775     0010                     	;# 
   776     0011                     	;# 
   777     0012                     	;# 
   778     0013                     	;# 
   779     0015                     	;# 
   780     0016                     	;# 
   781     0016                     	;# 
   782     0017                     	;# 
   783     0018                     	;# 
   784     0019                     	;# 
   785     001A                     	;# 
   786     001B                     	;# 
   787     001C                     	;# 
   788     001E                     	;# 
   789     001F                     	;# 
   790     008C                     	;# 
   791     008D                     	;# 
   792     008E                     	;# 
   793     0090                     	;# 
   794     0091                     	;# 
   795     0092                     	;# 
   796     0093                     	;# 
   797     0095                     	;# 
   798     0096                     	;# 
   799     0097                     	;# 
   800     0098                     	;# 
   801     0099                     	;# 
   802     009A                     	;# 
   803     009B                     	;# 
   804     009B                     	;# 
   805     009C                     	;# 
   806     009D                     	;# 
   807     009E                     	;# 
   808     010C                     	;# 
   809     010D                     	;# 
   810     010E                     	;# 
   811     0110                     	;# 
   812     0111                     	;# 
   813     0112                     	;# 
   814     0113                     	;# 
   815     0114                     	;# 
   816     0115                     	;# 
   817     0116                     	;# 
   818     0117                     	;# 
   819     0118                     	;# 
   820     0119                     	;# 
   821     011A                     	;# 
   822     011B                     	;# 
   823     011D                     	;# 
   824     018C                     	;# 
   825     018D                     	;# 
   826     0191                     	;# 
   827     0191                     	;# 
   828     0192                     	;# 
   829     0193                     	;# 
   830     0193                     	;# 
   831     0193                     	;# 
   832     0194                     	;# 
   833     0195                     	;# 
   834     0196                     	;# 
   835     0199                     	;# 
   836     019A                     	;# 
   837     019B                     	;# 
   838     019B                     	;# 
   839     019B                     	;# 
   840     019B                     	;# 
   841     019C                     	;# 
   842     019C                     	;# 
   843     019D                     	;# 
   844     019E                     	;# 
   845     019F                     	;# 
   846     020D                     	;# 
   847     0210                     	;# 
   848     0211                     	;# 
   849     0212                     	;# 
   850     0213                     	;# 
   851     0214                     	;# 
   852     0215                     	;# 
   853     0215                     	;# 
   854     0216                     	;# 
   855     0217                     	;# 
   856     0291                     	;# 
   857     0291                     	;# 
   858     0292                     	;# 
   859     0293                     	;# 
   860     0294                     	;# 
   861     0295                     	;# 
   862     0295                     	;# 
   863     0296                     	;# 
   864     0298                     	;# 
   865     0298                     	;# 
   866     0299                     	;# 
   867     029A                     	;# 
   868     029B                     	;# 
   869     029C                     	;# 
   870     029C                     	;# 
   871     029D                     	;# 
   872     029E                     	;# 
   873     029F                     	;# 
   874     0311                     	;# 
   875     0311                     	;# 
   876     0312                     	;# 
   877     0313                     	;# 
   878     0314                     	;# 
   879     0315                     	;# 
   880     0315                     	;# 
   881     0316                     	;# 
   882     0318                     	;# 
   883     0318                     	;# 
   884     0319                     	;# 
   885     031A                     	;# 
   886     031C                     	;# 
   887     031C                     	;# 
   888     031D                     	;# 
   889     031E                     	;# 
   890     0394                     	;# 
   891     0395                     	;# 
   892     0396                     	;# 
   893     0415                     	;# 
   894     0416                     	;# 
   895     0417                     	;# 
   896     041C                     	;# 
   897     041D                     	;# 
   898     041E                     	;# 
   899     0791                     	;# 
   900     0792                     	;# 
   901     0793                     	;# 
   902     0794                     	;# 
   903     0795                     	;# 
   904     0798                     	;# 
   905     0799                     	;# 
   906     07A0                     	;# 
   907     07A1                     	;# 
   908     07A3                     	;# 
   909     07A4                     	;# 
   910     07A6                     	;# 
   911     07A7                     	;# 
   912     07A9                     	;# 
   913     07AA                     	;# 
   914     0FE4                     	;# 
   915     0FE5                     	;# 
   916     0FE6                     	;# 
   917     0FE7                     	;# 
   918     0FE8                     	;# 
   919     0FE9                     	;# 
   920     0FEA                     	;# 
   921     0FEB                     	;# 
   922     0FED                     	;# 
   923     0FEE                     	;# 
   924     0FEF                     	;# 
   925     0000                     	;# 
   926     0001                     	;# 
   927     0002                     	;# 
   928     0003                     	;# 
   929     0004                     	;# 
   930     0005                     	;# 
   931     0006                     	;# 
   932     0007                     	;# 
   933     0008                     	;# 
   934     0009                     	;# 
   935     000A                     	;# 
   936     000B                     	;# 
   937     000C                     	;# 
   938     000D                     	;# 
   939     000E                     	;# 
   940     0010                     	;# 
   941     0011                     	;# 
   942     0012                     	;# 
   943     0013                     	;# 
   944     0015                     	;# 
   945     0016                     	;# 
   946     0016                     	;# 
   947     0017                     	;# 
   948     0018                     	;# 
   949     0019                     	;# 
   950     001A                     	;# 
   951     001B                     	;# 
   952     001C                     	;# 
   953     001E                     	;# 
   954     001F                     	;# 
   955     008C                     	;# 
   956     008D                     	;# 
   957     008E                     	;# 
   958     0090                     	;# 
   959     0091                     	;# 
   960     0092                     	;# 
   961     0093                     	;# 
   962     0095                     	;# 
   963     0096                     	;# 
   964     0097                     	;# 
   965     0098                     	;# 
   966     0099                     	;# 
   967     009A                     	;# 
   968     009B                     	;# 
   969     009B                     	;# 
   970     009C                     	;# 
   971     009D                     	;# 
   972     009E                     	;# 
   973     010C                     	;# 
   974     010D                     	;# 
   975     010E                     	;# 
   976     0110                     	;# 
   977     0111                     	;# 
   978     0112                     	;# 
   979     0113                     	;# 
   980     0114                     	;# 
   981     0115                     	;# 
   982     0116                     	;# 
   983     0117                     	;# 
   984     0118                     	;# 
   985     0119                     	;# 
   986     011A                     	;# 
   987     011B                     	;# 
   988     011D                     	;# 
   989     018C                     	;# 
   990     018D                     	;# 
   991     0191                     	;# 
   992     0191                     	;# 
   993     0192                     	;# 
   994     0193                     	;# 
   995     0193                     	;# 
   996     0193                     	;# 
   997     0194                     	;# 
   998     0195                     	;# 
   999     0196                     	;# 
  1000     0199                     	;# 
  1001     019A                     	;# 
  1002     019B                     	;# 
  1003     019B                     	;# 
  1004     019B                     	;# 
  1005     019B                     	;# 
  1006     019C                     	;# 
  1007     019C                     	;# 
  1008     019D                     	;# 
  1009     019E                     	;# 
  1010     019F                     	;# 
  1011     020D                     	;# 
  1012     0210                     	;# 
  1013     0211                     	;# 
  1014     0212                     	;# 
  1015     0213                     	;# 
  1016     0214                     	;# 
  1017     0215                     	;# 
  1018     0215                     	;# 
  1019     0216                     	;# 
  1020     0217                     	;# 
  1021     0291                     	;# 
  1022     0291                     	;# 
  1023     0292                     	;# 
  1024     0293                     	;# 
  1025     0294                     	;# 
  1026     0295                     	;# 
  1027     0295                     	;# 
  1028     0296                     	;# 
  1029     0298                     	;# 
  1030     0298                     	;# 
  1031     0299                     	;# 
  1032     029A                     	;# 
  1033     029B                     	;# 
  1034     029C                     	;# 
  1035     029C                     	;# 
  1036     029D                     	;# 
  1037     029E                     	;# 
  1038     029F                     	;# 
  1039     0311                     	;# 
  1040     0311                     	;# 
  1041     0312                     	;# 
  1042     0313                     	;# 
  1043     0314                     	;# 
  1044     0315                     	;# 
  1045     0315                     	;# 
  1046     0316                     	;# 
  1047     0318                     	;# 
  1048     0318                     	;# 
  1049     0319                     	;# 
  1050     031A                     	;# 
  1051     031C                     	;# 
  1052     031C                     	;# 
  1053     031D                     	;# 
  1054     031E                     	;# 
  1055     0394                     	;# 
  1056     0395                     	;# 
  1057     0396                     	;# 
  1058     0415                     	;# 
  1059     0416                     	;# 
  1060     0417                     	;# 
  1061     041C                     	;# 
  1062     041D                     	;# 
  1063     041E                     	;# 
  1064     0791                     	;# 
  1065     0792                     	;# 
  1066     0793                     	;# 
  1067     0794                     	;# 
  1068     0795                     	;# 
  1069     0798                     	;# 
  1070     0799                     	;# 
  1071     07A0                     	;# 
  1072     07A1                     	;# 
  1073     07A3                     	;# 
  1074     07A4                     	;# 
  1075     07A6                     	;# 
  1076     07A7                     	;# 
  1077     07A9                     	;# 
  1078     07AA                     	;# 
  1079     0FE4                     	;# 
  1080     0FE5                     	;# 
  1081     0FE6                     	;# 
  1082     0FE7                     	;# 
  1083     0FE8                     	;# 
  1084     0FE9                     	;# 
  1085     0FEA                     	;# 
  1086     0FEB                     	;# 
  1087     0FED                     	;# 
  1088     0FEE                     	;# 
  1089     0FEF                     	;# 
  1090     0000                     	;# 
  1091     0001                     	;# 
  1092     0002                     	;# 
  1093     0003                     	;# 
  1094     0004                     	;# 
  1095     0005                     	;# 
  1096     0006                     	;# 
  1097     0007                     	;# 
  1098     0008                     	;# 
  1099     0009                     	;# 
  1100     000A                     	;# 
  1101     000B                     	;# 
  1102     000C                     	;# 
  1103     000D                     	;# 
  1104     000E                     	;# 
  1105     0010                     	;# 
  1106     0011                     	;# 
  1107     0012                     	;# 
  1108     0013                     	;# 
  1109     0015                     	;# 
  1110     0016                     	;# 
  1111     0016                     	;# 
  1112     0017                     	;# 
  1113     0018                     	;# 
  1114     0019                     	;# 
  1115     001A                     	;# 
  1116     001B                     	;# 
  1117     001C                     	;# 
  1118     001E                     	;# 
  1119     001F                     	;# 
  1120     008C                     	;# 
  1121     008D                     	;# 
  1122     008E                     	;# 
  1123     0090                     	;# 
  1124     0091                     	;# 
  1125     0092                     	;# 
  1126     0093                     	;# 
  1127     0095                     	;# 
  1128     0096                     	;# 
  1129     0097                     	;# 
  1130     0098                     	;# 
  1131     0099                     	;# 
  1132     009A                     	;# 
  1133     009B                     	;# 
  1134     009B                     	;# 
  1135     009C                     	;# 
  1136     009D                     	;# 
  1137     009E                     	;# 
  1138     010C                     	;# 
  1139     010D                     	;# 
  1140     010E                     	;# 
  1141     0110                     	;# 
  1142     0111                     	;# 
  1143     0112                     	;# 
  1144     0113                     	;# 
  1145     0114                     	;# 
  1146     0115                     	;# 
  1147     0116                     	;# 
  1148     0117                     	;# 
  1149     0118                     	;# 
  1150     0119                     	;# 
  1151     011A                     	;# 
  1152     011B                     	;# 
  1153     011D                     	;# 
  1154     018C                     	;# 
  1155     018D                     	;# 
  1156     0191                     	;# 
  1157     0191                     	;# 
  1158     0192                     	;# 
  1159     0193                     	;# 
  1160     0193                     	;# 
  1161     0193                     	;# 
  1162     0194                     	;# 
  1163     0195                     	;# 
  1164     0196                     	;# 
  1165     0199                     	;# 
  1166     019A                     	;# 
  1167     019B                     	;# 
  1168     019B                     	;# 
  1169     019B                     	;# 
  1170     019B                     	;# 
  1171     019C                     	;# 
  1172     019C                     	;# 
  1173     019D                     	;# 
  1174     019E                     	;# 
  1175     019F                     	;# 
  1176     020D                     	;# 
  1177     0210                     	;# 
  1178     0211                     	;# 
  1179     0212                     	;# 
  1180     0213                     	;# 
  1181     0214                     	;# 
  1182     0215                     	;# 
  1183     0215                     	;# 
  1184     0216                     	;# 
  1185     0217                     	;# 
  1186     0291                     	;# 
  1187     0291                     	;# 
  1188     0292                     	;# 
  1189     0293                     	;# 
  1190     0294                     	;# 
  1191     0295                     	;# 
  1192     0295                     	;# 
  1193     0296                     	;# 
  1194     0298                     	;# 
  1195     0298                     	;# 
  1196     0299                     	;# 
  1197     029A                     	;# 
  1198     029B                     	;# 
  1199     029C                     	;# 
  1200     029C                     	;# 
  1201     029D                     	;# 
  1202     029E                     	;# 
  1203     029F                     	;# 
  1204     0311                     	;# 
  1205     0311                     	;# 
  1206     0312                     	;# 
  1207     0313                     	;# 
  1208     0314                     	;# 
  1209     0315                     	;# 
  1210     0315                     	;# 
  1211     0316                     	;# 
  1212     0318                     	;# 
  1213     0318                     	;# 
  1214     0319                     	;# 
  1215     031A                     	;# 
  1216     031C                     	;# 
  1217     031C                     	;# 
  1218     031D                     	;# 
  1219     031E                     	;# 
  1220     0394                     	;# 
  1221     0395                     	;# 
  1222     0396                     	;# 
  1223     0415                     	;# 
  1224     0416                     	;# 
  1225     0417                     	;# 
  1226     041C                     	;# 
  1227     041D                     	;# 
  1228     041E                     	;# 
  1229     0791                     	;# 
  1230     0792                     	;# 
  1231     0793                     	;# 
  1232     0794                     	;# 
  1233     0795                     	;# 
  1234     0798                     	;# 
  1235     0799                     	;# 
  1236     07A0                     	;# 
  1237     07A1                     	;# 
  1238     07A3                     	;# 
  1239     07A4                     	;# 
  1240     07A6                     	;# 
  1241     07A7                     	;# 
  1242     07A9                     	;# 
  1243     07AA                     	;# 
  1244     0FE4                     	;# 
  1245     0FE5                     	;# 
  1246     0FE6                     	;# 
  1247     0FE7                     	;# 
  1248     0FE8                     	;# 
  1249     0FE9                     	;# 
  1250     0FEA                     	;# 
  1251     0FEB                     	;# 
  1252     0FED                     	;# 
  1253     0FEE                     	;# 
  1254     0FEF                     	;# 
  1255     0000                     	;# 
  1256     0001                     	;# 
  1257     0002                     	;# 
  1258     0003                     	;# 
  1259     0004                     	;# 
  1260     0005                     	;# 
  1261     0006                     	;# 
  1262     0007                     	;# 
  1263     0008                     	;# 
  1264     0009                     	;# 
  1265     000A                     	;# 
  1266     000B                     	;# 
  1267     000C                     	;# 
  1268     000D                     	;# 
  1269     000E                     	;# 
  1270     0010                     	;# 
  1271     0011                     	;# 
  1272     0012                     	;# 
  1273     0013                     	;# 
  1274     0015                     	;# 
  1275     0016                     	;# 
  1276     0016                     	;# 
  1277     0017                     	;# 
  1278     0018                     	;# 
  1279     0019                     	;# 
  1280     001A                     	;# 
  1281     001B                     	;# 
  1282     001C                     	;# 
  1283     001E                     	;# 
  1284     001F                     	;# 
  1285     008C                     	;# 
  1286     008D                     	;# 
  1287     008E                     	;# 
  1288     0090                     	;# 
  1289     0091                     	;# 
  1290     0092                     	;# 
  1291     0093                     	;# 
  1292     0095                     	;# 
  1293     0096                     	;# 
  1294     0097                     	;# 
  1295     0098                     	;# 
  1296     0099                     	;# 
  1297     009A                     	;# 
  1298     009B                     	;# 
  1299     009B                     	;# 
  1300     009C                     	;# 
  1301     009D                     	;# 
  1302     009E                     	;# 
  1303     010C                     	;# 
  1304     010D                     	;# 
  1305     010E                     	;# 
  1306     0110                     	;# 
  1307     0111                     	;# 
  1308     0112                     	;# 
  1309     0113                     	;# 
  1310     0114                     	;# 
  1311     0115                     	;# 
  1312     0116                     	;# 
  1313     0117                     	;# 
  1314     0118                     	;# 
  1315     0119                     	;# 
  1316     011A                     	;# 
  1317     011B                     	;# 
  1318     011D                     	;# 
  1319     018C                     	;# 
  1320     018D                     	;# 
  1321     0191                     	;# 
  1322     0191                     	;# 
  1323     0192                     	;# 
  1324     0193                     	;# 
  1325     0193                     	;# 
  1326     0193                     	;# 
  1327     0194                     	;# 
  1328     0195                     	;# 
  1329     0196                     	;# 
  1330     0199                     	;# 
  1331     019A                     	;# 
  1332     019B                     	;# 
  1333     019B                     	;# 
  1334     019B                     	;# 
  1335     019B                     	;# 
  1336     019C                     	;# 
  1337     019C                     	;# 
  1338     019D                     	;# 
  1339     019E                     	;# 
  1340     019F                     	;# 
  1341     020D                     	;# 
  1342     0210                     	;# 
  1343     0211                     	;# 
  1344     0212                     	;# 
  1345     0213                     	;# 
  1346     0214                     	;# 
  1347     0215                     	;# 
  1348     0215                     	;# 
  1349     0216                     	;# 
  1350     0217                     	;# 
  1351     0291                     	;# 
  1352     0291                     	;# 
  1353     0292                     	;# 
  1354     0293                     	;# 
  1355     0294                     	;# 
  1356     0295                     	;# 
  1357     0295                     	;# 
  1358     0296                     	;# 
  1359     0298                     	;# 
  1360     0298                     	;# 
  1361     0299                     	;# 
  1362     029A                     	;# 
  1363     029B                     	;# 
  1364     029C                     	;# 
  1365     029C                     	;# 
  1366     029D                     	;# 
  1367     029E                     	;# 
  1368     029F                     	;# 
  1369     0311                     	;# 
  1370     0311                     	;# 
  1371     0312                     	;# 
  1372     0313                     	;# 
  1373     0314                     	;# 
  1374     0315                     	;# 
  1375     0315                     	;# 
  1376     0316                     	;# 
  1377     0318                     	;# 
  1378     0318                     	;# 
  1379     0319                     	;# 
  1380     031A                     	;# 
  1381     031C                     	;# 
  1382     031C                     	;# 
  1383     031D                     	;# 
  1384     031E                     	;# 
  1385     0394                     	;# 
  1386     0395                     	;# 
  1387     0396                     	;# 
  1388     0415                     	;# 
  1389     0416                     	;# 
  1390     0417                     	;# 
  1391     041C                     	;# 
  1392     041D                     	;# 
  1393     041E                     	;# 
  1394     0791                     	;# 
  1395     0792                     	;# 
  1396     0793                     	;# 
  1397     0794                     	;# 
  1398     0795                     	;# 
  1399     0798                     	;# 
  1400     0799                     	;# 
  1401     07A0                     	;# 
  1402     07A1                     	;# 
  1403     07A3                     	;# 
  1404     07A4                     	;# 
  1405     07A6                     	;# 
  1406     07A7                     	;# 
  1407     07A9                     	;# 
  1408     07AA                     	;# 
  1409     0FE4                     	;# 
  1410     0FE5                     	;# 
  1411     0FE6                     	;# 
  1412     0FE7                     	;# 
  1413     0FE8                     	;# 
  1414     0FE9                     	;# 
  1415     0FEA                     	;# 
  1416     0FEB                     	;# 
  1417     0FED                     	;# 
  1418     0FEE                     	;# 
  1419     0FEF                     	;# 
  1420                           
  1421                           	psect	stringtext1
  1422     01FA                     __pstringtext1:
  1423     01FA                     _i2c_fsmStateTable:
  1424     01FA  34FD               	retlw	low _I2C_DO_IDLE
  1425     01FB  3402               	retlw	high _I2C_DO_IDLE
  1426     01FC  3486               	retlw	low _I2C_DO_SEND_ADR_READ
  1427     01FD  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  1428     01FE  348F               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1429     01FF  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1430     0200  345C               	retlw	low _I2C_DO_TX
  1431     0201  3400               	retlw	high _I2C_DO_TX
  1432     0202  34B4               	retlw	low _I2C_DO_RX
  1433     0203  3400               	retlw	high _I2C_DO_RX
  1434     0204  349E               	retlw	low _I2C_DO_RCEN
  1435     0205  3402               	retlw	high _I2C_DO_RCEN
  1436     0206  3479               	retlw	low _I2C_DO_TX_EMPTY
  1437     0207  3401               	retlw	high _I2C_DO_TX_EMPTY
  1438     0208  34F8               	retlw	low _I2C_DO_SEND_RESTART_READ
  1439     0209  3402               	retlw	high _I2C_DO_SEND_RESTART_READ
  1440     020A  34F3               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1441     020B  3402               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1442     020C  34EE               	retlw	low _I2C_DO_SEND_RESTART
  1443     020D  3402               	retlw	high _I2C_DO_SEND_RESTART
  1444     020E  34E9               	retlw	low _I2C_DO_SEND_STOP
  1445     020F  3402               	retlw	high _I2C_DO_SEND_STOP
  1446     0210  34E4               	retlw	low _I2C_DO_RX_ACK
  1447     0211  3402               	retlw	high _I2C_DO_RX_ACK
  1448     0212  34DF               	retlw	low _I2C_DO_RX_NACK_STOP
  1449     0213  3402               	retlw	high _I2C_DO_RX_NACK_STOP
  1450     0214  34DA               	retlw	low _I2C_DO_RX_NACK_RESTART
  1451     0215  3402               	retlw	high _I2C_DO_RX_NACK_RESTART
  1452     0216  34D5               	retlw	low _I2C_DO_RESET
  1453     0217  3402               	retlw	high _I2C_DO_RESET
  1454     0218  34A8               	retlw	low _I2C_DO_ADDRESS_NACK
  1455     0219  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1456     021A                     __end_of_i2c_fsmStateTable:
  1457                           
  1458                           	psect	nvBANK0
  1459     0062                     __pnvBANK0:
  1460     0062                     _EUSART_ErrorHandler:
  1461     0062                     	ds	2
  1462     0064                     _EUSART_OverrunErrorHandler:
  1463     0064                     	ds	2
  1464     0066                     _EUSART_FramingErrorHandler:
  1465     0066                     	ds	2
  1466     0068                     _EUSART_RxDefaultInterruptHandler:
  1467     0068                     	ds	2
  1468     006A                     _EUSART_TxDefaultInterruptHandler:
  1469     006A                     	ds	2
  1470     000B                     _INTCONbits	set	11
  1471     0011                     _PIR1bits	set	17
  1472     0012                     _PIR2bits	set	18
  1473     0092                     _PIE2bits	set	146
  1474     0091                     _PIE1bits	set	145
  1475     0097                     _WDTCON	set	151
  1476     0098                     _OSCTUNE	set	152
  1477     0099                     _OSCCON	set	153
  1478     0095                     _OPTION_REGbits	set	149
  1479     008E                     _TRISC	set	142
  1480     008D                     _TRISB	set	141
  1481     008C                     _TRISA	set	140
  1482     0090                     _TRISE	set	144
  1483     0116                     _BORCON	set	278
  1484     011D                     _APFCON	set	285
  1485     010E                     _LATC	set	270
  1486     010D                     _LATB	set	269
  1487     010C                     _LATA	set	268
  1488     0110                     _LATE	set	272
  1489     0199                     _RCREG	set	409
  1490     019D                     _RCSTAbits	set	413
  1491     019A                     _TXREG	set	410
  1492     019E                     _TXSTAbits	set	414
  1493     019C                     _SPBRGH	set	412
  1494     019B                     _SPBRGL	set	411
  1495     019E                     _TXSTA	set	414
  1496     019D                     _RCSTA	set	413
  1497     019F                     _BAUDCON	set	415
  1498     018C                     _ANSELA	set	396
  1499     018D                     _ANSELB	set	397
  1500     0214                     _SSPSTATbits	set	532
  1501     0216                     _SSPCON2bits	set	534
  1502     0211                     _SSPBUF	set	529
  1503     0215                     _SSPCON1bits	set	533
  1504     0212                     _SSPADD	set	530
  1505     0216                     _SSPCON2	set	534
  1506     0215                     _SSPCON1	set	533
  1507     0214                     _SSPSTAT	set	532
  1508     020D                     _WPUB	set	525
  1509     0210                     _WPUE	set	528
  1510                           
  1511                           	psect	cinit
  1512     0049                     start_initialization:	
  1513                           ; #config settings
  1514                           
  1515     0049                     __initialization:
  1516                           
  1517                           ; Clear objects allocated to COMMON
  1518     0049  01F0               	clrf	__pbssCOMMON& (0+127)
  1519     004A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1520     004B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1521     004C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1522     004D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1523     004E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1524     004F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1525                           
  1526                           ; Clear objects allocated to BANK0
  1527     0050  3020               	movlw	low __pbssBANK0
  1528     0051  0084               	movwf	4
  1529     0052  3000               	movlw	high __pbssBANK0
  1530     0053  0085               	movwf	5
  1531     0054  3042               	movlw	66
  1532     0055  3182  22A5  3180   	fcall	clear_ram0
  1533     0058                     end_of_initialization:	
  1534                           ;End of C runtime variable initialization code
  1535                           
  1536     0058                     __end_of__initialization:
  1537     0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1538     0059  0020               	movlb	0
  1539     005A  3182  2AAB         	ljmp	_main	;jump to C main() function
  1540                           
  1541                           	psect	bssCOMMON
  1542     0070                     __pbssCOMMON:
  1543     0070                     _eusartRxLastError:
  1544     0070                     	ds	1
  1545     0071                     _eusartRxCount:
  1546     0071                     	ds	1
  1547     0072                     _eusartRxTail:
  1548     0072                     	ds	1
  1549     0073                     _eusartRxHead:
  1550     0073                     	ds	1
  1551     0074                     _eusartTxBufferRemaining:
  1552     0074                     	ds	1
  1553     0075                     _eusartTxTail:
  1554     0075                     	ds	1
  1555     0076                     _eusartTxHead:
  1556     0076                     	ds	1
  1557                           
  1558                           	psect	bssBANK0
  1559     0020                     __pbssBANK0:
  1560     0020                     _I2C_Status:
  1561     0020                     	ds	36
  1562     0044                     _eusartRxStatusBuffer:
  1563     0044                     	ds	8
  1564     004C                     _eusartRxBuffer:
  1565     004C                     	ds	8
  1566     0054                     _eusartTxBuffer:
  1567     0054                     	ds	8
  1568     005C                     _Humidity:
  1569     005C                     	ds	2
  1570     005E                     _Temperature:
  1571     005E                     	ds	2
  1572     0060                     _MSSP_InterruptHandler:
  1573     0060                     	ds	2
  1574                           
  1575                           	psect	clrtext
  1576     02A5                     clear_ram0:	
  1577                           ;	Called with FSR0 containing the base address, and
  1578                           ;	WREG with the size to clear
  1579                           
  1580     02A5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1581     02A6                     clrloop0:
  1582     02A6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1583     02A7  3101               	addfsr 0,1
  1584     02A8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1585     02A9  2AA6               	goto	clrloop0	;have we reached the end yet?
  1586     02AA  3400               	retlw	0	;all done for this memory range, return
  1587                           
  1588                           	psect	cstackCOMMON
  1589     0077                     __pcstackCOMMON:
  1590     0077                     ?_I2C_Initialize:
  1591     0077                     ?_OSCILLATOR_Initialize:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0077                     ?_WDT_Initialize:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0077                     ?_EUSART_Initialize:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0077                     ?_I2C_DO_IDLE:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0077                     ??_I2C_DO_IDLE:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0077                     ?_I2C_DO_SEND_ADR_READ:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0077                     ??_I2C_DO_SEND_ADR_READ:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0077                     ?_I2C_DO_SEND_ADR_WRITE:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0077                     ?_I2C_DO_TX:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0077                     ?_I2C_DO_RX:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0077                     ??_I2C_DO_RX:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0077                     ?_I2C_DO_RCEN:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0077                     ??_I2C_DO_RCEN:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0077                     ?_I2C_DO_TX_EMPTY:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0077                     ??_I2C_DO_TX_EMPTY:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0077                     ?_I2C_DO_SEND_RESTART_READ:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0077                     ??_I2C_DO_SEND_RESTART_READ:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0077                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0077                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0077                     ?_I2C_DO_SEND_RESTART:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0077                     ??_I2C_DO_SEND_RESTART:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0077                     ?_I2C_DO_SEND_STOP:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0077                     ??_I2C_DO_SEND_STOP:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0077                     ?_I2C_DO_RX_ACK:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0077                     ??_I2C_DO_RX_ACK:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0077                     ?_I2C_DO_RX_NACK_STOP:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0077                     ??_I2C_DO_RX_NACK_STOP:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0077                     ?_I2C_DO_RX_NACK_RESTART:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0077                     ??_I2C_DO_RX_NACK_RESTART:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0077                     ?_I2C_DO_RESET:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0077                     ??_I2C_DO_RESET:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0077                     ?_I2C_DO_ADDRESS_NACK:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0077                     ??_I2C_DO_ADDRESS_NACK:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0077                     ?_I2C_CallbackReturnStop:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0077                     ?_I2C_CallbackReturnReset:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0077                     ?_I2C_MasterIsr:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0077                     ?_I2C_MasterClearIrq:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0077                     ??_I2C_MasterClearIrq:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0077                     ?_I2C_MasterFsm:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0077                     ?_I2C_MasterIsNack:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0077                     ??_I2C_MasterIsNack:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0077                     ?_I2C_MasterSendTxData:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0077                     ??_I2C_MasterSendTxData:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0077                     ?_I2C_MasterGetRxData:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0077                     ??_I2C_MasterGetRxData:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0077                     ?_I2C_MasterSendAck:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0077                     ??_I2C_MasterSendAck:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0077                     ?_I2C_MasterStartRx:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0077                     ??_I2C_MasterStartRx:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0077                     ?_I2C_MasterSetIrq:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0077                     ??_I2C_MasterSetIrq:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0077                     ?_I2C_MasterEnableRestart:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747     0077                     ??_I2C_MasterEnableRestart:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750     0077                     ?_I2C_MasterStop:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753     0077                     ??_I2C_MasterStop:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756     0077                     ?_I2C_MasterSendNack:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759     0077                     ??_I2C_MasterSendNack:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762     0077                     ?_EUSART_Receive_ISR:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765     0077                     ?_EUSART_Transmit_ISR:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768     0077                     ??_EUSART_Transmit_ISR:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771     0077                     ?_EUSART_DefaultFramingErrorHandler:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774     0077                     ??_EUSART_DefaultFramingErrorHandler:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777     0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780     0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783     0077                     ?_EUSART_DefaultErrorHandler:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786     0077                     ?_EUSART_RxDataHandler:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789     0077                     ??_EUSART_RxDataHandler:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792     0077                     ?_PIN_MANAGER_Initialize:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795     0077                     ?_SYSTEM_Initialize:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798     0077                     ?_INTERRUPT_InterruptManager:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801     0077                     ?_main:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804     0077                     I2C_MasterSendTxData@data:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807     0077                     I2C_CallbackReturnStop@funPtr:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810     0077                     I2C_CallbackReturnReset@funPtr:	
  1811                           ; 2 bytes @ 0x0
  1812                           
  1813                           
  1814                           ; 2 bytes @ 0x0
  1815     0077                     	ds	1
  1816     0078                     ??_I2C_DO_SEND_ADR_WRITE:
  1817     0078                     ??_I2C_DO_TX:	
  1818                           ; 1 bytes @ 0x1
  1819                           
  1820     0078                     ??_EUSART_Receive_ISR:	
  1821                           ; 1 bytes @ 0x1
  1822                           
  1823     0078                     ??_EUSART_DefaultErrorHandler:	
  1824                           ; 1 bytes @ 0x1
  1825                           
  1826                           
  1827                           ; 1 bytes @ 0x1
  1828     0078                     	ds	1
  1829     0079                     ??_I2C_CallbackReturnStop:
  1830     0079                     ??_I2C_CallbackReturnReset:	
  1831                           ; 1 bytes @ 0x2
  1832                           
  1833                           
  1834                           ; 1 bytes @ 0x2
  1835     0079                     	ds	1
  1836     007A                     ??_I2C_MasterFsm:
  1837                           
  1838                           ; 1 bytes @ 0x3
  1839     007A                     	ds	2
  1840     007C                     ??_I2C_MasterIsr:
  1841     007C                     ??_INTERRUPT_InterruptManager:	
  1842                           ; 1 bytes @ 0x5
  1843                           
  1844                           
  1845                           	psect	cstackBANK0
  1846     006C                     __pcstackBANK0:	
  1847                           ; 1 bytes @ 0x5
  1848                           
  1849     006C                     ??_I2C_Initialize:
  1850     006C                     ??_OSCILLATOR_Initialize:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     006C                     ??_WDT_Initialize:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     006C                     ?_EUSART_SetRxInterruptHandler:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     006C                     ?_EUSART_SetTxInterruptHandler:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     006C                     ?_EUSART_SetFramingErrorHandler:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     006C                     ?_EUSART_SetOverrunErrorHandler:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     006C                     ?_EUSART_SetErrorHandler:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     006C                     ??_PIN_MANAGER_Initialize:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     006C                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     006C                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1878                           ; 2 bytes @ 0x0
  1879                           
  1880     006C                     EUSART_SetErrorHandler@interruptHandler:	
  1881                           ; 2 bytes @ 0x0
  1882                           
  1883     006C                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1884                           ; 2 bytes @ 0x0
  1885                           
  1886     006C                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1887                           ; 2 bytes @ 0x0
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x0
  1891     006C                     	ds	2
  1892     006E                     ??_EUSART_Initialize:
  1893     006E                     ??_EUSART_SetRxInterruptHandler:	
  1894                           ; 1 bytes @ 0x2
  1895                           
  1896     006E                     ??_EUSART_SetTxInterruptHandler:	
  1897                           ; 1 bytes @ 0x2
  1898                           
  1899     006E                     ??_EUSART_SetFramingErrorHandler:	
  1900                           ; 1 bytes @ 0x2
  1901                           
  1902     006E                     ??_EUSART_SetOverrunErrorHandler:	
  1903                           ; 1 bytes @ 0x2
  1904                           
  1905     006E                     ??_EUSART_SetErrorHandler:	
  1906                           ; 1 bytes @ 0x2
  1907                           
  1908     006E                     ??_SYSTEM_Initialize:	
  1909                           ; 1 bytes @ 0x2
  1910                           
  1911     006E                     ??_main:	
  1912                           ; 1 bytes @ 0x2
  1913                           
  1914                           
  1915                           	psect	maintext
  1916     02AB                     __pmaintext:	
  1917                           ; 1 bytes @ 0x2
  1918 ;;
  1919 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1920 ;;
  1921 ;; *************** function _main *****************
  1922 ;; Defined at:
  1923 ;;		line 49 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : B1F/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1937 ;;      Params:         0       0       0       0       0       0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels required when called: 9
  1943 ;; This function calls:
  1944 ;;		_SYSTEM_Initialize
  1945 ;; This function is called by:
  1946 ;;		Startup code after reset
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     02AB                     _main:	
  1951                           ;psect for function _main
  1952                           
  1953     02AB                     l2673:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1956                           
  1957                           
  1958                           ;main.c: 52:     SYSTEM_Initialize();
  1959     02AB  3182  226D  3182   	fcall	_SYSTEM_Initialize
  1960     02AE                     l586:	
  1961                           ;main.c: 69:     while (1)
  1962                           
  1963     02AE                     l587:	
  1964                           ;main.c: 70:     {;main.c: 72:     }
  1965                           
  1966     02AE  2AAE               	goto	l586
  1967     02AF  3180  2847         	ljmp	start
  1968     02B1                     __end_of_main:
  1969                           
  1970                           	psect	text1
  1971     026D                     __ptext1:	
  1972 ;; *************** function _SYSTEM_Initialize *****************
  1973 ;; Defined at:
  1974 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1988 ;;      Params:         0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; Hardware stack levels required when called: 8
  1995 ;; This function calls:
  1996 ;;		_EUSART_Initialize
  1997 ;;		_I2C_Initialize
  1998 ;;		_OSCILLATOR_Initialize
  1999 ;;		_PIN_MANAGER_Initialize
  2000 ;;		_WDT_Initialize
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     026D                     _SYSTEM_Initialize:	
  2007                           ;psect for function _SYSTEM_Initialize
  2008                           
  2009     026D                     l2671:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2012                           
  2013                           
  2014                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2015     026D  3182  227D  3182   	fcall	_I2C_Initialize
  2016                           
  2017                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2018     0270  3182  223A  3182   	fcall	_PIN_MANAGER_Initialize
  2019                           
  2020                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2021     0273  3182  2297  3182   	fcall	_OSCILLATOR_Initialize
  2022                           
  2023                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2024     0276  3183  2307  3182   	fcall	_WDT_Initialize
  2025                           
  2026                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2027     0279  3180  20FF  3182   	fcall	_EUSART_Initialize
  2028     027C                     l57:
  2029     027C  0008               	return
  2030     027D                     __end_of_SYSTEM_Initialize:
  2031                           
  2032                           	psect	text2
  2033     0307                     __ptext2:	
  2034 ;; *************** function _WDT_Initialize *****************
  2035 ;; Defined at:
  2036 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2050 ;;      Params:         0       0       0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 6
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_SYSTEM_Initialize
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064     0307                     _WDT_Initialize:	
  2065                           ;psect for function _WDT_Initialize
  2066                           
  2067     0307                     l2637:	
  2068                           ;incstack = 0
  2069                           ; Regs used in _WDT_Initialize: [wreg]
  2070                           
  2071                           
  2072                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  2073     0307  3016               	movlw	22
  2074     0308  0021               	movlb	1	; select bank1
  2075     0309  0097               	movwf	23	;volatile
  2076     030A                     l63:
  2077     030A  0008               	return
  2078     030B                     __end_of_WDT_Initialize:
  2079                           
  2080                           	psect	text3
  2081     023A                     __ptext3:	
  2082 ;; *************** function _PIN_MANAGER_Initialize *****************
  2083 ;; Defined at:
  2084 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2098 ;;      Params:         0       0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used: 1
  2104 ;; Hardware stack levels required when called: 6
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_SYSTEM_Initialize
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     023A                     _PIN_MANAGER_Initialize:	
  2113                           ;psect for function _PIN_MANAGER_Initialize
  2114                           
  2115     023A                     l2599:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2118                           
  2119                           
  2120                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2121     023A  0022               	movlb	2	; select bank2
  2122     023B  0190               	clrf	16	;volatile
  2123                           
  2124                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2125     023C  018C               	clrf	12	;volatile
  2126                           
  2127                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2128     023D  018D               	clrf	13	;volatile
  2129     023E                     l2601:
  2130                           
  2131                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  2132     023E  3040               	movlw	64
  2133     023F  008E               	movwf	14	;volatile
  2134     0240                     l2603:
  2135                           
  2136                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2137     0240  3008               	movlw	8
  2138     0241  0021               	movlb	1	; select bank1
  2139     0242  0090               	movwf	16	;volatile
  2140     0243                     l2605:
  2141                           
  2142                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2143     0243  30FF               	movlw	255
  2144     0244  008C               	movwf	12	;volatile
  2145     0245                     l2607:
  2146                           
  2147                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  2148     0245  30FF               	movlw	255
  2149     0246  008D               	movwf	13	;volatile
  2150     0247                     l2609:
  2151                           
  2152                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  2153     0247  309C               	movlw	156
  2154     0248  008E               	movwf	14	;volatile
  2155     0249                     l2611:
  2156                           
  2157                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  2158     0249  303F               	movlw	63
  2159     024A  0023               	movlb	3	; select bank3
  2160     024B  008D               	movwf	13	;volatile
  2161     024C                     l2613:
  2162                           
  2163                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  2164     024C  3030               	movlw	48
  2165     024D  008C               	movwf	12	;volatile
  2166     024E                     l2615:
  2167                           
  2168                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2169     024E  0024               	movlb	4	; select bank4
  2170     024F  0190               	clrf	16	;volatile
  2171     0250                     l2617:
  2172                           
  2173                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2174     0250  018D               	clrf	13	;volatile
  2175     0251                     l2619:
  2176                           
  2177                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2178     0251  0021               	movlb	1	; select bank1
  2179     0252  1795               	bsf	21,7	;volatile
  2180     0253                     l2621:
  2181                           
  2182                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2183     0253  0022               	movlb	2	; select bank2
  2184     0254  019D               	clrf	29	;volatile
  2185     0255                     l31:
  2186     0255  0008               	return
  2187     0256                     __end_of_PIN_MANAGER_Initialize:
  2188                           
  2189                           	psect	text4
  2190     0297                     __ptext4:	
  2191 ;; *************** function _OSCILLATOR_Initialize *****************
  2192 ;; Defined at:
  2193 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2207 ;;      Params:         0       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 6
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_SYSTEM_Initialize
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     0297                     _OSCILLATOR_Initialize:	
  2222                           ;psect for function _OSCILLATOR_Initialize
  2223                           
  2224     0297                     l2631:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2227                           
  2228                           
  2229                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  2230     0297  3070               	movlw	112
  2231     0298  0021               	movlb	1	; select bank1
  2232     0299  0099               	movwf	25	;volatile
  2233     029A                     l2633:
  2234                           
  2235                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2236     029A  0198               	clrf	24	;volatile
  2237     029B                     l2635:
  2238                           
  2239                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2240     029B  0022               	movlb	2	; select bank2
  2241     029C  0196               	clrf	22	;volatile
  2242     029D                     l60:
  2243     029D  0008               	return
  2244     029E                     __end_of_OSCILLATOR_Initialize:
  2245                           
  2246                           	psect	text5
  2247     027D                     __ptext5:	
  2248 ;; *************** function _I2C_Initialize *****************
  2249 ;; Defined at:
  2250 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, status,2
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2264 ;;      Params:         0       0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 6
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_SYSTEM_Initialize
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278     027D                     _I2C_Initialize:	
  2279                           ;psect for function _I2C_Initialize
  2280                           
  2281     027D                     l2623:	
  2282                           ;incstack = 0
  2283                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2284                           
  2285                           
  2286                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2287     027D  0024               	movlb	4	; select bank4
  2288     027E  0194               	clrf	20	;volatile
  2289     027F                     l2625:
  2290                           
  2291                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2292     027F  3008               	movlw	8
  2293     0280  0095               	movwf	21	;volatile
  2294     0281                     l2627:
  2295                           
  2296                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2297     0281  0196               	clrf	22	;volatile
  2298                           
  2299                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2300     0282  3013               	movlw	19
  2301     0283  0092               	movwf	18	;volatile
  2302     0284                     l2629:
  2303                           
  2304                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2305     0284  1295               	bcf	21,5	;volatile
  2306     0285                     l172:
  2307     0285  0008               	return
  2308     0286                     __end_of_I2C_Initialize:
  2309                           
  2310                           	psect	text6
  2311     00FF                     __ptext6:	
  2312 ;; *************** function _EUSART_Initialize *****************
  2313 ;; Defined at:
  2314 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2328 ;;      Params:         0       0       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 7
  2335 ;; This function calls:
  2336 ;;		_EUSART_SetErrorHandler
  2337 ;;		_EUSART_SetFramingErrorHandler
  2338 ;;		_EUSART_SetOverrunErrorHandler
  2339 ;;		_EUSART_SetRxInterruptHandler
  2340 ;;		_EUSART_SetTxInterruptHandler
  2341 ;; This function is called by:
  2342 ;;		_SYSTEM_Initialize
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346     00FF                     _EUSART_Initialize:	
  2347                           ;psect for function _EUSART_Initialize
  2348                           
  2349     00FF                     l2639:	
  2350                           ;incstack = 0
  2351                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2352                           
  2353                           
  2354                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2355     00FF  0021               	movlb	1	; select bank1
  2356     0100  1291               	bcf	17,5	;volatile
  2357     0101                     l2641:
  2358                           
  2359                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2360     0101  3040               	movlw	low _EUSART_Receive_ISR
  2361     0102  0020               	movlb	0	; select bank0
  2362     0103  00EC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  2363     0104  3001               	movlw	high _EUSART_Receive_ISR
  2364     0105  00ED               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  2365     0106  3182  22B7  3180   	fcall	_EUSART_SetRxInterruptHandler
  2366     0109                     l2643:
  2367                           
  2368                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2369     0109  0021               	movlb	1	; select bank1
  2370     010A  1211               	bcf	17,4	;volatile
  2371                           
  2372                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2373     010B  301A               	movlw	low _EUSART_Transmit_ISR
  2374     010C  0020               	movlb	0	; select bank0
  2375     010D  00EC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  2376     010E  3002               	movlw	high _EUSART_Transmit_ISR
  2377     010F  00ED               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  2378     0110  3182  22B1  3180   	fcall	_EUSART_SetTxInterruptHandler
  2379     0113                     l2645:
  2380                           
  2381                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  2382     0113  3008               	movlw	8
  2383     0114  0023               	movlb	3	; select bank3
  2384     0115  009F               	movwf	31	;volatile
  2385     0116                     l2647:
  2386                           
  2387                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2388     0116  3090               	movlw	144
  2389     0117  009D               	movwf	29	;volatile
  2390     0118                     l2649:
  2391                           
  2392                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2393     0118  3024               	movlw	36
  2394     0119  009E               	movwf	30	;volatile
  2395     011A                     l2651:
  2396                           
  2397                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  2398     011A  30CF               	movlw	207
  2399     011B  009B               	movwf	27	;volatile
  2400     011C                     l2653:
  2401                           
  2402                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  2403     011C  019C               	clrf	28	;volatile
  2404     011D                     l2655:
  2405                           
  2406                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2407     011D  3035               	movlw	low _EUSART_DefaultFramingErrorHandler
  2408     011E  0020               	movlb	0	; select bank0
  2409     011F  00EC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2410     0120  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  2411     0121  00ED               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2412     0122  3182  22C3  3180   	fcall	_EUSART_SetFramingErrorHandler
  2413     0125                     l2657:
  2414                           
  2415                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2416     0125  3017               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2417     0126  0020               	movlb	0	; select bank0
  2418     0127  00EC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2419     0128  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2420     0129  00ED               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2421     012A  3182  22BD  3180   	fcall	_EUSART_SetOverrunErrorHandler
  2422     012D                     l2659:
  2423                           
  2424                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2425     012D  301B               	movlw	low _EUSART_DefaultErrorHandler
  2426     012E  0020               	movlb	0	; select bank0
  2427     012F  00EC               	movwf	EUSART_SetErrorHandler@interruptHandler
  2428     0130  3003               	movlw	high _EUSART_DefaultErrorHandler
  2429     0131  00ED               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2430     0132  3182  22C9  3180   	fcall	_EUSART_SetErrorHandler
  2431                           
  2432                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2433     0135  01F0               	clrf	_eusartRxLastError	;volatile
  2434                           
  2435                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2436     0136  01F6               	clrf	_eusartTxHead	;volatile
  2437                           
  2438                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2439     0137  01F5               	clrf	_eusartTxTail	;volatile
  2440     0138                     l2661:
  2441                           
  2442                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2443     0138  3008               	movlw	8
  2444     0139  00F4               	movwf	_eusartTxBufferRemaining	;volatile
  2445     013A                     l2663:
  2446                           
  2447                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2448     013A  01F3               	clrf	_eusartRxHead	;volatile
  2449     013B                     l2665:
  2450                           
  2451                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2452     013B  01F2               	clrf	_eusartRxTail	;volatile
  2453     013C                     l2667:
  2454                           
  2455                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2456     013C  01F1               	clrf	_eusartRxCount	;volatile
  2457     013D                     l2669:
  2458                           
  2459                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  2460     013D  0021               	movlb	1	; select bank1
  2461     013E  1691               	bsf	17,5	;volatile
  2462     013F                     l508:
  2463     013F  0008               	return
  2464     0140                     __end_of_EUSART_Initialize:
  2465                           
  2466                           	psect	text7
  2467     02B1                     __ptext7:	
  2468 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2469 ;; Defined at:
  2470 ;;		line 276 in file "mcc_generated_files/eusart.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2473 ;;		 -> EUSART_Transmit_ISR(1), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2485 ;;      Params:         0       2       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0
  2488 ;;      Totals:         0       2       0       0       0       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 6
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_EUSART_Initialize
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499     02B1                     _EUSART_SetTxInterruptHandler:	
  2500                           ;psect for function _EUSART_SetTxInterruptHandler
  2501                           
  2502     02B1                     l2591:	
  2503                           ;incstack = 0
  2504                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2505                           
  2506                           
  2507                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2508     02B1  0020               	movlb	0	; select bank0
  2509     02B2  086D               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  2510     02B3  00EB               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2511     02B4  086C               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  2512     02B5  00EA               	movwf	_EUSART_TxDefaultInterruptHandler
  2513     02B6                     l574:
  2514     02B6  0008               	return
  2515     02B7                     __end_of_EUSART_SetTxInterruptHandler:
  2516                           
  2517                           	psect	text8
  2518     02B7                     __ptext8:	
  2519 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2520 ;; Defined at:
  2521 ;;		line 280 in file "mcc_generated_files/eusart.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2524 ;;		 -> EUSART_Receive_ISR(1), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2536 ;;      Params:         0       2       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0
  2539 ;;      Totals:         0       2       0       0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 6
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_EUSART_Initialize
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550     02B7                     _EUSART_SetRxInterruptHandler:	
  2551                           ;psect for function _EUSART_SetRxInterruptHandler
  2552                           
  2553     02B7                     l2589:	
  2554                           ;incstack = 0
  2555                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2556                           
  2557                           
  2558                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2559     02B7  0020               	movlb	0	; select bank0
  2560     02B8  086D               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  2561     02B9  00E9               	movwf	_EUSART_RxDefaultInterruptHandler+1
  2562     02BA  086C               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  2563     02BB  00E8               	movwf	_EUSART_RxDefaultInterruptHandler
  2564     02BC                     l577:
  2565     02BC  0008               	return
  2566     02BD                     __end_of_EUSART_SetRxInterruptHandler:
  2567                           
  2568                           	psect	text9
  2569     02BD                     __ptext9:	
  2570 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2571 ;; Defined at:
  2572 ;;		line 268 in file "mcc_generated_files/eusart.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2575 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2587 ;;      Params:         0       2       0       0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0
  2590 ;;      Totals:         0       2       0       0       0       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 6
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_EUSART_Initialize
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601     02BD                     _EUSART_SetOverrunErrorHandler:	
  2602                           ;psect for function _EUSART_SetOverrunErrorHandler
  2603                           
  2604     02BD                     l2595:	
  2605                           ;incstack = 0
  2606                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2607                           
  2608                           
  2609                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  2610     02BD  0020               	movlb	0	; select bank0
  2611     02BE  086D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2612     02BF  00E5               	movwf	_EUSART_OverrunErrorHandler+1
  2613     02C0  086C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2614     02C1  00E4               	movwf	_EUSART_OverrunErrorHandler
  2615     02C2                     l568:
  2616     02C2  0008               	return
  2617     02C3                     __end_of_EUSART_SetOverrunErrorHandler:
  2618                           
  2619                           	psect	text10
  2620     02C3                     __ptext10:	
  2621 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2622 ;; Defined at:
  2623 ;;		line 264 in file "mcc_generated_files/eusart.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2626 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2638 ;;      Params:         0       2       0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0
  2641 ;;      Totals:         0       2       0       0       0       0       0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 6
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_EUSART_Initialize
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     02C3                     _EUSART_SetFramingErrorHandler:	
  2653                           ;psect for function _EUSART_SetFramingErrorHandler
  2654                           
  2655     02C3                     l2593:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2658                           
  2659                           
  2660                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  2661     02C3  0020               	movlb	0	; select bank0
  2662     02C4  086D               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2663     02C5  00E7               	movwf	_EUSART_FramingErrorHandler+1
  2664     02C6  086C               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2665     02C7  00E6               	movwf	_EUSART_FramingErrorHandler
  2666     02C8                     l565:
  2667     02C8  0008               	return
  2668     02C9                     __end_of_EUSART_SetFramingErrorHandler:
  2669                           
  2670                           	psect	text11
  2671     02C9                     __ptext11:	
  2672 ;; *************** function _EUSART_SetErrorHandler *****************
  2673 ;; Defined at:
  2674 ;;		line 272 in file "mcc_generated_files/eusart.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  2677 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2689 ;;      Params:         0       2       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0
  2692 ;;      Totals:         0       2       0       0       0       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 6
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_EUSART_Initialize
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703     02C9                     _EUSART_SetErrorHandler:	
  2704                           ;psect for function _EUSART_SetErrorHandler
  2705                           
  2706     02C9                     l2597:	
  2707                           ;incstack = 0
  2708                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2709                           
  2710                           
  2711                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  2712     02C9  0020               	movlb	0	; select bank0
  2713     02CA  086D               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2714     02CB  00E3               	movwf	_EUSART_ErrorHandler+1
  2715     02CC  086C               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2716     02CD  00E2               	movwf	_EUSART_ErrorHandler
  2717     02CE                     l571:
  2718     02CE  0008               	return
  2719     02CF                     __end_of_EUSART_SetErrorHandler:
  2720                           
  2721                           	psect	intentry
  2722     0004                     __pintentry:	
  2723 ;; *************** function _INTERRUPT_InterruptManager *****************
  2724 ;; Defined at:
  2725 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2739 ;;      Params:         0       0       0       0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 5
  2746 ;; This function calls:
  2747 ;;		NULL
  2748 ;;		_EUSART_Receive_ISR
  2749 ;;		_EUSART_Transmit_ISR
  2750 ;;		_I2C_MasterIsr
  2751 ;; This function is called by:
  2752 ;;		Interrupt level 1
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     0004                     _INTERRUPT_InterruptManager:
  2757                           
  2758                           ;incstack = 0
  2759     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2760                           
  2761                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762     0005  3180               	pagesel	$
  2763     0006                     i1l2449:
  2764                           
  2765                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2766     0006  1F0B               	btfss	11,6	;volatile
  2767     0007  2809               	goto	u53_21
  2768     0008  280A               	goto	u53_20
  2769     0009                     u53_21:
  2770     0009  2845               	goto	i1l433
  2771     000A                     u53_20:
  2772     000A                     i1l2451:
  2773                           
  2774                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  2775     000A  0021               	movlb	1	; select bank1
  2776     000B  1E11               	btfss	17,4	;volatile
  2777     000C  280E               	goto	u54_21
  2778     000D  280F               	goto	u54_20
  2779     000E                     u54_21:
  2780     000E  281A               	goto	i1l424
  2781     000F                     u54_20:
  2782     000F                     i1l2453:
  2783     000F  0020               	movlb	0	; select bank0
  2784     0010  1E11               	btfss	17,4	;volatile
  2785     0011  2813               	goto	u55_21
  2786     0012  2814               	goto	u55_20
  2787     0013                     u55_21:
  2788     0013  281A               	goto	i1l424
  2789     0014                     u55_20:
  2790     0014                     i1l2455:
  2791                           
  2792                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  2793     0014  086B               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2794     0015  008A               	movwf	10
  2795     0016  086A               	movf	_EUSART_TxDefaultInterruptHandler,w
  2796     0017  000A               	callw
  2797     0018  3180               	pagesel	$
  2798                           
  2799                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2800     0019  2845               	goto	i1l433
  2801     001A                     i1l424:	
  2802                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  2803                           
  2804     001A  0021               	movlb	1	; select bank1
  2805     001B  1E91               	btfss	17,5	;volatile
  2806     001C  281E               	goto	u56_21
  2807     001D  281F               	goto	u56_20
  2808     001E                     u56_21:
  2809     001E  282A               	goto	i1l426
  2810     001F                     u56_20:
  2811     001F                     i1l2457:
  2812     001F  0020               	movlb	0	; select bank0
  2813     0020  1E91               	btfss	17,5	;volatile
  2814     0021  2823               	goto	u57_21
  2815     0022  2824               	goto	u57_20
  2816     0023                     u57_21:
  2817     0023  282A               	goto	i1l426
  2818     0024                     u57_20:
  2819     0024                     i1l2459:
  2820                           
  2821                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  2822     0024  0869               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  2823     0025  008A               	movwf	10
  2824     0026  0868               	movf	_EUSART_RxDefaultInterruptHandler,w
  2825     0027  000A               	callw
  2826     0028  3180               	pagesel	$
  2827                           
  2828                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2829     0029  2845               	goto	i1l433
  2830     002A                     i1l426:	
  2831                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  2832                           
  2833     002A  0021               	movlb	1	; select bank1
  2834     002B  1D92               	btfss	18,3	;volatile
  2835     002C  282E               	goto	u58_21
  2836     002D  282F               	goto	u58_20
  2837     002E                     u58_21:
  2838     002E  283A               	goto	i1l428
  2839     002F                     u58_20:
  2840     002F                     i1l2461:
  2841     002F  0020               	movlb	0	; select bank0
  2842     0030  1D92               	btfss	18,3	;volatile
  2843     0031  2833               	goto	u59_21
  2844     0032  2834               	goto	u59_20
  2845     0033                     u59_21:
  2846     0033  283A               	goto	i1l428
  2847     0034                     u59_20:
  2848     0034                     i1l2463:
  2849                           
  2850                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  2851     0034  0861               	movf	_MSSP_InterruptHandler+1,w
  2852     0035  008A               	movwf	10
  2853     0036  0860               	movf	_MSSP_InterruptHandler,w
  2854     0037  000A               	callw
  2855     0038  3180               	pagesel	$
  2856                           
  2857                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  2858     0039  2845               	goto	i1l433
  2859     003A                     i1l428:	
  2860                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  2861                           
  2862     003A  0021               	movlb	1	; select bank1
  2863     003B  1D91               	btfss	17,3	;volatile
  2864     003C  283E               	goto	u60_21
  2865     003D  283F               	goto	u60_20
  2866     003E                     u60_21:
  2867     003E  2845               	goto	i1l427
  2868     003F                     u60_20:
  2869     003F                     i1l2465:
  2870     003F  0020               	movlb	0	; select bank0
  2871     0040  1D91               	btfss	17,3	;volatile
  2872     0041  2843               	goto	u61_21
  2873     0042  2844               	goto	u61_20
  2874     0043                     u61_21:
  2875     0043  2845               	goto	i1l427
  2876     0044                     u61_20:
  2877     0044  2834               	goto	i1l2463
  2878     0045                     i1l427:
  2879     0045                     i1l433:
  2880     0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2881     0046  0009               	retfie
  2882     0047                     __end_of_INTERRUPT_InterruptManager:
  2883                           
  2884                           	psect	text13
  2885     030B                     __ptext13:	
  2886 ;; *************** function _I2C_MasterIsr *****************
  2887 ;; Defined at:
  2888 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2902 ;;      Params:         0       0       0       0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 4
  2909 ;; This function calls:
  2910 ;;		_I2C_MasterFsm
  2911 ;; This function is called by:
  2912 ;;		_I2C_Open
  2913 ;;		_INTERRUPT_InterruptManager
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     030B                     _I2C_MasterIsr:	
  2918                           ;psect for function _I2C_MasterIsr
  2919                           
  2920     030B                     i1l2323:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2923                           
  2924                           
  2925                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  2926     030B  3181  21D2  3183   	fcall	_I2C_MasterFsm
  2927     030E                     i1l225:
  2928     030E  0008               	return
  2929     030F                     __end_of_I2C_MasterIsr:
  2930                           
  2931                           	psect	text14
  2932     01D2                     __ptext14:	
  2933 ;; *************** function _I2C_MasterFsm *****************
  2934 ;; Defined at:
  2935 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2949 ;;      Params:         0       0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0
  2951 ;;      Temps:          2       0       0       0       0       0       0       0
  2952 ;;      Totals:         2       0       0       0       0       0       0       0
  2953 ;;Total ram usage:        2 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 3
  2956 ;; This function calls:
  2957 ;;		_I2C_DO_ADDRESS_NACK
  2958 ;;		_I2C_DO_IDLE
  2959 ;;		_I2C_DO_RCEN
  2960 ;;		_I2C_DO_RESET
  2961 ;;		_I2C_DO_RX
  2962 ;;		_I2C_DO_RX_ACK
  2963 ;;		_I2C_DO_RX_NACK_RESTART
  2964 ;;		_I2C_DO_RX_NACK_STOP
  2965 ;;		_I2C_DO_SEND_ADR_READ
  2966 ;;		_I2C_DO_SEND_ADR_WRITE
  2967 ;;		_I2C_DO_SEND_RESTART
  2968 ;;		_I2C_DO_SEND_RESTART_READ
  2969 ;;		_I2C_DO_SEND_RESTART_WRITE
  2970 ;;		_I2C_DO_SEND_STOP
  2971 ;;		_I2C_DO_TX
  2972 ;;		_I2C_DO_TX_EMPTY
  2973 ;;		_I2C_MasterClearIrq
  2974 ;;		_I2C_MasterIsNack
  2975 ;; This function is called by:
  2976 ;;		_I2C_MasterIsr
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     01D2                     _I2C_MasterFsm:	
  2981                           ;psect for function _I2C_MasterFsm
  2982                           
  2983     01D2                     i1l2307:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2986                           
  2987                           
  2988                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  2989     01D2  3183  231F  3181   	fcall	_I2C_MasterClearIrq
  2990     01D5                     i1l2309:
  2991                           
  2992                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  2993     01D5  0020               	movlb	0	; select bank0
  2994     01D6  1C43               	btfss	_I2C_Status+35,0
  2995     01D7  29D9               	goto	u42_21
  2996     01D8  29DA               	goto	u42_20
  2997     01D9                     u42_21:
  2998     01D9  29E5               	goto	i1l2315
  2999     01DA                     u42_20:
  3000     01DA                     i1l2311:
  3001     01DA  3182  22CF  3181   	fcall	_I2C_MasterIsNack
  3002     01DD  3A00               	xorlw	0
  3003     01DE  1903               	skipnz
  3004     01DF  29E1               	goto	u43_21
  3005     01E0  29E2               	goto	u43_20
  3006     01E1                     u43_21:
  3007     01E1  29E5               	goto	i1l2315
  3008     01E2                     u43_20:
  3009     01E2                     i1l2313:
  3010                           
  3011                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  3012     01E2  300F               	movlw	15
  3013     01E3  0020               	movlb	0	; select bank0
  3014     01E4  00C1               	movwf	_I2C_Status+33
  3015     01E5                     i1l2315:
  3016                           
  3017                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  3018     01E5  0020               	movlb	0	; select bank0
  3019     01E6  0841               	movf	_I2C_Status+33,w
  3020     01E7  00FA               	movwf	??_I2C_MasterFsm
  3021     01E8  01FB               	clrf	??_I2C_MasterFsm+1
  3022     01E9  35FA               	lslf	??_I2C_MasterFsm,f
  3023     01EA  0DFB               	rlf	??_I2C_MasterFsm+1,f
  3024     01EB  30FA               	movlw	low _i2c_fsmStateTable
  3025     01EC  077A               	addwf	??_I2C_MasterFsm,w
  3026     01ED  0084               	movwf	4
  3027     01EE  3001               	movlw	high _i2c_fsmStateTable
  3028     01EF  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  3029     01F0  3880               	iorlw	128
  3030     01F1  0085               	movwf	5
  3031     01F2  3F01               	moviw [1]fsr0
  3032     01F3  008A               	movwf	10
  3033     01F4  3F00               	moviw [0]fsr0
  3034     01F5  000A               	callw
  3035     01F6  3181               	pagesel	$
  3036     01F7  0020               	movlb	0	; select bank0
  3037     01F8  00C1               	movwf	_I2C_Status+33
  3038     01F9                     i1l229:
  3039     01F9  0008               	return
  3040     01FA                     __end_of_I2C_MasterFsm:
  3041                           
  3042                           	psect	text15
  3043     031F                     __ptext15:	
  3044 ;; *************** function _I2C_MasterClearIrq *****************
  3045 ;; Defined at:
  3046 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		None
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3060 ;;      Params:         0       0       0       0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_I2C_MasterFsm
  3070 ;;		_I2C_Open
  3071 ;;		_I2C_Close
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     031F                     _I2C_MasterClearIrq:	
  3076                           ;psect for function _I2C_MasterClearIrq
  3077                           
  3078     031F                     i1l2099:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _I2C_MasterClearIrq: []
  3081                           
  3082                           
  3083                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  3084     031F  0020               	movlb	0	; select bank0
  3085     0320  1191               	bcf	17,3	;volatile
  3086     0321                     i1l392:
  3087     0321  0008               	return
  3088     0322                     __end_of_I2C_MasterClearIrq:
  3089                           
  3090                           	psect	text16
  3091     01A8                     __ptext16:	
  3092 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3093 ;; Defined at:
  3094 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      enum E3112
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3108 ;;      Params:         0       0       0       0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0
  3110 ;;      Temps:          2       0       0       0       0       0       0       0
  3111 ;;      Totals:         2       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 2
  3115 ;; This function calls:
  3116 ;;		NULL
  3117 ;;		_I2C_CallbackReturnReset
  3118 ;;		_I2C_CallbackReturnStop
  3119 ;;		_I2C_DO_SEND_RESTART
  3120 ;;		_I2C_DO_SEND_STOP
  3121 ;; This function is called by:
  3122 ;;		_I2C_MasterFsm
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126     01A8                     _I2C_DO_ADDRESS_NACK:	
  3127                           ;psect for function _I2C_DO_ADDRESS_NACK
  3128                           
  3129     01A8                     i1l2235:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3132                           
  3133                           
  3134                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  3135     01A8  0020               	movlb	0	; select bank0
  3136     01A9  1043               	bcf	_I2C_Status+35,0
  3137     01AA                     i1l2237:
  3138                           
  3139                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  3140     01AA  3002               	movlw	2
  3141     01AB  00C2               	movwf	_I2C_Status+34
  3142                           
  3143                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  3144     01AC  29B5               	goto	i1l2249
  3145     01AD                     i1l2239:
  3146                           
  3147                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  3148     01AD  3182  22EE  3181   	fcall	_I2C_DO_SEND_RESTART
  3149     01B0  29D1               	goto	i1l320
  3150     01B1                     i1l2243:
  3151                           
  3152                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  3153     01B1  3182  22E9  3181   	fcall	_I2C_DO_SEND_STOP
  3154     01B4  29D1               	goto	i1l320
  3155     01B5                     i1l2249:
  3156     01B5  0831               	movf	(low ((_I2C_Status| 0+16))+1),w
  3157     01B6  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3158     01B7  0830               	movf	low ((_I2C_Status| 0+16)),w
  3159     01B8  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3160     01B9  3004               	movlw	4
  3161     01BA  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3162     01BB  0086               	movwf	6
  3163     01BC  0187               	clrf	7
  3164     01BD  3F41               	moviw [1]fsr1
  3165     01BE  008A               	movwf	10
  3166     01BF  3F40               	moviw [0]fsr1
  3167     01C0  000A               	callw
  3168     01C1  3181               	pagesel	$
  3169     01C2  00F7               	movwf	??_I2C_DO_ADDRESS_NACK
  3170     01C3  01F8               	clrf	??_I2C_DO_ADDRESS_NACK+1
  3171                           
  3172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3173                           ; Switch size 1, requested type "simple"
  3174                           ; Number of cases is 1, Range of values is 0 to 0
  3175                           ; switch strategies available:
  3176                           ; Name         Instructions Cycles
  3177                           ; simple_byte            4     3 (average)
  3178                           ; direct_byte            8     6 (fixed)
  3179                           ; jumptable            260     6 (fixed)
  3180                           ;	Chosen strategy is simple_byte
  3181     01C4  0878               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3182     01C5  3A00               	xorlw	0	; case 0
  3183     01C6  1903               	skipnz
  3184     01C7  29C9               	goto	i1l2755
  3185     01C8  29B1               	goto	i1l2243
  3186     01C9                     i1l2755:
  3187                           
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 2, Range of values is 2 to 3
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte            7     4 (average)
  3193                           ; direct_byte           13     9 (fixed)
  3194                           ; jumptable            263     9 (fixed)
  3195                           ;	Chosen strategy is simple_byte
  3196     01C9  0877               	movf	??_I2C_DO_ADDRESS_NACK,w
  3197     01CA  3A02               	xorlw	2	; case 2
  3198     01CB  1903               	skipnz
  3199     01CC  29AD               	goto	i1l2239
  3200     01CD  3A01               	xorlw	1	; case 3
  3201     01CE  1903               	skipnz
  3202     01CF  29AD               	goto	i1l2239
  3203     01D0  29B1               	goto	i1l2243
  3204     01D1                     i1l320:
  3205     01D1  0008               	return
  3206     01D2                     __end_of_I2C_DO_ADDRESS_NACK:
  3207                           
  3208                           	psect	text17
  3209     02D5                     __ptext17:	
  3210 ;; *************** function _I2C_DO_RESET *****************
  3211 ;; Defined at:
  3212 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      enum E3112
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3226 ;;      Params:         0       0       0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_I2C_MasterFsm
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     02D5                     _I2C_DO_RESET:	
  3240                           ;psect for function _I2C_DO_RESET
  3241                           
  3242     02D5                     i1l2227:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3245                           
  3246                           
  3247                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  3248     02D5  0020               	movlb	0	; select bank0
  3249     02D6  10C3               	bcf	_I2C_Status+35,1
  3250     02D7                     i1l2229:
  3251                           
  3252                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  3253     02D7  01C2               	clrf	_I2C_Status+34
  3254     02D8                     i1l2231:
  3255                           
  3256                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  3257     02D8  300E               	movlw	14
  3258     02D9                     i1l314:
  3259     02D9  0008               	return
  3260     02DA                     __end_of_I2C_DO_RESET:
  3261                           
  3262                           	psect	text18
  3263     02DA                     __ptext18:	
  3264 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3265 ;; Defined at:
  3266 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      enum E3112
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3280 ;;      Params:         0       0       0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 1
  3287 ;; This function calls:
  3288 ;;		_I2C_MasterSendNack
  3289 ;; This function is called by:
  3290 ;;		_I2C_DO_RX
  3291 ;;		_I2C_MasterFsm
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295     02DA                     _I2C_DO_RX_NACK_RESTART:	
  3296                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3297                           
  3298     02DA                     i1l2069:	
  3299                           ;incstack = 0
  3300                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3301                           
  3302                           
  3303                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  3304     02DA  3183  2313  3182   	fcall	_I2C_MasterSendNack
  3305     02DD                     i1l2071:
  3306                           
  3307                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  3308     02DD  3009               	movlw	9
  3309     02DE                     i1l311:
  3310     02DE  0008               	return
  3311     02DF                     __end_of_I2C_DO_RX_NACK_RESTART:
  3312                           
  3313                           	psect	text19
  3314     02DF                     __ptext19:	
  3315 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3316 ;; Defined at:
  3317 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      enum E3112
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3331 ;;      Params:         0       0       0       0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 1
  3338 ;; This function calls:
  3339 ;;		_I2C_MasterSendNack
  3340 ;; This function is called by:
  3341 ;;		_I2C_DO_RX
  3342 ;;		_I2C_MasterFsm
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346     02DF                     _I2C_DO_RX_NACK_STOP:	
  3347                           ;psect for function _I2C_DO_RX_NACK_STOP
  3348                           
  3349     02DF                     i1l2075:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3352                           
  3353                           
  3354                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  3355     02DF  3183  2313  3182   	fcall	_I2C_MasterSendNack
  3356     02E2                     i1l2077:
  3357                           
  3358                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  3359     02E2  300A               	movlw	10
  3360     02E3                     i1l308:
  3361     02E3  0008               	return
  3362     02E4                     __end_of_I2C_DO_RX_NACK_STOP:
  3363                           
  3364                           	psect	text20
  3365     02E4                     __ptext20:	
  3366 ;; *************** function _I2C_DO_RX_ACK *****************
  3367 ;; Defined at:
  3368 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      enum E3112
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3382 ;;      Params:         0       0       0       0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 1
  3389 ;; This function calls:
  3390 ;;		_I2C_MasterSendAck
  3391 ;; This function is called by:
  3392 ;;		_I2C_MasterFsm
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396     02E4                     _I2C_DO_RX_ACK:	
  3397                           ;psect for function _I2C_DO_RX_ACK
  3398                           
  3399     02E4                     i1l2221:	
  3400                           ;incstack = 0
  3401                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3402                           
  3403                           
  3404                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  3405     02E4  3183  230F  3182   	fcall	_I2C_MasterSendAck
  3406     02E7                     i1l2223:
  3407                           
  3408                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  3409     02E7  3005               	movlw	5
  3410     02E8                     i1l305:
  3411     02E8  0008               	return
  3412     02E9                     __end_of_I2C_DO_RX_ACK:
  3413                           
  3414                           	psect	text21
  3415     02E9                     __ptext21:	
  3416 ;; *************** function _I2C_DO_SEND_STOP *****************
  3417 ;; Defined at:
  3418 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      enum E3112
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3432 ;;      Params:         0       0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 1
  3439 ;; This function calls:
  3440 ;;		_I2C_MasterStop
  3441 ;; This function is called by:
  3442 ;;		_I2C_DO_TX
  3443 ;;		_I2C_DO_TX_EMPTY
  3444 ;;		_I2C_DO_ADDRESS_NACK
  3445 ;;		_I2C_MasterFsm
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449     02E9                     _I2C_DO_SEND_STOP:	
  3450                           ;psect for function _I2C_DO_SEND_STOP
  3451                           
  3452     02E9                     i1l2057:	
  3453                           ;incstack = 0
  3454                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3455                           
  3456                           
  3457                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  3458     02E9  3183  232B  3182   	fcall	_I2C_MasterStop
  3459     02EC                     i1l2059:
  3460                           
  3461                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  3462     02EC  3000               	movlw	0
  3463     02ED                     i1l302:
  3464     02ED  0008               	return
  3465     02EE                     __end_of_I2C_DO_SEND_STOP:
  3466                           
  3467                           	psect	text22
  3468     02EE                     __ptext22:	
  3469 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3470 ;; Defined at:
  3471 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      enum E3112
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, pclath, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3485 ;;      Params:         0       0       0       0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; Hardware stack levels required when called: 1
  3492 ;; This function calls:
  3493 ;;		_I2C_MasterEnableRestart
  3494 ;; This function is called by:
  3495 ;;		_I2C_DO_TX_EMPTY
  3496 ;;		_I2C_DO_ADDRESS_NACK
  3497 ;;		_I2C_MasterFsm
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501     02EE                     _I2C_DO_SEND_RESTART:	
  3502                           ;psect for function _I2C_DO_SEND_RESTART
  3503                           
  3504     02EE                     i1l2083:	
  3505                           ;incstack = 0
  3506                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3507                           
  3508                           
  3509                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  3510     02EE  3183  232E  3182   	fcall	_I2C_MasterEnableRestart
  3511     02F1                     i1l2085:
  3512                           
  3513                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  3514     02F1  3001               	movlw	1
  3515     02F2                     i1l299:
  3516     02F2  0008               	return
  3517     02F3                     __end_of_I2C_DO_SEND_RESTART:
  3518                           
  3519                           	psect	text23
  3520     02F3                     __ptext23:	
  3521 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3522 ;; Defined at:
  3523 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      enum E3112
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0, pclath, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3537 ;;      Params:         0       0       0       0       0       0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; Hardware stack levels required when called: 1
  3544 ;; This function calls:
  3545 ;;		_I2C_MasterEnableRestart
  3546 ;; This function is called by:
  3547 ;;		_I2C_DO_TX
  3548 ;;		_I2C_MasterFsm
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552     02F3                     _I2C_DO_SEND_RESTART_WRITE:	
  3553                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3554                           
  3555     02F3                     i1l2051:	
  3556                           ;incstack = 0
  3557                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3558                           
  3559                           
  3560                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  3561     02F3  3183  232E  3182   	fcall	_I2C_MasterEnableRestart
  3562     02F6                     i1l2053:
  3563                           
  3564                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  3565     02F6  3002               	movlw	2
  3566     02F7                     i1l296:
  3567     02F7  0008               	return
  3568     02F8                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3569                           
  3570                           	psect	text24
  3571     02F8                     __ptext24:	
  3572 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3573 ;; Defined at:
  3574 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      enum E3112
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0, pclath, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3588 ;;      Params:         0       0       0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 1
  3595 ;; This function calls:
  3596 ;;		_I2C_MasterEnableRestart
  3597 ;; This function is called by:
  3598 ;;		_I2C_DO_TX
  3599 ;;		_I2C_MasterFsm
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603     02F8                     _I2C_DO_SEND_RESTART_READ:	
  3604                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3605                           
  3606     02F8                     i1l2045:	
  3607                           ;incstack = 0
  3608                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3609                           
  3610                           
  3611                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  3612     02F8  3183  232E  3182   	fcall	_I2C_MasterEnableRestart
  3613     02FB                     i1l2047:
  3614                           
  3615                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  3616     02FB  3001               	movlw	1
  3617     02FC                     i1l293:
  3618     02FC  0008               	return
  3619     02FD                     __end_of_I2C_DO_SEND_RESTART_READ:
  3620                           
  3621                           	psect	text25
  3622     029E                     __ptext25:	
  3623 ;; *************** function _I2C_DO_RCEN *****************
  3624 ;; Defined at:
  3625 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      enum E3112
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, pclath, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3639 ;;      Params:         0       0       0       0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		_I2C_MasterStartRx
  3648 ;; This function is called by:
  3649 ;;		_I2C_MasterFsm
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653     029E                     _I2C_DO_RCEN:	
  3654                           ;psect for function _I2C_DO_RCEN
  3655                           
  3656     029E                     i1l2189:	
  3657                           ;incstack = 0
  3658                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  3659                           
  3660                           
  3661                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  3662     029E  0020               	movlb	0	; select bank0
  3663     029F  1043               	bcf	_I2C_Status+35,0
  3664     02A0                     i1l2191:
  3665                           
  3666                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  3667     02A0  3183  2328  3182   	fcall	_I2C_MasterStartRx
  3668     02A3                     i1l2193:
  3669                           
  3670                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  3671     02A3  3004               	movlw	4
  3672     02A4                     i1l269:
  3673     02A4  0008               	return
  3674     02A5                     __end_of_I2C_DO_RCEN:
  3675                           
  3676                           	psect	text26
  3677     00B4                     __ptext26:	
  3678 ;; *************** function _I2C_DO_RX *****************
  3679 ;; Defined at:
  3680 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      enum E3112
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3694 ;;      Params:         0       0       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0
  3696 ;;      Temps:          2       0       0       0       0       0       0       0
  3697 ;;      Totals:         2       0       0       0       0       0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 2
  3701 ;; This function calls:
  3702 ;;		NULL
  3703 ;;		_I2C_CallbackReturnReset
  3704 ;;		_I2C_CallbackReturnStop
  3705 ;;		_I2C_DO_RX_NACK_RESTART
  3706 ;;		_I2C_DO_RX_NACK_STOP
  3707 ;;		_I2C_MasterGetRxData
  3708 ;;		_I2C_MasterSendAck
  3709 ;; This function is called by:
  3710 ;;		_I2C_MasterFsm
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714     00B4                     _I2C_DO_RX:	
  3715                           ;psect for function _I2C_DO_RX
  3716                           
  3717     00B4                     i1l2159:	
  3718                           ;incstack = 0
  3719                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3720                           
  3721                           
  3722                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  3723     00B4  3183  2325  3180   	fcall	_I2C_MasterGetRxData
  3724     00B7  00F7               	movwf	??_I2C_DO_RX
  3725     00B8  301D               	movlw	29
  3726     00B9  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3727     00BA  0086               	movwf	6
  3728     00BB  0187               	clrf	7
  3729     00BC  3F40               	moviw [0]fsr1
  3730     00BD  0084               	movwf	4
  3731     00BE  3F41               	moviw [1]fsr1
  3732     00BF  0085               	movwf	5
  3733     00C0  0877               	movf	??_I2C_DO_RX,w
  3734     00C1  0080               	movwf	0
  3735     00C2                     i1l2161:
  3736     00C2  3001               	movlw	1
  3737     00C3  0020               	movlb	0	; select bank0
  3738     00C4  07BD               	addwf	low ((_I2C_Status| 0+29)),f
  3739     00C5  3000               	movlw	0
  3740     00C6  3DBE               	addwfc	(low ((_I2C_Status| 0+29))+1),f
  3741     00C7                     i1l2163:
  3742                           
  3743                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  3744     00C7  3001               	movlw	1
  3745     00C8  02BF               	subwf	_I2C_Status+31,f
  3746     00C9  3000               	movlw	0
  3747     00CA  3BC0               	subwfb	_I2C_Status+32,f
  3748     00CB  083F               	movf	_I2C_Status+31,w
  3749     00CC  0440               	iorwf	_I2C_Status+32,w
  3750     00CD  1903               	btfsc	3,2
  3751     00CE  28D0               	goto	u40_21
  3752     00CF  28D1               	goto	u40_20
  3753     00D0                     u40_21:
  3754     00D0  28D6               	goto	i1l257
  3755     00D1                     u40_20:
  3756     00D1                     i1l2165:
  3757                           
  3758                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  3759     00D1  3183  230F  3180   	fcall	_I2C_MasterSendAck
  3760     00D4                     i1l2167:
  3761                           
  3762                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  3763     00D4  3005               	movlw	5
  3764     00D5  28FE               	goto	i1l258
  3765     00D6                     i1l257:	
  3766                           ;mcc_generated_files/i2c_master.c: 388:     else
  3767                           
  3768                           
  3769                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  3770     00D6  15C3               	bsf	_I2C_Status+35,3
  3771                           
  3772                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3773     00D7  28E0               	goto	i1l2183
  3774     00D8                     i1l2173:
  3775                           
  3776                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  3777     00D8  3182  22DA  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  3778     00DB  28FE               	goto	i1l258
  3779     00DC                     i1l2177:
  3780                           
  3781                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  3782     00DC  3182  22DF  3180   	fcall	_I2C_DO_RX_NACK_STOP
  3783     00DF  28FE               	goto	i1l258
  3784     00E0                     i1l2183:
  3785     00E0  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  3786     00E1  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3787     00E2  082C               	movf	low ((_I2C_Status| 0+12)),w
  3788     00E3  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3789     00E4  0821               	movf	_I2C_Status+1,w
  3790     00E5  008A               	movwf	10
  3791     00E6  0820               	movf	_I2C_Status,w
  3792     00E7  000A               	callw
  3793     00E8  3180               	pagesel	$
  3794     00E9  00F7               	movwf	??_I2C_DO_RX
  3795     00EA  01F8               	clrf	??_I2C_DO_RX+1
  3796                           
  3797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3798                           ; Switch size 1, requested type "simple"
  3799                           ; Number of cases is 1, Range of values is 0 to 0
  3800                           ; switch strategies available:
  3801                           ; Name         Instructions Cycles
  3802                           ; simple_byte            4     3 (average)
  3803                           ; direct_byte            8     6 (fixed)
  3804                           ; jumptable            260     6 (fixed)
  3805                           ;	Chosen strategy is simple_byte
  3806     00EB  0878               	movf	??_I2C_DO_RX+1,w
  3807     00EC  3A00               	xorlw	0	; case 0
  3808     00ED  1903               	skipnz
  3809     00EE  28F0               	goto	i1l2757
  3810     00EF  28DC               	goto	i1l2177
  3811     00F0                     i1l2757:
  3812                           
  3813                           ; Switch size 1, requested type "simple"
  3814                           ; Number of cases is 4, Range of values is 1 to 4
  3815                           ; switch strategies available:
  3816                           ; Name         Instructions Cycles
  3817                           ; simple_byte           13     7 (average)
  3818                           ; direct_byte           17     9 (fixed)
  3819                           ; jumptable            263     9 (fixed)
  3820                           ;	Chosen strategy is simple_byte
  3821     00F0  0877               	movf	??_I2C_DO_RX,w
  3822     00F1  3A01               	xorlw	1	; case 1
  3823     00F2  1903               	skipnz
  3824     00F3  28DC               	goto	i1l2177
  3825     00F4  3A03               	xorlw	3	; case 2
  3826     00F5  1903               	skipnz
  3827     00F6  28D8               	goto	i1l2173
  3828     00F7  3A01               	xorlw	1	; case 3
  3829     00F8  1903               	skipnz
  3830     00F9  28D8               	goto	i1l2173
  3831     00FA  3A07               	xorlw	7	; case 4
  3832     00FB  1903               	skipnz
  3833     00FC  28DC               	goto	i1l2177
  3834     00FD  28DC               	goto	i1l2177
  3835     00FE                     i1l258:
  3836     00FE  0008               	return
  3837     00FF                     __end_of_I2C_DO_RX:
  3838                           
  3839                           	psect	text27
  3840     005C                     __ptext27:	
  3841 ;; *************** function _I2C_DO_TX *****************
  3842 ;; Defined at:
  3843 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      enum E3112
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3857 ;;      Params:         0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0
  3859 ;;      Temps:          2       0       0       0       0       0       0       0
  3860 ;;      Totals:         2       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        2 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 2
  3864 ;; This function calls:
  3865 ;;		NULL
  3866 ;;		_I2C_CallbackReturnReset
  3867 ;;		_I2C_CallbackReturnStop
  3868 ;;		_I2C_DO_SEND_RESTART_READ
  3869 ;;		_I2C_DO_SEND_RESTART_WRITE
  3870 ;;		_I2C_DO_SEND_STOP
  3871 ;;		_I2C_MasterIsNack
  3872 ;;		_I2C_MasterSendTxData
  3873 ;; This function is called by:
  3874 ;;		_I2C_MasterFsm
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878     005C                     _I2C_DO_TX:	
  3879                           ;psect for function _I2C_DO_TX
  3880                           
  3881     005C                     i1l2125:	
  3882                           ;incstack = 0
  3883                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3884                           
  3885                           
  3886                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  3887     005C  3182  22CF  3180   	fcall	_I2C_MasterIsNack
  3888     005F  3A00               	xorlw	0
  3889     0060  1903               	skipnz
  3890     0061  2863               	goto	u38_21
  3891     0062  2864               	goto	u38_20
  3892     0063                     u38_21:
  3893     0063  2894               	goto	i1l241
  3894     0064                     u38_20:
  3895     0064  2871               	goto	i1l2143
  3896     0065                     i1l2129:
  3897                           
  3898                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  3899     0065  3182  22F8  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  3900     0068  28B3               	goto	i1l244
  3901     0069                     i1l2133:
  3902                           
  3903                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  3904     0069  3182  22F3  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  3905     006C  28B3               	goto	i1l244
  3906     006D                     i1l2137:
  3907                           
  3908                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  3909     006D  3182  22E9  3180   	fcall	_I2C_DO_SEND_STOP
  3910     0070  28B3               	goto	i1l244
  3911     0071                     i1l2143:
  3912     0071  0020               	movlb	0	; select bank0
  3913     0072  0833               	movf	(low ((_I2C_Status| 0+18))+1),w
  3914     0073  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3915     0074  0832               	movf	low ((_I2C_Status| 0+18)),w
  3916     0075  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3917     0076  3006               	movlw	6
  3918     0077  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3919     0078  0086               	movwf	6
  3920     0079  0187               	clrf	7
  3921     007A  3F41               	moviw [1]fsr1
  3922     007B  008A               	movwf	10
  3923     007C  3F40               	moviw [0]fsr1
  3924     007D  000A               	callw
  3925     007E  3180               	pagesel	$
  3926     007F  00F8               	movwf	??_I2C_DO_TX
  3927     0080  01F9               	clrf	??_I2C_DO_TX+1
  3928                           
  3929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3930                           ; Switch size 1, requested type "simple"
  3931                           ; Number of cases is 1, Range of values is 0 to 0
  3932                           ; switch strategies available:
  3933                           ; Name         Instructions Cycles
  3934                           ; simple_byte            4     3 (average)
  3935                           ; direct_byte            8     6 (fixed)
  3936                           ; jumptable            260     6 (fixed)
  3937                           ;	Chosen strategy is simple_byte
  3938     0081  0879               	movf	??_I2C_DO_TX+1,w
  3939     0082  3A00               	xorlw	0	; case 0
  3940     0083  1903               	skipnz
  3941     0084  2886               	goto	i1l2759
  3942     0085  286D               	goto	i1l2137
  3943     0086                     i1l2759:
  3944                           
  3945                           ; Switch size 1, requested type "simple"
  3946                           ; Number of cases is 4, Range of values is 1 to 4
  3947                           ; switch strategies available:
  3948                           ; Name         Instructions Cycles
  3949                           ; simple_byte           13     7 (average)
  3950                           ; direct_byte           17     9 (fixed)
  3951                           ; jumptable            263     9 (fixed)
  3952                           ;	Chosen strategy is simple_byte
  3953     0086  0878               	movf	??_I2C_DO_TX,w
  3954     0087  3A01               	xorlw	1	; case 1
  3955     0088  1903               	skipnz
  3956     0089  286D               	goto	i1l2137
  3957     008A  3A03               	xorlw	3	; case 2
  3958     008B  1903               	skipnz
  3959     008C  2865               	goto	i1l2129
  3960     008D  3A01               	xorlw	1	; case 3
  3961     008E  1903               	skipnz
  3962     008F  2869               	goto	i1l2133
  3963     0090  3A07               	xorlw	7	; case 4
  3964     0091  1903               	skipnz
  3965     0092  286D               	goto	i1l2137
  3966     0093  286D               	goto	i1l2137
  3967     0094                     i1l241:	
  3968                           ;mcc_generated_files/i2c_master.c: 372:     else
  3969                           
  3970                           
  3971                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  3972     0094  0020               	movlb	0	; select bank0
  3973     0095  1043               	bcf	_I2C_Status+35,0
  3974     0096                     i1l2145:
  3975                           
  3976                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  3977     0096  083E               	movf	(low ((_I2C_Status| 0+29))+1),w
  3978     0097  00F9               	movwf	??_I2C_DO_TX+1
  3979     0098  083D               	movf	low ((_I2C_Status| 0+29)),w
  3980     0099  00F8               	movwf	??_I2C_DO_TX
  3981     009A  0ABD               	incf	low ((_I2C_Status| 0+29)),f
  3982     009B  1903               	skipnz
  3983     009C  0ABE               	incf	(low ((_I2C_Status| 0+29))+1),f
  3984     009D  0878               	movf	??_I2C_DO_TX,w
  3985     009E  0086               	movwf	6
  3986     009F  0879               	movf	??_I2C_DO_TX+1,w
  3987     00A0  0087               	movwf	7
  3988     00A1  0801               	movf	1,w
  3989     00A2  3183  2302  3180   	fcall	_I2C_MasterSendTxData
  3990     00A5                     i1l2147:
  3991                           
  3992                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  3993     00A5  3001               	movlw	1
  3994     00A6  0020               	movlb	0	; select bank0
  3995     00A7  02BF               	subwf	_I2C_Status+31,f
  3996     00A8  3000               	movlw	0
  3997     00A9  3BC0               	subwfb	_I2C_Status+32,f
  3998     00AA  083F               	movf	_I2C_Status+31,w
  3999     00AB  0440               	iorwf	_I2C_Status+32,w
  4000     00AC  1D03               	btfss	3,2
  4001     00AD  28AF               	goto	u39_21
  4002     00AE  28B0               	goto	u39_20
  4003     00AF                     u39_21:
  4004     00AF  28B2               	goto	i1l2151
  4005     00B0                     u39_20:
  4006     00B0                     i1l2149:
  4007     00B0  3006               	movlw	6
  4008     00B1  28B3               	goto	i1l244
  4009     00B2                     i1l2151:
  4010     00B2  3003               	movlw	3
  4011     00B3                     i1l244:
  4012     00B3  0008               	return
  4013     00B4                     __end_of_I2C_DO_TX:
  4014                           
  4015                           	psect	text28
  4016     028F                     __ptext28:	
  4017 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4018 ;; Defined at:
  4019 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      enum E3112
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4033 ;;      Params:         0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 1
  4040 ;; This function calls:
  4041 ;;		_I2C_MasterSendTxData
  4042 ;; This function is called by:
  4043 ;;		_I2C_MasterFsm
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047     028F                     _I2C_DO_SEND_ADR_WRITE:	
  4048                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4049                           
  4050     028F                     i1l2117:	
  4051                           ;incstack = 0
  4052                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4053                           
  4054                           
  4055                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  4056     028F  0020               	movlb	0	; select bank0
  4057     0290  1443               	bsf	_I2C_Status+35,0
  4058     0291                     i1l2119:
  4059                           
  4060                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  4061     0291  353C               	lslf	_I2C_Status+28,w
  4062     0292  3183  2302  3182   	fcall	_I2C_MasterSendTxData
  4063     0295                     i1l2121:
  4064                           
  4065                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  4066     0295  3003               	movlw	3
  4067     0296                     i1l238:
  4068     0296  0008               	return
  4069     0297                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4070                           
  4071                           	psect	text29
  4072     0286                     __ptext29:	
  4073 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4074 ;; Defined at:
  4075 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      enum E3112
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, pclath, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4089 ;;      Params:         0       0       0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 1
  4096 ;; This function calls:
  4097 ;;		_I2C_MasterSendTxData
  4098 ;; This function is called by:
  4099 ;;		_I2C_MasterFsm
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103     0286                     _I2C_DO_SEND_ADR_READ:	
  4104                           ;psect for function _I2C_DO_SEND_ADR_READ
  4105                           
  4106     0286                     i1l2109:	
  4107                           ;incstack = 0
  4108                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4109                           
  4110                           
  4111                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  4112     0286  0020               	movlb	0	; select bank0
  4113     0287  1443               	bsf	_I2C_Status+35,0
  4114     0288                     i1l2111:
  4115                           
  4116                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  4117     0288  1403               	setc
  4118     0289  0D3C               	rlf	_I2C_Status+28,w
  4119     028A  3183  2302  3182   	fcall	_I2C_MasterSendTxData
  4120     028D                     i1l2113:
  4121                           
  4122                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  4123     028D  3005               	movlw	5
  4124     028E                     i1l235:
  4125     028E  0008               	return
  4126     028F                     __end_of_I2C_DO_SEND_ADR_READ:
  4127                           
  4128                           	psect	text30
  4129     02FD                     __ptext30:	
  4130 ;; *************** function _I2C_DO_IDLE *****************
  4131 ;; Defined at:
  4132 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      enum E3112
  4139 ;; Registers used:
  4140 ;;		wreg, status,2
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4146 ;;      Params:         0       0       0       0       0       0       0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0
  4149 ;;      Totals:         0       0       0       0       0       0       0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_I2C_MasterFsm
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159     02FD                     _I2C_DO_IDLE:	
  4160                           ;psect for function _I2C_DO_IDLE
  4161                           
  4162     02FD                     i1l2101:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  4168     02FD  0020               	movlb	0	; select bank0
  4169     02FE  10C3               	bcf	_I2C_Status+35,1
  4170     02FF                     i1l2103:
  4171                           
  4172                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  4173     02FF  01C2               	clrf	_I2C_Status+34
  4174     0300                     i1l2105:
  4175                           
  4176                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  4177     0300  300E               	movlw	14
  4178     0301                     i1l232:
  4179     0301  0008               	return
  4180     0302                     __end_of_I2C_DO_IDLE:
  4181                           
  4182                           	psect	text31
  4183     0179                     __ptext31:	
  4184 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4185 ;; Defined at:
  4186 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      enum E3112
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4200 ;;      Params:         0       0       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0
  4202 ;;      Temps:          2       0       0       0       0       0       0       0
  4203 ;;      Totals:         2       0       0       0       0       0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 2
  4207 ;; This function calls:
  4208 ;;		NULL
  4209 ;;		_I2C_CallbackReturnReset
  4210 ;;		_I2C_CallbackReturnStop
  4211 ;;		_I2C_DO_SEND_RESTART
  4212 ;;		_I2C_DO_SEND_STOP
  4213 ;;		_I2C_MasterSetIrq
  4214 ;; This function is called by:
  4215 ;;		_I2C_MasterFsm
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     0179                     _I2C_DO_TX_EMPTY:	
  4220                           ;psect for function _I2C_DO_TX_EMPTY
  4221                           
  4222     0179                     i1l2197:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4225                           
  4226                           
  4227                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  4228     0179  0020               	movlb	0	; select bank0
  4229     017A  15C3               	bsf	_I2C_Status+35,3
  4230                           
  4231                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4232     017B  2989               	goto	i1l2215
  4233     017C                     i1l2199:
  4234                           
  4235                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  4236     017C  3182  22EE  3181   	fcall	_I2C_DO_SEND_RESTART
  4237     017F  29A7               	goto	i1l275
  4238     0180                     i1l2203:
  4239                           
  4240                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  4241     0180  3183  2322  3181   	fcall	_I2C_MasterSetIrq
  4242     0183                     i1l2205:
  4243                           
  4244                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  4245     0183  3003               	movlw	3
  4246     0184  29A7               	goto	i1l275
  4247     0185                     i1l2209:
  4248                           
  4249                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  4250     0185  3182  22E9  3181   	fcall	_I2C_DO_SEND_STOP
  4251     0188  29A7               	goto	i1l275
  4252     0189                     i1l2215:
  4253     0189  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  4254     018A  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  4255     018B  082C               	movf	low ((_I2C_Status| 0+12)),w
  4256     018C  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4257     018D  0821               	movf	_I2C_Status+1,w
  4258     018E  008A               	movwf	10
  4259     018F  0820               	movf	_I2C_Status,w
  4260     0190  000A               	callw
  4261     0191  3181               	pagesel	$
  4262     0192  00F7               	movwf	??_I2C_DO_TX_EMPTY
  4263     0193  01F8               	clrf	??_I2C_DO_TX_EMPTY+1
  4264                           
  4265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4266                           ; Switch size 1, requested type "simple"
  4267                           ; Number of cases is 1, Range of values is 0 to 0
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte            4     3 (average)
  4271                           ; direct_byte            8     6 (fixed)
  4272                           ; jumptable            260     6 (fixed)
  4273                           ;	Chosen strategy is simple_byte
  4274     0194  0878               	movf	??_I2C_DO_TX_EMPTY+1,w
  4275     0195  3A00               	xorlw	0	; case 0
  4276     0196  1903               	skipnz
  4277     0197  2999               	goto	i1l2761
  4278     0198  2985               	goto	i1l2209
  4279     0199                     i1l2761:
  4280                           
  4281                           ; Switch size 1, requested type "simple"
  4282                           ; Number of cases is 4, Range of values is 1 to 4
  4283                           ; switch strategies available:
  4284                           ; Name         Instructions Cycles
  4285                           ; simple_byte           13     7 (average)
  4286                           ; direct_byte           17     9 (fixed)
  4287                           ; jumptable            263     9 (fixed)
  4288                           ;	Chosen strategy is simple_byte
  4289     0199  0877               	movf	??_I2C_DO_TX_EMPTY,w
  4290     019A  3A01               	xorlw	1	; case 1
  4291     019B  1903               	skipnz
  4292     019C  2985               	goto	i1l2209
  4293     019D  3A03               	xorlw	3	; case 2
  4294     019E  1903               	skipnz
  4295     019F  297C               	goto	i1l2199
  4296     01A0  3A01               	xorlw	1	; case 3
  4297     01A1  1903               	skipnz
  4298     01A2  297C               	goto	i1l2199
  4299     01A3  3A07               	xorlw	7	; case 4
  4300     01A4  1903               	skipnz
  4301     01A5  2980               	goto	i1l2203
  4302     01A6  2985               	goto	i1l2209
  4303     01A7                     i1l275:
  4304     01A7  0008               	return
  4305     01A8                     __end_of_I2C_DO_TX_EMPTY:
  4306                           
  4307                           	psect	text32
  4308     0322                     __ptext32:	
  4309 ;; *************** function _I2C_MasterSetIrq *****************
  4310 ;; Defined at:
  4311 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		None
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4325 ;;      Params:         0       0       0       0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0
  4328 ;;      Totals:         0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        0 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_I2C_DO_TX_EMPTY
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     0322                     _I2C_MasterSetIrq:	
  4339                           ;psect for function _I2C_MasterSetIrq
  4340                           
  4341     0322                     i1l2089:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _I2C_MasterSetIrq: []
  4344                           
  4345                           
  4346                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  4347     0322  0020               	movlb	0	; select bank0
  4348     0323  1591               	bsf	17,3	;volatile
  4349     0324                     i1l395:
  4350     0324  0008               	return
  4351     0325                     __end_of_I2C_MasterSetIrq:
  4352                           
  4353                           	psect	text33
  4354     02CF                     __ptext33:	
  4355 ;; *************** function _I2C_MasterIsNack *****************
  4356 ;; Defined at:
  4357 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      _Bool 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4371 ;;      Params:         0       0       0       0       0       0       0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_I2C_MasterFsm
  4381 ;;		_I2C_DO_TX
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385     02CF                     _I2C_MasterIsNack:	
  4386                           ;psect for function _I2C_MasterIsNack
  4387                           
  4388     02CF                     i1l2039:	
  4389                           ;incstack = 0
  4390                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4391                           
  4392                           
  4393                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  4394     02CF  0024               	movlb	4	; select bank4
  4395     02D0  0E16               	swapf	22,w	;volatile
  4396     02D1  0C89               	rrf	9,f
  4397     02D2  0C89               	rrf	9,f
  4398     02D3  3901               	andlw	1
  4399     02D4                     i1l368:
  4400     02D4  0008               	return
  4401     02D5                     __end_of_I2C_MasterIsNack:
  4402                           
  4403                           	psect	text34
  4404     0302                     __ptext34:	
  4405 ;; *************** function _I2C_MasterSendTxData *****************
  4406 ;; Defined at:
  4407 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  data            1    wreg     unsigned char 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;  data            1    0[COMMON] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4421 ;;      Params:         0       0       0       0       0       0       0       0
  4422 ;;      Locals:         1       0       0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0
  4424 ;;      Totals:         1       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        1 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_I2C_DO_SEND_ADR_READ
  4431 ;;		_I2C_DO_SEND_ADR_WRITE
  4432 ;;		_I2C_DO_TX
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436     0302                     _I2C_MasterSendTxData:	
  4437                           ;psect for function _I2C_MasterSendTxData
  4438                           
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4442                           ;I2C_MasterSendTxData@data stored from wreg
  4443     0302  00F7               	movwf	I2C_MasterSendTxData@data
  4444     0303                     i1l2043:
  4445                           
  4446                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  4447     0303  0877               	movf	I2C_MasterSendTxData@data,w
  4448     0304  0024               	movlb	4	; select bank4
  4449     0305  0091               	movwf	17	;volatile
  4450     0306                     i1l350:
  4451     0306  0008               	return
  4452     0307                     __end_of_I2C_MasterSendTxData:
  4453                           
  4454                           	psect	text35
  4455     030F                     __ptext35:	
  4456 ;; *************** function _I2C_MasterSendAck *****************
  4457 ;; Defined at:
  4458 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		None
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4472 ;;      Params:         0       0       0       0       0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0
  4475 ;;      Totals:         0       0       0       0       0       0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_I2C_DO_RX
  4482 ;;		_I2C_DO_RX_ACK
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     030F                     _I2C_MasterSendAck:	
  4487                           ;psect for function _I2C_MasterSendAck
  4488                           
  4489     030F                     i1l2067:	
  4490                           ;incstack = 0
  4491                           ; Regs used in _I2C_MasterSendAck: []
  4492                           
  4493                           
  4494                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  4495     030F  0024               	movlb	4	; select bank4
  4496     0310  1296               	bcf	22,5	;volatile
  4497                           
  4498                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  4499     0311  1616               	bsf	22,4	;volatile
  4500     0312                     i1l371:
  4501     0312  0008               	return
  4502     0313                     __end_of_I2C_MasterSendAck:
  4503                           
  4504                           	psect	text36
  4505     0325                     __ptext36:	
  4506 ;; *************** function _I2C_MasterGetRxData *****************
  4507 ;; Defined at:
  4508 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      unsigned char 
  4515 ;; Registers used:
  4516 ;;		wreg
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4522 ;;      Params:         0       0       0       0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_I2C_DO_RX
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535     0325                     _I2C_MasterGetRxData:	
  4536                           ;psect for function _I2C_MasterGetRxData
  4537                           
  4538     0325                     i1l2063:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4541                           
  4542                           
  4543                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  4544     0325  0024               	movlb	4	; select bank4
  4545     0326  0811               	movf	17,w	;volatile
  4546     0327                     i1l347:
  4547     0327  0008               	return
  4548     0328                     __end_of_I2C_MasterGetRxData:
  4549                           
  4550                           	psect	text37
  4551     0313                     __ptext37:	
  4552 ;; *************** function _I2C_MasterSendNack *****************
  4553 ;; Defined at:
  4554 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		None
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4568 ;;      Params:         0       0       0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0       0
  4571 ;;      Totals:         0       0       0       0       0       0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_I2C_DO_RX_NACK_STOP
  4578 ;;		_I2C_DO_RX_NACK_RESTART
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582     0313                     _I2C_MasterSendNack:	
  4583                           ;psect for function _I2C_MasterSendNack
  4584                           
  4585     0313                     i1l2037:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _I2C_MasterSendNack: []
  4588                           
  4589                           
  4590                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  4591     0313  0024               	movlb	4	; select bank4
  4592     0314  1696               	bsf	22,5	;volatile
  4593                           
  4594                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  4595     0315  1616               	bsf	22,4	;volatile
  4596     0316                     i1l374:
  4597     0316  0008               	return
  4598     0317                     __end_of_I2C_MasterSendNack:
  4599                           
  4600                           	psect	text38
  4601     0328                     __ptext38:	
  4602 ;; *************** function _I2C_MasterStartRx *****************
  4603 ;; Defined at:
  4604 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		None
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4618 ;;      Params:         0       0       0       0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0
  4621 ;;      Totals:         0       0       0       0       0       0       0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_I2C_DO_RCEN
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631     0328                     _I2C_MasterStartRx:	
  4632                           ;psect for function _I2C_MasterStartRx
  4633                           
  4634     0328                     i1l2081:	
  4635                           ;incstack = 0
  4636                           ; Regs used in _I2C_MasterStartRx: []
  4637                           
  4638                           
  4639                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  4640     0328  0024               	movlb	4	; select bank4
  4641     0329  1596               	bsf	22,3	;volatile
  4642     032A                     i1l359:
  4643     032A  0008               	return
  4644     032B                     __end_of_I2C_MasterStartRx:
  4645                           
  4646                           	psect	text39
  4647     032B                     __ptext39:	
  4648 ;; *************** function _I2C_MasterStop *****************
  4649 ;; Defined at:
  4650 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		None
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4664 ;;      Params:         0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_I2C_DO_SEND_STOP
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677     032B                     _I2C_MasterStop:	
  4678                           ;psect for function _I2C_MasterStop
  4679                           
  4680     032B                     i1l2035:	
  4681                           ;incstack = 0
  4682                           ; Regs used in _I2C_MasterStop: []
  4683                           
  4684                           
  4685                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  4686     032B  0024               	movlb	4	; select bank4
  4687     032C  1516               	bsf	22,2	;volatile
  4688     032D                     i1l365:
  4689     032D  0008               	return
  4690     032E                     __end_of_I2C_MasterStop:
  4691                           
  4692                           	psect	text40
  4693     032E                     __ptext40:	
  4694 ;; *************** function _I2C_MasterEnableRestart *****************
  4695 ;; Defined at:
  4696 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		None
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4710 ;;      Params:         0       0       0       0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0
  4713 ;;      Totals:         0       0       0       0       0       0       0       0
  4714 ;;Total ram usage:        0 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_I2C_DO_SEND_RESTART_READ
  4720 ;;		_I2C_DO_SEND_RESTART_WRITE
  4721 ;;		_I2C_DO_SEND_RESTART
  4722 ;;		_I2C_DO_RX_EMPTY
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726     032E                     _I2C_MasterEnableRestart:	
  4727                           ;psect for function _I2C_MasterEnableRestart
  4728                           
  4729     032E                     i1l2033:	
  4730                           ;incstack = 0
  4731                           ; Regs used in _I2C_MasterEnableRestart: []
  4732                           
  4733                           
  4734                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  4735     032E  0024               	movlb	4	; select bank4
  4736     032F  1496               	bsf	22,1	;volatile
  4737     0330                     i1l353:
  4738     0330  0008               	return
  4739     0331                     __end_of_I2C_MasterEnableRestart:
  4740                           
  4741                           	psect	text41
  4742     0331                     __ptext41:	
  4743 ;; *************** function _I2C_CallbackReturnReset *****************
  4744 ;; Defined at:
  4745 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  funPtr          2    0[COMMON] PTR void 
  4748 ;;		 -> NULL(0), 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      enum E363
  4753 ;; Registers used:
  4754 ;;		wreg
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4760 ;;      Params:         2       0       0       0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_I2C_Open
  4770 ;;		_I2C_DO_TX
  4771 ;;		_I2C_DO_RX
  4772 ;;		_I2C_DO_TX_EMPTY
  4773 ;;		_I2C_DO_ADDRESS_NACK
  4774 ;;		_I2C_DO_RX_EMPTY
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778     0331                     _I2C_CallbackReturnReset:	
  4779                           ;psect for function _I2C_CallbackReturnReset
  4780                           
  4781     0331                     i1l2095:	
  4782                           ;incstack = 0
  4783                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  4784                           
  4785                           
  4786                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  4787     0331  3005               	movlw	5
  4788     0332                     i1l331:
  4789     0332  0008               	return
  4790     0333                     __end_of_I2C_CallbackReturnReset:
  4791                           
  4792                           	psect	text42
  4793     0333                     __ptext42:	
  4794 ;; *************** function _I2C_CallbackReturnStop *****************
  4795 ;; Defined at:
  4796 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  funPtr          2    0[COMMON] PTR void 
  4799 ;;		 -> NULL(0), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      enum E363
  4804 ;; Registers used:
  4805 ;;		wreg
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4811 ;;      Params:         2       0       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0
  4814 ;;      Totals:         2       0       0       0       0       0       0       0
  4815 ;;Total ram usage:        2 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_I2C_Open
  4821 ;;		_I2C_SetCallback
  4822 ;;		_I2C_DO_TX
  4823 ;;		_I2C_DO_RX
  4824 ;;		_I2C_DO_TX_EMPTY
  4825 ;;		_I2C_DO_ADDRESS_NACK
  4826 ;;		_I2C_DO_RX_EMPTY
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830     0333                     _I2C_CallbackReturnStop:	
  4831                           ;psect for function _I2C_CallbackReturnStop
  4832                           
  4833     0333                     i1l2091:	
  4834                           ;incstack = 0
  4835                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  4836                           
  4837                           
  4838                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  4839     0333  3001               	movlw	1
  4840     0334                     i1l328:
  4841     0334  0008               	return
  4842     0335                     __end_of_I2C_CallbackReturnStop:
  4843                           
  4844                           	psect	text43
  4845     021A                     __ptext43:	
  4846 ;; *************** function _EUSART_Transmit_ISR *****************
  4847 ;; Defined at:
  4848 ;;		line 197 in file "mcc_generated_files/eusart.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4862 ;;      Params:         0       0       0       0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0
  4864 ;;      Temps:          1       0       0       0       0       0       0       0
  4865 ;;      Totals:         1       0       0       0       0       0       0       0
  4866 ;;Total ram usage:        1 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_EUSART_Initialize
  4872 ;;		_INTERRUPT_InterruptManager
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876     021A                     _EUSART_Transmit_ISR:	
  4877                           ;psect for function _EUSART_Transmit_ISR
  4878                           
  4879     021A                     i1l2325:	
  4880                           ;incstack = 0
  4881                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4882                           
  4883                           
  4884                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4885     021A  3008               	movlw	8
  4886     021B  0274               	subwf	_eusartTxBufferRemaining,w	;volatile
  4887     021C  1803               	skipnc
  4888     021D  2A1F               	goto	u44_21
  4889     021E  2A20               	goto	u44_20
  4890     021F                     u44_21:
  4891     021F  2A37               	goto	i1l539
  4892     0220                     u44_20:
  4893     0220                     i1l2327:
  4894                           
  4895                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  4896     0220  0875               	movf	_eusartTxTail,w
  4897     0221  3E54               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4898     0222  0086               	movwf	6
  4899     0223  0187               	clrf	7
  4900     0224  0801               	movf	1,w
  4901     0225  0023               	movlb	3	; select bank3
  4902     0226  009A               	movwf	26	;volatile
  4903     0227                     i1l2329:
  4904     0227  3001               	movlw	1
  4905     0228  00F7               	movwf	??_EUSART_Transmit_ISR
  4906     0229  0877               	movf	??_EUSART_Transmit_ISR,w
  4907     022A  07F5               	addwf	_eusartTxTail,f	;volatile
  4908     022B                     i1l2331:
  4909                           
  4910                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4911     022B  3008               	movlw	8
  4912     022C  0275               	subwf	_eusartTxTail,w	;volatile
  4913     022D  1C03               	skipc
  4914     022E  2A30               	goto	u45_21
  4915     022F  2A31               	goto	u45_20
  4916     0230                     u45_21:
  4917     0230  2A32               	goto	i1l2335
  4918     0231                     u45_20:
  4919     0231                     i1l2333:
  4920                           
  4921                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  4922     0231  01F5               	clrf	_eusartTxTail	;volatile
  4923     0232                     i1l2335:
  4924                           
  4925                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  4926     0232  3001               	movlw	1
  4927     0233  00F7               	movwf	??_EUSART_Transmit_ISR
  4928     0234  0877               	movf	??_EUSART_Transmit_ISR,w
  4929     0235  07F4               	addwf	_eusartTxBufferRemaining,f	;volatile
  4930                           
  4931                           ;mcc_generated_files/eusart.c: 209:     }
  4932     0236  2A39               	goto	i1l542
  4933     0237                     i1l539:	
  4934                           ;mcc_generated_files/eusart.c: 210:     else
  4935                           
  4936                           
  4937                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  4938     0237  0021               	movlb	1	; select bank1
  4939     0238  1211               	bcf	17,4	;volatile
  4940     0239                     i1l542:
  4941     0239  0008               	return
  4942     023A                     __end_of_EUSART_Transmit_ISR:
  4943                           
  4944                           	psect	text44
  4945     0140                     __ptext44:	
  4946 ;; *************** function _EUSART_Receive_ISR *****************
  4947 ;; Defined at:
  4948 ;;		line 216 in file "mcc_generated_files/eusart.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4962 ;;      Params:         0       0       0       0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0
  4965 ;;      Totals:         0       0       0       0       0       0       0       0
  4966 ;;Total ram usage:        0 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 2
  4969 ;; This function calls:
  4970 ;;		NULL
  4971 ;;		_EUSART_DefaultErrorHandler
  4972 ;;		_EUSART_DefaultFramingErrorHandler
  4973 ;;		_EUSART_DefaultOverrunErrorHandler
  4974 ;;		_EUSART_RxDataHandler
  4975 ;; This function is called by:
  4976 ;;		_EUSART_Initialize
  4977 ;;		_INTERRUPT_InterruptManager
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981     0140                     _EUSART_Receive_ISR:	
  4982                           ;psect for function _EUSART_Receive_ISR
  4983                           
  4984     0140                     i1l2337:	
  4985                           ;incstack = 0
  4986                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4987                           
  4988                           
  4989                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4990     0140  0873               	movf	_eusartRxHead,w	;volatile
  4991     0141  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4992     0142  0086               	movwf	6
  4993     0143  0187               	clrf	7
  4994     0144  0181               	clrf	1
  4995     0145                     i1l2339:
  4996                           
  4997                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  4998     0145  0023               	movlb	3	; select bank3
  4999     0146  1D1D               	btfss	29,2	;volatile
  5000     0147  2949               	goto	u46_21
  5001     0148  294A               	goto	u46_20
  5002     0149                     u46_21:
  5003     0149  2955               	goto	i1l2345
  5004     014A                     u46_20:
  5005     014A                     i1l2341:
  5006                           
  5007                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5008     014A  0873               	movf	_eusartRxHead,w	;volatile
  5009     014B  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5010     014C  0086               	movwf	6
  5011     014D  0187               	clrf	7
  5012     014E  1481               	bsf	1,1
  5013     014F                     i1l2343:
  5014                           
  5015                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5016     014F  0020               	movlb	0	; select bank0
  5017     0150  0867               	movf	_EUSART_FramingErrorHandler+1,w
  5018     0151  008A               	movwf	10
  5019     0152  0866               	movf	_EUSART_FramingErrorHandler,w
  5020     0153  000A               	callw
  5021     0154  3181               	pagesel	$
  5022     0155                     i1l2345:
  5023                           
  5024                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5025     0155  0023               	movlb	3	; select bank3
  5026     0156  1C9D               	btfss	29,1	;volatile
  5027     0157  2959               	goto	u47_21
  5028     0158  295A               	goto	u47_20
  5029     0159                     u47_21:
  5030     0159  2965               	goto	i1l2351
  5031     015A                     u47_20:
  5032     015A                     i1l2347:
  5033                           
  5034                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5035     015A  0873               	movf	_eusartRxHead,w	;volatile
  5036     015B  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5037     015C  0086               	movwf	6
  5038     015D  0187               	clrf	7
  5039     015E  1501               	bsf	1,2
  5040     015F                     i1l2349:
  5041                           
  5042                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5043     015F  0020               	movlb	0	; select bank0
  5044     0160  0865               	movf	_EUSART_OverrunErrorHandler+1,w
  5045     0161  008A               	movwf	10
  5046     0162  0864               	movf	_EUSART_OverrunErrorHandler,w
  5047     0163  000A               	callw
  5048     0164  3181               	pagesel	$
  5049     0165                     i1l2351:
  5050                           
  5051                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5052     0165  0873               	movf	_eusartRxHead,w	;volatile
  5053     0166  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5054     0167  0086               	movwf	6
  5055     0168  0187               	clrf	7
  5056     0169  0801               	movf	1,w
  5057     016A  1903               	btfsc	3,2
  5058     016B  296D               	goto	u48_21
  5059     016C  296E               	goto	u48_20
  5060     016D                     u48_21:
  5061     016D  2975               	goto	i1l2355
  5062     016E                     u48_20:
  5063     016E                     i1l2353:
  5064                           
  5065                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5066     016E  0020               	movlb	0	; select bank0
  5067     016F  0863               	movf	_EUSART_ErrorHandler+1,w
  5068     0170  008A               	movwf	10
  5069     0171  0862               	movf	_EUSART_ErrorHandler,w
  5070     0172  000A               	callw
  5071     0173  3181               	pagesel	$
  5072                           
  5073                           ;mcc_generated_files/eusart.c: 233:     } else {
  5074     0174  2978               	goto	i1l549
  5075     0175                     i1l2355:
  5076                           
  5077                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5078     0175  3182  2256  3181   	fcall	_EUSART_RxDataHandler
  5079     0178                     i1l549:
  5080     0178  0008               	return
  5081     0179                     __end_of_EUSART_Receive_ISR:
  5082                           
  5083                           	psect	text45
  5084     0317                     __ptext45:	
  5085 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5086 ;; Defined at:
  5087 ;;		line 252 in file "mcc_generated_files/eusart.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		None
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5101 ;;      Params:         0       0       0       0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_EUSART_Initialize
  5111 ;;		_EUSART_Receive_ISR
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115     0317                     _EUSART_DefaultOverrunErrorHandler:	
  5116                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5117                           
  5118     0317                     i1l2317:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5121                           
  5122                           
  5123                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  5124     0317  0023               	movlb	3	; select bank3
  5125     0318  121D               	bcf	29,4	;volatile
  5126                           
  5127                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  5128     0319  161D               	bsf	29,4	;volatile
  5129     031A                     i1l559:
  5130     031A  0008               	return
  5131     031B                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5132                           
  5133                           	psect	text46
  5134     0335                     __ptext46:	
  5135 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5136 ;; Defined at:
  5137 ;;		line 250 in file "mcc_generated_files/eusart.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		None
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5151 ;;      Params:         0       0       0       0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_EUSART_Initialize
  5161 ;;		_EUSART_Receive_ISR
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165     0335                     _EUSART_DefaultFramingErrorHandler:	
  5166                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5167                           
  5168     0335                     i1l556:	
  5169                           ;incstack = 0
  5170                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5171                           
  5172     0335  0008               	return
  5173     0336                     __end_of_EUSART_DefaultFramingErrorHandler:
  5174                           
  5175                           	psect	text47
  5176     031B                     __ptext47:	
  5177 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5178 ;; Defined at:
  5179 ;;		line 260 in file "mcc_generated_files/eusart.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5193 ;;      Params:         0       0       0       0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 1
  5200 ;; This function calls:
  5201 ;;		_EUSART_RxDataHandler
  5202 ;; This function is called by:
  5203 ;;		_EUSART_Initialize
  5204 ;;		_EUSART_Receive_ISR
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208     031B                     _EUSART_DefaultErrorHandler:	
  5209                           ;psect for function _EUSART_DefaultErrorHandler
  5210                           
  5211     031B                     i1l2319:	
  5212                           ;incstack = 0
  5213                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5214                           
  5215                           
  5216                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  5217     031B  3182  2256  3183   	fcall	_EUSART_RxDataHandler
  5218     031E                     i1l562:
  5219     031E  0008               	return
  5220     031F                     __end_of_EUSART_DefaultErrorHandler:
  5221                           
  5222                           	psect	text48
  5223     0256                     __ptext48:	
  5224 ;; *************** function _EUSART_RxDataHandler *****************
  5225 ;; Defined at:
  5226 ;;		line 240 in file "mcc_generated_files/eusart.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5240 ;;      Params:         0       0       0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0
  5242 ;;      Temps:          1       0       0       0       0       0       0       0
  5243 ;;      Totals:         1       0       0       0       0       0       0       0
  5244 ;;Total ram usage:        1 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_EUSART_Receive_ISR
  5250 ;;		_EUSART_DefaultErrorHandler
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254     0256                     _EUSART_RxDataHandler:	
  5255                           ;psect for function _EUSART_RxDataHandler
  5256                           
  5257     0256                     i1l2265:	
  5258                           ;incstack = 0
  5259                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5260                           
  5261                           
  5262                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5263     0256  0873               	movf	_eusartRxHead,w
  5264     0257  3E4C               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5265     0258  0086               	movwf	6
  5266     0259  0187               	clrf	7
  5267     025A  0023               	movlb	3	; select bank3
  5268     025B  0819               	movf	25,w	;volatile
  5269     025C  0081               	movwf	1
  5270     025D                     i1l2267:
  5271     025D  3001               	movlw	1
  5272     025E  00F7               	movwf	??_EUSART_RxDataHandler
  5273     025F  0877               	movf	??_EUSART_RxDataHandler,w
  5274     0260  07F3               	addwf	_eusartRxHead,f	;volatile
  5275     0261                     i1l2269:
  5276                           
  5277                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5278     0261  3008               	movlw	8
  5279     0262  0273               	subwf	_eusartRxHead,w	;volatile
  5280     0263  1C03               	skipc
  5281     0264  2A66               	goto	u41_21
  5282     0265  2A67               	goto	u41_20
  5283     0266                     u41_21:
  5284     0266  2A68               	goto	i1l2273
  5285     0267                     u41_20:
  5286     0267                     i1l2271:
  5287                           
  5288                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  5289     0267  01F3               	clrf	_eusartRxHead	;volatile
  5290     0268                     i1l2273:
  5291                           
  5292                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  5293     0268  3001               	movlw	1
  5294     0269  00F7               	movwf	??_EUSART_RxDataHandler
  5295     026A  0877               	movf	??_EUSART_RxDataHandler,w
  5296     026B  07F1               	addwf	_eusartRxCount,f	;volatile
  5297     026C                     i1l553:
  5298     026C  0008               	return
  5299     026D                     __end_of_EUSART_RxDataHandler:
  5300     007E                     btemp	set	126	;btemp
  5301     007E                     int$flags	set	126
  5302     007E                     wtemp0	set	126
  5303                           
  5304                           	psect	idloc
  5305                           
  5306                           ;Config register IDLOC0 @ 0x8000
  5307                           ;	unspecified, using default values
  5308     8000                     	org	32768
  5309     8000  3FFF               	dw	16383
  5310                           
  5311                           ;Config register IDLOC1 @ 0x8001
  5312                           ;	unspecified, using default values
  5313     8001                     	org	32769
  5314     8001  3FFF               	dw	16383
  5315                           
  5316                           ;Config register IDLOC2 @ 0x8002
  5317                           ;	unspecified, using default values
  5318     8002                     	org	32770
  5319     8002  3FFF               	dw	16383
  5320                           
  5321                           ;Config register IDLOC3 @ 0x8003
  5322                           ;	unspecified, using default values
  5323     8003                     	org	32771
  5324     8003  3FFF               	dw	16383
  5325                           
  5326                           	psect	config
  5327                           
  5328                           ;Config register CONFIG1 @ 0x8007
  5329                           ;	Oscillator Selection
  5330                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5331                           ;	Watchdog Timer Enable
  5332                           ;	WDTE = OFF, WDT disabled
  5333                           ;	Power-up Timer Enable
  5334                           ;	PWRTE = OFF, PWRT disabled
  5335                           ;	MCLR Pin Function Select
  5336                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5337                           ;	Flash Program Memory Code Protection
  5338                           ;	CP = OFF, Program memory code protection is disabled
  5339                           ;	Data Memory Code Protection
  5340                           ;	CPD = OFF, Data memory code protection is disabled
  5341                           ;	Brown-out Reset Enable
  5342                           ;	BOREN = ON, Brown-out Reset enabled
  5343                           ;	Clock Out Enable
  5344                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5345                           ;	Internal/External Switchover
  5346                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5347                           ;	Fail-Safe Clock Monitor Enable
  5348                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5349     8007                     	org	32775
  5350     8007  3FE4               	dw	16356
  5351                           
  5352                           ;Config register CONFIG2 @ 0x8008
  5353                           ;	Flash Memory Self-Write Protection
  5354                           ;	WRT = OFF, Write protection off
  5355                           ;	Voltage Regulator Capacitor Enable
  5356                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5357                           ;	PLL Enable
  5358                           ;	PLLEN = OFF, 4x PLL disabled
  5359                           ;	Stack Overflow/Underflow Reset Enable
  5360                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5361                           ;	Brown-out Reset Voltage Selection
  5362                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5363                           ;	Low-Voltage Programming Enable
  5364                           ;	LVP = ON, Low-voltage programming enabled
  5365     8008                     	org	32776
  5366     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         73
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2      78
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_MasterFsm$1874	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    NULL$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    S198$data_ptr	PTR unsigned char  size(2) Largest target is 0

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 0

    S198$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     605
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1126
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0    1126
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0    1126
                                              3 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0     287
                                              1 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Apr 07 22:10:21 2023

                ?_EUSART_SetRxInterruptHandler 006C                         ??_I2C_DO_SEND_ADR_READ 0077  
                      ??_I2C_DO_SEND_ADR_WRITE 0078                                    _SSPSTATbits 0214  
                                           l31 0255                                             l60 029D  
                                           l63 030A                                             l57 027C  
                        ??_I2C_DO_SEND_RESTART 0077                                            l172 0285  
                                          l508 013F                                            l571 02CE  
                                          l565 02C8                                            l574 02B6  
                                          l568 02C2                                            l577 02BC  
                                          l586 02AE                                            l587 02AE  
                       ??_EUSART_RxDataHandler 0077                 ?_EUSART_SetFramingErrorHandler 006C  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 0079  
                                 _I2C_DO_RESET 02D5                                           l2601 023E  
                                         l2611 0249                                           l2603 0240  
                                         l2621 0253                                           l2613 024C  
                                         l2605 0243                                           l2623 027D  
                                         l2631 0297                                           l2615 024E  
                                         l2607 0245                                           l2641 0101  
                                         l2625 027F                                           l2633 029A  
                                         l2617 0250                                           l2609 0247  
                                         l2651 011A                                           l2643 0109  
                                         l2627 0281                                           l2635 029B  
                                         l2619 0251                                           l2661 0138  
                                         l2653 011C                                           l2645 0113  
                                         l2629 0284                                           l2637 0307  
                                         l2591 02B1                                           l2663 013A  
                                         l2655 011D                                           l2647 0116  
                                         l2639 00FF                                           l2671 026D  
                                         l2593 02C3                                           l2665 013B  
                                         l2657 0125                                           l2649 0118  
                                         l2673 02AB                                           l2595 02BD  
                                         l2667 013C                                           l2659 012D  
                                         l2597 02C9                                           l2589 02B7  
                                         l2669 013D                                           l2599 023A  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATE 0110  
                                         _WPUB 020D                                           _WPUE 0210  
                                         _main 02AB                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0047  
                                _I2C_DO_RX_ACK 02E4                  __end_of_OSCILLATOR_Initialize 029E  
                                        ?_main 0077                                          i1l302 02ED  
                                        i1l311 02DE                                          i1l232 0301  
                                        i1l320 01D1                                          i1l241 0094  
                                        i1l305 02E8                                          i1l225 030E  
                                        i1l314 02D9                                          i1l331 0332  
                                        i1l235 028E                                          i1l244 00B3  
                                        i1l308 02E3                                          i1l229 01F9  
                                        i1l350 0306                                          i1l238 0296  
                                        i1l328 0334                                          i1l424 001A  
                                        i1l353 0330                                          i1l257 00D6  
                                        i1l433 0045                                          i1l258 00FE  
                                        i1l426 002A                                          i1l347 0327  
                                        i1l371 0312                                          i1l275 01A7  
                                        i1l427 0045                                          i1l428 003A  
                                        i1l365 032D                                          i1l269 02A4  
                                        i1l293 02FC                                          i1l542 0239  
                                        i1l374 0316                                          i1l359 032A  
                                        i1l368 02D4                                          i1l296 02F7  
                                        i1l392 0321                                          i1l553 026C  
                                        i1l562 031E                                          i1l539 0237  
                                        i1l395 0324                                          i1l299 02F2  
                                        i1l556 0335                                          i1l549 0178  
                                        i1l559 031A                                          _RCREG 0199  
                                        _RCSTA 019D                                          u40_20 00D1  
                                        u40_21 00D0                                          u41_20 0267  
                                        u41_21 0266                                          u42_20 01DA  
                                        u42_21 01D9                                          u43_20 01E2  
                                        u43_21 01E1                                          u44_20 0220  
                                        u60_20 003F                                          u44_21 021F  
                                        u60_21 003E                                          u45_20 0231  
                                        u61_20 0044                                          u53_20 000A  
                                        u45_21 0230                                          u61_21 0043  
                                        u53_21 0009                                          u46_20 014A  
                                        u38_20 0064                                          u54_20 000F  
                                        u46_21 0149                                          u38_21 0063  
                                        u54_21 000E                                          u47_20 015A  
                                        u39_20 00B0                                          u55_20 0014  
                                        u47_21 0159                                          u39_21 00AF  
                                        u55_21 0013                                          u48_20 016E  
                                        u56_20 001F                                          u48_21 016D  
                                        u56_21 001E                                          u57_20 0024  
                            ??_I2C_DO_TX_EMPTY 0077                                          u57_21 0023  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u58_20 002F                                          u58_21 002E  
                                        u59_20 0034                                          u59_21 0033  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 00FF                              __end_of_I2C_DO_TX 00B4  
                               _WDT_Initialize 0307                        _I2C_MasterEnableRestart 032E  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0077  
                           ??_I2C_DO_SEND_STOP 0077                                __initialization 0049  
                                 __end_of_main 02B1                      ?_I2C_DO_SEND_RESTART_READ 0077  
                               ?_I2C_DO_RX_ACK 0077                    ?_INTERRUPT_InterruptManager 0077  
               ??_EUSART_SetRxInterruptHandler 006E                                         ??_main 006E  
                            ?_I2C_MasterIsNack 0077                              ?_I2C_MasterSetIrq 0077  
                           ??_I2C_MasterIsNack 0077                         __end_of_WDT_Initialize 030B  
                           ??_I2C_MasterSetIrq 0077      __end_of_EUSART_DefaultFramingErrorHandler 0336  
          ??_EUSART_DefaultFramingErrorHandler 0077             ?_EUSART_DefaultFramingErrorHandler 0077  
            _EUSART_DefaultFramingErrorHandler 0335                     _EUSART_OverrunErrorHandler 0064  
              __end_of_I2C_CallbackReturnReset 0333                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l2101 02FD  
                                       i1l2103 02FF                                         i1l2111 0288  
                                       i1l2033 032E                                         i1l2105 0300  
                                       i1l2113 028D                                         i1l2121 0295  
                                       i1l2035 032B                                         i1l2043 0303  
                                       i1l2203 0180                                         i1l2051 02F3  
                                       i1l2037 0313                                         i1l2205 0183  
                                       i1l2109 0286                                         i1l2117 028F  
                                       i1l2133 0069                                         i1l2125 005C  
                                       i1l2045 02F8                                         i1l2053 02F6  
                                       i1l2221 02E4                                         i1l2063 0325  
                                       i1l2039 02CF                                         i1l2215 0189  
                                       i1l2119 0291                                         i1l2151 00B2  
                                       i1l2143 0071                                         i1l2047 02FB  
                                       i1l2223 02E7                                         i1l2071 02DD  
                                       i1l2231 02D8                                         i1l2311 01DA  
                                       i1l2081 0328                                         i1l2209 0185  
                                       i1l2145 0096                                         i1l2137 006D  
                                       i1l2129 0065                                         i1l2161 00C2  
                                       i1l2057 02E9                                         i1l2313 01E2  
                                       i1l2331 022B                                         i1l2091 0333  
                                       i1l2067 030F                                         i1l2147 00A5  
                                       i1l2163 00C7                                         i1l2083 02EE  
                                       i1l2059 02EC                                         i1l2075 02DF  
                                       i1l2227 02D5                                         i1l2243 01B1  
                                       i1l2235 01A8                                         i1l2315 01E5  
                                       i1l2307 01D2                                         i1l2323 030B  
                                       i1l2317 0317                                         i1l2341 014A  
                                       i1l2333 0231                                         i1l2325 021A  
                                       i1l2149 00B0                                         i1l2173 00D8  
                                       i1l2165 00D1                                         i1l2085 02F1  
                                       i1l2077 02E2                                         i1l2069 02DA  
                                       i1l2229 02D7                                         i1l2237 01AA  
                                       i1l2309 01D5                                         i1l2271 0267  
                                       i1l2319 031B                                         i1l2351 0165  
                                       i1l2343 014F                                         i1l2335 0232  
                                       i1l2327 0220                                         i1l2095 0331  
                                       i1l2183 00E0                                         i1l2167 00D4  
                                       i1l2159 00B4                                         i1l2191 02A0  
                                       i1l2239 01AD                                         i1l2273 0268  
                                       i1l2265 0256                                         i1l2353 016E  
                                       i1l2345 0155                                         i1l2337 0140  
                                       i1l2329 0227                                         i1l2089 0322  
                                       i1l2177 00DC                                         i1l2193 02A3  
                                       i1l2249 01B5                                         i1l2267 025D  
                                       i1l2355 0175                                         i1l2347 015A  
                                       i1l2339 0145                                         i1l2099 031F  
                                       i1l2451 000A                                         i1l2269 0261  
                                       i1l2349 015F                                         i1l2197 0179  
                                       i1l2189 029E                                         i1l2461 002F  
                                       i1l2453 000F                                         i1l2199 017C  
                                       i1l2463 0034                                         i1l2455 0014  
                                       i1l2465 003F                                         i1l2457 001F  
                                       i1l2449 0006                                         i1l2459 0024  
                                       i1l2761 0199                                         i1l2755 01C9  
                                       i1l2757 00F0                                         i1l2759 0086  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 0325                                  _I2C_MasterFsm 01D2  
                                _I2C_MasterIsr 030B                            _EUSART_Transmit_ISR 021A  
                          _I2C_DO_ADDRESS_NACK 01A8                           ?_I2C_MasterGetRxData 0077  
                              ?_WDT_Initialize 0077                      ??_I2C_MasterEnableRestart 0077  
                         ?_EUSART_Transmit_ISR 0077                              _SYSTEM_Initialize 026D  
                      __end_of__initialization 0058                             ?_SYSTEM_Initialize 0077  
                         ?_I2C_DO_ADDRESS_NACK 0077           __end_of_EUSART_SetTxInterruptHandler 02B7  
                 _EUSART_SetTxInterruptHandler 02B1                                 __pcstackCOMMON 0077  
                               ?_I2C_MasterFsm 0077                                 ?_I2C_MasterIsr 0077  
                              ??_I2C_DO_RX_ACK 0077                         _I2C_CallbackReturnStop 0333  
                          ??_SYSTEM_Initialize 006E                  __end_of_I2C_DO_SEND_ADR_WRITE 0297  
                   ?_I2C_DO_SEND_RESTART_WRITE 0077                          ??_I2C_MasterGetRxData 0077  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0044  
                   __end_of_I2C_MasterClearIrq 0322                ??_EUSART_SetOverrunErrorHandler 006E  
                    __end_of_SYSTEM_Initialize 027D                          ??_EUSART_Transmit_ISR 0077  
                            _I2C_MasterSendAck 030F                                     __pbssBANK0 0020  
                                ??_I2C_DO_IDLE 0077                                  ??_I2C_DO_RCEN 0077  
                 __end_of_I2C_MasterSendTxData 0307                             ?_I2C_MasterSendAck 0077  
                            _I2C_MasterStartRx 0328                          ??_I2C_DO_ADDRESS_NACK 0077  
                          _I2C_DO_RX_NACK_STOP 02DF                             ?_I2C_MasterStartRx 0077  
                   __end_of_I2C_MasterSendNack 0317                                     __pmaintext 02AB  
                          ??_I2C_MasterSendAck 0077                  ?_EUSART_SetTxInterruptHandler 006C  
             _EUSART_TxDefaultInterruptHandler 006A                    __end_of_I2C_DO_SEND_RESTART 02F3  
                              _I2C_DO_TX_EMPTY 0179                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0077                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0078                       ??_I2C_DO_RX_NACK_RESTART 0077  
            __end_of_I2C_DO_SEND_RESTART_WRITE 02F8                           ?_I2C_DO_RX_NACK_STOP 0077  
                                _eusartRxCount 0071                      __end_of_I2C_MasterSendAck 0313  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 006E  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 032B  
                                    _I2C_DO_RX 00B4                                      _I2C_DO_TX 005C  
             __end_of_I2C_DO_SEND_RESTART_READ 02FD                                ??_I2C_MasterFsm 007A  
                              ??_I2C_MasterIsr 007C                            __end_of_I2C_DO_IDLE 0302  
                          __end_of_I2C_DO_RCEN 02A5                                    _Temperature 005E  
                               _I2C_MasterStop 032B                                 _I2C_Initialize 027D  
                                      __ptext1 026D                                        __ptext2 0307  
                                      __ptext3 023A                                        __ptext4 0297  
                                      __ptext5 027D                                        __ptext6 00FF  
                                      __ptext7 02B1                                        __ptext8 02B7  
                                      __ptext9 02BD                          ??_I2C_DO_RX_NACK_STOP 0077  
                        _OSCILLATOR_Initialize 0297                       ??_PIN_MANAGER_Initialize 006C  
                I2C_CallbackReturnReset@funPtr 0077                                        clrloop0 02A6  
                         end_of_initialization 0058                                     ?_I2C_DO_RX 0077  
                                   ?_I2C_DO_TX 0077          __end_of_EUSART_SetOverrunErrorHandler 02C3  
                _EUSART_SetOverrunErrorHandler 02BD                        __end_of_I2C_DO_TX_EMPTY 01A8  
                            _EUSART_Initialize 00FF                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 032E  
                       __end_of_I2C_Initialize 0286                            ??_EUSART_Initialize 006E  
                             ??_WDT_Initialize 006C                 ??_EUSART_SetTxInterruptHandler 006E  
                         _I2C_MasterSendTxData 0302                      __end_of_EUSART_Initialize 0140  
                                  _I2C_DO_IDLE 02FD                                    _I2C_DO_RCEN 029E  
                                    _TXSTAbits 019E                        ?_I2C_CallbackReturnStop 0077  
                     _I2C_DO_SEND_RESTART_READ 02F8                   I2C_CallbackReturnStop@funPtr 0077  
                              ?_I2C_MasterStop 0077                                ?_I2C_Initialize 0077  
                      _I2C_CallbackReturnReset 0331             __end_of_EUSART_DefaultErrorHandler 031F  
                   _EUSART_DefaultErrorHandler 031B                          ?_I2C_MasterSendTxData 0077  
                       ?_OSCILLATOR_Initialize 0077                    ??_I2C_DO_SEND_RESTART_WRITE 0077  
                          start_initialization 0049                                  ?_I2C_DO_RESET 0077  
 EUSART_SetRxInterruptHandler@interruptHandler 006C   EUSART_SetTxInterruptHandler@interruptHandler 006C  
                                  ??_I2C_DO_RX 0077                                    ??_I2C_DO_TX 0078  
               __end_of_I2C_CallbackReturnStop 0335                         _I2C_DO_RX_NACK_RESTART 02DA  
                             ?_I2C_DO_TX_EMPTY 0077                             _I2C_MasterClearIrq 031F  
               ?_EUSART_SetOverrunErrorHandler 006C                     _EUSART_FramingErrorHandler 0066  
                       _EUSART_SetErrorHandler 02C9                            ?_I2C_MasterClearIrq 0077  
                  __end_of_I2C_MasterGetRxData 0328                          __end_of_I2C_DO_RX_ACK 02E9  
                             _I2C_DO_SEND_STOP 02E9                             _I2C_MasterSendNack 0313  
                     ?_I2C_MasterEnableRestart 0077                              _i2c_fsmStateTable 01FA  
                  __end_of_EUSART_Transmit_ISR 023A                          _I2C_DO_SEND_ADR_WRITE 028F  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 006C                                 ??_I2C_DO_RESET 0077  
                          ?_I2C_MasterSendNack 0077                   __end_of_I2C_DO_SEND_ADR_READ 028F  
                         ??_I2C_MasterClearIrq 0077                    __end_of_I2C_DO_ADDRESS_NACK 01D2  
                   __end_of_EUSART_Receive_ISR 0179                               _I2C_MasterIsNack 02CF  
                    _I2C_DO_SEND_RESTART_WRITE 02F3               _EUSART_RxDefaultInterruptHandler 0068  
                             _I2C_MasterSetIrq 0322                                      __pnvBANK0 0062  
                 __end_of_EUSART_RxDataHandler 026D                         _PIN_MANAGER_Initialize 023A  
                    ??_I2C_CallbackReturnReset 0079                           ??_I2C_MasterSendNack 0077  
                                 _eusartRxHead 0073                                   _eusartTxHead 0076  
                                 _eusartRxTail 0072                         ??_I2C_MasterSendTxData 0077  
                                 _eusartTxTail 0075                      __end_of_i2c_fsmStateTable 021A  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0074  
                               _eusartRxBuffer 004C                                 _eusartTxBuffer 0054  
       EUSART_SetErrorHandler@interruptHandler 006C                                      clear_ram0 02A5  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 006E                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 01FA                          __end_of_I2C_MasterIsr 030F  
                  __end_of_I2C_DO_RX_NACK_STOP 02E4      __end_of_EUSART_DefaultOverrunErrorHandler 031B  
          ??_EUSART_DefaultOverrunErrorHandler 0077             ?_EUSART_DefaultOverrunErrorHandler 0077  
            _EUSART_DefaultOverrunErrorHandler 0317                __end_of_I2C_MasterEnableRestart 0331  
                       ?_I2C_DO_SEND_ADR_WRITE 0077                       I2C_MasterSendTxData@data 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0077                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0077                                   ?_I2C_DO_RCEN 0077  
                                     _Humidity 005C                               ??_I2C_MasterStop 0077  
                             ??_I2C_Initialize 006C                           __end_of_I2C_DO_RESET 02DA  
                      ??_OSCILLATOR_Initialize 006C                            _EUSART_ErrorHandler 0062  
                         _I2C_DO_SEND_ADR_READ 0286                    ?_EUSART_DefaultErrorHandler 0077  
                         _EUSART_RxDataHandler 0256                                       __ptext10 02C3  
                                     __ptext11 02C9                                       __ptext20 02E4  
                                     __ptext21 02E9                                       __ptext13 030B  
                                     __ptext30 02FD                                       __ptext22 02EE  
                                     __ptext14 01D2                                       __ptext31 0179  
                                     __ptext23 02F3                                       __ptext15 031F  
                                     __ptext40 032E                                       __ptext32 0322  
                                     __ptext24 02F8                                       __ptext16 01A8  
                                     __ptext41 0331                                       __ptext33 02CF  
                                     __ptext25 029E                                       __ptext17 02D5  
                                     __ptext42 0333                                       __ptext34 0302  
                                     __ptext26 00B4                                       __ptext18 02DA  
                                     __ptext43 021A                                       __ptext35 030F  
                                     __ptext27 005C                                       __ptext19 02DF  
                                     __ptext44 0140                                       __ptext36 0325  
                                     __ptext28 028F                                       __ptext45 0317  
                                     __ptext37 0313                                       __ptext29 0286  
                                     __ptext46 0335                                       __ptext38 0328  
                                     __ptext47 031B                                       __ptext39 032B  
                                     __ptext48 0256                        ?_I2C_DO_RX_NACK_RESTART 0077  
                     __end_of_I2C_DO_SEND_STOP 02EE                        ?_EUSART_SetErrorHandler 006C  
EUSART_SetOverrunErrorHandler@interruptHandler 006C                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0077             __end_of_INTERRUPT_InterruptManager 0047  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 02C9  
                _EUSART_SetFramingErrorHandler 02C3                       __end_of_I2C_MasterIsNack 02D5  
                     __end_of_I2C_MasterSetIrq 0325                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0077                 __end_of_I2C_DO_RX_NACK_RESTART 02DF  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 02CF                            _I2C_DO_SEND_RESTART 02EE  
         __end_of_EUSART_SetRxInterruptHandler 02BD                   _EUSART_SetRxInterruptHandler 02B7  
                           _EUSART_Receive_ISR 0140  EUSART_SetFramingErrorHandler@interruptHandler 006C  
                                __pstringtext1 01FA                           ?_I2C_DO_SEND_RESTART 0077  
                          ?_EUSART_Receive_ISR 0077                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                 __end_of_PIN_MANAGER_Initialize 0256  
                         ??_EUSART_Receive_ISR 0078                          _MSSP_InterruptHandler 0060  
