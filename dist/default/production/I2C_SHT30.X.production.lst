

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 08 16:07:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1936 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     0010                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001C                     	;# 
   133     001E                     	;# 
   134     001F                     	;# 
   135     008C                     	;# 
   136     008D                     	;# 
   137     008E                     	;# 
   138     0090                     	;# 
   139     0091                     	;# 
   140     0092                     	;# 
   141     0093                     	;# 
   142     0095                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     010C                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     0110                     	;# 
   157     0111                     	;# 
   158     0112                     	;# 
   159     0113                     	;# 
   160     0114                     	;# 
   161     0115                     	;# 
   162     0116                     	;# 
   163     0117                     	;# 
   164     0118                     	;# 
   165     0119                     	;# 
   166     011A                     	;# 
   167     011B                     	;# 
   168     011D                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0191                     	;# 
   172     0191                     	;# 
   173     0192                     	;# 
   174     0193                     	;# 
   175     0193                     	;# 
   176     0193                     	;# 
   177     0194                     	;# 
   178     0195                     	;# 
   179     0196                     	;# 
   180     0199                     	;# 
   181     019A                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019B                     	;# 
   185     019B                     	;# 
   186     019C                     	;# 
   187     019C                     	;# 
   188     019D                     	;# 
   189     019E                     	;# 
   190     019F                     	;# 
   191     020D                     	;# 
   192     0210                     	;# 
   193     0211                     	;# 
   194     0212                     	;# 
   195     0213                     	;# 
   196     0214                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0291                     	;# 
   202     0291                     	;# 
   203     0292                     	;# 
   204     0293                     	;# 
   205     0294                     	;# 
   206     0295                     	;# 
   207     0295                     	;# 
   208     0296                     	;# 
   209     0298                     	;# 
   210     0298                     	;# 
   211     0299                     	;# 
   212     029A                     	;# 
   213     029B                     	;# 
   214     029C                     	;# 
   215     029C                     	;# 
   216     029D                     	;# 
   217     029E                     	;# 
   218     029F                     	;# 
   219     0311                     	;# 
   220     0311                     	;# 
   221     0312                     	;# 
   222     0313                     	;# 
   223     0314                     	;# 
   224     0315                     	;# 
   225     0315                     	;# 
   226     0316                     	;# 
   227     0318                     	;# 
   228     0318                     	;# 
   229     0319                     	;# 
   230     031A                     	;# 
   231     031C                     	;# 
   232     031C                     	;# 
   233     031D                     	;# 
   234     031E                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     0415                     	;# 
   239     0416                     	;# 
   240     0417                     	;# 
   241     041C                     	;# 
   242     041D                     	;# 
   243     041E                     	;# 
   244     0791                     	;# 
   245     0792                     	;# 
   246     0793                     	;# 
   247     0794                     	;# 
   248     0795                     	;# 
   249     0798                     	;# 
   250     0799                     	;# 
   251     07A0                     	;# 
   252     07A1                     	;# 
   253     07A3                     	;# 
   254     07A4                     	;# 
   255     07A6                     	;# 
   256     07A7                     	;# 
   257     07A9                     	;# 
   258     07AA                     	;# 
   259     0FE4                     	;# 
   260     0FE5                     	;# 
   261     0FE6                     	;# 
   262     0FE7                     	;# 
   263     0FE8                     	;# 
   264     0FE9                     	;# 
   265     0FEA                     	;# 
   266     0FEB                     	;# 
   267     0FED                     	;# 
   268     0FEE                     	;# 
   269     0FEF                     	;# 
   270     0000                     	;# 
   271     0001                     	;# 
   272     0002                     	;# 
   273     0003                     	;# 
   274     0004                     	;# 
   275     0005                     	;# 
   276     0006                     	;# 
   277     0007                     	;# 
   278     0008                     	;# 
   279     0009                     	;# 
   280     000A                     	;# 
   281     000B                     	;# 
   282     000C                     	;# 
   283     000D                     	;# 
   284     000E                     	;# 
   285     0010                     	;# 
   286     0011                     	;# 
   287     0012                     	;# 
   288     0013                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     008E                     	;# 
   303     0090                     	;# 
   304     0091                     	;# 
   305     0092                     	;# 
   306     0093                     	;# 
   307     0095                     	;# 
   308     0096                     	;# 
   309     0097                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009A                     	;# 
   313     009B                     	;# 
   314     009B                     	;# 
   315     009C                     	;# 
   316     009D                     	;# 
   317     009E                     	;# 
   318     010C                     	;# 
   319     010D                     	;# 
   320     010E                     	;# 
   321     0110                     	;# 
   322     0111                     	;# 
   323     0112                     	;# 
   324     0113                     	;# 
   325     0114                     	;# 
   326     0115                     	;# 
   327     0116                     	;# 
   328     0117                     	;# 
   329     0118                     	;# 
   330     0119                     	;# 
   331     011A                     	;# 
   332     011B                     	;# 
   333     011D                     	;# 
   334     018C                     	;# 
   335     018D                     	;# 
   336     0191                     	;# 
   337     0191                     	;# 
   338     0192                     	;# 
   339     0193                     	;# 
   340     0193                     	;# 
   341     0193                     	;# 
   342     0194                     	;# 
   343     0195                     	;# 
   344     0196                     	;# 
   345     0199                     	;# 
   346     019A                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019B                     	;# 
   350     019B                     	;# 
   351     019C                     	;# 
   352     019C                     	;# 
   353     019D                     	;# 
   354     019E                     	;# 
   355     019F                     	;# 
   356     020D                     	;# 
   357     0210                     	;# 
   358     0211                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0214                     	;# 
   362     0215                     	;# 
   363     0215                     	;# 
   364     0216                     	;# 
   365     0217                     	;# 
   366     0291                     	;# 
   367     0291                     	;# 
   368     0292                     	;# 
   369     0293                     	;# 
   370     0294                     	;# 
   371     0295                     	;# 
   372     0295                     	;# 
   373     0296                     	;# 
   374     0298                     	;# 
   375     0298                     	;# 
   376     0299                     	;# 
   377     029A                     	;# 
   378     029B                     	;# 
   379     029C                     	;# 
   380     029C                     	;# 
   381     029D                     	;# 
   382     029E                     	;# 
   383     029F                     	;# 
   384     0311                     	;# 
   385     0311                     	;# 
   386     0312                     	;# 
   387     0313                     	;# 
   388     0314                     	;# 
   389     0315                     	;# 
   390     0315                     	;# 
   391     0316                     	;# 
   392     0318                     	;# 
   393     0318                     	;# 
   394     0319                     	;# 
   395     031A                     	;# 
   396     031C                     	;# 
   397     031C                     	;# 
   398     031D                     	;# 
   399     031E                     	;# 
   400     0394                     	;# 
   401     0395                     	;# 
   402     0396                     	;# 
   403     0415                     	;# 
   404     0416                     	;# 
   405     0417                     	;# 
   406     041C                     	;# 
   407     041D                     	;# 
   408     041E                     	;# 
   409     0791                     	;# 
   410     0792                     	;# 
   411     0793                     	;# 
   412     0794                     	;# 
   413     0795                     	;# 
   414     0798                     	;# 
   415     0799                     	;# 
   416     07A0                     	;# 
   417     07A1                     	;# 
   418     07A3                     	;# 
   419     07A4                     	;# 
   420     07A6                     	;# 
   421     07A7                     	;# 
   422     07A9                     	;# 
   423     07AA                     	;# 
   424     0FE4                     	;# 
   425     0FE5                     	;# 
   426     0FE6                     	;# 
   427     0FE7                     	;# 
   428     0FE8                     	;# 
   429     0FE9                     	;# 
   430     0FEA                     	;# 
   431     0FEB                     	;# 
   432     0FED                     	;# 
   433     0FEE                     	;# 
   434     0FEF                     	;# 
   435     0000                     	;# 
   436     0001                     	;# 
   437     0002                     	;# 
   438     0003                     	;# 
   439     0004                     	;# 
   440     0005                     	;# 
   441     0006                     	;# 
   442     0007                     	;# 
   443     0008                     	;# 
   444     0009                     	;# 
   445     000A                     	;# 
   446     000B                     	;# 
   447     000C                     	;# 
   448     000D                     	;# 
   449     000E                     	;# 
   450     0010                     	;# 
   451     0011                     	;# 
   452     0012                     	;# 
   453     0013                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0016                     	;# 
   457     0017                     	;# 
   458     0018                     	;# 
   459     0019                     	;# 
   460     001A                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001E                     	;# 
   464     001F                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     008E                     	;# 
   468     0090                     	;# 
   469     0091                     	;# 
   470     0092                     	;# 
   471     0093                     	;# 
   472     0095                     	;# 
   473     0096                     	;# 
   474     0097                     	;# 
   475     0098                     	;# 
   476     0099                     	;# 
   477     009A                     	;# 
   478     009B                     	;# 
   479     009B                     	;# 
   480     009C                     	;# 
   481     009D                     	;# 
   482     009E                     	;# 
   483     010C                     	;# 
   484     010D                     	;# 
   485     010E                     	;# 
   486     0110                     	;# 
   487     0111                     	;# 
   488     0112                     	;# 
   489     0113                     	;# 
   490     0114                     	;# 
   491     0115                     	;# 
   492     0116                     	;# 
   493     0117                     	;# 
   494     0118                     	;# 
   495     0119                     	;# 
   496     011A                     	;# 
   497     011B                     	;# 
   498     011D                     	;# 
   499     018C                     	;# 
   500     018D                     	;# 
   501     0191                     	;# 
   502     0191                     	;# 
   503     0192                     	;# 
   504     0193                     	;# 
   505     0193                     	;# 
   506     0193                     	;# 
   507     0194                     	;# 
   508     0195                     	;# 
   509     0196                     	;# 
   510     0199                     	;# 
   511     019A                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019B                     	;# 
   516     019C                     	;# 
   517     019C                     	;# 
   518     019D                     	;# 
   519     019E                     	;# 
   520     019F                     	;# 
   521     020D                     	;# 
   522     0210                     	;# 
   523     0211                     	;# 
   524     0212                     	;# 
   525     0213                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0216                     	;# 
   530     0217                     	;# 
   531     0291                     	;# 
   532     0291                     	;# 
   533     0292                     	;# 
   534     0293                     	;# 
   535     0294                     	;# 
   536     0295                     	;# 
   537     0295                     	;# 
   538     0296                     	;# 
   539     0298                     	;# 
   540     0298                     	;# 
   541     0299                     	;# 
   542     029A                     	;# 
   543     029B                     	;# 
   544     029C                     	;# 
   545     029C                     	;# 
   546     029D                     	;# 
   547     029E                     	;# 
   548     029F                     	;# 
   549     0311                     	;# 
   550     0311                     	;# 
   551     0312                     	;# 
   552     0313                     	;# 
   553     0314                     	;# 
   554     0315                     	;# 
   555     0315                     	;# 
   556     0316                     	;# 
   557     0318                     	;# 
   558     0318                     	;# 
   559     0319                     	;# 
   560     031A                     	;# 
   561     031C                     	;# 
   562     031C                     	;# 
   563     031D                     	;# 
   564     031E                     	;# 
   565     0394                     	;# 
   566     0395                     	;# 
   567     0396                     	;# 
   568     0415                     	;# 
   569     0416                     	;# 
   570     0417                     	;# 
   571     041C                     	;# 
   572     041D                     	;# 
   573     041E                     	;# 
   574     0791                     	;# 
   575     0792                     	;# 
   576     0793                     	;# 
   577     0794                     	;# 
   578     0795                     	;# 
   579     0798                     	;# 
   580     0799                     	;# 
   581     07A0                     	;# 
   582     07A1                     	;# 
   583     07A3                     	;# 
   584     07A4                     	;# 
   585     07A6                     	;# 
   586     07A7                     	;# 
   587     07A9                     	;# 
   588     07AA                     	;# 
   589     0FE4                     	;# 
   590     0FE5                     	;# 
   591     0FE6                     	;# 
   592     0FE7                     	;# 
   593     0FE8                     	;# 
   594     0FE9                     	;# 
   595     0FEA                     	;# 
   596     0FEB                     	;# 
   597     0FED                     	;# 
   598     0FEE                     	;# 
   599     0FEF                     	;# 
   600     0000                     	;# 
   601     0001                     	;# 
   602     0002                     	;# 
   603     0003                     	;# 
   604     0004                     	;# 
   605     0005                     	;# 
   606     0006                     	;# 
   607     0007                     	;# 
   608     0008                     	;# 
   609     0009                     	;# 
   610     000A                     	;# 
   611     000B                     	;# 
   612     000C                     	;# 
   613     000D                     	;# 
   614     000E                     	;# 
   615     0010                     	;# 
   616     0011                     	;# 
   617     0012                     	;# 
   618     0013                     	;# 
   619     0015                     	;# 
   620     0016                     	;# 
   621     0016                     	;# 
   622     0017                     	;# 
   623     0018                     	;# 
   624     0019                     	;# 
   625     001A                     	;# 
   626     001B                     	;# 
   627     001C                     	;# 
   628     001E                     	;# 
   629     001F                     	;# 
   630     008C                     	;# 
   631     008D                     	;# 
   632     008E                     	;# 
   633     0090                     	;# 
   634     0091                     	;# 
   635     0092                     	;# 
   636     0093                     	;# 
   637     0095                     	;# 
   638     0096                     	;# 
   639     0097                     	;# 
   640     0098                     	;# 
   641     0099                     	;# 
   642     009A                     	;# 
   643     009B                     	;# 
   644     009B                     	;# 
   645     009C                     	;# 
   646     009D                     	;# 
   647     009E                     	;# 
   648     010C                     	;# 
   649     010D                     	;# 
   650     010E                     	;# 
   651     0110                     	;# 
   652     0111                     	;# 
   653     0112                     	;# 
   654     0113                     	;# 
   655     0114                     	;# 
   656     0115                     	;# 
   657     0116                     	;# 
   658     0117                     	;# 
   659     0118                     	;# 
   660     0119                     	;# 
   661     011A                     	;# 
   662     011B                     	;# 
   663     011D                     	;# 
   664     018C                     	;# 
   665     018D                     	;# 
   666     0191                     	;# 
   667     0191                     	;# 
   668     0192                     	;# 
   669     0193                     	;# 
   670     0193                     	;# 
   671     0193                     	;# 
   672     0194                     	;# 
   673     0195                     	;# 
   674     0196                     	;# 
   675     0199                     	;# 
   676     019A                     	;# 
   677     019B                     	;# 
   678     019B                     	;# 
   679     019B                     	;# 
   680     019B                     	;# 
   681     019C                     	;# 
   682     019C                     	;# 
   683     019D                     	;# 
   684     019E                     	;# 
   685     019F                     	;# 
   686     020D                     	;# 
   687     0210                     	;# 
   688     0211                     	;# 
   689     0212                     	;# 
   690     0213                     	;# 
   691     0214                     	;# 
   692     0215                     	;# 
   693     0215                     	;# 
   694     0216                     	;# 
   695     0217                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0295                     	;# 
   702     0295                     	;# 
   703     0296                     	;# 
   704     0298                     	;# 
   705     0298                     	;# 
   706     0299                     	;# 
   707     029A                     	;# 
   708     029B                     	;# 
   709     029C                     	;# 
   710     029C                     	;# 
   711     029D                     	;# 
   712     029E                     	;# 
   713     029F                     	;# 
   714     0311                     	;# 
   715     0311                     	;# 
   716     0312                     	;# 
   717     0313                     	;# 
   718     0314                     	;# 
   719     0315                     	;# 
   720     0315                     	;# 
   721     0316                     	;# 
   722     0318                     	;# 
   723     0318                     	;# 
   724     0319                     	;# 
   725     031A                     	;# 
   726     031C                     	;# 
   727     031C                     	;# 
   728     031D                     	;# 
   729     031E                     	;# 
   730     0394                     	;# 
   731     0395                     	;# 
   732     0396                     	;# 
   733     0415                     	;# 
   734     0416                     	;# 
   735     0417                     	;# 
   736     041C                     	;# 
   737     041D                     	;# 
   738     041E                     	;# 
   739     0791                     	;# 
   740     0792                     	;# 
   741     0793                     	;# 
   742     0794                     	;# 
   743     0795                     	;# 
   744     0798                     	;# 
   745     0799                     	;# 
   746     07A0                     	;# 
   747     07A1                     	;# 
   748     07A3                     	;# 
   749     07A4                     	;# 
   750     07A6                     	;# 
   751     07A7                     	;# 
   752     07A9                     	;# 
   753     07AA                     	;# 
   754     0FE4                     	;# 
   755     0FE5                     	;# 
   756     0FE6                     	;# 
   757     0FE7                     	;# 
   758     0FE8                     	;# 
   759     0FE9                     	;# 
   760     0FEA                     	;# 
   761     0FEB                     	;# 
   762     0FED                     	;# 
   763     0FEE                     	;# 
   764     0FEF                     	;# 
   765     0000                     	;# 
   766     0001                     	;# 
   767     0002                     	;# 
   768     0003                     	;# 
   769     0004                     	;# 
   770     0005                     	;# 
   771     0006                     	;# 
   772     0007                     	;# 
   773     0008                     	;# 
   774     0009                     	;# 
   775     000A                     	;# 
   776     000B                     	;# 
   777     000C                     	;# 
   778     000D                     	;# 
   779     000E                     	;# 
   780     0010                     	;# 
   781     0011                     	;# 
   782     0012                     	;# 
   783     0013                     	;# 
   784     0015                     	;# 
   785     0016                     	;# 
   786     0016                     	;# 
   787     0017                     	;# 
   788     0018                     	;# 
   789     0019                     	;# 
   790     001A                     	;# 
   791     001B                     	;# 
   792     001C                     	;# 
   793     001E                     	;# 
   794     001F                     	;# 
   795     008C                     	;# 
   796     008D                     	;# 
   797     008E                     	;# 
   798     0090                     	;# 
   799     0091                     	;# 
   800     0092                     	;# 
   801     0093                     	;# 
   802     0095                     	;# 
   803     0096                     	;# 
   804     0097                     	;# 
   805     0098                     	;# 
   806     0099                     	;# 
   807     009A                     	;# 
   808     009B                     	;# 
   809     009B                     	;# 
   810     009C                     	;# 
   811     009D                     	;# 
   812     009E                     	;# 
   813     010C                     	;# 
   814     010D                     	;# 
   815     010E                     	;# 
   816     0110                     	;# 
   817     0111                     	;# 
   818     0112                     	;# 
   819     0113                     	;# 
   820     0114                     	;# 
   821     0115                     	;# 
   822     0116                     	;# 
   823     0117                     	;# 
   824     0118                     	;# 
   825     0119                     	;# 
   826     011A                     	;# 
   827     011B                     	;# 
   828     011D                     	;# 
   829     018C                     	;# 
   830     018D                     	;# 
   831     0191                     	;# 
   832     0191                     	;# 
   833     0192                     	;# 
   834     0193                     	;# 
   835     0193                     	;# 
   836     0193                     	;# 
   837     0194                     	;# 
   838     0195                     	;# 
   839     0196                     	;# 
   840     0199                     	;# 
   841     019A                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019B                     	;# 
   845     019B                     	;# 
   846     019C                     	;# 
   847     019C                     	;# 
   848     019D                     	;# 
   849     019E                     	;# 
   850     019F                     	;# 
   851     020D                     	;# 
   852     0210                     	;# 
   853     0211                     	;# 
   854     0212                     	;# 
   855     0213                     	;# 
   856     0214                     	;# 
   857     0215                     	;# 
   858     0215                     	;# 
   859     0216                     	;# 
   860     0217                     	;# 
   861     0291                     	;# 
   862     0291                     	;# 
   863     0292                     	;# 
   864     0293                     	;# 
   865     0294                     	;# 
   866     0295                     	;# 
   867     0295                     	;# 
   868     0296                     	;# 
   869     0298                     	;# 
   870     0298                     	;# 
   871     0299                     	;# 
   872     029A                     	;# 
   873     029B                     	;# 
   874     029C                     	;# 
   875     029C                     	;# 
   876     029D                     	;# 
   877     029E                     	;# 
   878     029F                     	;# 
   879     0311                     	;# 
   880     0311                     	;# 
   881     0312                     	;# 
   882     0313                     	;# 
   883     0314                     	;# 
   884     0315                     	;# 
   885     0315                     	;# 
   886     0316                     	;# 
   887     0318                     	;# 
   888     0318                     	;# 
   889     0319                     	;# 
   890     031A                     	;# 
   891     031C                     	;# 
   892     031C                     	;# 
   893     031D                     	;# 
   894     031E                     	;# 
   895     0394                     	;# 
   896     0395                     	;# 
   897     0396                     	;# 
   898     0415                     	;# 
   899     0416                     	;# 
   900     0417                     	;# 
   901     041C                     	;# 
   902     041D                     	;# 
   903     041E                     	;# 
   904     0791                     	;# 
   905     0792                     	;# 
   906     0793                     	;# 
   907     0794                     	;# 
   908     0795                     	;# 
   909     0798                     	;# 
   910     0799                     	;# 
   911     07A0                     	;# 
   912     07A1                     	;# 
   913     07A3                     	;# 
   914     07A4                     	;# 
   915     07A6                     	;# 
   916     07A7                     	;# 
   917     07A9                     	;# 
   918     07AA                     	;# 
   919     0FE4                     	;# 
   920     0FE5                     	;# 
   921     0FE6                     	;# 
   922     0FE7                     	;# 
   923     0FE8                     	;# 
   924     0FE9                     	;# 
   925     0FEA                     	;# 
   926     0FEB                     	;# 
   927     0FED                     	;# 
   928     0FEE                     	;# 
   929     0FEF                     	;# 
   930     0000                     	;# 
   931     0001                     	;# 
   932     0002                     	;# 
   933     0003                     	;# 
   934     0004                     	;# 
   935     0005                     	;# 
   936     0006                     	;# 
   937     0007                     	;# 
   938     0008                     	;# 
   939     0009                     	;# 
   940     000A                     	;# 
   941     000B                     	;# 
   942     000C                     	;# 
   943     000D                     	;# 
   944     000E                     	;# 
   945     0010                     	;# 
   946     0011                     	;# 
   947     0012                     	;# 
   948     0013                     	;# 
   949     0015                     	;# 
   950     0016                     	;# 
   951     0016                     	;# 
   952     0017                     	;# 
   953     0018                     	;# 
   954     0019                     	;# 
   955     001A                     	;# 
   956     001B                     	;# 
   957     001C                     	;# 
   958     001E                     	;# 
   959     001F                     	;# 
   960     008C                     	;# 
   961     008D                     	;# 
   962     008E                     	;# 
   963     0090                     	;# 
   964     0091                     	;# 
   965     0092                     	;# 
   966     0093                     	;# 
   967     0095                     	;# 
   968     0096                     	;# 
   969     0097                     	;# 
   970     0098                     	;# 
   971     0099                     	;# 
   972     009A                     	;# 
   973     009B                     	;# 
   974     009B                     	;# 
   975     009C                     	;# 
   976     009D                     	;# 
   977     009E                     	;# 
   978     010C                     	;# 
   979     010D                     	;# 
   980     010E                     	;# 
   981     0110                     	;# 
   982     0111                     	;# 
   983     0112                     	;# 
   984     0113                     	;# 
   985     0114                     	;# 
   986     0115                     	;# 
   987     0116                     	;# 
   988     0117                     	;# 
   989     0118                     	;# 
   990     0119                     	;# 
   991     011A                     	;# 
   992     011B                     	;# 
   993     011D                     	;# 
   994     018C                     	;# 
   995     018D                     	;# 
   996     0191                     	;# 
   997     0191                     	;# 
   998     0192                     	;# 
   999     0193                     	;# 
  1000     0193                     	;# 
  1001     0193                     	;# 
  1002     0194                     	;# 
  1003     0195                     	;# 
  1004     0196                     	;# 
  1005     0199                     	;# 
  1006     019A                     	;# 
  1007     019B                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019B                     	;# 
  1011     019C                     	;# 
  1012     019C                     	;# 
  1013     019D                     	;# 
  1014     019E                     	;# 
  1015     019F                     	;# 
  1016     020D                     	;# 
  1017     0210                     	;# 
  1018     0211                     	;# 
  1019     0212                     	;# 
  1020     0213                     	;# 
  1021     0214                     	;# 
  1022     0215                     	;# 
  1023     0215                     	;# 
  1024     0216                     	;# 
  1025     0217                     	;# 
  1026     0291                     	;# 
  1027     0291                     	;# 
  1028     0292                     	;# 
  1029     0293                     	;# 
  1030     0294                     	;# 
  1031     0295                     	;# 
  1032     0295                     	;# 
  1033     0296                     	;# 
  1034     0298                     	;# 
  1035     0298                     	;# 
  1036     0299                     	;# 
  1037     029A                     	;# 
  1038     029B                     	;# 
  1039     029C                     	;# 
  1040     029C                     	;# 
  1041     029D                     	;# 
  1042     029E                     	;# 
  1043     029F                     	;# 
  1044     0311                     	;# 
  1045     0311                     	;# 
  1046     0312                     	;# 
  1047     0313                     	;# 
  1048     0314                     	;# 
  1049     0315                     	;# 
  1050     0315                     	;# 
  1051     0316                     	;# 
  1052     0318                     	;# 
  1053     0318                     	;# 
  1054     0319                     	;# 
  1055     031A                     	;# 
  1056     031C                     	;# 
  1057     031C                     	;# 
  1058     031D                     	;# 
  1059     031E                     	;# 
  1060     0394                     	;# 
  1061     0395                     	;# 
  1062     0396                     	;# 
  1063     0415                     	;# 
  1064     0416                     	;# 
  1065     0417                     	;# 
  1066     041C                     	;# 
  1067     041D                     	;# 
  1068     041E                     	;# 
  1069     0791                     	;# 
  1070     0792                     	;# 
  1071     0793                     	;# 
  1072     0794                     	;# 
  1073     0795                     	;# 
  1074     0798                     	;# 
  1075     0799                     	;# 
  1076     07A0                     	;# 
  1077     07A1                     	;# 
  1078     07A3                     	;# 
  1079     07A4                     	;# 
  1080     07A6                     	;# 
  1081     07A7                     	;# 
  1082     07A9                     	;# 
  1083     07AA                     	;# 
  1084     0FE4                     	;# 
  1085     0FE5                     	;# 
  1086     0FE6                     	;# 
  1087     0FE7                     	;# 
  1088     0FE8                     	;# 
  1089     0FE9                     	;# 
  1090     0FEA                     	;# 
  1091     0FEB                     	;# 
  1092     0FED                     	;# 
  1093     0FEE                     	;# 
  1094     0FEF                     	;# 
  1095     0000                     	;# 
  1096     0001                     	;# 
  1097     0002                     	;# 
  1098     0003                     	;# 
  1099     0004                     	;# 
  1100     0005                     	;# 
  1101     0006                     	;# 
  1102     0007                     	;# 
  1103     0008                     	;# 
  1104     0009                     	;# 
  1105     000A                     	;# 
  1106     000B                     	;# 
  1107     000C                     	;# 
  1108     000D                     	;# 
  1109     000E                     	;# 
  1110     0010                     	;# 
  1111     0011                     	;# 
  1112     0012                     	;# 
  1113     0013                     	;# 
  1114     0015                     	;# 
  1115     0016                     	;# 
  1116     0016                     	;# 
  1117     0017                     	;# 
  1118     0018                     	;# 
  1119     0019                     	;# 
  1120     001A                     	;# 
  1121     001B                     	;# 
  1122     001C                     	;# 
  1123     001E                     	;# 
  1124     001F                     	;# 
  1125     008C                     	;# 
  1126     008D                     	;# 
  1127     008E                     	;# 
  1128     0090                     	;# 
  1129     0091                     	;# 
  1130     0092                     	;# 
  1131     0093                     	;# 
  1132     0095                     	;# 
  1133     0096                     	;# 
  1134     0097                     	;# 
  1135     0098                     	;# 
  1136     0099                     	;# 
  1137     009A                     	;# 
  1138     009B                     	;# 
  1139     009B                     	;# 
  1140     009C                     	;# 
  1141     009D                     	;# 
  1142     009E                     	;# 
  1143     010C                     	;# 
  1144     010D                     	;# 
  1145     010E                     	;# 
  1146     0110                     	;# 
  1147     0111                     	;# 
  1148     0112                     	;# 
  1149     0113                     	;# 
  1150     0114                     	;# 
  1151     0115                     	;# 
  1152     0116                     	;# 
  1153     0117                     	;# 
  1154     0118                     	;# 
  1155     0119                     	;# 
  1156     011A                     	;# 
  1157     011B                     	;# 
  1158     011D                     	;# 
  1159     018C                     	;# 
  1160     018D                     	;# 
  1161     0191                     	;# 
  1162     0191                     	;# 
  1163     0192                     	;# 
  1164     0193                     	;# 
  1165     0193                     	;# 
  1166     0193                     	;# 
  1167     0194                     	;# 
  1168     0195                     	;# 
  1169     0196                     	;# 
  1170     0199                     	;# 
  1171     019A                     	;# 
  1172     019B                     	;# 
  1173     019B                     	;# 
  1174     019B                     	;# 
  1175     019B                     	;# 
  1176     019C                     	;# 
  1177     019C                     	;# 
  1178     019D                     	;# 
  1179     019E                     	;# 
  1180     019F                     	;# 
  1181     020D                     	;# 
  1182     0210                     	;# 
  1183     0211                     	;# 
  1184     0212                     	;# 
  1185     0213                     	;# 
  1186     0214                     	;# 
  1187     0215                     	;# 
  1188     0215                     	;# 
  1189     0216                     	;# 
  1190     0217                     	;# 
  1191     0291                     	;# 
  1192     0291                     	;# 
  1193     0292                     	;# 
  1194     0293                     	;# 
  1195     0294                     	;# 
  1196     0295                     	;# 
  1197     0295                     	;# 
  1198     0296                     	;# 
  1199     0298                     	;# 
  1200     0298                     	;# 
  1201     0299                     	;# 
  1202     029A                     	;# 
  1203     029B                     	;# 
  1204     029C                     	;# 
  1205     029C                     	;# 
  1206     029D                     	;# 
  1207     029E                     	;# 
  1208     029F                     	;# 
  1209     0311                     	;# 
  1210     0311                     	;# 
  1211     0312                     	;# 
  1212     0313                     	;# 
  1213     0314                     	;# 
  1214     0315                     	;# 
  1215     0315                     	;# 
  1216     0316                     	;# 
  1217     0318                     	;# 
  1218     0318                     	;# 
  1219     0319                     	;# 
  1220     031A                     	;# 
  1221     031C                     	;# 
  1222     031C                     	;# 
  1223     031D                     	;# 
  1224     031E                     	;# 
  1225     0394                     	;# 
  1226     0395                     	;# 
  1227     0396                     	;# 
  1228     0415                     	;# 
  1229     0416                     	;# 
  1230     0417                     	;# 
  1231     041C                     	;# 
  1232     041D                     	;# 
  1233     041E                     	;# 
  1234     0791                     	;# 
  1235     0792                     	;# 
  1236     0793                     	;# 
  1237     0794                     	;# 
  1238     0795                     	;# 
  1239     0798                     	;# 
  1240     0799                     	;# 
  1241     07A0                     	;# 
  1242     07A1                     	;# 
  1243     07A3                     	;# 
  1244     07A4                     	;# 
  1245     07A6                     	;# 
  1246     07A7                     	;# 
  1247     07A9                     	;# 
  1248     07AA                     	;# 
  1249     0FE4                     	;# 
  1250     0FE5                     	;# 
  1251     0FE6                     	;# 
  1252     0FE7                     	;# 
  1253     0FE8                     	;# 
  1254     0FE9                     	;# 
  1255     0FEA                     	;# 
  1256     0FEB                     	;# 
  1257     0FED                     	;# 
  1258     0FEE                     	;# 
  1259     0FEF                     	;# 
  1260     0000                     	;# 
  1261     0001                     	;# 
  1262     0002                     	;# 
  1263     0003                     	;# 
  1264     0004                     	;# 
  1265     0005                     	;# 
  1266     0006                     	;# 
  1267     0007                     	;# 
  1268     0008                     	;# 
  1269     0009                     	;# 
  1270     000A                     	;# 
  1271     000B                     	;# 
  1272     000C                     	;# 
  1273     000D                     	;# 
  1274     000E                     	;# 
  1275     0010                     	;# 
  1276     0011                     	;# 
  1277     0012                     	;# 
  1278     0013                     	;# 
  1279     0015                     	;# 
  1280     0016                     	;# 
  1281     0016                     	;# 
  1282     0017                     	;# 
  1283     0018                     	;# 
  1284     0019                     	;# 
  1285     001A                     	;# 
  1286     001B                     	;# 
  1287     001C                     	;# 
  1288     001E                     	;# 
  1289     001F                     	;# 
  1290     008C                     	;# 
  1291     008D                     	;# 
  1292     008E                     	;# 
  1293     0090                     	;# 
  1294     0091                     	;# 
  1295     0092                     	;# 
  1296     0093                     	;# 
  1297     0095                     	;# 
  1298     0096                     	;# 
  1299     0097                     	;# 
  1300     0098                     	;# 
  1301     0099                     	;# 
  1302     009A                     	;# 
  1303     009B                     	;# 
  1304     009B                     	;# 
  1305     009C                     	;# 
  1306     009D                     	;# 
  1307     009E                     	;# 
  1308     010C                     	;# 
  1309     010D                     	;# 
  1310     010E                     	;# 
  1311     0110                     	;# 
  1312     0111                     	;# 
  1313     0112                     	;# 
  1314     0113                     	;# 
  1315     0114                     	;# 
  1316     0115                     	;# 
  1317     0116                     	;# 
  1318     0117                     	;# 
  1319     0118                     	;# 
  1320     0119                     	;# 
  1321     011A                     	;# 
  1322     011B                     	;# 
  1323     011D                     	;# 
  1324     018C                     	;# 
  1325     018D                     	;# 
  1326     0191                     	;# 
  1327     0191                     	;# 
  1328     0192                     	;# 
  1329     0193                     	;# 
  1330     0193                     	;# 
  1331     0193                     	;# 
  1332     0194                     	;# 
  1333     0195                     	;# 
  1334     0196                     	;# 
  1335     0199                     	;# 
  1336     019A                     	;# 
  1337     019B                     	;# 
  1338     019B                     	;# 
  1339     019B                     	;# 
  1340     019B                     	;# 
  1341     019C                     	;# 
  1342     019C                     	;# 
  1343     019D                     	;# 
  1344     019E                     	;# 
  1345     019F                     	;# 
  1346     020D                     	;# 
  1347     0210                     	;# 
  1348     0211                     	;# 
  1349     0212                     	;# 
  1350     0213                     	;# 
  1351     0214                     	;# 
  1352     0215                     	;# 
  1353     0215                     	;# 
  1354     0216                     	;# 
  1355     0217                     	;# 
  1356     0291                     	;# 
  1357     0291                     	;# 
  1358     0292                     	;# 
  1359     0293                     	;# 
  1360     0294                     	;# 
  1361     0295                     	;# 
  1362     0295                     	;# 
  1363     0296                     	;# 
  1364     0298                     	;# 
  1365     0298                     	;# 
  1366     0299                     	;# 
  1367     029A                     	;# 
  1368     029B                     	;# 
  1369     029C                     	;# 
  1370     029C                     	;# 
  1371     029D                     	;# 
  1372     029E                     	;# 
  1373     029F                     	;# 
  1374     0311                     	;# 
  1375     0311                     	;# 
  1376     0312                     	;# 
  1377     0313                     	;# 
  1378     0314                     	;# 
  1379     0315                     	;# 
  1380     0315                     	;# 
  1381     0316                     	;# 
  1382     0318                     	;# 
  1383     0318                     	;# 
  1384     0319                     	;# 
  1385     031A                     	;# 
  1386     031C                     	;# 
  1387     031C                     	;# 
  1388     031D                     	;# 
  1389     031E                     	;# 
  1390     0394                     	;# 
  1391     0395                     	;# 
  1392     0396                     	;# 
  1393     0415                     	;# 
  1394     0416                     	;# 
  1395     0417                     	;# 
  1396     041C                     	;# 
  1397     041D                     	;# 
  1398     041E                     	;# 
  1399     0791                     	;# 
  1400     0792                     	;# 
  1401     0793                     	;# 
  1402     0794                     	;# 
  1403     0795                     	;# 
  1404     0798                     	;# 
  1405     0799                     	;# 
  1406     07A0                     	;# 
  1407     07A1                     	;# 
  1408     07A3                     	;# 
  1409     07A4                     	;# 
  1410     07A6                     	;# 
  1411     07A7                     	;# 
  1412     07A9                     	;# 
  1413     07AA                     	;# 
  1414     0FE4                     	;# 
  1415     0FE5                     	;# 
  1416     0FE6                     	;# 
  1417     0FE7                     	;# 
  1418     0FE8                     	;# 
  1419     0FE9                     	;# 
  1420     0FEA                     	;# 
  1421     0FEB                     	;# 
  1422     0FED                     	;# 
  1423     0FEE                     	;# 
  1424     0FEF                     	;# 
  1425                           
  1426                           	psect	idataBANK0
  1427     0288                     __pidataBANK0:
  1428                           
  1429                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  1430     0288  3416               	retlw	22
  1431     0289  3424               	retlw	36
  1432                           
  1433                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  1434     028A  340B               	retlw	11
  1435     028B  3424               	retlw	36
  1436                           
  1437                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  1438     028C  3400               	retlw	0
  1439     028D  3424               	retlw	36
  1440                           
  1441                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  1442     028E  3410               	retlw	16
  1443     028F  342C               	retlw	44
  1444                           
  1445                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  1446     0290  340D               	retlw	13
  1447     0291  342C               	retlw	44
  1448                           
  1449                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  1450     0292  3406               	retlw	6
  1451     0293  342C               	retlw	44
  1452                           
  1453                           	psect	stringtext1
  1454     0205                     __pstringtext1:
  1455     0205                     _i2c_fsmStateTable:
  1456     0205  341D               	retlw	low _I2C_DO_IDLE
  1457     0206  3403               	retlw	high _I2C_DO_IDLE
  1458     0207  34A6               	retlw	low _I2C_DO_SEND_ADR_READ
  1459     0208  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  1460     0209  34AF               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1461     020A  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1462     020B  3469               	retlw	low _I2C_DO_TX
  1463     020C  3400               	retlw	high _I2C_DO_TX
  1464     020D  34C1               	retlw	low _I2C_DO_RX
  1465     020E  3400               	retlw	high _I2C_DO_RX
  1466     020F  34BE               	retlw	low _I2C_DO_RCEN
  1467     0210  3402               	retlw	high _I2C_DO_RCEN
  1468     0211  3484               	retlw	low _I2C_DO_TX_EMPTY
  1469     0212  3401               	retlw	high _I2C_DO_TX_EMPTY
  1470     0213  3418               	retlw	low _I2C_DO_SEND_RESTART_READ
  1471     0214  3403               	retlw	high _I2C_DO_SEND_RESTART_READ
  1472     0215  3413               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1473     0216  3403               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1474     0217  340E               	retlw	low _I2C_DO_SEND_RESTART
  1475     0218  3403               	retlw	high _I2C_DO_SEND_RESTART
  1476     0219  3409               	retlw	low _I2C_DO_SEND_STOP
  1477     021A  3403               	retlw	high _I2C_DO_SEND_STOP
  1478     021B  3404               	retlw	low _I2C_DO_RX_ACK
  1479     021C  3403               	retlw	high _I2C_DO_RX_ACK
  1480     021D  34FF               	retlw	low _I2C_DO_RX_NACK_STOP
  1481     021E  3402               	retlw	high _I2C_DO_RX_NACK_STOP
  1482     021F  34FA               	retlw	low _I2C_DO_RX_NACK_RESTART
  1483     0220  3402               	retlw	high _I2C_DO_RX_NACK_RESTART
  1484     0221  34F5               	retlw	low _I2C_DO_RESET
  1485     0222  3402               	retlw	high _I2C_DO_RESET
  1486     0223  34B3               	retlw	low _I2C_DO_ADDRESS_NACK
  1487     0224  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1488     0225                     __end_of_i2c_fsmStateTable:
  1489                           
  1490                           	psect	nvBANK0
  1491     006E                     __pnvBANK0:
  1492     006E                     _EUSART_TxDefaultInterruptHandler:
  1493     006E                     	ds	2
  1494                           
  1495                           	psect	nvBANK1
  1496     00A0                     __pnvBANK1:
  1497     00A0                     _EUSART_ErrorHandler:
  1498     00A0                     	ds	2
  1499     00A2                     _EUSART_OverrunErrorHandler:
  1500     00A2                     	ds	2
  1501     00A4                     _EUSART_FramingErrorHandler:
  1502     00A4                     	ds	2
  1503     00A6                     _EUSART_RxDefaultInterruptHandler:
  1504     00A6                     	ds	2
  1505     000B                     _INTCONbits	set	11
  1506     0011                     _PIR1bits	set	17
  1507     0012                     _PIR2bits	set	18
  1508     0092                     _PIE2bits	set	146
  1509     0091                     _PIE1bits	set	145
  1510     0097                     _WDTCON	set	151
  1511     0098                     _OSCTUNE	set	152
  1512     0099                     _OSCCON	set	153
  1513     0095                     _OPTION_REGbits	set	149
  1514     008E                     _TRISC	set	142
  1515     008D                     _TRISB	set	141
  1516     008C                     _TRISA	set	140
  1517     0090                     _TRISE	set	144
  1518     0116                     _BORCON	set	278
  1519     011D                     _APFCON	set	285
  1520     010E                     _LATC	set	270
  1521     010D                     _LATB	set	269
  1522     010C                     _LATA	set	268
  1523     0110                     _LATE	set	272
  1524     0199                     _RCREG	set	409
  1525     019D                     _RCSTAbits	set	413
  1526     019A                     _TXREG	set	410
  1527     019E                     _TXSTAbits	set	414
  1528     019C                     _SPBRGH	set	412
  1529     019B                     _SPBRGL	set	411
  1530     019E                     _TXSTA	set	414
  1531     019D                     _RCSTA	set	413
  1532     019F                     _BAUDCON	set	415
  1533     018C                     _ANSELA	set	396
  1534     018D                     _ANSELB	set	397
  1535     0214                     _SSPSTATbits	set	532
  1536     0216                     _SSPCON2bits	set	534
  1537     0211                     _SSPBUF	set	529
  1538     0215                     _SSPCON1bits	set	533
  1539     0212                     _SSPADD	set	530
  1540     0216                     _SSPCON2	set	534
  1541     0215                     _SSPCON1	set	533
  1542     0214                     _SSPSTAT	set	532
  1543     020D                     _WPUB	set	525
  1544     0210                     _WPUE	set	528
  1545                           
  1546                           	psect	cinit
  1547     004A                     start_initialization:	
  1548                           ; #config settings
  1549                           
  1550     004A                     __initialization:
  1551                           
  1552                           ; Initialize objects allocated to BANK0
  1553     004A  3088               	movlw	low __pidataBANK0
  1554     004B  0084               	movwf	4
  1555     004C  3082               	movlw	(high __pidataBANK0)| (0+128)
  1556     004D  0085               	movwf	5
  1557     004E  3062               	movlw	low __pdataBANK0
  1558     004F  0086               	movwf	6
  1559     0050  3000               	movlw	high __pdataBANK0
  1560     0051  0087               	movwf	7
  1561     0052  300C               	movlw	12
  1562     0053  3182  22C5  3180   	fcall	init_ram
  1563                           
  1564                           ; Clear objects allocated to COMMON
  1565     0056  01F0               	clrf	__pbssCOMMON& (0+127)
  1566     0057  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1567     0058  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1568     0059  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1569     005A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1570     005B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1571     005C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1572                           
  1573                           ; Clear objects allocated to BANK0
  1574     005D  3020               	movlw	low __pbssBANK0
  1575     005E  0084               	movwf	4
  1576     005F  3000               	movlw	high __pbssBANK0
  1577     0060  0085               	movwf	5
  1578     0061  3042               	movlw	66
  1579     0062  3182  22CB  3180   	fcall	clear_ram0
  1580     0065                     end_of_initialization:	
  1581                           ;End of C runtime variable initialization code
  1582                           
  1583     0065                     __end_of__initialization:
  1584     0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1585     0066  0020               	movlb	0
  1586     0067  3182  2AD1         	ljmp	_main	;jump to C main() function
  1587                           
  1588                           	psect	bssCOMMON
  1589     0070                     __pbssCOMMON:
  1590     0070                     _eusartRxLastError:
  1591     0070                     	ds	1
  1592     0071                     _eusartRxCount:
  1593     0071                     	ds	1
  1594     0072                     _eusartRxTail:
  1595     0072                     	ds	1
  1596     0073                     _eusartRxHead:
  1597     0073                     	ds	1
  1598     0074                     _eusartTxBufferRemaining:
  1599     0074                     	ds	1
  1600     0075                     _eusartTxTail:
  1601     0075                     	ds	1
  1602     0076                     _eusartTxHead:
  1603     0076                     	ds	1
  1604                           
  1605                           	psect	bssBANK0
  1606     0020                     __pbssBANK0:
  1607     0020                     _I2C_Status:
  1608     0020                     	ds	36
  1609     0044                     _eusartRxStatusBuffer:
  1610     0044                     	ds	8
  1611     004C                     _eusartRxBuffer:
  1612     004C                     	ds	8
  1613     0054                     _eusartTxBuffer:
  1614     0054                     	ds	8
  1615     005C                     _MSSP_InterruptHandler:
  1616     005C                     	ds	2
  1617     005E                     _Humidity:
  1618     005E                     	ds	2
  1619     0060                     _Temperature:
  1620     0060                     	ds	2
  1621                           
  1622                           	psect	dataBANK0
  1623     0062                     __pdataBANK0:
  1624     0062                     _SHT30_CMD_MEASURE_L_Disable:
  1625     0062                     	ds	2
  1626     0064                     _SHT30_CMD_MEASURE_M_Disable:
  1627     0064                     	ds	2
  1628     0066                     _SHT30_CMD_MEASURE_H_Disable:
  1629     0066                     	ds	2
  1630     0068                     _SHT30_CMD_MEASURE_L_Enable:
  1631     0068                     	ds	2
  1632     006A                     _SHT30_CMD_MEASURE_M_Enable:
  1633     006A                     	ds	2
  1634     006C                     _SHT30_CMD_MEASURE_H_Enable:
  1635     006C                     	ds	2
  1636                           
  1637                           	psect	inittext
  1638     02C5                     init_ram:
  1639     02C5  00FE               	movwf	btemp
  1640     02C6                     initloop:
  1641     02C6  0012               	moviw fsr0++
  1642     02C7  001E               	movwi fsr1++
  1643     02C8  0BFE               	decfsz	btemp,f
  1644     02C9  2AC6               	goto	initloop
  1645     02CA  3400               	retlw	0
  1646                           
  1647                           	psect	clrtext
  1648     02CB                     clear_ram0:	
  1649                           ;	Called with FSR0 containing the base address, and
  1650                           ;	WREG with the size to clear
  1651                           
  1652     02CB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1653     02CC                     clrloop0:
  1654     02CC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1655     02CD  3101               	addfsr 0,1
  1656     02CE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1657     02CF  2ACC               	goto	clrloop0	;have we reached the end yet?
  1658     02D0  3400               	retlw	0	;all done for this memory range, return
  1659                           
  1660                           	psect	cstackBANK1
  1661     00A8                     __pcstackBANK1:
  1662     00A8                     ?_EUSART_SetRxInterruptHandler:
  1663     00A8                     ?_EUSART_SetTxInterruptHandler:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     00A8                     ?_EUSART_SetFramingErrorHandler:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     00A8                     ?_EUSART_SetOverrunErrorHandler:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     00A8                     ?_EUSART_SetErrorHandler:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     00A8                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     00A8                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1679                           ; 2 bytes @ 0x0
  1680                           
  1681     00A8                     EUSART_SetErrorHandler@interruptHandler:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684     00A8                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1685                           ; 2 bytes @ 0x0
  1686                           
  1687     00A8                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1688                           ; 2 bytes @ 0x0
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x0
  1692     00A8                     	ds	2
  1693                           
  1694                           	psect	cstackCOMMON
  1695     0077                     __pcstackCOMMON:
  1696     0077                     ?_I2C_Initialize:
  1697     0077                     ?_OSCILLATOR_Initialize:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0077                     ?_WDT_Initialize:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0077                     ?_EUSART_Initialize:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0077                     ?_I2C_DO_IDLE:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     0077                     ??_I2C_DO_IDLE:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     0077                     ?_I2C_DO_SEND_ADR_READ:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0077                     ??_I2C_DO_SEND_ADR_READ:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     0077                     ?_I2C_DO_SEND_ADR_WRITE:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     0077                     ?_I2C_DO_TX:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     0077                     ?_I2C_DO_RX:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0077                     ??_I2C_DO_RX:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0077                     ?_I2C_DO_RCEN:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0077                     ??_I2C_DO_RCEN:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     0077                     ?_I2C_DO_TX_EMPTY:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     0077                     ??_I2C_DO_TX_EMPTY:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     0077                     ?_I2C_DO_SEND_RESTART_READ:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     0077                     ??_I2C_DO_SEND_RESTART_READ:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     0077                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751     0077                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754     0077                     ?_I2C_DO_SEND_RESTART:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757     0077                     ??_I2C_DO_SEND_RESTART:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760     0077                     ?_I2C_DO_SEND_STOP:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763     0077                     ??_I2C_DO_SEND_STOP:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766     0077                     ?_I2C_DO_RX_ACK:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769     0077                     ??_I2C_DO_RX_ACK:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772     0077                     ?_I2C_DO_RX_NACK_STOP:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0077                     ??_I2C_DO_RX_NACK_STOP:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0077                     ?_I2C_DO_RX_NACK_RESTART:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0077                     ??_I2C_DO_RX_NACK_RESTART:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0077                     ?_I2C_DO_RESET:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0077                     ??_I2C_DO_RESET:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0077                     ?_I2C_DO_ADDRESS_NACK:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0077                     ??_I2C_DO_ADDRESS_NACK:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0077                     ?_I2C_CallbackReturnStop:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799     0077                     ?_I2C_CallbackReturnReset:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0077                     ?_I2C_MasterIsr:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0077                     ?_I2C_MasterClearIrq:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0077                     ??_I2C_MasterClearIrq:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0077                     ?_I2C_MasterFsm:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0077                     ?_I2C_MasterIsNack:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0077                     ??_I2C_MasterIsNack:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0077                     ?_I2C_MasterSendTxData:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0077                     ??_I2C_MasterSendTxData:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0077                     ?_I2C_MasterGetRxData:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0077                     ??_I2C_MasterGetRxData:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0077                     ?_I2C_MasterSendAck:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0077                     ??_I2C_MasterSendAck:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0077                     ?_I2C_MasterStartRx:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0077                     ??_I2C_MasterStartRx:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0077                     ?_I2C_MasterSetIrq:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0077                     ??_I2C_MasterSetIrq:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0077                     ?_I2C_MasterEnableRestart:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0077                     ??_I2C_MasterEnableRestart:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0077                     ?_I2C_MasterStop:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0077                     ??_I2C_MasterStop:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0077                     ?_I2C_MasterSendNack:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0077                     ??_I2C_MasterSendNack:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0077                     ?_EUSART_Receive_ISR:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0077                     ?_EUSART_Transmit_ISR:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0077                     ??_EUSART_Transmit_ISR:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0077                     ?_EUSART_DefaultFramingErrorHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0077                     ??_EUSART_DefaultFramingErrorHandler:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0077                     ?_EUSART_DefaultErrorHandler:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0077                     ?_EUSART_RxDataHandler:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0077                     ??_EUSART_RxDataHandler:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0077                     ?_PIN_MANAGER_Initialize:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0077                     ?_SYSTEM_Initialize:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0077                     ?_INTERRUPT_InterruptManager:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0077                     ?_main:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0077                     I2C_MasterSendTxData@data:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0077                     I2C_CallbackReturnStop@funPtr:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0077                     I2C_CallbackReturnReset@funPtr:	
  1917                           ; 2 bytes @ 0x0
  1918                           
  1919                           
  1920                           ; 2 bytes @ 0x0
  1921     0077                     	ds	1
  1922     0078                     ??_I2C_DO_SEND_ADR_WRITE:
  1923     0078                     ??_I2C_DO_TX:	
  1924                           ; 1 bytes @ 0x1
  1925                           
  1926     0078                     ??_EUSART_Receive_ISR:	
  1927                           ; 1 bytes @ 0x1
  1928                           
  1929     0078                     ??_EUSART_DefaultErrorHandler:	
  1930                           ; 1 bytes @ 0x1
  1931                           
  1932                           
  1933                           ; 1 bytes @ 0x1
  1934     0078                     	ds	1
  1935     0079                     ??_I2C_CallbackReturnStop:
  1936     0079                     ??_I2C_CallbackReturnReset:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x2
  1941     0079                     	ds	1
  1942     007A                     ??_I2C_MasterFsm:
  1943                           
  1944                           ; 1 bytes @ 0x3
  1945     007A                     	ds	2
  1946     007C                     ??_I2C_MasterIsr:
  1947     007C                     ??_INTERRUPT_InterruptManager:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950                           
  1951                           	psect	cstackBANK0
  1952     0000                     __pcstackBANK0:	
  1953                           ; 1 bytes @ 0x5
  1954                           
  1955     0000                     ??_I2C_Initialize:
  1956     0000                     ??_OSCILLATOR_Initialize:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     0000                     ??_WDT_Initialize:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     0000                     ??_EUSART_Initialize:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0000                     ??_EUSART_SetRxInterruptHandler:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0000                     ??_EUSART_SetTxInterruptHandler:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0000                     ??_EUSART_SetFramingErrorHandler:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0000                     ??_EUSART_SetOverrunErrorHandler:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0000                     ??_EUSART_SetErrorHandler:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0000                     ??_PIN_MANAGER_Initialize:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0000                     ??_SYSTEM_Initialize:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0000                     ??_main:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989                           
  1990                           	psect	maintext
  1991     02D1                     __pmaintext:	
  1992                           ; 1 bytes @ 0x0
  1993 ;;
  1994 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1995 ;;
  1996 ;; *************** function _main *****************
  1997 ;; Defined at:
  1998 ;;		line 49 in file "main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : B1F/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2012 ;;      Params:         0       0       0       0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels required when called: 9
  2018 ;; This function calls:
  2019 ;;		_SYSTEM_Initialize
  2020 ;; This function is called by:
  2021 ;;		Startup code after reset
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     02D1                     _main:	
  2026                           ;psect for function _main
  2027                           
  2028     02D1                     l2883:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;main.c: 52:     SYSTEM_Initialize();
  2034     02D1  3182  2278  3182   	fcall	_SYSTEM_Initialize
  2035     02D4                     l586:	
  2036                           ;main.c: 69:     while (1)
  2037                           
  2038     02D4                     l587:	
  2039                           ;main.c: 70:     {;main.c: 72:     }
  2040                           
  2041     02D4  2AD4               	goto	l586
  2042     02D5  3180  2848         	ljmp	start
  2043     02D7                     __end_of_main:
  2044                           
  2045                           	psect	text1
  2046     0278                     __ptext1:	
  2047 ;; *************** function _SYSTEM_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2063 ;;      Params:         0       0       0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 8
  2070 ;; This function calls:
  2071 ;;		_EUSART_Initialize
  2072 ;;		_I2C_Initialize
  2073 ;;		_OSCILLATOR_Initialize
  2074 ;;		_PIN_MANAGER_Initialize
  2075 ;;		_WDT_Initialize
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     0278                     _SYSTEM_Initialize:	
  2082                           ;psect for function _SYSTEM_Initialize
  2083                           
  2084     0278                     l2881:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2090     0278  3182  2294  3182   	fcall	_I2C_Initialize
  2091                           
  2092                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2093     027B  3182  2245  3182   	fcall	_PIN_MANAGER_Initialize
  2094                           
  2095                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2096     027E  3182  22B7  3182   	fcall	_OSCILLATOR_Initialize
  2097                           
  2098                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2099     0281  3183  2327  3182   	fcall	_WDT_Initialize
  2100                           
  2101                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2102     0284  3181  210C  3182   	fcall	_EUSART_Initialize
  2103     0287                     l57:
  2104     0287  0008               	return
  2105     0288                     __end_of_SYSTEM_Initialize:
  2106                           
  2107                           	psect	text2
  2108     0327                     __ptext2:	
  2109 ;; *************** function _WDT_Initialize *****************
  2110 ;; Defined at:
  2111 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2125 ;;      Params:         0       0       0       0       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0
  2128 ;;      Totals:         0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        0 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 6
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_SYSTEM_Initialize
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     0327                     _WDT_Initialize:	
  2140                           ;psect for function _WDT_Initialize
  2141                           
  2142     0327                     l2847:	
  2143                           ;incstack = 0
  2144                           ; Regs used in _WDT_Initialize: [wreg]
  2145                           
  2146                           
  2147                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  2148     0327  3016               	movlw	22
  2149     0328  0021               	movlb	1	; select bank1
  2150     0329  0097               	movwf	23	;volatile
  2151     032A                     l63:
  2152     032A  0008               	return
  2153     032B                     __end_of_WDT_Initialize:
  2154                           
  2155                           	psect	text3
  2156     0245                     __ptext3:	
  2157 ;; *************** function _PIN_MANAGER_Initialize *****************
  2158 ;; Defined at:
  2159 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2173 ;;      Params:         0       0       0       0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0
  2176 ;;      Totals:         0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 6
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_SYSTEM_Initialize
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187     0245                     _PIN_MANAGER_Initialize:	
  2188                           ;psect for function _PIN_MANAGER_Initialize
  2189                           
  2190     0245                     l2809:	
  2191                           ;incstack = 0
  2192                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2193                           
  2194                           
  2195                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2196     0245  0022               	movlb	2	; select bank2
  2197     0246  0190               	clrf	16	;volatile
  2198                           
  2199                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2200     0247  018C               	clrf	12	;volatile
  2201                           
  2202                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2203     0248  018D               	clrf	13	;volatile
  2204     0249                     l2811:
  2205                           
  2206                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  2207     0249  3040               	movlw	64
  2208     024A  008E               	movwf	14	;volatile
  2209     024B                     l2813:
  2210                           
  2211                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2212     024B  3008               	movlw	8
  2213     024C  0021               	movlb	1	; select bank1
  2214     024D  0090               	movwf	16	;volatile
  2215     024E                     l2815:
  2216                           
  2217                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2218     024E  30FF               	movlw	255
  2219     024F  008C               	movwf	12	;volatile
  2220     0250                     l2817:
  2221                           
  2222                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  2223     0250  30FF               	movlw	255
  2224     0251  008D               	movwf	13	;volatile
  2225     0252                     l2819:
  2226                           
  2227                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  2228     0252  309C               	movlw	156
  2229     0253  008E               	movwf	14	;volatile
  2230     0254                     l2821:
  2231                           
  2232                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  2233     0254  303F               	movlw	63
  2234     0255  0023               	movlb	3	; select bank3
  2235     0256  008D               	movwf	13	;volatile
  2236     0257                     l2823:
  2237                           
  2238                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  2239     0257  3030               	movlw	48
  2240     0258  008C               	movwf	12	;volatile
  2241     0259                     l2825:
  2242                           
  2243                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2244     0259  0024               	movlb	4	; select bank4
  2245     025A  0190               	clrf	16	;volatile
  2246     025B                     l2827:
  2247                           
  2248                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2249     025B  018D               	clrf	13	;volatile
  2250     025C                     l2829:
  2251                           
  2252                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2253     025C  0021               	movlb	1	; select bank1
  2254     025D  1795               	bsf	21,7	;volatile
  2255     025E                     l2831:
  2256                           
  2257                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2258     025E  0022               	movlb	2	; select bank2
  2259     025F  019D               	clrf	29	;volatile
  2260     0260                     l31:
  2261     0260  0008               	return
  2262     0261                     __end_of_PIN_MANAGER_Initialize:
  2263                           
  2264                           	psect	text4
  2265     02B7                     __ptext4:	
  2266 ;; *************** function _OSCILLATOR_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2282 ;;      Params:         0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 6
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_SYSTEM_Initialize
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296     02B7                     _OSCILLATOR_Initialize:	
  2297                           ;psect for function _OSCILLATOR_Initialize
  2298                           
  2299     02B7                     l2841:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2302                           
  2303                           
  2304                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  2305     02B7  3070               	movlw	112
  2306     02B8  0021               	movlb	1	; select bank1
  2307     02B9  0099               	movwf	25	;volatile
  2308     02BA                     l2843:
  2309                           
  2310                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2311     02BA  0198               	clrf	24	;volatile
  2312     02BB                     l2845:
  2313                           
  2314                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2315     02BB  0022               	movlb	2	; select bank2
  2316     02BC  0196               	clrf	22	;volatile
  2317     02BD                     l60:
  2318     02BD  0008               	return
  2319     02BE                     __end_of_OSCILLATOR_Initialize:
  2320                           
  2321                           	psect	text5
  2322     0294                     __ptext5:	
  2323 ;; *************** function _I2C_Initialize *****************
  2324 ;; Defined at:
  2325 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2339 ;;      Params:         0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 6
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_SYSTEM_Initialize
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     0294                     _I2C_Initialize:	
  2354                           ;psect for function _I2C_Initialize
  2355                           
  2356     0294                     l2833:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2359                           
  2360     0294  0024               	movlb	4	; select bank4
  2361     0295  0194               	clrf	20	;volatile
  2362     0296                     l2835:
  2363     0296  3008               	movlw	8
  2364     0297  0095               	movwf	21	;volatile
  2365     0298                     l2837:
  2366     0298  0196               	clrf	22	;volatile
  2367     0299  3013               	movlw	19
  2368     029A  0092               	movwf	18	;volatile
  2369     029B                     l2839:
  2370     029B  1295               	bcf	21,5	;volatile
  2371     029C                     l172:
  2372     029C  0008               	return
  2373     029D                     __end_of_I2C_Initialize:
  2374                           
  2375                           	psect	text6
  2376     010C                     __ptext6:	
  2377 ;; *************** function _EUSART_Initialize *****************
  2378 ;; Defined at:
  2379 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2393 ;;      Params:         0       0       0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 7
  2400 ;; This function calls:
  2401 ;;		_EUSART_SetErrorHandler
  2402 ;;		_EUSART_SetFramingErrorHandler
  2403 ;;		_EUSART_SetOverrunErrorHandler
  2404 ;;		_EUSART_SetRxInterruptHandler
  2405 ;;		_EUSART_SetTxInterruptHandler
  2406 ;; This function is called by:
  2407 ;;		_SYSTEM_Initialize
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411     010C                     _EUSART_Initialize:	
  2412                           ;psect for function _EUSART_Initialize
  2413                           
  2414     010C                     l2849:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2417                           
  2418                           
  2419                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2420     010C  0021               	movlb	1	; select bank1
  2421     010D  1291               	bcf	17,5	;volatile
  2422     010E                     l2851:
  2423                           
  2424                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2425     010E  304B               	movlw	low _EUSART_Receive_ISR
  2426     010F  00A8               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  2427     0110  3001               	movlw	high _EUSART_Receive_ISR
  2428     0111  00A9               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  2429     0112  3182  22D7  3181   	fcall	_EUSART_SetRxInterruptHandler
  2430     0115                     l2853:
  2431                           
  2432                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2433     0115  0021               	movlb	1	; select bank1
  2434     0116  1211               	bcf	17,4	;volatile
  2435                           
  2436                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2437     0117  3025               	movlw	low _EUSART_Transmit_ISR
  2438     0118  00A8               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  2439     0119  3002               	movlw	high _EUSART_Transmit_ISR
  2440     011A  00A9               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  2441     011B  3182  229D  3181   	fcall	_EUSART_SetTxInterruptHandler
  2442     011E                     l2855:
  2443                           
  2444                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  2445     011E  3008               	movlw	8
  2446     011F  0023               	movlb	3	; select bank3
  2447     0120  009F               	movwf	31	;volatile
  2448     0121                     l2857:
  2449                           
  2450                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2451     0121  3090               	movlw	144
  2452     0122  009D               	movwf	29	;volatile
  2453     0123                     l2859:
  2454                           
  2455                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2456     0123  3024               	movlw	36
  2457     0124  009E               	movwf	30	;volatile
  2458     0125                     l2861:
  2459                           
  2460                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  2461     0125  30CF               	movlw	207
  2462     0126  009B               	movwf	27	;volatile
  2463     0127                     l2863:
  2464                           
  2465                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  2466     0127  019C               	clrf	28	;volatile
  2467     0128                     l2865:
  2468                           
  2469                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2470     0128  3055               	movlw	low _EUSART_DefaultFramingErrorHandler
  2471     0129  0021               	movlb	1	; select bank1
  2472     012A  00A8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  2473     012B  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  2474     012C  00A9               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  2475     012D  3182  22E3  3181   	fcall	_EUSART_SetFramingErrorHandler
  2476     0130                     l2867:
  2477                           
  2478                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2479     0130  3037               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2480     0131  0021               	movlb	1	; select bank1
  2481     0132  00A8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  2482     0133  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2483     0134  00A9               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  2484     0135  3182  22DD  3181   	fcall	_EUSART_SetOverrunErrorHandler
  2485     0138                     l2869:
  2486                           
  2487                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2488     0138  303B               	movlw	low _EUSART_DefaultErrorHandler
  2489     0139  0021               	movlb	1	; select bank1
  2490     013A  00A8               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  2491     013B  3003               	movlw	high _EUSART_DefaultErrorHandler
  2492     013C  00A9               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  2493     013D  3182  22E9  3181   	fcall	_EUSART_SetErrorHandler
  2494                           
  2495                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2496     0140  01F0               	clrf	_eusartRxLastError	;volatile
  2497                           
  2498                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2499     0141  01F6               	clrf	_eusartTxHead	;volatile
  2500                           
  2501                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2502     0142  01F5               	clrf	_eusartTxTail	;volatile
  2503     0143                     l2871:
  2504                           
  2505                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2506     0143  3008               	movlw	8
  2507     0144  00F4               	movwf	_eusartTxBufferRemaining	;volatile
  2508     0145                     l2873:
  2509                           
  2510                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2511     0145  01F3               	clrf	_eusartRxHead	;volatile
  2512     0146                     l2875:
  2513                           
  2514                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2515     0146  01F2               	clrf	_eusartRxTail	;volatile
  2516     0147                     l2877:
  2517                           
  2518                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2519     0147  01F1               	clrf	_eusartRxCount	;volatile
  2520     0148                     l2879:
  2521                           
  2522                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  2523     0148  0021               	movlb	1	; select bank1
  2524     0149  1691               	bsf	17,5	;volatile
  2525     014A                     l508:
  2526     014A  0008               	return
  2527     014B                     __end_of_EUSART_Initialize:
  2528                           
  2529                           	psect	text7
  2530     029D                     __ptext7:	
  2531 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2532 ;; Defined at:
  2533 ;;		line 276 in file "mcc_generated_files/eusart.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2536 ;;		 -> EUSART_Transmit_ISR(1), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2548 ;;      Params:         0       0       2       0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0
  2551 ;;      Totals:         0       0       2       0       0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 6
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_EUSART_Initialize
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562     029D                     _EUSART_SetTxInterruptHandler:	
  2563                           ;psect for function _EUSART_SetTxInterruptHandler
  2564                           
  2565     029D                     l2801:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2568                           
  2569                           
  2570                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2571     029D  0021               	movlb	1	; select bank1
  2572     029E  0829               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  2573     029F  0020               	movlb	0	; select bank0
  2574     02A0  00EF               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2575     02A1  0021               	movlb	1	; select bank1
  2576     02A2  0828               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  2577     02A3  0020               	movlb	0	; select bank0
  2578     02A4  00EE               	movwf	_EUSART_TxDefaultInterruptHandler
  2579     02A5                     l574:
  2580     02A5  0008               	return
  2581     02A6                     __end_of_EUSART_SetTxInterruptHandler:
  2582                           
  2583                           	psect	text8
  2584     02D7                     __ptext8:	
  2585 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2586 ;; Defined at:
  2587 ;;		line 280 in file "mcc_generated_files/eusart.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2590 ;;		 -> EUSART_Receive_ISR(1), 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2602 ;;      Params:         0       0       2       0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0
  2605 ;;      Totals:         0       0       2       0       0       0       0       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 6
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_EUSART_Initialize
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616     02D7                     _EUSART_SetRxInterruptHandler:	
  2617                           ;psect for function _EUSART_SetRxInterruptHandler
  2618                           
  2619     02D7                     l2799:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2622                           
  2623                           
  2624                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2625     02D7  0021               	movlb	1	; select bank1
  2626     02D8  0829               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  2627     02D9  00A7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  2628     02DA  0828               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  2629     02DB  00A6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  2630     02DC                     l577:
  2631     02DC  0008               	return
  2632     02DD                     __end_of_EUSART_SetRxInterruptHandler:
  2633                           
  2634                           	psect	text9
  2635     02DD                     __ptext9:	
  2636 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2637 ;; Defined at:
  2638 ;;		line 268 in file "mcc_generated_files/eusart.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2641 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2653 ;;      Params:         0       0       2       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0
  2656 ;;      Totals:         0       0       2       0       0       0       0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 6
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_EUSART_Initialize
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667     02DD                     _EUSART_SetOverrunErrorHandler:	
  2668                           ;psect for function _EUSART_SetOverrunErrorHandler
  2669                           
  2670     02DD                     l2805:	
  2671                           ;incstack = 0
  2672                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2673                           
  2674                           
  2675                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  2676     02DD  0021               	movlb	1	; select bank1
  2677     02DE  0829               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  2678     02DF  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2679     02E0  0828               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  2680     02E1  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2681     02E2                     l568:
  2682     02E2  0008               	return
  2683     02E3                     __end_of_EUSART_SetOverrunErrorHandler:
  2684                           
  2685                           	psect	text10
  2686     02E3                     __ptext10:	
  2687 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2688 ;; Defined at:
  2689 ;;		line 264 in file "mcc_generated_files/eusart.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2692 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2704 ;;      Params:         0       0       2       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0
  2707 ;;      Totals:         0       0       2       0       0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 6
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_EUSART_Initialize
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     02E3                     _EUSART_SetFramingErrorHandler:	
  2719                           ;psect for function _EUSART_SetFramingErrorHandler
  2720                           
  2721     02E3                     l2803:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2724                           
  2725                           
  2726                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  2727     02E3  0021               	movlb	1	; select bank1
  2728     02E4  0829               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  2729     02E5  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2730     02E6  0828               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  2731     02E7  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2732     02E8                     l565:
  2733     02E8  0008               	return
  2734     02E9                     __end_of_EUSART_SetFramingErrorHandler:
  2735                           
  2736                           	psect	text11
  2737     02E9                     __ptext11:	
  2738 ;; *************** function _EUSART_SetErrorHandler *****************
  2739 ;; Defined at:
  2740 ;;		line 272 in file "mcc_generated_files/eusart.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2743 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2755 ;;      Params:         0       0       2       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       2       0       0       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 6
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_EUSART_Initialize
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769     02E9                     _EUSART_SetErrorHandler:	
  2770                           ;psect for function _EUSART_SetErrorHandler
  2771                           
  2772     02E9                     l2807:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2775                           
  2776                           
  2777                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  2778     02E9  0021               	movlb	1	; select bank1
  2779     02EA  0829               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  2780     02EB  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2781     02EC  0828               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  2782     02ED  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  2783     02EE                     l571:
  2784     02EE  0008               	return
  2785     02EF                     __end_of_EUSART_SetErrorHandler:
  2786                           
  2787                           	psect	intentry
  2788     0004                     __pintentry:	
  2789 ;; *************** function _INTERRUPT_InterruptManager *****************
  2790 ;; Defined at:
  2791 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2805 ;;      Params:         0       0       0       0       0       0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0       0       0       0
  2808 ;;      Totals:         0       0       0       0       0       0       0       0
  2809 ;;Total ram usage:        0 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 5
  2812 ;; This function calls:
  2813 ;;		NULL
  2814 ;;		_EUSART_Receive_ISR
  2815 ;;		_EUSART_Transmit_ISR
  2816 ;;		_I2C_MasterIsr
  2817 ;; This function is called by:
  2818 ;;		Interrupt level 1
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822     0004                     _INTERRUPT_InterruptManager:
  2823                           
  2824                           ;incstack = 0
  2825     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2826                           
  2827                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2828     0005  3180               	pagesel	$
  2829     0006                     i1l2655:
  2830                           
  2831                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2832     0006  1F0B               	btfss	11,6	;volatile
  2833     0007  2809               	goto	u63_21
  2834     0008  280A               	goto	u63_20
  2835     0009                     u63_21:
  2836     0009  2846               	goto	i1l433
  2837     000A                     u63_20:
  2838     000A                     i1l2657:
  2839                           
  2840                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  2841     000A  0021               	movlb	1	; select bank1
  2842     000B  1E11               	btfss	17,4	;volatile
  2843     000C  280E               	goto	u64_21
  2844     000D  280F               	goto	u64_20
  2845     000E                     u64_21:
  2846     000E  281A               	goto	i1l424
  2847     000F                     u64_20:
  2848     000F                     i1l2659:
  2849     000F  0020               	movlb	0	; select bank0
  2850     0010  1E11               	btfss	17,4	;volatile
  2851     0011  2813               	goto	u65_21
  2852     0012  2814               	goto	u65_20
  2853     0013                     u65_21:
  2854     0013  281A               	goto	i1l424
  2855     0014                     u65_20:
  2856     0014                     i1l2661:
  2857                           
  2858                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  2859     0014  086F               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2860     0015  008A               	movwf	10
  2861     0016  086E               	movf	_EUSART_TxDefaultInterruptHandler,w
  2862     0017  000A               	callw
  2863     0018  3180               	pagesel	$
  2864                           
  2865                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2866     0019  2846               	goto	i1l433
  2867     001A                     i1l424:	
  2868                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  2869                           
  2870     001A  0021               	movlb	1	; select bank1
  2871     001B  1E91               	btfss	17,5	;volatile
  2872     001C  281E               	goto	u66_21
  2873     001D  281F               	goto	u66_20
  2874     001E                     u66_21:
  2875     001E  282B               	goto	i1l426
  2876     001F                     u66_20:
  2877     001F                     i1l2663:
  2878     001F  0020               	movlb	0	; select bank0
  2879     0020  1E91               	btfss	17,5	;volatile
  2880     0021  2823               	goto	u67_21
  2881     0022  2824               	goto	u67_20
  2882     0023                     u67_21:
  2883     0023  282B               	goto	i1l426
  2884     0024                     u67_20:
  2885     0024                     i1l2665:
  2886                           
  2887                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  2888     0024  0021               	movlb	1	; select bank1
  2889     0025  0827               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  2890     0026  008A               	movwf	10
  2891     0027  0826               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  2892     0028  000A               	callw
  2893     0029  3180               	pagesel	$
  2894                           
  2895                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2896     002A  2846               	goto	i1l433
  2897     002B                     i1l426:	
  2898                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  2899                           
  2900     002B  0021               	movlb	1	; select bank1
  2901     002C  1D92               	btfss	18,3	;volatile
  2902     002D  282F               	goto	u68_21
  2903     002E  2830               	goto	u68_20
  2904     002F                     u68_21:
  2905     002F  283B               	goto	i1l428
  2906     0030                     u68_20:
  2907     0030                     i1l2667:
  2908     0030  0020               	movlb	0	; select bank0
  2909     0031  1D92               	btfss	18,3	;volatile
  2910     0032  2834               	goto	u69_21
  2911     0033  2835               	goto	u69_20
  2912     0034                     u69_21:
  2913     0034  283B               	goto	i1l428
  2914     0035                     u69_20:
  2915     0035                     i1l2669:
  2916                           
  2917                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  2918     0035  085D               	movf	_MSSP_InterruptHandler+1,w
  2919     0036  008A               	movwf	10
  2920     0037  085C               	movf	_MSSP_InterruptHandler,w
  2921     0038  000A               	callw
  2922     0039  3180               	pagesel	$
  2923                           
  2924                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  2925     003A  2846               	goto	i1l433
  2926     003B                     i1l428:	
  2927                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  2928                           
  2929     003B  0021               	movlb	1	; select bank1
  2930     003C  1D91               	btfss	17,3	;volatile
  2931     003D  283F               	goto	u70_21
  2932     003E  2840               	goto	u70_20
  2933     003F                     u70_21:
  2934     003F  2846               	goto	i1l427
  2935     0040                     u70_20:
  2936     0040                     i1l2671:
  2937     0040  0020               	movlb	0	; select bank0
  2938     0041  1D91               	btfss	17,3	;volatile
  2939     0042  2844               	goto	u71_21
  2940     0043  2845               	goto	u71_20
  2941     0044                     u71_21:
  2942     0044  2846               	goto	i1l427
  2943     0045                     u71_20:
  2944     0045  2835               	goto	i1l2669
  2945     0046                     i1l427:
  2946     0046                     i1l433:
  2947     0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2948     0047  0009               	retfie
  2949     0048                     __end_of_INTERRUPT_InterruptManager:
  2950                           
  2951                           	psect	text13
  2952     032B                     __ptext13:	
  2953 ;; *************** function _I2C_MasterIsr *****************
  2954 ;; Defined at:
  2955 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2969 ;;      Params:         0       0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 4
  2976 ;; This function calls:
  2977 ;;		_I2C_MasterFsm
  2978 ;; This function is called by:
  2979 ;;		_I2C_Open
  2980 ;;		_INTERRUPT_InterruptManager
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984     032B                     _I2C_MasterIsr:	
  2985                           ;psect for function _I2C_MasterIsr
  2986                           
  2987     032B                     i1l2467:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2990                           
  2991     032B  3181  21DD  3183   	fcall	_I2C_MasterFsm
  2992     032E                     i1l225:
  2993     032E  0008               	return
  2994     032F                     __end_of_I2C_MasterIsr:
  2995                           
  2996                           	psect	text14
  2997     01DD                     __ptext14:	
  2998 ;; *************** function _I2C_MasterFsm *****************
  2999 ;; Defined at:
  3000 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3014 ;;      Params:         0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0
  3016 ;;      Temps:          2       0       0       0       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		_I2C_DO_ADDRESS_NACK
  3023 ;;		_I2C_DO_IDLE
  3024 ;;		_I2C_DO_RCEN
  3025 ;;		_I2C_DO_RESET
  3026 ;;		_I2C_DO_RX
  3027 ;;		_I2C_DO_RX_ACK
  3028 ;;		_I2C_DO_RX_NACK_RESTART
  3029 ;;		_I2C_DO_RX_NACK_STOP
  3030 ;;		_I2C_DO_SEND_ADR_READ
  3031 ;;		_I2C_DO_SEND_ADR_WRITE
  3032 ;;		_I2C_DO_SEND_RESTART
  3033 ;;		_I2C_DO_SEND_RESTART_READ
  3034 ;;		_I2C_DO_SEND_RESTART_WRITE
  3035 ;;		_I2C_DO_SEND_STOP
  3036 ;;		_I2C_DO_TX
  3037 ;;		_I2C_DO_TX_EMPTY
  3038 ;;		_I2C_MasterClearIrq
  3039 ;;		_I2C_MasterIsNack
  3040 ;; This function is called by:
  3041 ;;		_I2C_MasterIsr
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     01DD                     _I2C_MasterFsm:	
  3046                           ;psect for function _I2C_MasterFsm
  3047                           
  3048     01DD                     i1l2423:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3051                           
  3052     01DD  3183  233F  3181   	fcall	_I2C_MasterClearIrq
  3053     01E0                     i1l2425:
  3054     01E0  0020               	movlb	0	; select bank0
  3055     01E1  1C43               	btfss	_I2C_Status+35,0
  3056     01E2  29E4               	goto	u46_21
  3057     01E3  29E5               	goto	u46_20
  3058     01E4                     u46_21:
  3059     01E4  29F0               	goto	i1l2431
  3060     01E5                     u46_20:
  3061     01E5                     i1l2427:
  3062     01E5  3182  22EF  3181   	fcall	_I2C_MasterIsNack
  3063     01E8  3A00               	xorlw	0
  3064     01E9  1903               	skipnz
  3065     01EA  29EC               	goto	u47_21
  3066     01EB  29ED               	goto	u47_20
  3067     01EC                     u47_21:
  3068     01EC  29F0               	goto	i1l2431
  3069     01ED                     u47_20:
  3070     01ED                     i1l2429:
  3071     01ED  300F               	movlw	15
  3072     01EE  0020               	movlb	0	; select bank0
  3073     01EF  00C1               	movwf	_I2C_Status+33
  3074     01F0                     i1l2431:
  3075     01F0  0020               	movlb	0	; select bank0
  3076     01F1  0841               	movf	_I2C_Status+33,w
  3077     01F2  00FA               	movwf	??_I2C_MasterFsm
  3078     01F3  01FB               	clrf	??_I2C_MasterFsm+1
  3079     01F4  35FA               	lslf	??_I2C_MasterFsm,f
  3080     01F5  0DFB               	rlf	??_I2C_MasterFsm+1,f
  3081     01F6  3005               	movlw	low _i2c_fsmStateTable
  3082     01F7  077A               	addwf	??_I2C_MasterFsm,w
  3083     01F8  0084               	movwf	4
  3084     01F9  3002               	movlw	high _i2c_fsmStateTable
  3085     01FA  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  3086     01FB  3880               	iorlw	128
  3087     01FC  0085               	movwf	5
  3088     01FD  3F01               	moviw [1]fsr0
  3089     01FE  008A               	movwf	10
  3090     01FF  3F00               	moviw [0]fsr0
  3091     0200  000A               	callw
  3092     0201  3181               	pagesel	$
  3093     0202  0020               	movlb	0	; select bank0
  3094     0203  00C1               	movwf	_I2C_Status+33
  3095     0204                     i1l229:
  3096     0204  0008               	return
  3097     0205                     __end_of_I2C_MasterFsm:
  3098                           
  3099                           	psect	text15
  3100     033F                     __ptext15:	
  3101 ;; *************** function _I2C_MasterClearIrq *****************
  3102 ;; Defined at:
  3103 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		None
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3117 ;;      Params:         0       0       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_I2C_MasterFsm
  3127 ;;		_I2C_Open
  3128 ;;		_I2C_Close
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132     033F                     _I2C_MasterClearIrq:	
  3133                           ;psect for function _I2C_MasterClearIrq
  3134                           
  3135     033F                     i1l2209:	
  3136                           ;incstack = 0
  3137                           ; Regs used in _I2C_MasterClearIrq: []
  3138                           
  3139     033F  0020               	movlb	0	; select bank0
  3140     0340  1191               	bcf	17,3	;volatile
  3141     0341                     i1l392:
  3142     0341  0008               	return
  3143     0342                     __end_of_I2C_MasterClearIrq:
  3144                           
  3145                           	psect	text16
  3146     01B3                     __ptext16:	
  3147 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3148 ;; Defined at:
  3149 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      enum E3112
  3156 ;; Registers used:
  3157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3163 ;;      Params:         0       0       0       0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0       0
  3165 ;;      Temps:          2       0       0       0       0       0       0       0
  3166 ;;      Totals:         2       0       0       0       0       0       0       0
  3167 ;;Total ram usage:        2 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 2
  3170 ;; This function calls:
  3171 ;;		NULL
  3172 ;;		_I2C_CallbackReturnReset
  3173 ;;		_I2C_CallbackReturnStop
  3174 ;;		_I2C_DO_SEND_RESTART
  3175 ;;		_I2C_DO_SEND_STOP
  3176 ;; This function is called by:
  3177 ;;		_I2C_MasterFsm
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181     01B3                     _I2C_DO_ADDRESS_NACK:	
  3182                           ;psect for function _I2C_DO_ADDRESS_NACK
  3183                           
  3184     01B3                     i1l2345:	
  3185                           ;incstack = 0
  3186                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3187                           
  3188     01B3  0020               	movlb	0	; select bank0
  3189     01B4  1043               	bcf	_I2C_Status+35,0
  3190     01B5                     i1l2347:
  3191     01B5  3002               	movlw	2
  3192     01B6  00C2               	movwf	_I2C_Status+34
  3193     01B7  29C0               	goto	i1l2359
  3194     01B8                     i1l2349:
  3195     01B8  3183  230E  3181   	fcall	_I2C_DO_SEND_RESTART
  3196     01BB  29DC               	goto	i1l320
  3197     01BC                     i1l2353:
  3198     01BC  3183  2309  3181   	fcall	_I2C_DO_SEND_STOP
  3199     01BF  29DC               	goto	i1l320
  3200     01C0                     i1l2359:
  3201     01C0  0831               	movf	(low ((_I2C_Status| 0+16))+1),w
  3202     01C1  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3203     01C2  0830               	movf	low ((_I2C_Status| 0+16)),w
  3204     01C3  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3205     01C4  3004               	movlw	4
  3206     01C5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3207     01C6  0086               	movwf	6
  3208     01C7  0187               	clrf	7
  3209     01C8  3F41               	moviw [1]fsr1
  3210     01C9  008A               	movwf	10
  3211     01CA  3F40               	moviw [0]fsr1
  3212     01CB  000A               	callw
  3213     01CC  3181               	pagesel	$
  3214     01CD  00F7               	movwf	??_I2C_DO_ADDRESS_NACK
  3215     01CE  01F8               	clrf	??_I2C_DO_ADDRESS_NACK+1
  3216                           
  3217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3218                           ; Switch size 1, requested type "simple"
  3219                           ; Number of cases is 1, Range of values is 0 to 0
  3220                           ; switch strategies available:
  3221                           ; Name         Instructions Cycles
  3222                           ; simple_byte            4     3 (average)
  3223                           ; direct_byte            8     6 (fixed)
  3224                           ; jumptable            260     6 (fixed)
  3225                           ;	Chosen strategy is simple_byte
  3226     01CF  0878               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3227     01D0  3A00               	xorlw	0	; case 0
  3228     01D1  1903               	skipnz
  3229     01D2  29D4               	goto	i1l2965
  3230     01D3  29BC               	goto	i1l2353
  3231     01D4                     i1l2965:
  3232                           
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 2, Range of values is 2 to 3
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte            7     4 (average)
  3238                           ; direct_byte           13     9 (fixed)
  3239                           ; jumptable            263     9 (fixed)
  3240                           ;	Chosen strategy is simple_byte
  3241     01D4  0877               	movf	??_I2C_DO_ADDRESS_NACK,w
  3242     01D5  3A02               	xorlw	2	; case 2
  3243     01D6  1903               	skipnz
  3244     01D7  29B8               	goto	i1l2349
  3245     01D8  3A01               	xorlw	1	; case 3
  3246     01D9  1903               	skipnz
  3247     01DA  29B8               	goto	i1l2349
  3248     01DB  29BC               	goto	i1l2353
  3249     01DC                     i1l320:
  3250     01DC  0008               	return
  3251     01DD                     __end_of_I2C_DO_ADDRESS_NACK:
  3252                           
  3253                           	psect	text17
  3254     02F5                     __ptext17:	
  3255 ;; *************** function _I2C_DO_RESET *****************
  3256 ;; Defined at:
  3257 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      enum E3112
  3264 ;; Registers used:
  3265 ;;		wreg, status,2
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3271 ;;      Params:         0       0       0       0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0
  3274 ;;      Totals:         0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_I2C_MasterFsm
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284     02F5                     _I2C_DO_RESET:	
  3285                           ;psect for function _I2C_DO_RESET
  3286                           
  3287     02F5                     i1l2337:	
  3288                           ;incstack = 0
  3289                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3290                           
  3291     02F5  0020               	movlb	0	; select bank0
  3292     02F6  10C3               	bcf	_I2C_Status+35,1
  3293     02F7                     i1l2339:
  3294     02F7  01C2               	clrf	_I2C_Status+34
  3295     02F8                     i1l2341:
  3296     02F8  300E               	movlw	14
  3297     02F9                     i1l314:
  3298     02F9  0008               	return
  3299     02FA                     __end_of_I2C_DO_RESET:
  3300                           
  3301                           	psect	text18
  3302     02FA                     __ptext18:	
  3303 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3304 ;; Defined at:
  3305 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      enum E3112
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3319 ;;      Params:         0       0       0       0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 1
  3326 ;; This function calls:
  3327 ;;		_I2C_MasterSendNack
  3328 ;; This function is called by:
  3329 ;;		_I2C_DO_RX
  3330 ;;		_I2C_MasterFsm
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     02FA                     _I2C_DO_RX_NACK_RESTART:	
  3335                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3336                           
  3337     02FA                     i1l2179:	
  3338                           ;incstack = 0
  3339                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3340                           
  3341     02FA  3183  2333  3182   	fcall	_I2C_MasterSendNack
  3342     02FD                     i1l2181:
  3343     02FD  3009               	movlw	9
  3344     02FE                     i1l311:
  3345     02FE  0008               	return
  3346     02FF                     __end_of_I2C_DO_RX_NACK_RESTART:
  3347                           
  3348                           	psect	text19
  3349     02FF                     __ptext19:	
  3350 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3351 ;; Defined at:
  3352 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      enum E3112
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3366 ;;      Params:         0       0       0       0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 1
  3373 ;; This function calls:
  3374 ;;		_I2C_MasterSendNack
  3375 ;; This function is called by:
  3376 ;;		_I2C_DO_RX
  3377 ;;		_I2C_MasterFsm
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381     02FF                     _I2C_DO_RX_NACK_STOP:	
  3382                           ;psect for function _I2C_DO_RX_NACK_STOP
  3383                           
  3384     02FF                     i1l2185:	
  3385                           ;incstack = 0
  3386                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3387                           
  3388     02FF  3183  2333  3182   	fcall	_I2C_MasterSendNack
  3389     0302                     i1l2187:
  3390     0302  300A               	movlw	10
  3391     0303                     i1l308:
  3392     0303  0008               	return
  3393     0304                     __end_of_I2C_DO_RX_NACK_STOP:
  3394                           
  3395                           	psect	text20
  3396     0304                     __ptext20:	
  3397 ;; *************** function _I2C_DO_RX_ACK *****************
  3398 ;; Defined at:
  3399 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      enum E3112
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3413 ;;      Params:         0       0       0       0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 1
  3420 ;; This function calls:
  3421 ;;		_I2C_MasterSendAck
  3422 ;; This function is called by:
  3423 ;;		_I2C_MasterFsm
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427     0304                     _I2C_DO_RX_ACK:	
  3428                           ;psect for function _I2C_DO_RX_ACK
  3429                           
  3430     0304                     i1l2331:	
  3431                           ;incstack = 0
  3432                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3433                           
  3434     0304  3183  232F  3183   	fcall	_I2C_MasterSendAck
  3435     0307                     i1l2333:
  3436     0307  3005               	movlw	5
  3437     0308                     i1l305:
  3438     0308  0008               	return
  3439     0309                     __end_of_I2C_DO_RX_ACK:
  3440                           
  3441                           	psect	text21
  3442     0309                     __ptext21:	
  3443 ;; *************** function _I2C_DO_SEND_STOP *****************
  3444 ;; Defined at:
  3445 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      enum E3112
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3459 ;;      Params:         0       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 1
  3466 ;; This function calls:
  3467 ;;		_I2C_MasterStop
  3468 ;; This function is called by:
  3469 ;;		_I2C_DO_TX
  3470 ;;		_I2C_DO_TX_EMPTY
  3471 ;;		_I2C_DO_ADDRESS_NACK
  3472 ;;		_I2C_MasterFsm
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476     0309                     _I2C_DO_SEND_STOP:	
  3477                           ;psect for function _I2C_DO_SEND_STOP
  3478                           
  3479     0309                     i1l2167:	
  3480                           ;incstack = 0
  3481                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3482                           
  3483     0309  3183  234B  3183   	fcall	_I2C_MasterStop
  3484     030C                     i1l2169:
  3485     030C  3000               	movlw	0
  3486     030D                     i1l302:
  3487     030D  0008               	return
  3488     030E                     __end_of_I2C_DO_SEND_STOP:
  3489                           
  3490                           	psect	text22
  3491     030E                     __ptext22:	
  3492 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3493 ;; Defined at:
  3494 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      enum E3112
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3508 ;;      Params:         0       0       0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 1
  3515 ;; This function calls:
  3516 ;;		_I2C_MasterEnableRestart
  3517 ;; This function is called by:
  3518 ;;		_I2C_DO_TX_EMPTY
  3519 ;;		_I2C_DO_ADDRESS_NACK
  3520 ;;		_I2C_MasterFsm
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524     030E                     _I2C_DO_SEND_RESTART:	
  3525                           ;psect for function _I2C_DO_SEND_RESTART
  3526                           
  3527     030E                     i1l2193:	
  3528                           ;incstack = 0
  3529                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3530                           
  3531     030E  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3532     0311                     i1l2195:
  3533     0311  3001               	movlw	1
  3534     0312                     i1l299:
  3535     0312  0008               	return
  3536     0313                     __end_of_I2C_DO_SEND_RESTART:
  3537                           
  3538                           	psect	text23
  3539     0313                     __ptext23:	
  3540 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3541 ;; Defined at:
  3542 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      enum E3112
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3556 ;;      Params:         0       0       0       0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 1
  3563 ;; This function calls:
  3564 ;;		_I2C_MasterEnableRestart
  3565 ;; This function is called by:
  3566 ;;		_I2C_DO_TX
  3567 ;;		_I2C_MasterFsm
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571     0313                     _I2C_DO_SEND_RESTART_WRITE:	
  3572                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3573                           
  3574     0313                     i1l2161:	
  3575                           ;incstack = 0
  3576                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3577                           
  3578     0313  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3579     0316                     i1l2163:
  3580     0316  3002               	movlw	2
  3581     0317                     i1l296:
  3582     0317  0008               	return
  3583     0318                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3584                           
  3585                           	psect	text24
  3586     0318                     __ptext24:	
  3587 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3588 ;; Defined at:
  3589 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      enum E3112
  3596 ;; Registers used:
  3597 ;;		wreg, status,2, status,0, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3603 ;;      Params:         0       0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 1
  3610 ;; This function calls:
  3611 ;;		_I2C_MasterEnableRestart
  3612 ;; This function is called by:
  3613 ;;		_I2C_DO_TX
  3614 ;;		_I2C_MasterFsm
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618     0318                     _I2C_DO_SEND_RESTART_READ:	
  3619                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3620                           
  3621     0318                     i1l2155:	
  3622                           ;incstack = 0
  3623                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3624                           
  3625     0318  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3626     031B                     i1l2157:
  3627     031B  3001               	movlw	1
  3628     031C                     i1l293:
  3629     031C  0008               	return
  3630     031D                     __end_of_I2C_DO_SEND_RESTART_READ:
  3631                           
  3632                           	psect	text25
  3633     02BE                     __ptext25:	
  3634 ;; *************** function _I2C_DO_RCEN *****************
  3635 ;; Defined at:
  3636 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      enum E3112
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0, pclath, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3650 ;;      Params:         0       0       0       0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 1
  3657 ;; This function calls:
  3658 ;;		_I2C_MasterStartRx
  3659 ;; This function is called by:
  3660 ;;		_I2C_MasterFsm
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664     02BE                     _I2C_DO_RCEN:	
  3665                           ;psect for function _I2C_DO_RCEN
  3666                           
  3667     02BE                     i1l2299:	
  3668                           ;incstack = 0
  3669                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  3670                           
  3671     02BE  0020               	movlb	0	; select bank0
  3672     02BF  1043               	bcf	_I2C_Status+35,0
  3673     02C0                     i1l2301:
  3674     02C0  3183  2348  3182   	fcall	_I2C_MasterStartRx
  3675     02C3                     i1l2303:
  3676     02C3  3004               	movlw	4
  3677     02C4                     i1l269:
  3678     02C4  0008               	return
  3679     02C5                     __end_of_I2C_DO_RCEN:
  3680                           
  3681                           	psect	text26
  3682     00C1                     __ptext26:	
  3683 ;; *************** function _I2C_DO_RX *****************
  3684 ;; Defined at:
  3685 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      enum E3112
  3692 ;; Registers used:
  3693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3699 ;;      Params:         0       0       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0
  3701 ;;      Temps:          2       0       0       0       0       0       0       0
  3702 ;;      Totals:         2       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 2
  3706 ;; This function calls:
  3707 ;;		NULL
  3708 ;;		_I2C_CallbackReturnReset
  3709 ;;		_I2C_CallbackReturnStop
  3710 ;;		_I2C_DO_RX_NACK_RESTART
  3711 ;;		_I2C_DO_RX_NACK_STOP
  3712 ;;		_I2C_MasterGetRxData
  3713 ;;		_I2C_MasterSendAck
  3714 ;; This function is called by:
  3715 ;;		_I2C_MasterFsm
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719     00C1                     _I2C_DO_RX:	
  3720                           ;psect for function _I2C_DO_RX
  3721                           
  3722     00C1                     i1l2269:	
  3723                           ;incstack = 0
  3724                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3725                           
  3726     00C1  3183  2345  3180   	fcall	_I2C_MasterGetRxData
  3727     00C4  00F7               	movwf	??_I2C_DO_RX
  3728     00C5  301D               	movlw	29
  3729     00C6  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3730     00C7  0086               	movwf	6
  3731     00C8  0187               	clrf	7
  3732     00C9  3F40               	moviw [0]fsr1
  3733     00CA  0084               	movwf	4
  3734     00CB  3F41               	moviw [1]fsr1
  3735     00CC  0085               	movwf	5
  3736     00CD  0877               	movf	??_I2C_DO_RX,w
  3737     00CE  0080               	movwf	0
  3738     00CF                     i1l2271:
  3739     00CF  3001               	movlw	1
  3740     00D0  0020               	movlb	0	; select bank0
  3741     00D1  07BD               	addwf	low ((_I2C_Status| 0+29)),f
  3742     00D2  3000               	movlw	0
  3743     00D3  3DBE               	addwfc	(low ((_I2C_Status| 0+29))+1),f
  3744     00D4                     i1l2273:
  3745     00D4  3001               	movlw	1
  3746     00D5  02BF               	subwf	_I2C_Status+31,f
  3747     00D6  3000               	movlw	0
  3748     00D7  3BC0               	subwfb	_I2C_Status+32,f
  3749     00D8  083F               	movf	_I2C_Status+31,w
  3750     00D9  0440               	iorwf	_I2C_Status+32,w
  3751     00DA  1903               	btfsc	3,2
  3752     00DB  28DD               	goto	u44_21
  3753     00DC  28DE               	goto	u44_20
  3754     00DD                     u44_21:
  3755     00DD  28E3               	goto	i1l257
  3756     00DE                     u44_20:
  3757     00DE                     i1l2275:
  3758     00DE  3183  232F  3180   	fcall	_I2C_MasterSendAck
  3759     00E1                     i1l2277:
  3760     00E1  3005               	movlw	5
  3761     00E2  290B               	goto	i1l258
  3762     00E3                     i1l257:
  3763     00E3  15C3               	bsf	_I2C_Status+35,3
  3764     00E4  28ED               	goto	i1l2293
  3765     00E5                     i1l2283:
  3766     00E5  3182  22FA  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  3767     00E8  290B               	goto	i1l258
  3768     00E9                     i1l2287:
  3769     00E9  3182  22FF  3180   	fcall	_I2C_DO_RX_NACK_STOP
  3770     00EC  290B               	goto	i1l258
  3771     00ED                     i1l2293:
  3772     00ED  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  3773     00EE  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3774     00EF  082C               	movf	low ((_I2C_Status| 0+12)),w
  3775     00F0  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3776     00F1  0821               	movf	_I2C_Status+1,w
  3777     00F2  008A               	movwf	10
  3778     00F3  0820               	movf	_I2C_Status,w
  3779     00F4  000A               	callw
  3780     00F5  3180               	pagesel	$
  3781     00F6  00F7               	movwf	??_I2C_DO_RX
  3782     00F7  01F8               	clrf	??_I2C_DO_RX+1
  3783                           
  3784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3785                           ; Switch size 1, requested type "simple"
  3786                           ; Number of cases is 1, Range of values is 0 to 0
  3787                           ; switch strategies available:
  3788                           ; Name         Instructions Cycles
  3789                           ; simple_byte            4     3 (average)
  3790                           ; direct_byte            8     6 (fixed)
  3791                           ; jumptable            260     6 (fixed)
  3792                           ;	Chosen strategy is simple_byte
  3793     00F8  0878               	movf	??_I2C_DO_RX+1,w
  3794     00F9  3A00               	xorlw	0	; case 0
  3795     00FA  1903               	skipnz
  3796     00FB  28FD               	goto	i1l2967
  3797     00FC  28E9               	goto	i1l2287
  3798     00FD                     i1l2967:
  3799                           
  3800                           ; Switch size 1, requested type "simple"
  3801                           ; Number of cases is 4, Range of values is 1 to 4
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte           13     7 (average)
  3805                           ; direct_byte           17     9 (fixed)
  3806                           ; jumptable            263     9 (fixed)
  3807                           ;	Chosen strategy is simple_byte
  3808     00FD  0877               	movf	??_I2C_DO_RX,w
  3809     00FE  3A01               	xorlw	1	; case 1
  3810     00FF  1903               	skipnz
  3811     0100  28E9               	goto	i1l2287
  3812     0101  3A03               	xorlw	3	; case 2
  3813     0102  1903               	skipnz
  3814     0103  28E5               	goto	i1l2283
  3815     0104  3A01               	xorlw	1	; case 3
  3816     0105  1903               	skipnz
  3817     0106  28E5               	goto	i1l2283
  3818     0107  3A07               	xorlw	7	; case 4
  3819     0108  1903               	skipnz
  3820     0109  28E9               	goto	i1l2287
  3821     010A  28E9               	goto	i1l2287
  3822     010B                     i1l258:
  3823     010B  0008               	return
  3824     010C                     __end_of_I2C_DO_RX:
  3825                           
  3826                           	psect	text27
  3827     0069                     __ptext27:	
  3828 ;; *************** function _I2C_DO_TX *****************
  3829 ;; Defined at:
  3830 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      enum E3112
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3844 ;;      Params:         0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0
  3846 ;;      Temps:          2       0       0       0       0       0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 2
  3851 ;; This function calls:
  3852 ;;		NULL
  3853 ;;		_I2C_CallbackReturnReset
  3854 ;;		_I2C_CallbackReturnStop
  3855 ;;		_I2C_DO_SEND_RESTART_READ
  3856 ;;		_I2C_DO_SEND_RESTART_WRITE
  3857 ;;		_I2C_DO_SEND_STOP
  3858 ;;		_I2C_MasterIsNack
  3859 ;;		_I2C_MasterSendTxData
  3860 ;; This function is called by:
  3861 ;;		_I2C_MasterFsm
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865     0069                     _I2C_DO_TX:	
  3866                           ;psect for function _I2C_DO_TX
  3867                           
  3868     0069                     i1l2235:	
  3869                           ;incstack = 0
  3870                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3871                           
  3872     0069  3182  22EF  3180   	fcall	_I2C_MasterIsNack
  3873     006C  3A00               	xorlw	0
  3874     006D  1903               	skipnz
  3875     006E  2870               	goto	u42_21
  3876     006F  2871               	goto	u42_20
  3877     0070                     u42_21:
  3878     0070  28A1               	goto	i1l241
  3879     0071                     u42_20:
  3880     0071  287E               	goto	i1l2253
  3881     0072                     i1l2239:
  3882     0072  3183  2318  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  3883     0075  28C0               	goto	i1l244
  3884     0076                     i1l2243:
  3885     0076  3183  2313  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  3886     0079  28C0               	goto	i1l244
  3887     007A                     i1l2247:
  3888     007A  3183  2309  3180   	fcall	_I2C_DO_SEND_STOP
  3889     007D  28C0               	goto	i1l244
  3890     007E                     i1l2253:
  3891     007E  0020               	movlb	0	; select bank0
  3892     007F  0833               	movf	(low ((_I2C_Status| 0+18))+1),w
  3893     0080  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3894     0081  0832               	movf	low ((_I2C_Status| 0+18)),w
  3895     0082  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3896     0083  3006               	movlw	6
  3897     0084  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3898     0085  0086               	movwf	6
  3899     0086  0187               	clrf	7
  3900     0087  3F41               	moviw [1]fsr1
  3901     0088  008A               	movwf	10
  3902     0089  3F40               	moviw [0]fsr1
  3903     008A  000A               	callw
  3904     008B  3180               	pagesel	$
  3905     008C  00F8               	movwf	??_I2C_DO_TX
  3906     008D  01F9               	clrf	??_I2C_DO_TX+1
  3907                           
  3908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3909                           ; Switch size 1, requested type "simple"
  3910                           ; Number of cases is 1, Range of values is 0 to 0
  3911                           ; switch strategies available:
  3912                           ; Name         Instructions Cycles
  3913                           ; simple_byte            4     3 (average)
  3914                           ; direct_byte            8     6 (fixed)
  3915                           ; jumptable            260     6 (fixed)
  3916                           ;	Chosen strategy is simple_byte
  3917     008E  0879               	movf	??_I2C_DO_TX+1,w
  3918     008F  3A00               	xorlw	0	; case 0
  3919     0090  1903               	skipnz
  3920     0091  2893               	goto	i1l2969
  3921     0092  287A               	goto	i1l2247
  3922     0093                     i1l2969:
  3923                           
  3924                           ; Switch size 1, requested type "simple"
  3925                           ; Number of cases is 4, Range of values is 1 to 4
  3926                           ; switch strategies available:
  3927                           ; Name         Instructions Cycles
  3928                           ; simple_byte           13     7 (average)
  3929                           ; direct_byte           17     9 (fixed)
  3930                           ; jumptable            263     9 (fixed)
  3931                           ;	Chosen strategy is simple_byte
  3932     0093  0878               	movf	??_I2C_DO_TX,w
  3933     0094  3A01               	xorlw	1	; case 1
  3934     0095  1903               	skipnz
  3935     0096  287A               	goto	i1l2247
  3936     0097  3A03               	xorlw	3	; case 2
  3937     0098  1903               	skipnz
  3938     0099  2872               	goto	i1l2239
  3939     009A  3A01               	xorlw	1	; case 3
  3940     009B  1903               	skipnz
  3941     009C  2876               	goto	i1l2243
  3942     009D  3A07               	xorlw	7	; case 4
  3943     009E  1903               	skipnz
  3944     009F  287A               	goto	i1l2247
  3945     00A0  287A               	goto	i1l2247
  3946     00A1                     i1l241:
  3947     00A1  0020               	movlb	0	; select bank0
  3948     00A2  1043               	bcf	_I2C_Status+35,0
  3949     00A3                     i1l2255:
  3950     00A3  083E               	movf	(low ((_I2C_Status| 0+29))+1),w
  3951     00A4  00F9               	movwf	??_I2C_DO_TX+1
  3952     00A5  083D               	movf	low ((_I2C_Status| 0+29)),w
  3953     00A6  00F8               	movwf	??_I2C_DO_TX
  3954     00A7  0ABD               	incf	low ((_I2C_Status| 0+29)),f
  3955     00A8  1903               	skipnz
  3956     00A9  0ABE               	incf	(low ((_I2C_Status| 0+29))+1),f
  3957     00AA  0878               	movf	??_I2C_DO_TX,w
  3958     00AB  0086               	movwf	6
  3959     00AC  0879               	movf	??_I2C_DO_TX+1,w
  3960     00AD  0087               	movwf	7
  3961     00AE  0801               	movf	1,w
  3962     00AF  3183  2322  3180   	fcall	_I2C_MasterSendTxData
  3963     00B2                     i1l2257:
  3964     00B2  3001               	movlw	1
  3965     00B3  0020               	movlb	0	; select bank0
  3966     00B4  02BF               	subwf	_I2C_Status+31,f
  3967     00B5  3000               	movlw	0
  3968     00B6  3BC0               	subwfb	_I2C_Status+32,f
  3969     00B7  083F               	movf	_I2C_Status+31,w
  3970     00B8  0440               	iorwf	_I2C_Status+32,w
  3971     00B9  1D03               	btfss	3,2
  3972     00BA  28BC               	goto	u43_21
  3973     00BB  28BD               	goto	u43_20
  3974     00BC                     u43_21:
  3975     00BC  28BF               	goto	i1l2261
  3976     00BD                     u43_20:
  3977     00BD                     i1l2259:
  3978     00BD  3006               	movlw	6
  3979     00BE  28C0               	goto	i1l244
  3980     00BF                     i1l2261:
  3981     00BF  3003               	movlw	3
  3982     00C0                     i1l244:
  3983     00C0  0008               	return
  3984     00C1                     __end_of_I2C_DO_TX:
  3985                           
  3986                           	psect	text28
  3987     02AF                     __ptext28:	
  3988 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  3989 ;; Defined at:
  3990 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      enum E3112
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, pclath, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4004 ;;      Params:         0       0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0
  4007 ;;      Totals:         0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 1
  4011 ;; This function calls:
  4012 ;;		_I2C_MasterSendTxData
  4013 ;; This function is called by:
  4014 ;;		_I2C_MasterFsm
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     02AF                     _I2C_DO_SEND_ADR_WRITE:	
  4019                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4020                           
  4021     02AF                     i1l2227:	
  4022                           ;incstack = 0
  4023                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4024                           
  4025     02AF  0020               	movlb	0	; select bank0
  4026     02B0  1443               	bsf	_I2C_Status+35,0
  4027     02B1                     i1l2229:
  4028     02B1  353C               	lslf	_I2C_Status+28,w
  4029     02B2  3183  2322  3182   	fcall	_I2C_MasterSendTxData
  4030     02B5                     i1l2231:
  4031     02B5  3003               	movlw	3
  4032     02B6                     i1l238:
  4033     02B6  0008               	return
  4034     02B7                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4035                           
  4036                           	psect	text29
  4037     02A6                     __ptext29:	
  4038 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4039 ;; Defined at:
  4040 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      enum E3112
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0, pclath, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4054 ;;      Params:         0       0       0       0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 1
  4061 ;; This function calls:
  4062 ;;		_I2C_MasterSendTxData
  4063 ;; This function is called by:
  4064 ;;		_I2C_MasterFsm
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068     02A6                     _I2C_DO_SEND_ADR_READ:	
  4069                           ;psect for function _I2C_DO_SEND_ADR_READ
  4070                           
  4071     02A6                     i1l2219:	
  4072                           ;incstack = 0
  4073                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4074                           
  4075     02A6  0020               	movlb	0	; select bank0
  4076     02A7  1443               	bsf	_I2C_Status+35,0
  4077     02A8                     i1l2221:
  4078     02A8  1403               	setc
  4079     02A9  0D3C               	rlf	_I2C_Status+28,w
  4080     02AA  3183  2322  3182   	fcall	_I2C_MasterSendTxData
  4081     02AD                     i1l2223:
  4082     02AD  3005               	movlw	5
  4083     02AE                     i1l235:
  4084     02AE  0008               	return
  4085     02AF                     __end_of_I2C_DO_SEND_ADR_READ:
  4086                           
  4087                           	psect	text30
  4088     031D                     __ptext30:	
  4089 ;; *************** function _I2C_DO_IDLE *****************
  4090 ;; Defined at:
  4091 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      enum E3112
  4098 ;; Registers used:
  4099 ;;		wreg, status,2
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4105 ;;      Params:         0       0       0       0       0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_I2C_MasterFsm
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118     031D                     _I2C_DO_IDLE:	
  4119                           ;psect for function _I2C_DO_IDLE
  4120                           
  4121     031D                     i1l2211:	
  4122                           ;incstack = 0
  4123                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4124                           
  4125     031D  0020               	movlb	0	; select bank0
  4126     031E  10C3               	bcf	_I2C_Status+35,1
  4127     031F                     i1l2213:
  4128     031F  01C2               	clrf	_I2C_Status+34
  4129     0320                     i1l2215:
  4130     0320  300E               	movlw	14
  4131     0321                     i1l232:
  4132     0321  0008               	return
  4133     0322                     __end_of_I2C_DO_IDLE:
  4134                           
  4135                           	psect	text31
  4136     0184                     __ptext31:	
  4137 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4138 ;; Defined at:
  4139 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      enum E3112
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4153 ;;      Params:         0       0       0       0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0
  4155 ;;      Temps:          2       0       0       0       0       0       0       0
  4156 ;;      Totals:         2       0       0       0       0       0       0       0
  4157 ;;Total ram usage:        2 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 2
  4160 ;; This function calls:
  4161 ;;		NULL
  4162 ;;		_I2C_CallbackReturnReset
  4163 ;;		_I2C_CallbackReturnStop
  4164 ;;		_I2C_DO_SEND_RESTART
  4165 ;;		_I2C_DO_SEND_STOP
  4166 ;;		_I2C_MasterSetIrq
  4167 ;; This function is called by:
  4168 ;;		_I2C_MasterFsm
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172     0184                     _I2C_DO_TX_EMPTY:	
  4173                           ;psect for function _I2C_DO_TX_EMPTY
  4174                           
  4175     0184                     i1l2307:	
  4176                           ;incstack = 0
  4177                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4178                           
  4179     0184  0020               	movlb	0	; select bank0
  4180     0185  15C3               	bsf	_I2C_Status+35,3
  4181     0186  2994               	goto	i1l2325
  4182     0187                     i1l2309:
  4183     0187  3183  230E  3181   	fcall	_I2C_DO_SEND_RESTART
  4184     018A  29B2               	goto	i1l275
  4185     018B                     i1l2313:
  4186     018B  3183  2342  3181   	fcall	_I2C_MasterSetIrq
  4187     018E                     i1l2315:
  4188     018E  3003               	movlw	3
  4189     018F  29B2               	goto	i1l275
  4190     0190                     i1l2319:
  4191     0190  3183  2309  3181   	fcall	_I2C_DO_SEND_STOP
  4192     0193  29B2               	goto	i1l275
  4193     0194                     i1l2325:
  4194     0194  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  4195     0195  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  4196     0196  082C               	movf	low ((_I2C_Status| 0+12)),w
  4197     0197  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4198     0198  0821               	movf	_I2C_Status+1,w
  4199     0199  008A               	movwf	10
  4200     019A  0820               	movf	_I2C_Status,w
  4201     019B  000A               	callw
  4202     019C  3181               	pagesel	$
  4203     019D  00F7               	movwf	??_I2C_DO_TX_EMPTY
  4204     019E  01F8               	clrf	??_I2C_DO_TX_EMPTY+1
  4205                           
  4206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4207                           ; Switch size 1, requested type "simple"
  4208                           ; Number of cases is 1, Range of values is 0 to 0
  4209                           ; switch strategies available:
  4210                           ; Name         Instructions Cycles
  4211                           ; simple_byte            4     3 (average)
  4212                           ; direct_byte            8     6 (fixed)
  4213                           ; jumptable            260     6 (fixed)
  4214                           ;	Chosen strategy is simple_byte
  4215     019F  0878               	movf	??_I2C_DO_TX_EMPTY+1,w
  4216     01A0  3A00               	xorlw	0	; case 0
  4217     01A1  1903               	skipnz
  4218     01A2  29A4               	goto	i1l2971
  4219     01A3  2990               	goto	i1l2319
  4220     01A4                     i1l2971:
  4221                           
  4222                           ; Switch size 1, requested type "simple"
  4223                           ; Number of cases is 4, Range of values is 1 to 4
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte           13     7 (average)
  4227                           ; direct_byte           17     9 (fixed)
  4228                           ; jumptable            263     9 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230     01A4  0877               	movf	??_I2C_DO_TX_EMPTY,w
  4231     01A5  3A01               	xorlw	1	; case 1
  4232     01A6  1903               	skipnz
  4233     01A7  2990               	goto	i1l2319
  4234     01A8  3A03               	xorlw	3	; case 2
  4235     01A9  1903               	skipnz
  4236     01AA  2987               	goto	i1l2309
  4237     01AB  3A01               	xorlw	1	; case 3
  4238     01AC  1903               	skipnz
  4239     01AD  2987               	goto	i1l2309
  4240     01AE  3A07               	xorlw	7	; case 4
  4241     01AF  1903               	skipnz
  4242     01B0  298B               	goto	i1l2313
  4243     01B1  2990               	goto	i1l2319
  4244     01B2                     i1l275:
  4245     01B2  0008               	return
  4246     01B3                     __end_of_I2C_DO_TX_EMPTY:
  4247                           
  4248                           	psect	text32
  4249     0342                     __ptext32:	
  4250 ;; *************** function _I2C_MasterSetIrq *****************
  4251 ;; Defined at:
  4252 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		None
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4266 ;;      Params:         0       0       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_I2C_DO_TX_EMPTY
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279     0342                     _I2C_MasterSetIrq:	
  4280                           ;psect for function _I2C_MasterSetIrq
  4281                           
  4282     0342                     i1l2199:	
  4283                           ;incstack = 0
  4284                           ; Regs used in _I2C_MasterSetIrq: []
  4285                           
  4286     0342  0020               	movlb	0	; select bank0
  4287     0343  1591               	bsf	17,3	;volatile
  4288     0344                     i1l395:
  4289     0344  0008               	return
  4290     0345                     __end_of_I2C_MasterSetIrq:
  4291                           
  4292                           	psect	text33
  4293     02EF                     __ptext33:	
  4294 ;; *************** function _I2C_MasterIsNack *****************
  4295 ;; Defined at:
  4296 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      _Bool 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4310 ;;      Params:         0       0       0       0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_I2C_MasterFsm
  4320 ;;		_I2C_DO_TX
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324     02EF                     _I2C_MasterIsNack:	
  4325                           ;psect for function _I2C_MasterIsNack
  4326                           
  4327     02EF                     i1l2149:	
  4328                           ;incstack = 0
  4329                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4330                           
  4331     02EF  0024               	movlb	4	; select bank4
  4332     02F0  0E16               	swapf	22,w	;volatile
  4333     02F1  0C89               	rrf	9,f
  4334     02F2  0C89               	rrf	9,f
  4335     02F3  3901               	andlw	1
  4336     02F4                     i1l368:
  4337     02F4  0008               	return
  4338     02F5                     __end_of_I2C_MasterIsNack:
  4339                           
  4340                           	psect	text34
  4341     0322                     __ptext34:	
  4342 ;; *************** function _I2C_MasterSendTxData *****************
  4343 ;; Defined at:
  4344 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  data            1    wreg     unsigned char 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  data            1    0[COMMON] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4358 ;;      Params:         0       0       0       0       0       0       0       0
  4359 ;;      Locals:         1       0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0
  4361 ;;      Totals:         1       0       0       0       0       0       0       0
  4362 ;;Total ram usage:        1 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_I2C_DO_SEND_ADR_READ
  4368 ;;		_I2C_DO_SEND_ADR_WRITE
  4369 ;;		_I2C_DO_TX
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373     0322                     _I2C_MasterSendTxData:	
  4374                           ;psect for function _I2C_MasterSendTxData
  4375                           
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4379                           ;I2C_MasterSendTxData@data stored from wreg
  4380     0322  00F7               	movwf	I2C_MasterSendTxData@data
  4381     0323                     i1l2153:
  4382     0323  0877               	movf	I2C_MasterSendTxData@data,w
  4383     0324  0024               	movlb	4	; select bank4
  4384     0325  0091               	movwf	17	;volatile
  4385     0326                     i1l350:
  4386     0326  0008               	return
  4387     0327                     __end_of_I2C_MasterSendTxData:
  4388                           
  4389                           	psect	text35
  4390     032F                     __ptext35:	
  4391 ;; *************** function _I2C_MasterSendAck *****************
  4392 ;; Defined at:
  4393 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		None
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4407 ;;      Params:         0       0       0       0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_I2C_DO_RX
  4417 ;;		_I2C_DO_RX_ACK
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421     032F                     _I2C_MasterSendAck:	
  4422                           ;psect for function _I2C_MasterSendAck
  4423                           
  4424     032F                     i1l2177:	
  4425                           ;incstack = 0
  4426                           ; Regs used in _I2C_MasterSendAck: []
  4427                           
  4428     032F  0024               	movlb	4	; select bank4
  4429     0330  1296               	bcf	22,5	;volatile
  4430     0331  1616               	bsf	22,4	;volatile
  4431     0332                     i1l371:
  4432     0332  0008               	return
  4433     0333                     __end_of_I2C_MasterSendAck:
  4434                           
  4435                           	psect	text36
  4436     0345                     __ptext36:	
  4437 ;; *************** function _I2C_MasterGetRxData *****************
  4438 ;; Defined at:
  4439 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      unsigned char 
  4446 ;; Registers used:
  4447 ;;		wreg
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4453 ;;      Params:         0       0       0       0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0
  4456 ;;      Totals:         0       0       0       0       0       0       0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_I2C_DO_RX
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466     0345                     _I2C_MasterGetRxData:	
  4467                           ;psect for function _I2C_MasterGetRxData
  4468                           
  4469     0345                     i1l2173:	
  4470                           ;incstack = 0
  4471                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4472                           
  4473     0345  0024               	movlb	4	; select bank4
  4474     0346  0811               	movf	17,w	;volatile
  4475     0347                     i1l347:
  4476     0347  0008               	return
  4477     0348                     __end_of_I2C_MasterGetRxData:
  4478                           
  4479                           	psect	text37
  4480     0333                     __ptext37:	
  4481 ;; *************** function _I2C_MasterSendNack *****************
  4482 ;; Defined at:
  4483 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		None
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4497 ;;      Params:         0       0       0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_I2C_DO_RX_NACK_STOP
  4507 ;;		_I2C_DO_RX_NACK_RESTART
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511     0333                     _I2C_MasterSendNack:	
  4512                           ;psect for function _I2C_MasterSendNack
  4513                           
  4514     0333                     i1l2147:	
  4515                           ;incstack = 0
  4516                           ; Regs used in _I2C_MasterSendNack: []
  4517                           
  4518     0333  0024               	movlb	4	; select bank4
  4519     0334  1696               	bsf	22,5	;volatile
  4520     0335  1616               	bsf	22,4	;volatile
  4521     0336                     i1l374:
  4522     0336  0008               	return
  4523     0337                     __end_of_I2C_MasterSendNack:
  4524                           
  4525                           	psect	text38
  4526     0348                     __ptext38:	
  4527 ;; *************** function _I2C_MasterStartRx *****************
  4528 ;; Defined at:
  4529 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      void 
  4536 ;; Registers used:
  4537 ;;		None
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4543 ;;      Params:         0       0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0
  4546 ;;      Totals:         0       0       0       0       0       0       0       0
  4547 ;;Total ram usage:        0 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_I2C_DO_RCEN
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556     0348                     _I2C_MasterStartRx:	
  4557                           ;psect for function _I2C_MasterStartRx
  4558                           
  4559     0348                     i1l2191:	
  4560                           ;incstack = 0
  4561                           ; Regs used in _I2C_MasterStartRx: []
  4562                           
  4563     0348  0024               	movlb	4	; select bank4
  4564     0349  1596               	bsf	22,3	;volatile
  4565     034A                     i1l359:
  4566     034A  0008               	return
  4567     034B                     __end_of_I2C_MasterStartRx:
  4568                           
  4569                           	psect	text39
  4570     034B                     __ptext39:	
  4571 ;; *************** function _I2C_MasterStop *****************
  4572 ;; Defined at:
  4573 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		None
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4587 ;;      Params:         0       0       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0       0
  4590 ;;      Totals:         0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_I2C_DO_SEND_STOP
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600     034B                     _I2C_MasterStop:	
  4601                           ;psect for function _I2C_MasterStop
  4602                           
  4603     034B                     i1l2145:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _I2C_MasterStop: []
  4606                           
  4607     034B  0024               	movlb	4	; select bank4
  4608     034C  1516               	bsf	22,2	;volatile
  4609     034D                     i1l365:
  4610     034D  0008               	return
  4611     034E                     __end_of_I2C_MasterStop:
  4612                           
  4613                           	psect	text40
  4614     034E                     __ptext40:	
  4615 ;; *************** function _I2C_MasterEnableRestart *****************
  4616 ;; Defined at:
  4617 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		None
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4631 ;;      Params:         0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_I2C_DO_SEND_RESTART_READ
  4641 ;;		_I2C_DO_SEND_RESTART_WRITE
  4642 ;;		_I2C_DO_SEND_RESTART
  4643 ;;		_I2C_DO_RX_EMPTY
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647     034E                     _I2C_MasterEnableRestart:	
  4648                           ;psect for function _I2C_MasterEnableRestart
  4649                           
  4650     034E                     i1l2143:	
  4651                           ;incstack = 0
  4652                           ; Regs used in _I2C_MasterEnableRestart: []
  4653                           
  4654     034E  0024               	movlb	4	; select bank4
  4655     034F  1496               	bsf	22,1	;volatile
  4656     0350                     i1l353:
  4657     0350  0008               	return
  4658     0351                     __end_of_I2C_MasterEnableRestart:
  4659                           
  4660                           	psect	text41
  4661     0351                     __ptext41:	
  4662 ;; *************** function _I2C_CallbackReturnReset *****************
  4663 ;; Defined at:
  4664 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  funPtr          2    0[COMMON] PTR void 
  4667 ;;		 -> NULL(0), 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      enum E363
  4672 ;; Registers used:
  4673 ;;		wreg
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4679 ;;      Params:         2       0       0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0
  4682 ;;      Totals:         2       0       0       0       0       0       0       0
  4683 ;;Total ram usage:        2 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_I2C_Open
  4689 ;;		_I2C_DO_TX
  4690 ;;		_I2C_DO_RX
  4691 ;;		_I2C_DO_TX_EMPTY
  4692 ;;		_I2C_DO_ADDRESS_NACK
  4693 ;;		_I2C_DO_RX_EMPTY
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697     0351                     _I2C_CallbackReturnReset:	
  4698                           ;psect for function _I2C_CallbackReturnReset
  4699                           
  4700     0351                     i1l2205:	
  4701                           ;incstack = 0
  4702                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  4703                           
  4704     0351  3005               	movlw	5
  4705     0352                     i1l331:
  4706     0352  0008               	return
  4707     0353                     __end_of_I2C_CallbackReturnReset:
  4708                           
  4709                           	psect	text42
  4710     0353                     __ptext42:	
  4711 ;; *************** function _I2C_CallbackReturnStop *****************
  4712 ;; Defined at:
  4713 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  funPtr          2    0[COMMON] PTR void 
  4716 ;;		 -> NULL(0), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      enum E363
  4721 ;; Registers used:
  4722 ;;		wreg
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4728 ;;      Params:         2       0       0       0       0       0       0       0
  4729 ;;      Locals:         0       0       0       0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0
  4731 ;;      Totals:         2       0       0       0       0       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_I2C_Open
  4738 ;;		_I2C_SetCallback
  4739 ;;		_I2C_DO_TX
  4740 ;;		_I2C_DO_RX
  4741 ;;		_I2C_DO_TX_EMPTY
  4742 ;;		_I2C_DO_ADDRESS_NACK
  4743 ;;		_I2C_DO_RX_EMPTY
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747     0353                     _I2C_CallbackReturnStop:	
  4748                           ;psect for function _I2C_CallbackReturnStop
  4749                           
  4750     0353                     i1l2201:	
  4751                           ;incstack = 0
  4752                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  4753                           
  4754     0353  3001               	movlw	1
  4755     0354                     i1l328:
  4756     0354  0008               	return
  4757     0355                     __end_of_I2C_CallbackReturnStop:
  4758                           
  4759                           	psect	text43
  4760     0225                     __ptext43:	
  4761 ;; *************** function _EUSART_Transmit_ISR *****************
  4762 ;; Defined at:
  4763 ;;		line 197 in file "mcc_generated_files/eusart.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4777 ;;      Params:         0       0       0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0
  4779 ;;      Temps:          1       0       0       0       0       0       0       0
  4780 ;;      Totals:         1       0       0       0       0       0       0       0
  4781 ;;Total ram usage:        1 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_EUSART_Initialize
  4787 ;;		_INTERRUPT_InterruptManager
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791     0225                     _EUSART_Transmit_ISR:	
  4792                           ;psect for function _EUSART_Transmit_ISR
  4793                           
  4794     0225                     i1l2469:	
  4795                           ;incstack = 0
  4796                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4797                           
  4798                           
  4799                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4800     0225  3008               	movlw	8
  4801     0226  0274               	subwf	_eusartTxBufferRemaining,w	;volatile
  4802     0227  1803               	skipnc
  4803     0228  2A2A               	goto	u54_21
  4804     0229  2A2B               	goto	u54_20
  4805     022A                     u54_21:
  4806     022A  2A42               	goto	i1l539
  4807     022B                     u54_20:
  4808     022B                     i1l2471:
  4809                           
  4810                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  4811     022B  0875               	movf	_eusartTxTail,w
  4812     022C  3E54               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4813     022D  0086               	movwf	6
  4814     022E  0187               	clrf	7
  4815     022F  0801               	movf	1,w
  4816     0230  0023               	movlb	3	; select bank3
  4817     0231  009A               	movwf	26	;volatile
  4818     0232                     i1l2473:
  4819     0232  3001               	movlw	1
  4820     0233  00F7               	movwf	??_EUSART_Transmit_ISR
  4821     0234  0877               	movf	??_EUSART_Transmit_ISR,w
  4822     0235  07F5               	addwf	_eusartTxTail,f	;volatile
  4823     0236                     i1l2475:
  4824                           
  4825                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4826     0236  3008               	movlw	8
  4827     0237  0275               	subwf	_eusartTxTail,w	;volatile
  4828     0238  1C03               	skipc
  4829     0239  2A3B               	goto	u55_21
  4830     023A  2A3C               	goto	u55_20
  4831     023B                     u55_21:
  4832     023B  2A3D               	goto	i1l2479
  4833     023C                     u55_20:
  4834     023C                     i1l2477:
  4835                           
  4836                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  4837     023C  01F5               	clrf	_eusartTxTail	;volatile
  4838     023D                     i1l2479:
  4839                           
  4840                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  4841     023D  3001               	movlw	1
  4842     023E  00F7               	movwf	??_EUSART_Transmit_ISR
  4843     023F  0877               	movf	??_EUSART_Transmit_ISR,w
  4844     0240  07F4               	addwf	_eusartTxBufferRemaining,f	;volatile
  4845                           
  4846                           ;mcc_generated_files/eusart.c: 209:     }
  4847     0241  2A44               	goto	i1l542
  4848     0242                     i1l539:	
  4849                           ;mcc_generated_files/eusart.c: 210:     else
  4850                           
  4851                           
  4852                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  4853     0242  0021               	movlb	1	; select bank1
  4854     0243  1211               	bcf	17,4	;volatile
  4855     0244                     i1l542:
  4856     0244  0008               	return
  4857     0245                     __end_of_EUSART_Transmit_ISR:
  4858                           
  4859                           	psect	text44
  4860     014B                     __ptext44:	
  4861 ;; *************** function _EUSART_Receive_ISR *****************
  4862 ;; Defined at:
  4863 ;;		line 216 in file "mcc_generated_files/eusart.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4877 ;;      Params:         0       0       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 2
  4884 ;; This function calls:
  4885 ;;		NULL
  4886 ;;		_EUSART_DefaultErrorHandler
  4887 ;;		_EUSART_DefaultFramingErrorHandler
  4888 ;;		_EUSART_DefaultOverrunErrorHandler
  4889 ;;		_EUSART_RxDataHandler
  4890 ;; This function is called by:
  4891 ;;		_EUSART_Initialize
  4892 ;;		_INTERRUPT_InterruptManager
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896     014B                     _EUSART_Receive_ISR:	
  4897                           ;psect for function _EUSART_Receive_ISR
  4898                           
  4899     014B                     i1l2481:	
  4900                           ;incstack = 0
  4901                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4902                           
  4903                           
  4904                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4905     014B  0873               	movf	_eusartRxHead,w	;volatile
  4906     014C  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4907     014D  0086               	movwf	6
  4908     014E  0187               	clrf	7
  4909     014F  0181               	clrf	1
  4910     0150                     i1l2483:
  4911                           
  4912                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  4913     0150  0023               	movlb	3	; select bank3
  4914     0151  1D1D               	btfss	29,2	;volatile
  4915     0152  2954               	goto	u56_21
  4916     0153  2955               	goto	u56_20
  4917     0154                     u56_21:
  4918     0154  2960               	goto	i1l2489
  4919     0155                     u56_20:
  4920     0155                     i1l2485:
  4921                           
  4922                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4923     0155  0873               	movf	_eusartRxHead,w	;volatile
  4924     0156  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4925     0157  0086               	movwf	6
  4926     0158  0187               	clrf	7
  4927     0159  1481               	bsf	1,1
  4928     015A                     i1l2487:
  4929                           
  4930                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  4931     015A  0021               	movlb	1	; select bank1
  4932     015B  0825               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  4933     015C  008A               	movwf	10
  4934     015D  0824               	movf	_EUSART_FramingErrorHandler^(0+128),w
  4935     015E  000A               	callw
  4936     015F  3181               	pagesel	$
  4937     0160                     i1l2489:
  4938                           
  4939                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  4940     0160  0023               	movlb	3	; select bank3
  4941     0161  1C9D               	btfss	29,1	;volatile
  4942     0162  2964               	goto	u57_21
  4943     0163  2965               	goto	u57_20
  4944     0164                     u57_21:
  4945     0164  2970               	goto	i1l2495
  4946     0165                     u57_20:
  4947     0165                     i1l2491:
  4948                           
  4949                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4950     0165  0873               	movf	_eusartRxHead,w	;volatile
  4951     0166  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4952     0167  0086               	movwf	6
  4953     0168  0187               	clrf	7
  4954     0169  1501               	bsf	1,2
  4955     016A                     i1l2493:
  4956                           
  4957                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  4958     016A  0021               	movlb	1	; select bank1
  4959     016B  0823               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  4960     016C  008A               	movwf	10
  4961     016D  0822               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  4962     016E  000A               	callw
  4963     016F  3181               	pagesel	$
  4964     0170                     i1l2495:
  4965                           
  4966                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4967     0170  0873               	movf	_eusartRxHead,w	;volatile
  4968     0171  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4969     0172  0086               	movwf	6
  4970     0173  0187               	clrf	7
  4971     0174  0801               	movf	1,w
  4972     0175  1903               	btfsc	3,2
  4973     0176  2978               	goto	u58_21
  4974     0177  2979               	goto	u58_20
  4975     0178                     u58_21:
  4976     0178  2980               	goto	i1l2499
  4977     0179                     u58_20:
  4978     0179                     i1l2497:
  4979                           
  4980                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  4981     0179  0021               	movlb	1	; select bank1
  4982     017A  0821               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  4983     017B  008A               	movwf	10
  4984     017C  0820               	movf	_EUSART_ErrorHandler^(0+128),w
  4985     017D  000A               	callw
  4986     017E  3181               	pagesel	$
  4987                           
  4988                           ;mcc_generated_files/eusart.c: 233:     } else {
  4989     017F  2983               	goto	i1l549
  4990     0180                     i1l2499:
  4991                           
  4992                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  4993     0180  3182  2261  3181   	fcall	_EUSART_RxDataHandler
  4994     0183                     i1l549:
  4995     0183  0008               	return
  4996     0184                     __end_of_EUSART_Receive_ISR:
  4997                           
  4998                           	psect	text45
  4999     0337                     __ptext45:	
  5000 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5001 ;; Defined at:
  5002 ;;		line 252 in file "mcc_generated_files/eusart.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		None
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5016 ;;      Params:         0       0       0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_EUSART_Initialize
  5026 ;;		_EUSART_Receive_ISR
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030     0337                     _EUSART_DefaultOverrunErrorHandler:	
  5031                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5032                           
  5033     0337                     i1l2433:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5036                           
  5037                           
  5038                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  5039     0337  0023               	movlb	3	; select bank3
  5040     0338  121D               	bcf	29,4	;volatile
  5041                           
  5042                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  5043     0339  161D               	bsf	29,4	;volatile
  5044     033A                     i1l559:
  5045     033A  0008               	return
  5046     033B                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5047                           
  5048                           	psect	text46
  5049     0355                     __ptext46:	
  5050 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5051 ;; Defined at:
  5052 ;;		line 250 in file "mcc_generated_files/eusart.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		None
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5066 ;;      Params:         0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_EUSART_Initialize
  5076 ;;		_EUSART_Receive_ISR
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080     0355                     _EUSART_DefaultFramingErrorHandler:	
  5081                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5082                           
  5083     0355                     i1l556:	
  5084                           ;incstack = 0
  5085                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5086                           
  5087     0355  0008               	return
  5088     0356                     __end_of_EUSART_DefaultFramingErrorHandler:
  5089                           
  5090                           	psect	text47
  5091     033B                     __ptext47:	
  5092 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5093 ;; Defined at:
  5094 ;;		line 260 in file "mcc_generated_files/eusart.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5108 ;;      Params:         0       0       0       0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0
  5111 ;;      Totals:         0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 1
  5115 ;; This function calls:
  5116 ;;		_EUSART_RxDataHandler
  5117 ;; This function is called by:
  5118 ;;		_EUSART_Initialize
  5119 ;;		_EUSART_Receive_ISR
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123     033B                     _EUSART_DefaultErrorHandler:	
  5124                           ;psect for function _EUSART_DefaultErrorHandler
  5125                           
  5126     033B                     i1l2435:	
  5127                           ;incstack = 0
  5128                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5129                           
  5130                           
  5131                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  5132     033B  3182  2261  3183   	fcall	_EUSART_RxDataHandler
  5133     033E                     i1l562:
  5134     033E  0008               	return
  5135     033F                     __end_of_EUSART_DefaultErrorHandler:
  5136                           
  5137                           	psect	text48
  5138     0261                     __ptext48:	
  5139 ;; *************** function _EUSART_RxDataHandler *****************
  5140 ;; Defined at:
  5141 ;;		line 240 in file "mcc_generated_files/eusart.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5155 ;;      Params:         0       0       0       0       0       0       0       0
  5156 ;;      Locals:         0       0       0       0       0       0       0       0
  5157 ;;      Temps:          1       0       0       0       0       0       0       0
  5158 ;;      Totals:         1       0       0       0       0       0       0       0
  5159 ;;Total ram usage:        1 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_EUSART_Receive_ISR
  5165 ;;		_EUSART_DefaultErrorHandler
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     0261                     _EUSART_RxDataHandler:	
  5170                           ;psect for function _EUSART_RxDataHandler
  5171                           
  5172     0261                     i1l2375:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5175                           
  5176                           
  5177                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5178     0261  0873               	movf	_eusartRxHead,w
  5179     0262  3E4C               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5180     0263  0086               	movwf	6
  5181     0264  0187               	clrf	7
  5182     0265  0023               	movlb	3	; select bank3
  5183     0266  0819               	movf	25,w	;volatile
  5184     0267  0081               	movwf	1
  5185     0268                     i1l2377:
  5186     0268  3001               	movlw	1
  5187     0269  00F7               	movwf	??_EUSART_RxDataHandler
  5188     026A  0877               	movf	??_EUSART_RxDataHandler,w
  5189     026B  07F3               	addwf	_eusartRxHead,f	;volatile
  5190     026C                     i1l2379:
  5191                           
  5192                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5193     026C  3008               	movlw	8
  5194     026D  0273               	subwf	_eusartRxHead,w	;volatile
  5195     026E  1C03               	skipc
  5196     026F  2A71               	goto	u45_21
  5197     0270  2A72               	goto	u45_20
  5198     0271                     u45_21:
  5199     0271  2A73               	goto	i1l2383
  5200     0272                     u45_20:
  5201     0272                     i1l2381:
  5202                           
  5203                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  5204     0272  01F3               	clrf	_eusartRxHead	;volatile
  5205     0273                     i1l2383:
  5206                           
  5207                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  5208     0273  3001               	movlw	1
  5209     0274  00F7               	movwf	??_EUSART_RxDataHandler
  5210     0275  0877               	movf	??_EUSART_RxDataHandler,w
  5211     0276  07F1               	addwf	_eusartRxCount,f	;volatile
  5212     0277                     i1l553:
  5213     0277  0008               	return
  5214     0278                     __end_of_EUSART_RxDataHandler:
  5215     007E                     btemp	set	126	;btemp
  5216     007E                     int$flags	set	126
  5217     007E                     wtemp0	set	126
  5218                           
  5219                           	psect	idloc
  5220                           
  5221                           ;Config register IDLOC0 @ 0x8000
  5222                           ;	unspecified, using default values
  5223     8000                     	org	32768
  5224     8000  3FFF               	dw	16383
  5225                           
  5226                           ;Config register IDLOC1 @ 0x8001
  5227                           ;	unspecified, using default values
  5228     8001                     	org	32769
  5229     8001  3FFF               	dw	16383
  5230                           
  5231                           ;Config register IDLOC2 @ 0x8002
  5232                           ;	unspecified, using default values
  5233     8002                     	org	32770
  5234     8002  3FFF               	dw	16383
  5235                           
  5236                           ;Config register IDLOC3 @ 0x8003
  5237                           ;	unspecified, using default values
  5238     8003                     	org	32771
  5239     8003  3FFF               	dw	16383
  5240                           
  5241                           	psect	config
  5242                           
  5243                           ;Config register CONFIG1 @ 0x8007
  5244                           ;	Oscillator Selection
  5245                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5246                           ;	Watchdog Timer Enable
  5247                           ;	WDTE = OFF, WDT disabled
  5248                           ;	Power-up Timer Enable
  5249                           ;	PWRTE = OFF, PWRT disabled
  5250                           ;	MCLR Pin Function Select
  5251                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5252                           ;	Flash Program Memory Code Protection
  5253                           ;	CP = OFF, Program memory code protection is disabled
  5254                           ;	Data Memory Code Protection
  5255                           ;	CPD = OFF, Data memory code protection is disabled
  5256                           ;	Brown-out Reset Enable
  5257                           ;	BOREN = ON, Brown-out Reset enabled
  5258                           ;	Clock Out Enable
  5259                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5260                           ;	Internal/External Switchover
  5261                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5262                           ;	Fail-Safe Clock Monitor Enable
  5263                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5264     8007                     	org	32775
  5265     8007  3FE4               	dw	16356
  5266                           
  5267                           ;Config register CONFIG2 @ 0x8008
  5268                           ;	Flash Memory Self-Write Protection
  5269                           ;	WRT = OFF, Write protection off
  5270                           ;	Voltage Regulator Capacitor Enable
  5271                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5272                           ;	PLL Enable
  5273                           ;	PLLEN = OFF, 4x PLL disabled
  5274                           ;	Stack Overflow/Underflow Reset Enable
  5275                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5276                           ;	Brown-out Reset Voltage Selection
  5277                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5278                           ;	Low-Voltage Programming Enable
  5279                           ;	LVP = ON, Low-voltage programming enabled
  5280     8008                     	org	32776
  5281     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    32
    Data        12
    BSS         73
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      80
    BANK1            80      2      10
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_MasterFsm$1904	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    NULL$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    S198$data_ptr	PTR unsigned char  size(2) Largest target is 0

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 0

    S198$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     605
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1126
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0    1126
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0    1126
                                              3 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0     287
                                              1 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      66       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      66      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 08 16:07:13 2023

                ?_EUSART_SetRxInterruptHandler 00A8                         ??_I2C_DO_SEND_ADR_READ 0077  
                      ??_I2C_DO_SEND_ADR_WRITE 0078                                    _SSPSTATbits 0214  
                                           l31 0260                                             l60 02BD  
                                           l63 032A                                             l57 0287  
                        ??_I2C_DO_SEND_RESTART 0077                                            l172 029C  
                                          l508 014A                                            l571 02EE  
                                          l565 02E8                                            l574 02A5  
                                          l568 02E2                                            l577 02DC  
                                          l586 02D4                                            l587 02D4  
                       ??_EUSART_RxDataHandler 0077                 ?_EUSART_SetFramingErrorHandler 00A8  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 0079  
                                 _I2C_DO_RESET 02F5                                           l2801 029D  
                                         l2803 02E3                                           l2811 0249  
                                         l2805 02DD                                           l2821 0254  
                                         l2813 024B                                           l2807 02E9  
                                         l2831 025E                                           l2823 0257  
                                         l2815 024E                                           l2833 0294  
                                         l2841 02B7                                           l2825 0259  
                                         l2817 0250                                           l2809 0245  
                                         l2851 010E                                           l2835 0296  
                                         l2843 02BA                                           l2827 025B  
                                         l2819 0252                                           l2861 0125  
                                         l2853 0115                                           l2837 0298  
                                         l2845 02BB                                           l2829 025C  
                                         l2871 0143                                           l2863 0127  
                                         l2855 011E                                           l2839 029B  
                                         l2847 0327                                           l2873 0145  
                                         l2865 0128                                           l2857 0121  
                                         l2849 010C                                           l2881 0278  
                                         l2875 0146                                           l2867 0130  
                                         l2859 0123                                           l2883 02D1  
                                         l2877 0147                                           l2869 0138  
                                         l2799 02D7                                           l2879 0148  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATE 0110  
                                         _WPUB 020D                                           _WPUE 0210  
                                         _main 02D1                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0048  
                                _I2C_DO_RX_ACK 0304                  __end_of_OSCILLATOR_Initialize 02BE  
                                        ?_main 0077                                          i1l302 030D  
                                        i1l311 02FE                                          i1l232 0321  
                                        i1l320 01DC                                          i1l241 00A1  
                                        i1l305 0308                                          i1l225 032E  
                                        i1l314 02F9                                          i1l331 0352  
                                        i1l235 02AE                                          i1l244 00C0  
                                        i1l308 0303                                          i1l229 0204  
                                        i1l350 0326                                          i1l238 02B6  
                                        i1l328 0354                                          i1l424 001A  
                                        i1l353 0350                                          i1l257 00E3  
                                        i1l433 0046                                          i1l258 010B  
                                        i1l426 002B                                          i1l347 0347  
                                        i1l371 0332                                          i1l275 01B2  
                                        i1l427 0046                                          i1l428 003B  
                                        i1l365 034D                                          i1l269 02C4  
                                        i1l293 031C                                          i1l542 0244  
                                        i1l374 0336                                          i1l359 034A  
                                        i1l368 02F4                                          i1l296 0317  
                                        i1l392 0341                                          i1l553 0277  
                                        i1l562 033E                                          i1l539 0242  
                                        i1l395 0344                                          i1l299 0312  
                                        i1l556 0355                                          i1l549 0183  
                                        i1l559 033A                                          _RCREG 0199  
                                        _RCSTA 019D                                          u42_20 0071  
                                        u42_21 0070                                          u43_20 00BD  
                                        u43_21 00BC                                          u44_20 00DE  
                                        u44_21 00DD                                          u45_20 0272  
                                        u45_21 0271                                          u54_20 022B  
                                        u46_20 01E5                                          u70_20 0040  
                                        u54_21 022A                                          u46_21 01E4  
                                        u70_21 003F                                          u55_20 023C  
                                        u47_20 01ED                                          u71_20 0045  
                                        u63_20 000A                                          u55_21 023B  
                                        u47_21 01EC                                          u71_21 0044  
                                        u63_21 0009                                          u56_20 0155  
                                        u64_20 000F                                          u56_21 0154  
                                        u64_21 000E                                          u57_20 0165  
                                        u65_20 0014                              ??_I2C_DO_TX_EMPTY 0077  
                                        u57_21 0164                                          u65_21 0013  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u58_20 0179                                          u66_20 001F  
                                        u58_21 0178                                          u66_21 001E  
                                        u67_20 0024                                          u67_21 0023  
                                        u68_20 0030                                          u68_21 002F  
                                        u69_20 0035                                          u69_21 0034  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 010C                              __end_of_I2C_DO_TX 00C1  
                               _WDT_Initialize 0327                        _I2C_MasterEnableRestart 034E  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0077  
                           ??_I2C_DO_SEND_STOP 0077                                __initialization 004A  
                                 __end_of_main 02D7                      ?_I2C_DO_SEND_RESTART_READ 0077  
                               ?_I2C_DO_RX_ACK 0077                    ?_INTERRUPT_InterruptManager 0077  
               ??_EUSART_SetRxInterruptHandler 0000                                         ??_main 0000  
                            ?_I2C_MasterIsNack 0077                              ?_I2C_MasterSetIrq 0077  
                           ??_I2C_MasterIsNack 0077                         __end_of_WDT_Initialize 032B  
                           ??_I2C_MasterSetIrq 0077      __end_of_EUSART_DefaultFramingErrorHandler 0356  
          ??_EUSART_DefaultFramingErrorHandler 0077             ?_EUSART_DefaultFramingErrorHandler 0077  
            _EUSART_DefaultFramingErrorHandler 0355                     _EUSART_OverrunErrorHandler 00A2  
              __end_of_I2C_CallbackReturnReset 0353                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l2201 0353  
                                       i1l2211 031D                                         i1l2205 0351  
                                       i1l2213 031F                                         i1l2221 02A8  
                                       i1l2301 02C0                                         i1l2143 034E  
                                       i1l2215 0320                                         i1l2223 02AD  
                                       i1l2231 02B5                                         i1l2303 02C3  
                                       i1l2145 034B                                         i1l2153 0323  
                                       i1l2313 018B                                         i1l2161 0313  
                                       i1l2209 033F                                         i1l2147 0333  
                                       i1l2315 018E                                         i1l2307 0184  
                                       i1l2219 02A6                                         i1l2227 02AF  
                                       i1l2243 0076                                         i1l2235 0069  
                                       i1l2155 0318                                         i1l2163 0316  
                                       i1l2331 0304                                         i1l2173 0345  
                                       i1l2149 02EF                                         i1l2309 0187  
                                       i1l2325 0194                                         i1l2229 02B1  
                                       i1l2261 00BF                                         i1l2253 007E  
                                       i1l2157 031B                                         i1l2333 0307  
                                       i1l2181 02FD                                         i1l2341 02F8  
                                       i1l2191 0348                                         i1l2319 0190  
                                       i1l2255 00A3                                         i1l2247 007A  
                                       i1l2239 0072                                         i1l2271 00CF  
                                       i1l2167 0309                                         i1l2431 01F0  
                                       i1l2423 01DD                                         i1l2433 0337  
                                       i1l2177 032F                                         i1l2257 00B2  
                                       i1l2273 00D4                                         i1l2193 030E  
                                       i1l2169 030C                                         i1l2185 02FF  
                                       i1l2337 02F5                                         i1l2353 01BC  
                                       i1l2345 01B3                                         i1l2425 01E0  
                                       i1l2435 033B                                         i1l2259 00BD  
                                       i1l2283 00E5                                         i1l2275 00DE  
                                       i1l2195 0311                                         i1l2187 0302  
                                       i1l2179 02FA                                         i1l2339 02F7  
                                       i1l2347 01B5                                         i1l2427 01E5  
                                       i1l2381 0272                                         i1l2293 00ED  
                                       i1l2277 00E1                                         i1l2269 00C1  
                                       i1l2349 01B8                                         i1l2429 01ED  
                                       i1l2383 0273                                         i1l2375 0261  
                                       i1l2471 022B                                         i1l2199 0342  
                                       i1l2287 00E9                                         i1l2359 01C0  
                                       i1l2377 0268                                         i1l2481 014B  
                                       i1l2473 0232                                         i1l2379 026C  
                                       i1l2491 0165                                         i1l2483 0150  
                                       i1l2475 0236                                         i1l2299 02BE  
                                       i1l2467 032B                                         i1l2493 016A  
                                       i1l2485 0155                                         i1l2477 023C  
                                       i1l2469 0225                                         i1l2661 0014  
                                       i1l2495 0170                                         i1l2487 015A  
                                       i1l2479 023D                                         i1l2671 0040  
                                       i1l2663 001F                                         i1l2655 0006  
                                       i1l2497 0179                                         i1l2489 0160  
                                       i1l2665 0024                                         i1l2657 000A  
                                       i1l2499 0180                                         i1l2667 0030  
                                       i1l2659 000F                                         i1l2669 0035  
                                       i1l2971 01A4                                         i1l2965 01D4  
                                       i1l2967 00FD                                         i1l2969 0093  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 0345                                  _I2C_MasterFsm 01DD  
                                _I2C_MasterIsr 032B                            _EUSART_Transmit_ISR 0225  
                          _I2C_DO_ADDRESS_NACK 01B3                           ?_I2C_MasterGetRxData 0077  
                              ?_WDT_Initialize 0077                      ??_I2C_MasterEnableRestart 0077  
                         ?_EUSART_Transmit_ISR 0077                              _SYSTEM_Initialize 0278  
                      __end_of__initialization 0065                             ?_SYSTEM_Initialize 0077  
                         ?_I2C_DO_ADDRESS_NACK 0077           __end_of_EUSART_SetTxInterruptHandler 02A6  
                 _EUSART_SetTxInterruptHandler 029D                                 __pcstackCOMMON 0077  
                               ?_I2C_MasterFsm 0077                                 ?_I2C_MasterIsr 0077  
                              ??_I2C_DO_RX_ACK 0077                                   __pidataBANK0 0288  
                       _I2C_CallbackReturnStop 0353                            ??_SYSTEM_Initialize 0000  
                __end_of_I2C_DO_SEND_ADR_WRITE 02B7                     ?_I2C_DO_SEND_RESTART_WRITE 0077  
                        ??_I2C_MasterGetRxData 0077                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0044                     __end_of_I2C_MasterClearIrq 0342  
              ??_EUSART_SetOverrunErrorHandler 0000                      __end_of_SYSTEM_Initialize 0288  
                        ??_EUSART_Transmit_ISR 0077                              _I2C_MasterSendAck 032F  
                                   __pbssBANK0 0020                                  ??_I2C_DO_IDLE 0077  
                                ??_I2C_DO_RCEN 0077                   __end_of_I2C_MasterSendTxData 0327  
                           ?_I2C_MasterSendAck 0077                              _I2C_MasterStartRx 0348  
                        ??_I2C_DO_ADDRESS_NACK 0077                            _I2C_DO_RX_NACK_STOP 02FF  
                           ?_I2C_MasterStartRx 0077                     __end_of_I2C_MasterSendNack 0337  
                                   __pmaintext 02D1                            ??_I2C_MasterSendAck 0077  
                ?_EUSART_SetTxInterruptHandler 00A8               _EUSART_TxDefaultInterruptHandler 006E  
                  __end_of_I2C_DO_SEND_RESTART 0313                                _I2C_DO_TX_EMPTY 0184  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0077  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0078  
                     ??_I2C_DO_RX_NACK_RESTART 0077              __end_of_I2C_DO_SEND_RESTART_WRITE 0318  
                         ?_I2C_DO_RX_NACK_STOP 0077                                  _eusartRxCount 0071  
                    __end_of_I2C_MasterSendAck 0333                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0000                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                    __end_of_I2C_MasterStartRx 034B                                      _I2C_DO_RX 00C1  
                                    _I2C_DO_TX 0069               __end_of_I2C_DO_SEND_RESTART_READ 031D  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 0322                            __end_of_I2C_DO_RCEN 02C5  
                                  _Temperature 0060                                 _I2C_MasterStop 034B  
                               _I2C_Initialize 0294                                        __ptext1 0278  
                                      __ptext2 0327                                        __ptext3 0245  
                                      __ptext4 02B7                                        __ptext5 0294  
                                      __ptext6 010C                                        __ptext7 029D  
                                      __ptext8 02D7                                        __ptext9 02DD  
                        ??_I2C_DO_RX_NACK_STOP 0077                          _OSCILLATOR_Initialize 02B7  
                     ??_PIN_MANAGER_Initialize 0000                  I2C_CallbackReturnReset@funPtr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 006C                                        clrloop0 02CC  
                   _SHT30_CMD_MEASURE_L_Enable 0068                           end_of_initialization 0065  
                   _SHT30_CMD_MEASURE_M_Enable 006A                                     ?_I2C_DO_RX 0077  
                                   ?_I2C_DO_TX 0077          __end_of_EUSART_SetOverrunErrorHandler 02E3  
                _EUSART_SetOverrunErrorHandler 02DD                                        init_ram 02C5  
                                      initloop 02C6                        __end_of_I2C_DO_TX_EMPTY 01B3  
                            _EUSART_Initialize 010C                    _SHT30_CMD_MEASURE_H_Disable 0066  
                           ?_EUSART_Initialize 0077                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 034E                         __end_of_I2C_Initialize 029D  
                  _SHT30_CMD_MEASURE_L_Disable 0062                    _SHT30_CMD_MEASURE_M_Disable 0064  
                          ??_EUSART_Initialize 0000                               ??_WDT_Initialize 0000  
               ??_EUSART_SetTxInterruptHandler 0000                           _I2C_MasterSendTxData 0322  
                    __end_of_EUSART_Initialize 014B                                    _I2C_DO_IDLE 031D  
                                  _I2C_DO_RCEN 02BE                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 0318  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterStop 0077  
                              ?_I2C_Initialize 0077                        _I2C_CallbackReturnReset 0351  
           __end_of_EUSART_DefaultErrorHandler 033F                     _EUSART_DefaultErrorHandler 033B  
                        ?_I2C_MasterSendTxData 0077                         ?_OSCILLATOR_Initialize 0077  
                  ??_I2C_DO_SEND_RESTART_WRITE 0077                            start_initialization 004A  
                                ?_I2C_DO_RESET 0077   EUSART_SetRxInterruptHandler@interruptHandler 00A8  
 EUSART_SetTxInterruptHandler@interruptHandler 00A8                                    ??_I2C_DO_RX 0077  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 0355  
                       _I2C_DO_RX_NACK_RESTART 02FA                               ?_I2C_DO_TX_EMPTY 0077  
                           _I2C_MasterClearIrq 033F                 ?_EUSART_SetOverrunErrorHandler 00A8  
                   _EUSART_FramingErrorHandler 00A4                         _EUSART_SetErrorHandler 02E9  
                          ?_I2C_MasterClearIrq 0077                    __end_of_I2C_MasterGetRxData 0348  
                                  __pdataBANK0 0062                          __end_of_I2C_DO_RX_ACK 0309  
                             _I2C_DO_SEND_STOP 0309                             _I2C_MasterSendNack 0333  
                     ?_I2C_MasterEnableRestart 0077                              _i2c_fsmStateTable 0205  
                  __end_of_EUSART_Transmit_ISR 0245                          _I2C_DO_SEND_ADR_WRITE 02AF  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 0000                                  __pcstackBANK1 00A8  
                               ??_I2C_DO_RESET 0077                            ?_I2C_MasterSendNack 0077  
                 __end_of_I2C_DO_SEND_ADR_READ 02AF                           ??_I2C_MasterClearIrq 0077  
                  __end_of_I2C_DO_ADDRESS_NACK 01DD                     __end_of_EUSART_Receive_ISR 0184  
                             _I2C_MasterIsNack 02EF                      _I2C_DO_SEND_RESTART_WRITE 0313  
             _EUSART_RxDefaultInterruptHandler 00A6                               _I2C_MasterSetIrq 0342  
                                    __pnvBANK0 006E                                      __pnvBANK1 00A0  
                 __end_of_EUSART_RxDataHandler 0278                         _PIN_MANAGER_Initialize 0245  
                    ??_I2C_CallbackReturnReset 0079                           ??_I2C_MasterSendNack 0077  
                                 _eusartRxHead 0073                                   _eusartTxHead 0076  
                                 _eusartRxTail 0072                         ??_I2C_MasterSendTxData 0077  
                                 _eusartTxTail 0075                      __end_of_i2c_fsmStateTable 0225  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0074  
                               _eusartRxBuffer 004C                                 _eusartTxBuffer 0054  
       EUSART_SetErrorHandler@interruptHandler 00A8                                      clear_ram0 02CB  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0000                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 0205                          __end_of_I2C_MasterIsr 032F  
                  __end_of_I2C_DO_RX_NACK_STOP 0304      __end_of_EUSART_DefaultOverrunErrorHandler 033B  
          ??_EUSART_DefaultOverrunErrorHandler 0077             ?_EUSART_DefaultOverrunErrorHandler 0077  
            _EUSART_DefaultOverrunErrorHandler 0337                __end_of_I2C_MasterEnableRestart 0351  
                       ?_I2C_DO_SEND_ADR_WRITE 0077                       I2C_MasterSendTxData@data 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0077                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0077                                   ?_I2C_DO_RCEN 0077  
                                     _Humidity 005E                               ??_I2C_MasterStop 0077  
                             ??_I2C_Initialize 0000                           __end_of_I2C_DO_RESET 02FA  
                      ??_OSCILLATOR_Initialize 0000                            _EUSART_ErrorHandler 00A0  
                         _I2C_DO_SEND_ADR_READ 02A6                    ?_EUSART_DefaultErrorHandler 0077  
                         _EUSART_RxDataHandler 0261                                       __ptext10 02E3  
                                     __ptext11 02E9                                       __ptext20 0304  
                                     __ptext21 0309                                       __ptext13 032B  
                                     __ptext30 031D                                       __ptext22 030E  
                                     __ptext14 01DD                                       __ptext31 0184  
                                     __ptext23 0313                                       __ptext15 033F  
                                     __ptext40 034E                                       __ptext32 0342  
                                     __ptext24 0318                                       __ptext16 01B3  
                                     __ptext41 0351                                       __ptext33 02EF  
                                     __ptext25 02BE                                       __ptext17 02F5  
                                     __ptext42 0353                                       __ptext34 0322  
                                     __ptext26 00C1                                       __ptext18 02FA  
                                     __ptext43 0225                                       __ptext35 032F  
                                     __ptext27 0069                                       __ptext19 02FF  
                                     __ptext44 014B                                       __ptext36 0345  
                                     __ptext28 02AF                                       __ptext45 0337  
                                     __ptext37 0333                                       __ptext29 02A6  
                                     __ptext46 0355                                       __ptext38 0348  
                                     __ptext47 033B                                       __ptext39 034B  
                                     __ptext48 0261                        ?_I2C_DO_RX_NACK_RESTART 0077  
                     __end_of_I2C_DO_SEND_STOP 030E                        ?_EUSART_SetErrorHandler 00A8  
EUSART_SetOverrunErrorHandler@interruptHandler 00A8                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0077             __end_of_INTERRUPT_InterruptManager 0048  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 02E9  
                _EUSART_SetFramingErrorHandler 02E3                       __end_of_I2C_MasterIsNack 02F5  
                     __end_of_I2C_MasterSetIrq 0345                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0077                 __end_of_I2C_DO_RX_NACK_RESTART 02FF  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 02EF                            _I2C_DO_SEND_RESTART 030E  
         __end_of_EUSART_SetRxInterruptHandler 02DD                   _EUSART_SetRxInterruptHandler 02D7  
                           _EUSART_Receive_ISR 014B  EUSART_SetFramingErrorHandler@interruptHandler 00A8  
                                __pstringtext1 0205                           ?_I2C_DO_SEND_RESTART 0077  
                          ?_EUSART_Receive_ISR 0077                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                 __end_of_PIN_MANAGER_Initialize 0261  
                         ??_EUSART_Receive_ISR 0078                          _MSSP_InterruptHandler 005C  
