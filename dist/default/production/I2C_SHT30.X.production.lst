

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 11 14:41:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x320,16
    84                           	dabs	1,0x2A0,80
    85                           	dabs	1,0x220,80
    86                           	dabs	1,0x1A0,80
    87                           	dabs	1,0x154,28
    88                           	dabs	1,0x20D4,0,_SES_Modbus
    89                           	dabs	1,0x7E,2
    90     0000                     
    91                           ; Version 2.40
    92                           ; Generated 17/11/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC16F1936 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0090                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0095                     	;# 
   164     0096                     	;# 
   165     0097                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009A                     	;# 
   169     009B                     	;# 
   170     009B                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     0110                     	;# 
   178     0111                     	;# 
   179     0112                     	;# 
   180     0113                     	;# 
   181     0114                     	;# 
   182     0115                     	;# 
   183     0116                     	;# 
   184     0117                     	;# 
   185     0118                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011B                     	;# 
   189     011D                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192     0191                     	;# 
   193     0191                     	;# 
   194     0192                     	;# 
   195     0193                     	;# 
   196     0193                     	;# 
   197     0193                     	;# 
   198     0194                     	;# 
   199     0195                     	;# 
   200     0196                     	;# 
   201     0199                     	;# 
   202     019A                     	;# 
   203     019B                     	;# 
   204     019B                     	;# 
   205     019B                     	;# 
   206     019B                     	;# 
   207     019C                     	;# 
   208     019C                     	;# 
   209     019D                     	;# 
   210     019E                     	;# 
   211     019F                     	;# 
   212     020D                     	;# 
   213     0210                     	;# 
   214     0211                     	;# 
   215     0212                     	;# 
   216     0213                     	;# 
   217     0214                     	;# 
   218     0215                     	;# 
   219     0215                     	;# 
   220     0216                     	;# 
   221     0217                     	;# 
   222     0291                     	;# 
   223     0291                     	;# 
   224     0292                     	;# 
   225     0293                     	;# 
   226     0294                     	;# 
   227     0295                     	;# 
   228     0295                     	;# 
   229     0296                     	;# 
   230     0298                     	;# 
   231     0298                     	;# 
   232     0299                     	;# 
   233     029A                     	;# 
   234     029B                     	;# 
   235     029C                     	;# 
   236     029C                     	;# 
   237     029D                     	;# 
   238     029E                     	;# 
   239     029F                     	;# 
   240     0311                     	;# 
   241     0311                     	;# 
   242     0312                     	;# 
   243     0313                     	;# 
   244     0314                     	;# 
   245     0315                     	;# 
   246     0315                     	;# 
   247     0316                     	;# 
   248     0318                     	;# 
   249     0318                     	;# 
   250     0319                     	;# 
   251     031A                     	;# 
   252     031C                     	;# 
   253     031C                     	;# 
   254     031D                     	;# 
   255     031E                     	;# 
   256     0394                     	;# 
   257     0395                     	;# 
   258     0396                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0791                     	;# 
   266     0792                     	;# 
   267     0793                     	;# 
   268     0794                     	;# 
   269     0795                     	;# 
   270     0798                     	;# 
   271     0799                     	;# 
   272     07A0                     	;# 
   273     07A1                     	;# 
   274     07A3                     	;# 
   275     07A4                     	;# 
   276     07A6                     	;# 
   277     07A7                     	;# 
   278     07A9                     	;# 
   279     07AA                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0015                     	;# 
   311     0016                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001C                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     008C                     	;# 
   322     008D                     	;# 
   323     008E                     	;# 
   324     0090                     	;# 
   325     0091                     	;# 
   326     0092                     	;# 
   327     0093                     	;# 
   328     0095                     	;# 
   329     0096                     	;# 
   330     0097                     	;# 
   331     0098                     	;# 
   332     0099                     	;# 
   333     009A                     	;# 
   334     009B                     	;# 
   335     009B                     	;# 
   336     009C                     	;# 
   337     009D                     	;# 
   338     009E                     	;# 
   339     010C                     	;# 
   340     010D                     	;# 
   341     010E                     	;# 
   342     0110                     	;# 
   343     0111                     	;# 
   344     0112                     	;# 
   345     0113                     	;# 
   346     0114                     	;# 
   347     0115                     	;# 
   348     0116                     	;# 
   349     0117                     	;# 
   350     0118                     	;# 
   351     0119                     	;# 
   352     011A                     	;# 
   353     011B                     	;# 
   354     011D                     	;# 
   355     018C                     	;# 
   356     018D                     	;# 
   357     0191                     	;# 
   358     0191                     	;# 
   359     0192                     	;# 
   360     0193                     	;# 
   361     0193                     	;# 
   362     0193                     	;# 
   363     0194                     	;# 
   364     0195                     	;# 
   365     0196                     	;# 
   366     0199                     	;# 
   367     019A                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019B                     	;# 
   371     019B                     	;# 
   372     019C                     	;# 
   373     019C                     	;# 
   374     019D                     	;# 
   375     019E                     	;# 
   376     019F                     	;# 
   377     020D                     	;# 
   378     0210                     	;# 
   379     0211                     	;# 
   380     0212                     	;# 
   381     0213                     	;# 
   382     0214                     	;# 
   383     0215                     	;# 
   384     0215                     	;# 
   385     0216                     	;# 
   386     0217                     	;# 
   387     0291                     	;# 
   388     0291                     	;# 
   389     0292                     	;# 
   390     0293                     	;# 
   391     0294                     	;# 
   392     0295                     	;# 
   393     0295                     	;# 
   394     0296                     	;# 
   395     0298                     	;# 
   396     0298                     	;# 
   397     0299                     	;# 
   398     029A                     	;# 
   399     029B                     	;# 
   400     029C                     	;# 
   401     029C                     	;# 
   402     029D                     	;# 
   403     029E                     	;# 
   404     029F                     	;# 
   405     0311                     	;# 
   406     0311                     	;# 
   407     0312                     	;# 
   408     0313                     	;# 
   409     0314                     	;# 
   410     0315                     	;# 
   411     0315                     	;# 
   412     0316                     	;# 
   413     0318                     	;# 
   414     0318                     	;# 
   415     0319                     	;# 
   416     031A                     	;# 
   417     031C                     	;# 
   418     031C                     	;# 
   419     031D                     	;# 
   420     031E                     	;# 
   421     0394                     	;# 
   422     0395                     	;# 
   423     0396                     	;# 
   424     0415                     	;# 
   425     0416                     	;# 
   426     0417                     	;# 
   427     041C                     	;# 
   428     041D                     	;# 
   429     041E                     	;# 
   430     0791                     	;# 
   431     0792                     	;# 
   432     0793                     	;# 
   433     0794                     	;# 
   434     0795                     	;# 
   435     0798                     	;# 
   436     0799                     	;# 
   437     07A0                     	;# 
   438     07A1                     	;# 
   439     07A3                     	;# 
   440     07A4                     	;# 
   441     07A6                     	;# 
   442     07A7                     	;# 
   443     07A9                     	;# 
   444     07AA                     	;# 
   445     0FE4                     	;# 
   446     0FE5                     	;# 
   447     0FE6                     	;# 
   448     0FE7                     	;# 
   449     0FE8                     	;# 
   450     0FE9                     	;# 
   451     0FEA                     	;# 
   452     0FEB                     	;# 
   453     0FED                     	;# 
   454     0FEE                     	;# 
   455     0FEF                     	;# 
   456     0000                     	;# 
   457     0001                     	;# 
   458     0002                     	;# 
   459     0003                     	;# 
   460     0004                     	;# 
   461     0005                     	;# 
   462     0006                     	;# 
   463     0007                     	;# 
   464     0008                     	;# 
   465     0009                     	;# 
   466     000A                     	;# 
   467     000B                     	;# 
   468     000C                     	;# 
   469     000D                     	;# 
   470     000E                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0015                     	;# 
   476     0016                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001C                     	;# 
   484     001E                     	;# 
   485     001F                     	;# 
   486     008C                     	;# 
   487     008D                     	;# 
   488     008E                     	;# 
   489     0090                     	;# 
   490     0091                     	;# 
   491     0092                     	;# 
   492     0093                     	;# 
   493     0095                     	;# 
   494     0096                     	;# 
   495     0097                     	;# 
   496     0098                     	;# 
   497     0099                     	;# 
   498     009A                     	;# 
   499     009B                     	;# 
   500     009B                     	;# 
   501     009C                     	;# 
   502     009D                     	;# 
   503     009E                     	;# 
   504     010C                     	;# 
   505     010D                     	;# 
   506     010E                     	;# 
   507     0110                     	;# 
   508     0111                     	;# 
   509     0112                     	;# 
   510     0113                     	;# 
   511     0114                     	;# 
   512     0115                     	;# 
   513     0116                     	;# 
   514     0117                     	;# 
   515     0118                     	;# 
   516     0119                     	;# 
   517     011A                     	;# 
   518     011B                     	;# 
   519     011D                     	;# 
   520     018C                     	;# 
   521     018D                     	;# 
   522     0191                     	;# 
   523     0191                     	;# 
   524     0192                     	;# 
   525     0193                     	;# 
   526     0193                     	;# 
   527     0193                     	;# 
   528     0194                     	;# 
   529     0195                     	;# 
   530     0196                     	;# 
   531     0199                     	;# 
   532     019A                     	;# 
   533     019B                     	;# 
   534     019B                     	;# 
   535     019B                     	;# 
   536     019B                     	;# 
   537     019C                     	;# 
   538     019C                     	;# 
   539     019D                     	;# 
   540     019E                     	;# 
   541     019F                     	;# 
   542     020D                     	;# 
   543     0210                     	;# 
   544     0211                     	;# 
   545     0212                     	;# 
   546     0213                     	;# 
   547     0214                     	;# 
   548     0215                     	;# 
   549     0215                     	;# 
   550     0216                     	;# 
   551     0217                     	;# 
   552     0291                     	;# 
   553     0291                     	;# 
   554     0292                     	;# 
   555     0293                     	;# 
   556     0294                     	;# 
   557     0295                     	;# 
   558     0295                     	;# 
   559     0296                     	;# 
   560     0298                     	;# 
   561     0298                     	;# 
   562     0299                     	;# 
   563     029A                     	;# 
   564     029B                     	;# 
   565     029C                     	;# 
   566     029C                     	;# 
   567     029D                     	;# 
   568     029E                     	;# 
   569     029F                     	;# 
   570     0311                     	;# 
   571     0311                     	;# 
   572     0312                     	;# 
   573     0313                     	;# 
   574     0314                     	;# 
   575     0315                     	;# 
   576     0315                     	;# 
   577     0316                     	;# 
   578     0318                     	;# 
   579     0318                     	;# 
   580     0319                     	;# 
   581     031A                     	;# 
   582     031C                     	;# 
   583     031C                     	;# 
   584     031D                     	;# 
   585     031E                     	;# 
   586     0394                     	;# 
   587     0395                     	;# 
   588     0396                     	;# 
   589     0415                     	;# 
   590     0416                     	;# 
   591     0417                     	;# 
   592     041C                     	;# 
   593     041D                     	;# 
   594     041E                     	;# 
   595     0791                     	;# 
   596     0792                     	;# 
   597     0793                     	;# 
   598     0794                     	;# 
   599     0795                     	;# 
   600     0798                     	;# 
   601     0799                     	;# 
   602     07A0                     	;# 
   603     07A1                     	;# 
   604     07A3                     	;# 
   605     07A4                     	;# 
   606     07A6                     	;# 
   607     07A7                     	;# 
   608     07A9                     	;# 
   609     07AA                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     0010                     	;# 
   637     0011                     	;# 
   638     0012                     	;# 
   639     0013                     	;# 
   640     0015                     	;# 
   641     0016                     	;# 
   642     0016                     	;# 
   643     0017                     	;# 
   644     0018                     	;# 
   645     0019                     	;# 
   646     001A                     	;# 
   647     001B                     	;# 
   648     001C                     	;# 
   649     001E                     	;# 
   650     001F                     	;# 
   651     008C                     	;# 
   652     008D                     	;# 
   653     008E                     	;# 
   654     0090                     	;# 
   655     0091                     	;# 
   656     0092                     	;# 
   657     0093                     	;# 
   658     0095                     	;# 
   659     0096                     	;# 
   660     0097                     	;# 
   661     0098                     	;# 
   662     0099                     	;# 
   663     009A                     	;# 
   664     009B                     	;# 
   665     009B                     	;# 
   666     009C                     	;# 
   667     009D                     	;# 
   668     009E                     	;# 
   669     010C                     	;# 
   670     010D                     	;# 
   671     010E                     	;# 
   672     0110                     	;# 
   673     0111                     	;# 
   674     0112                     	;# 
   675     0113                     	;# 
   676     0114                     	;# 
   677     0115                     	;# 
   678     0116                     	;# 
   679     0117                     	;# 
   680     0118                     	;# 
   681     0119                     	;# 
   682     011A                     	;# 
   683     011B                     	;# 
   684     011D                     	;# 
   685     018C                     	;# 
   686     018D                     	;# 
   687     0191                     	;# 
   688     0191                     	;# 
   689     0192                     	;# 
   690     0193                     	;# 
   691     0193                     	;# 
   692     0193                     	;# 
   693     0194                     	;# 
   694     0195                     	;# 
   695     0196                     	;# 
   696     0199                     	;# 
   697     019A                     	;# 
   698     019B                     	;# 
   699     019B                     	;# 
   700     019B                     	;# 
   701     019B                     	;# 
   702     019C                     	;# 
   703     019C                     	;# 
   704     019D                     	;# 
   705     019E                     	;# 
   706     019F                     	;# 
   707     020D                     	;# 
   708     0210                     	;# 
   709     0211                     	;# 
   710     0212                     	;# 
   711     0213                     	;# 
   712     0214                     	;# 
   713     0215                     	;# 
   714     0215                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0291                     	;# 
   718     0291                     	;# 
   719     0292                     	;# 
   720     0293                     	;# 
   721     0294                     	;# 
   722     0295                     	;# 
   723     0295                     	;# 
   724     0296                     	;# 
   725     0298                     	;# 
   726     0298                     	;# 
   727     0299                     	;# 
   728     029A                     	;# 
   729     029B                     	;# 
   730     029C                     	;# 
   731     029C                     	;# 
   732     029D                     	;# 
   733     029E                     	;# 
   734     029F                     	;# 
   735     0311                     	;# 
   736     0311                     	;# 
   737     0312                     	;# 
   738     0313                     	;# 
   739     0314                     	;# 
   740     0315                     	;# 
   741     0315                     	;# 
   742     0316                     	;# 
   743     0318                     	;# 
   744     0318                     	;# 
   745     0319                     	;# 
   746     031A                     	;# 
   747     031C                     	;# 
   748     031C                     	;# 
   749     031D                     	;# 
   750     031E                     	;# 
   751     0394                     	;# 
   752     0395                     	;# 
   753     0396                     	;# 
   754     0415                     	;# 
   755     0416                     	;# 
   756     0417                     	;# 
   757     041C                     	;# 
   758     041D                     	;# 
   759     041E                     	;# 
   760     0791                     	;# 
   761     0792                     	;# 
   762     0793                     	;# 
   763     0794                     	;# 
   764     0795                     	;# 
   765     0798                     	;# 
   766     0799                     	;# 
   767     07A0                     	;# 
   768     07A1                     	;# 
   769     07A3                     	;# 
   770     07A4                     	;# 
   771     07A6                     	;# 
   772     07A7                     	;# 
   773     07A9                     	;# 
   774     07AA                     	;# 
   775     0FE4                     	;# 
   776     0FE5                     	;# 
   777     0FE6                     	;# 
   778     0FE7                     	;# 
   779     0FE8                     	;# 
   780     0FE9                     	;# 
   781     0FEA                     	;# 
   782     0FEB                     	;# 
   783     0FED                     	;# 
   784     0FEE                     	;# 
   785     0FEF                     	;# 
   786     0000                     	;# 
   787     0001                     	;# 
   788     0002                     	;# 
   789     0003                     	;# 
   790     0004                     	;# 
   791     0005                     	;# 
   792     0006                     	;# 
   793     0007                     	;# 
   794     0008                     	;# 
   795     0009                     	;# 
   796     000A                     	;# 
   797     000B                     	;# 
   798     000C                     	;# 
   799     000D                     	;# 
   800     000E                     	;# 
   801     0010                     	;# 
   802     0011                     	;# 
   803     0012                     	;# 
   804     0013                     	;# 
   805     0015                     	;# 
   806     0016                     	;# 
   807     0016                     	;# 
   808     0017                     	;# 
   809     0018                     	;# 
   810     0019                     	;# 
   811     001A                     	;# 
   812     001B                     	;# 
   813     001C                     	;# 
   814     001E                     	;# 
   815     001F                     	;# 
   816     008C                     	;# 
   817     008D                     	;# 
   818     008E                     	;# 
   819     0090                     	;# 
   820     0091                     	;# 
   821     0092                     	;# 
   822     0093                     	;# 
   823     0095                     	;# 
   824     0096                     	;# 
   825     0097                     	;# 
   826     0098                     	;# 
   827     0099                     	;# 
   828     009A                     	;# 
   829     009B                     	;# 
   830     009B                     	;# 
   831     009C                     	;# 
   832     009D                     	;# 
   833     009E                     	;# 
   834     010C                     	;# 
   835     010D                     	;# 
   836     010E                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011B                     	;# 
   849     011D                     	;# 
   850     018C                     	;# 
   851     018D                     	;# 
   852     0191                     	;# 
   853     0191                     	;# 
   854     0192                     	;# 
   855     0193                     	;# 
   856     0193                     	;# 
   857     0193                     	;# 
   858     0194                     	;# 
   859     0195                     	;# 
   860     0196                     	;# 
   861     0199                     	;# 
   862     019A                     	;# 
   863     019B                     	;# 
   864     019B                     	;# 
   865     019B                     	;# 
   866     019B                     	;# 
   867     019C                     	;# 
   868     019C                     	;# 
   869     019D                     	;# 
   870     019E                     	;# 
   871     019F                     	;# 
   872     020D                     	;# 
   873     0210                     	;# 
   874     0211                     	;# 
   875     0212                     	;# 
   876     0213                     	;# 
   877     0214                     	;# 
   878     0215                     	;# 
   879     0215                     	;# 
   880     0216                     	;# 
   881     0217                     	;# 
   882     0291                     	;# 
   883     0291                     	;# 
   884     0292                     	;# 
   885     0293                     	;# 
   886     0294                     	;# 
   887     0295                     	;# 
   888     0295                     	;# 
   889     0296                     	;# 
   890     0298                     	;# 
   891     0298                     	;# 
   892     0299                     	;# 
   893     029A                     	;# 
   894     029B                     	;# 
   895     029C                     	;# 
   896     029C                     	;# 
   897     029D                     	;# 
   898     029E                     	;# 
   899     029F                     	;# 
   900     0311                     	;# 
   901     0311                     	;# 
   902     0312                     	;# 
   903     0313                     	;# 
   904     0314                     	;# 
   905     0315                     	;# 
   906     0315                     	;# 
   907     0316                     	;# 
   908     0318                     	;# 
   909     0318                     	;# 
   910     0319                     	;# 
   911     031A                     	;# 
   912     031C                     	;# 
   913     031C                     	;# 
   914     031D                     	;# 
   915     031E                     	;# 
   916     0394                     	;# 
   917     0395                     	;# 
   918     0396                     	;# 
   919     0415                     	;# 
   920     0416                     	;# 
   921     0417                     	;# 
   922     041C                     	;# 
   923     041D                     	;# 
   924     041E                     	;# 
   925     0791                     	;# 
   926     0792                     	;# 
   927     0793                     	;# 
   928     0794                     	;# 
   929     0795                     	;# 
   930     0798                     	;# 
   931     0799                     	;# 
   932     07A0                     	;# 
   933     07A1                     	;# 
   934     07A3                     	;# 
   935     07A4                     	;# 
   936     07A6                     	;# 
   937     07A7                     	;# 
   938     07A9                     	;# 
   939     07AA                     	;# 
   940     0FE4                     	;# 
   941     0FE5                     	;# 
   942     0FE6                     	;# 
   943     0FE7                     	;# 
   944     0FE8                     	;# 
   945     0FE9                     	;# 
   946     0FEA                     	;# 
   947     0FEB                     	;# 
   948     0FED                     	;# 
   949     0FEE                     	;# 
   950     0FEF                     	;# 
   951     0000                     	;# 
   952     0001                     	;# 
   953     0002                     	;# 
   954     0003                     	;# 
   955     0004                     	;# 
   956     0005                     	;# 
   957     0006                     	;# 
   958     0007                     	;# 
   959     0008                     	;# 
   960     0009                     	;# 
   961     000A                     	;# 
   962     000B                     	;# 
   963     000C                     	;# 
   964     000D                     	;# 
   965     000E                     	;# 
   966     0010                     	;# 
   967     0011                     	;# 
   968     0012                     	;# 
   969     0013                     	;# 
   970     0015                     	;# 
   971     0016                     	;# 
   972     0016                     	;# 
   973     0017                     	;# 
   974     0018                     	;# 
   975     0019                     	;# 
   976     001A                     	;# 
   977     001B                     	;# 
   978     001C                     	;# 
   979     001E                     	;# 
   980     001F                     	;# 
   981     008C                     	;# 
   982     008D                     	;# 
   983     008E                     	;# 
   984     0090                     	;# 
   985     0091                     	;# 
   986     0092                     	;# 
   987     0093                     	;# 
   988     0095                     	;# 
   989     0096                     	;# 
   990     0097                     	;# 
   991     0098                     	;# 
   992     0099                     	;# 
   993     009A                     	;# 
   994     009B                     	;# 
   995     009B                     	;# 
   996     009C                     	;# 
   997     009D                     	;# 
   998     009E                     	;# 
   999     010C                     	;# 
  1000     010D                     	;# 
  1001     010E                     	;# 
  1002     0110                     	;# 
  1003     0111                     	;# 
  1004     0112                     	;# 
  1005     0113                     	;# 
  1006     0114                     	;# 
  1007     0115                     	;# 
  1008     0116                     	;# 
  1009     0117                     	;# 
  1010     0118                     	;# 
  1011     0119                     	;# 
  1012     011A                     	;# 
  1013     011B                     	;# 
  1014     011D                     	;# 
  1015     018C                     	;# 
  1016     018D                     	;# 
  1017     0191                     	;# 
  1018     0191                     	;# 
  1019     0192                     	;# 
  1020     0193                     	;# 
  1021     0193                     	;# 
  1022     0193                     	;# 
  1023     0194                     	;# 
  1024     0195                     	;# 
  1025     0196                     	;# 
  1026     0199                     	;# 
  1027     019A                     	;# 
  1028     019B                     	;# 
  1029     019B                     	;# 
  1030     019B                     	;# 
  1031     019B                     	;# 
  1032     019C                     	;# 
  1033     019C                     	;# 
  1034     019D                     	;# 
  1035     019E                     	;# 
  1036     019F                     	;# 
  1037     020D                     	;# 
  1038     0210                     	;# 
  1039     0211                     	;# 
  1040     0212                     	;# 
  1041     0213                     	;# 
  1042     0214                     	;# 
  1043     0215                     	;# 
  1044     0215                     	;# 
  1045     0216                     	;# 
  1046     0217                     	;# 
  1047     0291                     	;# 
  1048     0291                     	;# 
  1049     0292                     	;# 
  1050     0293                     	;# 
  1051     0294                     	;# 
  1052     0295                     	;# 
  1053     0295                     	;# 
  1054     0296                     	;# 
  1055     0298                     	;# 
  1056     0298                     	;# 
  1057     0299                     	;# 
  1058     029A                     	;# 
  1059     029B                     	;# 
  1060     029C                     	;# 
  1061     029C                     	;# 
  1062     029D                     	;# 
  1063     029E                     	;# 
  1064     029F                     	;# 
  1065     0311                     	;# 
  1066     0311                     	;# 
  1067     0312                     	;# 
  1068     0313                     	;# 
  1069     0314                     	;# 
  1070     0315                     	;# 
  1071     0315                     	;# 
  1072     0316                     	;# 
  1073     0318                     	;# 
  1074     0318                     	;# 
  1075     0319                     	;# 
  1076     031A                     	;# 
  1077     031C                     	;# 
  1078     031C                     	;# 
  1079     031D                     	;# 
  1080     031E                     	;# 
  1081     0394                     	;# 
  1082     0395                     	;# 
  1083     0396                     	;# 
  1084     0415                     	;# 
  1085     0416                     	;# 
  1086     0417                     	;# 
  1087     041C                     	;# 
  1088     041D                     	;# 
  1089     041E                     	;# 
  1090     0791                     	;# 
  1091     0792                     	;# 
  1092     0793                     	;# 
  1093     0794                     	;# 
  1094     0795                     	;# 
  1095     0798                     	;# 
  1096     0799                     	;# 
  1097     07A0                     	;# 
  1098     07A1                     	;# 
  1099     07A3                     	;# 
  1100     07A4                     	;# 
  1101     07A6                     	;# 
  1102     07A7                     	;# 
  1103     07A9                     	;# 
  1104     07AA                     	;# 
  1105     0FE4                     	;# 
  1106     0FE5                     	;# 
  1107     0FE6                     	;# 
  1108     0FE7                     	;# 
  1109     0FE8                     	;# 
  1110     0FE9                     	;# 
  1111     0FEA                     	;# 
  1112     0FEB                     	;# 
  1113     0FED                     	;# 
  1114     0FEE                     	;# 
  1115     0FEF                     	;# 
  1116     0000                     	;# 
  1117     0001                     	;# 
  1118     0002                     	;# 
  1119     0003                     	;# 
  1120     0004                     	;# 
  1121     0005                     	;# 
  1122     0006                     	;# 
  1123     0007                     	;# 
  1124     0008                     	;# 
  1125     0009                     	;# 
  1126     000A                     	;# 
  1127     000B                     	;# 
  1128     000C                     	;# 
  1129     000D                     	;# 
  1130     000E                     	;# 
  1131     0010                     	;# 
  1132     0011                     	;# 
  1133     0012                     	;# 
  1134     0013                     	;# 
  1135     0015                     	;# 
  1136     0016                     	;# 
  1137     0016                     	;# 
  1138     0017                     	;# 
  1139     0018                     	;# 
  1140     0019                     	;# 
  1141     001A                     	;# 
  1142     001B                     	;# 
  1143     001C                     	;# 
  1144     001E                     	;# 
  1145     001F                     	;# 
  1146     008C                     	;# 
  1147     008D                     	;# 
  1148     008E                     	;# 
  1149     0090                     	;# 
  1150     0091                     	;# 
  1151     0092                     	;# 
  1152     0093                     	;# 
  1153     0095                     	;# 
  1154     0096                     	;# 
  1155     0097                     	;# 
  1156     0098                     	;# 
  1157     0099                     	;# 
  1158     009A                     	;# 
  1159     009B                     	;# 
  1160     009B                     	;# 
  1161     009C                     	;# 
  1162     009D                     	;# 
  1163     009E                     	;# 
  1164     010C                     	;# 
  1165     010D                     	;# 
  1166     010E                     	;# 
  1167     0110                     	;# 
  1168     0111                     	;# 
  1169     0112                     	;# 
  1170     0113                     	;# 
  1171     0114                     	;# 
  1172     0115                     	;# 
  1173     0116                     	;# 
  1174     0117                     	;# 
  1175     0118                     	;# 
  1176     0119                     	;# 
  1177     011A                     	;# 
  1178     011B                     	;# 
  1179     011D                     	;# 
  1180     018C                     	;# 
  1181     018D                     	;# 
  1182     0191                     	;# 
  1183     0191                     	;# 
  1184     0192                     	;# 
  1185     0193                     	;# 
  1186     0193                     	;# 
  1187     0193                     	;# 
  1188     0194                     	;# 
  1189     0195                     	;# 
  1190     0196                     	;# 
  1191     0199                     	;# 
  1192     019A                     	;# 
  1193     019B                     	;# 
  1194     019B                     	;# 
  1195     019B                     	;# 
  1196     019B                     	;# 
  1197     019C                     	;# 
  1198     019C                     	;# 
  1199     019D                     	;# 
  1200     019E                     	;# 
  1201     019F                     	;# 
  1202     020D                     	;# 
  1203     0210                     	;# 
  1204     0211                     	;# 
  1205     0212                     	;# 
  1206     0213                     	;# 
  1207     0214                     	;# 
  1208     0215                     	;# 
  1209     0215                     	;# 
  1210     0216                     	;# 
  1211     0217                     	;# 
  1212     0291                     	;# 
  1213     0291                     	;# 
  1214     0292                     	;# 
  1215     0293                     	;# 
  1216     0294                     	;# 
  1217     0295                     	;# 
  1218     0295                     	;# 
  1219     0296                     	;# 
  1220     0298                     	;# 
  1221     0298                     	;# 
  1222     0299                     	;# 
  1223     029A                     	;# 
  1224     029B                     	;# 
  1225     029C                     	;# 
  1226     029C                     	;# 
  1227     029D                     	;# 
  1228     029E                     	;# 
  1229     029F                     	;# 
  1230     0311                     	;# 
  1231     0311                     	;# 
  1232     0312                     	;# 
  1233     0313                     	;# 
  1234     0314                     	;# 
  1235     0315                     	;# 
  1236     0315                     	;# 
  1237     0316                     	;# 
  1238     0318                     	;# 
  1239     0318                     	;# 
  1240     0319                     	;# 
  1241     031A                     	;# 
  1242     031C                     	;# 
  1243     031C                     	;# 
  1244     031D                     	;# 
  1245     031E                     	;# 
  1246     0394                     	;# 
  1247     0395                     	;# 
  1248     0396                     	;# 
  1249     0415                     	;# 
  1250     0416                     	;# 
  1251     0417                     	;# 
  1252     041C                     	;# 
  1253     041D                     	;# 
  1254     041E                     	;# 
  1255     0791                     	;# 
  1256     0792                     	;# 
  1257     0793                     	;# 
  1258     0794                     	;# 
  1259     0795                     	;# 
  1260     0798                     	;# 
  1261     0799                     	;# 
  1262     07A0                     	;# 
  1263     07A1                     	;# 
  1264     07A3                     	;# 
  1265     07A4                     	;# 
  1266     07A6                     	;# 
  1267     07A7                     	;# 
  1268     07A9                     	;# 
  1269     07AA                     	;# 
  1270     0FE4                     	;# 
  1271     0FE5                     	;# 
  1272     0FE6                     	;# 
  1273     0FE7                     	;# 
  1274     0FE8                     	;# 
  1275     0FE9                     	;# 
  1276     0FEA                     	;# 
  1277     0FEB                     	;# 
  1278     0FED                     	;# 
  1279     0FEE                     	;# 
  1280     0FEF                     	;# 
  1281     0000                     	;# 
  1282     0001                     	;# 
  1283     0002                     	;# 
  1284     0003                     	;# 
  1285     0004                     	;# 
  1286     0005                     	;# 
  1287     0006                     	;# 
  1288     0007                     	;# 
  1289     0008                     	;# 
  1290     0009                     	;# 
  1291     000A                     	;# 
  1292     000B                     	;# 
  1293     000C                     	;# 
  1294     000D                     	;# 
  1295     000E                     	;# 
  1296     0010                     	;# 
  1297     0011                     	;# 
  1298     0012                     	;# 
  1299     0013                     	;# 
  1300     0015                     	;# 
  1301     0016                     	;# 
  1302     0016                     	;# 
  1303     0017                     	;# 
  1304     0018                     	;# 
  1305     0019                     	;# 
  1306     001A                     	;# 
  1307     001B                     	;# 
  1308     001C                     	;# 
  1309     001E                     	;# 
  1310     001F                     	;# 
  1311     008C                     	;# 
  1312     008D                     	;# 
  1313     008E                     	;# 
  1314     0090                     	;# 
  1315     0091                     	;# 
  1316     0092                     	;# 
  1317     0093                     	;# 
  1318     0095                     	;# 
  1319     0096                     	;# 
  1320     0097                     	;# 
  1321     0098                     	;# 
  1322     0099                     	;# 
  1323     009A                     	;# 
  1324     009B                     	;# 
  1325     009B                     	;# 
  1326     009C                     	;# 
  1327     009D                     	;# 
  1328     009E                     	;# 
  1329     010C                     	;# 
  1330     010D                     	;# 
  1331     010E                     	;# 
  1332     0110                     	;# 
  1333     0111                     	;# 
  1334     0112                     	;# 
  1335     0113                     	;# 
  1336     0114                     	;# 
  1337     0115                     	;# 
  1338     0116                     	;# 
  1339     0117                     	;# 
  1340     0118                     	;# 
  1341     0119                     	;# 
  1342     011A                     	;# 
  1343     011B                     	;# 
  1344     011D                     	;# 
  1345     018C                     	;# 
  1346     018D                     	;# 
  1347     0191                     	;# 
  1348     0191                     	;# 
  1349     0192                     	;# 
  1350     0193                     	;# 
  1351     0193                     	;# 
  1352     0193                     	;# 
  1353     0194                     	;# 
  1354     0195                     	;# 
  1355     0196                     	;# 
  1356     0199                     	;# 
  1357     019A                     	;# 
  1358     019B                     	;# 
  1359     019B                     	;# 
  1360     019B                     	;# 
  1361     019B                     	;# 
  1362     019C                     	;# 
  1363     019C                     	;# 
  1364     019D                     	;# 
  1365     019E                     	;# 
  1366     019F                     	;# 
  1367     020D                     	;# 
  1368     0210                     	;# 
  1369     0211                     	;# 
  1370     0212                     	;# 
  1371     0213                     	;# 
  1372     0214                     	;# 
  1373     0215                     	;# 
  1374     0215                     	;# 
  1375     0216                     	;# 
  1376     0217                     	;# 
  1377     0291                     	;# 
  1378     0291                     	;# 
  1379     0292                     	;# 
  1380     0293                     	;# 
  1381     0294                     	;# 
  1382     0295                     	;# 
  1383     0295                     	;# 
  1384     0296                     	;# 
  1385     0298                     	;# 
  1386     0298                     	;# 
  1387     0299                     	;# 
  1388     029A                     	;# 
  1389     029B                     	;# 
  1390     029C                     	;# 
  1391     029C                     	;# 
  1392     029D                     	;# 
  1393     029E                     	;# 
  1394     029F                     	;# 
  1395     0311                     	;# 
  1396     0311                     	;# 
  1397     0312                     	;# 
  1398     0313                     	;# 
  1399     0314                     	;# 
  1400     0315                     	;# 
  1401     0315                     	;# 
  1402     0316                     	;# 
  1403     0318                     	;# 
  1404     0318                     	;# 
  1405     0319                     	;# 
  1406     031A                     	;# 
  1407     031C                     	;# 
  1408     031C                     	;# 
  1409     031D                     	;# 
  1410     031E                     	;# 
  1411     0394                     	;# 
  1412     0395                     	;# 
  1413     0396                     	;# 
  1414     0415                     	;# 
  1415     0416                     	;# 
  1416     0417                     	;# 
  1417     041C                     	;# 
  1418     041D                     	;# 
  1419     041E                     	;# 
  1420     0791                     	;# 
  1421     0792                     	;# 
  1422     0793                     	;# 
  1423     0794                     	;# 
  1424     0795                     	;# 
  1425     0798                     	;# 
  1426     0799                     	;# 
  1427     07A0                     	;# 
  1428     07A1                     	;# 
  1429     07A3                     	;# 
  1430     07A4                     	;# 
  1431     07A6                     	;# 
  1432     07A7                     	;# 
  1433     07A9                     	;# 
  1434     07AA                     	;# 
  1435     0FE4                     	;# 
  1436     0FE5                     	;# 
  1437     0FE6                     	;# 
  1438     0FE7                     	;# 
  1439     0FE8                     	;# 
  1440     0FE9                     	;# 
  1441     0FEA                     	;# 
  1442     0FEB                     	;# 
  1443     0FED                     	;# 
  1444     0FEE                     	;# 
  1445     0FEF                     	;# 
  1446     0000                     	;# 
  1447     0001                     	;# 
  1448     0002                     	;# 
  1449     0003                     	;# 
  1450     0004                     	;# 
  1451     0005                     	;# 
  1452     0006                     	;# 
  1453     0007                     	;# 
  1454     0008                     	;# 
  1455     0009                     	;# 
  1456     000A                     	;# 
  1457     000B                     	;# 
  1458     000C                     	;# 
  1459     000D                     	;# 
  1460     000E                     	;# 
  1461     0010                     	;# 
  1462     0011                     	;# 
  1463     0012                     	;# 
  1464     0013                     	;# 
  1465     0015                     	;# 
  1466     0016                     	;# 
  1467     0016                     	;# 
  1468     0017                     	;# 
  1469     0018                     	;# 
  1470     0019                     	;# 
  1471     001A                     	;# 
  1472     001B                     	;# 
  1473     001C                     	;# 
  1474     001E                     	;# 
  1475     001F                     	;# 
  1476     008C                     	;# 
  1477     008D                     	;# 
  1478     008E                     	;# 
  1479     0090                     	;# 
  1480     0091                     	;# 
  1481     0092                     	;# 
  1482     0093                     	;# 
  1483     0095                     	;# 
  1484     0096                     	;# 
  1485     0097                     	;# 
  1486     0098                     	;# 
  1487     0099                     	;# 
  1488     009A                     	;# 
  1489     009B                     	;# 
  1490     009B                     	;# 
  1491     009C                     	;# 
  1492     009D                     	;# 
  1493     009E                     	;# 
  1494     010C                     	;# 
  1495     010D                     	;# 
  1496     010E                     	;# 
  1497     0110                     	;# 
  1498     0111                     	;# 
  1499     0112                     	;# 
  1500     0113                     	;# 
  1501     0114                     	;# 
  1502     0115                     	;# 
  1503     0116                     	;# 
  1504     0117                     	;# 
  1505     0118                     	;# 
  1506     0119                     	;# 
  1507     011A                     	;# 
  1508     011B                     	;# 
  1509     011D                     	;# 
  1510     018C                     	;# 
  1511     018D                     	;# 
  1512     0191                     	;# 
  1513     0191                     	;# 
  1514     0192                     	;# 
  1515     0193                     	;# 
  1516     0193                     	;# 
  1517     0193                     	;# 
  1518     0194                     	;# 
  1519     0195                     	;# 
  1520     0196                     	;# 
  1521     0199                     	;# 
  1522     019A                     	;# 
  1523     019B                     	;# 
  1524     019B                     	;# 
  1525     019B                     	;# 
  1526     019B                     	;# 
  1527     019C                     	;# 
  1528     019C                     	;# 
  1529     019D                     	;# 
  1530     019E                     	;# 
  1531     019F                     	;# 
  1532     020D                     	;# 
  1533     0210                     	;# 
  1534     0211                     	;# 
  1535     0212                     	;# 
  1536     0213                     	;# 
  1537     0214                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0216                     	;# 
  1541     0217                     	;# 
  1542     0291                     	;# 
  1543     0291                     	;# 
  1544     0292                     	;# 
  1545     0293                     	;# 
  1546     0294                     	;# 
  1547     0295                     	;# 
  1548     0295                     	;# 
  1549     0296                     	;# 
  1550     0298                     	;# 
  1551     0298                     	;# 
  1552     0299                     	;# 
  1553     029A                     	;# 
  1554     029B                     	;# 
  1555     029C                     	;# 
  1556     029C                     	;# 
  1557     029D                     	;# 
  1558     029E                     	;# 
  1559     029F                     	;# 
  1560     0311                     	;# 
  1561     0311                     	;# 
  1562     0312                     	;# 
  1563     0313                     	;# 
  1564     0314                     	;# 
  1565     0315                     	;# 
  1566     0315                     	;# 
  1567     0316                     	;# 
  1568     0318                     	;# 
  1569     0318                     	;# 
  1570     0319                     	;# 
  1571     031A                     	;# 
  1572     031C                     	;# 
  1573     031C                     	;# 
  1574     031D                     	;# 
  1575     031E                     	;# 
  1576     0394                     	;# 
  1577     0395                     	;# 
  1578     0396                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     041C                     	;# 
  1583     041D                     	;# 
  1584     041E                     	;# 
  1585     0791                     	;# 
  1586     0792                     	;# 
  1587     0793                     	;# 
  1588     0794                     	;# 
  1589     0795                     	;# 
  1590     0798                     	;# 
  1591     0799                     	;# 
  1592     07A0                     	;# 
  1593     07A1                     	;# 
  1594     07A3                     	;# 
  1595     07A4                     	;# 
  1596     07A6                     	;# 
  1597     07A7                     	;# 
  1598     07A9                     	;# 
  1599     07AA                     	;# 
  1600     0FE4                     	;# 
  1601     0FE5                     	;# 
  1602     0FE6                     	;# 
  1603     0FE7                     	;# 
  1604     0FE8                     	;# 
  1605     0FE9                     	;# 
  1606     0FEA                     	;# 
  1607     0FEB                     	;# 
  1608     0FED                     	;# 
  1609     0FEE                     	;# 
  1610     0FEF                     	;# 
  1611     0000                     	;# 
  1612     0001                     	;# 
  1613     0002                     	;# 
  1614     0003                     	;# 
  1615     0004                     	;# 
  1616     0005                     	;# 
  1617     0006                     	;# 
  1618     0007                     	;# 
  1619     0008                     	;# 
  1620     0009                     	;# 
  1621     000A                     	;# 
  1622     000B                     	;# 
  1623     000C                     	;# 
  1624     000D                     	;# 
  1625     000E                     	;# 
  1626     0010                     	;# 
  1627     0011                     	;# 
  1628     0012                     	;# 
  1629     0013                     	;# 
  1630     0015                     	;# 
  1631     0016                     	;# 
  1632     0016                     	;# 
  1633     0017                     	;# 
  1634     0018                     	;# 
  1635     0019                     	;# 
  1636     001A                     	;# 
  1637     001B                     	;# 
  1638     001C                     	;# 
  1639     001E                     	;# 
  1640     001F                     	;# 
  1641     008C                     	;# 
  1642     008D                     	;# 
  1643     008E                     	;# 
  1644     0090                     	;# 
  1645     0091                     	;# 
  1646     0092                     	;# 
  1647     0093                     	;# 
  1648     0095                     	;# 
  1649     0096                     	;# 
  1650     0097                     	;# 
  1651     0098                     	;# 
  1652     0099                     	;# 
  1653     009A                     	;# 
  1654     009B                     	;# 
  1655     009B                     	;# 
  1656     009C                     	;# 
  1657     009D                     	;# 
  1658     009E                     	;# 
  1659     010C                     	;# 
  1660     010D                     	;# 
  1661     010E                     	;# 
  1662     0110                     	;# 
  1663     0111                     	;# 
  1664     0112                     	;# 
  1665     0113                     	;# 
  1666     0114                     	;# 
  1667     0115                     	;# 
  1668     0116                     	;# 
  1669     0117                     	;# 
  1670     0118                     	;# 
  1671     0119                     	;# 
  1672     011A                     	;# 
  1673     011B                     	;# 
  1674     011D                     	;# 
  1675     018C                     	;# 
  1676     018D                     	;# 
  1677     0191                     	;# 
  1678     0191                     	;# 
  1679     0192                     	;# 
  1680     0193                     	;# 
  1681     0193                     	;# 
  1682     0193                     	;# 
  1683     0194                     	;# 
  1684     0195                     	;# 
  1685     0196                     	;# 
  1686     0199                     	;# 
  1687     019A                     	;# 
  1688     019B                     	;# 
  1689     019B                     	;# 
  1690     019B                     	;# 
  1691     019B                     	;# 
  1692     019C                     	;# 
  1693     019C                     	;# 
  1694     019D                     	;# 
  1695     019E                     	;# 
  1696     019F                     	;# 
  1697     020D                     	;# 
  1698     0210                     	;# 
  1699     0211                     	;# 
  1700     0212                     	;# 
  1701     0213                     	;# 
  1702     0214                     	;# 
  1703     0215                     	;# 
  1704     0215                     	;# 
  1705     0216                     	;# 
  1706     0217                     	;# 
  1707     0291                     	;# 
  1708     0291                     	;# 
  1709     0292                     	;# 
  1710     0293                     	;# 
  1711     0294                     	;# 
  1712     0295                     	;# 
  1713     0295                     	;# 
  1714     0296                     	;# 
  1715     0298                     	;# 
  1716     0298                     	;# 
  1717     0299                     	;# 
  1718     029A                     	;# 
  1719     029B                     	;# 
  1720     029C                     	;# 
  1721     029C                     	;# 
  1722     029D                     	;# 
  1723     029E                     	;# 
  1724     029F                     	;# 
  1725     0311                     	;# 
  1726     0311                     	;# 
  1727     0312                     	;# 
  1728     0313                     	;# 
  1729     0314                     	;# 
  1730     0315                     	;# 
  1731     0315                     	;# 
  1732     0316                     	;# 
  1733     0318                     	;# 
  1734     0318                     	;# 
  1735     0319                     	;# 
  1736     031A                     	;# 
  1737     031C                     	;# 
  1738     031C                     	;# 
  1739     031D                     	;# 
  1740     031E                     	;# 
  1741     0394                     	;# 
  1742     0395                     	;# 
  1743     0396                     	;# 
  1744     0415                     	;# 
  1745     0416                     	;# 
  1746     0417                     	;# 
  1747     041C                     	;# 
  1748     041D                     	;# 
  1749     041E                     	;# 
  1750     0791                     	;# 
  1751     0792                     	;# 
  1752     0793                     	;# 
  1753     0794                     	;# 
  1754     0795                     	;# 
  1755     0798                     	;# 
  1756     0799                     	;# 
  1757     07A0                     	;# 
  1758     07A1                     	;# 
  1759     07A3                     	;# 
  1760     07A4                     	;# 
  1761     07A6                     	;# 
  1762     07A7                     	;# 
  1763     07A9                     	;# 
  1764     07AA                     	;# 
  1765     0FE4                     	;# 
  1766     0FE5                     	;# 
  1767     0FE6                     	;# 
  1768     0FE7                     	;# 
  1769     0FE8                     	;# 
  1770     0FE9                     	;# 
  1771     0FEA                     	;# 
  1772     0FEB                     	;# 
  1773     0FED                     	;# 
  1774     0FEE                     	;# 
  1775     0FEF                     	;# 
  1776     0000                     	;# 
  1777     0001                     	;# 
  1778     0002                     	;# 
  1779     0003                     	;# 
  1780     0004                     	;# 
  1781     0005                     	;# 
  1782     0006                     	;# 
  1783     0007                     	;# 
  1784     0008                     	;# 
  1785     0009                     	;# 
  1786     000A                     	;# 
  1787     000B                     	;# 
  1788     000C                     	;# 
  1789     000D                     	;# 
  1790     000E                     	;# 
  1791     0010                     	;# 
  1792     0011                     	;# 
  1793     0012                     	;# 
  1794     0013                     	;# 
  1795     0015                     	;# 
  1796     0016                     	;# 
  1797     0016                     	;# 
  1798     0017                     	;# 
  1799     0018                     	;# 
  1800     0019                     	;# 
  1801     001A                     	;# 
  1802     001B                     	;# 
  1803     001C                     	;# 
  1804     001E                     	;# 
  1805     001F                     	;# 
  1806     008C                     	;# 
  1807     008D                     	;# 
  1808     008E                     	;# 
  1809     0090                     	;# 
  1810     0091                     	;# 
  1811     0092                     	;# 
  1812     0093                     	;# 
  1813     0095                     	;# 
  1814     0096                     	;# 
  1815     0097                     	;# 
  1816     0098                     	;# 
  1817     0099                     	;# 
  1818     009A                     	;# 
  1819     009B                     	;# 
  1820     009B                     	;# 
  1821     009C                     	;# 
  1822     009D                     	;# 
  1823     009E                     	;# 
  1824     010C                     	;# 
  1825     010D                     	;# 
  1826     010E                     	;# 
  1827     0110                     	;# 
  1828     0111                     	;# 
  1829     0112                     	;# 
  1830     0113                     	;# 
  1831     0114                     	;# 
  1832     0115                     	;# 
  1833     0116                     	;# 
  1834     0117                     	;# 
  1835     0118                     	;# 
  1836     0119                     	;# 
  1837     011A                     	;# 
  1838     011B                     	;# 
  1839     011D                     	;# 
  1840     018C                     	;# 
  1841     018D                     	;# 
  1842     0191                     	;# 
  1843     0191                     	;# 
  1844     0192                     	;# 
  1845     0193                     	;# 
  1846     0193                     	;# 
  1847     0193                     	;# 
  1848     0194                     	;# 
  1849     0195                     	;# 
  1850     0196                     	;# 
  1851     0199                     	;# 
  1852     019A                     	;# 
  1853     019B                     	;# 
  1854     019B                     	;# 
  1855     019B                     	;# 
  1856     019B                     	;# 
  1857     019C                     	;# 
  1858     019C                     	;# 
  1859     019D                     	;# 
  1860     019E                     	;# 
  1861     019F                     	;# 
  1862     020D                     	;# 
  1863     0210                     	;# 
  1864     0211                     	;# 
  1865     0212                     	;# 
  1866     0213                     	;# 
  1867     0214                     	;# 
  1868     0215                     	;# 
  1869     0215                     	;# 
  1870     0216                     	;# 
  1871     0217                     	;# 
  1872     0291                     	;# 
  1873     0291                     	;# 
  1874     0292                     	;# 
  1875     0293                     	;# 
  1876     0294                     	;# 
  1877     0295                     	;# 
  1878     0295                     	;# 
  1879     0296                     	;# 
  1880     0298                     	;# 
  1881     0298                     	;# 
  1882     0299                     	;# 
  1883     029A                     	;# 
  1884     029B                     	;# 
  1885     029C                     	;# 
  1886     029C                     	;# 
  1887     029D                     	;# 
  1888     029E                     	;# 
  1889     029F                     	;# 
  1890     0311                     	;# 
  1891     0311                     	;# 
  1892     0312                     	;# 
  1893     0313                     	;# 
  1894     0314                     	;# 
  1895     0315                     	;# 
  1896     0315                     	;# 
  1897     0316                     	;# 
  1898     0318                     	;# 
  1899     0318                     	;# 
  1900     0319                     	;# 
  1901     031A                     	;# 
  1902     031C                     	;# 
  1903     031C                     	;# 
  1904     031D                     	;# 
  1905     031E                     	;# 
  1906     0394                     	;# 
  1907     0395                     	;# 
  1908     0396                     	;# 
  1909     0415                     	;# 
  1910     0416                     	;# 
  1911     0417                     	;# 
  1912     041C                     	;# 
  1913     041D                     	;# 
  1914     041E                     	;# 
  1915     0791                     	;# 
  1916     0792                     	;# 
  1917     0793                     	;# 
  1918     0794                     	;# 
  1919     0795                     	;# 
  1920     0798                     	;# 
  1921     0799                     	;# 
  1922     07A0                     	;# 
  1923     07A1                     	;# 
  1924     07A3                     	;# 
  1925     07A4                     	;# 
  1926     07A6                     	;# 
  1927     07A7                     	;# 
  1928     07A9                     	;# 
  1929     07AA                     	;# 
  1930     0FE4                     	;# 
  1931     0FE5                     	;# 
  1932     0FE6                     	;# 
  1933     0FE7                     	;# 
  1934     0FE8                     	;# 
  1935     0FE9                     	;# 
  1936     0FEA                     	;# 
  1937     0FEB                     	;# 
  1938     0FED                     	;# 
  1939     0FEE                     	;# 
  1940     0FEF                     	;# 
  1941     0000                     	;# 
  1942     0001                     	;# 
  1943     0002                     	;# 
  1944     0003                     	;# 
  1945     0004                     	;# 
  1946     0005                     	;# 
  1947     0006                     	;# 
  1948     0007                     	;# 
  1949     0008                     	;# 
  1950     0009                     	;# 
  1951     000A                     	;# 
  1952     000B                     	;# 
  1953     000C                     	;# 
  1954     000D                     	;# 
  1955     000E                     	;# 
  1956     0010                     	;# 
  1957     0011                     	;# 
  1958     0012                     	;# 
  1959     0013                     	;# 
  1960     0015                     	;# 
  1961     0016                     	;# 
  1962     0016                     	;# 
  1963     0017                     	;# 
  1964     0018                     	;# 
  1965     0019                     	;# 
  1966     001A                     	;# 
  1967     001B                     	;# 
  1968     001C                     	;# 
  1969     001E                     	;# 
  1970     001F                     	;# 
  1971     008C                     	;# 
  1972     008D                     	;# 
  1973     008E                     	;# 
  1974     0090                     	;# 
  1975     0091                     	;# 
  1976     0092                     	;# 
  1977     0093                     	;# 
  1978     0095                     	;# 
  1979     0096                     	;# 
  1980     0097                     	;# 
  1981     0098                     	;# 
  1982     0099                     	;# 
  1983     009A                     	;# 
  1984     009B                     	;# 
  1985     009B                     	;# 
  1986     009C                     	;# 
  1987     009D                     	;# 
  1988     009E                     	;# 
  1989     010C                     	;# 
  1990     010D                     	;# 
  1991     010E                     	;# 
  1992     0110                     	;# 
  1993     0111                     	;# 
  1994     0112                     	;# 
  1995     0113                     	;# 
  1996     0114                     	;# 
  1997     0115                     	;# 
  1998     0116                     	;# 
  1999     0117                     	;# 
  2000     0118                     	;# 
  2001     0119                     	;# 
  2002     011A                     	;# 
  2003     011B                     	;# 
  2004     011D                     	;# 
  2005     018C                     	;# 
  2006     018D                     	;# 
  2007     0191                     	;# 
  2008     0191                     	;# 
  2009     0192                     	;# 
  2010     0193                     	;# 
  2011     0193                     	;# 
  2012     0193                     	;# 
  2013     0194                     	;# 
  2014     0195                     	;# 
  2015     0196                     	;# 
  2016     0199                     	;# 
  2017     019A                     	;# 
  2018     019B                     	;# 
  2019     019B                     	;# 
  2020     019B                     	;# 
  2021     019B                     	;# 
  2022     019C                     	;# 
  2023     019C                     	;# 
  2024     019D                     	;# 
  2025     019E                     	;# 
  2026     019F                     	;# 
  2027     020D                     	;# 
  2028     0210                     	;# 
  2029     0211                     	;# 
  2030     0212                     	;# 
  2031     0213                     	;# 
  2032     0214                     	;# 
  2033     0215                     	;# 
  2034     0215                     	;# 
  2035     0216                     	;# 
  2036     0217                     	;# 
  2037     0291                     	;# 
  2038     0291                     	;# 
  2039     0292                     	;# 
  2040     0293                     	;# 
  2041     0294                     	;# 
  2042     0295                     	;# 
  2043     0295                     	;# 
  2044     0296                     	;# 
  2045     0298                     	;# 
  2046     0298                     	;# 
  2047     0299                     	;# 
  2048     029A                     	;# 
  2049     029B                     	;# 
  2050     029C                     	;# 
  2051     029C                     	;# 
  2052     029D                     	;# 
  2053     029E                     	;# 
  2054     029F                     	;# 
  2055     0311                     	;# 
  2056     0311                     	;# 
  2057     0312                     	;# 
  2058     0313                     	;# 
  2059     0314                     	;# 
  2060     0315                     	;# 
  2061     0315                     	;# 
  2062     0316                     	;# 
  2063     0318                     	;# 
  2064     0318                     	;# 
  2065     0319                     	;# 
  2066     031A                     	;# 
  2067     031C                     	;# 
  2068     031C                     	;# 
  2069     031D                     	;# 
  2070     031E                     	;# 
  2071     0394                     	;# 
  2072     0395                     	;# 
  2073     0396                     	;# 
  2074     0415                     	;# 
  2075     0416                     	;# 
  2076     0417                     	;# 
  2077     041C                     	;# 
  2078     041D                     	;# 
  2079     041E                     	;# 
  2080     0791                     	;# 
  2081     0792                     	;# 
  2082     0793                     	;# 
  2083     0794                     	;# 
  2084     0795                     	;# 
  2085     0798                     	;# 
  2086     0799                     	;# 
  2087     07A0                     	;# 
  2088     07A1                     	;# 
  2089     07A3                     	;# 
  2090     07A4                     	;# 
  2091     07A6                     	;# 
  2092     07A7                     	;# 
  2093     07A9                     	;# 
  2094     07AA                     	;# 
  2095     0FE4                     	;# 
  2096     0FE5                     	;# 
  2097     0FE6                     	;# 
  2098     0FE7                     	;# 
  2099     0FE8                     	;# 
  2100     0FE9                     	;# 
  2101     0FEA                     	;# 
  2102     0FEB                     	;# 
  2103     0FED                     	;# 
  2104     0FEE                     	;# 
  2105     0FEF                     	;_SES_Modbus
  2106                           
  2107                           	psect	idataBANK0
  2108     0375                     __pidataBANK0:
  2109                           
  2110                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2111     0375  3424               	retlw	36
  2112     0376  3416               	retlw	22
  2113                           
  2114                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2115     0377  3424               	retlw	36
  2116     0378  340B               	retlw	11
  2117                           
  2118                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2119     0379  342C               	retlw	44
  2120     037A  3410               	retlw	16
  2121                           
  2122                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2123     037B  342C               	retlw	44
  2124     037C  340D               	retlw	13
  2125                           
  2126                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2127     037D  342C               	retlw	44
  2128     037E  3406               	retlw	6
  2129                           
  2130                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2131     037F  3424               	retlw	36
  2132     0380  3400               	retlw	0
  2133                           
  2134                           	psect	stringtext1
  2135     0260                     __pstringtext1:
  2136     0260                     _i2c_fsmStateTable:
  2137     0260  3436               	retlw	low _I2C_DO_IDLE
  2138     0261  3404               	retlw	high _I2C_DO_IDLE
  2139     0262  34B7               	retlw	low _I2C_DO_SEND_ADR_READ
  2140     0263  3403               	retlw	high _I2C_DO_SEND_ADR_READ
  2141     0264  34C8               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2142     0265  3403               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2143     0266  348C               	retlw	low _I2C_DO_TX
  2144     0267  3400               	retlw	high _I2C_DO_TX
  2145     0268  34DF               	retlw	low _I2C_DO_RX
  2146     0269  3400               	retlw	high _I2C_DO_RX
  2147     026A  34D7               	retlw	low _I2C_DO_RCEN
  2148     026B  3403               	retlw	high _I2C_DO_RCEN
  2149     026C  349D               	retlw	low _I2C_DO_TX_EMPTY
  2150     026D  3401               	retlw	high _I2C_DO_TX_EMPTY
  2151     026E  3431               	retlw	low _I2C_DO_SEND_RESTART_READ
  2152     026F  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  2153     0270  342C               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2154     0271  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2155     0272  3427               	retlw	low _I2C_DO_SEND_RESTART
  2156     0273  3404               	retlw	high _I2C_DO_SEND_RESTART
  2157     0274  3422               	retlw	low _I2C_DO_SEND_STOP
  2158     0275  3404               	retlw	high _I2C_DO_SEND_STOP
  2159     0276  341D               	retlw	low _I2C_DO_RX_ACK
  2160     0277  3404               	retlw	high _I2C_DO_RX_ACK
  2161     0278  3418               	retlw	low _I2C_DO_RX_NACK_STOP
  2162     0279  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  2163     027A  3413               	retlw	low _I2C_DO_RX_NACK_RESTART
  2164     027B  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  2165     027C  340E               	retlw	low _I2C_DO_RESET
  2166     027D  3404               	retlw	high _I2C_DO_RESET
  2167     027E  34F2               	retlw	low _I2C_DO_ADDRESS_NACK
  2168     027F  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  2169     0280                     __end_of_i2c_fsmStateTable:
  2170                           
  2171                           	psect	stringtext2
  2172     03C0                     __pstringtext2:
  2173     03C0                     _fctsupported:
  2174     03C0  3401               	retlw	1
  2175     03C1  3402               	retlw	2
  2176     03C2  3403               	retlw	3
  2177     03C3  3404               	retlw	4
  2178     03C4  3405               	retlw	5
  2179     03C5  3406               	retlw	6
  2180     03C6  340F               	retlw	15
  2181     03C7  3410               	retlw	16
  2182     03C8                     __end_of_fctsupported:
  2183                           
  2184                           	psect	nvBANK0
  2185     0056                     __pnvBANK0:
  2186     0056                     _TMR1_InterruptHandler:
  2187     0056                     	ds	2
  2188     0058                     _EUSART_ErrorHandler:
  2189     0058                     	ds	2
  2190     005A                     _EUSART_OverrunErrorHandler:
  2191     005A                     	ds	2
  2192     005C                     _EUSART_FramingErrorHandler:
  2193     005C                     	ds	2
  2194     005E                     _EUSART_RxDefaultInterruptHandler:
  2195     005E                     	ds	2
  2196     0060                     _EUSART_TxDefaultInterruptHandler:
  2197     0060                     	ds	2
  2198     0019                     _T1GCONbits	set	25
  2199     0018                     _T1CONbits	set	24
  2200     0018                     _T1CON	set	24
  2201     0016                     _TMR1L	set	22
  2202     0017                     _TMR1H	set	23
  2203     0019                     _T1GCON	set	25
  2204     000B                     _INTCONbits	set	11
  2205     0011                     _PIR1bits	set	17
  2206     0012                     _PIR2bits	set	18
  2207     0092                     _PIE2bits	set	146
  2208     0091                     _PIE1bits	set	145
  2209     0097                     _WDTCON	set	151
  2210     0098                     _OSCTUNE	set	152
  2211     0099                     _OSCCON	set	153
  2212     0095                     _OPTION_REGbits	set	149
  2213     008E                     _TRISC	set	142
  2214     008D                     _TRISB	set	141
  2215     008C                     _TRISA	set	140
  2216     0090                     _TRISE	set	144
  2217     010E                     _LATCbits	set	270
  2218     0116                     _BORCON	set	278
  2219     011D                     _APFCON	set	285
  2220     010E                     _LATC	set	270
  2221     010D                     _LATB	set	269
  2222     010C                     _LATA	set	268
  2223     0110                     _LATE	set	272
  2224     0199                     _RCREG	set	409
  2225     019D                     _RCSTAbits	set	413
  2226     019A                     _TXREG	set	410
  2227     019E                     _TXSTAbits	set	414
  2228     019C                     _SPBRGH	set	412
  2229     019B                     _SPBRGL	set	411
  2230     019E                     _TXSTA	set	414
  2231     019D                     _RCSTA	set	413
  2232     019F                     _BAUDCON	set	415
  2233     018C                     _ANSELA	set	396
  2234     018D                     _ANSELB	set	397
  2235     0214                     _SSPSTATbits	set	532
  2236     0216                     _SSPCON2bits	set	534
  2237     0211                     _SSPBUF	set	529
  2238     0215                     _SSPCON1bits	set	533
  2239     0212                     _SSPADD	set	530
  2240     0216                     _SSPCON2	set	534
  2241     0215                     _SSPCON1	set	533
  2242     0214                     _SSPSTAT	set	532
  2243     020D                     _WPUB	set	525
  2244     0210                     _WPUE	set	528
  2245                           
  2246                           	psect	cinit
  2247     0057                     start_initialization:	
  2248                           ; #config settings
  2249                           
  2250     0057                     __initialization:	;BIGRAM
  2251                           
  2252                           ; Initialize objects allocated to BANK0
  2253     0057  3075               	movlw	low __pidataBANK0
  2254     0058  0084               	movwf	4
  2255     0059  3083               	movlw	(high __pidataBANK0)| (0+128)
  2256     005A  0085               	movwf	5
  2257     005B  3062               	movlw	low __pdataBANK0
  2258     005C  0086               	movwf	6
  2259     005D  3000               	movlw	high __pdataBANK0
  2260     005E  0087               	movwf	7
  2261     005F  3000               	movlw	0
  2262     0060  00FF               	movwf	btemp+1
  2263     0061  300C               	movlw	12
  2264     0062  3183  2381  3180   	fcall	init_ram
  2265                           
  2266                           ; Clear objects allocated to BIGRAM
  2267     0065  30D4               	movlw	low (0+8404)
  2268     0066  0084               	movwf	4
  2269     0067  3020               	movlw	high (0+8404)
  2270     0068  0085               	movwf	5
  2271     0069  301C               	movlw	28
  2272     006A  00FE               	movwf	btemp
  2273     006B  3001               	movlw	1
  2274     006C  00FF               	movwf	btemp+1
  2275     006D  3183  238D  3180   	fcall	clear_ram0
  2276                           
  2277                           ; Clear objects allocated to COMMON
  2278     0070  01FC               	clrf	__pbssCOMMON& (0+127)
  2279     0071  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2280                           
  2281                           ; Clear objects allocated to BANK0
  2282     0072  3020               	movlw	low __pbssBANK0
  2283     0073  0084               	movwf	4
  2284     0074  3000               	movlw	high __pbssBANK0
  2285     0075  0085               	movwf	5
  2286     0076  3036               	movlw	54
  2287     0077  00FE               	movwf	btemp
  2288     0078  3000               	movlw	0
  2289     0079  00FF               	movwf	btemp+1
  2290     007A  3183  238D  3180   	fcall	clear_ram0
  2291                           
  2292                           ; Clear objects allocated to BANK1
  2293     007D  30A0               	movlw	low __pbssBANK1
  2294     007E  0084               	movwf	4
  2295     007F  3000               	movlw	high __pbssBANK1
  2296     0080  0085               	movwf	5
  2297     0081  3030               	movlw	48
  2298     0082  00FE               	movwf	btemp
  2299     0083  3000               	movlw	0
  2300     0084  00FF               	movwf	btemp+1
  2301     0085  3183  238D  3180   	fcall	clear_ram0
  2302     0088                     end_of_initialization:	
  2303                           ;End of C runtime variable initialization code
  2304                           
  2305     0088                     __end_of__initialization:
  2306     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2307     0089  0020               	movlb	0
  2308     008A  3183  2BDE         	ljmp	_main	;jump to C main() function
  2309                           
  2310                           	psect	bssCOMMON
  2311     007C                     __pbssCOMMON:
  2312     007C                     _eusartRxTail:
  2313     007C                     	ds	1
  2314     007D                     _eusartRxHead:
  2315     007D                     	ds	1
  2316                           
  2317                           	psect	bssBANK0
  2318     0020                     __pbssBANK0:
  2319     0020                     _I2C_Status:
  2320     0020                     	ds	29
  2321     003D                     _device_time:
  2322     003D                     	ds	4
  2323     0041                     _timer1ReloadVal:
  2324     0041                     	ds	2
  2325     0043                     _MSSP_InterruptHandler:
  2326     0043                     	ds	2
  2327     0045                     _MB_UID:
  2328     0045                     	ds	1
  2329     0046                     _f_Indicator:
  2330     0046                     	ds	1
  2331     0047                     _SW_Ad:
  2332     0047                     	ds	1
  2333     0048                     _LED_Statuc:
  2334     0048                     	ds	1
  2335     0049                     _eusartRxLastError:
  2336     0049                     	ds	1
  2337     004A                     _eusartRxCount:
  2338     004A                     	ds	1
  2339     004B                     _eusartTxBufferRemaining:
  2340     004B                     	ds	1
  2341     004C                     _eusartTxTail:
  2342     004C                     	ds	1
  2343     004D                     _eusartTxHead:
  2344     004D                     	ds	1
  2345     004E                     _MB_Register:
  2346     004E                     	ds	4
  2347     0052                     _Humidity:
  2348     0052                     	ds	2
  2349     0054                     _Temperature:
  2350     0054                     	ds	2
  2351                           
  2352                           	psect	dataBANK0
  2353     0062                     __pdataBANK0:
  2354     0062                     _SHT30_CMD_MEASURE_L_Disable:
  2355     0062                     	ds	2
  2356     0064                     _SHT30_CMD_MEASURE_M_Disable:
  2357     0064                     	ds	2
  2358     0066                     _SHT30_CMD_MEASURE_L_Enable:
  2359     0066                     	ds	2
  2360     0068                     _SHT30_CMD_MEASURE_M_Enable:
  2361     0068                     	ds	2
  2362     006A                     _SHT30_CMD_MEASURE_H_Enable:
  2363     006A                     	ds	2
  2364     006C                     _SHT30_CMD_MEASURE_H_Disable:
  2365     006C                     	ds	2
  2366                           
  2367                           	psect	bssBANK1
  2368     00A0                     __pbssBANK1:
  2369     00A0                     _eusartRxStatusBuffer:
  2370     00A0                     	ds	16
  2371     00B0                     _eusartRxBuffer:
  2372     00B0                     	ds	16
  2373     00C0                     _eusartTxBuffer:
  2374     00C0                     	ds	16
  2375                           
  2376                           	psect	inittext
  2377     0381                     init_ram:
  2378     0381  00FE               	movwf	btemp
  2379     0382                     initloop:
  2380     0382  0012               	moviw fsr0++
  2381     0383  001E               	movwi fsr1++
  2382     0384  3001               	movlw	1
  2383     0385  02FE               	subwf	btemp,f
  2384     0386  3000               	movlw	0
  2385     0387  3BFF               	subwfb	btemp+1,f
  2386     0388  087F               	movf	btemp+1,w
  2387     0389  047E               	iorwf	btemp,w
  2388     038A  1D03               	skipz
  2389     038B  2B82               	goto	initloop
  2390     038C  3400               	retlw	0
  2391                           
  2392                           	psect	clrtext
  2393     038D                     clear_ram0:	
  2394                           ;	Called with FSR0 containing the base address, and
  2395                           ;	btemp/btemp+1 has the size to clear
  2396                           
  2397     038D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2398     038E                     clrloop0:
  2399     038E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2400     038F  3101               	addfsr 0,1
  2401     0390  3001               	movlw	1
  2402     0391  02FE               	subwf	btemp,f
  2403     0392  3000               	movlw	0
  2404     0393  3BFF               	subwfb	btemp+1,f
  2405     0394  087F               	movf	btemp+1,w
  2406     0395  047E               	iorwf	btemp,w
  2407     0396  1D03               	skipz
  2408     0397  2B8E               	goto	clrloop0	;have we reached the end yet?
  2409     0398  3400               	retlw	0	;all done for this memory range, return
  2410                           
  2411                           	psect	cstackCOMMON
  2412     0070                     __pcstackCOMMON:
  2413     0070                     ?_I2C_SetBuffer:
  2414     0070                     ?_I2C_Initialize:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417     0070                     ?_OSCILLATOR_Initialize:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420     0070                     ?_WDT_Initialize:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423     0070                     ?_TMR1_Initialize:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426     0070                     ?_EUSART_Initialize:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429     0070                     ?_I2C_DO_IDLE:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432     0070                     ??_I2C_DO_IDLE:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444     0070                     ?_I2C_DO_TX:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447     0070                     ?_I2C_DO_RX:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450     0070                     ?_I2C_DO_RCEN:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ??_I2C_DO_RCEN:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ?_I2C_DO_TX_EMPTY:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     ?_I2C_DO_SEND_RESTART:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     ??_I2C_DO_SEND_RESTART:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477     0070                     ?_I2C_DO_SEND_STOP:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480     0070                     ??_I2C_DO_SEND_STOP:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483     0070                     ?_I2C_DO_RX_ACK:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486     0070                     ??_I2C_DO_RX_ACK:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0070                     ?_I2C_DO_RESET:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504     0070                     ??_I2C_DO_RESET:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ?_I2C_MasterIsr:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_I2C_MasterClearIrq:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ??_I2C_MasterClearIrq:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ?_I2C_SetCallback:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ?_I2C_MasterFsm:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ?_I2C_MasterIsNack:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ??_I2C_MasterIsNack:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ?_I2C_MasterSendTxData:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ??_I2C_MasterSendTxData:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ?_I2C_MasterGetRxData:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ??_I2C_MasterGetRxData:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ?_I2C_MasterSendAck:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ??_I2C_MasterSendAck:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ?_I2C_MasterStartRx:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552     0070                     ??_I2C_MasterStartRx:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555     0070                     ?_I2C_MasterSetIrq:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558     0070                     ??_I2C_MasterSetIrq:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561     0070                     ?_I2C_MasterEnableRestart:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564     0070                     ??_I2C_MasterEnableRestart:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567     0070                     ?_I2C_MasterStop:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570     0070                     ??_I2C_MasterStop:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573     0070                     ?_I2C_MasterSendNack:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576     0070                     ??_I2C_MasterSendNack:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579     0070                     ?_TMR1_ISR:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582     0070                     ?_EUSART_Receive_ISR:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585     0070                     ?_EUSART_Transmit_ISR:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588     0070                     ??_EUSART_Transmit_ISR:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603     0070                     ?_EUSART_DefaultErrorHandler:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606     0070                     ?_EUSART_RxDataHandler:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609     0070                     ??_EUSART_RxDataHandler:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612     0070                     ?_TMR1_DefaultInterruptHandler:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615     0070                     ??_TMR1_DefaultInterruptHandler:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618     0070                     ?_TMR1_CallBack:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621     0070                     ??_TMR1_CallBack:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624     0070                     ?_rtcc_handle:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627     0070                     ??_rtcc_handle:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630     0070                     ?_PIN_MANAGER_Initialize:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633     0070                     ?_SYSTEM_Initialize:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636     0070                     ?_INTERRUPT_InterruptManager:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639     0070                     ?_TMR1_WriteTimer:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642     0070                     ?_main:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645     0070                     I2C_MasterSendTxData@data:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648     0070                     I2C_SetBuffer@bufferSize:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651     0070                     I2C_SetCallback@cb:	
  2652                           ; 2 bytes @ 0x0
  2653                           
  2654     0070                     TMR1_WriteTimer@timerVal:	
  2655                           ; 2 bytes @ 0x0
  2656                           
  2657                           
  2658                           ; 2 bytes @ 0x0
  2659     0070                     	ds	1
  2660     0071                     ??_I2C_DO_SEND_ADR_WRITE:
  2661     0071                     ??_EUSART_Receive_ISR:	
  2662                           ; 1 bytes @ 0x1
  2663                           
  2664     0071                     ??_EUSART_DefaultErrorHandler:	
  2665                           ; 1 bytes @ 0x1
  2666                           
  2667                           
  2668                           ; 1 bytes @ 0x1
  2669     0071                     	ds	1
  2670     0072                     ??_I2C_SetBuffer:
  2671     0072                     ??_TMR1_ISR:	
  2672                           ; 1 bytes @ 0x2
  2673                           
  2674     0072                     ??_TMR1_WriteTimer:	
  2675                           ; 1 bytes @ 0x2
  2676                           
  2677     0072                     I2C_SetBuffer@buffer:	
  2678                           ; 1 bytes @ 0x2
  2679                           
  2680     0072                     I2C_SetCallback@ptr:	
  2681                           ; 1 bytes @ 0x2
  2682                           
  2683                           
  2684                           ; 1 bytes @ 0x2
  2685     0072                     	ds	1
  2686     0073                     ??_I2C_SetCallback:
  2687     0073                     I2C_SetCallback@idx:	
  2688                           ; 1 bytes @ 0x3
  2689                           
  2690                           
  2691                           ; 1 bytes @ 0x3
  2692     0073                     	ds	1
  2693     0074                     ?_I2C_SetDataCompleteCallback:
  2694     0074                     I2C_SetDataCompleteCallback@cb:	
  2695                           ; 1 bytes @ 0x4
  2696                           
  2697                           
  2698                           ; 2 bytes @ 0x4
  2699     0074                     	ds	2
  2700     0076                     I2C_SetDataCompleteCallback@ptr:
  2701                           
  2702                           ; 1 bytes @ 0x6
  2703     0076                     	ds	1
  2704     0077                     ??_I2C_SetDataCompleteCallback:
  2705     0077                     ?_rd1RegCompleteHandler:	
  2706                           ; 1 bytes @ 0x7
  2707                           
  2708     0077                     ?_rd2RegCompleteHandler:	
  2709                           ; 1 bytes @ 0x7
  2710                           
  2711     0077                     ?_wr1RegCompleteHandler:	
  2712                           ; 1 bytes @ 0x7
  2713                           
  2714     0077                     ?_wr2RegCompleteHandler:	
  2715                           ; 1 bytes @ 0x7
  2716                           
  2717     0077                     ?_rdBlkRegCompleteHandler:	
  2718                           ; 1 bytes @ 0x7
  2719                           
  2720     0077                     ?_I2C_CallbackReturnStop:	
  2721                           ; 1 bytes @ 0x7
  2722                           
  2723     0077                     ?_I2C_CallbackReturnReset:	
  2724                           ; 1 bytes @ 0x7
  2725                           
  2726     0077                     rd1RegCompleteHandler@ptr:	
  2727                           ; 1 bytes @ 0x7
  2728                           
  2729     0077                     rd2RegCompleteHandler@ptr:	
  2730                           ; 1 bytes @ 0x7
  2731                           
  2732     0077                     wr1RegCompleteHandler@ptr:	
  2733                           ; 1 bytes @ 0x7
  2734                           
  2735     0077                     wr2RegCompleteHandler@ptr:	
  2736                           ; 1 bytes @ 0x7
  2737                           
  2738     0077                     rdBlkRegCompleteHandler@ptr:	
  2739                           ; 1 bytes @ 0x7
  2740                           
  2741     0077                     I2C_CallbackReturnStop@funPtr:	
  2742                           ; 1 bytes @ 0x7
  2743                           
  2744     0077                     I2C_CallbackReturnReset@funPtr:	
  2745                           ; 1 bytes @ 0x7
  2746                           
  2747                           
  2748                           ; 1 bytes @ 0x7
  2749     0077                     	ds	1
  2750     0078                     ??_rd1RegCompleteHandler:
  2751     0078                     ??_rd2RegCompleteHandler:	
  2752                           ; 1 bytes @ 0x8
  2753                           
  2754     0078                     ??_wr1RegCompleteHandler:	
  2755                           ; 1 bytes @ 0x8
  2756                           
  2757     0078                     ??_wr2RegCompleteHandler:	
  2758                           ; 1 bytes @ 0x8
  2759                           
  2760     0078                     ??_rdBlkRegCompleteHandler:	
  2761                           ; 1 bytes @ 0x8
  2762                           
  2763     0078                     ??_I2C_DO_TX:	
  2764                           ; 1 bytes @ 0x8
  2765                           
  2766     0078                     ??_I2C_DO_RX:	
  2767                           ; 1 bytes @ 0x8
  2768                           
  2769     0078                     ??_I2C_DO_TX_EMPTY:	
  2770                           ; 1 bytes @ 0x8
  2771                           
  2772     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2773                           ; 1 bytes @ 0x8
  2774                           
  2775     0078                     ??_I2C_CallbackReturnStop:	
  2776                           ; 1 bytes @ 0x8
  2777                           
  2778     0078                     ??_I2C_CallbackReturnReset:	
  2779                           ; 1 bytes @ 0x8
  2780                           
  2781                           
  2782                           ; 1 bytes @ 0x8
  2783     0078                     	ds	2
  2784     007A                     ??_I2C_MasterFsm:
  2785                           
  2786                           ; 1 bytes @ 0xA
  2787     007A                     	ds	2
  2788     007C                     ??_I2C_MasterIsr:
  2789     007C                     ??_INTERRUPT_InterruptManager:	
  2790                           ; 1 bytes @ 0xC
  2791                           
  2792                           
  2793                           	psect	cstackBANK0
  2794     006E                     __pcstackBANK0:	
  2795                           ; 1 bytes @ 0xC
  2796                           
  2797     006E                     ??_I2C_Initialize:
  2798     006E                     ??_OSCILLATOR_Initialize:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801     006E                     ??_WDT_Initialize:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804     006E                     ?_EUSART_SetRxInterruptHandler:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807     006E                     ?_EUSART_SetTxInterruptHandler:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     006E                     ?_EUSART_SetFramingErrorHandler:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     006E                     ?_EUSART_SetOverrunErrorHandler:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816     006E                     ?_EUSART_SetErrorHandler:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     006E                     ?_TMR1_SetInterruptHandler:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     006E                     ??_PIN_MANAGER_Initialize:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     006E                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     006E                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2829                           ; 2 bytes @ 0x0
  2830                           
  2831     006E                     EUSART_SetErrorHandler@interruptHandler:	
  2832                           ; 2 bytes @ 0x0
  2833                           
  2834     006E                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2835                           ; 2 bytes @ 0x0
  2836                           
  2837     006E                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2838                           ; 2 bytes @ 0x0
  2839                           
  2840     006E                     TMR1_SetInterruptHandler@InterruptHandler:	
  2841                           ; 2 bytes @ 0x0
  2842                           
  2843                           
  2844                           ; 2 bytes @ 0x0
  2845     006E                     	ds	2
  2846     0070                     ??_TMR1_Initialize:
  2847     0070                     ??_EUSART_Initialize:	
  2848                           ; 1 bytes @ 0x2
  2849                           
  2850     0070                     ??_EUSART_SetRxInterruptHandler:	
  2851                           ; 1 bytes @ 0x2
  2852                           
  2853     0070                     ??_EUSART_SetTxInterruptHandler:	
  2854                           ; 1 bytes @ 0x2
  2855                           
  2856     0070                     ??_EUSART_SetFramingErrorHandler:	
  2857                           ; 1 bytes @ 0x2
  2858                           
  2859     0070                     ??_EUSART_SetOverrunErrorHandler:	
  2860                           ; 1 bytes @ 0x2
  2861                           
  2862     0070                     ??_EUSART_SetErrorHandler:	
  2863                           ; 1 bytes @ 0x2
  2864                           
  2865     0070                     ??_TMR1_SetInterruptHandler:	
  2866                           ; 1 bytes @ 0x2
  2867                           
  2868     0070                     ??_SYSTEM_Initialize:	
  2869                           ; 1 bytes @ 0x2
  2870                           
  2871     0070                     ??_main:	
  2872                           ; 1 bytes @ 0x2
  2873                           
  2874                           
  2875                           	psect	maintext
  2876     03DE                     __pmaintext:	
  2877                           ; 1 bytes @ 0x2
  2878 ;;
  2879 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2880 ;;
  2881 ;; *************** function _main *****************
  2882 ;; Defined at:
  2883 ;;		line 49 in file "main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : B1F/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2897 ;;      Params:         0       0       0       0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels required when called: 10
  2903 ;; This function calls:
  2904 ;;		_SYSTEM_Initialize
  2905 ;; This function is called by:
  2906 ;;		Startup code after reset
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910     03DE                     _main:	
  2911                           ;psect for function _main
  2912                           
  2913     03DE                     l3694:	
  2914                           ;incstack = 0
  2915                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2916                           
  2917                           
  2918                           ;main.c: 52:     SYSTEM_Initialize();
  2919     03DE  3182  22E5  3183   	fcall	_SYSTEM_Initialize
  2920     03E1                     l767:	
  2921                           ;main.c: 69:     while (1)
  2922                           
  2923     03E1                     l768:	
  2924                           ;main.c: 70:     {;main.c: 72:     }
  2925                           
  2926     03E1  2BE1               	goto	l767
  2927     03E2  3180  2855         	ljmp	start
  2928     03E4                     __end_of_main:
  2929                           
  2930                           	psect	text1
  2931     02E5                     __ptext1:	
  2932 ;; *************** function _SYSTEM_Initialize *****************
  2933 ;; Defined at:
  2934 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2948 ;;      Params:         0       0       0       0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 9
  2955 ;; This function calls:
  2956 ;;		_EUSART_Initialize
  2957 ;;		_I2C_Initialize
  2958 ;;		_OSCILLATOR_Initialize
  2959 ;;		_PIN_MANAGER_Initialize
  2960 ;;		_TMR1_Initialize
  2961 ;;		_WDT_Initialize
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967     02E5                     _SYSTEM_Initialize:	
  2968                           ;psect for function _SYSTEM_Initialize
  2969                           
  2970     02E5                     l3460:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2973                           
  2974                           
  2975                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2976     02E5  3183  23AE  3182   	fcall	_I2C_Initialize
  2977                           
  2978                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2979     02E8  3182  2280  3182   	fcall	_PIN_MANAGER_Initialize
  2980                           
  2981                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2982     02EB  3183  23D0  3182   	fcall	_OSCILLATOR_Initialize
  2983                           
  2984                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2985     02EE  3184  2440  3182   	fcall	_WDT_Initialize
  2986                           
  2987                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  2988     02F1  3182  229C  3182   	fcall	_TMR1_Initialize
  2989                           
  2990                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2991     02F4  3181  2122  3182   	fcall	_EUSART_Initialize
  2992     02F7                     l163:
  2993     02F7  0008               	return
  2994     02F8                     __end_of_SYSTEM_Initialize:
  2995                           
  2996                           	psect	text2
  2997     0440                     __ptext2:	
  2998 ;; *************** function _WDT_Initialize *****************
  2999 ;; Defined at:
  3000 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3014 ;;      Params:         0       0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 7
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_SYSTEM_Initialize
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028     0440                     _WDT_Initialize:	
  3029                           ;psect for function _WDT_Initialize
  3030                           
  3031     0440                     l3264:	
  3032                           ;incstack = 0
  3033                           ; Regs used in _WDT_Initialize: [wreg]
  3034                           
  3035                           
  3036                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  3037     0440  3016               	movlw	22
  3038     0441  0021               	movlb	1	; select bank1
  3039     0442  0097               	movwf	23	;volatile
  3040     0443                     l169:
  3041     0443  0008               	return
  3042     0444                     __end_of_WDT_Initialize:
  3043                           
  3044                           	psect	text3
  3045     029C                     __ptext3:	
  3046 ;; *************** function _TMR1_Initialize *****************
  3047 ;; Defined at:
  3048 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, pclath, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3062 ;;      Params:         0       0       0       0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 8
  3069 ;; This function calls:
  3070 ;;		_TMR1_SetInterruptHandler
  3071 ;; This function is called by:
  3072 ;;		_SYSTEM_Initialize
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076     029C                     _TMR1_Initialize:	
  3077                           ;psect for function _TMR1_Initialize
  3078                           
  3079     029C                     l3266:	
  3080                           ;incstack = 0
  3081                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3082                           
  3083                           
  3084                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3085     029C  0020               	movlb	0	; select bank0
  3086     029D  0199               	clrf	25	;volatile
  3087     029E                     l3268:
  3088                           
  3089                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3090     029E  30E0               	movlw	224
  3091     029F  0097               	movwf	23	;volatile
  3092     02A0                     l3270:
  3093                           
  3094                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3095     02A0  30C0               	movlw	192
  3096     02A1  0096               	movwf	22	;volatile
  3097     02A2                     l3272:
  3098                           
  3099                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3100     02A2  1011               	bcf	17,0	;volatile
  3101     02A3                     l3274:
  3102                           
  3103                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3104     02A3  0817               	movf	23,w	;volatile
  3105     02A4  00C2               	movwf	_timer1ReloadVal+1	;volatile
  3106     02A5  0816               	movf	22,w	;volatile
  3107     02A6  00C1               	movwf	_timer1ReloadVal	;volatile
  3108     02A7                     l3276:
  3109                           
  3110                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3111     02A7  0021               	movlb	1	; select bank1
  3112     02A8  1411               	bsf	17,0	;volatile
  3113     02A9                     l3278:
  3114                           
  3115                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3116     02A9  306E               	movlw	low _TMR1_DefaultInterruptHandler
  3117     02AA  0020               	movlb	0	; select bank0
  3118     02AB  00EE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3119     02AC  3004               	movlw	high _TMR1_DefaultInterruptHandler
  3120     02AD  00EF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3121     02AE  3183  23E4  3182   	fcall	_TMR1_SetInterruptHandler
  3122     02B1                     l3280:
  3123                           
  3124                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3125     02B1  3041               	movlw	65
  3126     02B2  0020               	movlb	0	; select bank0
  3127     02B3  0098               	movwf	24	;volatile
  3128     02B4                     l716:
  3129     02B4  0008               	return
  3130     02B5                     __end_of_TMR1_Initialize:
  3131                           
  3132                           	psect	text4
  3133     03E4                     __ptext4:	
  3134 ;; *************** function _TMR1_SetInterruptHandler *****************
  3135 ;; Defined at:
  3136 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3139 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3151 ;;      Params:         0       2       0       0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0
  3154 ;;      Totals:         0       2       0       0       0       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 7
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_TMR1_Initialize
  3162 ;;		_Tick_Init_SES
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166     03E4                     _TMR1_SetInterruptHandler:	
  3167                           ;psect for function _TMR1_SetInterruptHandler
  3168                           
  3169     03E4                     l3108:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3172                           
  3173                           
  3174                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  3175     03E4  0020               	movlb	0	; select bank0
  3176     03E5  086F               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3177     03E6  00D7               	movwf	_TMR1_InterruptHandler+1
  3178     03E7  086E               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3179     03E8  00D6               	movwf	_TMR1_InterruptHandler
  3180     03E9                     l749:
  3181     03E9  0008               	return
  3182     03EA                     __end_of_TMR1_SetInterruptHandler:
  3183                           
  3184                           	psect	text5
  3185     0280                     __ptext5:	
  3186 ;; *************** function _PIN_MANAGER_Initialize *****************
  3187 ;; Defined at:
  3188 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3202 ;;      Params:         0       0       0       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0
  3205 ;;      Totals:         0       0       0       0       0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 7
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_SYSTEM_Initialize
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216     0280                     _PIN_MANAGER_Initialize:	
  3217                           ;psect for function _PIN_MANAGER_Initialize
  3218                           
  3219     0280                     l3226:	
  3220                           ;incstack = 0
  3221                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3222                           
  3223                           
  3224                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3225     0280  0022               	movlb	2	; select bank2
  3226     0281  0190               	clrf	16	;volatile
  3227                           
  3228                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3229     0282  018C               	clrf	12	;volatile
  3230                           
  3231                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3232     0283  018D               	clrf	13	;volatile
  3233     0284                     l3228:
  3234                           
  3235                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  3236     0284  3040               	movlw	64
  3237     0285  008E               	movwf	14	;volatile
  3238     0286                     l3230:
  3239                           
  3240                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3241     0286  3008               	movlw	8
  3242     0287  0021               	movlb	1	; select bank1
  3243     0288  0090               	movwf	16	;volatile
  3244     0289                     l3232:
  3245                           
  3246                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3247     0289  30FF               	movlw	255
  3248     028A  008C               	movwf	12	;volatile
  3249     028B                     l3234:
  3250                           
  3251                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3252     028B  30FF               	movlw	255
  3253     028C  008D               	movwf	13	;volatile
  3254     028D                     l3236:
  3255                           
  3256                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3257     028D  309C               	movlw	156
  3258     028E  008E               	movwf	14	;volatile
  3259     028F                     l3238:
  3260                           
  3261                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3262     028F  303F               	movlw	63
  3263     0290  0023               	movlb	3	; select bank3
  3264     0291  008D               	movwf	13	;volatile
  3265     0292                     l3240:
  3266                           
  3267                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3268     0292  3030               	movlw	48
  3269     0293  008C               	movwf	12	;volatile
  3270     0294                     l3242:
  3271                           
  3272                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3273     0294  0024               	movlb	4	; select bank4
  3274     0295  0190               	clrf	16	;volatile
  3275     0296                     l3244:
  3276                           
  3277                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3278     0296  018D               	clrf	13	;volatile
  3279     0297                     l3246:
  3280                           
  3281                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3282     0297  0021               	movlb	1	; select bank1
  3283     0298  1795               	bsf	21,7	;volatile
  3284     0299                     l3248:
  3285                           
  3286                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3287     0299  0022               	movlb	2	; select bank2
  3288     029A  019D               	clrf	29	;volatile
  3289     029B                     l135:
  3290     029B  0008               	return
  3291     029C                     __end_of_PIN_MANAGER_Initialize:
  3292                           
  3293                           	psect	text6
  3294     03D0                     __ptext6:	
  3295 ;; *************** function _OSCILLATOR_Initialize *****************
  3296 ;; Defined at:
  3297 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3311 ;;      Params:         0       0       0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 7
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_SYSTEM_Initialize
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     03D0                     _OSCILLATOR_Initialize:	
  3326                           ;psect for function _OSCILLATOR_Initialize
  3327                           
  3328     03D0                     l3258:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3331                           
  3332                           
  3333                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3334     03D0  3070               	movlw	112
  3335     03D1  0021               	movlb	1	; select bank1
  3336     03D2  0099               	movwf	25	;volatile
  3337     03D3                     l3260:
  3338                           
  3339                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3340     03D3  0198               	clrf	24	;volatile
  3341     03D4                     l3262:
  3342                           
  3343                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3344     03D4  0022               	movlb	2	; select bank2
  3345     03D5  0196               	clrf	22	;volatile
  3346     03D6                     l166:
  3347     03D6  0008               	return
  3348     03D7                     __end_of_OSCILLATOR_Initialize:
  3349                           
  3350                           	psect	text7
  3351     03AE                     __ptext7:	
  3352 ;; *************** function _I2C_Initialize *****************
  3353 ;; Defined at:
  3354 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3368 ;;      Params:         0       0       0       0       0       0       0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 7
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_SYSTEM_Initialize
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382     03AE                     _I2C_Initialize:	
  3383                           ;psect for function _I2C_Initialize
  3384                           
  3385     03AE                     l3250:	
  3386                           ;incstack = 0
  3387                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3388                           
  3389                           
  3390                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3391     03AE  0024               	movlb	4	; select bank4
  3392     03AF  0194               	clrf	20	;volatile
  3393     03B0                     l3252:
  3394                           
  3395                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3396     03B0  3008               	movlw	8
  3397     03B1  0095               	movwf	21	;volatile
  3398     03B2                     l3254:
  3399                           
  3400                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3401     03B2  0196               	clrf	22	;volatile
  3402                           
  3403                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3404     03B3  3013               	movlw	19
  3405     03B4  0092               	movwf	18	;volatile
  3406     03B5                     l3256:
  3407                           
  3408                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3409     03B5  1295               	bcf	21,5	;volatile
  3410     03B6                     l278:
  3411     03B6  0008               	return
  3412     03B7                     __end_of_I2C_Initialize:
  3413                           
  3414                           	psect	text8
  3415     0122                     __ptext8:	
  3416 ;; *************** function _EUSART_Initialize *****************
  3417 ;; Defined at:
  3418 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, pclath, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3432 ;;      Params:         0       0       0       0       0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 8
  3439 ;; This function calls:
  3440 ;;		_EUSART_SetErrorHandler
  3441 ;;		_EUSART_SetFramingErrorHandler
  3442 ;;		_EUSART_SetOverrunErrorHandler
  3443 ;;		_EUSART_SetRxInterruptHandler
  3444 ;;		_EUSART_SetTxInterruptHandler
  3445 ;; This function is called by:
  3446 ;;		_SYSTEM_Initialize
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450     0122                     _EUSART_Initialize:	
  3451                           ;psect for function _EUSART_Initialize
  3452                           
  3453     0122                     l3282:	
  3454                           ;incstack = 0
  3455                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3456                           
  3457                           
  3458                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3459     0122  0021               	movlb	1	; select bank1
  3460     0123  1291               	bcf	17,5	;volatile
  3461     0124                     l3284:
  3462                           
  3463                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3464     0124  3064               	movlw	low _EUSART_Receive_ISR
  3465     0125  0020               	movlb	0	; select bank0
  3466     0126  00EE               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3467     0127  3001               	movlw	high _EUSART_Receive_ISR
  3468     0128  00EF               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3469     0129  3183  23F0  3181   	fcall	_EUSART_SetRxInterruptHandler
  3470     012C                     l3286:
  3471                           
  3472                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3473     012C  0021               	movlb	1	; select bank1
  3474     012D  1211               	bcf	17,4	;volatile
  3475                           
  3476                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3477     012E  303E               	movlw	low _EUSART_Transmit_ISR
  3478     012F  0020               	movlb	0	; select bank0
  3479     0130  00EE               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3480     0131  3002               	movlw	high _EUSART_Transmit_ISR
  3481     0132  00EF               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3482     0133  3183  23EA  3181   	fcall	_EUSART_SetTxInterruptHandler
  3483     0136                     l3288:
  3484                           
  3485                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3486     0136  3008               	movlw	8
  3487     0137  0023               	movlb	3	; select bank3
  3488     0138  009F               	movwf	31	;volatile
  3489     0139                     l3290:
  3490                           
  3491                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3492     0139  3090               	movlw	144
  3493     013A  009D               	movwf	29	;volatile
  3494     013B                     l3292:
  3495                           
  3496                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3497     013B  3024               	movlw	36
  3498     013C  009E               	movwf	30	;volatile
  3499     013D                     l3294:
  3500                           
  3501                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  3502     013D  30CF               	movlw	207
  3503     013E  009B               	movwf	27	;volatile
  3504     013F                     l3296:
  3505                           
  3506                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3507     013F  019C               	clrf	28	;volatile
  3508     0140                     l3298:
  3509                           
  3510                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3511     0140  306F               	movlw	low _EUSART_DefaultFramingErrorHandler
  3512     0141  0020               	movlb	0	; select bank0
  3513     0142  00EE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3514     0143  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  3515     0144  00EF               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3516     0145  3183  23FC  3181   	fcall	_EUSART_SetFramingErrorHandler
  3517     0148                     l3300:
  3518                           
  3519                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3520     0148  3050               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3521     0149  0020               	movlb	0	; select bank0
  3522     014A  00EE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3523     014B  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3524     014C  00EF               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3525     014D  3183  23F6  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3526     0150                     l3302:
  3527                           
  3528                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3529     0150  3054               	movlw	low _EUSART_DefaultErrorHandler
  3530     0151  0020               	movlb	0	; select bank0
  3531     0152  00EE               	movwf	EUSART_SetErrorHandler@interruptHandler
  3532     0153  3004               	movlw	high _EUSART_DefaultErrorHandler
  3533     0154  00EF               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3534     0155  3184  2402  3181   	fcall	_EUSART_SetErrorHandler
  3535                           
  3536                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3537     0158  0020               	movlb	0	; select bank0
  3538     0159  01C9               	clrf	_eusartRxLastError	;volatile
  3539                           
  3540                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3541     015A  01CD               	clrf	_eusartTxHead	;volatile
  3542                           
  3543                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3544     015B  01CC               	clrf	_eusartTxTail	;volatile
  3545     015C                     l3304:
  3546                           
  3547                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3548     015C  3010               	movlw	16
  3549     015D  00CB               	movwf	_eusartTxBufferRemaining	;volatile
  3550     015E                     l3306:
  3551                           
  3552                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3553     015E  01FD               	clrf	_eusartRxHead	;volatile
  3554     015F                     l3308:
  3555                           
  3556                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3557     015F  01FC               	clrf	_eusartRxTail	;volatile
  3558     0160                     l3310:
  3559                           
  3560                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3561     0160  01CA               	clrf	_eusartRxCount	;volatile
  3562     0161                     l3312:
  3563                           
  3564                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3565     0161  0021               	movlb	1	; select bank1
  3566     0162  1691               	bsf	17,5	;volatile
  3567     0163                     l618:
  3568     0163  0008               	return
  3569     0164                     __end_of_EUSART_Initialize:
  3570                           
  3571                           	psect	text9
  3572     03EA                     __ptext9:	
  3573 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3574 ;; Defined at:
  3575 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3578 ;;		 -> EUSART_Transmit_ISR(1), 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3590 ;;      Params:         0       2       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0
  3593 ;;      Totals:         0       2       0       0       0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 7
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_EUSART_Initialize
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604     03EA                     _EUSART_SetTxInterruptHandler:	
  3605                           ;psect for function _EUSART_SetTxInterruptHandler
  3606                           
  3607     03EA                     l3068:	
  3608                           ;incstack = 0
  3609                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3610                           
  3611                           
  3612                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3613     03EA  0020               	movlb	0	; select bank0
  3614     03EB  086F               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3615     03EC  00E1               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3616     03ED  086E               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3617     03EE  00E0               	movwf	_EUSART_TxDefaultInterruptHandler
  3618     03EF                     l684:
  3619     03EF  0008               	return
  3620     03F0                     __end_of_EUSART_SetTxInterruptHandler:
  3621                           
  3622                           	psect	text10
  3623     03F0                     __ptext10:	
  3624 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3625 ;; Defined at:
  3626 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3629 ;;		 -> EUSART_Receive_ISR(1), 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3641 ;;      Params:         0       2       0       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0       0
  3644 ;;      Totals:         0       2       0       0       0       0       0       0
  3645 ;;Total ram usage:        2 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 7
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_EUSART_Initialize
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655     03F0                     _EUSART_SetRxInterruptHandler:	
  3656                           ;psect for function _EUSART_SetRxInterruptHandler
  3657                           
  3658     03F0                     l3066:	
  3659                           ;incstack = 0
  3660                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3661                           
  3662                           
  3663                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3664     03F0  0020               	movlb	0	; select bank0
  3665     03F1  086F               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3666     03F2  00DF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3667     03F3  086E               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3668     03F4  00DE               	movwf	_EUSART_RxDefaultInterruptHandler
  3669     03F5                     l687:
  3670     03F5  0008               	return
  3671     03F6                     __end_of_EUSART_SetRxInterruptHandler:
  3672                           
  3673                           	psect	text11
  3674     03F6                     __ptext11:	
  3675 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3676 ;; Defined at:
  3677 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3680 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3692 ;;      Params:         0       2       0       0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0
  3695 ;;      Totals:         0       2       0       0       0       0       0       0
  3696 ;;Total ram usage:        2 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 7
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_EUSART_Initialize
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     03F6                     _EUSART_SetOverrunErrorHandler:	
  3707                           ;psect for function _EUSART_SetOverrunErrorHandler
  3708                           
  3709     03F6                     l3072:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3712                           
  3713                           
  3714                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3715     03F6  0020               	movlb	0	; select bank0
  3716     03F7  086F               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3717     03F8  00DB               	movwf	_EUSART_OverrunErrorHandler+1
  3718     03F9  086E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3719     03FA  00DA               	movwf	_EUSART_OverrunErrorHandler
  3720     03FB                     l678:
  3721     03FB  0008               	return
  3722     03FC                     __end_of_EUSART_SetOverrunErrorHandler:
  3723                           
  3724                           	psect	text12
  3725     03FC                     __ptext12:	
  3726 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3727 ;; Defined at:
  3728 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3731 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3743 ;;      Params:         0       2       0       0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0
  3746 ;;      Totals:         0       2       0       0       0       0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 7
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_EUSART_Initialize
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757     03FC                     _EUSART_SetFramingErrorHandler:	
  3758                           ;psect for function _EUSART_SetFramingErrorHandler
  3759                           
  3760     03FC                     l3070:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3763                           
  3764                           
  3765                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3766     03FC  0020               	movlb	0	; select bank0
  3767     03FD  086F               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3768     03FE  00DD               	movwf	_EUSART_FramingErrorHandler+1
  3769     03FF  086E               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3770     0400  00DC               	movwf	_EUSART_FramingErrorHandler
  3771     0401                     l675:
  3772     0401  0008               	return
  3773     0402                     __end_of_EUSART_SetFramingErrorHandler:
  3774                           
  3775                           	psect	text13
  3776     0402                     __ptext13:	
  3777 ;; *************** function _EUSART_SetErrorHandler *****************
  3778 ;; Defined at:
  3779 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3782 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3794 ;;      Params:         0       2       0       0       0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0
  3797 ;;      Totals:         0       2       0       0       0       0       0       0
  3798 ;;Total ram usage:        2 bytes
  3799 ;; Hardware stack levels used: 1
  3800 ;; Hardware stack levels required when called: 7
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_EUSART_Initialize
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808     0402                     _EUSART_SetErrorHandler:	
  3809                           ;psect for function _EUSART_SetErrorHandler
  3810                           
  3811     0402                     l3074:	
  3812                           ;incstack = 0
  3813                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3814                           
  3815                           
  3816                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3817     0402  0020               	movlb	0	; select bank0
  3818     0403  086F               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3819     0404  00D9               	movwf	_EUSART_ErrorHandler+1
  3820     0405  086E               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3821     0406  00D8               	movwf	_EUSART_ErrorHandler
  3822     0407                     l681:
  3823     0407  0008               	return
  3824     0408                     __end_of_EUSART_SetErrorHandler:
  3825                           
  3826                           	psect	intentry
  3827     0004                     __pintentry:	
  3828 ;; *************** function _INTERRUPT_InterruptManager *****************
  3829 ;; Defined at:
  3830 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3844 ;;      Params:         0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 6
  3851 ;; This function calls:
  3852 ;;		NULL
  3853 ;;		_EUSART_Receive_ISR
  3854 ;;		_EUSART_Transmit_ISR
  3855 ;;		_I2C_MasterIsr
  3856 ;;		_TMR1_ISR
  3857 ;; This function is called by:
  3858 ;;		Interrupt level 1
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862     0004                     _INTERRUPT_InterruptManager:
  3863                           
  3864                           ;incstack = 0
  3865     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3866                           
  3867                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3868     0005  3180               	pagesel	$
  3869     0006                     i1l3668:
  3870                           
  3871                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3872     0006  1F0B               	btfss	11,6	;volatile
  3873     0007  2809               	goto	u143_21
  3874     0008  280A               	goto	u143_20
  3875     0009                     u143_21:
  3876     0009  2853               	goto	i1l543
  3877     000A                     u143_20:
  3878     000A                     i1l3670:
  3879                           
  3880                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3881     000A  0021               	movlb	1	; select bank1
  3882     000B  1E11               	btfss	17,4	;volatile
  3883     000C  280E               	goto	u144_21
  3884     000D  280F               	goto	u144_20
  3885     000E                     u144_21:
  3886     000E  281A               	goto	i1l532
  3887     000F                     u144_20:
  3888     000F                     i1l3672:
  3889     000F  0020               	movlb	0	; select bank0
  3890     0010  1E11               	btfss	17,4	;volatile
  3891     0011  2813               	goto	u145_21
  3892     0012  2814               	goto	u145_20
  3893     0013                     u145_21:
  3894     0013  281A               	goto	i1l532
  3895     0014                     u145_20:
  3896     0014                     i1l3674:
  3897                           
  3898                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  3899     0014  0861               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3900     0015  008A               	movwf	10
  3901     0016  0860               	movf	_EUSART_TxDefaultInterruptHandler,w
  3902     0017  000A               	callw
  3903     0018  3180               	pagesel	$
  3904                           
  3905                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3906     0019  2853               	goto	i1l543
  3907     001A                     i1l532:	
  3908                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  3909                           
  3910     001A  0021               	movlb	1	; select bank1
  3911     001B  1E91               	btfss	17,5	;volatile
  3912     001C  281E               	goto	u146_21
  3913     001D  281F               	goto	u146_20
  3914     001E                     u146_21:
  3915     001E  282A               	goto	i1l534
  3916     001F                     u146_20:
  3917     001F                     i1l3676:
  3918     001F  0020               	movlb	0	; select bank0
  3919     0020  1E91               	btfss	17,5	;volatile
  3920     0021  2823               	goto	u147_21
  3921     0022  2824               	goto	u147_20
  3922     0023                     u147_21:
  3923     0023  282A               	goto	i1l534
  3924     0024                     u147_20:
  3925     0024                     i1l3678:
  3926                           
  3927                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  3928     0024  085F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3929     0025  008A               	movwf	10
  3930     0026  085E               	movf	_EUSART_RxDefaultInterruptHandler,w
  3931     0027  000A               	callw
  3932     0028  3180               	pagesel	$
  3933                           
  3934                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3935     0029  2853               	goto	i1l543
  3936     002A                     i1l534:	
  3937                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  3938                           
  3939     002A  0021               	movlb	1	; select bank1
  3940     002B  1D92               	btfss	18,3	;volatile
  3941     002C  282E               	goto	u148_21
  3942     002D  282F               	goto	u148_20
  3943     002E                     u148_21:
  3944     002E  283A               	goto	i1l536
  3945     002F                     u148_20:
  3946     002F                     i1l3680:
  3947     002F  0020               	movlb	0	; select bank0
  3948     0030  1D92               	btfss	18,3	;volatile
  3949     0031  2833               	goto	u149_21
  3950     0032  2834               	goto	u149_20
  3951     0033                     u149_21:
  3952     0033  283A               	goto	i1l536
  3953     0034                     u149_20:
  3954     0034                     i1l3682:
  3955                           
  3956                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  3957     0034  0844               	movf	_MSSP_InterruptHandler+1,w
  3958     0035  008A               	movwf	10
  3959     0036  0843               	movf	_MSSP_InterruptHandler,w
  3960     0037  000A               	callw
  3961     0038  3180               	pagesel	$
  3962                           
  3963                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3964     0039  2853               	goto	i1l543
  3965     003A                     i1l536:	
  3966                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  3967                           
  3968     003A  0021               	movlb	1	; select bank1
  3969     003B  1D91               	btfss	17,3	;volatile
  3970     003C  283E               	goto	u150_21
  3971     003D  283F               	goto	u150_20
  3972     003E                     u150_21:
  3973     003E  2845               	goto	i1l538
  3974     003F                     u150_20:
  3975     003F                     i1l3684:
  3976     003F  0020               	movlb	0	; select bank0
  3977     0040  1D91               	btfss	17,3	;volatile
  3978     0041  2843               	goto	u151_21
  3979     0042  2844               	goto	u151_20
  3980     0043                     u151_21:
  3981     0043  2845               	goto	i1l538
  3982     0044                     u151_20:
  3983     0044  2834               	goto	i1l3682
  3984     0045                     i1l538:	
  3985                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  3986                           
  3987     0045  0021               	movlb	1	; select bank1
  3988     0046  1C11               	btfss	17,0	;volatile
  3989     0047  2849               	goto	u152_21
  3990     0048  284A               	goto	u152_20
  3991     0049                     u152_21:
  3992     0049  2853               	goto	i1l537
  3993     004A                     u152_20:
  3994     004A                     i1l3688:
  3995     004A  0020               	movlb	0	; select bank0
  3996     004B  1C11               	btfss	17,0	;volatile
  3997     004C  284E               	goto	u153_21
  3998     004D  284F               	goto	u153_20
  3999     004E                     u153_21:
  4000     004E  2853               	goto	i1l537
  4001     004F                     u153_20:
  4002     004F                     i1l3690:
  4003                           
  4004                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
  4005     004F  3183  235B  3180   	fcall	_TMR1_ISR
  4006                           
  4007                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  4008     0052  2853               	goto	i1l543
  4009     0053                     i1l537:
  4010     0053                     i1l543:
  4011     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4012     0054  0009               	retfie
  4013     0055                     __end_of_INTERRUPT_InterruptManager:
  4014                           
  4015                           	psect	text15
  4016     035B                     __ptext15:	
  4017 ;; *************** function _TMR1_ISR *****************
  4018 ;; Defined at:
  4019 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;		None
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4033 ;;      Params:         0       0       0       0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0       0       0       0
  4036 ;;      Totals:         0       0       0       0       0       0       0       0
  4037 ;;Total ram usage:        0 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; Hardware stack levels required when called: 2
  4040 ;; This function calls:
  4041 ;;		_TMR1_CallBack
  4042 ;;		_TMR1_WriteTimer
  4043 ;; This function is called by:
  4044 ;;		_INTERRUPT_InterruptManager
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048     035B                     _TMR1_ISR:	
  4049                           ;psect for function _TMR1_ISR
  4050                           
  4051     035B                     i1l3464:	
  4052                           ;incstack = 0
  4053                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4054                           
  4055                           
  4056                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4057     035B  0020               	movlb	0	; select bank0
  4058     035C  1011               	bcf	17,0	;volatile
  4059     035D                     i1l3466:
  4060                           
  4061                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4062     035D  0842               	movf	_timer1ReloadVal+1,w	;volatile
  4063     035E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4064     035F  0841               	movf	_timer1ReloadVal,w	;volatile
  4065     0360  00F0               	movwf	TMR1_WriteTimer@timerVal
  4066     0361  3182  22F8  3183   	fcall	_TMR1_WriteTimer
  4067                           
  4068                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  4069     0364  3183  2368  3183   	fcall	_TMR1_CallBack
  4070     0367                     i1l742:
  4071     0367  0008               	return
  4072     0368                     __end_of_TMR1_ISR:
  4073                           
  4074                           	psect	text16
  4075     02F8                     __ptext16:	
  4076 ;; *************** function _TMR1_WriteTimer *****************
  4077 ;; Defined at:
  4078 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  timerVal        2    0[COMMON] unsigned short 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4092 ;;      Params:         2       0       0       0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0
  4095 ;;      Totals:         2       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        2 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_TMR1_ISR
  4102 ;;		_TMR1_Reload
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     02F8                     _TMR1_WriteTimer:	
  4107                           ;psect for function _TMR1_WriteTimer
  4108                           
  4109     02F8                     i1l3328:	
  4110                           ;incstack = 0
  4111                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4112                           
  4113                           
  4114                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4115     02F8  0020               	movlb	0	; select bank0
  4116     02F9  1D18               	btfss	24,2	;volatile
  4117     02FA  2AFC               	goto	u106_21
  4118     02FB  2AFD               	goto	u106_20
  4119     02FC                     u106_21:
  4120     02FC  2B04               	goto	i1l3338
  4121     02FD                     u106_20:
  4122     02FD                     i1l3330:
  4123                           
  4124                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4125     02FD  1018               	bcf	24,0	;volatile
  4126     02FE                     i1l3332:
  4127                           
  4128                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4129     02FE  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4130     02FF  0097               	movwf	23	;volatile
  4131     0300                     i1l3334:
  4132                           
  4133                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4134     0300  0870               	movf	TMR1_WriteTimer@timerVal,w
  4135     0301  0096               	movwf	22	;volatile
  4136     0302                     i1l3336:
  4137                           
  4138                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4139     0302  1418               	bsf	24,0	;volatile
  4140                           
  4141                           ;mcc_generated_files/tmr1.c: 133:     }
  4142     0303  2B08               	goto	i1l730
  4143     0304                     i1l3338:
  4144                           
  4145                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4146     0304  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4147     0305  0097               	movwf	23	;volatile
  4148     0306                     i1l3340:
  4149                           
  4150                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4151     0306  0870               	movf	TMR1_WriteTimer@timerVal,w
  4152     0307  0096               	movwf	22	;volatile
  4153     0308                     i1l730:
  4154     0308  0008               	return
  4155     0309                     __end_of_TMR1_WriteTimer:
  4156                           
  4157                           	psect	text17
  4158     0368                     __ptext17:	
  4159 ;; *************** function _TMR1_CallBack *****************
  4160 ;; Defined at:
  4161 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, pclath, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4175 ;;      Params:         0       0       0       0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 1
  4182 ;; This function calls:
  4183 ;;		NULL
  4184 ;;		_TMR1_DefaultInterruptHandler
  4185 ;;		_rtcc_handle
  4186 ;; This function is called by:
  4187 ;;		_TMR1_ISR
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191     0368                     _TMR1_CallBack:	
  4192                           ;psect for function _TMR1_CallBack
  4193                           
  4194     0368                     i1l3342:	
  4195                           ;incstack = 0
  4196                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4197                           
  4198                           
  4199                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  4200     0368  0020               	movlb	0	; select bank0
  4201     0369  0856               	movf	_TMR1_InterruptHandler,w
  4202     036A  0457               	iorwf	_TMR1_InterruptHandler+1,w
  4203     036B  1903               	btfsc	3,2
  4204     036C  2B6E               	goto	u107_21
  4205     036D  2B6F               	goto	u107_20
  4206     036E                     u107_21:
  4207     036E  2B74               	goto	i1l746
  4208     036F                     u107_20:
  4209     036F                     i1l3344:
  4210                           
  4211                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  4212     036F  0857               	movf	_TMR1_InterruptHandler+1,w
  4213     0370  008A               	movwf	10
  4214     0371  0856               	movf	_TMR1_InterruptHandler,w
  4215     0372  000A               	callw
  4216     0373  3183               	pagesel	$
  4217     0374                     i1l746:
  4218     0374  0008               	return
  4219     0375                     __end_of_TMR1_CallBack:
  4220                           
  4221                           	psect	text18
  4222     046E                     __ptext18:	
  4223 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4224 ;; Defined at:
  4225 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		None
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4239 ;;      Params:         0       0       0       0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_TMR1_Initialize
  4249 ;;		_TMR1_CallBack
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253     046E                     _TMR1_DefaultInterruptHandler:	
  4254                           ;psect for function _TMR1_DefaultInterruptHandler
  4255                           
  4256     046E                     i1l752:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4259                           
  4260     046E  0008               	return
  4261     046F                     __end_of_TMR1_DefaultInterruptHandler:
  4262                           
  4263                           	psect	text19
  4264     03A4                     __ptext19:	
  4265 ;; *************** function _rtcc_handle *****************
  4266 ;; Defined at:
  4267 ;;		line 12 in file "tick.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;		None
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4281 ;;      Params:         0       0       0       0       0       0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0
  4284 ;;      Totals:         0       0       0       0       0       0       0       0
  4285 ;;Total ram usage:        0 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_Tick_Init_SES
  4291 ;;		_TMR1_CallBack
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295     03A4                     _rtcc_handle:	
  4296                           ;psect for function _rtcc_handle
  4297                           
  4298     03A4                     i1l3160:	
  4299                           ;incstack = 0
  4300                           ; Regs used in _rtcc_handle: [wreg]
  4301                           
  4302                           
  4303                           ;tick.c: 14:     device_time++;
  4304     03A4  3001               	movlw	1
  4305     03A5  0020               	movlb	0	; select bank0
  4306     03A6  07BD               	addwf	_device_time,f	;volatile
  4307     03A7  3000               	movlw	0
  4308     03A8  3DBE               	addwfc	_device_time+1,f	;volatile
  4309     03A9  3000               	movlw	0
  4310     03AA  3DBF               	addwfc	_device_time+2,f	;volatile
  4311     03AB  3000               	movlw	0
  4312     03AC  3DC0               	addwfc	_device_time+3,f	;volatile
  4313     03AD                     i1l921:
  4314     03AD  0008               	return
  4315     03AE                     __end_of_rtcc_handle:
  4316                           
  4317                           	psect	text20
  4318     0444                     __ptext20:	
  4319 ;; *************** function _I2C_MasterIsr *****************
  4320 ;; Defined at:
  4321 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;		None
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;		None
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4335 ;;      Params:         0       0       0       0       0       0       0       0
  4336 ;;      Locals:         0       0       0       0       0       0       0       0
  4337 ;;      Temps:          0       0       0       0       0       0       0       0
  4338 ;;      Totals:         0       0       0       0       0       0       0       0
  4339 ;;Total ram usage:        0 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 5
  4342 ;; This function calls:
  4343 ;;		_I2C_MasterFsm
  4344 ;; This function is called by:
  4345 ;;		_I2C_Open
  4346 ;;		_INTERRUPT_InterruptManager
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350     0444                     _I2C_MasterIsr:	
  4351                           ;psect for function _I2C_MasterIsr
  4352                           
  4353     0444                     i1l3462:	
  4354                           ;incstack = 0
  4355                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4356                           
  4357                           
  4358                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  4359     0444  3181  21CA  3184   	fcall	_I2C_MasterFsm
  4360     0447                     i1l331:
  4361     0447  0008               	return
  4362     0448                     __end_of_I2C_MasterIsr:
  4363                           
  4364                           	psect	text21
  4365     01CA                     __ptext21:	
  4366 ;; *************** function _I2C_MasterFsm *****************
  4367 ;; Defined at:
  4368 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4382 ;;      Params:         0       0       0       0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0
  4384 ;;      Temps:          2       0       0       0       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 4
  4389 ;; This function calls:
  4390 ;;		_I2C_DO_ADDRESS_NACK
  4391 ;;		_I2C_DO_IDLE
  4392 ;;		_I2C_DO_RCEN
  4393 ;;		_I2C_DO_RESET
  4394 ;;		_I2C_DO_RX
  4395 ;;		_I2C_DO_RX_ACK
  4396 ;;		_I2C_DO_RX_NACK_RESTART
  4397 ;;		_I2C_DO_RX_NACK_STOP
  4398 ;;		_I2C_DO_SEND_ADR_READ
  4399 ;;		_I2C_DO_SEND_ADR_WRITE
  4400 ;;		_I2C_DO_SEND_RESTART
  4401 ;;		_I2C_DO_SEND_RESTART_READ
  4402 ;;		_I2C_DO_SEND_RESTART_WRITE
  4403 ;;		_I2C_DO_SEND_STOP
  4404 ;;		_I2C_DO_TX
  4405 ;;		_I2C_DO_TX_EMPTY
  4406 ;;		_I2C_MasterClearIrq
  4407 ;;		_I2C_MasterIsNack
  4408 ;; This function is called by:
  4409 ;;		_I2C_MasterIsr
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413     01CA                     _I2C_MasterFsm:	
  4414                           ;psect for function _I2C_MasterFsm
  4415                           
  4416     01CA                     i1l3314:	
  4417                           ;incstack = 0
  4418                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4419                           
  4420                           
  4421                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  4422     01CA  3184  2458  3181   	fcall	_I2C_MasterClearIrq
  4423     01CD                     i1l3316:
  4424                           
  4425                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4426     01CD  0020               	movlb	0	; select bank0
  4427     01CE  1C3C               	btfss	_I2C_Status+28,0
  4428     01CF  29D1               	goto	u104_21
  4429     01D0  29D2               	goto	u104_20
  4430     01D1                     u104_21:
  4431     01D1  29DD               	goto	i1l3322
  4432     01D2                     u104_20:
  4433     01D2                     i1l3318:
  4434     01D2  3184  2408  3181   	fcall	_I2C_MasterIsNack
  4435     01D5  3A00               	xorlw	0
  4436     01D6  1903               	skipnz
  4437     01D7  29D9               	goto	u105_21
  4438     01D8  29DA               	goto	u105_20
  4439     01D9                     u105_21:
  4440     01D9  29DD               	goto	i1l3322
  4441     01DA                     u105_20:
  4442     01DA                     i1l3320:
  4443                           
  4444                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4445     01DA  300F               	movlw	15
  4446     01DB  0020               	movlb	0	; select bank0
  4447     01DC  00BA               	movwf	_I2C_Status+26
  4448     01DD                     i1l3322:
  4449                           
  4450                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4451     01DD  0020               	movlb	0	; select bank0
  4452     01DE  083A               	movf	_I2C_Status+26,w
  4453     01DF  00FA               	movwf	??_I2C_MasterFsm
  4454     01E0  01FB               	clrf	??_I2C_MasterFsm+1
  4455     01E1  35FA               	lslf	??_I2C_MasterFsm,f
  4456     01E2  0DFB               	rlf	??_I2C_MasterFsm+1,f
  4457     01E3  3060               	movlw	low _i2c_fsmStateTable
  4458     01E4  077A               	addwf	??_I2C_MasterFsm,w
  4459     01E5  0084               	movwf	4
  4460     01E6  3002               	movlw	high _i2c_fsmStateTable
  4461     01E7  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  4462     01E8  3880               	iorlw	128
  4463     01E9  0085               	movwf	5
  4464     01EA  3F01               	moviw [1]fsr0
  4465     01EB  008A               	movwf	10
  4466     01EC  3F00               	moviw [0]fsr0
  4467     01ED  000A               	callw
  4468     01EE  3181               	pagesel	$
  4469     01EF  0020               	movlb	0	; select bank0
  4470     01F0  00BA               	movwf	_I2C_Status+26
  4471     01F1                     i1l335:
  4472     01F1  0008               	return
  4473     01F2                     __end_of_I2C_MasterFsm:
  4474                           
  4475                           	psect	text22
  4476     0458                     __ptext22:	
  4477 ;; *************** function _I2C_MasterClearIrq *****************
  4478 ;; Defined at:
  4479 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		None
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4493 ;;      Params:         0       0       0       0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_I2C_MasterFsm
  4503 ;;		_I2C_Open
  4504 ;;		_I2C_Close
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508     0458                     _I2C_MasterClearIrq:	
  4509                           ;psect for function _I2C_MasterClearIrq
  4510                           
  4511     0458                     i1l2874:	
  4512                           ;incstack = 0
  4513                           ; Regs used in _I2C_MasterClearIrq: []
  4514                           
  4515                           
  4516                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  4517     0458  0020               	movlb	0	; select bank0
  4518     0459  1191               	bcf	17,3	;volatile
  4519     045A                     i1l498:
  4520     045A  0008               	return
  4521     045B                     __end_of_I2C_MasterClearIrq:
  4522                           
  4523                           	psect	text23
  4524     01F2                     __ptext23:	
  4525 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4526 ;; Defined at:
  4527 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      enum E3112
  4534 ;; Registers used:
  4535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4541 ;;      Params:         0       0       0       0       0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0       0       0       0
  4544 ;;      Totals:         2       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        2 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 3
  4548 ;; This function calls:
  4549 ;;		NULL
  4550 ;;		_I2C_CallbackReturnReset
  4551 ;;		_I2C_CallbackReturnStop
  4552 ;;		_I2C_DO_SEND_RESTART
  4553 ;;		_I2C_DO_SEND_STOP
  4554 ;;		_rd1RegCompleteHandler
  4555 ;;		_rd2RegCompleteHandler
  4556 ;;		_rdBlkRegCompleteHandler
  4557 ;;		_wr1RegCompleteHandler
  4558 ;;		_wr2RegCompleteHandler
  4559 ;; This function is called by:
  4560 ;;		_I2C_MasterFsm
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564     01F2                     _I2C_DO_ADDRESS_NACK:	
  4565                           ;psect for function _I2C_DO_ADDRESS_NACK
  4566                           
  4567     01F2                     i1l3046:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4570                           
  4571                           
  4572                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  4573     01F2  0020               	movlb	0	; select bank0
  4574     01F3  103C               	bcf	_I2C_Status+28,0
  4575     01F4                     i1l3048:
  4576                           
  4577                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  4578     01F4  3002               	movlw	2
  4579     01F5  00BB               	movwf	_I2C_Status+27
  4580                           
  4581                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4582     01F6  29FF               	goto	i1l3060
  4583     01F7                     i1l3050:
  4584                           
  4585                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  4586     01F7  3184  2427  3181   	fcall	_I2C_DO_SEND_RESTART
  4587     01FA  2A19               	goto	i1l426
  4588     01FB                     i1l3054:
  4589                           
  4590                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  4591     01FB  3184  2422  3181   	fcall	_I2C_DO_SEND_STOP
  4592     01FE  2A19               	goto	i1l426
  4593     01FF                     i1l3060:
  4594     01FF  082E               	movf	low ((_I2C_Status| 0+14)),w
  4595     0200  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4596     0201  3004               	movlw	4
  4597     0202  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4598     0203  0086               	movwf	6
  4599     0204  0187               	clrf	7
  4600     0205  3F41               	moviw [1]fsr1
  4601     0206  008A               	movwf	10
  4602     0207  3F40               	moviw [0]fsr1
  4603     0208  000A               	callw
  4604     0209  3181               	pagesel	$
  4605     020A  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
  4606     020B  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
  4607                           
  4608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4609                           ; Switch size 1, requested type "simple"
  4610                           ; Number of cases is 1, Range of values is 0 to 0
  4611                           ; switch strategies available:
  4612                           ; Name         Instructions Cycles
  4613                           ; simple_byte            4     3 (average)
  4614                           ; direct_byte            8     6 (fixed)
  4615                           ; jumptable            260     6 (fixed)
  4616                           ;	Chosen strategy is simple_byte
  4617     020C  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  4618     020D  3A00               	xorlw	0	; case 0
  4619     020E  1903               	skipnz
  4620     020F  2A11               	goto	i1l3798
  4621     0210  29FB               	goto	i1l3054
  4622     0211                     i1l3798:
  4623                           
  4624                           ; Switch size 1, requested type "simple"
  4625                           ; Number of cases is 2, Range of values is 2 to 3
  4626                           ; switch strategies available:
  4627                           ; Name         Instructions Cycles
  4628                           ; simple_byte            7     4 (average)
  4629                           ; direct_byte           13     9 (fixed)
  4630                           ; jumptable            263     9 (fixed)
  4631                           ;	Chosen strategy is simple_byte
  4632     0211  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
  4633     0212  3A02               	xorlw	2	; case 2
  4634     0213  1903               	skipnz
  4635     0214  29F7               	goto	i1l3050
  4636     0215  3A01               	xorlw	1	; case 3
  4637     0216  1903               	skipnz
  4638     0217  29F7               	goto	i1l3050
  4639     0218  29FB               	goto	i1l3054
  4640     0219                     i1l426:
  4641     0219  0008               	return
  4642     021A                     __end_of_I2C_DO_ADDRESS_NACK:
  4643                           
  4644                           	psect	text24
  4645     040E                     __ptext24:	
  4646 ;; *************** function _I2C_DO_RESET *****************
  4647 ;; Defined at:
  4648 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      enum E3112
  4655 ;; Registers used:
  4656 ;;		wreg, status,2
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4662 ;;      Params:         0       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0       0
  4665 ;;      Totals:         0       0       0       0       0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_I2C_MasterFsm
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675     040E                     _I2C_DO_RESET:	
  4676                           ;psect for function _I2C_DO_RESET
  4677                           
  4678     040E                     i1l3038:	
  4679                           ;incstack = 0
  4680                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4681                           
  4682                           
  4683                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  4684     040E  0020               	movlb	0	; select bank0
  4685     040F  10BC               	bcf	_I2C_Status+28,1
  4686     0410                     i1l3040:
  4687                           
  4688                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  4689     0410  01BB               	clrf	_I2C_Status+27
  4690     0411                     i1l3042:
  4691                           
  4692                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  4693     0411  300E               	movlw	14
  4694     0412                     i1l420:
  4695     0412  0008               	return
  4696     0413                     __end_of_I2C_DO_RESET:
  4697                           
  4698                           	psect	text25
  4699     0413                     __ptext25:	
  4700 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4701 ;; Defined at:
  4702 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      enum E3112
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4716 ;;      Params:         0       0       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used: 1
  4722 ;; Hardware stack levels required when called: 1
  4723 ;; This function calls:
  4724 ;;		_I2C_MasterSendNack
  4725 ;; This function is called by:
  4726 ;;		_I2C_DO_RX
  4727 ;;		_I2C_MasterFsm
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731     0413                     _I2C_DO_RX_NACK_RESTART:	
  4732                           ;psect for function _I2C_DO_RX_NACK_RESTART
  4733                           
  4734     0413                     i1l2782:	
  4735                           ;incstack = 0
  4736                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4737                           
  4738                           
  4739                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  4740     0413  3184  244C  3184   	fcall	_I2C_MasterSendNack
  4741     0416                     i1l2784:
  4742                           
  4743                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  4744     0416  3009               	movlw	9
  4745     0417                     i1l417:
  4746     0417  0008               	return
  4747     0418                     __end_of_I2C_DO_RX_NACK_RESTART:
  4748                           
  4749                           	psect	text26
  4750     0418                     __ptext26:	
  4751 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4752 ;; Defined at:
  4753 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      enum E3112
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4767 ;;      Params:         0       0       0       0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0
  4770 ;;      Totals:         0       0       0       0       0       0       0       0
  4771 ;;Total ram usage:        0 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		_I2C_MasterSendNack
  4776 ;; This function is called by:
  4777 ;;		_I2C_DO_RX
  4778 ;;		_I2C_MasterFsm
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782     0418                     _I2C_DO_RX_NACK_STOP:	
  4783                           ;psect for function _I2C_DO_RX_NACK_STOP
  4784                           
  4785     0418                     i1l2788:	
  4786                           ;incstack = 0
  4787                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  4788                           
  4789                           
  4790                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  4791     0418  3184  244C  3184   	fcall	_I2C_MasterSendNack
  4792     041B                     i1l2790:
  4793                           
  4794                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  4795     041B  300A               	movlw	10
  4796     041C                     i1l414:
  4797     041C  0008               	return
  4798     041D                     __end_of_I2C_DO_RX_NACK_STOP:
  4799                           
  4800                           	psect	text27
  4801     041D                     __ptext27:	
  4802 ;; *************** function _I2C_DO_RX_ACK *****************
  4803 ;; Defined at:
  4804 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      enum E3112
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4818 ;;      Params:         0       0       0       0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 1
  4825 ;; This function calls:
  4826 ;;		_I2C_MasterSendAck
  4827 ;; This function is called by:
  4828 ;;		_I2C_MasterFsm
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832     041D                     _I2C_DO_RX_ACK:	
  4833                           ;psect for function _I2C_DO_RX_ACK
  4834                           
  4835     041D                     i1l3032:	
  4836                           ;incstack = 0
  4837                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  4838                           
  4839                           
  4840                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  4841     041D  3184  2448  3184   	fcall	_I2C_MasterSendAck
  4842     0420                     i1l3034:
  4843                           
  4844                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  4845     0420  3005               	movlw	5
  4846     0421                     i1l411:
  4847     0421  0008               	return
  4848     0422                     __end_of_I2C_DO_RX_ACK:
  4849                           
  4850                           	psect	text28
  4851     0422                     __ptext28:	
  4852 ;; *************** function _I2C_DO_SEND_STOP *****************
  4853 ;; Defined at:
  4854 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      enum E3112
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4868 ;;      Params:         0       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 1
  4875 ;; This function calls:
  4876 ;;		_I2C_MasterStop
  4877 ;; This function is called by:
  4878 ;;		_I2C_DO_TX
  4879 ;;		_I2C_DO_TX_EMPTY
  4880 ;;		_I2C_DO_ADDRESS_NACK
  4881 ;;		_I2C_MasterFsm
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885     0422                     _I2C_DO_SEND_STOP:	
  4886                           ;psect for function _I2C_DO_SEND_STOP
  4887                           
  4888     0422                     i1l2770:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  4891                           
  4892                           
  4893                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  4894     0422  3184  2464  3184   	fcall	_I2C_MasterStop
  4895     0425                     i1l2772:
  4896                           
  4897                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  4898     0425  3000               	movlw	0
  4899     0426                     i1l408:
  4900     0426  0008               	return
  4901     0427                     __end_of_I2C_DO_SEND_STOP:
  4902                           
  4903                           	psect	text29
  4904     0427                     __ptext29:	
  4905 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4906 ;; Defined at:
  4907 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      enum E3112
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4921 ;;      Params:         0       0       0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 1
  4928 ;; This function calls:
  4929 ;;		_I2C_MasterEnableRestart
  4930 ;; This function is called by:
  4931 ;;		_I2C_DO_TX_EMPTY
  4932 ;;		_I2C_DO_ADDRESS_NACK
  4933 ;;		_I2C_MasterFsm
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937     0427                     _I2C_DO_SEND_RESTART:	
  4938                           ;psect for function _I2C_DO_SEND_RESTART
  4939                           
  4940     0427                     i1l2796:	
  4941                           ;incstack = 0
  4942                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4943                           
  4944                           
  4945                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  4946     0427  3184  2467  3184   	fcall	_I2C_MasterEnableRestart
  4947     042A                     i1l2798:
  4948                           
  4949                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  4950     042A  3001               	movlw	1
  4951     042B                     i1l405:
  4952     042B  0008               	return
  4953     042C                     __end_of_I2C_DO_SEND_RESTART:
  4954                           
  4955                           	psect	text30
  4956     042C                     __ptext30:	
  4957 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4958 ;; Defined at:
  4959 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      enum E3112
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4973 ;;      Params:         0       0       0       0       0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used: 1
  4979 ;; Hardware stack levels required when called: 1
  4980 ;; This function calls:
  4981 ;;		_I2C_MasterEnableRestart
  4982 ;; This function is called by:
  4983 ;;		_I2C_DO_TX
  4984 ;;		_I2C_MasterFsm
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988     042C                     _I2C_DO_SEND_RESTART_WRITE:	
  4989                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4990                           
  4991     042C                     i1l2764:	
  4992                           ;incstack = 0
  4993                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4994                           
  4995                           
  4996                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  4997     042C  3184  2467  3184   	fcall	_I2C_MasterEnableRestart
  4998     042F                     i1l2766:
  4999                           
  5000                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5001     042F  3002               	movlw	2
  5002     0430                     i1l402:
  5003     0430  0008               	return
  5004     0431                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5005                           
  5006                           	psect	text31
  5007     0431                     __ptext31:	
  5008 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5009 ;; Defined at:
  5010 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      enum E3112
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0, pclath, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5024 ;;      Params:         0       0       0       0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0
  5027 ;;      Totals:         0       0       0       0       0       0       0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used: 1
  5030 ;; Hardware stack levels required when called: 1
  5031 ;; This function calls:
  5032 ;;		_I2C_MasterEnableRestart
  5033 ;; This function is called by:
  5034 ;;		_I2C_DO_TX
  5035 ;;		_I2C_MasterFsm
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039     0431                     _I2C_DO_SEND_RESTART_READ:	
  5040                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5041                           
  5042     0431                     i1l2758:	
  5043                           ;incstack = 0
  5044                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5045                           
  5046                           
  5047                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5048     0431  3184  2467  3184   	fcall	_I2C_MasterEnableRestart
  5049     0434                     i1l2760:
  5050                           
  5051                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5052     0434  3001               	movlw	1
  5053     0435                     i1l399:
  5054     0435  0008               	return
  5055     0436                     __end_of_I2C_DO_SEND_RESTART_READ:
  5056                           
  5057                           	psect	text32
  5058     03D7                     __ptext32:	
  5059 ;; *************** function _I2C_DO_RCEN *****************
  5060 ;; Defined at:
  5061 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      enum E3112
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0, pclath, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5075 ;;      Params:         0       0       0       0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0
  5078 ;;      Totals:         0       0       0       0       0       0       0       0
  5079 ;;Total ram usage:        0 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 1
  5082 ;; This function calls:
  5083 ;;		_I2C_MasterStartRx
  5084 ;; This function is called by:
  5085 ;;		_I2C_MasterFsm
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089     03D7                     _I2C_DO_RCEN:	
  5090                           ;psect for function _I2C_DO_RCEN
  5091                           
  5092     03D7                     i1l3000:	
  5093                           ;incstack = 0
  5094                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5095                           
  5096                           
  5097                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5098     03D7  0020               	movlb	0	; select bank0
  5099     03D8  103C               	bcf	_I2C_Status+28,0
  5100     03D9                     i1l3002:
  5101                           
  5102                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5103     03D9  3184  2461  3183   	fcall	_I2C_MasterStartRx
  5104     03DC                     i1l3004:
  5105                           
  5106                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5107     03DC  3004               	movlw	4
  5108     03DD                     i1l375:
  5109     03DD  0008               	return
  5110     03DE                     __end_of_I2C_DO_RCEN:
  5111                           
  5112                           	psect	text33
  5113     00DF                     __ptext33:	
  5114 ;; *************** function _I2C_DO_RX *****************
  5115 ;; Defined at:
  5116 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      enum E3112
  5123 ;; Registers used:
  5124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5130 ;;      Params:         0       0       0       0       0       0       0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0
  5132 ;;      Temps:          2       0       0       0       0       0       0       0
  5133 ;;      Totals:         2       0       0       0       0       0       0       0
  5134 ;;Total ram usage:        2 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 3
  5137 ;; This function calls:
  5138 ;;		NULL
  5139 ;;		_I2C_CallbackReturnReset
  5140 ;;		_I2C_CallbackReturnStop
  5141 ;;		_I2C_DO_RX_NACK_RESTART
  5142 ;;		_I2C_DO_RX_NACK_STOP
  5143 ;;		_I2C_MasterGetRxData
  5144 ;;		_I2C_MasterSendAck
  5145 ;;		_rd1RegCompleteHandler
  5146 ;;		_rd2RegCompleteHandler
  5147 ;;		_rdBlkRegCompleteHandler
  5148 ;;		_wr1RegCompleteHandler
  5149 ;;		_wr2RegCompleteHandler
  5150 ;; This function is called by:
  5151 ;;		_I2C_MasterFsm
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155     00DF                     _I2C_DO_RX:	
  5156                           ;psect for function _I2C_DO_RX
  5157                           
  5158     00DF                     i1l2970:	
  5159                           ;incstack = 0
  5160                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5161                           
  5162                           
  5163                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5164     00DF  0020               	movlb	0	; select bank0
  5165     00E0  0837               	movf	low ((_I2C_Status| 0+23)),w
  5166     00E1  0086               	movwf	6
  5167     00E2  0187               	clrf	7
  5168     00E3  3184  245E  3180   	fcall	_I2C_MasterGetRxData
  5169     00E6  0081               	movwf	1
  5170     00E7                     i1l2972:
  5171     00E7  3001               	movlw	1
  5172     00E8  00F8               	movwf	??_I2C_DO_RX
  5173     00E9  0878               	movf	??_I2C_DO_RX,w
  5174     00EA  0020               	movlb	0	; select bank0
  5175     00EB  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  5176     00EC                     i1l2974:
  5177                           
  5178                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5179     00EC  3001               	movlw	1
  5180     00ED  02B8               	subwf	_I2C_Status+24,f
  5181     00EE  3000               	movlw	0
  5182     00EF  3BB9               	subwfb	_I2C_Status+25,f
  5183     00F0  0838               	movf	_I2C_Status+24,w
  5184     00F1  0439               	iorwf	_I2C_Status+25,w
  5185     00F2  1903               	btfsc	3,2
  5186     00F3  28F5               	goto	u92_21
  5187     00F4  28F6               	goto	u92_20
  5188     00F5                     u92_21:
  5189     00F5  28FB               	goto	i1l363
  5190     00F6                     u92_20:
  5191     00F6                     i1l2976:
  5192                           
  5193                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  5194     00F6  3184  2448  3180   	fcall	_I2C_MasterSendAck
  5195     00F9                     i1l2978:
  5196                           
  5197                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  5198     00F9  3005               	movlw	5
  5199     00FA  2921               	goto	i1l364
  5200     00FB                     i1l363:	
  5201                           ;mcc_generated_files/i2c_master.c: 388:     else
  5202                           
  5203                           
  5204                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  5205     00FB  15BC               	bsf	_I2C_Status+28,3
  5206                           
  5207                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5208     00FC  2905               	goto	i1l2994
  5209     00FD                     i1l2984:
  5210                           
  5211                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  5212     00FD  3184  2413  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  5213     0100  2921               	goto	i1l364
  5214     0101                     i1l2988:
  5215                           
  5216                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  5217     0101  3184  2418  3180   	fcall	_I2C_DO_RX_NACK_STOP
  5218     0104  2921               	goto	i1l364
  5219     0105                     i1l2994:
  5220     0105  082C               	movf	low ((_I2C_Status| 0+12)),w
  5221     0106  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5222     0107  0821               	movf	_I2C_Status+1,w
  5223     0108  008A               	movwf	10
  5224     0109  0820               	movf	_I2C_Status,w
  5225     010A  000A               	callw
  5226     010B  3180               	pagesel	$
  5227     010C  00F8               	movwf	??_I2C_DO_RX
  5228     010D  01F9               	clrf	??_I2C_DO_RX+1
  5229                           
  5230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5231                           ; Switch size 1, requested type "simple"
  5232                           ; Number of cases is 1, Range of values is 0 to 0
  5233                           ; switch strategies available:
  5234                           ; Name         Instructions Cycles
  5235                           ; simple_byte            4     3 (average)
  5236                           ; direct_byte            8     6 (fixed)
  5237                           ; jumptable            260     6 (fixed)
  5238                           ;	Chosen strategy is simple_byte
  5239     010E  0879               	movf	??_I2C_DO_RX+1,w
  5240     010F  3A00               	xorlw	0	; case 0
  5241     0110  1903               	skipnz
  5242     0111  2913               	goto	i1l3800
  5243     0112  2901               	goto	i1l2988
  5244     0113                     i1l3800:
  5245                           
  5246                           ; Switch size 1, requested type "simple"
  5247                           ; Number of cases is 4, Range of values is 1 to 4
  5248                           ; switch strategies available:
  5249                           ; Name         Instructions Cycles
  5250                           ; simple_byte           13     7 (average)
  5251                           ; direct_byte           17     9 (fixed)
  5252                           ; jumptable            263     9 (fixed)
  5253                           ;	Chosen strategy is simple_byte
  5254     0113  0878               	movf	??_I2C_DO_RX,w
  5255     0114  3A01               	xorlw	1	; case 1
  5256     0115  1903               	skipnz
  5257     0116  2901               	goto	i1l2988
  5258     0117  3A03               	xorlw	3	; case 2
  5259     0118  1903               	skipnz
  5260     0119  28FD               	goto	i1l2984
  5261     011A  3A01               	xorlw	1	; case 3
  5262     011B  1903               	skipnz
  5263     011C  28FD               	goto	i1l2984
  5264     011D  3A07               	xorlw	7	; case 4
  5265     011E  1903               	skipnz
  5266     011F  2901               	goto	i1l2988
  5267     0120  2901               	goto	i1l2988
  5268     0121                     i1l364:
  5269     0121  0008               	return
  5270     0122                     __end_of_I2C_DO_RX:
  5271                           
  5272                           	psect	text34
  5273     008C                     __ptext34:	
  5274 ;; *************** function _I2C_DO_TX *****************
  5275 ;; Defined at:
  5276 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      enum E3112
  5283 ;; Registers used:
  5284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5290 ;;      Params:         0       0       0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0
  5292 ;;      Temps:          2       0       0       0       0       0       0       0
  5293 ;;      Totals:         2       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        2 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; Hardware stack levels required when called: 3
  5297 ;; This function calls:
  5298 ;;		NULL
  5299 ;;		_I2C_CallbackReturnReset
  5300 ;;		_I2C_CallbackReturnStop
  5301 ;;		_I2C_DO_SEND_RESTART_READ
  5302 ;;		_I2C_DO_SEND_RESTART_WRITE
  5303 ;;		_I2C_DO_SEND_STOP
  5304 ;;		_I2C_MasterIsNack
  5305 ;;		_I2C_MasterSendTxData
  5306 ;;		_rd1RegCompleteHandler
  5307 ;;		_rd2RegCompleteHandler
  5308 ;;		_rdBlkRegCompleteHandler
  5309 ;;		_wr1RegCompleteHandler
  5310 ;;		_wr2RegCompleteHandler
  5311 ;; This function is called by:
  5312 ;;		_I2C_MasterFsm
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316     008C                     _I2C_DO_TX:	
  5317                           ;psect for function _I2C_DO_TX
  5318                           
  5319     008C                     i1l2936:	
  5320                           ;incstack = 0
  5321                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5322                           
  5323                           
  5324                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  5325     008C  3184  2408  3180   	fcall	_I2C_MasterIsNack
  5326     008F  3A00               	xorlw	0
  5327     0090  1903               	skipnz
  5328     0091  2893               	goto	u90_21
  5329     0092  2894               	goto	u90_20
  5330     0093                     u90_21:
  5331     0093  28C2               	goto	i1l347
  5332     0094                     u90_20:
  5333     0094  28A1               	goto	i1l2954
  5334     0095                     i1l2940:
  5335                           
  5336                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5337     0095  3184  2431  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  5338     0098  28DE               	goto	i1l350
  5339     0099                     i1l2944:
  5340                           
  5341                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5342     0099  3184  242C  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  5343     009C  28DE               	goto	i1l350
  5344     009D                     i1l2948:
  5345                           
  5346                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  5347     009D  3184  2422  3180   	fcall	_I2C_DO_SEND_STOP
  5348     00A0  28DE               	goto	i1l350
  5349     00A1                     i1l2954:
  5350     00A1  0020               	movlb	0	; select bank0
  5351     00A2  082F               	movf	low ((_I2C_Status| 0+15)),w
  5352     00A3  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5353     00A4  3006               	movlw	6
  5354     00A5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5355     00A6  0086               	movwf	6
  5356     00A7  0187               	clrf	7
  5357     00A8  3F41               	moviw [1]fsr1
  5358     00A9  008A               	movwf	10
  5359     00AA  3F40               	moviw [0]fsr1
  5360     00AB  000A               	callw
  5361     00AC  3180               	pagesel	$
  5362     00AD  00F8               	movwf	??_I2C_DO_TX
  5363     00AE  01F9               	clrf	??_I2C_DO_TX+1
  5364                           
  5365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5366                           ; Switch size 1, requested type "simple"
  5367                           ; Number of cases is 1, Range of values is 0 to 0
  5368                           ; switch strategies available:
  5369                           ; Name         Instructions Cycles
  5370                           ; simple_byte            4     3 (average)
  5371                           ; direct_byte            8     6 (fixed)
  5372                           ; jumptable            260     6 (fixed)
  5373                           ;	Chosen strategy is simple_byte
  5374     00AF  0879               	movf	??_I2C_DO_TX+1,w
  5375     00B0  3A00               	xorlw	0	; case 0
  5376     00B1  1903               	skipnz
  5377     00B2  28B4               	goto	i1l3802
  5378     00B3  289D               	goto	i1l2948
  5379     00B4                     i1l3802:
  5380                           
  5381                           ; Switch size 1, requested type "simple"
  5382                           ; Number of cases is 4, Range of values is 1 to 4
  5383                           ; switch strategies available:
  5384                           ; Name         Instructions Cycles
  5385                           ; simple_byte           13     7 (average)
  5386                           ; direct_byte           17     9 (fixed)
  5387                           ; jumptable            263     9 (fixed)
  5388                           ;	Chosen strategy is simple_byte
  5389     00B4  0878               	movf	??_I2C_DO_TX,w
  5390     00B5  3A01               	xorlw	1	; case 1
  5391     00B6  1903               	skipnz
  5392     00B7  289D               	goto	i1l2948
  5393     00B8  3A03               	xorlw	3	; case 2
  5394     00B9  1903               	skipnz
  5395     00BA  2895               	goto	i1l2940
  5396     00BB  3A01               	xorlw	1	; case 3
  5397     00BC  1903               	skipnz
  5398     00BD  2899               	goto	i1l2944
  5399     00BE  3A07               	xorlw	7	; case 4
  5400     00BF  1903               	skipnz
  5401     00C0  289D               	goto	i1l2948
  5402     00C1  289D               	goto	i1l2948
  5403     00C2                     i1l347:	
  5404                           ;mcc_generated_files/i2c_master.c: 372:     else
  5405                           
  5406                           
  5407                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  5408     00C2  0020               	movlb	0	; select bank0
  5409     00C3  103C               	bcf	_I2C_Status+28,0
  5410     00C4                     i1l2956:
  5411                           
  5412                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5413     00C4  3017               	movlw	23
  5414     00C5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5415     00C6  0086               	movwf	6
  5416     00C7  0187               	clrf	7
  5417     00C8  3F40               	moviw [0]fsr1
  5418     00C9  0084               	movwf	4
  5419     00CA  0185               	clrf	5
  5420     00CB  0A81               	incf	1,f
  5421     00CC  0800               	movf	0,w
  5422     00CD  3184  243B  3180   	fcall	_I2C_MasterSendTxData
  5423     00D0                     i1l2958:
  5424                           
  5425                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5426     00D0  3001               	movlw	1
  5427     00D1  0020               	movlb	0	; select bank0
  5428     00D2  02B8               	subwf	_I2C_Status+24,f
  5429     00D3  3000               	movlw	0
  5430     00D4  3BB9               	subwfb	_I2C_Status+25,f
  5431     00D5  0838               	movf	_I2C_Status+24,w
  5432     00D6  0439               	iorwf	_I2C_Status+25,w
  5433     00D7  1D03               	btfss	3,2
  5434     00D8  28DA               	goto	u91_21
  5435     00D9  28DB               	goto	u91_20
  5436     00DA                     u91_21:
  5437     00DA  28DD               	goto	i1l2962
  5438     00DB                     u91_20:
  5439     00DB                     i1l2960:
  5440     00DB  3006               	movlw	6
  5441     00DC  28DE               	goto	i1l350
  5442     00DD                     i1l2962:
  5443     00DD  3003               	movlw	3
  5444     00DE                     i1l350:
  5445     00DE  0008               	return
  5446     00DF                     __end_of_I2C_DO_TX:
  5447                           
  5448                           	psect	text35
  5449     03C8                     __ptext35:	
  5450 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5451 ;; Defined at:
  5452 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      enum E3112
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5466 ;;      Params:         0       0       0       0       0       0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 1
  5473 ;; This function calls:
  5474 ;;		_I2C_MasterSendTxData
  5475 ;; This function is called by:
  5476 ;;		_I2C_MasterFsm
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480     03C8                     _I2C_DO_SEND_ADR_WRITE:	
  5481                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  5482                           
  5483     03C8                     i1l2928:	
  5484                           ;incstack = 0
  5485                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5486                           
  5487                           
  5488                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  5489     03C8  0020               	movlb	0	; select bank0
  5490     03C9  143C               	bsf	_I2C_Status+28,0
  5491     03CA                     i1l2930:
  5492                           
  5493                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5494     03CA  3536               	lslf	_I2C_Status+22,w
  5495     03CB  3184  243B  3183   	fcall	_I2C_MasterSendTxData
  5496     03CE                     i1l2932:
  5497                           
  5498                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  5499     03CE  3003               	movlw	3
  5500     03CF                     i1l344:
  5501     03CF  0008               	return
  5502     03D0                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5503                           
  5504                           	psect	text36
  5505     03B7                     __ptext36:	
  5506 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5507 ;; Defined at:
  5508 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      enum E3112
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5522 ;;      Params:         0       0       0       0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0
  5525 ;;      Totals:         0       0       0       0       0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 1
  5529 ;; This function calls:
  5530 ;;		_I2C_MasterSendTxData
  5531 ;; This function is called by:
  5532 ;;		_I2C_MasterFsm
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536     03B7                     _I2C_DO_SEND_ADR_READ:	
  5537                           ;psect for function _I2C_DO_SEND_ADR_READ
  5538                           
  5539     03B7                     i1l2920:	
  5540                           ;incstack = 0
  5541                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  5542                           
  5543                           
  5544                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  5545     03B7  0020               	movlb	0	; select bank0
  5546     03B8  143C               	bsf	_I2C_Status+28,0
  5547     03B9                     i1l2922:
  5548                           
  5549                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5550     03B9  1403               	setc
  5551     03BA  0D36               	rlf	_I2C_Status+22,w
  5552     03BB  3184  243B  3183   	fcall	_I2C_MasterSendTxData
  5553     03BE                     i1l2924:
  5554                           
  5555                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  5556     03BE  3005               	movlw	5
  5557     03BF                     i1l341:
  5558     03BF  0008               	return
  5559     03C0                     __end_of_I2C_DO_SEND_ADR_READ:
  5560                           
  5561                           	psect	text37
  5562     0436                     __ptext37:	
  5563 ;; *************** function _I2C_DO_IDLE *****************
  5564 ;; Defined at:
  5565 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      enum E3112
  5572 ;; Registers used:
  5573 ;;		wreg, status,2
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5579 ;;      Params:         0       0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used: 1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_I2C_MasterFsm
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592     0436                     _I2C_DO_IDLE:	
  5593                           ;psect for function _I2C_DO_IDLE
  5594                           
  5595     0436                     i1l2912:	
  5596                           ;incstack = 0
  5597                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  5598                           
  5599                           
  5600                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  5601     0436  0020               	movlb	0	; select bank0
  5602     0437  10BC               	bcf	_I2C_Status+28,1
  5603     0438                     i1l2914:
  5604                           
  5605                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  5606     0438  01BB               	clrf	_I2C_Status+27
  5607     0439                     i1l2916:
  5608                           
  5609                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  5610     0439  300E               	movlw	14
  5611     043A                     i1l338:
  5612     043A  0008               	return
  5613     043B                     __end_of_I2C_DO_IDLE:
  5614                           
  5615                           	psect	text38
  5616     019D                     __ptext38:	
  5617 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5618 ;; Defined at:
  5619 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      enum E3112
  5626 ;; Registers used:
  5627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5633 ;;      Params:         0       0       0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0
  5635 ;;      Temps:          2       0       0       0       0       0       0       0
  5636 ;;      Totals:         2       0       0       0       0       0       0       0
  5637 ;;Total ram usage:        2 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 3
  5640 ;; This function calls:
  5641 ;;		NULL
  5642 ;;		_I2C_CallbackReturnReset
  5643 ;;		_I2C_CallbackReturnStop
  5644 ;;		_I2C_DO_SEND_RESTART
  5645 ;;		_I2C_DO_SEND_STOP
  5646 ;;		_I2C_MasterSetIrq
  5647 ;;		_rd1RegCompleteHandler
  5648 ;;		_rd2RegCompleteHandler
  5649 ;;		_rdBlkRegCompleteHandler
  5650 ;;		_wr1RegCompleteHandler
  5651 ;;		_wr2RegCompleteHandler
  5652 ;; This function is called by:
  5653 ;;		_I2C_MasterFsm
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657     019D                     _I2C_DO_TX_EMPTY:	
  5658                           ;psect for function _I2C_DO_TX_EMPTY
  5659                           
  5660     019D                     i1l3008:	
  5661                           ;incstack = 0
  5662                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5663                           
  5664                           
  5665                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  5666     019D  0020               	movlb	0	; select bank0
  5667     019E  15BC               	bsf	_I2C_Status+28,3
  5668                           
  5669                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5670     019F  29AD               	goto	i1l3026
  5671     01A0                     i1l3010:
  5672                           
  5673                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  5674     01A0  3184  2427  3181   	fcall	_I2C_DO_SEND_RESTART
  5675     01A3  29C9               	goto	i1l381
  5676     01A4                     i1l3014:
  5677                           
  5678                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  5679     01A4  3184  245B  3181   	fcall	_I2C_MasterSetIrq
  5680     01A7                     i1l3016:
  5681                           
  5682                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  5683     01A7  3003               	movlw	3
  5684     01A8  29C9               	goto	i1l381
  5685     01A9                     i1l3020:
  5686                           
  5687                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  5688     01A9  3184  2422  3181   	fcall	_I2C_DO_SEND_STOP
  5689     01AC  29C9               	goto	i1l381
  5690     01AD                     i1l3026:
  5691     01AD  082C               	movf	low ((_I2C_Status| 0+12)),w
  5692     01AE  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5693     01AF  0821               	movf	_I2C_Status+1,w
  5694     01B0  008A               	movwf	10
  5695     01B1  0820               	movf	_I2C_Status,w
  5696     01B2  000A               	callw
  5697     01B3  3181               	pagesel	$
  5698     01B4  00F8               	movwf	??_I2C_DO_TX_EMPTY
  5699     01B5  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
  5700                           
  5701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5702                           ; Switch size 1, requested type "simple"
  5703                           ; Number of cases is 1, Range of values is 0 to 0
  5704                           ; switch strategies available:
  5705                           ; Name         Instructions Cycles
  5706                           ; simple_byte            4     3 (average)
  5707                           ; direct_byte            8     6 (fixed)
  5708                           ; jumptable            260     6 (fixed)
  5709                           ;	Chosen strategy is simple_byte
  5710     01B6  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
  5711     01B7  3A00               	xorlw	0	; case 0
  5712     01B8  1903               	skipnz
  5713     01B9  29BB               	goto	i1l3804
  5714     01BA  29A9               	goto	i1l3020
  5715     01BB                     i1l3804:
  5716                           
  5717                           ; Switch size 1, requested type "simple"
  5718                           ; Number of cases is 4, Range of values is 1 to 4
  5719                           ; switch strategies available:
  5720                           ; Name         Instructions Cycles
  5721                           ; simple_byte           13     7 (average)
  5722                           ; direct_byte           17     9 (fixed)
  5723                           ; jumptable            263     9 (fixed)
  5724                           ;	Chosen strategy is simple_byte
  5725     01BB  0878               	movf	??_I2C_DO_TX_EMPTY,w
  5726     01BC  3A01               	xorlw	1	; case 1
  5727     01BD  1903               	skipnz
  5728     01BE  29A9               	goto	i1l3020
  5729     01BF  3A03               	xorlw	3	; case 2
  5730     01C0  1903               	skipnz
  5731     01C1  29A0               	goto	i1l3010
  5732     01C2  3A01               	xorlw	1	; case 3
  5733     01C3  1903               	skipnz
  5734     01C4  29A0               	goto	i1l3010
  5735     01C5  3A07               	xorlw	7	; case 4
  5736     01C6  1903               	skipnz
  5737     01C7  29A4               	goto	i1l3014
  5738     01C8  29A9               	goto	i1l3020
  5739     01C9                     i1l381:
  5740     01C9  0008               	return
  5741     01CA                     __end_of_I2C_DO_TX_EMPTY:
  5742                           
  5743                           	psect	text39
  5744     045B                     __ptext39:	
  5745 ;; *************** function _I2C_MasterSetIrq *****************
  5746 ;; Defined at:
  5747 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		None
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5761 ;;      Params:         0       0       0       0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0
  5764 ;;      Totals:         0       0       0       0       0       0       0       0
  5765 ;;Total ram usage:        0 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_I2C_DO_TX_EMPTY
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774     045B                     _I2C_MasterSetIrq:	
  5775                           ;psect for function _I2C_MasterSetIrq
  5776                           
  5777     045B                     i1l2802:	
  5778                           ;incstack = 0
  5779                           ; Regs used in _I2C_MasterSetIrq: []
  5780                           
  5781                           
  5782                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  5783     045B  0020               	movlb	0	; select bank0
  5784     045C  1591               	bsf	17,3	;volatile
  5785     045D                     i1l501:
  5786     045D  0008               	return
  5787     045E                     __end_of_I2C_MasterSetIrq:
  5788                           
  5789                           	psect	text40
  5790     0408                     __ptext40:	
  5791 ;; *************** function _I2C_MasterIsNack *****************
  5792 ;; Defined at:
  5793 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      _Bool 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5807 ;;      Params:         0       0       0       0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0       0
  5810 ;;      Totals:         0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_I2C_MasterFsm
  5817 ;;		_I2C_DO_TX
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821     0408                     _I2C_MasterIsNack:	
  5822                           ;psect for function _I2C_MasterIsNack
  5823                           
  5824     0408                     i1l2752:	
  5825                           ;incstack = 0
  5826                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  5827                           
  5828                           
  5829                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  5830     0408  0024               	movlb	4	; select bank4
  5831     0409  0E16               	swapf	22,w	;volatile
  5832     040A  0C89               	rrf	9,f
  5833     040B  0C89               	rrf	9,f
  5834     040C  3901               	andlw	1
  5835     040D                     i1l474:
  5836     040D  0008               	return
  5837     040E                     __end_of_I2C_MasterIsNack:
  5838                           
  5839                           	psect	text41
  5840     043B                     __ptext41:	
  5841 ;; *************** function _I2C_MasterSendTxData *****************
  5842 ;; Defined at:
  5843 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  data            1    wreg     unsigned char 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  data            1    0[COMMON] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5857 ;;      Params:         0       0       0       0       0       0       0       0
  5858 ;;      Locals:         1       0       0       0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0
  5860 ;;      Totals:         1       0       0       0       0       0       0       0
  5861 ;;Total ram usage:        1 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_I2C_DO_SEND_ADR_READ
  5867 ;;		_I2C_DO_SEND_ADR_WRITE
  5868 ;;		_I2C_DO_TX
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872     043B                     _I2C_MasterSendTxData:	
  5873                           ;psect for function _I2C_MasterSendTxData
  5874                           
  5875                           
  5876                           ;incstack = 0
  5877                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  5878                           ;I2C_MasterSendTxData@data stored from wreg
  5879     043B  00F0               	movwf	I2C_MasterSendTxData@data
  5880     043C                     i1l2756:
  5881                           
  5882                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  5883     043C  0870               	movf	I2C_MasterSendTxData@data,w
  5884     043D  0024               	movlb	4	; select bank4
  5885     043E  0091               	movwf	17	;volatile
  5886     043F                     i1l456:
  5887     043F  0008               	return
  5888     0440                     __end_of_I2C_MasterSendTxData:
  5889                           
  5890                           	psect	text42
  5891     0448                     __ptext42:	
  5892 ;; *************** function _I2C_MasterSendAck *****************
  5893 ;; Defined at:
  5894 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		None
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5908 ;;      Params:         0       0       0       0       0       0       0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0
  5911 ;;      Totals:         0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:        0 bytes
  5913 ;; Hardware stack levels used: 1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_I2C_DO_RX
  5918 ;;		_I2C_DO_RX_ACK
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922     0448                     _I2C_MasterSendAck:	
  5923                           ;psect for function _I2C_MasterSendAck
  5924                           
  5925     0448                     i1l2780:	
  5926                           ;incstack = 0
  5927                           ; Regs used in _I2C_MasterSendAck: []
  5928                           
  5929                           
  5930                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  5931     0448  0024               	movlb	4	; select bank4
  5932     0449  1296               	bcf	22,5	;volatile
  5933                           
  5934                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  5935     044A  1616               	bsf	22,4	;volatile
  5936     044B                     i1l477:
  5937     044B  0008               	return
  5938     044C                     __end_of_I2C_MasterSendAck:
  5939                           
  5940                           	psect	text43
  5941     045E                     __ptext43:	
  5942 ;; *************** function _I2C_MasterGetRxData *****************
  5943 ;; Defined at:
  5944 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  1    wreg      unsigned char 
  5951 ;; Registers used:
  5952 ;;		wreg
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5958 ;;      Params:         0       0       0       0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0
  5961 ;;      Totals:         0       0       0       0       0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_I2C_DO_RX
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971     045E                     _I2C_MasterGetRxData:	
  5972                           ;psect for function _I2C_MasterGetRxData
  5973                           
  5974     045E                     i1l2776:	
  5975                           ;incstack = 0
  5976                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5977                           
  5978                           
  5979                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  5980     045E  0024               	movlb	4	; select bank4
  5981     045F  0811               	movf	17,w	;volatile
  5982     0460                     i1l453:
  5983     0460  0008               	return
  5984     0461                     __end_of_I2C_MasterGetRxData:
  5985                           
  5986                           	psect	text44
  5987     044C                     __ptext44:	
  5988 ;; *************** function _I2C_MasterSendNack *****************
  5989 ;; Defined at:
  5990 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		None
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6004 ;;      Params:         0       0       0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_I2C_DO_RX_NACK_STOP
  6014 ;;		_I2C_DO_RX_NACK_RESTART
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018     044C                     _I2C_MasterSendNack:	
  6019                           ;psect for function _I2C_MasterSendNack
  6020                           
  6021     044C                     i1l2710:	
  6022                           ;incstack = 0
  6023                           ; Regs used in _I2C_MasterSendNack: []
  6024                           
  6025                           
  6026                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6027     044C  0024               	movlb	4	; select bank4
  6028     044D  1696               	bsf	22,5	;volatile
  6029                           
  6030                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6031     044E  1616               	bsf	22,4	;volatile
  6032     044F                     i1l480:
  6033     044F  0008               	return
  6034     0450                     __end_of_I2C_MasterSendNack:
  6035                           
  6036                           	psect	text45
  6037     0461                     __ptext45:	
  6038 ;; *************** function _I2C_MasterStartRx *****************
  6039 ;; Defined at:
  6040 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		None
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6054 ;;      Params:         0       0       0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_I2C_DO_RCEN
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067     0461                     _I2C_MasterStartRx:	
  6068                           ;psect for function _I2C_MasterStartRx
  6069                           
  6070     0461                     i1l2794:	
  6071                           ;incstack = 0
  6072                           ; Regs used in _I2C_MasterStartRx: []
  6073                           
  6074                           
  6075                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6076     0461  0024               	movlb	4	; select bank4
  6077     0462  1596               	bsf	22,3	;volatile
  6078     0463                     i1l465:
  6079     0463  0008               	return
  6080     0464                     __end_of_I2C_MasterStartRx:
  6081                           
  6082                           	psect	text46
  6083     046A                     __ptext46:	
  6084 ;; *************** function _I2C_CallbackReturnReset *****************
  6085 ;; Defined at:
  6086 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  funPtr          1    7[COMMON] PTR void 
  6089 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6090 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      enum E363
  6095 ;; Registers used:
  6096 ;;		wreg
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6102 ;;      Params:         1       0       0       0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0
  6105 ;;      Totals:         1       0       0       0       0       0       0       0
  6106 ;;Total ram usage:        1 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; This function calls:
  6109 ;;		Nothing
  6110 ;; This function is called by:
  6111 ;;		_I2C_Open
  6112 ;;		_I2C_DO_TX
  6113 ;;		_I2C_DO_RX
  6114 ;;		_I2C_DO_TX_EMPTY
  6115 ;;		_I2C_DO_ADDRESS_NACK
  6116 ;;		_I2C_DO_RX_EMPTY
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120     046A                     _I2C_CallbackReturnReset:	
  6121                           ;psect for function _I2C_CallbackReturnReset
  6122                           
  6123     046A                     i1l2808:	
  6124                           ;incstack = 0
  6125                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6126                           
  6127                           
  6128                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6129     046A  3005               	movlw	5
  6130     046B                     i1l437:
  6131     046B  0008               	return
  6132     046C                     __end_of_I2C_CallbackReturnReset:
  6133                           
  6134                           	psect	text47
  6135     046C                     __ptext47:	
  6136 ;; *************** function _I2C_CallbackReturnStop *****************
  6137 ;; Defined at:
  6138 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  funPtr          1    7[COMMON] PTR void 
  6141 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6142 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      enum E363
  6147 ;; Registers used:
  6148 ;;		wreg
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6154 ;;      Params:         1       0       0       0       0       0       0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0
  6157 ;;      Totals:         1       0       0       0       0       0       0       0
  6158 ;;Total ram usage:        1 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_I2C_SetCallback
  6164 ;;		_I2C_Open
  6165 ;;		_I2C_DO_TX
  6166 ;;		_I2C_DO_RX
  6167 ;;		_I2C_DO_TX_EMPTY
  6168 ;;		_I2C_DO_ADDRESS_NACK
  6169 ;;		_I2C_DO_RX_EMPTY
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173     046C                     _I2C_CallbackReturnStop:	
  6174                           ;psect for function _I2C_CallbackReturnStop
  6175                           
  6176     046C                     i1l2804:	
  6177                           ;incstack = 0
  6178                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6179                           
  6180                           
  6181                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  6182     046C  3001               	movlw	1
  6183     046D                     i1l434:
  6184     046D  0008               	return
  6185     046E                     __end_of_I2C_CallbackReturnStop:
  6186                           
  6187                           	psect	text48
  6188     02B5                     __ptext48:	
  6189 ;; *************** function _rdBlkRegCompleteHandler *****************
  6190 ;; Defined at:
  6191 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  ptr             1    7[COMMON] PTR void 
  6194 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6195 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      enum E363
  6200 ;; Registers used:
  6201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6207 ;;      Params:         1       0       0       0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0
  6210 ;;      Totals:         1       0       0       0       0       0       0       0
  6211 ;;Total ram usage:        1 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 2
  6214 ;; This function calls:
  6215 ;;		_I2C_SetBuffer
  6216 ;;		_I2C_SetDataCompleteCallback
  6217 ;; This function is called by:
  6218 ;;		_I2C_ReadDataBlock
  6219 ;;		_I2C_DO_TX
  6220 ;;		_I2C_DO_RX
  6221 ;;		_I2C_DO_TX_EMPTY
  6222 ;;		_I2C_DO_ADDRESS_NACK
  6223 ;;		_I2C_DO_RX_EMPTY
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227     02B5                     _rdBlkRegCompleteHandler:	
  6228                           ;psect for function _rdBlkRegCompleteHandler
  6229                           
  6230     02B5                     i1l2744:	
  6231                           ;incstack = 0
  6232                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6233                           
  6234                           
  6235                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6236     02B5  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6237     02B6  0086               	movwf	6
  6238     02B7  0187               	clrf	7
  6239     02B8  3F40               	moviw [0]fsr1
  6240     02B9  00F0               	movwf	I2C_SetBuffer@bufferSize
  6241     02BA  3F41               	moviw [1]fsr1
  6242     02BB  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6243     02BC  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6244     02BD  3E02               	addlw	2
  6245     02BE  0086               	movwf	6
  6246     02BF  0187               	clrf	7
  6247     02C0  0801               	movf	1,w
  6248     02C1  3183  234D  3182   	fcall	_I2C_SetBuffer
  6249                           
  6250                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6251     02C4  3000               	movlw	0
  6252     02C5  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6253     02C6  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6254     02C7  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6255     02C8  3183  2399  3182   	fcall	_I2C_SetDataCompleteCallback
  6256     02CB                     i1l2746:
  6257                           
  6258                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6259     02CB  3002               	movlw	2
  6260     02CC                     i1l104:
  6261     02CC  0008               	return
  6262     02CD                     __end_of_rdBlkRegCompleteHandler:
  6263                           
  6264                           	psect	text49
  6265     0309                     __ptext49:	
  6266 ;; *************** function _wr1RegCompleteHandler *****************
  6267 ;; Defined at:
  6268 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  ptr             1    7[COMMON] PTR void 
  6271 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6272 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      enum E363
  6277 ;; Registers used:
  6278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6284 ;;      Params:         1       0       0       0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0
  6287 ;;      Totals:         1       0       0       0       0       0       0       0
  6288 ;;Total ram usage:        1 bytes
  6289 ;; Hardware stack levels used: 1
  6290 ;; Hardware stack levels required when called: 2
  6291 ;; This function calls:
  6292 ;;		_I2C_SetBuffer
  6293 ;;		_I2C_SetDataCompleteCallback
  6294 ;; This function is called by:
  6295 ;;		_I2C_Write1ByteRegister
  6296 ;;		_I2C_DO_TX
  6297 ;;		_I2C_DO_RX
  6298 ;;		_I2C_DO_TX_EMPTY
  6299 ;;		_I2C_DO_ADDRESS_NACK
  6300 ;;		_I2C_DO_RX_EMPTY
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304     0309                     _wr1RegCompleteHandler:	
  6305                           ;psect for function _wr1RegCompleteHandler
  6306                           
  6307     0309                     i1l2728:	
  6308                           ;incstack = 0
  6309                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6310                           
  6311                           
  6312                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6313     0309  3001               	movlw	1
  6314     030A  00F0               	movwf	I2C_SetBuffer@bufferSize
  6315     030B  3000               	movlw	0
  6316     030C  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6317     030D  0877               	movf	wr1RegCompleteHandler@ptr,w
  6318     030E  3183  234D  3183   	fcall	_I2C_SetBuffer
  6319     0311                     i1l2730:
  6320                           
  6321                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6322     0311  3000               	movlw	0
  6323     0312  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6324     0313  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6325     0314  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6326     0315  3183  2399  3183   	fcall	_I2C_SetDataCompleteCallback
  6327     0318                     i1l2732:
  6328                           
  6329                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6330     0318  3004               	movlw	4
  6331     0319                     i1l98:
  6332     0319  0008               	return
  6333     031A                     __end_of_wr1RegCompleteHandler:
  6334                           
  6335                           	psect	text50
  6336     031A                     __ptext50:	
  6337 ;; *************** function _rd2RegCompleteHandler *****************
  6338 ;; Defined at:
  6339 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  ptr             1    7[COMMON] PTR void 
  6342 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6343 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      enum E363
  6348 ;; Registers used:
  6349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6355 ;;      Params:         1       0       0       0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0
  6358 ;;      Totals:         1       0       0       0       0       0       0       0
  6359 ;;Total ram usage:        1 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 2
  6362 ;; This function calls:
  6363 ;;		_I2C_SetBuffer
  6364 ;;		_I2C_SetDataCompleteCallback
  6365 ;; This function is called by:
  6366 ;;		_I2C_Read2ByteRegister
  6367 ;;		_I2C_DO_TX
  6368 ;;		_I2C_DO_RX
  6369 ;;		_I2C_DO_TX_EMPTY
  6370 ;;		_I2C_DO_ADDRESS_NACK
  6371 ;;		_I2C_DO_RX_EMPTY
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     031A                     _rd2RegCompleteHandler:	
  6376                           ;psect for function _rd2RegCompleteHandler
  6377                           
  6378     031A                     i1l2720:	
  6379                           ;incstack = 0
  6380                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6381                           
  6382                           
  6383                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6384     031A  3002               	movlw	2
  6385     031B  00F0               	movwf	I2C_SetBuffer@bufferSize
  6386     031C  3000               	movlw	0
  6387     031D  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6388     031E  0877               	movf	rd2RegCompleteHandler@ptr,w
  6389     031F  3183  234D  3183   	fcall	_I2C_SetBuffer
  6390     0322                     i1l2722:
  6391                           
  6392                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6393     0322  3000               	movlw	0
  6394     0323  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6395     0324  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6396     0325  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6397     0326  3183  2399  3183   	fcall	_I2C_SetDataCompleteCallback
  6398     0329                     i1l2724:
  6399                           
  6400                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6401     0329  3002               	movlw	2
  6402     032A                     i1l95:
  6403     032A  0008               	return
  6404     032B                     __end_of_rd2RegCompleteHandler:
  6405                           
  6406                           	psect	text51
  6407     032B                     __ptext51:	
  6408 ;; *************** function _rd1RegCompleteHandler *****************
  6409 ;; Defined at:
  6410 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  ptr             1    7[COMMON] PTR void 
  6413 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6414 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      enum E363
  6419 ;; Registers used:
  6420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6426 ;;      Params:         1       0       0       0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0
  6429 ;;      Totals:         1       0       0       0       0       0       0       0
  6430 ;;Total ram usage:        1 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 2
  6433 ;; This function calls:
  6434 ;;		_I2C_SetBuffer
  6435 ;;		_I2C_SetDataCompleteCallback
  6436 ;; This function is called by:
  6437 ;;		_I2C_Read1ByteRegister
  6438 ;;		_I2C_DO_TX
  6439 ;;		_I2C_DO_RX
  6440 ;;		_I2C_DO_TX_EMPTY
  6441 ;;		_I2C_DO_ADDRESS_NACK
  6442 ;;		_I2C_DO_RX_EMPTY
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446     032B                     _rd1RegCompleteHandler:	
  6447                           ;psect for function _rd1RegCompleteHandler
  6448                           
  6449     032B                     i1l2712:	
  6450                           ;incstack = 0
  6451                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6452                           
  6453                           
  6454                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6455     032B  3001               	movlw	1
  6456     032C  00F0               	movwf	I2C_SetBuffer@bufferSize
  6457     032D  3000               	movlw	0
  6458     032E  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6459     032F  0877               	movf	rd1RegCompleteHandler@ptr,w
  6460     0330  3183  234D  3183   	fcall	_I2C_SetBuffer
  6461     0333                     i1l2714:
  6462                           
  6463                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6464     0333  3000               	movlw	0
  6465     0334  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6466     0335  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6467     0336  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6468     0337  3183  2399  3183   	fcall	_I2C_SetDataCompleteCallback
  6469     033A                     i1l2716:
  6470                           
  6471                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6472     033A  3002               	movlw	2
  6473     033B                     i1l92:
  6474     033B  0008               	return
  6475     033C                     __end_of_rd1RegCompleteHandler:
  6476                           
  6477                           	psect	text52
  6478     033C                     __ptext52:	
  6479 ;; *************** function _wr2RegCompleteHandler *****************
  6480 ;; Defined at:
  6481 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  ptr             1    7[COMMON] PTR void 
  6484 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6485 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      enum E363
  6490 ;; Registers used:
  6491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6497 ;;      Params:         1       0       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0
  6500 ;;      Totals:         1       0       0       0       0       0       0       0
  6501 ;;Total ram usage:        1 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; Hardware stack levels required when called: 2
  6504 ;; This function calls:
  6505 ;;		_I2C_SetBuffer
  6506 ;;		_I2C_SetDataCompleteCallback
  6507 ;; This function is called by:
  6508 ;;		_I2C_Write2ByteRegister
  6509 ;;		_I2C_DO_TX
  6510 ;;		_I2C_DO_RX
  6511 ;;		_I2C_DO_TX_EMPTY
  6512 ;;		_I2C_DO_ADDRESS_NACK
  6513 ;;		_I2C_DO_RX_EMPTY
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517     033C                     _wr2RegCompleteHandler:	
  6518                           ;psect for function _wr2RegCompleteHandler
  6519                           
  6520     033C                     i1l2736:	
  6521                           ;incstack = 0
  6522                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6523                           
  6524                           
  6525                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6526     033C  3002               	movlw	2
  6527     033D  00F0               	movwf	I2C_SetBuffer@bufferSize
  6528     033E  3000               	movlw	0
  6529     033F  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6530     0340  0877               	movf	wr2RegCompleteHandler@ptr,w
  6531     0341  3183  234D  3183   	fcall	_I2C_SetBuffer
  6532     0344                     i1l2738:
  6533                           
  6534                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6535     0344  3000               	movlw	0
  6536     0345  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6537     0346  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6538     0347  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6539     0348  3183  2399  3183   	fcall	_I2C_SetDataCompleteCallback
  6540     034B                     i1l2740:
  6541                           
  6542                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6543     034B  3004               	movlw	4
  6544     034C                     i1l101:
  6545     034C  0008               	return
  6546     034D                     __end_of_wr2RegCompleteHandler:
  6547                           
  6548                           	psect	text53
  6549     0399                     __ptext53:	
  6550 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6551 ;; Defined at:
  6552 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
  6555 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6556 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6557 ;;  ptr             1    6[COMMON] PTR void 
  6558 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6559 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6571 ;;      Params:         3       0       0       0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0
  6574 ;;      Totals:         3       0       0       0       0       0       0       0
  6575 ;;Total ram usage:        3 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		_I2C_SetCallback
  6580 ;; This function is called by:
  6581 ;;		_rd1RegCompleteHandler
  6582 ;;		_rd2RegCompleteHandler
  6583 ;;		_wr1RegCompleteHandler
  6584 ;;		_wr2RegCompleteHandler
  6585 ;;		_rdBlkRegCompleteHandler
  6586 ;;		_I2C_Read1ByteRegister
  6587 ;;		_I2C_Read2ByteRegister
  6588 ;;		_I2C_Write1ByteRegister
  6589 ;;		_I2C_Write2ByteRegister
  6590 ;;		_I2C_ReadDataBlock
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594     0399                     _I2C_SetDataCompleteCallback:	
  6595                           ;psect for function _I2C_SetDataCompleteCallback
  6596                           
  6597     0399                     i1l2698:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6600                           
  6601                           
  6602                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6603     0399  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
  6604     039A  00F1               	movwf	I2C_SetCallback@cb+1
  6605     039B  0874               	movf	I2C_SetDataCompleteCallback@cb,w
  6606     039C  00F0               	movwf	I2C_SetCallback@cb
  6607     039D  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
  6608     039E  00F2               	movwf	I2C_SetCallback@ptr
  6609     039F  3000               	movlw	0
  6610     03A0  3182  221A  3183   	fcall	_I2C_SetCallback
  6611     03A3                     i1l308:
  6612     03A3  0008               	return
  6613     03A4                     __end_of_I2C_SetDataCompleteCallback:
  6614                           
  6615                           	psect	text54
  6616     021A                     __ptext54:	
  6617 ;; *************** function _I2C_SetCallback *****************
  6618 ;; Defined at:
  6619 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  idx             1    wreg     enum E3130
  6622 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  6623 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6624 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6625 ;;  ptr             1    2[COMMON] PTR void 
  6626 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6627 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  idx             1    3[COMMON] enum E3130
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6639 ;;      Params:         3       0       0       0       0       0       0       0
  6640 ;;      Locals:         1       0       0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0
  6642 ;;      Totals:         4       0       0       0       0       0       0       0
  6643 ;;Total ram usage:        4 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_I2C_SetDataCompleteCallback
  6649 ;;		_I2C_SetWriteCollisionCallback
  6650 ;;		_I2C_SetAddressNackCallback
  6651 ;;		_I2C_SetDataNackCallback
  6652 ;;		_I2C_SetTimeoutCallback
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656     021A                     _I2C_SetCallback:	
  6657                           ;psect for function _I2C_SetCallback
  6658                           
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  6662                           ;I2C_SetCallback@idx stored from wreg
  6663     021A  00F3               	movwf	I2C_SetCallback@idx
  6664     021B                     i1l2692:
  6665                           
  6666                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  6667     021B  0870               	movf	I2C_SetCallback@cb,w
  6668     021C  0471               	iorwf	I2C_SetCallback@cb+1,w
  6669     021D  1903               	btfsc	3,2
  6670     021E  2A20               	goto	u78_21
  6671     021F  2A21               	goto	u78_20
  6672     0220                     u78_21:
  6673     0220  2A30               	goto	i1l2696
  6674     0221                     u78_20:
  6675     0221                     i1l2694:
  6676                           
  6677                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6678     0221  3573               	lslf	I2C_SetCallback@idx,w
  6679     0222  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6680     0223  0086               	movwf	6
  6681     0224  0187               	clrf	7
  6682     0225  0870               	movf	I2C_SetCallback@cb,w
  6683     0226  3FC0               	movwi [0]fsr1
  6684     0227  0871               	movf	I2C_SetCallback@cb+1,w
  6685     0228  3FC1               	movwi [1]fsr1
  6686                           
  6687                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  6688     0229  0873               	movf	I2C_SetCallback@idx,w
  6689     022A  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6690     022B  0086               	movwf	6
  6691     022C  0187               	clrf	7
  6692     022D  0872               	movf	I2C_SetCallback@ptr,w
  6693     022E  0081               	movwf	1
  6694                           
  6695                           ;mcc_generated_files/i2c_master.c: 310:     }
  6696     022F  2A3D               	goto	i1l328
  6697     0230                     i1l2696:
  6698                           
  6699                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6700     0230  3573               	lslf	I2C_SetCallback@idx,w
  6701     0231  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6702     0232  0086               	movwf	6
  6703     0233  0187               	clrf	7
  6704     0234  306C               	movlw	low _I2C_CallbackReturnStop
  6705     0235  3FC0               	movwi [0]fsr1
  6706     0236  3004               	movlw	high _I2C_CallbackReturnStop
  6707     0237  3FC1               	movwi [1]fsr1
  6708                           
  6709                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6710     0238  0873               	movf	I2C_SetCallback@idx,w
  6711     0239  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6712     023A  0086               	movwf	6
  6713     023B  0187               	clrf	7
  6714     023C  0181               	clrf	1
  6715     023D                     i1l328:
  6716     023D  0008               	return
  6717     023E                     __end_of_I2C_SetCallback:
  6718                           
  6719                           	psect	text55
  6720     034D                     __ptext55:	
  6721 ;; *************** function _I2C_SetBuffer *****************
  6722 ;; Defined at:
  6723 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  buffer          1    wreg     PTR void 
  6726 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6727 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  6728 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  6729 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  6730 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6731 ;;  bufferSize      2    0[COMMON] unsigned int 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  buffer          1    2[COMMON] PTR void 
  6734 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6735 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  6736 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  6737 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  6738 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6748 ;;      Params:         2       0       0       0       0       0       0       0
  6749 ;;      Locals:         1       0       0       0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0
  6751 ;;      Totals:         3       0       0       0       0       0       0       0
  6752 ;;Total ram usage:        3 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_rd1RegCompleteHandler
  6758 ;;		_rd2RegCompleteHandler
  6759 ;;		_wr1RegCompleteHandler
  6760 ;;		_wr2RegCompleteHandler
  6761 ;;		_rdBlkRegCompleteHandler
  6762 ;;		_I2C_Read1ByteRegister
  6763 ;;		_I2C_Read2ByteRegister
  6764 ;;		_I2C_Write1ByteRegister
  6765 ;;		_I2C_Write2ByteRegister
  6766 ;;		_I2C_WriteNBytes
  6767 ;;		_I2C_ReadNBytes
  6768 ;;		_I2C_ReadDataBlock
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772     034D                     _I2C_SetBuffer:	
  6773                           ;psect for function _I2C_SetBuffer
  6774                           
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _I2C_SetBuffer: [wreg]
  6778                           ;I2C_SetBuffer@buffer stored from wreg
  6779     034D  00F2               	movwf	I2C_SetBuffer@buffer
  6780     034E                     i1l2700:
  6781                           
  6782                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  6783     034E  0020               	movlb	0	; select bank0
  6784     034F  1DBC               	btfss	_I2C_Status+28,3
  6785     0350  2B52               	goto	u79_21
  6786     0351  2B53               	goto	u79_20
  6787     0352                     u79_21:
  6788     0352  2B5A               	goto	i1l305
  6789     0353                     u79_20:
  6790     0353                     i1l2702:
  6791                           
  6792                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  6793     0353  0872               	movf	I2C_SetBuffer@buffer,w
  6794     0354  00B7               	movwf	low ((_I2C_Status| 0+23))
  6795                           
  6796                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  6797     0355  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  6798     0356  00B9               	movwf	_I2C_Status+25
  6799     0357  0870               	movf	I2C_SetBuffer@bufferSize,w
  6800     0358  00B8               	movwf	_I2C_Status+24
  6801     0359                     i1l2704:
  6802                           
  6803                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  6804     0359  11BC               	bcf	_I2C_Status+28,3
  6805     035A                     i1l305:
  6806     035A  0008               	return
  6807     035B                     __end_of_I2C_SetBuffer:
  6808                           
  6809                           	psect	text56
  6810     0464                     __ptext56:	
  6811 ;; *************** function _I2C_MasterStop *****************
  6812 ;; Defined at:
  6813 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		None
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6827 ;;      Params:         0       0       0       0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_I2C_DO_SEND_STOP
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840     0464                     _I2C_MasterStop:	
  6841                           ;psect for function _I2C_MasterStop
  6842                           
  6843     0464                     i1l2708:	
  6844                           ;incstack = 0
  6845                           ; Regs used in _I2C_MasterStop: []
  6846                           
  6847                           
  6848                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  6849     0464  0024               	movlb	4	; select bank4
  6850     0465  1516               	bsf	22,2	;volatile
  6851     0466                     i1l471:
  6852     0466  0008               	return
  6853     0467                     __end_of_I2C_MasterStop:
  6854                           
  6855                           	psect	text57
  6856     0467                     __ptext57:	
  6857 ;; *************** function _I2C_MasterEnableRestart *****************
  6858 ;; Defined at:
  6859 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		None
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6873 ;;      Params:         0       0       0       0       0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_I2C_DO_SEND_RESTART_READ
  6883 ;;		_I2C_DO_SEND_RESTART_WRITE
  6884 ;;		_I2C_DO_SEND_RESTART
  6885 ;;		_I2C_DO_RX_EMPTY
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889     0467                     _I2C_MasterEnableRestart:	
  6890                           ;psect for function _I2C_MasterEnableRestart
  6891                           
  6892     0467                     i1l2706:	
  6893                           ;incstack = 0
  6894                           ; Regs used in _I2C_MasterEnableRestart: []
  6895                           
  6896                           
  6897                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  6898     0467  0024               	movlb	4	; select bank4
  6899     0468  1496               	bsf	22,1	;volatile
  6900     0469                     i1l459:
  6901     0469  0008               	return
  6902     046A                     __end_of_I2C_MasterEnableRestart:
  6903                           
  6904                           	psect	text58
  6905     023E                     __ptext58:	
  6906 ;; *************** function _EUSART_Transmit_ISR *****************
  6907 ;; Defined at:
  6908 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6922 ;;      Params:         0       0       0       0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0
  6924 ;;      Temps:          1       0       0       0       0       0       0       0
  6925 ;;      Totals:         1       0       0       0       0       0       0       0
  6926 ;;Total ram usage:        1 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_EUSART_Initialize
  6932 ;;		_INTERRUPT_InterruptManager
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     023E                     _EUSART_Transmit_ISR:	
  6937                           ;psect for function _EUSART_Transmit_ISR
  6938                           
  6939     023E                     i1l3468:	
  6940                           ;incstack = 0
  6941                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6942                           
  6943                           
  6944                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6945     023E  3010               	movlw	16
  6946     023F  0020               	movlb	0	; select bank0
  6947     0240  024B               	subwf	_eusartTxBufferRemaining,w	;volatile
  6948     0241  1803               	skipnc
  6949     0242  2A44               	goto	u120_21
  6950     0243  2A45               	goto	u120_20
  6951     0244                     u120_21:
  6952     0244  2A5D               	goto	i1l649
  6953     0245                     u120_20:
  6954     0245                     i1l3470:
  6955                           
  6956                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6957     0245  084C               	movf	_eusartTxTail,w
  6958     0246  3EC0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6959     0247  0086               	movwf	6
  6960     0248  0187               	clrf	7
  6961     0249  0801               	movf	1,w
  6962     024A  0023               	movlb	3	; select bank3
  6963     024B  009A               	movwf	26	;volatile
  6964     024C                     i1l3472:
  6965     024C  3001               	movlw	1
  6966     024D  00F0               	movwf	??_EUSART_Transmit_ISR
  6967     024E  0870               	movf	??_EUSART_Transmit_ISR,w
  6968     024F  0020               	movlb	0	; select bank0
  6969     0250  07CC               	addwf	_eusartTxTail,f	;volatile
  6970     0251                     i1l3474:
  6971                           
  6972                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6973     0251  3010               	movlw	16
  6974     0252  024C               	subwf	_eusartTxTail,w	;volatile
  6975     0253  1C03               	skipc
  6976     0254  2A56               	goto	u121_21
  6977     0255  2A57               	goto	u121_20
  6978     0256                     u121_21:
  6979     0256  2A58               	goto	i1l3478
  6980     0257                     u121_20:
  6981     0257                     i1l3476:
  6982                           
  6983                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6984     0257  01CC               	clrf	_eusartTxTail	;volatile
  6985     0258                     i1l3478:
  6986                           
  6987                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6988     0258  3001               	movlw	1
  6989     0259  00F0               	movwf	??_EUSART_Transmit_ISR
  6990     025A  0870               	movf	??_EUSART_Transmit_ISR,w
  6991     025B  07CB               	addwf	_eusartTxBufferRemaining,f	;volatile
  6992                           
  6993                           ;mcc_generated_files/eusart.c: 209:     }
  6994     025C  2A5F               	goto	i1l652
  6995     025D                     i1l649:	
  6996                           ;mcc_generated_files/eusart.c: 210:     else
  6997                           
  6998                           
  6999                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  7000     025D  0021               	movlb	1	; select bank1
  7001     025E  1211               	bcf	17,4	;volatile
  7002     025F                     i1l652:
  7003     025F  0008               	return
  7004     0260                     __end_of_EUSART_Transmit_ISR:
  7005                           
  7006                           	psect	text59
  7007     0164                     __ptext59:	
  7008 ;; *************** function _EUSART_Receive_ISR *****************
  7009 ;; Defined at:
  7010 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7024 ;;      Params:         0       0       0       0       0       0       0       0
  7025 ;;      Locals:         0       0       0       0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0
  7027 ;;      Totals:         0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:        0 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; Hardware stack levels required when called: 2
  7031 ;; This function calls:
  7032 ;;		NULL
  7033 ;;		_EUSART_DefaultErrorHandler
  7034 ;;		_EUSART_DefaultFramingErrorHandler
  7035 ;;		_EUSART_DefaultOverrunErrorHandler
  7036 ;;		_EUSART_RxDataHandler
  7037 ;; This function is called by:
  7038 ;;		_EUSART_Initialize
  7039 ;;		_INTERRUPT_InterruptManager
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043     0164                     _EUSART_Receive_ISR:	
  7044                           ;psect for function _EUSART_Receive_ISR
  7045                           
  7046     0164                     i1l3480:	
  7047                           ;incstack = 0
  7048                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7049                           
  7050                           
  7051                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7052     0164  087D               	movf	_eusartRxHead,w	;volatile
  7053     0165  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7054     0166  0086               	movwf	6
  7055     0167  0187               	clrf	7
  7056     0168  0181               	clrf	1
  7057     0169                     i1l3482:
  7058                           
  7059                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7060     0169  0023               	movlb	3	; select bank3
  7061     016A  1D1D               	btfss	29,2	;volatile
  7062     016B  296D               	goto	u122_21
  7063     016C  296E               	goto	u122_20
  7064     016D                     u122_21:
  7065     016D  2979               	goto	i1l3488
  7066     016E                     u122_20:
  7067     016E                     i1l3484:
  7068                           
  7069                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7070     016E  087D               	movf	_eusartRxHead,w	;volatile
  7071     016F  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7072     0170  0086               	movwf	6
  7073     0171  0187               	clrf	7
  7074     0172  1481               	bsf	1,1
  7075     0173                     i1l3486:
  7076                           
  7077                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7078     0173  0020               	movlb	0	; select bank0
  7079     0174  085D               	movf	_EUSART_FramingErrorHandler+1,w
  7080     0175  008A               	movwf	10
  7081     0176  085C               	movf	_EUSART_FramingErrorHandler,w
  7082     0177  000A               	callw
  7083     0178  3181               	pagesel	$
  7084     0179                     i1l3488:
  7085                           
  7086                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7087     0179  0023               	movlb	3	; select bank3
  7088     017A  1C9D               	btfss	29,1	;volatile
  7089     017B  297D               	goto	u123_21
  7090     017C  297E               	goto	u123_20
  7091     017D                     u123_21:
  7092     017D  2989               	goto	i1l3494
  7093     017E                     u123_20:
  7094     017E                     i1l3490:
  7095                           
  7096                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7097     017E  087D               	movf	_eusartRxHead,w	;volatile
  7098     017F  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7099     0180  0086               	movwf	6
  7100     0181  0187               	clrf	7
  7101     0182  1501               	bsf	1,2
  7102     0183                     i1l3492:
  7103                           
  7104                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7105     0183  0020               	movlb	0	; select bank0
  7106     0184  085B               	movf	_EUSART_OverrunErrorHandler+1,w
  7107     0185  008A               	movwf	10
  7108     0186  085A               	movf	_EUSART_OverrunErrorHandler,w
  7109     0187  000A               	callw
  7110     0188  3181               	pagesel	$
  7111     0189                     i1l3494:
  7112                           
  7113                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7114     0189  087D               	movf	_eusartRxHead,w	;volatile
  7115     018A  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7116     018B  0086               	movwf	6
  7117     018C  0187               	clrf	7
  7118     018D  0801               	movf	1,w
  7119     018E  1903               	btfsc	3,2
  7120     018F  2991               	goto	u124_21
  7121     0190  2992               	goto	u124_20
  7122     0191                     u124_21:
  7123     0191  2999               	goto	i1l3498
  7124     0192                     u124_20:
  7125     0192                     i1l3496:
  7126                           
  7127                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7128     0192  0020               	movlb	0	; select bank0
  7129     0193  0859               	movf	_EUSART_ErrorHandler+1,w
  7130     0194  008A               	movwf	10
  7131     0195  0858               	movf	_EUSART_ErrorHandler,w
  7132     0196  000A               	callw
  7133     0197  3181               	pagesel	$
  7134                           
  7135                           ;mcc_generated_files/eusart.c: 233:     } else {
  7136     0198  299C               	goto	i1l659
  7137     0199                     i1l3498:
  7138                           
  7139                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7140     0199  3182  22CD  3181   	fcall	_EUSART_RxDataHandler
  7141     019C                     i1l659:
  7142     019C  0008               	return
  7143     019D                     __end_of_EUSART_Receive_ISR:
  7144                           
  7145                           	psect	text60
  7146     0450                     __ptext60:	
  7147 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7148 ;; Defined at:
  7149 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		None
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7163 ;;      Params:         0       0       0       0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used: 1
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_EUSART_Initialize
  7173 ;;		_EUSART_Receive_ISR
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177     0450                     _EUSART_DefaultOverrunErrorHandler:	
  7178                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7179                           
  7180     0450                     i1l3324:	
  7181                           ;incstack = 0
  7182                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7183                           
  7184                           
  7185                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7186     0450  0023               	movlb	3	; select bank3
  7187     0451  121D               	bcf	29,4	;volatile
  7188                           
  7189                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7190     0452  161D               	bsf	29,4	;volatile
  7191     0453                     i1l669:
  7192     0453  0008               	return
  7193     0454                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7194                           
  7195                           	psect	text61
  7196     046F                     __ptext61:	
  7197 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7198 ;; Defined at:
  7199 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		None
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7213 ;;      Params:         0       0       0       0       0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0
  7216 ;;      Totals:         0       0       0       0       0       0       0       0
  7217 ;;Total ram usage:        0 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_EUSART_Initialize
  7223 ;;		_EUSART_Receive_ISR
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227     046F                     _EUSART_DefaultFramingErrorHandler:	
  7228                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7229                           
  7230     046F                     i1l666:	
  7231                           ;incstack = 0
  7232                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7233                           
  7234     046F  0008               	return
  7235     0470                     __end_of_EUSART_DefaultFramingErrorHandler:
  7236                           
  7237                           	psect	text62
  7238     0454                     __ptext62:	
  7239 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7240 ;; Defined at:
  7241 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;		None
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7255 ;;      Params:         0       0       0       0       0       0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0
  7258 ;;      Totals:         0       0       0       0       0       0       0       0
  7259 ;;Total ram usage:        0 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 1
  7262 ;; This function calls:
  7263 ;;		_EUSART_RxDataHandler
  7264 ;; This function is called by:
  7265 ;;		_EUSART_Initialize
  7266 ;;		_EUSART_Receive_ISR
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270     0454                     _EUSART_DefaultErrorHandler:	
  7271                           ;psect for function _EUSART_DefaultErrorHandler
  7272                           
  7273     0454                     i1l3326:	
  7274                           ;incstack = 0
  7275                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7276                           
  7277                           
  7278                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7279     0454  3182  22CD  3184   	fcall	_EUSART_RxDataHandler
  7280     0457                     i1l672:
  7281     0457  0008               	return
  7282     0458                     __end_of_EUSART_DefaultErrorHandler:
  7283                           
  7284                           	psect	text63
  7285     02CD                     __ptext63:	
  7286 ;; *************** function _EUSART_RxDataHandler *****************
  7287 ;; Defined at:
  7288 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7302 ;;      Params:         0       0       0       0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0
  7304 ;;      Temps:          1       0       0       0       0       0       0       0
  7305 ;;      Totals:         1       0       0       0       0       0       0       0
  7306 ;;Total ram usage:        1 bytes
  7307 ;; Hardware stack levels used: 1
  7308 ;; This function calls:
  7309 ;;		Nothing
  7310 ;; This function is called by:
  7311 ;;		_EUSART_Receive_ISR
  7312 ;;		_EUSART_DefaultErrorHandler
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316     02CD                     _EUSART_RxDataHandler:	
  7317                           ;psect for function _EUSART_RxDataHandler
  7318                           
  7319     02CD                     i1l3098:	
  7320                           ;incstack = 0
  7321                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7322                           
  7323                           
  7324                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7325     02CD  087D               	movf	_eusartRxHead,w
  7326     02CE  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7327     02CF  0086               	movwf	6
  7328     02D0  0187               	clrf	7
  7329     02D1  0023               	movlb	3	; select bank3
  7330     02D2  0819               	movf	25,w	;volatile
  7331     02D3  0081               	movwf	1
  7332     02D4                     i1l3100:
  7333     02D4  3001               	movlw	1
  7334     02D5  00F0               	movwf	??_EUSART_RxDataHandler
  7335     02D6  0870               	movf	??_EUSART_RxDataHandler,w
  7336     02D7  07FD               	addwf	_eusartRxHead,f	;volatile
  7337     02D8                     i1l3102:
  7338                           
  7339                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7340     02D8  3010               	movlw	16
  7341     02D9  027D               	subwf	_eusartRxHead,w	;volatile
  7342     02DA  1C03               	skipc
  7343     02DB  2ADD               	goto	u95_21
  7344     02DC  2ADE               	goto	u95_20
  7345     02DD                     u95_21:
  7346     02DD  2ADF               	goto	i1l3106
  7347     02DE                     u95_20:
  7348     02DE                     i1l3104:
  7349                           
  7350                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7351     02DE  01FD               	clrf	_eusartRxHead	;volatile
  7352     02DF                     i1l3106:
  7353                           
  7354                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7355     02DF  3001               	movlw	1
  7356     02E0  00F0               	movwf	??_EUSART_RxDataHandler
  7357     02E1  0870               	movf	??_EUSART_RxDataHandler,w
  7358     02E2  0020               	movlb	0	; select bank0
  7359     02E3  07CA               	addwf	_eusartRxCount,f	;volatile
  7360     02E4                     i1l663:
  7361     02E4  0008               	return
  7362     02E5                     __end_of_EUSART_RxDataHandler:
  7363     007E                     btemp	set	126	;btemp
  7364     007E                     int$flags	set	126
  7365     007E                     wtemp0	set	126
  7366     20D4                     
  7367                           	psect	idloc
  7368                           
  7369                           ;Config register IDLOC0 @ 0x8000
  7370                           ;	unspecified, using default values
  7371     8000                     	org	32768
  7372     8000  3FFF               	dw	16383
  7373                           
  7374                           ;Config register IDLOC1 @ 0x8001
  7375                           ;	unspecified, using default values
  7376     8001                     	org	32769
  7377     8001  3FFF               	dw	16383
  7378                           
  7379                           ;Config register IDLOC2 @ 0x8002
  7380                           ;	unspecified, using default values
  7381     8002                     	org	32770
  7382     8002  3FFF               	dw	16383
  7383                           
  7384                           ;Config register IDLOC3 @ 0x8003
  7385                           ;	unspecified, using default values
  7386     8003                     	org	32771
  7387     8003  3FFF               	dw	16383
  7388                           
  7389                           	psect	config
  7390                           
  7391                           ;Config register CONFIG1 @ 0x8007
  7392                           ;	Oscillator Selection
  7393                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7394                           ;	Watchdog Timer Enable
  7395                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  7396                           ;	Power-up Timer Enable
  7397                           ;	PWRTE = OFF, PWRT disabled
  7398                           ;	MCLR Pin Function Select
  7399                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7400                           ;	Flash Program Memory Code Protection
  7401                           ;	CP = OFF, Program memory code protection is disabled
  7402                           ;	Data Memory Code Protection
  7403                           ;	CPD = OFF, Data memory code protection is disabled
  7404                           ;	Brown-out Reset Enable
  7405                           ;	BOREN = ON, Brown-out Reset enabled
  7406                           ;	Clock Out Enable
  7407                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7408                           ;	Internal/External Switchover
  7409                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7410                           ;	Fail-Safe Clock Monitor Enable
  7411                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7412     8007                     	org	32775
  7413     8007  3FEC               	dw	16364
  7414                           
  7415                           ;Config register CONFIG2 @ 0x8008
  7416                           ;	Flash Memory Self-Write Protection
  7417                           ;	WRT = OFF, Write protection off
  7418                           ;	Voltage Regulator Capacitor Enable
  7419                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
  7420                           ;	PLL Enable
  7421                           ;	PLLEN = OFF, 4x PLL disabled
  7422                           ;	Stack Overflow/Underflow Reset Enable
  7423                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7424                           ;	Brown-out Reset Voltage Selection
  7425                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7426                           ;	Low-Voltage Programming Enable
  7427                           ;	LVP = ON, Low-voltage programming enabled
  7428     8008                     	org	32776
  7429     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         104
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      2      80
    BANK1            80      0      48
    BANK2            52      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2267$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2272	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2267	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2266	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S1361$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1361$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1361$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     664
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   78494
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (7) _rtcc_handle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   78254
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   19569
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          3     0      3    2478
                                              4 COMMON     3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     4     1      3     914
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        3     1      2    1352
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      30       8       60.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               34      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      8E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 11 14:41:31 2023

                ?_EUSART_SetRxInterruptHandler 006E                         ??_I2C_DO_SEND_ADR_READ 0070  
                      ??_I2C_DO_SEND_ADR_WRITE 0071                                    _SSPSTATbits 0214  
                        ??_I2C_DO_SEND_RESTART 0070                                            l135 029B  
                                          l163 02F7                                            l166 03D6  
                                          l169 0443                                            l278 03B6  
                                          l618 0163                                            l716 02B4  
                                          l681 0407                                            l675 0401  
                                          l684 03EF                                            l749 03E9  
                                          l678 03FB                                            l687 03F5  
                                          l767 03E1                                            l768 03E1  
                              _timer1ReloadVal 0041                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 006E                                            wreg 0009  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 040E  
                      ??_rd2RegCompleteHandler 0078                                           l3300 0148  
                                         l3108 03E4                                           l3070 03FC  
                                         l3310 0160                                           l3302 0150  
                                         l3230 0286                                           l3072 03F6  
                                         l3312 0161                                           l3304 015C  
                                         l3240 0292                                           l3232 0289  
                                         l3074 0402                                           l3066 03F0  
                                         l3306 015E                                           l3250 03AE  
                                         l3242 0294                                           l3234 028B  
                                         l3226 0280                                           l3068 03EA  
                                         l3308 015F                                           l3252 03B0  
                                         l3260 03D3                                           l3244 0296  
                                         l3236 028D                                           l3228 0284  
                                         l3254 03B2                                           l3262 03D4  
                                         l3246 0297                                           l3238 028F  
                                         l3270 02A0                                           l3256 03B5  
                                         l3248 0299                                           l3280 02B1  
                                         l3272 02A2                                           l3264 0440  
                                         l3290 0139                                           l3282 0122  
                                         l3258 03D0                                           l3274 02A3  
                                         l3266 029C                                           l3292 013B  
                                         l3284 0124                                           l3276 02A7  
                                         l3268 029E                                           l3460 02E5  
                                         l3294 013D                                           l3286 012C  
                                         l3278 02A9                                           l3296 013F  
                                         l3288 0136                                           l3298 0140  
                                         l3694 03DE                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _LATE 0110                                           i1l92 033B  
                                         i1l95 032A                                           i1l98 0319  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 0078                                           _main 03DE  
                     ?_I2C_CallbackReturnReset 0077                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0055                     ??_TMR1_SetInterruptHandler 0070  
                                _I2C_DO_RX_ACK 041D                  __end_of_OSCILLATOR_Initialize 03D7  
                                        ?_main 0070                                          _T1CON 0018  
                                        i1l101 034C                                          i1l104 02CC  
                                        i1l305 035A                                          i1l402 0430  
                                        i1l411 0421                                          i1l331 0447  
                                        i1l308 03A3                                          i1l420 0412  
                                        i1l501 045D                                          i1l341 03BF  
                                        i1l405 042B                                          i1l350 00DE  
                                        i1l414 041C                                          i1l335 01F1  
                                        i1l328 023D                                          i1l344 03CF  
                                        i1l408 0426                                          i1l417 0417  
                                        i1l434 046D                                          i1l338 043A  
                                        i1l426 0219                                          i1l347 00C2  
                                        i1l363 00FB                                          i1l364 0121  
                                        i1l532 001A                                          i1l437 046B  
                                        i1l453 0460                                          i1l381 01C9  
                                        i1l534 002A                                          i1l471 0466  
                                        i1l375 03DD                                          i1l543 0053  
                                        i1l480 044F                                          i1l456 043F  
                                        i1l536 003A                                          i1l465 0463  
                                        i1l537 0053                                          i1l474 040D  
                                        i1l730 0308                                          i1l538 0045  
                                        i1l459 0469                                          i1l652 025F  
                                        i1l477 044B                                          i1l742 0367  
                                        i1l663 02E4                                          i1l399 0435  
                                        i1l672 0457                                          i1l752 046E  
                                        i1l649 025D                                          i1l921 03AD  
                                        i1l666 046F                                          i1l498 045A  
                                        i1l746 0374                                          i1l659 019C  
                                        i1l669 0453                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0078  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u90_20 0094                                          u90_21 0093  
                                        u91_20 00DB                                          u91_21 00DA  
                                        u92_20 00F6                                          u92_21 00F5  
                                        u78_20 0221                                          u78_21 0220  
                                        u95_20 02DE                                          u79_20 0353  
                                        u95_21 02DD                                          u79_21 0352  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _SW_Ad 0047                               __end_of_TMR1_ISR 0368  
                            __end_of_I2C_DO_RX 0122                              __end_of_I2C_DO_TX 00DF  
                               _WDT_Initialize 0440                        _I2C_MasterEnableRestart 0467  
                      __end_of_TMR1_Initialize 02B5                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                              _TMR1_WriteTimer 02F8                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0057                                   __end_of_main 03E4  
                    ?_I2C_DO_SEND_RESTART_READ 0070                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0070  
                                       ??_main 0070                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 0444                             ??_I2C_MasterSetIrq 0070  
    __end_of_EUSART_DefaultFramingErrorHandler 0470            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 046F  
                   _EUSART_OverrunErrorHandler 005A                __end_of_I2C_CallbackReturnReset 046C  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l3000 03D7  
                                       i1l3010 01A0                                         i1l3002 03D9  
                                       i1l3100 02D4                                         i1l3020 01A9  
                                       i1l3004 03DC                                         i1l3102 02D8  
                                       i1l3014 01A4                                         i1l3104 02DE  
                                       u120_20 0245                                         i1l3016 01A7  
                                       i1l3008 019D                                         i1l3032 041D  
                                       i1l3040 0410                                         u104_20 01D2  
                                       u120_21 0244                                         u104_21 01D1  
                                       i1l3106 02DF                                         i1l3026 01AD  
                                       i1l3034 0420                                         i1l3042 0411  
                                       i1l3050 01F7                                         i1l3060 01FF  
                                       i1l3038 040E                                         i1l3054 01FB  
                                       i1l3046 01F2                                         u121_20 0257  
                                       i1l3048 01F4                                         i1l3320 01DA  
                                       u105_20 01DA                                         i1l3160 03A4  
                                       u121_21 0256                                         u105_21 01D9  
                                       i1l3322 01DD                                         i1l3314 01CA  
                                       i1l3330 02FD                                         i1l3324 0450  
                                       i1l2700 034E                                         i1l3316 01CD  
                                       i1l3340 0306                                         i1l3332 02FE  
                                       i1l3326 0454                                         i1l2702 0353  
                                       i1l2710 044C                                         i1l3318 01D2  
                                       i1l3342 0368                                         i1l3334 0300  
                                       u122_20 016E                                         i1l2704 0359  
                                       i1l2712 032B                                         i1l2720 031A  
                                       i1l3344 036F                                         i1l3336 0302  
                                       u106_20 02FD                                         i1l3328 02F8  
                                       u122_21 016D                                         u106_21 02FC  
                                       i1l3098 02CD                                         i1l2706 0467  
                                       i1l2714 0333                                         i1l2722 0322  
                                       i1l2730 0311                                         i1l2802 045B  
                                       i1l3338 0304                                         i1l2708 0464  
                                       i1l2740 034B                                         i1l2716 033A  
                                       i1l2724 0329                                         i1l2732 0318  
                                       i1l2804 046C                                         i1l3470 0245  
                                       i1l3462 0444                                         u123_20 017E  
                                       i1l3480 0164                                         i1l3472 024C  
                                       i1l2736 033C                                         i1l2728 0309  
                                       i1l2744 02B5                                         i1l2808 046A  
                                       i1l2752 0408                                         i1l2912 0436  
                                       i1l2920 03B7                                         i1l3800 0113  
                                       i1l2760 0434                                         u107_20 036F  
                                       i1l3464 035B                                         u123_21 017D  
                                       u107_21 036E                                         i1l3490 017E  
                                       i1l3482 0169                                         i1l3474 0251  
                                       i1l2738 0344                                         i1l2746 02CB  
                                       i1l2914 0438                                         i1l2922 03B9  
                                       i1l2930 03CA                                         i1l3802 00B4  
                                       i1l2770 0422                                         i1l3466 035D  
                                       i1l3492 0183                                         i1l3484 016E  
                                       i1l3476 0257                                         i1l3468 023E  
                                       i1l2692 021B                                         i1l2780 0448  
                                       i1l2756 043C                                         i1l3804 01BB  
                                       i1l2916 0439                                         i1l2924 03BE  
                                       i1l2932 03CE                                         i1l2940 0095  
                                       i1l2764 042C                                         i1l2772 0425  
                                       i1l3494 0189                                         i1l3486 0173  
                                       i1l3478 0258                                         i1l2694 0221  
                                       i1l2758 0431                                         i1l2766 042F  
                                       i1l2790 041B                                         i1l2782 0413  
                                       i1l3670 000A                                         i1l3496 0192  
                                       u124_20 0192                                         i1l3488 0179  
                                       i1l2696 0230                                         i1l2776 045E  
                                       i1l2928 03C8                                         i1l2960 00DB  
                                       i1l2944 0099                                         i1l2936 008C  
                                       i1l2784 0416                                         i1l3680 002F  
                                       i1l3672 000F                                         u124_21 0191  
                                       i1l3498 0199                                         i1l2698 0399  
                                       i1l2794 0461                                         i1l2962 00DD  
                                       i1l2954 00A1                                         i1l2970 00DF  
                                       i1l2874 0458                                         i1l3690 004F  
                                       i1l3682 0034                                         i1l3674 0014  
                                       i1l2956 00C4                                         i1l2948 009D  
                                       i1l2972 00E7                                         i1l2796 0427  
                                       i1l2788 0418                                         i1l3684 003F  
                                       i1l3676 001F                                         i1l3668 0006  
                                       i1l2958 00D0                                         i1l2974 00EC  
                                       i1l2798 042A                                         i1l3678 0024  
                                       i1l2984 00FD                                         i1l2976 00F6  
                                       i1l3688 004A                                         i1l2994 0105  
                                       i1l2978 00F9                                         i1l2988 0101  
                                       i1l3798 0211                                         u150_20 003F  
                                       u150_21 003E                                         u151_20 0044  
                                       u143_20 000A                                         u151_21 0043  
                                       u143_21 0009                                         u152_20 004A  
                                       u144_20 000F                                         u152_21 0049  
                                       u144_21 000E                                         u153_20 004F  
                                       u145_20 0014                                         u153_21 004E  
                                       u145_21 0013                                         u146_20 001F  
                                       u146_21 001E                                         u147_20 0024  
                                       u147_21 0023                                         u148_20 002F  
                                       u148_21 002E                                         u149_20 0034  
                                       u149_21 0033                                         _MB_UID 0045  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 045E           __end_of_TMR1_DefaultInterruptHandler 046F  
                 _TMR1_DefaultInterruptHandler 046E                                  _I2C_MasterFsm 01CA  
                                _I2C_MasterIsr 0444                            _EUSART_Transmit_ISR 023E  
                            I2C_SetCallback@cb 0070                                  _I2C_SetBuffer 034D  
                          _I2C_DO_ADDRESS_NACK 01F2                           ?_I2C_MasterGetRxData 0070  
                                 ?_rtcc_handle 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070       TMR1_SetInterruptHandler@InterruptHandler 006E  
                      __end_of_TMR1_WriteTimer 0309                           ?_EUSART_Transmit_ISR 0070  
                        __end_of_TMR1_CallBack 0375                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 02E5                        __end_of__initialization 0088  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 03F0                   _EUSART_SetTxInterruptHandler 03EA  
                      _rdBlkRegCompleteHandler 02B5                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK0 0375  
                       _I2C_CallbackReturnStop 046C                            ??_SYSTEM_Initialize 0070  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                         __end_of_fctsupported 03C8                                 ?_I2C_SetBuffer 0070  
                __end_of_I2C_DO_SEND_ADR_WRITE 03D0                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 00A0                     __end_of_I2C_MasterClearIrq 045B  
              ??_EUSART_SetOverrunErrorHandler 0070                      __end_of_SYSTEM_Initialize 02F8  
                        ??_EUSART_Transmit_ISR 0070                              _I2C_MasterSendAck 0448  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                ??_I2C_DO_IDLE 0070                                  ??_I2C_DO_RCEN 0070  
                __end_of_rd2RegCompleteHandler 032B                   __end_of_I2C_MasterSendTxData 0440  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 0461  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 034D  
                          _I2C_DO_RX_NACK_STOP 0418                          _rd1RegCompleteHandler 032B  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 0450  
                        _wr1RegCompleteHandler 0309                                     __pmaintext 03DE  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0077  
                ?_EUSART_SetTxInterruptHandler 006E               _EUSART_TxDefaultInterruptHandler 0060  
                  __end_of_I2C_DO_SEND_RESTART 042C                                _I2C_DO_TX_EMPTY 019D  
                          I2C_SetBuffer@buffer 0072                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0071  
               I2C_SetDataCompleteCallback@ptr 0076                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0431                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 004A                      __end_of_I2C_MasterSendAck 044C  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0070  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 0464                   ?_I2C_SetDataCompleteCallback 0074  
                                    _I2C_DO_RX 00DF                                      _I2C_DO_TX 008C  
             __end_of_I2C_DO_SEND_RESTART_READ 0436                      ??_rdBlkRegCompleteHandler 0078  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 043B                            __end_of_I2C_DO_RCEN 03DE  
                              ??_I2C_SetBuffer 0072                        I2C_SetBuffer@bufferSize 0070  
                                  _Temperature 0054                                 _I2C_MasterStop 0464  
                               _I2C_Initialize 03AE                                        __ptext1 02E5  
                                      __ptext2 0440                                        __ptext3 029C  
                                      __ptext4 03E4                                        __ptext5 0280  
                                      __ptext6 03D0                                        __ptext7 03AE  
                                      __ptext8 0122                                        __ptext9 03EA  
                        ??_I2C_DO_RX_NACK_STOP 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 03D0  
                           I2C_SetCallback@idx 0073                       ??_PIN_MANAGER_Initialize 006E  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 006E  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 006A                                        clrloop0 038E  
                   _SHT30_CMD_MEASURE_L_Enable 0066                           end_of_initialization 0088  
                   _SHT30_CMD_MEASURE_M_Enable 0068                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 03FC  
                _EUSART_SetOverrunErrorHandler 03F6                                        init_ram 0381  
                       ?_rd1RegCompleteHandler 0077                                        initloop 0382  
                      __end_of_I2C_DO_TX_EMPTY 01CA                              _EUSART_Initialize 0122  
                  _SHT30_CMD_MEASURE_H_Disable 006C                         ?_wr1RegCompleteHandler 0077  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 0467                         __end_of_I2C_Initialize 03B7  
                  _SHT30_CMD_MEASURE_L_Disable 0062                    _SHT30_CMD_MEASURE_M_Disable 0064  
                          ??_EUSART_Initialize 0070                               ??_WDT_Initialize 006E  
               ??_EUSART_SetTxInterruptHandler 0070                __end_of_rdBlkRegCompleteHandler 02CD  
                         _I2C_MasterSendTxData 043B                                    _f_Indicator 0046  
                                 _fctsupported 03C0                      __end_of_EUSART_Initialize 0164  
                                  _I2C_DO_IDLE 0436                                    _I2C_DO_RCEN 03D7  
                   rdBlkRegCompleteHandler@ptr 0077                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 0431  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 046A  
           __end_of_EUSART_DefaultErrorHandler 0458                     _EUSART_DefaultErrorHandler 0454  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                            start_initialization 0057  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 006E  
 EUSART_SetTxInterruptHandler@interruptHandler 006E                                    ??_I2C_DO_RX 0078  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 046E  
                       _I2C_DO_RX_NACK_RESTART 0413                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0458                 ?_EUSART_SetOverrunErrorHandler 006E  
                   _EUSART_FramingErrorHandler 005C                         _EUSART_SetErrorHandler 0402  
                          ?_I2C_MasterClearIrq 0070                    __end_of_I2C_MasterGetRxData 0461  
                                  __pdataBANK0 0062                          __end_of_I2C_DO_RX_ACK 0422  
                             _I2C_DO_SEND_STOP 0422                              ??_I2C_SetCallback 0073  
                           _I2C_MasterSendNack 044C                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 0260                                    __pbssBIGRAM 20D4  
                  __end_of_EUSART_Transmit_ISR 0260                          _I2C_DO_SEND_ADR_WRITE 03C8  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 006E                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 03C0  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 021A  
                   __end_of_EUSART_Receive_ISR 019D                               _I2C_MasterIsNack 0408  
                    _I2C_DO_SEND_RESTART_WRITE 042C               _EUSART_RxDefaultInterruptHandler 005E  
                             _I2C_MasterSetIrq 045B                                      __pnvBANK0 0056  
                        _rd2RegCompleteHandler 031A                   __end_of_EUSART_RxDataHandler 02E5  
                       _PIN_MANAGER_Initialize 0280                          _wr2RegCompleteHandler 033C  
                    ??_I2C_CallbackReturnReset 0078                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 03EA  
                                 _eusartRxHead 007D                                   _eusartTxHead 004D  
                                 _eusartRxTail 007C                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 004C                      __end_of_i2c_fsmStateTable 0280  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 004B  
                                  _device_time 003D                        ??_rd1RegCompleteHandler 0078  
                               _eusartRxBuffer 00B0                        ??_wr1RegCompleteHandler 0078  
                                _TMR1_CallBack 0368                                 _eusartTxBuffer 00C0  
       EUSART_SetErrorHandler@interruptHandler 006E                                       _LATCbits 010E  
                                    clear_ram0 038D                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0049  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0070  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 01F2  
                        __end_of_I2C_MasterIsr 0448                    __end_of_I2C_DO_RX_NACK_STOP 041D  
    __end_of_EUSART_DefaultOverrunErrorHandler 0454            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0450  
                                     _TMR1_ISR 035B                __end_of_I2C_MasterEnableRestart 046A  
                        __end_of_I2C_SetBuffer 035B                              ??_TMR1_Initialize 0070  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                                ??_rtcc_handle 0070                       wr2RegCompleteHandler@ptr 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0077  
                               ?_TMR1_CallBack 0070                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                                       _Humidity 0052  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 006E                           __end_of_I2C_DO_RESET 0413  
                      ??_OSCILLATOR_Initialize 006E                            _EUSART_ErrorHandler 0058  
                         _I2C_DO_SEND_ADR_READ 03B7                    ?_EUSART_DefaultErrorHandler 0070  
                     _TMR1_SetInterruptHandler 03E4                          _TMR1_InterruptHandler 0056  
                         _EUSART_RxDataHandler 02CD                                       __ptext10 03F0  
                                     __ptext11 03F6                                       __ptext20 0444  
                                     __ptext12 03FC                                       __ptext21 01CA  
                                     __ptext13 0402                                     _T1GCONbits 0019  
                                     __ptext30 042C                                       __ptext22 0458  
                                     __ptext31 0431                                       __ptext23 01F2  
                                     __ptext15 035B                                       __ptext40 0408  
                                     __ptext32 03D7                                       __ptext24 040E  
                                     __ptext16 02F8                                       __ptext41 043B  
                                     __ptext33 00DF                                       __ptext25 0413  
                                     __ptext17 0368                                       __ptext50 031A  
                                     __ptext42 0448                                       __ptext34 008C  
                                     __ptext26 0418                                       __ptext18 046E  
                                     __ptext51 032B                                       __ptext43 045E  
                                     __ptext35 03C8                                       __ptext27 041D  
                                     __ptext19 03A4                                       __ptext60 0450  
                                     __ptext52 033C                                       __ptext44 044C  
                                     __ptext36 03B7                                       __ptext28 0422  
                                     __ptext61 046F                                       __ptext53 0399  
                                     __ptext45 0461                                       __ptext37 0436  
                                     __ptext29 0427                                       __ptext62 0454  
                                     __ptext54 021A                                       __ptext46 046A  
                                     __ptext38 019D                                       __ptext63 02CD  
                                     __ptext55 034D                                       __ptext47 046C  
                                     __ptext39 045B                                       __ptext56 0464  
                                     __ptext48 02B5                                       __ptext57 0467  
                                     __ptext49 0309                                       __ptext58 023E  
                                     __ptext59 0164            __end_of_I2C_SetDataCompleteCallback 03A4  
                  _I2C_SetDataCompleteCallback 0399                        ?_I2C_DO_RX_NACK_RESTART 0070  
                          __end_of_rtcc_handle 03AE                       __end_of_I2C_DO_SEND_STOP 0427  
                      ?_EUSART_SetErrorHandler 006E                                _I2C_SetCallback 021A  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 006E  
                                  _MB_Register 004E                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0055  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0402  
                _EUSART_SetFramingErrorHandler 03FC                              ??_TMR1_WriteTimer 0072  
                     __end_of_I2C_MasterIsNack 040E                       __end_of_I2C_MasterSetIrq 045E  
                                   _LED_Statuc 0048                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 0418  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0408  
                          _I2C_DO_SEND_RESTART 0427           __end_of_EUSART_SetRxInterruptHandler 03F6  
                 _EUSART_SetRxInterruptHandler 03F0                             _EUSART_Receive_ISR 0164  
EUSART_SetFramingErrorHandler@interruptHandler 006E                                  __pstringtext1 0260  
                                __pstringtext2 03C0                           ?_I2C_DO_SEND_RESTART 0070  
                          ?_EUSART_Receive_ISR 0070                                    _rtcc_handle 03A4  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                                   _SES_Modbus 20D4                        __end_of_I2C_SetCallback 023E  
               __end_of_PIN_MANAGER_Initialize 029C                  __end_of_rd1RegCompleteHandler 033C  
                         ??_EUSART_Receive_ISR 0071                  __end_of_wr1RegCompleteHandler 031A  
                        _MSSP_InterruptHandler 0043                                _TMR1_Initialize 029C  
