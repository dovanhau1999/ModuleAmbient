

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 11 15:09:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x320,16
    84                           	dabs	1,0x2A0,80
    85                           	dabs	1,0x220,80
    86                           	dabs	1,0x1A0,80
    87                           	dabs	1,0x154,28
    88                           	dabs	1,0x20D4,0,_SES_Modbus
    89                           	dabs	1,0x7E,2
    90     0000                     
    91                           ; Version 2.40
    92                           ; Generated 17/11/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC16F1936 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0090                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0095                     	;# 
   164     0096                     	;# 
   165     0097                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009A                     	;# 
   169     009B                     	;# 
   170     009B                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     0110                     	;# 
   178     0111                     	;# 
   179     0112                     	;# 
   180     0113                     	;# 
   181     0114                     	;# 
   182     0115                     	;# 
   183     0116                     	;# 
   184     0117                     	;# 
   185     0118                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011B                     	;# 
   189     011D                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192     0191                     	;# 
   193     0191                     	;# 
   194     0192                     	;# 
   195     0193                     	;# 
   196     0193                     	;# 
   197     0193                     	;# 
   198     0194                     	;# 
   199     0195                     	;# 
   200     0196                     	;# 
   201     0199                     	;# 
   202     019A                     	;# 
   203     019B                     	;# 
   204     019B                     	;# 
   205     019B                     	;# 
   206     019B                     	;# 
   207     019C                     	;# 
   208     019C                     	;# 
   209     019D                     	;# 
   210     019E                     	;# 
   211     019F                     	;# 
   212     020D                     	;# 
   213     0210                     	;# 
   214     0211                     	;# 
   215     0212                     	;# 
   216     0213                     	;# 
   217     0214                     	;# 
   218     0215                     	;# 
   219     0215                     	;# 
   220     0216                     	;# 
   221     0217                     	;# 
   222     0291                     	;# 
   223     0291                     	;# 
   224     0292                     	;# 
   225     0293                     	;# 
   226     0294                     	;# 
   227     0295                     	;# 
   228     0295                     	;# 
   229     0296                     	;# 
   230     0298                     	;# 
   231     0298                     	;# 
   232     0299                     	;# 
   233     029A                     	;# 
   234     029B                     	;# 
   235     029C                     	;# 
   236     029C                     	;# 
   237     029D                     	;# 
   238     029E                     	;# 
   239     029F                     	;# 
   240     0311                     	;# 
   241     0311                     	;# 
   242     0312                     	;# 
   243     0313                     	;# 
   244     0314                     	;# 
   245     0315                     	;# 
   246     0315                     	;# 
   247     0316                     	;# 
   248     0318                     	;# 
   249     0318                     	;# 
   250     0319                     	;# 
   251     031A                     	;# 
   252     031C                     	;# 
   253     031C                     	;# 
   254     031D                     	;# 
   255     031E                     	;# 
   256     0394                     	;# 
   257     0395                     	;# 
   258     0396                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0791                     	;# 
   266     0792                     	;# 
   267     0793                     	;# 
   268     0794                     	;# 
   269     0795                     	;# 
   270     0798                     	;# 
   271     0799                     	;# 
   272     07A0                     	;# 
   273     07A1                     	;# 
   274     07A3                     	;# 
   275     07A4                     	;# 
   276     07A6                     	;# 
   277     07A7                     	;# 
   278     07A9                     	;# 
   279     07AA                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0015                     	;# 
   311     0016                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001C                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     008C                     	;# 
   322     008D                     	;# 
   323     008E                     	;# 
   324     0090                     	;# 
   325     0091                     	;# 
   326     0092                     	;# 
   327     0093                     	;# 
   328     0095                     	;# 
   329     0096                     	;# 
   330     0097                     	;# 
   331     0098                     	;# 
   332     0099                     	;# 
   333     009A                     	;# 
   334     009B                     	;# 
   335     009B                     	;# 
   336     009C                     	;# 
   337     009D                     	;# 
   338     009E                     	;# 
   339     010C                     	;# 
   340     010D                     	;# 
   341     010E                     	;# 
   342     0110                     	;# 
   343     0111                     	;# 
   344     0112                     	;# 
   345     0113                     	;# 
   346     0114                     	;# 
   347     0115                     	;# 
   348     0116                     	;# 
   349     0117                     	;# 
   350     0118                     	;# 
   351     0119                     	;# 
   352     011A                     	;# 
   353     011B                     	;# 
   354     011D                     	;# 
   355     018C                     	;# 
   356     018D                     	;# 
   357     0191                     	;# 
   358     0191                     	;# 
   359     0192                     	;# 
   360     0193                     	;# 
   361     0193                     	;# 
   362     0193                     	;# 
   363     0194                     	;# 
   364     0195                     	;# 
   365     0196                     	;# 
   366     0199                     	;# 
   367     019A                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019B                     	;# 
   371     019B                     	;# 
   372     019C                     	;# 
   373     019C                     	;# 
   374     019D                     	;# 
   375     019E                     	;# 
   376     019F                     	;# 
   377     020D                     	;# 
   378     0210                     	;# 
   379     0211                     	;# 
   380     0212                     	;# 
   381     0213                     	;# 
   382     0214                     	;# 
   383     0215                     	;# 
   384     0215                     	;# 
   385     0216                     	;# 
   386     0217                     	;# 
   387     0291                     	;# 
   388     0291                     	;# 
   389     0292                     	;# 
   390     0293                     	;# 
   391     0294                     	;# 
   392     0295                     	;# 
   393     0295                     	;# 
   394     0296                     	;# 
   395     0298                     	;# 
   396     0298                     	;# 
   397     0299                     	;# 
   398     029A                     	;# 
   399     029B                     	;# 
   400     029C                     	;# 
   401     029C                     	;# 
   402     029D                     	;# 
   403     029E                     	;# 
   404     029F                     	;# 
   405     0311                     	;# 
   406     0311                     	;# 
   407     0312                     	;# 
   408     0313                     	;# 
   409     0314                     	;# 
   410     0315                     	;# 
   411     0315                     	;# 
   412     0316                     	;# 
   413     0318                     	;# 
   414     0318                     	;# 
   415     0319                     	;# 
   416     031A                     	;# 
   417     031C                     	;# 
   418     031C                     	;# 
   419     031D                     	;# 
   420     031E                     	;# 
   421     0394                     	;# 
   422     0395                     	;# 
   423     0396                     	;# 
   424     0415                     	;# 
   425     0416                     	;# 
   426     0417                     	;# 
   427     041C                     	;# 
   428     041D                     	;# 
   429     041E                     	;# 
   430     0791                     	;# 
   431     0792                     	;# 
   432     0793                     	;# 
   433     0794                     	;# 
   434     0795                     	;# 
   435     0798                     	;# 
   436     0799                     	;# 
   437     07A0                     	;# 
   438     07A1                     	;# 
   439     07A3                     	;# 
   440     07A4                     	;# 
   441     07A6                     	;# 
   442     07A7                     	;# 
   443     07A9                     	;# 
   444     07AA                     	;# 
   445     0FE4                     	;# 
   446     0FE5                     	;# 
   447     0FE6                     	;# 
   448     0FE7                     	;# 
   449     0FE8                     	;# 
   450     0FE9                     	;# 
   451     0FEA                     	;# 
   452     0FEB                     	;# 
   453     0FED                     	;# 
   454     0FEE                     	;# 
   455     0FEF                     	;# 
   456     0000                     	;# 
   457     0001                     	;# 
   458     0002                     	;# 
   459     0003                     	;# 
   460     0004                     	;# 
   461     0005                     	;# 
   462     0006                     	;# 
   463     0007                     	;# 
   464     0008                     	;# 
   465     0009                     	;# 
   466     000A                     	;# 
   467     000B                     	;# 
   468     000C                     	;# 
   469     000D                     	;# 
   470     000E                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0015                     	;# 
   476     0016                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001C                     	;# 
   484     001E                     	;# 
   485     001F                     	;# 
   486     008C                     	;# 
   487     008D                     	;# 
   488     008E                     	;# 
   489     0090                     	;# 
   490     0091                     	;# 
   491     0092                     	;# 
   492     0093                     	;# 
   493     0095                     	;# 
   494     0096                     	;# 
   495     0097                     	;# 
   496     0098                     	;# 
   497     0099                     	;# 
   498     009A                     	;# 
   499     009B                     	;# 
   500     009B                     	;# 
   501     009C                     	;# 
   502     009D                     	;# 
   503     009E                     	;# 
   504     010C                     	;# 
   505     010D                     	;# 
   506     010E                     	;# 
   507     0110                     	;# 
   508     0111                     	;# 
   509     0112                     	;# 
   510     0113                     	;# 
   511     0114                     	;# 
   512     0115                     	;# 
   513     0116                     	;# 
   514     0117                     	;# 
   515     0118                     	;# 
   516     0119                     	;# 
   517     011A                     	;# 
   518     011B                     	;# 
   519     011D                     	;# 
   520     018C                     	;# 
   521     018D                     	;# 
   522     0191                     	;# 
   523     0191                     	;# 
   524     0192                     	;# 
   525     0193                     	;# 
   526     0193                     	;# 
   527     0193                     	;# 
   528     0194                     	;# 
   529     0195                     	;# 
   530     0196                     	;# 
   531     0199                     	;# 
   532     019A                     	;# 
   533     019B                     	;# 
   534     019B                     	;# 
   535     019B                     	;# 
   536     019B                     	;# 
   537     019C                     	;# 
   538     019C                     	;# 
   539     019D                     	;# 
   540     019E                     	;# 
   541     019F                     	;# 
   542     020D                     	;# 
   543     0210                     	;# 
   544     0211                     	;# 
   545     0212                     	;# 
   546     0213                     	;# 
   547     0214                     	;# 
   548     0215                     	;# 
   549     0215                     	;# 
   550     0216                     	;# 
   551     0217                     	;# 
   552     0291                     	;# 
   553     0291                     	;# 
   554     0292                     	;# 
   555     0293                     	;# 
   556     0294                     	;# 
   557     0295                     	;# 
   558     0295                     	;# 
   559     0296                     	;# 
   560     0298                     	;# 
   561     0298                     	;# 
   562     0299                     	;# 
   563     029A                     	;# 
   564     029B                     	;# 
   565     029C                     	;# 
   566     029C                     	;# 
   567     029D                     	;# 
   568     029E                     	;# 
   569     029F                     	;# 
   570     0311                     	;# 
   571     0311                     	;# 
   572     0312                     	;# 
   573     0313                     	;# 
   574     0314                     	;# 
   575     0315                     	;# 
   576     0315                     	;# 
   577     0316                     	;# 
   578     0318                     	;# 
   579     0318                     	;# 
   580     0319                     	;# 
   581     031A                     	;# 
   582     031C                     	;# 
   583     031C                     	;# 
   584     031D                     	;# 
   585     031E                     	;# 
   586     0394                     	;# 
   587     0395                     	;# 
   588     0396                     	;# 
   589     0415                     	;# 
   590     0416                     	;# 
   591     0417                     	;# 
   592     041C                     	;# 
   593     041D                     	;# 
   594     041E                     	;# 
   595     0791                     	;# 
   596     0792                     	;# 
   597     0793                     	;# 
   598     0794                     	;# 
   599     0795                     	;# 
   600     0798                     	;# 
   601     0799                     	;# 
   602     07A0                     	;# 
   603     07A1                     	;# 
   604     07A3                     	;# 
   605     07A4                     	;# 
   606     07A6                     	;# 
   607     07A7                     	;# 
   608     07A9                     	;# 
   609     07AA                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     0010                     	;# 
   637     0011                     	;# 
   638     0012                     	;# 
   639     0013                     	;# 
   640     0015                     	;# 
   641     0016                     	;# 
   642     0016                     	;# 
   643     0017                     	;# 
   644     0018                     	;# 
   645     0019                     	;# 
   646     001A                     	;# 
   647     001B                     	;# 
   648     001C                     	;# 
   649     001E                     	;# 
   650     001F                     	;# 
   651     008C                     	;# 
   652     008D                     	;# 
   653     008E                     	;# 
   654     0090                     	;# 
   655     0091                     	;# 
   656     0092                     	;# 
   657     0093                     	;# 
   658     0095                     	;# 
   659     0096                     	;# 
   660     0097                     	;# 
   661     0098                     	;# 
   662     0099                     	;# 
   663     009A                     	;# 
   664     009B                     	;# 
   665     009B                     	;# 
   666     009C                     	;# 
   667     009D                     	;# 
   668     009E                     	;# 
   669     010C                     	;# 
   670     010D                     	;# 
   671     010E                     	;# 
   672     0110                     	;# 
   673     0111                     	;# 
   674     0112                     	;# 
   675     0113                     	;# 
   676     0114                     	;# 
   677     0115                     	;# 
   678     0116                     	;# 
   679     0117                     	;# 
   680     0118                     	;# 
   681     0119                     	;# 
   682     011A                     	;# 
   683     011B                     	;# 
   684     011D                     	;# 
   685     018C                     	;# 
   686     018D                     	;# 
   687     0191                     	;# 
   688     0191                     	;# 
   689     0192                     	;# 
   690     0193                     	;# 
   691     0193                     	;# 
   692     0193                     	;# 
   693     0194                     	;# 
   694     0195                     	;# 
   695     0196                     	;# 
   696     0199                     	;# 
   697     019A                     	;# 
   698     019B                     	;# 
   699     019B                     	;# 
   700     019B                     	;# 
   701     019B                     	;# 
   702     019C                     	;# 
   703     019C                     	;# 
   704     019D                     	;# 
   705     019E                     	;# 
   706     019F                     	;# 
   707     020D                     	;# 
   708     0210                     	;# 
   709     0211                     	;# 
   710     0212                     	;# 
   711     0213                     	;# 
   712     0214                     	;# 
   713     0215                     	;# 
   714     0215                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0291                     	;# 
   718     0291                     	;# 
   719     0292                     	;# 
   720     0293                     	;# 
   721     0294                     	;# 
   722     0295                     	;# 
   723     0295                     	;# 
   724     0296                     	;# 
   725     0298                     	;# 
   726     0298                     	;# 
   727     0299                     	;# 
   728     029A                     	;# 
   729     029B                     	;# 
   730     029C                     	;# 
   731     029C                     	;# 
   732     029D                     	;# 
   733     029E                     	;# 
   734     029F                     	;# 
   735     0311                     	;# 
   736     0311                     	;# 
   737     0312                     	;# 
   738     0313                     	;# 
   739     0314                     	;# 
   740     0315                     	;# 
   741     0315                     	;# 
   742     0316                     	;# 
   743     0318                     	;# 
   744     0318                     	;# 
   745     0319                     	;# 
   746     031A                     	;# 
   747     031C                     	;# 
   748     031C                     	;# 
   749     031D                     	;# 
   750     031E                     	;# 
   751     0394                     	;# 
   752     0395                     	;# 
   753     0396                     	;# 
   754     0415                     	;# 
   755     0416                     	;# 
   756     0417                     	;# 
   757     041C                     	;# 
   758     041D                     	;# 
   759     041E                     	;# 
   760     0791                     	;# 
   761     0792                     	;# 
   762     0793                     	;# 
   763     0794                     	;# 
   764     0795                     	;# 
   765     0798                     	;# 
   766     0799                     	;# 
   767     07A0                     	;# 
   768     07A1                     	;# 
   769     07A3                     	;# 
   770     07A4                     	;# 
   771     07A6                     	;# 
   772     07A7                     	;# 
   773     07A9                     	;# 
   774     07AA                     	;# 
   775     0FE4                     	;# 
   776     0FE5                     	;# 
   777     0FE6                     	;# 
   778     0FE7                     	;# 
   779     0FE8                     	;# 
   780     0FE9                     	;# 
   781     0FEA                     	;# 
   782     0FEB                     	;# 
   783     0FED                     	;# 
   784     0FEE                     	;# 
   785     0FEF                     	;# 
   786     0000                     	;# 
   787     0001                     	;# 
   788     0002                     	;# 
   789     0003                     	;# 
   790     0004                     	;# 
   791     0005                     	;# 
   792     0006                     	;# 
   793     0007                     	;# 
   794     0008                     	;# 
   795     0009                     	;# 
   796     000A                     	;# 
   797     000B                     	;# 
   798     000C                     	;# 
   799     000D                     	;# 
   800     000E                     	;# 
   801     0010                     	;# 
   802     0011                     	;# 
   803     0012                     	;# 
   804     0013                     	;# 
   805     0015                     	;# 
   806     0016                     	;# 
   807     0016                     	;# 
   808     0017                     	;# 
   809     0018                     	;# 
   810     0019                     	;# 
   811     001A                     	;# 
   812     001B                     	;# 
   813     001C                     	;# 
   814     001E                     	;# 
   815     001F                     	;# 
   816     008C                     	;# 
   817     008D                     	;# 
   818     008E                     	;# 
   819     0090                     	;# 
   820     0091                     	;# 
   821     0092                     	;# 
   822     0093                     	;# 
   823     0095                     	;# 
   824     0096                     	;# 
   825     0097                     	;# 
   826     0098                     	;# 
   827     0099                     	;# 
   828     009A                     	;# 
   829     009B                     	;# 
   830     009B                     	;# 
   831     009C                     	;# 
   832     009D                     	;# 
   833     009E                     	;# 
   834     010C                     	;# 
   835     010D                     	;# 
   836     010E                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011B                     	;# 
   849     011D                     	;# 
   850     018C                     	;# 
   851     018D                     	;# 
   852     0191                     	;# 
   853     0191                     	;# 
   854     0192                     	;# 
   855     0193                     	;# 
   856     0193                     	;# 
   857     0193                     	;# 
   858     0194                     	;# 
   859     0195                     	;# 
   860     0196                     	;# 
   861     0199                     	;# 
   862     019A                     	;# 
   863     019B                     	;# 
   864     019B                     	;# 
   865     019B                     	;# 
   866     019B                     	;# 
   867     019C                     	;# 
   868     019C                     	;# 
   869     019D                     	;# 
   870     019E                     	;# 
   871     019F                     	;# 
   872     020D                     	;# 
   873     0210                     	;# 
   874     0211                     	;# 
   875     0212                     	;# 
   876     0213                     	;# 
   877     0214                     	;# 
   878     0215                     	;# 
   879     0215                     	;# 
   880     0216                     	;# 
   881     0217                     	;# 
   882     0291                     	;# 
   883     0291                     	;# 
   884     0292                     	;# 
   885     0293                     	;# 
   886     0294                     	;# 
   887     0295                     	;# 
   888     0295                     	;# 
   889     0296                     	;# 
   890     0298                     	;# 
   891     0298                     	;# 
   892     0299                     	;# 
   893     029A                     	;# 
   894     029B                     	;# 
   895     029C                     	;# 
   896     029C                     	;# 
   897     029D                     	;# 
   898     029E                     	;# 
   899     029F                     	;# 
   900     0311                     	;# 
   901     0311                     	;# 
   902     0312                     	;# 
   903     0313                     	;# 
   904     0314                     	;# 
   905     0315                     	;# 
   906     0315                     	;# 
   907     0316                     	;# 
   908     0318                     	;# 
   909     0318                     	;# 
   910     0319                     	;# 
   911     031A                     	;# 
   912     031C                     	;# 
   913     031C                     	;# 
   914     031D                     	;# 
   915     031E                     	;# 
   916     0394                     	;# 
   917     0395                     	;# 
   918     0396                     	;# 
   919     0415                     	;# 
   920     0416                     	;# 
   921     0417                     	;# 
   922     041C                     	;# 
   923     041D                     	;# 
   924     041E                     	;# 
   925     0791                     	;# 
   926     0792                     	;# 
   927     0793                     	;# 
   928     0794                     	;# 
   929     0795                     	;# 
   930     0798                     	;# 
   931     0799                     	;# 
   932     07A0                     	;# 
   933     07A1                     	;# 
   934     07A3                     	;# 
   935     07A4                     	;# 
   936     07A6                     	;# 
   937     07A7                     	;# 
   938     07A9                     	;# 
   939     07AA                     	;# 
   940     0FE4                     	;# 
   941     0FE5                     	;# 
   942     0FE6                     	;# 
   943     0FE7                     	;# 
   944     0FE8                     	;# 
   945     0FE9                     	;# 
   946     0FEA                     	;# 
   947     0FEB                     	;# 
   948     0FED                     	;# 
   949     0FEE                     	;# 
   950     0FEF                     	;# 
   951     0000                     	;# 
   952     0001                     	;# 
   953     0002                     	;# 
   954     0003                     	;# 
   955     0004                     	;# 
   956     0005                     	;# 
   957     0006                     	;# 
   958     0007                     	;# 
   959     0008                     	;# 
   960     0009                     	;# 
   961     000A                     	;# 
   962     000B                     	;# 
   963     000C                     	;# 
   964     000D                     	;# 
   965     000E                     	;# 
   966     0010                     	;# 
   967     0011                     	;# 
   968     0012                     	;# 
   969     0013                     	;# 
   970     0015                     	;# 
   971     0016                     	;# 
   972     0016                     	;# 
   973     0017                     	;# 
   974     0018                     	;# 
   975     0019                     	;# 
   976     001A                     	;# 
   977     001B                     	;# 
   978     001C                     	;# 
   979     001E                     	;# 
   980     001F                     	;# 
   981     008C                     	;# 
   982     008D                     	;# 
   983     008E                     	;# 
   984     0090                     	;# 
   985     0091                     	;# 
   986     0092                     	;# 
   987     0093                     	;# 
   988     0095                     	;# 
   989     0096                     	;# 
   990     0097                     	;# 
   991     0098                     	;# 
   992     0099                     	;# 
   993     009A                     	;# 
   994     009B                     	;# 
   995     009B                     	;# 
   996     009C                     	;# 
   997     009D                     	;# 
   998     009E                     	;# 
   999     010C                     	;# 
  1000     010D                     	;# 
  1001     010E                     	;# 
  1002     0110                     	;# 
  1003     0111                     	;# 
  1004     0112                     	;# 
  1005     0113                     	;# 
  1006     0114                     	;# 
  1007     0115                     	;# 
  1008     0116                     	;# 
  1009     0117                     	;# 
  1010     0118                     	;# 
  1011     0119                     	;# 
  1012     011A                     	;# 
  1013     011B                     	;# 
  1014     011D                     	;# 
  1015     018C                     	;# 
  1016     018D                     	;# 
  1017     0191                     	;# 
  1018     0191                     	;# 
  1019     0192                     	;# 
  1020     0193                     	;# 
  1021     0193                     	;# 
  1022     0193                     	;# 
  1023     0194                     	;# 
  1024     0195                     	;# 
  1025     0196                     	;# 
  1026     0199                     	;# 
  1027     019A                     	;# 
  1028     019B                     	;# 
  1029     019B                     	;# 
  1030     019B                     	;# 
  1031     019B                     	;# 
  1032     019C                     	;# 
  1033     019C                     	;# 
  1034     019D                     	;# 
  1035     019E                     	;# 
  1036     019F                     	;# 
  1037     020D                     	;# 
  1038     0210                     	;# 
  1039     0211                     	;# 
  1040     0212                     	;# 
  1041     0213                     	;# 
  1042     0214                     	;# 
  1043     0215                     	;# 
  1044     0215                     	;# 
  1045     0216                     	;# 
  1046     0217                     	;# 
  1047     0291                     	;# 
  1048     0291                     	;# 
  1049     0292                     	;# 
  1050     0293                     	;# 
  1051     0294                     	;# 
  1052     0295                     	;# 
  1053     0295                     	;# 
  1054     0296                     	;# 
  1055     0298                     	;# 
  1056     0298                     	;# 
  1057     0299                     	;# 
  1058     029A                     	;# 
  1059     029B                     	;# 
  1060     029C                     	;# 
  1061     029C                     	;# 
  1062     029D                     	;# 
  1063     029E                     	;# 
  1064     029F                     	;# 
  1065     0311                     	;# 
  1066     0311                     	;# 
  1067     0312                     	;# 
  1068     0313                     	;# 
  1069     0314                     	;# 
  1070     0315                     	;# 
  1071     0315                     	;# 
  1072     0316                     	;# 
  1073     0318                     	;# 
  1074     0318                     	;# 
  1075     0319                     	;# 
  1076     031A                     	;# 
  1077     031C                     	;# 
  1078     031C                     	;# 
  1079     031D                     	;# 
  1080     031E                     	;# 
  1081     0394                     	;# 
  1082     0395                     	;# 
  1083     0396                     	;# 
  1084     0415                     	;# 
  1085     0416                     	;# 
  1086     0417                     	;# 
  1087     041C                     	;# 
  1088     041D                     	;# 
  1089     041E                     	;# 
  1090     0791                     	;# 
  1091     0792                     	;# 
  1092     0793                     	;# 
  1093     0794                     	;# 
  1094     0795                     	;# 
  1095     0798                     	;# 
  1096     0799                     	;# 
  1097     07A0                     	;# 
  1098     07A1                     	;# 
  1099     07A3                     	;# 
  1100     07A4                     	;# 
  1101     07A6                     	;# 
  1102     07A7                     	;# 
  1103     07A9                     	;# 
  1104     07AA                     	;# 
  1105     0FE4                     	;# 
  1106     0FE5                     	;# 
  1107     0FE6                     	;# 
  1108     0FE7                     	;# 
  1109     0FE8                     	;# 
  1110     0FE9                     	;# 
  1111     0FEA                     	;# 
  1112     0FEB                     	;# 
  1113     0FED                     	;# 
  1114     0FEE                     	;# 
  1115     0FEF                     	;# 
  1116     0000                     	;# 
  1117     0001                     	;# 
  1118     0002                     	;# 
  1119     0003                     	;# 
  1120     0004                     	;# 
  1121     0005                     	;# 
  1122     0006                     	;# 
  1123     0007                     	;# 
  1124     0008                     	;# 
  1125     0009                     	;# 
  1126     000A                     	;# 
  1127     000B                     	;# 
  1128     000C                     	;# 
  1129     000D                     	;# 
  1130     000E                     	;# 
  1131     0010                     	;# 
  1132     0011                     	;# 
  1133     0012                     	;# 
  1134     0013                     	;# 
  1135     0015                     	;# 
  1136     0016                     	;# 
  1137     0016                     	;# 
  1138     0017                     	;# 
  1139     0018                     	;# 
  1140     0019                     	;# 
  1141     001A                     	;# 
  1142     001B                     	;# 
  1143     001C                     	;# 
  1144     001E                     	;# 
  1145     001F                     	;# 
  1146     008C                     	;# 
  1147     008D                     	;# 
  1148     008E                     	;# 
  1149     0090                     	;# 
  1150     0091                     	;# 
  1151     0092                     	;# 
  1152     0093                     	;# 
  1153     0095                     	;# 
  1154     0096                     	;# 
  1155     0097                     	;# 
  1156     0098                     	;# 
  1157     0099                     	;# 
  1158     009A                     	;# 
  1159     009B                     	;# 
  1160     009B                     	;# 
  1161     009C                     	;# 
  1162     009D                     	;# 
  1163     009E                     	;# 
  1164     010C                     	;# 
  1165     010D                     	;# 
  1166     010E                     	;# 
  1167     0110                     	;# 
  1168     0111                     	;# 
  1169     0112                     	;# 
  1170     0113                     	;# 
  1171     0114                     	;# 
  1172     0115                     	;# 
  1173     0116                     	;# 
  1174     0117                     	;# 
  1175     0118                     	;# 
  1176     0119                     	;# 
  1177     011A                     	;# 
  1178     011B                     	;# 
  1179     011D                     	;# 
  1180     018C                     	;# 
  1181     018D                     	;# 
  1182     0191                     	;# 
  1183     0191                     	;# 
  1184     0192                     	;# 
  1185     0193                     	;# 
  1186     0193                     	;# 
  1187     0193                     	;# 
  1188     0194                     	;# 
  1189     0195                     	;# 
  1190     0196                     	;# 
  1191     0199                     	;# 
  1192     019A                     	;# 
  1193     019B                     	;# 
  1194     019B                     	;# 
  1195     019B                     	;# 
  1196     019B                     	;# 
  1197     019C                     	;# 
  1198     019C                     	;# 
  1199     019D                     	;# 
  1200     019E                     	;# 
  1201     019F                     	;# 
  1202     020D                     	;# 
  1203     0210                     	;# 
  1204     0211                     	;# 
  1205     0212                     	;# 
  1206     0213                     	;# 
  1207     0214                     	;# 
  1208     0215                     	;# 
  1209     0215                     	;# 
  1210     0216                     	;# 
  1211     0217                     	;# 
  1212     0291                     	;# 
  1213     0291                     	;# 
  1214     0292                     	;# 
  1215     0293                     	;# 
  1216     0294                     	;# 
  1217     0295                     	;# 
  1218     0295                     	;# 
  1219     0296                     	;# 
  1220     0298                     	;# 
  1221     0298                     	;# 
  1222     0299                     	;# 
  1223     029A                     	;# 
  1224     029B                     	;# 
  1225     029C                     	;# 
  1226     029C                     	;# 
  1227     029D                     	;# 
  1228     029E                     	;# 
  1229     029F                     	;# 
  1230     0311                     	;# 
  1231     0311                     	;# 
  1232     0312                     	;# 
  1233     0313                     	;# 
  1234     0314                     	;# 
  1235     0315                     	;# 
  1236     0315                     	;# 
  1237     0316                     	;# 
  1238     0318                     	;# 
  1239     0318                     	;# 
  1240     0319                     	;# 
  1241     031A                     	;# 
  1242     031C                     	;# 
  1243     031C                     	;# 
  1244     031D                     	;# 
  1245     031E                     	;# 
  1246     0394                     	;# 
  1247     0395                     	;# 
  1248     0396                     	;# 
  1249     0415                     	;# 
  1250     0416                     	;# 
  1251     0417                     	;# 
  1252     041C                     	;# 
  1253     041D                     	;# 
  1254     041E                     	;# 
  1255     0791                     	;# 
  1256     0792                     	;# 
  1257     0793                     	;# 
  1258     0794                     	;# 
  1259     0795                     	;# 
  1260     0798                     	;# 
  1261     0799                     	;# 
  1262     07A0                     	;# 
  1263     07A1                     	;# 
  1264     07A3                     	;# 
  1265     07A4                     	;# 
  1266     07A6                     	;# 
  1267     07A7                     	;# 
  1268     07A9                     	;# 
  1269     07AA                     	;# 
  1270     0FE4                     	;# 
  1271     0FE5                     	;# 
  1272     0FE6                     	;# 
  1273     0FE7                     	;# 
  1274     0FE8                     	;# 
  1275     0FE9                     	;# 
  1276     0FEA                     	;# 
  1277     0FEB                     	;# 
  1278     0FED                     	;# 
  1279     0FEE                     	;# 
  1280     0FEF                     	;# 
  1281     0000                     	;# 
  1282     0001                     	;# 
  1283     0002                     	;# 
  1284     0003                     	;# 
  1285     0004                     	;# 
  1286     0005                     	;# 
  1287     0006                     	;# 
  1288     0007                     	;# 
  1289     0008                     	;# 
  1290     0009                     	;# 
  1291     000A                     	;# 
  1292     000B                     	;# 
  1293     000C                     	;# 
  1294     000D                     	;# 
  1295     000E                     	;# 
  1296     0010                     	;# 
  1297     0011                     	;# 
  1298     0012                     	;# 
  1299     0013                     	;# 
  1300     0015                     	;# 
  1301     0016                     	;# 
  1302     0016                     	;# 
  1303     0017                     	;# 
  1304     0018                     	;# 
  1305     0019                     	;# 
  1306     001A                     	;# 
  1307     001B                     	;# 
  1308     001C                     	;# 
  1309     001E                     	;# 
  1310     001F                     	;# 
  1311     008C                     	;# 
  1312     008D                     	;# 
  1313     008E                     	;# 
  1314     0090                     	;# 
  1315     0091                     	;# 
  1316     0092                     	;# 
  1317     0093                     	;# 
  1318     0095                     	;# 
  1319     0096                     	;# 
  1320     0097                     	;# 
  1321     0098                     	;# 
  1322     0099                     	;# 
  1323     009A                     	;# 
  1324     009B                     	;# 
  1325     009B                     	;# 
  1326     009C                     	;# 
  1327     009D                     	;# 
  1328     009E                     	;# 
  1329     010C                     	;# 
  1330     010D                     	;# 
  1331     010E                     	;# 
  1332     0110                     	;# 
  1333     0111                     	;# 
  1334     0112                     	;# 
  1335     0113                     	;# 
  1336     0114                     	;# 
  1337     0115                     	;# 
  1338     0116                     	;# 
  1339     0117                     	;# 
  1340     0118                     	;# 
  1341     0119                     	;# 
  1342     011A                     	;# 
  1343     011B                     	;# 
  1344     011D                     	;# 
  1345     018C                     	;# 
  1346     018D                     	;# 
  1347     0191                     	;# 
  1348     0191                     	;# 
  1349     0192                     	;# 
  1350     0193                     	;# 
  1351     0193                     	;# 
  1352     0193                     	;# 
  1353     0194                     	;# 
  1354     0195                     	;# 
  1355     0196                     	;# 
  1356     0199                     	;# 
  1357     019A                     	;# 
  1358     019B                     	;# 
  1359     019B                     	;# 
  1360     019B                     	;# 
  1361     019B                     	;# 
  1362     019C                     	;# 
  1363     019C                     	;# 
  1364     019D                     	;# 
  1365     019E                     	;# 
  1366     019F                     	;# 
  1367     020D                     	;# 
  1368     0210                     	;# 
  1369     0211                     	;# 
  1370     0212                     	;# 
  1371     0213                     	;# 
  1372     0214                     	;# 
  1373     0215                     	;# 
  1374     0215                     	;# 
  1375     0216                     	;# 
  1376     0217                     	;# 
  1377     0291                     	;# 
  1378     0291                     	;# 
  1379     0292                     	;# 
  1380     0293                     	;# 
  1381     0294                     	;# 
  1382     0295                     	;# 
  1383     0295                     	;# 
  1384     0296                     	;# 
  1385     0298                     	;# 
  1386     0298                     	;# 
  1387     0299                     	;# 
  1388     029A                     	;# 
  1389     029B                     	;# 
  1390     029C                     	;# 
  1391     029C                     	;# 
  1392     029D                     	;# 
  1393     029E                     	;# 
  1394     029F                     	;# 
  1395     0311                     	;# 
  1396     0311                     	;# 
  1397     0312                     	;# 
  1398     0313                     	;# 
  1399     0314                     	;# 
  1400     0315                     	;# 
  1401     0315                     	;# 
  1402     0316                     	;# 
  1403     0318                     	;# 
  1404     0318                     	;# 
  1405     0319                     	;# 
  1406     031A                     	;# 
  1407     031C                     	;# 
  1408     031C                     	;# 
  1409     031D                     	;# 
  1410     031E                     	;# 
  1411     0394                     	;# 
  1412     0395                     	;# 
  1413     0396                     	;# 
  1414     0415                     	;# 
  1415     0416                     	;# 
  1416     0417                     	;# 
  1417     041C                     	;# 
  1418     041D                     	;# 
  1419     041E                     	;# 
  1420     0791                     	;# 
  1421     0792                     	;# 
  1422     0793                     	;# 
  1423     0794                     	;# 
  1424     0795                     	;# 
  1425     0798                     	;# 
  1426     0799                     	;# 
  1427     07A0                     	;# 
  1428     07A1                     	;# 
  1429     07A3                     	;# 
  1430     07A4                     	;# 
  1431     07A6                     	;# 
  1432     07A7                     	;# 
  1433     07A9                     	;# 
  1434     07AA                     	;# 
  1435     0FE4                     	;# 
  1436     0FE5                     	;# 
  1437     0FE6                     	;# 
  1438     0FE7                     	;# 
  1439     0FE8                     	;# 
  1440     0FE9                     	;# 
  1441     0FEA                     	;# 
  1442     0FEB                     	;# 
  1443     0FED                     	;# 
  1444     0FEE                     	;# 
  1445     0FEF                     	;# 
  1446     0000                     	;# 
  1447     0001                     	;# 
  1448     0002                     	;# 
  1449     0003                     	;# 
  1450     0004                     	;# 
  1451     0005                     	;# 
  1452     0006                     	;# 
  1453     0007                     	;# 
  1454     0008                     	;# 
  1455     0009                     	;# 
  1456     000A                     	;# 
  1457     000B                     	;# 
  1458     000C                     	;# 
  1459     000D                     	;# 
  1460     000E                     	;# 
  1461     0010                     	;# 
  1462     0011                     	;# 
  1463     0012                     	;# 
  1464     0013                     	;# 
  1465     0015                     	;# 
  1466     0016                     	;# 
  1467     0016                     	;# 
  1468     0017                     	;# 
  1469     0018                     	;# 
  1470     0019                     	;# 
  1471     001A                     	;# 
  1472     001B                     	;# 
  1473     001C                     	;# 
  1474     001E                     	;# 
  1475     001F                     	;# 
  1476     008C                     	;# 
  1477     008D                     	;# 
  1478     008E                     	;# 
  1479     0090                     	;# 
  1480     0091                     	;# 
  1481     0092                     	;# 
  1482     0093                     	;# 
  1483     0095                     	;# 
  1484     0096                     	;# 
  1485     0097                     	;# 
  1486     0098                     	;# 
  1487     0099                     	;# 
  1488     009A                     	;# 
  1489     009B                     	;# 
  1490     009B                     	;# 
  1491     009C                     	;# 
  1492     009D                     	;# 
  1493     009E                     	;# 
  1494     010C                     	;# 
  1495     010D                     	;# 
  1496     010E                     	;# 
  1497     0110                     	;# 
  1498     0111                     	;# 
  1499     0112                     	;# 
  1500     0113                     	;# 
  1501     0114                     	;# 
  1502     0115                     	;# 
  1503     0116                     	;# 
  1504     0117                     	;# 
  1505     0118                     	;# 
  1506     0119                     	;# 
  1507     011A                     	;# 
  1508     011B                     	;# 
  1509     011D                     	;# 
  1510     018C                     	;# 
  1511     018D                     	;# 
  1512     0191                     	;# 
  1513     0191                     	;# 
  1514     0192                     	;# 
  1515     0193                     	;# 
  1516     0193                     	;# 
  1517     0193                     	;# 
  1518     0194                     	;# 
  1519     0195                     	;# 
  1520     0196                     	;# 
  1521     0199                     	;# 
  1522     019A                     	;# 
  1523     019B                     	;# 
  1524     019B                     	;# 
  1525     019B                     	;# 
  1526     019B                     	;# 
  1527     019C                     	;# 
  1528     019C                     	;# 
  1529     019D                     	;# 
  1530     019E                     	;# 
  1531     019F                     	;# 
  1532     020D                     	;# 
  1533     0210                     	;# 
  1534     0211                     	;# 
  1535     0212                     	;# 
  1536     0213                     	;# 
  1537     0214                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0216                     	;# 
  1541     0217                     	;# 
  1542     0291                     	;# 
  1543     0291                     	;# 
  1544     0292                     	;# 
  1545     0293                     	;# 
  1546     0294                     	;# 
  1547     0295                     	;# 
  1548     0295                     	;# 
  1549     0296                     	;# 
  1550     0298                     	;# 
  1551     0298                     	;# 
  1552     0299                     	;# 
  1553     029A                     	;# 
  1554     029B                     	;# 
  1555     029C                     	;# 
  1556     029C                     	;# 
  1557     029D                     	;# 
  1558     029E                     	;# 
  1559     029F                     	;# 
  1560     0311                     	;# 
  1561     0311                     	;# 
  1562     0312                     	;# 
  1563     0313                     	;# 
  1564     0314                     	;# 
  1565     0315                     	;# 
  1566     0315                     	;# 
  1567     0316                     	;# 
  1568     0318                     	;# 
  1569     0318                     	;# 
  1570     0319                     	;# 
  1571     031A                     	;# 
  1572     031C                     	;# 
  1573     031C                     	;# 
  1574     031D                     	;# 
  1575     031E                     	;# 
  1576     0394                     	;# 
  1577     0395                     	;# 
  1578     0396                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     041C                     	;# 
  1583     041D                     	;# 
  1584     041E                     	;# 
  1585     0791                     	;# 
  1586     0792                     	;# 
  1587     0793                     	;# 
  1588     0794                     	;# 
  1589     0795                     	;# 
  1590     0798                     	;# 
  1591     0799                     	;# 
  1592     07A0                     	;# 
  1593     07A1                     	;# 
  1594     07A3                     	;# 
  1595     07A4                     	;# 
  1596     07A6                     	;# 
  1597     07A7                     	;# 
  1598     07A9                     	;# 
  1599     07AA                     	;# 
  1600     0FE4                     	;# 
  1601     0FE5                     	;# 
  1602     0FE6                     	;# 
  1603     0FE7                     	;# 
  1604     0FE8                     	;# 
  1605     0FE9                     	;# 
  1606     0FEA                     	;# 
  1607     0FEB                     	;# 
  1608     0FED                     	;# 
  1609     0FEE                     	;# 
  1610     0FEF                     	;# 
  1611     0000                     	;# 
  1612     0001                     	;# 
  1613     0002                     	;# 
  1614     0003                     	;# 
  1615     0004                     	;# 
  1616     0005                     	;# 
  1617     0006                     	;# 
  1618     0007                     	;# 
  1619     0008                     	;# 
  1620     0009                     	;# 
  1621     000A                     	;# 
  1622     000B                     	;# 
  1623     000C                     	;# 
  1624     000D                     	;# 
  1625     000E                     	;# 
  1626     0010                     	;# 
  1627     0011                     	;# 
  1628     0012                     	;# 
  1629     0013                     	;# 
  1630     0015                     	;# 
  1631     0016                     	;# 
  1632     0016                     	;# 
  1633     0017                     	;# 
  1634     0018                     	;# 
  1635     0019                     	;# 
  1636     001A                     	;# 
  1637     001B                     	;# 
  1638     001C                     	;# 
  1639     001E                     	;# 
  1640     001F                     	;# 
  1641     008C                     	;# 
  1642     008D                     	;# 
  1643     008E                     	;# 
  1644     0090                     	;# 
  1645     0091                     	;# 
  1646     0092                     	;# 
  1647     0093                     	;# 
  1648     0095                     	;# 
  1649     0096                     	;# 
  1650     0097                     	;# 
  1651     0098                     	;# 
  1652     0099                     	;# 
  1653     009A                     	;# 
  1654     009B                     	;# 
  1655     009B                     	;# 
  1656     009C                     	;# 
  1657     009D                     	;# 
  1658     009E                     	;# 
  1659     010C                     	;# 
  1660     010D                     	;# 
  1661     010E                     	;# 
  1662     0110                     	;# 
  1663     0111                     	;# 
  1664     0112                     	;# 
  1665     0113                     	;# 
  1666     0114                     	;# 
  1667     0115                     	;# 
  1668     0116                     	;# 
  1669     0117                     	;# 
  1670     0118                     	;# 
  1671     0119                     	;# 
  1672     011A                     	;# 
  1673     011B                     	;# 
  1674     011D                     	;# 
  1675     018C                     	;# 
  1676     018D                     	;# 
  1677     0191                     	;# 
  1678     0191                     	;# 
  1679     0192                     	;# 
  1680     0193                     	;# 
  1681     0193                     	;# 
  1682     0193                     	;# 
  1683     0194                     	;# 
  1684     0195                     	;# 
  1685     0196                     	;# 
  1686     0199                     	;# 
  1687     019A                     	;# 
  1688     019B                     	;# 
  1689     019B                     	;# 
  1690     019B                     	;# 
  1691     019B                     	;# 
  1692     019C                     	;# 
  1693     019C                     	;# 
  1694     019D                     	;# 
  1695     019E                     	;# 
  1696     019F                     	;# 
  1697     020D                     	;# 
  1698     0210                     	;# 
  1699     0211                     	;# 
  1700     0212                     	;# 
  1701     0213                     	;# 
  1702     0214                     	;# 
  1703     0215                     	;# 
  1704     0215                     	;# 
  1705     0216                     	;# 
  1706     0217                     	;# 
  1707     0291                     	;# 
  1708     0291                     	;# 
  1709     0292                     	;# 
  1710     0293                     	;# 
  1711     0294                     	;# 
  1712     0295                     	;# 
  1713     0295                     	;# 
  1714     0296                     	;# 
  1715     0298                     	;# 
  1716     0298                     	;# 
  1717     0299                     	;# 
  1718     029A                     	;# 
  1719     029B                     	;# 
  1720     029C                     	;# 
  1721     029C                     	;# 
  1722     029D                     	;# 
  1723     029E                     	;# 
  1724     029F                     	;# 
  1725     0311                     	;# 
  1726     0311                     	;# 
  1727     0312                     	;# 
  1728     0313                     	;# 
  1729     0314                     	;# 
  1730     0315                     	;# 
  1731     0315                     	;# 
  1732     0316                     	;# 
  1733     0318                     	;# 
  1734     0318                     	;# 
  1735     0319                     	;# 
  1736     031A                     	;# 
  1737     031C                     	;# 
  1738     031C                     	;# 
  1739     031D                     	;# 
  1740     031E                     	;# 
  1741     0394                     	;# 
  1742     0395                     	;# 
  1743     0396                     	;# 
  1744     0415                     	;# 
  1745     0416                     	;# 
  1746     0417                     	;# 
  1747     041C                     	;# 
  1748     041D                     	;# 
  1749     041E                     	;# 
  1750     0791                     	;# 
  1751     0792                     	;# 
  1752     0793                     	;# 
  1753     0794                     	;# 
  1754     0795                     	;# 
  1755     0798                     	;# 
  1756     0799                     	;# 
  1757     07A0                     	;# 
  1758     07A1                     	;# 
  1759     07A3                     	;# 
  1760     07A4                     	;# 
  1761     07A6                     	;# 
  1762     07A7                     	;# 
  1763     07A9                     	;# 
  1764     07AA                     	;# 
  1765     0FE4                     	;# 
  1766     0FE5                     	;# 
  1767     0FE6                     	;# 
  1768     0FE7                     	;# 
  1769     0FE8                     	;# 
  1770     0FE9                     	;# 
  1771     0FEA                     	;# 
  1772     0FEB                     	;# 
  1773     0FED                     	;# 
  1774     0FEE                     	;# 
  1775     0FEF                     	;# 
  1776     0000                     	;# 
  1777     0001                     	;# 
  1778     0002                     	;# 
  1779     0003                     	;# 
  1780     0004                     	;# 
  1781     0005                     	;# 
  1782     0006                     	;# 
  1783     0007                     	;# 
  1784     0008                     	;# 
  1785     0009                     	;# 
  1786     000A                     	;# 
  1787     000B                     	;# 
  1788     000C                     	;# 
  1789     000D                     	;# 
  1790     000E                     	;# 
  1791     0010                     	;# 
  1792     0011                     	;# 
  1793     0012                     	;# 
  1794     0013                     	;# 
  1795     0015                     	;# 
  1796     0016                     	;# 
  1797     0016                     	;# 
  1798     0017                     	;# 
  1799     0018                     	;# 
  1800     0019                     	;# 
  1801     001A                     	;# 
  1802     001B                     	;# 
  1803     001C                     	;# 
  1804     001E                     	;# 
  1805     001F                     	;# 
  1806     008C                     	;# 
  1807     008D                     	;# 
  1808     008E                     	;# 
  1809     0090                     	;# 
  1810     0091                     	;# 
  1811     0092                     	;# 
  1812     0093                     	;# 
  1813     0095                     	;# 
  1814     0096                     	;# 
  1815     0097                     	;# 
  1816     0098                     	;# 
  1817     0099                     	;# 
  1818     009A                     	;# 
  1819     009B                     	;# 
  1820     009B                     	;# 
  1821     009C                     	;# 
  1822     009D                     	;# 
  1823     009E                     	;# 
  1824     010C                     	;# 
  1825     010D                     	;# 
  1826     010E                     	;# 
  1827     0110                     	;# 
  1828     0111                     	;# 
  1829     0112                     	;# 
  1830     0113                     	;# 
  1831     0114                     	;# 
  1832     0115                     	;# 
  1833     0116                     	;# 
  1834     0117                     	;# 
  1835     0118                     	;# 
  1836     0119                     	;# 
  1837     011A                     	;# 
  1838     011B                     	;# 
  1839     011D                     	;# 
  1840     018C                     	;# 
  1841     018D                     	;# 
  1842     0191                     	;# 
  1843     0191                     	;# 
  1844     0192                     	;# 
  1845     0193                     	;# 
  1846     0193                     	;# 
  1847     0193                     	;# 
  1848     0194                     	;# 
  1849     0195                     	;# 
  1850     0196                     	;# 
  1851     0199                     	;# 
  1852     019A                     	;# 
  1853     019B                     	;# 
  1854     019B                     	;# 
  1855     019B                     	;# 
  1856     019B                     	;# 
  1857     019C                     	;# 
  1858     019C                     	;# 
  1859     019D                     	;# 
  1860     019E                     	;# 
  1861     019F                     	;# 
  1862     020D                     	;# 
  1863     0210                     	;# 
  1864     0211                     	;# 
  1865     0212                     	;# 
  1866     0213                     	;# 
  1867     0214                     	;# 
  1868     0215                     	;# 
  1869     0215                     	;# 
  1870     0216                     	;# 
  1871     0217                     	;# 
  1872     0291                     	;# 
  1873     0291                     	;# 
  1874     0292                     	;# 
  1875     0293                     	;# 
  1876     0294                     	;# 
  1877     0295                     	;# 
  1878     0295                     	;# 
  1879     0296                     	;# 
  1880     0298                     	;# 
  1881     0298                     	;# 
  1882     0299                     	;# 
  1883     029A                     	;# 
  1884     029B                     	;# 
  1885     029C                     	;# 
  1886     029C                     	;# 
  1887     029D                     	;# 
  1888     029E                     	;# 
  1889     029F                     	;# 
  1890     0311                     	;# 
  1891     0311                     	;# 
  1892     0312                     	;# 
  1893     0313                     	;# 
  1894     0314                     	;# 
  1895     0315                     	;# 
  1896     0315                     	;# 
  1897     0316                     	;# 
  1898     0318                     	;# 
  1899     0318                     	;# 
  1900     0319                     	;# 
  1901     031A                     	;# 
  1902     031C                     	;# 
  1903     031C                     	;# 
  1904     031D                     	;# 
  1905     031E                     	;# 
  1906     0394                     	;# 
  1907     0395                     	;# 
  1908     0396                     	;# 
  1909     0415                     	;# 
  1910     0416                     	;# 
  1911     0417                     	;# 
  1912     041C                     	;# 
  1913     041D                     	;# 
  1914     041E                     	;# 
  1915     0791                     	;# 
  1916     0792                     	;# 
  1917     0793                     	;# 
  1918     0794                     	;# 
  1919     0795                     	;# 
  1920     0798                     	;# 
  1921     0799                     	;# 
  1922     07A0                     	;# 
  1923     07A1                     	;# 
  1924     07A3                     	;# 
  1925     07A4                     	;# 
  1926     07A6                     	;# 
  1927     07A7                     	;# 
  1928     07A9                     	;# 
  1929     07AA                     	;# 
  1930     0FE4                     	;# 
  1931     0FE5                     	;# 
  1932     0FE6                     	;# 
  1933     0FE7                     	;# 
  1934     0FE8                     	;# 
  1935     0FE9                     	;# 
  1936     0FEA                     	;# 
  1937     0FEB                     	;# 
  1938     0FED                     	;# 
  1939     0FEE                     	;# 
  1940     0FEF                     	;# 
  1941     0000                     	;# 
  1942     0001                     	;# 
  1943     0002                     	;# 
  1944     0003                     	;# 
  1945     0004                     	;# 
  1946     0005                     	;# 
  1947     0006                     	;# 
  1948     0007                     	;# 
  1949     0008                     	;# 
  1950     0009                     	;# 
  1951     000A                     	;# 
  1952     000B                     	;# 
  1953     000C                     	;# 
  1954     000D                     	;# 
  1955     000E                     	;# 
  1956     0010                     	;# 
  1957     0011                     	;# 
  1958     0012                     	;# 
  1959     0013                     	;# 
  1960     0015                     	;# 
  1961     0016                     	;# 
  1962     0016                     	;# 
  1963     0017                     	;# 
  1964     0018                     	;# 
  1965     0019                     	;# 
  1966     001A                     	;# 
  1967     001B                     	;# 
  1968     001C                     	;# 
  1969     001E                     	;# 
  1970     001F                     	;# 
  1971     008C                     	;# 
  1972     008D                     	;# 
  1973     008E                     	;# 
  1974     0090                     	;# 
  1975     0091                     	;# 
  1976     0092                     	;# 
  1977     0093                     	;# 
  1978     0095                     	;# 
  1979     0096                     	;# 
  1980     0097                     	;# 
  1981     0098                     	;# 
  1982     0099                     	;# 
  1983     009A                     	;# 
  1984     009B                     	;# 
  1985     009B                     	;# 
  1986     009C                     	;# 
  1987     009D                     	;# 
  1988     009E                     	;# 
  1989     010C                     	;# 
  1990     010D                     	;# 
  1991     010E                     	;# 
  1992     0110                     	;# 
  1993     0111                     	;# 
  1994     0112                     	;# 
  1995     0113                     	;# 
  1996     0114                     	;# 
  1997     0115                     	;# 
  1998     0116                     	;# 
  1999     0117                     	;# 
  2000     0118                     	;# 
  2001     0119                     	;# 
  2002     011A                     	;# 
  2003     011B                     	;# 
  2004     011D                     	;# 
  2005     018C                     	;# 
  2006     018D                     	;# 
  2007     0191                     	;# 
  2008     0191                     	;# 
  2009     0192                     	;# 
  2010     0193                     	;# 
  2011     0193                     	;# 
  2012     0193                     	;# 
  2013     0194                     	;# 
  2014     0195                     	;# 
  2015     0196                     	;# 
  2016     0199                     	;# 
  2017     019A                     	;# 
  2018     019B                     	;# 
  2019     019B                     	;# 
  2020     019B                     	;# 
  2021     019B                     	;# 
  2022     019C                     	;# 
  2023     019C                     	;# 
  2024     019D                     	;# 
  2025     019E                     	;# 
  2026     019F                     	;# 
  2027     020D                     	;# 
  2028     0210                     	;# 
  2029     0211                     	;# 
  2030     0212                     	;# 
  2031     0213                     	;# 
  2032     0214                     	;# 
  2033     0215                     	;# 
  2034     0215                     	;# 
  2035     0216                     	;# 
  2036     0217                     	;# 
  2037     0291                     	;# 
  2038     0291                     	;# 
  2039     0292                     	;# 
  2040     0293                     	;# 
  2041     0294                     	;# 
  2042     0295                     	;# 
  2043     0295                     	;# 
  2044     0296                     	;# 
  2045     0298                     	;# 
  2046     0298                     	;# 
  2047     0299                     	;# 
  2048     029A                     	;# 
  2049     029B                     	;# 
  2050     029C                     	;# 
  2051     029C                     	;# 
  2052     029D                     	;# 
  2053     029E                     	;# 
  2054     029F                     	;# 
  2055     0311                     	;# 
  2056     0311                     	;# 
  2057     0312                     	;# 
  2058     0313                     	;# 
  2059     0314                     	;# 
  2060     0315                     	;# 
  2061     0315                     	;# 
  2062     0316                     	;# 
  2063     0318                     	;# 
  2064     0318                     	;# 
  2065     0319                     	;# 
  2066     031A                     	;# 
  2067     031C                     	;# 
  2068     031C                     	;# 
  2069     031D                     	;# 
  2070     031E                     	;# 
  2071     0394                     	;# 
  2072     0395                     	;# 
  2073     0396                     	;# 
  2074     0415                     	;# 
  2075     0416                     	;# 
  2076     0417                     	;# 
  2077     041C                     	;# 
  2078     041D                     	;# 
  2079     041E                     	;# 
  2080     0791                     	;# 
  2081     0792                     	;# 
  2082     0793                     	;# 
  2083     0794                     	;# 
  2084     0795                     	;# 
  2085     0798                     	;# 
  2086     0799                     	;# 
  2087     07A0                     	;# 
  2088     07A1                     	;# 
  2089     07A3                     	;# 
  2090     07A4                     	;# 
  2091     07A6                     	;# 
  2092     07A7                     	;# 
  2093     07A9                     	;# 
  2094     07AA                     	;# 
  2095     0FE4                     	;# 
  2096     0FE5                     	;# 
  2097     0FE6                     	;# 
  2098     0FE7                     	;# 
  2099     0FE8                     	;# 
  2100     0FE9                     	;# 
  2101     0FEA                     	;# 
  2102     0FEB                     	;# 
  2103     0FED                     	;# 
  2104     0FEE                     	;# 
  2105     0FEF                     	;_SES_Modbus
  2106                           
  2107                           	psect	idataBANK0
  2108     035D                     __pidataBANK0:
  2109                           
  2110                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2111     035D  3424               	retlw	36
  2112     035E  3416               	retlw	22
  2113                           
  2114                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2115     035F  3424               	retlw	36
  2116     0360  340B               	retlw	11
  2117                           
  2118                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2119     0361  342C               	retlw	44
  2120     0362  3410               	retlw	16
  2121                           
  2122                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2123     0363  342C               	retlw	44
  2124     0364  340D               	retlw	13
  2125                           
  2126                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2127     0365  342C               	retlw	44
  2128     0366  3406               	retlw	6
  2129                           
  2130                           ;initializer for _MB_UID
  2131     0367  3401               	retlw	1
  2132                           
  2133                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2134     0368  3424               	retlw	36
  2135     0369  3400               	retlw	0
  2136                           
  2137                           	psect	stringtext1
  2138     0261                     __pstringtext1:
  2139     0261                     _i2c_fsmStateTable:
  2140     0261  3439               	retlw	low _I2C_DO_IDLE
  2141     0262  3404               	retlw	high _I2C_DO_IDLE
  2142     0263  34BA               	retlw	low _I2C_DO_SEND_ADR_READ
  2143     0264  3403               	retlw	high _I2C_DO_SEND_ADR_READ
  2144     0265  34CB               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2145     0266  3403               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2146     0267  348C               	retlw	low _I2C_DO_TX
  2147     0268  3400               	retlw	high _I2C_DO_TX
  2148     0269  34DF               	retlw	low _I2C_DO_RX
  2149     026A  3400               	retlw	high _I2C_DO_RX
  2150     026B  34DA               	retlw	low _I2C_DO_RCEN
  2151     026C  3403               	retlw	high _I2C_DO_RCEN
  2152     026D  349E               	retlw	low _I2C_DO_TX_EMPTY
  2153     026E  3401               	retlw	high _I2C_DO_TX_EMPTY
  2154     026F  3434               	retlw	low _I2C_DO_SEND_RESTART_READ
  2155     0270  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  2156     0271  342F               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2157     0272  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2158     0273  342A               	retlw	low _I2C_DO_SEND_RESTART
  2159     0274  3404               	retlw	high _I2C_DO_SEND_RESTART
  2160     0275  3425               	retlw	low _I2C_DO_SEND_STOP
  2161     0276  3404               	retlw	high _I2C_DO_SEND_STOP
  2162     0277  3420               	retlw	low _I2C_DO_RX_ACK
  2163     0278  3404               	retlw	high _I2C_DO_RX_ACK
  2164     0279  341B               	retlw	low _I2C_DO_RX_NACK_STOP
  2165     027A  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  2166     027B  3416               	retlw	low _I2C_DO_RX_NACK_RESTART
  2167     027C  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  2168     027D  3411               	retlw	low _I2C_DO_RESET
  2169     027E  3404               	retlw	high _I2C_DO_RESET
  2170     027F  34F3               	retlw	low _I2C_DO_ADDRESS_NACK
  2171     0280  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  2172     0281                     __end_of_i2c_fsmStateTable:
  2173                           
  2174                           	psect	stringtext2
  2175     03C3                     __pstringtext2:
  2176     03C3                     _fctsupported:
  2177     03C3  3401               	retlw	1
  2178     03C4  3402               	retlw	2
  2179     03C5  3403               	retlw	3
  2180     03C6  3404               	retlw	4
  2181     03C7  3405               	retlw	5
  2182     03C8  3406               	retlw	6
  2183     03C9  340F               	retlw	15
  2184     03CA  3410               	retlw	16
  2185     03CB                     __end_of_fctsupported:
  2186                           
  2187                           	psect	nvBANK0
  2188     0062                     __pnvBANK0:
  2189     0062                     _TMR1_InterruptHandler:
  2190     0062                     	ds	2
  2191     0064                     _EUSART_ErrorHandler:
  2192     0064                     	ds	2
  2193     0066                     _EUSART_OverrunErrorHandler:
  2194     0066                     	ds	2
  2195     0068                     _EUSART_FramingErrorHandler:
  2196     0068                     	ds	2
  2197     006A                     _EUSART_RxDefaultInterruptHandler:
  2198     006A                     	ds	2
  2199     006C                     _EUSART_TxDefaultInterruptHandler:
  2200     006C                     	ds	2
  2201     0019                     _T1GCONbits	set	25
  2202     0018                     _T1CONbits	set	24
  2203     0018                     _T1CON	set	24
  2204     0016                     _TMR1L	set	22
  2205     0017                     _TMR1H	set	23
  2206     0019                     _T1GCON	set	25
  2207     000B                     _INTCONbits	set	11
  2208     0011                     _PIR1bits	set	17
  2209     0012                     _PIR2bits	set	18
  2210     0092                     _PIE2bits	set	146
  2211     0091                     _PIE1bits	set	145
  2212     0097                     _WDTCON	set	151
  2213     0098                     _OSCTUNE	set	152
  2214     0099                     _OSCCON	set	153
  2215     0095                     _OPTION_REGbits	set	149
  2216     008E                     _TRISC	set	142
  2217     008D                     _TRISB	set	141
  2218     008C                     _TRISA	set	140
  2219     0090                     _TRISE	set	144
  2220     010E                     _LATCbits	set	270
  2221     0116                     _BORCON	set	278
  2222     011D                     _APFCON	set	285
  2223     010E                     _LATC	set	270
  2224     010D                     _LATB	set	269
  2225     010C                     _LATA	set	268
  2226     0110                     _LATE	set	272
  2227     0199                     _RCREG	set	409
  2228     019D                     _RCSTAbits	set	413
  2229     019A                     _TXREG	set	410
  2230     019E                     _TXSTAbits	set	414
  2231     019C                     _SPBRGH	set	412
  2232     019B                     _SPBRGL	set	411
  2233     019E                     _TXSTA	set	414
  2234     019D                     _RCSTA	set	413
  2235     019F                     _BAUDCON	set	415
  2236     018C                     _ANSELA	set	396
  2237     018D                     _ANSELB	set	397
  2238     0214                     _SSPSTATbits	set	532
  2239     0216                     _SSPCON2bits	set	534
  2240     0211                     _SSPBUF	set	529
  2241     0215                     _SSPCON1bits	set	533
  2242     0212                     _SSPADD	set	530
  2243     0216                     _SSPCON2	set	534
  2244     0215                     _SSPCON1	set	533
  2245     0214                     _SSPSTAT	set	532
  2246     020D                     _WPUB	set	525
  2247     0210                     _WPUE	set	528
  2248                           
  2249                           	psect	cinit
  2250     0057                     start_initialization:	
  2251                           ; #config settings
  2252                           
  2253     0057                     __initialization:	;BIGRAM
  2254                           
  2255                           ; Initialize objects allocated to BANK0
  2256     0057  305D               	movlw	low __pidataBANK0
  2257     0058  0084               	movwf	4
  2258     0059  3083               	movlw	(high __pidataBANK0)| (0+128)
  2259     005A  0085               	movwf	5
  2260     005B  3055               	movlw	low __pdataBANK0
  2261     005C  0086               	movwf	6
  2262     005D  3000               	movlw	high __pdataBANK0
  2263     005E  0087               	movwf	7
  2264     005F  3000               	movlw	0
  2265     0060  00FF               	movwf	btemp+1
  2266     0061  300D               	movlw	13
  2267     0062  3183  2384  3180   	fcall	init_ram
  2268                           
  2269                           ; Clear objects allocated to BIGRAM
  2270     0065  30D4               	movlw	low (0+8404)
  2271     0066  0084               	movwf	4
  2272     0067  3020               	movlw	high (0+8404)
  2273     0068  0085               	movwf	5
  2274     0069  301C               	movlw	28
  2275     006A  00FE               	movwf	btemp
  2276     006B  3001               	movlw	1
  2277     006C  00FF               	movwf	btemp+1
  2278     006D  3183  2390  3180   	fcall	clear_ram0
  2279                           
  2280                           ; Clear objects allocated to COMMON
  2281     0070  01FC               	clrf	__pbssCOMMON& (0+127)
  2282     0071  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2283                           
  2284                           ; Clear objects allocated to BANK0
  2285     0072  3020               	movlw	low __pbssBANK0
  2286     0073  0084               	movwf	4
  2287     0074  3000               	movlw	high __pbssBANK0
  2288     0075  0085               	movwf	5
  2289     0076  3035               	movlw	53
  2290     0077  00FE               	movwf	btemp
  2291     0078  3000               	movlw	0
  2292     0079  00FF               	movwf	btemp+1
  2293     007A  3183  2390  3180   	fcall	clear_ram0
  2294                           
  2295                           ; Clear objects allocated to BANK1
  2296     007D  30A0               	movlw	low __pbssBANK1
  2297     007E  0084               	movwf	4
  2298     007F  3000               	movlw	high __pbssBANK1
  2299     0080  0085               	movwf	5
  2300     0081  3030               	movlw	48
  2301     0082  00FE               	movwf	btemp
  2302     0083  3000               	movlw	0
  2303     0084  00FF               	movwf	btemp+1
  2304     0085  3183  2390  3180   	fcall	clear_ram0
  2305     0088                     end_of_initialization:	
  2306                           ;End of C runtime variable initialization code
  2307                           
  2308     0088                     __end_of__initialization:
  2309     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2310     0089  0020               	movlb	0
  2311     008A  3183  2BE1         	ljmp	_main	;jump to C main() function
  2312                           
  2313                           	psect	bssCOMMON
  2314     007C                     __pbssCOMMON:
  2315     007C                     _eusartRxCount:
  2316     007C                     	ds	1
  2317     007D                     _eusartRxTail:
  2318     007D                     	ds	1
  2319                           
  2320                           	psect	bssBANK0
  2321     0020                     __pbssBANK0:
  2322     0020                     _I2C_Status:
  2323     0020                     	ds	29
  2324     003D                     _device_time:
  2325     003D                     	ds	4
  2326     0041                     _timer1ReloadVal:
  2327     0041                     	ds	2
  2328     0043                     _MSSP_InterruptHandler:
  2329     0043                     	ds	2
  2330     0045                     _f_Indicator:
  2331     0045                     	ds	1
  2332     0046                     _SW_Ad:
  2333     0046                     	ds	1
  2334     0047                     _LED_Statuc:
  2335     0047                     	ds	1
  2336     0048                     _eusartRxLastError:
  2337     0048                     	ds	1
  2338     0049                     _eusartRxHead:
  2339     0049                     	ds	1
  2340     004A                     _eusartTxBufferRemaining:
  2341     004A                     	ds	1
  2342     004B                     _eusartTxTail:
  2343     004B                     	ds	1
  2344     004C                     _eusartTxHead:
  2345     004C                     	ds	1
  2346     004D                     _MB_Register:
  2347     004D                     	ds	4
  2348     0051                     _Humidity:
  2349     0051                     	ds	2
  2350     0053                     _Temperature:
  2351     0053                     	ds	2
  2352                           
  2353                           	psect	dataBANK0
  2354     0055                     __pdataBANK0:
  2355     0055                     _SHT30_CMD_MEASURE_L_Disable:
  2356     0055                     	ds	2
  2357     0057                     _SHT30_CMD_MEASURE_M_Disable:
  2358     0057                     	ds	2
  2359     0059                     _SHT30_CMD_MEASURE_L_Enable:
  2360     0059                     	ds	2
  2361     005B                     _SHT30_CMD_MEASURE_M_Enable:
  2362     005B                     	ds	2
  2363     005D                     _SHT30_CMD_MEASURE_H_Enable:
  2364     005D                     	ds	2
  2365     005F                     _MB_UID:
  2366     005F                     	ds	1
  2367     0060                     _SHT30_CMD_MEASURE_H_Disable:
  2368     0060                     	ds	2
  2369                           
  2370                           	psect	bssBANK1
  2371     00A0                     __pbssBANK1:
  2372     00A0                     _eusartRxStatusBuffer:
  2373     00A0                     	ds	16
  2374     00B0                     _eusartRxBuffer:
  2375     00B0                     	ds	16
  2376     00C0                     _eusartTxBuffer:
  2377     00C0                     	ds	16
  2378                           
  2379                           	psect	inittext
  2380     0384                     init_ram:
  2381     0384  00FE               	movwf	btemp
  2382     0385                     initloop:
  2383     0385  0012               	moviw fsr0++
  2384     0386  001E               	movwi fsr1++
  2385     0387  3001               	movlw	1
  2386     0388  02FE               	subwf	btemp,f
  2387     0389  3000               	movlw	0
  2388     038A  3BFF               	subwfb	btemp+1,f
  2389     038B  087F               	movf	btemp+1,w
  2390     038C  047E               	iorwf	btemp,w
  2391     038D  1D03               	skipz
  2392     038E  2B85               	goto	initloop
  2393     038F  3400               	retlw	0
  2394                           
  2395                           	psect	clrtext
  2396     0390                     clear_ram0:	
  2397                           ;	Called with FSR0 containing the base address, and
  2398                           ;	btemp/btemp+1 has the size to clear
  2399                           
  2400     0390  0064               	clrwdt	;clear the watchdog before getting into this loop
  2401     0391                     clrloop0:
  2402     0391  0180               	clrf	0	;clear RAM location pointed to by FSR
  2403     0392  3101               	addfsr 0,1
  2404     0393  3001               	movlw	1
  2405     0394  02FE               	subwf	btemp,f
  2406     0395  3000               	movlw	0
  2407     0396  3BFF               	subwfb	btemp+1,f
  2408     0397  087F               	movf	btemp+1,w
  2409     0398  047E               	iorwf	btemp,w
  2410     0399  1D03               	skipz
  2411     039A  2B91               	goto	clrloop0	;have we reached the end yet?
  2412     039B  3400               	retlw	0	;all done for this memory range, return
  2413                           
  2414                           	psect	cstackCOMMON
  2415     0070                     __pcstackCOMMON:
  2416     0070                     ?_I2C_SetBuffer:
  2417     0070                     ?_I2C_Initialize:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420     0070                     ?_OSCILLATOR_Initialize:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423     0070                     ?_WDT_Initialize:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426     0070                     ?_TMR1_Initialize:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429     0070                     ?_EUSART_Initialize:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432     0070                     ?_I2C_DO_IDLE:	
  2433                           ; 1 bytes @ 0x0
  2434                           
  2435     0070                     ??_I2C_DO_IDLE:	
  2436                           ; 1 bytes @ 0x0
  2437                           
  2438     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2439                           ; 1 bytes @ 0x0
  2440                           
  2441     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2442                           ; 1 bytes @ 0x0
  2443                           
  2444     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2445                           ; 1 bytes @ 0x0
  2446                           
  2447     0070                     ?_I2C_DO_TX:	
  2448                           ; 1 bytes @ 0x0
  2449                           
  2450     0070                     ?_I2C_DO_RX:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ?_I2C_DO_RCEN:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ??_I2C_DO_RCEN:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ?_I2C_DO_TX_EMPTY:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     ?_I2C_DO_SEND_RESTART:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477     0070                     ??_I2C_DO_SEND_RESTART:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480     0070                     ?_I2C_DO_SEND_STOP:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483     0070                     ??_I2C_DO_SEND_STOP:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486     0070                     ?_I2C_DO_RX_ACK:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489     0070                     ??_I2C_DO_RX_ACK:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504     0070                     ?_I2C_DO_RESET:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0070                     ??_I2C_DO_RESET:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_I2C_MasterIsr:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ?_I2C_MasterClearIrq:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ??_I2C_MasterClearIrq:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ?_I2C_SetCallback:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ?_I2C_MasterFsm:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ?_I2C_MasterIsNack:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ??_I2C_MasterIsNack:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ?_I2C_MasterSendTxData:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ??_I2C_MasterSendTxData:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ?_I2C_MasterGetRxData:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ??_I2C_MasterGetRxData:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ?_I2C_MasterSendAck:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ??_I2C_MasterSendAck:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552     0070                     ?_I2C_MasterStartRx:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555     0070                     ??_I2C_MasterStartRx:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558     0070                     ?_I2C_MasterSetIrq:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561     0070                     ??_I2C_MasterSetIrq:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564     0070                     ?_I2C_MasterEnableRestart:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567     0070                     ??_I2C_MasterEnableRestart:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570     0070                     ?_I2C_MasterStop:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573     0070                     ??_I2C_MasterStop:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576     0070                     ?_I2C_MasterSendNack:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579     0070                     ??_I2C_MasterSendNack:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582     0070                     ?_TMR1_ISR:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585     0070                     ?_EUSART_Receive_ISR:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588     0070                     ?_EUSART_Transmit_ISR:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591     0070                     ??_EUSART_Transmit_ISR:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606     0070                     ?_EUSART_DefaultErrorHandler:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609     0070                     ?_EUSART_RxDataHandler:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612     0070                     ??_EUSART_RxDataHandler:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615     0070                     ?_TMR1_DefaultInterruptHandler:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618     0070                     ??_TMR1_DefaultInterruptHandler:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621     0070                     ?_TMR1_CallBack:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624     0070                     ??_TMR1_CallBack:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627     0070                     ?_rtcc_handle:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630     0070                     ??_rtcc_handle:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633     0070                     ?_PIN_MANAGER_Initialize:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636     0070                     ?_SYSTEM_Initialize:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639     0070                     ?_INTERRUPT_InterruptManager:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642     0070                     ?_TMR1_WriteTimer:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645     0070                     ?_main:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648     0070                     I2C_MasterSendTxData@data:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651     0070                     I2C_SetBuffer@bufferSize:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654     0070                     I2C_SetCallback@cb:	
  2655                           ; 2 bytes @ 0x0
  2656                           
  2657     0070                     TMR1_WriteTimer@timerVal:	
  2658                           ; 2 bytes @ 0x0
  2659                           
  2660                           
  2661                           ; 2 bytes @ 0x0
  2662     0070                     	ds	1
  2663     0071                     ??_I2C_DO_SEND_ADR_WRITE:
  2664     0071                     ??_EUSART_Receive_ISR:	
  2665                           ; 1 bytes @ 0x1
  2666                           
  2667     0071                     ??_EUSART_DefaultErrorHandler:	
  2668                           ; 1 bytes @ 0x1
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x1
  2672     0071                     	ds	1
  2673     0072                     ??_I2C_SetBuffer:
  2674     0072                     ??_TMR1_ISR:	
  2675                           ; 1 bytes @ 0x2
  2676                           
  2677     0072                     ??_TMR1_WriteTimer:	
  2678                           ; 1 bytes @ 0x2
  2679                           
  2680     0072                     I2C_SetBuffer@buffer:	
  2681                           ; 1 bytes @ 0x2
  2682                           
  2683     0072                     I2C_SetCallback@ptr:	
  2684                           ; 1 bytes @ 0x2
  2685                           
  2686                           
  2687                           ; 1 bytes @ 0x2
  2688     0072                     	ds	1
  2689     0073                     ??_I2C_SetCallback:
  2690     0073                     I2C_SetCallback@idx:	
  2691                           ; 1 bytes @ 0x3
  2692                           
  2693                           
  2694                           ; 1 bytes @ 0x3
  2695     0073                     	ds	1
  2696     0074                     ?_I2C_SetDataCompleteCallback:
  2697     0074                     I2C_SetDataCompleteCallback@cb:	
  2698                           ; 1 bytes @ 0x4
  2699                           
  2700                           
  2701                           ; 2 bytes @ 0x4
  2702     0074                     	ds	2
  2703     0076                     I2C_SetDataCompleteCallback@ptr:
  2704                           
  2705                           ; 1 bytes @ 0x6
  2706     0076                     	ds	1
  2707     0077                     ??_I2C_SetDataCompleteCallback:
  2708     0077                     ?_rd1RegCompleteHandler:	
  2709                           ; 1 bytes @ 0x7
  2710                           
  2711     0077                     ?_rd2RegCompleteHandler:	
  2712                           ; 1 bytes @ 0x7
  2713                           
  2714     0077                     ?_wr1RegCompleteHandler:	
  2715                           ; 1 bytes @ 0x7
  2716                           
  2717     0077                     ?_wr2RegCompleteHandler:	
  2718                           ; 1 bytes @ 0x7
  2719                           
  2720     0077                     ?_rdBlkRegCompleteHandler:	
  2721                           ; 1 bytes @ 0x7
  2722                           
  2723     0077                     ?_I2C_CallbackReturnStop:	
  2724                           ; 1 bytes @ 0x7
  2725                           
  2726     0077                     ?_I2C_CallbackReturnReset:	
  2727                           ; 1 bytes @ 0x7
  2728                           
  2729     0077                     rd1RegCompleteHandler@ptr:	
  2730                           ; 1 bytes @ 0x7
  2731                           
  2732     0077                     rd2RegCompleteHandler@ptr:	
  2733                           ; 1 bytes @ 0x7
  2734                           
  2735     0077                     wr1RegCompleteHandler@ptr:	
  2736                           ; 1 bytes @ 0x7
  2737                           
  2738     0077                     wr2RegCompleteHandler@ptr:	
  2739                           ; 1 bytes @ 0x7
  2740                           
  2741     0077                     rdBlkRegCompleteHandler@ptr:	
  2742                           ; 1 bytes @ 0x7
  2743                           
  2744     0077                     I2C_CallbackReturnStop@funPtr:	
  2745                           ; 1 bytes @ 0x7
  2746                           
  2747     0077                     I2C_CallbackReturnReset@funPtr:	
  2748                           ; 1 bytes @ 0x7
  2749                           
  2750                           
  2751                           ; 1 bytes @ 0x7
  2752     0077                     	ds	1
  2753     0078                     ??_rd1RegCompleteHandler:
  2754     0078                     ??_rd2RegCompleteHandler:	
  2755                           ; 1 bytes @ 0x8
  2756                           
  2757     0078                     ??_wr1RegCompleteHandler:	
  2758                           ; 1 bytes @ 0x8
  2759                           
  2760     0078                     ??_wr2RegCompleteHandler:	
  2761                           ; 1 bytes @ 0x8
  2762                           
  2763     0078                     ??_rdBlkRegCompleteHandler:	
  2764                           ; 1 bytes @ 0x8
  2765                           
  2766     0078                     ??_I2C_DO_TX:	
  2767                           ; 1 bytes @ 0x8
  2768                           
  2769     0078                     ??_I2C_DO_RX:	
  2770                           ; 1 bytes @ 0x8
  2771                           
  2772     0078                     ??_I2C_DO_TX_EMPTY:	
  2773                           ; 1 bytes @ 0x8
  2774                           
  2775     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2776                           ; 1 bytes @ 0x8
  2777                           
  2778     0078                     ??_I2C_CallbackReturnStop:	
  2779                           ; 1 bytes @ 0x8
  2780                           
  2781     0078                     ??_I2C_CallbackReturnReset:	
  2782                           ; 1 bytes @ 0x8
  2783                           
  2784                           
  2785                           ; 1 bytes @ 0x8
  2786     0078                     	ds	2
  2787     007A                     ??_I2C_MasterFsm:
  2788                           
  2789                           ; 1 bytes @ 0xA
  2790     007A                     	ds	2
  2791     007C                     ??_I2C_MasterIsr:
  2792     007C                     ??_INTERRUPT_InterruptManager:	
  2793                           ; 1 bytes @ 0xC
  2794                           
  2795                           
  2796                           	psect	cstackBANK0
  2797     006E                     __pcstackBANK0:	
  2798                           ; 1 bytes @ 0xC
  2799                           
  2800     006E                     ??_I2C_Initialize:
  2801     006E                     ??_OSCILLATOR_Initialize:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804     006E                     ??_WDT_Initialize:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807     006E                     ?_EUSART_SetRxInterruptHandler:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     006E                     ?_EUSART_SetTxInterruptHandler:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     006E                     ?_EUSART_SetFramingErrorHandler:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816     006E                     ?_EUSART_SetOverrunErrorHandler:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     006E                     ?_EUSART_SetErrorHandler:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     006E                     ?_TMR1_SetInterruptHandler:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     006E                     ??_PIN_MANAGER_Initialize:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     006E                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831     006E                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2832                           ; 2 bytes @ 0x0
  2833                           
  2834     006E                     EUSART_SetErrorHandler@interruptHandler:	
  2835                           ; 2 bytes @ 0x0
  2836                           
  2837     006E                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2838                           ; 2 bytes @ 0x0
  2839                           
  2840     006E                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2841                           ; 2 bytes @ 0x0
  2842                           
  2843     006E                     TMR1_SetInterruptHandler@InterruptHandler:	
  2844                           ; 2 bytes @ 0x0
  2845                           
  2846                           
  2847                           ; 2 bytes @ 0x0
  2848     006E                     	ds	2
  2849     0070                     ??_TMR1_Initialize:
  2850     0070                     ??_EUSART_Initialize:	
  2851                           ; 1 bytes @ 0x2
  2852                           
  2853     0070                     ??_EUSART_SetRxInterruptHandler:	
  2854                           ; 1 bytes @ 0x2
  2855                           
  2856     0070                     ??_EUSART_SetTxInterruptHandler:	
  2857                           ; 1 bytes @ 0x2
  2858                           
  2859     0070                     ??_EUSART_SetFramingErrorHandler:	
  2860                           ; 1 bytes @ 0x2
  2861                           
  2862     0070                     ??_EUSART_SetOverrunErrorHandler:	
  2863                           ; 1 bytes @ 0x2
  2864                           
  2865     0070                     ??_EUSART_SetErrorHandler:	
  2866                           ; 1 bytes @ 0x2
  2867                           
  2868     0070                     ??_TMR1_SetInterruptHandler:	
  2869                           ; 1 bytes @ 0x2
  2870                           
  2871     0070                     ??_SYSTEM_Initialize:	
  2872                           ; 1 bytes @ 0x2
  2873                           
  2874     0070                     ??_main:	
  2875                           ; 1 bytes @ 0x2
  2876                           
  2877                           
  2878                           	psect	maintext
  2879     03E1                     __pmaintext:	
  2880                           ; 1 bytes @ 0x2
  2881 ;;
  2882 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2883 ;;
  2884 ;; *************** function _main *****************
  2885 ;; Defined at:
  2886 ;;		line 49 in file "main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : B1F/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2900 ;;      Params:         0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels required when called: 10
  2906 ;; This function calls:
  2907 ;;		_SYSTEM_Initialize
  2908 ;; This function is called by:
  2909 ;;		Startup code after reset
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     03E1                     _main:	
  2914                           ;psect for function _main
  2915                           
  2916     03E1                     l3656:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;main.c: 52:     SYSTEM_Initialize();
  2922     03E1  3182  22E7  3183   	fcall	_SYSTEM_Initialize
  2923     03E4                     l767:	
  2924                           ;main.c: 69:     while (1)
  2925                           
  2926     03E4                     l768:	
  2927                           ;main.c: 70:     {;main.c: 72:     }
  2928                           
  2929     03E4  2BE4               	goto	l767
  2930     03E5  3180  2855         	ljmp	start
  2931     03E7                     __end_of_main:
  2932                           
  2933                           	psect	text1
  2934     02E7                     __ptext1:	
  2935 ;; *************** function _SYSTEM_Initialize *****************
  2936 ;; Defined at:
  2937 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2951 ;;      Params:         0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 9
  2958 ;; This function calls:
  2959 ;;		_EUSART_Initialize
  2960 ;;		_I2C_Initialize
  2961 ;;		_OSCILLATOR_Initialize
  2962 ;;		_PIN_MANAGER_Initialize
  2963 ;;		_TMR1_Initialize
  2964 ;;		_WDT_Initialize
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     02E7                     _SYSTEM_Initialize:	
  2971                           ;psect for function _SYSTEM_Initialize
  2972                           
  2973     02E7                     l3422:	
  2974                           ;incstack = 0
  2975                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2976                           
  2977                           
  2978                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2979     02E7  3183  23B1  3182   	fcall	_I2C_Initialize
  2980                           
  2981                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2982     02EA  3182  2281  3182   	fcall	_PIN_MANAGER_Initialize
  2983                           
  2984                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2985     02ED  3183  23D3  3182   	fcall	_OSCILLATOR_Initialize
  2986                           
  2987                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2988     02F0  3184  2443  3182   	fcall	_WDT_Initialize
  2989                           
  2990                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  2991     02F3  3182  229D  3182   	fcall	_TMR1_Initialize
  2992                           
  2993                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2994     02F6  3181  2122  3182   	fcall	_EUSART_Initialize
  2995     02F9                     l163:
  2996     02F9  0008               	return
  2997     02FA                     __end_of_SYSTEM_Initialize:
  2998                           
  2999                           	psect	text2
  3000     0443                     __ptext2:	
  3001 ;; *************** function _WDT_Initialize *****************
  3002 ;; Defined at:
  3003 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3017 ;;      Params:         0       0       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 7
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_SYSTEM_Initialize
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     0443                     _WDT_Initialize:	
  3032                           ;psect for function _WDT_Initialize
  3033                           
  3034     0443                     l3226:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _WDT_Initialize: [wreg]
  3037                           
  3038                           
  3039                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  3040     0443  3016               	movlw	22
  3041     0444  0021               	movlb	1	; select bank1
  3042     0445  0097               	movwf	23	;volatile
  3043     0446                     l169:
  3044     0446  0008               	return
  3045     0447                     __end_of_WDT_Initialize:
  3046                           
  3047                           	psect	text3
  3048     029D                     __ptext3:	
  3049 ;; *************** function _TMR1_Initialize *****************
  3050 ;; Defined at:
  3051 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3065 ;;      Params:         0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 8
  3072 ;; This function calls:
  3073 ;;		_TMR1_SetInterruptHandler
  3074 ;; This function is called by:
  3075 ;;		_SYSTEM_Initialize
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079     029D                     _TMR1_Initialize:	
  3080                           ;psect for function _TMR1_Initialize
  3081                           
  3082     029D                     l3228:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3085                           
  3086                           
  3087                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3088     029D  0020               	movlb	0	; select bank0
  3089     029E  0199               	clrf	25	;volatile
  3090     029F                     l3230:
  3091                           
  3092                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3093     029F  30E0               	movlw	224
  3094     02A0  0097               	movwf	23	;volatile
  3095     02A1                     l3232:
  3096                           
  3097                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3098     02A1  30C0               	movlw	192
  3099     02A2  0096               	movwf	22	;volatile
  3100     02A3                     l3234:
  3101                           
  3102                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3103     02A3  1011               	bcf	17,0	;volatile
  3104     02A4                     l3236:
  3105                           
  3106                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3107     02A4  0817               	movf	23,w	;volatile
  3108     02A5  00C2               	movwf	_timer1ReloadVal+1	;volatile
  3109     02A6  0816               	movf	22,w	;volatile
  3110     02A7  00C1               	movwf	_timer1ReloadVal	;volatile
  3111     02A8                     l3238:
  3112                           
  3113                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3114     02A8  0021               	movlb	1	; select bank1
  3115     02A9  1411               	bsf	17,0	;volatile
  3116     02AA                     l3240:
  3117                           
  3118                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3119     02AA  3071               	movlw	low _TMR1_DefaultInterruptHandler
  3120     02AB  0020               	movlb	0	; select bank0
  3121     02AC  00EE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3122     02AD  3004               	movlw	high _TMR1_DefaultInterruptHandler
  3123     02AE  00EF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3124     02AF  3183  23E7  3182   	fcall	_TMR1_SetInterruptHandler
  3125     02B2                     l3242:
  3126                           
  3127                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3128     02B2  3041               	movlw	65
  3129     02B3  0020               	movlb	0	; select bank0
  3130     02B4  0098               	movwf	24	;volatile
  3131     02B5                     l716:
  3132     02B5  0008               	return
  3133     02B6                     __end_of_TMR1_Initialize:
  3134                           
  3135                           	psect	text4
  3136     03E7                     __ptext4:	
  3137 ;; *************** function _TMR1_SetInterruptHandler *****************
  3138 ;; Defined at:
  3139 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3142 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3154 ;;      Params:         0       2       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0
  3157 ;;      Totals:         0       2       0       0       0       0       0       0
  3158 ;;Total ram usage:        2 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 7
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_TMR1_Initialize
  3165 ;;		_Tick_Init_SES
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169     03E7                     _TMR1_SetInterruptHandler:	
  3170                           ;psect for function _TMR1_SetInterruptHandler
  3171                           
  3172     03E7                     l3084:	
  3173                           ;incstack = 0
  3174                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3175                           
  3176                           
  3177                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  3178     03E7  0020               	movlb	0	; select bank0
  3179     03E8  086F               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3180     03E9  00E3               	movwf	_TMR1_InterruptHandler+1
  3181     03EA  086E               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3182     03EB  00E2               	movwf	_TMR1_InterruptHandler
  3183     03EC                     l749:
  3184     03EC  0008               	return
  3185     03ED                     __end_of_TMR1_SetInterruptHandler:
  3186                           
  3187                           	psect	text5
  3188     0281                     __ptext5:	
  3189 ;; *************** function _PIN_MANAGER_Initialize *****************
  3190 ;; Defined at:
  3191 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3205 ;;      Params:         0       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 7
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_SYSTEM_Initialize
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219     0281                     _PIN_MANAGER_Initialize:	
  3220                           ;psect for function _PIN_MANAGER_Initialize
  3221                           
  3222     0281                     l3188:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3225                           
  3226                           
  3227                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3228     0281  0022               	movlb	2	; select bank2
  3229     0282  0190               	clrf	16	;volatile
  3230                           
  3231                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3232     0283  018C               	clrf	12	;volatile
  3233                           
  3234                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3235     0284  018D               	clrf	13	;volatile
  3236     0285                     l3190:
  3237                           
  3238                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  3239     0285  3040               	movlw	64
  3240     0286  008E               	movwf	14	;volatile
  3241     0287                     l3192:
  3242                           
  3243                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3244     0287  3008               	movlw	8
  3245     0288  0021               	movlb	1	; select bank1
  3246     0289  0090               	movwf	16	;volatile
  3247     028A                     l3194:
  3248                           
  3249                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3250     028A  30FF               	movlw	255
  3251     028B  008C               	movwf	12	;volatile
  3252     028C                     l3196:
  3253                           
  3254                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3255     028C  30FF               	movlw	255
  3256     028D  008D               	movwf	13	;volatile
  3257     028E                     l3198:
  3258                           
  3259                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3260     028E  309C               	movlw	156
  3261     028F  008E               	movwf	14	;volatile
  3262     0290                     l3200:
  3263                           
  3264                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3265     0290  303F               	movlw	63
  3266     0291  0023               	movlb	3	; select bank3
  3267     0292  008D               	movwf	13	;volatile
  3268     0293                     l3202:
  3269                           
  3270                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3271     0293  3030               	movlw	48
  3272     0294  008C               	movwf	12	;volatile
  3273     0295                     l3204:
  3274                           
  3275                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3276     0295  0024               	movlb	4	; select bank4
  3277     0296  0190               	clrf	16	;volatile
  3278     0297                     l3206:
  3279                           
  3280                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3281     0297  018D               	clrf	13	;volatile
  3282     0298                     l3208:
  3283                           
  3284                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3285     0298  0021               	movlb	1	; select bank1
  3286     0299  1795               	bsf	21,7	;volatile
  3287     029A                     l3210:
  3288                           
  3289                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3290     029A  0022               	movlb	2	; select bank2
  3291     029B  019D               	clrf	29	;volatile
  3292     029C                     l135:
  3293     029C  0008               	return
  3294     029D                     __end_of_PIN_MANAGER_Initialize:
  3295                           
  3296                           	psect	text6
  3297     03D3                     __ptext6:	
  3298 ;; *************** function _OSCILLATOR_Initialize *****************
  3299 ;; Defined at:
  3300 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3314 ;;      Params:         0       0       0       0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 7
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_SYSTEM_Initialize
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328     03D3                     _OSCILLATOR_Initialize:	
  3329                           ;psect for function _OSCILLATOR_Initialize
  3330                           
  3331     03D3                     l3220:	
  3332                           ;incstack = 0
  3333                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3334                           
  3335                           
  3336                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3337     03D3  3070               	movlw	112
  3338     03D4  0021               	movlb	1	; select bank1
  3339     03D5  0099               	movwf	25	;volatile
  3340     03D6                     l3222:
  3341                           
  3342                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3343     03D6  0198               	clrf	24	;volatile
  3344     03D7                     l3224:
  3345                           
  3346                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3347     03D7  0022               	movlb	2	; select bank2
  3348     03D8  0196               	clrf	22	;volatile
  3349     03D9                     l166:
  3350     03D9  0008               	return
  3351     03DA                     __end_of_OSCILLATOR_Initialize:
  3352                           
  3353                           	psect	text7
  3354     03B1                     __ptext7:	
  3355 ;; *************** function _I2C_Initialize *****************
  3356 ;; Defined at:
  3357 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3371 ;;      Params:         0       0       0       0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 7
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_SYSTEM_Initialize
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     03B1                     _I2C_Initialize:	
  3386                           ;psect for function _I2C_Initialize
  3387                           
  3388     03B1                     l3212:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3391                           
  3392                           
  3393                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3394     03B1  0024               	movlb	4	; select bank4
  3395     03B2  0194               	clrf	20	;volatile
  3396     03B3                     l3214:
  3397                           
  3398                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3399     03B3  3008               	movlw	8
  3400     03B4  0095               	movwf	21	;volatile
  3401     03B5                     l3216:
  3402                           
  3403                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3404     03B5  0196               	clrf	22	;volatile
  3405                           
  3406                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3407     03B6  3013               	movlw	19
  3408     03B7  0092               	movwf	18	;volatile
  3409     03B8                     l3218:
  3410                           
  3411                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3412     03B8  1295               	bcf	21,5	;volatile
  3413     03B9                     l278:
  3414     03B9  0008               	return
  3415     03BA                     __end_of_I2C_Initialize:
  3416                           
  3417                           	psect	text8
  3418     0122                     __ptext8:	
  3419 ;; *************** function _EUSART_Initialize *****************
  3420 ;; Defined at:
  3421 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, pclath, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3435 ;;      Params:         0       0       0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 8
  3442 ;; This function calls:
  3443 ;;		_EUSART_SetErrorHandler
  3444 ;;		_EUSART_SetFramingErrorHandler
  3445 ;;		_EUSART_SetOverrunErrorHandler
  3446 ;;		_EUSART_SetRxInterruptHandler
  3447 ;;		_EUSART_SetTxInterruptHandler
  3448 ;; This function is called by:
  3449 ;;		_SYSTEM_Initialize
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453     0122                     _EUSART_Initialize:	
  3454                           ;psect for function _EUSART_Initialize
  3455                           
  3456     0122                     l3244:	
  3457                           ;incstack = 0
  3458                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3459                           
  3460                           
  3461                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3462     0122  0021               	movlb	1	; select bank1
  3463     0123  1291               	bcf	17,5	;volatile
  3464     0124                     l3246:
  3465                           
  3466                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3467     0124  3064               	movlw	low _EUSART_Receive_ISR
  3468     0125  0020               	movlb	0	; select bank0
  3469     0126  00EE               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3470     0127  3001               	movlw	high _EUSART_Receive_ISR
  3471     0128  00EF               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3472     0129  3183  23F3  3181   	fcall	_EUSART_SetRxInterruptHandler
  3473     012C                     l3248:
  3474                           
  3475                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3476     012C  0021               	movlb	1	; select bank1
  3477     012D  1211               	bcf	17,4	;volatile
  3478                           
  3479                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3480     012E  303F               	movlw	low _EUSART_Transmit_ISR
  3481     012F  0020               	movlb	0	; select bank0
  3482     0130  00EE               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3483     0131  3002               	movlw	high _EUSART_Transmit_ISR
  3484     0132  00EF               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3485     0133  3183  23ED  3181   	fcall	_EUSART_SetTxInterruptHandler
  3486     0136                     l3250:
  3487                           
  3488                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3489     0136  3008               	movlw	8
  3490     0137  0023               	movlb	3	; select bank3
  3491     0138  009F               	movwf	31	;volatile
  3492     0139                     l3252:
  3493                           
  3494                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3495     0139  3090               	movlw	144
  3496     013A  009D               	movwf	29	;volatile
  3497     013B                     l3254:
  3498                           
  3499                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3500     013B  3024               	movlw	36
  3501     013C  009E               	movwf	30	;volatile
  3502     013D                     l3256:
  3503                           
  3504                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  3505     013D  30CF               	movlw	207
  3506     013E  009B               	movwf	27	;volatile
  3507     013F                     l3258:
  3508                           
  3509                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3510     013F  019C               	clrf	28	;volatile
  3511     0140                     l3260:
  3512                           
  3513                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3514     0140  3072               	movlw	low _EUSART_DefaultFramingErrorHandler
  3515     0141  0020               	movlb	0	; select bank0
  3516     0142  00EE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3517     0143  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  3518     0144  00EF               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3519     0145  3183  23FF  3181   	fcall	_EUSART_SetFramingErrorHandler
  3520     0148                     l3262:
  3521                           
  3522                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3523     0148  3053               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3524     0149  0020               	movlb	0	; select bank0
  3525     014A  00EE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3526     014B  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3527     014C  00EF               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3528     014D  3183  23F9  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3529     0150                     l3264:
  3530                           
  3531                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3532     0150  3057               	movlw	low _EUSART_DefaultErrorHandler
  3533     0151  0020               	movlb	0	; select bank0
  3534     0152  00EE               	movwf	EUSART_SetErrorHandler@interruptHandler
  3535     0153  3004               	movlw	high _EUSART_DefaultErrorHandler
  3536     0154  00EF               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3537     0155  3184  2405  3181   	fcall	_EUSART_SetErrorHandler
  3538                           
  3539                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3540     0158  0020               	movlb	0	; select bank0
  3541     0159  01C8               	clrf	_eusartRxLastError	;volatile
  3542                           
  3543                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3544     015A  01CC               	clrf	_eusartTxHead	;volatile
  3545                           
  3546                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3547     015B  01CB               	clrf	_eusartTxTail	;volatile
  3548     015C                     l3266:
  3549                           
  3550                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3551     015C  3010               	movlw	16
  3552     015D  00CA               	movwf	_eusartTxBufferRemaining	;volatile
  3553     015E                     l3268:
  3554                           
  3555                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3556     015E  01C9               	clrf	_eusartRxHead	;volatile
  3557     015F                     l3270:
  3558                           
  3559                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3560     015F  01FD               	clrf	_eusartRxTail	;volatile
  3561     0160                     l3272:
  3562                           
  3563                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3564     0160  01FC               	clrf	_eusartRxCount	;volatile
  3565     0161                     l3274:
  3566                           
  3567                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3568     0161  0021               	movlb	1	; select bank1
  3569     0162  1691               	bsf	17,5	;volatile
  3570     0163                     l618:
  3571     0163  0008               	return
  3572     0164                     __end_of_EUSART_Initialize:
  3573                           
  3574                           	psect	text9
  3575     03ED                     __ptext9:	
  3576 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3577 ;; Defined at:
  3578 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3581 ;;		 -> EUSART_Transmit_ISR(1), 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3593 ;;      Params:         0       2       0       0       0       0       0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0
  3596 ;;      Totals:         0       2       0       0       0       0       0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used: 1
  3599 ;; Hardware stack levels required when called: 7
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_EUSART_Initialize
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607     03ED                     _EUSART_SetTxInterruptHandler:	
  3608                           ;psect for function _EUSART_SetTxInterruptHandler
  3609                           
  3610     03ED                     l3044:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3613                           
  3614                           
  3615                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3616     03ED  0020               	movlb	0	; select bank0
  3617     03EE  086F               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3618     03EF  00ED               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3619     03F0  086E               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3620     03F1  00EC               	movwf	_EUSART_TxDefaultInterruptHandler
  3621     03F2                     l684:
  3622     03F2  0008               	return
  3623     03F3                     __end_of_EUSART_SetTxInterruptHandler:
  3624                           
  3625                           	psect	text10
  3626     03F3                     __ptext10:	
  3627 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3628 ;; Defined at:
  3629 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3632 ;;		 -> EUSART_Receive_ISR(1), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3644 ;;      Params:         0       2       0       0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0
  3647 ;;      Totals:         0       2       0       0       0       0       0       0
  3648 ;;Total ram usage:        2 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 7
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_EUSART_Initialize
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     03F3                     _EUSART_SetRxInterruptHandler:	
  3659                           ;psect for function _EUSART_SetRxInterruptHandler
  3660                           
  3661     03F3                     l3042:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3664                           
  3665                           
  3666                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3667     03F3  0020               	movlb	0	; select bank0
  3668     03F4  086F               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3669     03F5  00EB               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3670     03F6  086E               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3671     03F7  00EA               	movwf	_EUSART_RxDefaultInterruptHandler
  3672     03F8                     l687:
  3673     03F8  0008               	return
  3674     03F9                     __end_of_EUSART_SetRxInterruptHandler:
  3675                           
  3676                           	psect	text11
  3677     03F9                     __ptext11:	
  3678 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3679 ;; Defined at:
  3680 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3683 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3695 ;;      Params:         0       2       0       0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0
  3698 ;;      Totals:         0       2       0       0       0       0       0       0
  3699 ;;Total ram usage:        2 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 7
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_EUSART_Initialize
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709     03F9                     _EUSART_SetOverrunErrorHandler:	
  3710                           ;psect for function _EUSART_SetOverrunErrorHandler
  3711                           
  3712     03F9                     l3048:	
  3713                           ;incstack = 0
  3714                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3715                           
  3716                           
  3717                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3718     03F9  0020               	movlb	0	; select bank0
  3719     03FA  086F               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3720     03FB  00E7               	movwf	_EUSART_OverrunErrorHandler+1
  3721     03FC  086E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3722     03FD  00E6               	movwf	_EUSART_OverrunErrorHandler
  3723     03FE                     l678:
  3724     03FE  0008               	return
  3725     03FF                     __end_of_EUSART_SetOverrunErrorHandler:
  3726                           
  3727                           	psect	text12
  3728     03FF                     __ptext12:	
  3729 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3730 ;; Defined at:
  3731 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3734 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3746 ;;      Params:         0       2       0       0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0
  3749 ;;      Totals:         0       2       0       0       0       0       0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 7
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_EUSART_Initialize
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760     03FF                     _EUSART_SetFramingErrorHandler:	
  3761                           ;psect for function _EUSART_SetFramingErrorHandler
  3762                           
  3763     03FF                     l3046:	
  3764                           ;incstack = 0
  3765                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3766                           
  3767                           
  3768                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3769     03FF  0020               	movlb	0	; select bank0
  3770     0400  086F               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3771     0401  00E9               	movwf	_EUSART_FramingErrorHandler+1
  3772     0402  086E               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3773     0403  00E8               	movwf	_EUSART_FramingErrorHandler
  3774     0404                     l675:
  3775     0404  0008               	return
  3776     0405                     __end_of_EUSART_SetFramingErrorHandler:
  3777                           
  3778                           	psect	text13
  3779     0405                     __ptext13:	
  3780 ;; *************** function _EUSART_SetErrorHandler *****************
  3781 ;; Defined at:
  3782 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3785 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3797 ;;      Params:         0       2       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0
  3800 ;;      Totals:         0       2       0       0       0       0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 7
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_EUSART_Initialize
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811     0405                     _EUSART_SetErrorHandler:	
  3812                           ;psect for function _EUSART_SetErrorHandler
  3813                           
  3814     0405                     l3050:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3817                           
  3818                           
  3819                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3820     0405  0020               	movlb	0	; select bank0
  3821     0406  086F               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3822     0407  00E5               	movwf	_EUSART_ErrorHandler+1
  3823     0408  086E               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3824     0409  00E4               	movwf	_EUSART_ErrorHandler
  3825     040A                     l681:
  3826     040A  0008               	return
  3827     040B                     __end_of_EUSART_SetErrorHandler:
  3828                           
  3829                           	psect	intentry
  3830     0004                     __pintentry:	
  3831 ;; *************** function _INTERRUPT_InterruptManager *****************
  3832 ;; Defined at:
  3833 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3847 ;;      Params:         0       0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 6
  3854 ;; This function calls:
  3855 ;;		NULL
  3856 ;;		_EUSART_Receive_ISR
  3857 ;;		_EUSART_Transmit_ISR
  3858 ;;		_I2C_MasterIsr
  3859 ;;		_TMR1_ISR
  3860 ;; This function is called by:
  3861 ;;		Interrupt level 1
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865     0004                     _INTERRUPT_InterruptManager:
  3866                           
  3867                           ;incstack = 0
  3868     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3869                           
  3870                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3871     0005  3180               	pagesel	$
  3872     0006                     i1l3630:
  3873                           
  3874                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3875     0006  1F0B               	btfss	11,6	;volatile
  3876     0007  2809               	goto	u141_21
  3877     0008  280A               	goto	u141_20
  3878     0009                     u141_21:
  3879     0009  2853               	goto	i1l543
  3880     000A                     u141_20:
  3881     000A                     i1l3632:
  3882                           
  3883                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3884     000A  0021               	movlb	1	; select bank1
  3885     000B  1E11               	btfss	17,4	;volatile
  3886     000C  280E               	goto	u142_21
  3887     000D  280F               	goto	u142_20
  3888     000E                     u142_21:
  3889     000E  281A               	goto	i1l532
  3890     000F                     u142_20:
  3891     000F                     i1l3634:
  3892     000F  0020               	movlb	0	; select bank0
  3893     0010  1E11               	btfss	17,4	;volatile
  3894     0011  2813               	goto	u143_21
  3895     0012  2814               	goto	u143_20
  3896     0013                     u143_21:
  3897     0013  281A               	goto	i1l532
  3898     0014                     u143_20:
  3899     0014                     i1l3636:
  3900                           
  3901                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  3902     0014  086D               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3903     0015  008A               	movwf	10
  3904     0016  086C               	movf	_EUSART_TxDefaultInterruptHandler,w
  3905     0017  000A               	callw
  3906     0018  3180               	pagesel	$
  3907                           
  3908                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3909     0019  2853               	goto	i1l543
  3910     001A                     i1l532:	
  3911                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  3912                           
  3913     001A  0021               	movlb	1	; select bank1
  3914     001B  1E91               	btfss	17,5	;volatile
  3915     001C  281E               	goto	u144_21
  3916     001D  281F               	goto	u144_20
  3917     001E                     u144_21:
  3918     001E  282A               	goto	i1l534
  3919     001F                     u144_20:
  3920     001F                     i1l3638:
  3921     001F  0020               	movlb	0	; select bank0
  3922     0020  1E91               	btfss	17,5	;volatile
  3923     0021  2823               	goto	u145_21
  3924     0022  2824               	goto	u145_20
  3925     0023                     u145_21:
  3926     0023  282A               	goto	i1l534
  3927     0024                     u145_20:
  3928     0024                     i1l3640:
  3929                           
  3930                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  3931     0024  086B               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3932     0025  008A               	movwf	10
  3933     0026  086A               	movf	_EUSART_RxDefaultInterruptHandler,w
  3934     0027  000A               	callw
  3935     0028  3180               	pagesel	$
  3936                           
  3937                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3938     0029  2853               	goto	i1l543
  3939     002A                     i1l534:	
  3940                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  3941                           
  3942     002A  0021               	movlb	1	; select bank1
  3943     002B  1D92               	btfss	18,3	;volatile
  3944     002C  282E               	goto	u146_21
  3945     002D  282F               	goto	u146_20
  3946     002E                     u146_21:
  3947     002E  283A               	goto	i1l536
  3948     002F                     u146_20:
  3949     002F                     i1l3642:
  3950     002F  0020               	movlb	0	; select bank0
  3951     0030  1D92               	btfss	18,3	;volatile
  3952     0031  2833               	goto	u147_21
  3953     0032  2834               	goto	u147_20
  3954     0033                     u147_21:
  3955     0033  283A               	goto	i1l536
  3956     0034                     u147_20:
  3957     0034                     i1l3644:
  3958                           
  3959                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  3960     0034  0844               	movf	_MSSP_InterruptHandler+1,w
  3961     0035  008A               	movwf	10
  3962     0036  0843               	movf	_MSSP_InterruptHandler,w
  3963     0037  000A               	callw
  3964     0038  3180               	pagesel	$
  3965                           
  3966                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3967     0039  2853               	goto	i1l543
  3968     003A                     i1l536:	
  3969                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  3970                           
  3971     003A  0021               	movlb	1	; select bank1
  3972     003B  1D91               	btfss	17,3	;volatile
  3973     003C  283E               	goto	u148_21
  3974     003D  283F               	goto	u148_20
  3975     003E                     u148_21:
  3976     003E  2845               	goto	i1l538
  3977     003F                     u148_20:
  3978     003F                     i1l3646:
  3979     003F  0020               	movlb	0	; select bank0
  3980     0040  1D91               	btfss	17,3	;volatile
  3981     0041  2843               	goto	u149_21
  3982     0042  2844               	goto	u149_20
  3983     0043                     u149_21:
  3984     0043  2845               	goto	i1l538
  3985     0044                     u149_20:
  3986     0044  2834               	goto	i1l3644
  3987     0045                     i1l538:	
  3988                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  3989                           
  3990     0045  0021               	movlb	1	; select bank1
  3991     0046  1C11               	btfss	17,0	;volatile
  3992     0047  2849               	goto	u150_21
  3993     0048  284A               	goto	u150_20
  3994     0049                     u150_21:
  3995     0049  2853               	goto	i1l537
  3996     004A                     u150_20:
  3997     004A                     i1l3650:
  3998     004A  0020               	movlb	0	; select bank0
  3999     004B  1C11               	btfss	17,0	;volatile
  4000     004C  284E               	goto	u151_21
  4001     004D  284F               	goto	u151_20
  4002     004E                     u151_21:
  4003     004E  2853               	goto	i1l537
  4004     004F                     u151_20:
  4005     004F                     i1l3652:
  4006                           
  4007                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
  4008     004F  3183  236A  3180   	fcall	_TMR1_ISR
  4009                           
  4010                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  4011     0052  2853               	goto	i1l543
  4012     0053                     i1l537:
  4013     0053                     i1l543:
  4014     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4015     0054  0009               	retfie
  4016     0055                     __end_of_INTERRUPT_InterruptManager:
  4017                           
  4018                           	psect	text15
  4019     036A                     __ptext15:	
  4020 ;; *************** function _TMR1_ISR *****************
  4021 ;; Defined at:
  4022 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4036 ;;      Params:         0       0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 2
  4043 ;; This function calls:
  4044 ;;		_TMR1_CallBack
  4045 ;;		_TMR1_WriteTimer
  4046 ;; This function is called by:
  4047 ;;		_INTERRUPT_InterruptManager
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     036A                     _TMR1_ISR:	
  4052                           ;psect for function _TMR1_ISR
  4053                           
  4054     036A                     i1l3426:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4057                           
  4058                           
  4059                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4060     036A  0020               	movlb	0	; select bank0
  4061     036B  1011               	bcf	17,0	;volatile
  4062     036C                     i1l3428:
  4063                           
  4064                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4065     036C  0842               	movf	_timer1ReloadVal+1,w	;volatile
  4066     036D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4067     036E  0841               	movf	_timer1ReloadVal,w	;volatile
  4068     036F  00F0               	movwf	TMR1_WriteTimer@timerVal
  4069     0370  3182  22FA  3183   	fcall	_TMR1_WriteTimer
  4070                           
  4071                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  4072     0373  3183  2377  3183   	fcall	_TMR1_CallBack
  4073     0376                     i1l742:
  4074     0376  0008               	return
  4075     0377                     __end_of_TMR1_ISR:
  4076                           
  4077                           	psect	text16
  4078     02FA                     __ptext16:	
  4079 ;; *************** function _TMR1_WriteTimer *****************
  4080 ;; Defined at:
  4081 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  timerVal        2    0[COMMON] unsigned short 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4095 ;;      Params:         2       0       0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0
  4098 ;;      Totals:         2       0       0       0       0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_TMR1_ISR
  4105 ;;		_TMR1_Reload
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109     02FA                     _TMR1_WriteTimer:	
  4110                           ;psect for function _TMR1_WriteTimer
  4111                           
  4112     02FA                     i1l3290:	
  4113                           ;incstack = 0
  4114                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4115                           
  4116                           
  4117                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4118     02FA  0020               	movlb	0	; select bank0
  4119     02FB  1D18               	btfss	24,2	;volatile
  4120     02FC  2AFE               	goto	u104_21
  4121     02FD  2AFF               	goto	u104_20
  4122     02FE                     u104_21:
  4123     02FE  2B06               	goto	i1l3300
  4124     02FF                     u104_20:
  4125     02FF                     i1l3292:
  4126                           
  4127                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4128     02FF  1018               	bcf	24,0	;volatile
  4129     0300                     i1l3294:
  4130                           
  4131                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4132     0300  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4133     0301  0097               	movwf	23	;volatile
  4134     0302                     i1l3296:
  4135                           
  4136                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4137     0302  0870               	movf	TMR1_WriteTimer@timerVal,w
  4138     0303  0096               	movwf	22	;volatile
  4139     0304                     i1l3298:
  4140                           
  4141                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4142     0304  1418               	bsf	24,0	;volatile
  4143                           
  4144                           ;mcc_generated_files/tmr1.c: 133:     }
  4145     0305  2B0A               	goto	i1l730
  4146     0306                     i1l3300:
  4147                           
  4148                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4149     0306  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4150     0307  0097               	movwf	23	;volatile
  4151     0308                     i1l3302:
  4152                           
  4153                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4154     0308  0870               	movf	TMR1_WriteTimer@timerVal,w
  4155     0309  0096               	movwf	22	;volatile
  4156     030A                     i1l730:
  4157     030A  0008               	return
  4158     030B                     __end_of_TMR1_WriteTimer:
  4159                           
  4160                           	psect	text17
  4161     0377                     __ptext17:	
  4162 ;; *************** function _TMR1_CallBack *****************
  4163 ;; Defined at:
  4164 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4178 ;;      Params:         0       0       0       0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0
  4181 ;;      Totals:         0       0       0       0       0       0       0       0
  4182 ;;Total ram usage:        0 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 1
  4185 ;; This function calls:
  4186 ;;		NULL
  4187 ;;		_TMR1_DefaultInterruptHandler
  4188 ;;		_rtcc_handle
  4189 ;; This function is called by:
  4190 ;;		_TMR1_ISR
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194     0377                     _TMR1_CallBack:	
  4195                           ;psect for function _TMR1_CallBack
  4196                           
  4197     0377                     i1l3304:	
  4198                           ;incstack = 0
  4199                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4200                           
  4201                           
  4202                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  4203     0377  0020               	movlb	0	; select bank0
  4204     0378  0862               	movf	_TMR1_InterruptHandler,w
  4205     0379  0463               	iorwf	_TMR1_InterruptHandler+1,w
  4206     037A  1903               	btfsc	3,2
  4207     037B  2B7D               	goto	u105_21
  4208     037C  2B7E               	goto	u105_20
  4209     037D                     u105_21:
  4210     037D  2B83               	goto	i1l746
  4211     037E                     u105_20:
  4212     037E                     i1l3306:
  4213                           
  4214                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  4215     037E  0863               	movf	_TMR1_InterruptHandler+1,w
  4216     037F  008A               	movwf	10
  4217     0380  0862               	movf	_TMR1_InterruptHandler,w
  4218     0381  000A               	callw
  4219     0382  3183               	pagesel	$
  4220     0383                     i1l746:
  4221     0383  0008               	return
  4222     0384                     __end_of_TMR1_CallBack:
  4223                           
  4224                           	psect	text18
  4225     0471                     __ptext18:	
  4226 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4227 ;; Defined at:
  4228 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4242 ;;      Params:         0       0       0       0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0
  4245 ;;      Totals:         0       0       0       0       0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_TMR1_Initialize
  4252 ;;		_TMR1_CallBack
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256     0471                     _TMR1_DefaultInterruptHandler:	
  4257                           ;psect for function _TMR1_DefaultInterruptHandler
  4258                           
  4259     0471                     i1l752:	
  4260                           ;incstack = 0
  4261                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4262                           
  4263     0471  0008               	return
  4264     0472                     __end_of_TMR1_DefaultInterruptHandler:
  4265                           
  4266                           	psect	text19
  4267     03A7                     __ptext19:	
  4268 ;; *************** function _rtcc_handle *****************
  4269 ;; Defined at:
  4270 ;;		line 12 in file "tick.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4284 ;;      Params:         0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_Tick_Init_SES
  4294 ;;		_TMR1_CallBack
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298     03A7                     _rtcc_handle:	
  4299                           ;psect for function _rtcc_handle
  4300                           
  4301     03A7                     i1l3122:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _rtcc_handle: [wreg]
  4304                           
  4305                           
  4306                           ;tick.c: 14:     device_time++;
  4307     03A7  3001               	movlw	1
  4308     03A8  0020               	movlb	0	; select bank0
  4309     03A9  07BD               	addwf	_device_time,f	;volatile
  4310     03AA  3000               	movlw	0
  4311     03AB  3DBE               	addwfc	_device_time+1,f	;volatile
  4312     03AC  3000               	movlw	0
  4313     03AD  3DBF               	addwfc	_device_time+2,f	;volatile
  4314     03AE  3000               	movlw	0
  4315     03AF  3DC0               	addwfc	_device_time+3,f	;volatile
  4316     03B0                     i1l911:
  4317     03B0  0008               	return
  4318     03B1                     __end_of_rtcc_handle:
  4319                           
  4320                           	psect	text20
  4321     0447                     __ptext20:	
  4322 ;; *************** function _I2C_MasterIsr *****************
  4323 ;; Defined at:
  4324 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4338 ;;      Params:         0       0       0       0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 5
  4345 ;; This function calls:
  4346 ;;		_I2C_MasterFsm
  4347 ;; This function is called by:
  4348 ;;		_I2C_Open
  4349 ;;		_INTERRUPT_InterruptManager
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353     0447                     _I2C_MasterIsr:	
  4354                           ;psect for function _I2C_MasterIsr
  4355                           
  4356     0447                     i1l3424:	
  4357                           ;incstack = 0
  4358                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4359                           
  4360                           
  4361                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  4362     0447  3181  21CB  3184   	fcall	_I2C_MasterFsm
  4363     044A                     i1l331:
  4364     044A  0008               	return
  4365     044B                     __end_of_I2C_MasterIsr:
  4366                           
  4367                           	psect	text21
  4368     01CB                     __ptext21:	
  4369 ;; *************** function _I2C_MasterFsm *****************
  4370 ;; Defined at:
  4371 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4385 ;;      Params:         0       0       0       0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0
  4387 ;;      Temps:          2       0       0       0       0       0       0       0
  4388 ;;      Totals:         2       0       0       0       0       0       0       0
  4389 ;;Total ram usage:        2 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 4
  4392 ;; This function calls:
  4393 ;;		_I2C_DO_ADDRESS_NACK
  4394 ;;		_I2C_DO_IDLE
  4395 ;;		_I2C_DO_RCEN
  4396 ;;		_I2C_DO_RESET
  4397 ;;		_I2C_DO_RX
  4398 ;;		_I2C_DO_RX_ACK
  4399 ;;		_I2C_DO_RX_NACK_RESTART
  4400 ;;		_I2C_DO_RX_NACK_STOP
  4401 ;;		_I2C_DO_SEND_ADR_READ
  4402 ;;		_I2C_DO_SEND_ADR_WRITE
  4403 ;;		_I2C_DO_SEND_RESTART
  4404 ;;		_I2C_DO_SEND_RESTART_READ
  4405 ;;		_I2C_DO_SEND_RESTART_WRITE
  4406 ;;		_I2C_DO_SEND_STOP
  4407 ;;		_I2C_DO_TX
  4408 ;;		_I2C_DO_TX_EMPTY
  4409 ;;		_I2C_MasterClearIrq
  4410 ;;		_I2C_MasterIsNack
  4411 ;; This function is called by:
  4412 ;;		_I2C_MasterIsr
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416     01CB                     _I2C_MasterFsm:	
  4417                           ;psect for function _I2C_MasterFsm
  4418                           
  4419     01CB                     i1l3276:	
  4420                           ;incstack = 0
  4421                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4422                           
  4423                           
  4424                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  4425     01CB  3184  245B  3181   	fcall	_I2C_MasterClearIrq
  4426     01CE                     i1l3278:
  4427                           
  4428                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4429     01CE  0020               	movlb	0	; select bank0
  4430     01CF  1C3C               	btfss	_I2C_Status+28,0
  4431     01D0  29D2               	goto	u102_21
  4432     01D1  29D3               	goto	u102_20
  4433     01D2                     u102_21:
  4434     01D2  29DE               	goto	i1l3284
  4435     01D3                     u102_20:
  4436     01D3                     i1l3280:
  4437     01D3  3184  240B  3181   	fcall	_I2C_MasterIsNack
  4438     01D6  3A00               	xorlw	0
  4439     01D7  1903               	skipnz
  4440     01D8  29DA               	goto	u103_21
  4441     01D9  29DB               	goto	u103_20
  4442     01DA                     u103_21:
  4443     01DA  29DE               	goto	i1l3284
  4444     01DB                     u103_20:
  4445     01DB                     i1l3282:
  4446                           
  4447                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4448     01DB  300F               	movlw	15
  4449     01DC  0020               	movlb	0	; select bank0
  4450     01DD  00BA               	movwf	_I2C_Status+26
  4451     01DE                     i1l3284:
  4452                           
  4453                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4454     01DE  0020               	movlb	0	; select bank0
  4455     01DF  083A               	movf	_I2C_Status+26,w
  4456     01E0  00FA               	movwf	??_I2C_MasterFsm
  4457     01E1  01FB               	clrf	??_I2C_MasterFsm+1
  4458     01E2  35FA               	lslf	??_I2C_MasterFsm,f
  4459     01E3  0DFB               	rlf	??_I2C_MasterFsm+1,f
  4460     01E4  3061               	movlw	low _i2c_fsmStateTable
  4461     01E5  077A               	addwf	??_I2C_MasterFsm,w
  4462     01E6  0084               	movwf	4
  4463     01E7  3002               	movlw	high _i2c_fsmStateTable
  4464     01E8  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  4465     01E9  3880               	iorlw	128
  4466     01EA  0085               	movwf	5
  4467     01EB  3F01               	moviw [1]fsr0
  4468     01EC  008A               	movwf	10
  4469     01ED  3F00               	moviw [0]fsr0
  4470     01EE  000A               	callw
  4471     01EF  3181               	pagesel	$
  4472     01F0  0020               	movlb	0	; select bank0
  4473     01F1  00BA               	movwf	_I2C_Status+26
  4474     01F2                     i1l335:
  4475     01F2  0008               	return
  4476     01F3                     __end_of_I2C_MasterFsm:
  4477                           
  4478                           	psect	text22
  4479     045B                     __ptext22:	
  4480 ;; *************** function _I2C_MasterClearIrq *****************
  4481 ;; Defined at:
  4482 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		None
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4496 ;;      Params:         0       0       0       0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0
  4499 ;;      Totals:         0       0       0       0       0       0       0       0
  4500 ;;Total ram usage:        0 bytes
  4501 ;; Hardware stack levels used: 1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_I2C_MasterFsm
  4506 ;;		_I2C_Open
  4507 ;;		_I2C_Close
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511     045B                     _I2C_MasterClearIrq:	
  4512                           ;psect for function _I2C_MasterClearIrq
  4513                           
  4514     045B                     i1l2850:	
  4515                           ;incstack = 0
  4516                           ; Regs used in _I2C_MasterClearIrq: []
  4517                           
  4518                           
  4519                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  4520     045B  0020               	movlb	0	; select bank0
  4521     045C  1191               	bcf	17,3	;volatile
  4522     045D                     i1l498:
  4523     045D  0008               	return
  4524     045E                     __end_of_I2C_MasterClearIrq:
  4525                           
  4526                           	psect	text23
  4527     01F3                     __ptext23:	
  4528 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4529 ;; Defined at:
  4530 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      enum E3112
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4544 ;;      Params:         0       0       0       0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0
  4546 ;;      Temps:          2       0       0       0       0       0       0       0
  4547 ;;      Totals:         2       0       0       0       0       0       0       0
  4548 ;;Total ram usage:        2 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 3
  4551 ;; This function calls:
  4552 ;;		NULL
  4553 ;;		_I2C_CallbackReturnReset
  4554 ;;		_I2C_CallbackReturnStop
  4555 ;;		_I2C_DO_SEND_RESTART
  4556 ;;		_I2C_DO_SEND_STOP
  4557 ;;		_rd1RegCompleteHandler
  4558 ;;		_rd2RegCompleteHandler
  4559 ;;		_rdBlkRegCompleteHandler
  4560 ;;		_wr1RegCompleteHandler
  4561 ;;		_wr2RegCompleteHandler
  4562 ;; This function is called by:
  4563 ;;		_I2C_MasterFsm
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567     01F3                     _I2C_DO_ADDRESS_NACK:	
  4568                           ;psect for function _I2C_DO_ADDRESS_NACK
  4569                           
  4570     01F3                     i1l3022:	
  4571                           ;incstack = 0
  4572                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4573                           
  4574                           
  4575                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  4576     01F3  0020               	movlb	0	; select bank0
  4577     01F4  103C               	bcf	_I2C_Status+28,0
  4578     01F5                     i1l3024:
  4579                           
  4580                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  4581     01F5  3002               	movlw	2
  4582     01F6  00BB               	movwf	_I2C_Status+27
  4583                           
  4584                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4585     01F7  2A00               	goto	i1l3036
  4586     01F8                     i1l3026:
  4587                           
  4588                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  4589     01F8  3184  242A  3181   	fcall	_I2C_DO_SEND_RESTART
  4590     01FB  2A1A               	goto	i1l426
  4591     01FC                     i1l3030:
  4592                           
  4593                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  4594     01FC  3184  2425  3181   	fcall	_I2C_DO_SEND_STOP
  4595     01FF  2A1A               	goto	i1l426
  4596     0200                     i1l3036:
  4597     0200  082E               	movf	low ((_I2C_Status| 0+14)),w
  4598     0201  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4599     0202  3004               	movlw	4
  4600     0203  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4601     0204  0086               	movwf	6
  4602     0205  0187               	clrf	7
  4603     0206  3F41               	moviw [1]fsr1
  4604     0207  008A               	movwf	10
  4605     0208  3F40               	moviw [0]fsr1
  4606     0209  000A               	callw
  4607     020A  3181               	pagesel	$
  4608     020B  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
  4609     020C  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
  4610                           
  4611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4612                           ; Switch size 1, requested type "simple"
  4613                           ; Number of cases is 1, Range of values is 0 to 0
  4614                           ; switch strategies available:
  4615                           ; Name         Instructions Cycles
  4616                           ; simple_byte            4     3 (average)
  4617                           ; direct_byte            8     6 (fixed)
  4618                           ; jumptable            260     6 (fixed)
  4619                           ;	Chosen strategy is simple_byte
  4620     020D  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  4621     020E  3A00               	xorlw	0	; case 0
  4622     020F  1903               	skipnz
  4623     0210  2A12               	goto	i1l3770
  4624     0211  29FC               	goto	i1l3030
  4625     0212                     i1l3770:
  4626                           
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 2, Range of values is 2 to 3
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte            7     4 (average)
  4632                           ; direct_byte           13     9 (fixed)
  4633                           ; jumptable            263     9 (fixed)
  4634                           ;	Chosen strategy is simple_byte
  4635     0212  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
  4636     0213  3A02               	xorlw	2	; case 2
  4637     0214  1903               	skipnz
  4638     0215  29F8               	goto	i1l3026
  4639     0216  3A01               	xorlw	1	; case 3
  4640     0217  1903               	skipnz
  4641     0218  29F8               	goto	i1l3026
  4642     0219  29FC               	goto	i1l3030
  4643     021A                     i1l426:
  4644     021A  0008               	return
  4645     021B                     __end_of_I2C_DO_ADDRESS_NACK:
  4646                           
  4647                           	psect	text24
  4648     0411                     __ptext24:	
  4649 ;; *************** function _I2C_DO_RESET *****************
  4650 ;; Defined at:
  4651 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      enum E3112
  4658 ;; Registers used:
  4659 ;;		wreg, status,2
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4665 ;;      Params:         0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_I2C_MasterFsm
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678     0411                     _I2C_DO_RESET:	
  4679                           ;psect for function _I2C_DO_RESET
  4680                           
  4681     0411                     i1l3014:	
  4682                           ;incstack = 0
  4683                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4684                           
  4685                           
  4686                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  4687     0411  0020               	movlb	0	; select bank0
  4688     0412  10BC               	bcf	_I2C_Status+28,1
  4689     0413                     i1l3016:
  4690                           
  4691                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  4692     0413  01BB               	clrf	_I2C_Status+27
  4693     0414                     i1l3018:
  4694                           
  4695                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  4696     0414  300E               	movlw	14
  4697     0415                     i1l420:
  4698     0415  0008               	return
  4699     0416                     __end_of_I2C_DO_RESET:
  4700                           
  4701                           	psect	text25
  4702     0416                     __ptext25:	
  4703 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4704 ;; Defined at:
  4705 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      enum E3112
  4712 ;; Registers used:
  4713 ;;		wreg, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4719 ;;      Params:         0       0       0       0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 1
  4726 ;; This function calls:
  4727 ;;		_I2C_MasterSendNack
  4728 ;; This function is called by:
  4729 ;;		_I2C_DO_RX
  4730 ;;		_I2C_MasterFsm
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734     0416                     _I2C_DO_RX_NACK_RESTART:	
  4735                           ;psect for function _I2C_DO_RX_NACK_RESTART
  4736                           
  4737     0416                     i1l2758:	
  4738                           ;incstack = 0
  4739                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4740                           
  4741                           
  4742                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  4743     0416  3184  244F  3184   	fcall	_I2C_MasterSendNack
  4744     0419                     i1l2760:
  4745                           
  4746                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  4747     0419  3009               	movlw	9
  4748     041A                     i1l417:
  4749     041A  0008               	return
  4750     041B                     __end_of_I2C_DO_RX_NACK_RESTART:
  4751                           
  4752                           	psect	text26
  4753     041B                     __ptext26:	
  4754 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4755 ;; Defined at:
  4756 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      enum E3112
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4770 ;;      Params:         0       0       0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 1
  4777 ;; This function calls:
  4778 ;;		_I2C_MasterSendNack
  4779 ;; This function is called by:
  4780 ;;		_I2C_DO_RX
  4781 ;;		_I2C_MasterFsm
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785     041B                     _I2C_DO_RX_NACK_STOP:	
  4786                           ;psect for function _I2C_DO_RX_NACK_STOP
  4787                           
  4788     041B                     i1l2764:	
  4789                           ;incstack = 0
  4790                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  4791                           
  4792                           
  4793                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  4794     041B  3184  244F  3184   	fcall	_I2C_MasterSendNack
  4795     041E                     i1l2766:
  4796                           
  4797                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  4798     041E  300A               	movlw	10
  4799     041F                     i1l414:
  4800     041F  0008               	return
  4801     0420                     __end_of_I2C_DO_RX_NACK_STOP:
  4802                           
  4803                           	psect	text27
  4804     0420                     __ptext27:	
  4805 ;; *************** function _I2C_DO_RX_ACK *****************
  4806 ;; Defined at:
  4807 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      enum E3112
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0, pclath, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4821 ;;      Params:         0       0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0
  4824 ;;      Totals:         0       0       0       0       0       0       0       0
  4825 ;;Total ram usage:        0 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 1
  4828 ;; This function calls:
  4829 ;;		_I2C_MasterSendAck
  4830 ;; This function is called by:
  4831 ;;		_I2C_MasterFsm
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835     0420                     _I2C_DO_RX_ACK:	
  4836                           ;psect for function _I2C_DO_RX_ACK
  4837                           
  4838     0420                     i1l3008:	
  4839                           ;incstack = 0
  4840                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  4841                           
  4842                           
  4843                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  4844     0420  3184  244B  3184   	fcall	_I2C_MasterSendAck
  4845     0423                     i1l3010:
  4846                           
  4847                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  4848     0423  3005               	movlw	5
  4849     0424                     i1l411:
  4850     0424  0008               	return
  4851     0425                     __end_of_I2C_DO_RX_ACK:
  4852                           
  4853                           	psect	text28
  4854     0425                     __ptext28:	
  4855 ;; *************** function _I2C_DO_SEND_STOP *****************
  4856 ;; Defined at:
  4857 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;		None
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  1    wreg      enum E3112
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0, pclath, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4871 ;;      Params:         0       0       0       0       0       0       0       0
  4872 ;;      Locals:         0       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0
  4874 ;;      Totals:         0       0       0       0       0       0       0       0
  4875 ;;Total ram usage:        0 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; Hardware stack levels required when called: 1
  4878 ;; This function calls:
  4879 ;;		_I2C_MasterStop
  4880 ;; This function is called by:
  4881 ;;		_I2C_DO_TX
  4882 ;;		_I2C_DO_TX_EMPTY
  4883 ;;		_I2C_DO_ADDRESS_NACK
  4884 ;;		_I2C_MasterFsm
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888     0425                     _I2C_DO_SEND_STOP:	
  4889                           ;psect for function _I2C_DO_SEND_STOP
  4890                           
  4891     0425                     i1l2746:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  4894                           
  4895                           
  4896                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  4897     0425  3184  2467  3184   	fcall	_I2C_MasterStop
  4898     0428                     i1l2748:
  4899                           
  4900                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  4901     0428  3000               	movlw	0
  4902     0429                     i1l408:
  4903     0429  0008               	return
  4904     042A                     __end_of_I2C_DO_SEND_STOP:
  4905                           
  4906                           	psect	text29
  4907     042A                     __ptext29:	
  4908 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4909 ;; Defined at:
  4910 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      enum E3112
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, pclath, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4924 ;;      Params:         0       0       0       0       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0
  4926 ;;      Temps:          0       0       0       0       0       0       0       0
  4927 ;;      Totals:         0       0       0       0       0       0       0       0
  4928 ;;Total ram usage:        0 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 1
  4931 ;; This function calls:
  4932 ;;		_I2C_MasterEnableRestart
  4933 ;; This function is called by:
  4934 ;;		_I2C_DO_TX_EMPTY
  4935 ;;		_I2C_DO_ADDRESS_NACK
  4936 ;;		_I2C_MasterFsm
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940     042A                     _I2C_DO_SEND_RESTART:	
  4941                           ;psect for function _I2C_DO_SEND_RESTART
  4942                           
  4943     042A                     i1l2772:	
  4944                           ;incstack = 0
  4945                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4946                           
  4947                           
  4948                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  4949     042A  3184  246A  3184   	fcall	_I2C_MasterEnableRestart
  4950     042D                     i1l2774:
  4951                           
  4952                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  4953     042D  3001               	movlw	1
  4954     042E                     i1l405:
  4955     042E  0008               	return
  4956     042F                     __end_of_I2C_DO_SEND_RESTART:
  4957                           
  4958                           	psect	text30
  4959     042F                     __ptext30:	
  4960 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4961 ;; Defined at:
  4962 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      enum E3112
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4976 ;;      Params:         0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 1
  4983 ;; This function calls:
  4984 ;;		_I2C_MasterEnableRestart
  4985 ;; This function is called by:
  4986 ;;		_I2C_DO_TX
  4987 ;;		_I2C_MasterFsm
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991     042F                     _I2C_DO_SEND_RESTART_WRITE:	
  4992                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4993                           
  4994     042F                     i1l2740:	
  4995                           ;incstack = 0
  4996                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4997                           
  4998                           
  4999                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  5000     042F  3184  246A  3184   	fcall	_I2C_MasterEnableRestart
  5001     0432                     i1l2742:
  5002                           
  5003                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5004     0432  3002               	movlw	2
  5005     0433                     i1l402:
  5006     0433  0008               	return
  5007     0434                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5008                           
  5009                           	psect	text31
  5010     0434                     __ptext31:	
  5011 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5012 ;; Defined at:
  5013 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      enum E3112
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5027 ;;      Params:         0       0       0       0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0
  5030 ;;      Totals:         0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        0 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 1
  5034 ;; This function calls:
  5035 ;;		_I2C_MasterEnableRestart
  5036 ;; This function is called by:
  5037 ;;		_I2C_DO_TX
  5038 ;;		_I2C_MasterFsm
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042     0434                     _I2C_DO_SEND_RESTART_READ:	
  5043                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5044                           
  5045     0434                     i1l2734:	
  5046                           ;incstack = 0
  5047                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5048                           
  5049                           
  5050                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5051     0434  3184  246A  3184   	fcall	_I2C_MasterEnableRestart
  5052     0437                     i1l2736:
  5053                           
  5054                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5055     0437  3001               	movlw	1
  5056     0438                     i1l399:
  5057     0438  0008               	return
  5058     0439                     __end_of_I2C_DO_SEND_RESTART_READ:
  5059                           
  5060                           	psect	text32
  5061     03DA                     __ptext32:	
  5062 ;; *************** function _I2C_DO_RCEN *****************
  5063 ;; Defined at:
  5064 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      enum E3112
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5078 ;;      Params:         0       0       0       0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0       0       0       0
  5081 ;;      Totals:         0       0       0       0       0       0       0       0
  5082 ;;Total ram usage:        0 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; Hardware stack levels required when called: 1
  5085 ;; This function calls:
  5086 ;;		_I2C_MasterStartRx
  5087 ;; This function is called by:
  5088 ;;		_I2C_MasterFsm
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092     03DA                     _I2C_DO_RCEN:	
  5093                           ;psect for function _I2C_DO_RCEN
  5094                           
  5095     03DA                     i1l2976:	
  5096                           ;incstack = 0
  5097                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5098                           
  5099                           
  5100                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5101     03DA  0020               	movlb	0	; select bank0
  5102     03DB  103C               	bcf	_I2C_Status+28,0
  5103     03DC                     i1l2978:
  5104                           
  5105                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5106     03DC  3184  2464  3183   	fcall	_I2C_MasterStartRx
  5107     03DF                     i1l2980:
  5108                           
  5109                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5110     03DF  3004               	movlw	4
  5111     03E0                     i1l375:
  5112     03E0  0008               	return
  5113     03E1                     __end_of_I2C_DO_RCEN:
  5114                           
  5115                           	psect	text33
  5116     00DF                     __ptext33:	
  5117 ;; *************** function _I2C_DO_RX *****************
  5118 ;; Defined at:
  5119 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      enum E3112
  5126 ;; Registers used:
  5127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5133 ;;      Params:         0       0       0       0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0
  5135 ;;      Temps:          2       0       0       0       0       0       0       0
  5136 ;;      Totals:         2       0       0       0       0       0       0       0
  5137 ;;Total ram usage:        2 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 3
  5140 ;; This function calls:
  5141 ;;		NULL
  5142 ;;		_I2C_CallbackReturnReset
  5143 ;;		_I2C_CallbackReturnStop
  5144 ;;		_I2C_DO_RX_NACK_RESTART
  5145 ;;		_I2C_DO_RX_NACK_STOP
  5146 ;;		_I2C_MasterGetRxData
  5147 ;;		_I2C_MasterSendAck
  5148 ;;		_rd1RegCompleteHandler
  5149 ;;		_rd2RegCompleteHandler
  5150 ;;		_rdBlkRegCompleteHandler
  5151 ;;		_wr1RegCompleteHandler
  5152 ;;		_wr2RegCompleteHandler
  5153 ;; This function is called by:
  5154 ;;		_I2C_MasterFsm
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158     00DF                     _I2C_DO_RX:	
  5159                           ;psect for function _I2C_DO_RX
  5160                           
  5161     00DF                     i1l2946:	
  5162                           ;incstack = 0
  5163                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5164                           
  5165                           
  5166                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5167     00DF  0020               	movlb	0	; select bank0
  5168     00E0  0837               	movf	low ((_I2C_Status| 0+23)),w
  5169     00E1  0086               	movwf	6
  5170     00E2  0187               	clrf	7
  5171     00E3  3184  2461  3180   	fcall	_I2C_MasterGetRxData
  5172     00E6  0081               	movwf	1
  5173     00E7                     i1l2948:
  5174     00E7  3001               	movlw	1
  5175     00E8  00F8               	movwf	??_I2C_DO_RX
  5176     00E9  0878               	movf	??_I2C_DO_RX,w
  5177     00EA  0020               	movlb	0	; select bank0
  5178     00EB  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  5179     00EC                     i1l2950:
  5180                           
  5181                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5182     00EC  3001               	movlw	1
  5183     00ED  02B8               	subwf	_I2C_Status+24,f
  5184     00EE  3000               	movlw	0
  5185     00EF  3BB9               	subwfb	_I2C_Status+25,f
  5186     00F0  0838               	movf	_I2C_Status+24,w
  5187     00F1  0439               	iorwf	_I2C_Status+25,w
  5188     00F2  1903               	btfsc	3,2
  5189     00F3  28F5               	goto	u91_21
  5190     00F4  28F6               	goto	u91_20
  5191     00F5                     u91_21:
  5192     00F5  28FB               	goto	i1l363
  5193     00F6                     u91_20:
  5194     00F6                     i1l2952:
  5195                           
  5196                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  5197     00F6  3184  244B  3180   	fcall	_I2C_MasterSendAck
  5198     00F9                     i1l2954:
  5199                           
  5200                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  5201     00F9  3005               	movlw	5
  5202     00FA  2921               	goto	i1l364
  5203     00FB                     i1l363:	
  5204                           ;mcc_generated_files/i2c_master.c: 388:     else
  5205                           
  5206                           
  5207                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  5208     00FB  15BC               	bsf	_I2C_Status+28,3
  5209                           
  5210                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5211     00FC  2905               	goto	i1l2970
  5212     00FD                     i1l2960:
  5213                           
  5214                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  5215     00FD  3184  2416  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  5216     0100  2921               	goto	i1l364
  5217     0101                     i1l2964:
  5218                           
  5219                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  5220     0101  3184  241B  3180   	fcall	_I2C_DO_RX_NACK_STOP
  5221     0104  2921               	goto	i1l364
  5222     0105                     i1l2970:
  5223     0105  082C               	movf	low ((_I2C_Status| 0+12)),w
  5224     0106  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5225     0107  0821               	movf	_I2C_Status+1,w
  5226     0108  008A               	movwf	10
  5227     0109  0820               	movf	_I2C_Status,w
  5228     010A  000A               	callw
  5229     010B  3180               	pagesel	$
  5230     010C  00F8               	movwf	??_I2C_DO_RX
  5231     010D  01F9               	clrf	??_I2C_DO_RX+1
  5232                           
  5233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5234                           ; Switch size 1, requested type "simple"
  5235                           ; Number of cases is 1, Range of values is 0 to 0
  5236                           ; switch strategies available:
  5237                           ; Name         Instructions Cycles
  5238                           ; simple_byte            4     3 (average)
  5239                           ; direct_byte            8     6 (fixed)
  5240                           ; jumptable            260     6 (fixed)
  5241                           ;	Chosen strategy is simple_byte
  5242     010E  0879               	movf	??_I2C_DO_RX+1,w
  5243     010F  3A00               	xorlw	0	; case 0
  5244     0110  1903               	skipnz
  5245     0111  2913               	goto	i1l3772
  5246     0112  2901               	goto	i1l2964
  5247     0113                     i1l3772:
  5248                           
  5249                           ; Switch size 1, requested type "simple"
  5250                           ; Number of cases is 4, Range of values is 1 to 4
  5251                           ; switch strategies available:
  5252                           ; Name         Instructions Cycles
  5253                           ; simple_byte           13     7 (average)
  5254                           ; direct_byte           17     9 (fixed)
  5255                           ; jumptable            263     9 (fixed)
  5256                           ;	Chosen strategy is simple_byte
  5257     0113  0878               	movf	??_I2C_DO_RX,w
  5258     0114  3A01               	xorlw	1	; case 1
  5259     0115  1903               	skipnz
  5260     0116  2901               	goto	i1l2964
  5261     0117  3A03               	xorlw	3	; case 2
  5262     0118  1903               	skipnz
  5263     0119  28FD               	goto	i1l2960
  5264     011A  3A01               	xorlw	1	; case 3
  5265     011B  1903               	skipnz
  5266     011C  28FD               	goto	i1l2960
  5267     011D  3A07               	xorlw	7	; case 4
  5268     011E  1903               	skipnz
  5269     011F  2901               	goto	i1l2964
  5270     0120  2901               	goto	i1l2964
  5271     0121                     i1l364:
  5272     0121  0008               	return
  5273     0122                     __end_of_I2C_DO_RX:
  5274                           
  5275                           	psect	text34
  5276     008C                     __ptext34:	
  5277 ;; *************** function _I2C_DO_TX *****************
  5278 ;; Defined at:
  5279 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  1    wreg      enum E3112
  5286 ;; Registers used:
  5287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5293 ;;      Params:         0       0       0       0       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0       0       0       0
  5295 ;;      Temps:          2       0       0       0       0       0       0       0
  5296 ;;      Totals:         2       0       0       0       0       0       0       0
  5297 ;;Total ram usage:        2 bytes
  5298 ;; Hardware stack levels used: 1
  5299 ;; Hardware stack levels required when called: 3
  5300 ;; This function calls:
  5301 ;;		NULL
  5302 ;;		_I2C_CallbackReturnReset
  5303 ;;		_I2C_CallbackReturnStop
  5304 ;;		_I2C_DO_SEND_RESTART_READ
  5305 ;;		_I2C_DO_SEND_RESTART_WRITE
  5306 ;;		_I2C_DO_SEND_STOP
  5307 ;;		_I2C_MasterIsNack
  5308 ;;		_I2C_MasterSendTxData
  5309 ;;		_rd1RegCompleteHandler
  5310 ;;		_rd2RegCompleteHandler
  5311 ;;		_rdBlkRegCompleteHandler
  5312 ;;		_wr1RegCompleteHandler
  5313 ;;		_wr2RegCompleteHandler
  5314 ;; This function is called by:
  5315 ;;		_I2C_MasterFsm
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319     008C                     _I2C_DO_TX:	
  5320                           ;psect for function _I2C_DO_TX
  5321                           
  5322     008C                     i1l2912:	
  5323                           ;incstack = 0
  5324                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5325                           
  5326                           
  5327                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  5328     008C  3184  240B  3180   	fcall	_I2C_MasterIsNack
  5329     008F  3A00               	xorlw	0
  5330     0090  1903               	skipnz
  5331     0091  2893               	goto	u89_21
  5332     0092  2894               	goto	u89_20
  5333     0093                     u89_21:
  5334     0093  28C2               	goto	i1l347
  5335     0094                     u89_20:
  5336     0094  28A1               	goto	i1l2930
  5337     0095                     i1l2916:
  5338                           
  5339                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5340     0095  3184  2434  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  5341     0098  28DE               	goto	i1l350
  5342     0099                     i1l2920:
  5343                           
  5344                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5345     0099  3184  242F  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  5346     009C  28DE               	goto	i1l350
  5347     009D                     i1l2924:
  5348                           
  5349                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  5350     009D  3184  2425  3180   	fcall	_I2C_DO_SEND_STOP
  5351     00A0  28DE               	goto	i1l350
  5352     00A1                     i1l2930:
  5353     00A1  0020               	movlb	0	; select bank0
  5354     00A2  082F               	movf	low ((_I2C_Status| 0+15)),w
  5355     00A3  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5356     00A4  3006               	movlw	6
  5357     00A5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5358     00A6  0086               	movwf	6
  5359     00A7  0187               	clrf	7
  5360     00A8  3F41               	moviw [1]fsr1
  5361     00A9  008A               	movwf	10
  5362     00AA  3F40               	moviw [0]fsr1
  5363     00AB  000A               	callw
  5364     00AC  3180               	pagesel	$
  5365     00AD  00F8               	movwf	??_I2C_DO_TX
  5366     00AE  01F9               	clrf	??_I2C_DO_TX+1
  5367                           
  5368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5369                           ; Switch size 1, requested type "simple"
  5370                           ; Number of cases is 1, Range of values is 0 to 0
  5371                           ; switch strategies available:
  5372                           ; Name         Instructions Cycles
  5373                           ; simple_byte            4     3 (average)
  5374                           ; direct_byte            8     6 (fixed)
  5375                           ; jumptable            260     6 (fixed)
  5376                           ;	Chosen strategy is simple_byte
  5377     00AF  0879               	movf	??_I2C_DO_TX+1,w
  5378     00B0  3A00               	xorlw	0	; case 0
  5379     00B1  1903               	skipnz
  5380     00B2  28B4               	goto	i1l3774
  5381     00B3  289D               	goto	i1l2924
  5382     00B4                     i1l3774:
  5383                           
  5384                           ; Switch size 1, requested type "simple"
  5385                           ; Number of cases is 4, Range of values is 1 to 4
  5386                           ; switch strategies available:
  5387                           ; Name         Instructions Cycles
  5388                           ; simple_byte           13     7 (average)
  5389                           ; direct_byte           17     9 (fixed)
  5390                           ; jumptable            263     9 (fixed)
  5391                           ;	Chosen strategy is simple_byte
  5392     00B4  0878               	movf	??_I2C_DO_TX,w
  5393     00B5  3A01               	xorlw	1	; case 1
  5394     00B6  1903               	skipnz
  5395     00B7  289D               	goto	i1l2924
  5396     00B8  3A03               	xorlw	3	; case 2
  5397     00B9  1903               	skipnz
  5398     00BA  2895               	goto	i1l2916
  5399     00BB  3A01               	xorlw	1	; case 3
  5400     00BC  1903               	skipnz
  5401     00BD  2899               	goto	i1l2920
  5402     00BE  3A07               	xorlw	7	; case 4
  5403     00BF  1903               	skipnz
  5404     00C0  289D               	goto	i1l2924
  5405     00C1  289D               	goto	i1l2924
  5406     00C2                     i1l347:	
  5407                           ;mcc_generated_files/i2c_master.c: 372:     else
  5408                           
  5409                           
  5410                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  5411     00C2  0020               	movlb	0	; select bank0
  5412     00C3  103C               	bcf	_I2C_Status+28,0
  5413     00C4                     i1l2932:
  5414                           
  5415                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5416     00C4  3017               	movlw	23
  5417     00C5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5418     00C6  0086               	movwf	6
  5419     00C7  0187               	clrf	7
  5420     00C8  3F40               	moviw [0]fsr1
  5421     00C9  0084               	movwf	4
  5422     00CA  0185               	clrf	5
  5423     00CB  0A81               	incf	1,f
  5424     00CC  0800               	movf	0,w
  5425     00CD  3184  243E  3180   	fcall	_I2C_MasterSendTxData
  5426     00D0                     i1l2934:
  5427                           
  5428                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5429     00D0  3001               	movlw	1
  5430     00D1  0020               	movlb	0	; select bank0
  5431     00D2  02B8               	subwf	_I2C_Status+24,f
  5432     00D3  3000               	movlw	0
  5433     00D4  3BB9               	subwfb	_I2C_Status+25,f
  5434     00D5  0838               	movf	_I2C_Status+24,w
  5435     00D6  0439               	iorwf	_I2C_Status+25,w
  5436     00D7  1D03               	btfss	3,2
  5437     00D8  28DA               	goto	u90_21
  5438     00D9  28DB               	goto	u90_20
  5439     00DA                     u90_21:
  5440     00DA  28DD               	goto	i1l2938
  5441     00DB                     u90_20:
  5442     00DB                     i1l2936:
  5443     00DB  3006               	movlw	6
  5444     00DC  28DE               	goto	i1l350
  5445     00DD                     i1l2938:
  5446     00DD  3003               	movlw	3
  5447     00DE                     i1l350:
  5448     00DE  0008               	return
  5449     00DF                     __end_of_I2C_DO_TX:
  5450                           
  5451                           	psect	text35
  5452     03CB                     __ptext35:	
  5453 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5454 ;; Defined at:
  5455 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      enum E3112
  5462 ;; Registers used:
  5463 ;;		wreg, status,2, status,0, pclath, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5469 ;;      Params:         0       0       0       0       0       0       0       0
  5470 ;;      Locals:         0       0       0       0       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0
  5472 ;;      Totals:         0       0       0       0       0       0       0       0
  5473 ;;Total ram usage:        0 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; Hardware stack levels required when called: 1
  5476 ;; This function calls:
  5477 ;;		_I2C_MasterSendTxData
  5478 ;; This function is called by:
  5479 ;;		_I2C_MasterFsm
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483     03CB                     _I2C_DO_SEND_ADR_WRITE:	
  5484                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  5485                           
  5486     03CB                     i1l2904:	
  5487                           ;incstack = 0
  5488                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5489                           
  5490                           
  5491                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  5492     03CB  0020               	movlb	0	; select bank0
  5493     03CC  143C               	bsf	_I2C_Status+28,0
  5494     03CD                     i1l2906:
  5495                           
  5496                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5497     03CD  3536               	lslf	_I2C_Status+22,w
  5498     03CE  3184  243E  3183   	fcall	_I2C_MasterSendTxData
  5499     03D1                     i1l2908:
  5500                           
  5501                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  5502     03D1  3003               	movlw	3
  5503     03D2                     i1l344:
  5504     03D2  0008               	return
  5505     03D3                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5506                           
  5507                           	psect	text36
  5508     03BA                     __ptext36:	
  5509 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5510 ;; Defined at:
  5511 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      enum E3112
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5525 ;;      Params:         0       0       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 1
  5532 ;; This function calls:
  5533 ;;		_I2C_MasterSendTxData
  5534 ;; This function is called by:
  5535 ;;		_I2C_MasterFsm
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539     03BA                     _I2C_DO_SEND_ADR_READ:	
  5540                           ;psect for function _I2C_DO_SEND_ADR_READ
  5541                           
  5542     03BA                     i1l2896:	
  5543                           ;incstack = 0
  5544                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  5545                           
  5546                           
  5547                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  5548     03BA  0020               	movlb	0	; select bank0
  5549     03BB  143C               	bsf	_I2C_Status+28,0
  5550     03BC                     i1l2898:
  5551                           
  5552                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5553     03BC  1403               	setc
  5554     03BD  0D36               	rlf	_I2C_Status+22,w
  5555     03BE  3184  243E  3183   	fcall	_I2C_MasterSendTxData
  5556     03C1                     i1l2900:
  5557                           
  5558                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  5559     03C1  3005               	movlw	5
  5560     03C2                     i1l341:
  5561     03C2  0008               	return
  5562     03C3                     __end_of_I2C_DO_SEND_ADR_READ:
  5563                           
  5564                           	psect	text37
  5565     0439                     __ptext37:	
  5566 ;; *************** function _I2C_DO_IDLE *****************
  5567 ;; Defined at:
  5568 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      enum E3112
  5575 ;; Registers used:
  5576 ;;		wreg, status,2
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5582 ;;      Params:         0       0       0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_I2C_MasterFsm
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595     0439                     _I2C_DO_IDLE:	
  5596                           ;psect for function _I2C_DO_IDLE
  5597                           
  5598     0439                     i1l2888:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  5601                           
  5602                           
  5603                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  5604     0439  0020               	movlb	0	; select bank0
  5605     043A  10BC               	bcf	_I2C_Status+28,1
  5606     043B                     i1l2890:
  5607                           
  5608                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  5609     043B  01BB               	clrf	_I2C_Status+27
  5610     043C                     i1l2892:
  5611                           
  5612                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  5613     043C  300E               	movlw	14
  5614     043D                     i1l338:
  5615     043D  0008               	return
  5616     043E                     __end_of_I2C_DO_IDLE:
  5617                           
  5618                           	psect	text38
  5619     019E                     __ptext38:	
  5620 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5621 ;; Defined at:
  5622 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      enum E3112
  5629 ;; Registers used:
  5630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5636 ;;      Params:         0       0       0       0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0       0       0       0
  5638 ;;      Temps:          2       0       0       0       0       0       0       0
  5639 ;;      Totals:         2       0       0       0       0       0       0       0
  5640 ;;Total ram usage:        2 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; Hardware stack levels required when called: 3
  5643 ;; This function calls:
  5644 ;;		NULL
  5645 ;;		_I2C_CallbackReturnReset
  5646 ;;		_I2C_CallbackReturnStop
  5647 ;;		_I2C_DO_SEND_RESTART
  5648 ;;		_I2C_DO_SEND_STOP
  5649 ;;		_I2C_MasterSetIrq
  5650 ;;		_rd1RegCompleteHandler
  5651 ;;		_rd2RegCompleteHandler
  5652 ;;		_rdBlkRegCompleteHandler
  5653 ;;		_wr1RegCompleteHandler
  5654 ;;		_wr2RegCompleteHandler
  5655 ;; This function is called by:
  5656 ;;		_I2C_MasterFsm
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660     019E                     _I2C_DO_TX_EMPTY:	
  5661                           ;psect for function _I2C_DO_TX_EMPTY
  5662                           
  5663     019E                     i1l2984:	
  5664                           ;incstack = 0
  5665                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5666                           
  5667                           
  5668                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  5669     019E  0020               	movlb	0	; select bank0
  5670     019F  15BC               	bsf	_I2C_Status+28,3
  5671                           
  5672                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5673     01A0  29AE               	goto	i1l3002
  5674     01A1                     i1l2986:
  5675                           
  5676                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  5677     01A1  3184  242A  3181   	fcall	_I2C_DO_SEND_RESTART
  5678     01A4  29CA               	goto	i1l381
  5679     01A5                     i1l2990:
  5680                           
  5681                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  5682     01A5  3184  245E  3181   	fcall	_I2C_MasterSetIrq
  5683     01A8                     i1l2992:
  5684                           
  5685                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  5686     01A8  3003               	movlw	3
  5687     01A9  29CA               	goto	i1l381
  5688     01AA                     i1l2996:
  5689                           
  5690                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  5691     01AA  3184  2425  3181   	fcall	_I2C_DO_SEND_STOP
  5692     01AD  29CA               	goto	i1l381
  5693     01AE                     i1l3002:
  5694     01AE  082C               	movf	low ((_I2C_Status| 0+12)),w
  5695     01AF  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5696     01B0  0821               	movf	_I2C_Status+1,w
  5697     01B1  008A               	movwf	10
  5698     01B2  0820               	movf	_I2C_Status,w
  5699     01B3  000A               	callw
  5700     01B4  3181               	pagesel	$
  5701     01B5  00F8               	movwf	??_I2C_DO_TX_EMPTY
  5702     01B6  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
  5703                           
  5704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5705                           ; Switch size 1, requested type "simple"
  5706                           ; Number of cases is 1, Range of values is 0 to 0
  5707                           ; switch strategies available:
  5708                           ; Name         Instructions Cycles
  5709                           ; simple_byte            4     3 (average)
  5710                           ; direct_byte            8     6 (fixed)
  5711                           ; jumptable            260     6 (fixed)
  5712                           ;	Chosen strategy is simple_byte
  5713     01B7  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
  5714     01B8  3A00               	xorlw	0	; case 0
  5715     01B9  1903               	skipnz
  5716     01BA  29BC               	goto	i1l3776
  5717     01BB  29AA               	goto	i1l2996
  5718     01BC                     i1l3776:
  5719                           
  5720                           ; Switch size 1, requested type "simple"
  5721                           ; Number of cases is 4, Range of values is 1 to 4
  5722                           ; switch strategies available:
  5723                           ; Name         Instructions Cycles
  5724                           ; simple_byte           13     7 (average)
  5725                           ; direct_byte           17     9 (fixed)
  5726                           ; jumptable            263     9 (fixed)
  5727                           ;	Chosen strategy is simple_byte
  5728     01BC  0878               	movf	??_I2C_DO_TX_EMPTY,w
  5729     01BD  3A01               	xorlw	1	; case 1
  5730     01BE  1903               	skipnz
  5731     01BF  29AA               	goto	i1l2996
  5732     01C0  3A03               	xorlw	3	; case 2
  5733     01C1  1903               	skipnz
  5734     01C2  29A1               	goto	i1l2986
  5735     01C3  3A01               	xorlw	1	; case 3
  5736     01C4  1903               	skipnz
  5737     01C5  29A1               	goto	i1l2986
  5738     01C6  3A07               	xorlw	7	; case 4
  5739     01C7  1903               	skipnz
  5740     01C8  29A5               	goto	i1l2990
  5741     01C9  29AA               	goto	i1l2996
  5742     01CA                     i1l381:
  5743     01CA  0008               	return
  5744     01CB                     __end_of_I2C_DO_TX_EMPTY:
  5745                           
  5746                           	psect	text39
  5747     045E                     __ptext39:	
  5748 ;; *************** function _I2C_MasterSetIrq *****************
  5749 ;; Defined at:
  5750 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		None
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5764 ;;      Params:         0       0       0       0       0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_I2C_DO_TX_EMPTY
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777     045E                     _I2C_MasterSetIrq:	
  5778                           ;psect for function _I2C_MasterSetIrq
  5779                           
  5780     045E                     i1l2778:	
  5781                           ;incstack = 0
  5782                           ; Regs used in _I2C_MasterSetIrq: []
  5783                           
  5784                           
  5785                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  5786     045E  0020               	movlb	0	; select bank0
  5787     045F  1591               	bsf	17,3	;volatile
  5788     0460                     i1l501:
  5789     0460  0008               	return
  5790     0461                     __end_of_I2C_MasterSetIrq:
  5791                           
  5792                           	psect	text40
  5793     040B                     __ptext40:	
  5794 ;; *************** function _I2C_MasterIsNack *****************
  5795 ;; Defined at:
  5796 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      _Bool 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5810 ;;      Params:         0       0       0       0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_I2C_MasterFsm
  5820 ;;		_I2C_DO_TX
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824     040B                     _I2C_MasterIsNack:	
  5825                           ;psect for function _I2C_MasterIsNack
  5826                           
  5827     040B                     i1l2728:	
  5828                           ;incstack = 0
  5829                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  5830                           
  5831                           
  5832                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  5833     040B  0024               	movlb	4	; select bank4
  5834     040C  0E16               	swapf	22,w	;volatile
  5835     040D  0C89               	rrf	9,f
  5836     040E  0C89               	rrf	9,f
  5837     040F  3901               	andlw	1
  5838     0410                     i1l474:
  5839     0410  0008               	return
  5840     0411                     __end_of_I2C_MasterIsNack:
  5841                           
  5842                           	psect	text41
  5843     043E                     __ptext41:	
  5844 ;; *************** function _I2C_MasterSendTxData *****************
  5845 ;; Defined at:
  5846 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  data            1    wreg     unsigned char 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  data            1    0[COMMON] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5860 ;;      Params:         0       0       0       0       0       0       0       0
  5861 ;;      Locals:         1       0       0       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0
  5863 ;;      Totals:         1       0       0       0       0       0       0       0
  5864 ;;Total ram usage:        1 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_I2C_DO_SEND_ADR_READ
  5870 ;;		_I2C_DO_SEND_ADR_WRITE
  5871 ;;		_I2C_DO_TX
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875     043E                     _I2C_MasterSendTxData:	
  5876                           ;psect for function _I2C_MasterSendTxData
  5877                           
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  5881                           ;I2C_MasterSendTxData@data stored from wreg
  5882     043E  00F0               	movwf	I2C_MasterSendTxData@data
  5883     043F                     i1l2732:
  5884                           
  5885                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  5886     043F  0870               	movf	I2C_MasterSendTxData@data,w
  5887     0440  0024               	movlb	4	; select bank4
  5888     0441  0091               	movwf	17	;volatile
  5889     0442                     i1l456:
  5890     0442  0008               	return
  5891     0443                     __end_of_I2C_MasterSendTxData:
  5892                           
  5893                           	psect	text42
  5894     044B                     __ptext42:	
  5895 ;; *************** function _I2C_MasterSendAck *****************
  5896 ;; Defined at:
  5897 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;		None
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;		None
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  1    wreg      void 
  5904 ;; Registers used:
  5905 ;;		None
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5911 ;;      Params:         0       0       0       0       0       0       0       0
  5912 ;;      Locals:         0       0       0       0       0       0       0       0
  5913 ;;      Temps:          0       0       0       0       0       0       0       0
  5914 ;;      Totals:         0       0       0       0       0       0       0       0
  5915 ;;Total ram usage:        0 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_I2C_DO_RX
  5921 ;;		_I2C_DO_RX_ACK
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925     044B                     _I2C_MasterSendAck:	
  5926                           ;psect for function _I2C_MasterSendAck
  5927                           
  5928     044B                     i1l2756:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _I2C_MasterSendAck: []
  5931                           
  5932                           
  5933                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  5934     044B  0024               	movlb	4	; select bank4
  5935     044C  1296               	bcf	22,5	;volatile
  5936                           
  5937                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  5938     044D  1616               	bsf	22,4	;volatile
  5939     044E                     i1l477:
  5940     044E  0008               	return
  5941     044F                     __end_of_I2C_MasterSendAck:
  5942                           
  5943                           	psect	text43
  5944     0461                     __ptext43:	
  5945 ;; *************** function _I2C_MasterGetRxData *****************
  5946 ;; Defined at:
  5947 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      unsigned char 
  5954 ;; Registers used:
  5955 ;;		wreg
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5961 ;;      Params:         0       0       0       0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used: 1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_I2C_DO_RX
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974     0461                     _I2C_MasterGetRxData:	
  5975                           ;psect for function _I2C_MasterGetRxData
  5976                           
  5977     0461                     i1l2752:	
  5978                           ;incstack = 0
  5979                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5980                           
  5981                           
  5982                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  5983     0461  0024               	movlb	4	; select bank4
  5984     0462  0811               	movf	17,w	;volatile
  5985     0463                     i1l453:
  5986     0463  0008               	return
  5987     0464                     __end_of_I2C_MasterGetRxData:
  5988                           
  5989                           	psect	text44
  5990     044F                     __ptext44:	
  5991 ;; *************** function _I2C_MasterSendNack *****************
  5992 ;; Defined at:
  5993 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;		None
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;		None
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      void 
  6000 ;; Registers used:
  6001 ;;		None
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6007 ;;      Params:         0       0       0       0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; This function calls:
  6014 ;;		Nothing
  6015 ;; This function is called by:
  6016 ;;		_I2C_DO_RX_NACK_STOP
  6017 ;;		_I2C_DO_RX_NACK_RESTART
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021     044F                     _I2C_MasterSendNack:	
  6022                           ;psect for function _I2C_MasterSendNack
  6023                           
  6024     044F                     i1l2686:	
  6025                           ;incstack = 0
  6026                           ; Regs used in _I2C_MasterSendNack: []
  6027                           
  6028                           
  6029                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6030     044F  0024               	movlb	4	; select bank4
  6031     0450  1696               	bsf	22,5	;volatile
  6032                           
  6033                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6034     0451  1616               	bsf	22,4	;volatile
  6035     0452                     i1l480:
  6036     0452  0008               	return
  6037     0453                     __end_of_I2C_MasterSendNack:
  6038                           
  6039                           	psect	text45
  6040     0464                     __ptext45:	
  6041 ;; *************** function _I2C_MasterStartRx *****************
  6042 ;; Defined at:
  6043 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;		None
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;		None
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		None
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6057 ;;      Params:         0       0       0       0       0       0       0       0
  6058 ;;      Locals:         0       0       0       0       0       0       0       0
  6059 ;;      Temps:          0       0       0       0       0       0       0       0
  6060 ;;      Totals:         0       0       0       0       0       0       0       0
  6061 ;;Total ram usage:        0 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_I2C_DO_RCEN
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070     0464                     _I2C_MasterStartRx:	
  6071                           ;psect for function _I2C_MasterStartRx
  6072                           
  6073     0464                     i1l2770:	
  6074                           ;incstack = 0
  6075                           ; Regs used in _I2C_MasterStartRx: []
  6076                           
  6077                           
  6078                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6079     0464  0024               	movlb	4	; select bank4
  6080     0465  1596               	bsf	22,3	;volatile
  6081     0466                     i1l465:
  6082     0466  0008               	return
  6083     0467                     __end_of_I2C_MasterStartRx:
  6084                           
  6085                           	psect	text46
  6086     046D                     __ptext46:	
  6087 ;; *************** function _I2C_CallbackReturnReset *****************
  6088 ;; Defined at:
  6089 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  funPtr          1    7[COMMON] PTR void 
  6092 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6093 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      enum E363
  6098 ;; Registers used:
  6099 ;;		wreg
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6105 ;;      Params:         1       0       0       0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0
  6108 ;;      Totals:         1       0       0       0       0       0       0       0
  6109 ;;Total ram usage:        1 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_I2C_Open
  6115 ;;		_I2C_DO_TX
  6116 ;;		_I2C_DO_RX
  6117 ;;		_I2C_DO_TX_EMPTY
  6118 ;;		_I2C_DO_ADDRESS_NACK
  6119 ;;		_I2C_DO_RX_EMPTY
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123     046D                     _I2C_CallbackReturnReset:	
  6124                           ;psect for function _I2C_CallbackReturnReset
  6125                           
  6126     046D                     i1l2784:	
  6127                           ;incstack = 0
  6128                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6129                           
  6130                           
  6131                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6132     046D  3005               	movlw	5
  6133     046E                     i1l437:
  6134     046E  0008               	return
  6135     046F                     __end_of_I2C_CallbackReturnReset:
  6136                           
  6137                           	psect	text47
  6138     046F                     __ptext47:	
  6139 ;; *************** function _I2C_CallbackReturnStop *****************
  6140 ;; Defined at:
  6141 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  funPtr          1    7[COMMON] PTR void 
  6144 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6145 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      enum E363
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6157 ;;      Params:         1       0       0       0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0
  6160 ;;      Totals:         1       0       0       0       0       0       0       0
  6161 ;;Total ram usage:        1 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_I2C_SetCallback
  6167 ;;		_I2C_Open
  6168 ;;		_I2C_DO_TX
  6169 ;;		_I2C_DO_RX
  6170 ;;		_I2C_DO_TX_EMPTY
  6171 ;;		_I2C_DO_ADDRESS_NACK
  6172 ;;		_I2C_DO_RX_EMPTY
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176     046F                     _I2C_CallbackReturnStop:	
  6177                           ;psect for function _I2C_CallbackReturnStop
  6178                           
  6179     046F                     i1l2780:	
  6180                           ;incstack = 0
  6181                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6182                           
  6183                           
  6184                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  6185     046F  3001               	movlw	1
  6186     0470                     i1l434:
  6187     0470  0008               	return
  6188     0471                     __end_of_I2C_CallbackReturnStop:
  6189                           
  6190                           	psect	text48
  6191     02CF                     __ptext48:	
  6192 ;; *************** function _rdBlkRegCompleteHandler *****************
  6193 ;; Defined at:
  6194 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  ptr             1    7[COMMON] PTR void 
  6197 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6198 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      enum E363
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6210 ;;      Params:         1       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0
  6213 ;;      Totals:         1       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        1 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; Hardware stack levels required when called: 2
  6217 ;; This function calls:
  6218 ;;		_I2C_SetBuffer
  6219 ;;		_I2C_SetDataCompleteCallback
  6220 ;; This function is called by:
  6221 ;;		_I2C_ReadDataBlock
  6222 ;;		_I2C_DO_TX
  6223 ;;		_I2C_DO_RX
  6224 ;;		_I2C_DO_TX_EMPTY
  6225 ;;		_I2C_DO_ADDRESS_NACK
  6226 ;;		_I2C_DO_RX_EMPTY
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230     02CF                     _rdBlkRegCompleteHandler:	
  6231                           ;psect for function _rdBlkRegCompleteHandler
  6232                           
  6233     02CF                     i1l2720:	
  6234                           ;incstack = 0
  6235                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6236                           
  6237                           
  6238                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6239     02CF  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6240     02D0  0086               	movwf	6
  6241     02D1  0187               	clrf	7
  6242     02D2  3F40               	moviw [0]fsr1
  6243     02D3  00F0               	movwf	I2C_SetBuffer@bufferSize
  6244     02D4  3F41               	moviw [1]fsr1
  6245     02D5  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6246     02D6  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6247     02D7  3E02               	addlw	2
  6248     02D8  0086               	movwf	6
  6249     02D9  0187               	clrf	7
  6250     02DA  0801               	movf	1,w
  6251     02DB  3183  234F  3182   	fcall	_I2C_SetBuffer
  6252                           
  6253                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6254     02DE  3000               	movlw	0
  6255     02DF  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6256     02E0  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6257     02E1  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6258     02E2  3183  239C  3182   	fcall	_I2C_SetDataCompleteCallback
  6259     02E5                     i1l2722:
  6260                           
  6261                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6262     02E5  3002               	movlw	2
  6263     02E6                     i1l104:
  6264     02E6  0008               	return
  6265     02E7                     __end_of_rdBlkRegCompleteHandler:
  6266                           
  6267                           	psect	text49
  6268     030B                     __ptext49:	
  6269 ;; *************** function _wr1RegCompleteHandler *****************
  6270 ;; Defined at:
  6271 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  ptr             1    7[COMMON] PTR void 
  6274 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6275 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      enum E363
  6280 ;; Registers used:
  6281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6287 ;;      Params:         1       0       0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0
  6290 ;;      Totals:         1       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        1 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 2
  6294 ;; This function calls:
  6295 ;;		_I2C_SetBuffer
  6296 ;;		_I2C_SetDataCompleteCallback
  6297 ;; This function is called by:
  6298 ;;		_I2C_Write1ByteRegister
  6299 ;;		_I2C_DO_TX
  6300 ;;		_I2C_DO_RX
  6301 ;;		_I2C_DO_TX_EMPTY
  6302 ;;		_I2C_DO_ADDRESS_NACK
  6303 ;;		_I2C_DO_RX_EMPTY
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307     030B                     _wr1RegCompleteHandler:	
  6308                           ;psect for function _wr1RegCompleteHandler
  6309                           
  6310     030B                     i1l2704:	
  6311                           ;incstack = 0
  6312                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6313                           
  6314                           
  6315                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6316     030B  3001               	movlw	1
  6317     030C  00F0               	movwf	I2C_SetBuffer@bufferSize
  6318     030D  3000               	movlw	0
  6319     030E  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6320     030F  0877               	movf	wr1RegCompleteHandler@ptr,w
  6321     0310  3183  234F  3183   	fcall	_I2C_SetBuffer
  6322     0313                     i1l2706:
  6323                           
  6324                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6325     0313  3000               	movlw	0
  6326     0314  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6327     0315  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6328     0316  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6329     0317  3183  239C  3183   	fcall	_I2C_SetDataCompleteCallback
  6330     031A                     i1l2708:
  6331                           
  6332                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6333     031A  3004               	movlw	4
  6334     031B                     i1l98:
  6335     031B  0008               	return
  6336     031C                     __end_of_wr1RegCompleteHandler:
  6337                           
  6338                           	psect	text50
  6339     031C                     __ptext50:	
  6340 ;; *************** function _rd2RegCompleteHandler *****************
  6341 ;; Defined at:
  6342 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  ptr             1    7[COMMON] PTR void 
  6345 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6346 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      enum E363
  6351 ;; Registers used:
  6352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6358 ;;      Params:         1       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       0       0       0       0       0       0       0
  6361 ;;      Totals:         1       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        1 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 2
  6365 ;; This function calls:
  6366 ;;		_I2C_SetBuffer
  6367 ;;		_I2C_SetDataCompleteCallback
  6368 ;; This function is called by:
  6369 ;;		_I2C_Read2ByteRegister
  6370 ;;		_I2C_DO_TX
  6371 ;;		_I2C_DO_RX
  6372 ;;		_I2C_DO_TX_EMPTY
  6373 ;;		_I2C_DO_ADDRESS_NACK
  6374 ;;		_I2C_DO_RX_EMPTY
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378     031C                     _rd2RegCompleteHandler:	
  6379                           ;psect for function _rd2RegCompleteHandler
  6380                           
  6381     031C                     i1l2696:	
  6382                           ;incstack = 0
  6383                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6384                           
  6385                           
  6386                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6387     031C  3002               	movlw	2
  6388     031D  00F0               	movwf	I2C_SetBuffer@bufferSize
  6389     031E  3000               	movlw	0
  6390     031F  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6391     0320  0877               	movf	rd2RegCompleteHandler@ptr,w
  6392     0321  3183  234F  3183   	fcall	_I2C_SetBuffer
  6393     0324                     i1l2698:
  6394                           
  6395                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6396     0324  3000               	movlw	0
  6397     0325  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6398     0326  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6399     0327  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6400     0328  3183  239C  3183   	fcall	_I2C_SetDataCompleteCallback
  6401     032B                     i1l2700:
  6402                           
  6403                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6404     032B  3002               	movlw	2
  6405     032C                     i1l95:
  6406     032C  0008               	return
  6407     032D                     __end_of_rd2RegCompleteHandler:
  6408                           
  6409                           	psect	text51
  6410     032D                     __ptext51:	
  6411 ;; *************** function _rd1RegCompleteHandler *****************
  6412 ;; Defined at:
  6413 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6414 ;; Parameters:    Size  Location     Type
  6415 ;;  ptr             1    7[COMMON] PTR void 
  6416 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6417 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      enum E363
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6429 ;;      Params:         1       0       0       0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0
  6432 ;;      Totals:         1       0       0       0       0       0       0       0
  6433 ;;Total ram usage:        1 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 2
  6436 ;; This function calls:
  6437 ;;		_I2C_SetBuffer
  6438 ;;		_I2C_SetDataCompleteCallback
  6439 ;; This function is called by:
  6440 ;;		_I2C_Read1ByteRegister
  6441 ;;		_I2C_DO_TX
  6442 ;;		_I2C_DO_RX
  6443 ;;		_I2C_DO_TX_EMPTY
  6444 ;;		_I2C_DO_ADDRESS_NACK
  6445 ;;		_I2C_DO_RX_EMPTY
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449     032D                     _rd1RegCompleteHandler:	
  6450                           ;psect for function _rd1RegCompleteHandler
  6451                           
  6452     032D                     i1l2688:	
  6453                           ;incstack = 0
  6454                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6455                           
  6456                           
  6457                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6458     032D  3001               	movlw	1
  6459     032E  00F0               	movwf	I2C_SetBuffer@bufferSize
  6460     032F  3000               	movlw	0
  6461     0330  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6462     0331  0877               	movf	rd1RegCompleteHandler@ptr,w
  6463     0332  3183  234F  3183   	fcall	_I2C_SetBuffer
  6464     0335                     i1l2690:
  6465                           
  6466                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6467     0335  3000               	movlw	0
  6468     0336  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6469     0337  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6470     0338  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6471     0339  3183  239C  3183   	fcall	_I2C_SetDataCompleteCallback
  6472     033C                     i1l2692:
  6473                           
  6474                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6475     033C  3002               	movlw	2
  6476     033D                     i1l92:
  6477     033D  0008               	return
  6478     033E                     __end_of_rd1RegCompleteHandler:
  6479                           
  6480                           	psect	text52
  6481     033E                     __ptext52:	
  6482 ;; *************** function _wr2RegCompleteHandler *****************
  6483 ;; Defined at:
  6484 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  ptr             1    7[COMMON] PTR void 
  6487 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6488 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      enum E363
  6493 ;; Registers used:
  6494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6500 ;;      Params:         1       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0
  6503 ;;      Totals:         1       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        1 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; Hardware stack levels required when called: 2
  6507 ;; This function calls:
  6508 ;;		_I2C_SetBuffer
  6509 ;;		_I2C_SetDataCompleteCallback
  6510 ;; This function is called by:
  6511 ;;		_I2C_Write2ByteRegister
  6512 ;;		_I2C_DO_TX
  6513 ;;		_I2C_DO_RX
  6514 ;;		_I2C_DO_TX_EMPTY
  6515 ;;		_I2C_DO_ADDRESS_NACK
  6516 ;;		_I2C_DO_RX_EMPTY
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520     033E                     _wr2RegCompleteHandler:	
  6521                           ;psect for function _wr2RegCompleteHandler
  6522                           
  6523     033E                     i1l2712:	
  6524                           ;incstack = 0
  6525                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6526                           
  6527                           
  6528                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6529     033E  3002               	movlw	2
  6530     033F  00F0               	movwf	I2C_SetBuffer@bufferSize
  6531     0340  3000               	movlw	0
  6532     0341  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6533     0342  0877               	movf	wr2RegCompleteHandler@ptr,w
  6534     0343  3183  234F  3183   	fcall	_I2C_SetBuffer
  6535     0346                     i1l2714:
  6536                           
  6537                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6538     0346  3000               	movlw	0
  6539     0347  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6540     0348  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6541     0349  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6542     034A  3183  239C  3183   	fcall	_I2C_SetDataCompleteCallback
  6543     034D                     i1l2716:
  6544                           
  6545                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6546     034D  3004               	movlw	4
  6547     034E                     i1l101:
  6548     034E  0008               	return
  6549     034F                     __end_of_wr2RegCompleteHandler:
  6550                           
  6551                           	psect	text53
  6552     039C                     __ptext53:	
  6553 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6554 ;; Defined at:
  6555 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
  6558 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6559 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6560 ;;  ptr             1    6[COMMON] PTR void 
  6561 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6562 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6574 ;;      Params:         3       0       0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0
  6577 ;;      Totals:         3       0       0       0       0       0       0       0
  6578 ;;Total ram usage:        3 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 1
  6581 ;; This function calls:
  6582 ;;		_I2C_SetCallback
  6583 ;; This function is called by:
  6584 ;;		_rd1RegCompleteHandler
  6585 ;;		_rd2RegCompleteHandler
  6586 ;;		_wr1RegCompleteHandler
  6587 ;;		_wr2RegCompleteHandler
  6588 ;;		_rdBlkRegCompleteHandler
  6589 ;;		_I2C_Read1ByteRegister
  6590 ;;		_I2C_Read2ByteRegister
  6591 ;;		_I2C_Write1ByteRegister
  6592 ;;		_I2C_Write2ByteRegister
  6593 ;;		_I2C_ReadDataBlock
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597     039C                     _I2C_SetDataCompleteCallback:	
  6598                           ;psect for function _I2C_SetDataCompleteCallback
  6599                           
  6600     039C                     i1l2674:	
  6601                           ;incstack = 0
  6602                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6603                           
  6604                           
  6605                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6606     039C  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
  6607     039D  00F1               	movwf	I2C_SetCallback@cb+1
  6608     039E  0874               	movf	I2C_SetDataCompleteCallback@cb,w
  6609     039F  00F0               	movwf	I2C_SetCallback@cb
  6610     03A0  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
  6611     03A1  00F2               	movwf	I2C_SetCallback@ptr
  6612     03A2  3000               	movlw	0
  6613     03A3  3182  221B  3183   	fcall	_I2C_SetCallback
  6614     03A6                     i1l308:
  6615     03A6  0008               	return
  6616     03A7                     __end_of_I2C_SetDataCompleteCallback:
  6617                           
  6618                           	psect	text54
  6619     021B                     __ptext54:	
  6620 ;; *************** function _I2C_SetCallback *****************
  6621 ;; Defined at:
  6622 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  idx             1    wreg     enum E3130
  6625 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  6626 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6627 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6628 ;;  ptr             1    2[COMMON] PTR void 
  6629 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6630 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  idx             1    3[COMMON] enum E3130
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6642 ;;      Params:         3       0       0       0       0       0       0       0
  6643 ;;      Locals:         1       0       0       0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0
  6645 ;;      Totals:         4       0       0       0       0       0       0       0
  6646 ;;Total ram usage:        4 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_I2C_SetDataCompleteCallback
  6652 ;;		_I2C_SetWriteCollisionCallback
  6653 ;;		_I2C_SetAddressNackCallback
  6654 ;;		_I2C_SetDataNackCallback
  6655 ;;		_I2C_SetTimeoutCallback
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659     021B                     _I2C_SetCallback:	
  6660                           ;psect for function _I2C_SetCallback
  6661                           
  6662                           
  6663                           ;incstack = 0
  6664                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  6665                           ;I2C_SetCallback@idx stored from wreg
  6666     021B  00F3               	movwf	I2C_SetCallback@idx
  6667     021C                     i1l2668:
  6668                           
  6669                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  6670     021C  0870               	movf	I2C_SetCallback@cb,w
  6671     021D  0471               	iorwf	I2C_SetCallback@cb+1,w
  6672     021E  1903               	btfsc	3,2
  6673     021F  2A21               	goto	u77_21
  6674     0220  2A22               	goto	u77_20
  6675     0221                     u77_21:
  6676     0221  2A31               	goto	i1l2672
  6677     0222                     u77_20:
  6678     0222                     i1l2670:
  6679                           
  6680                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6681     0222  3573               	lslf	I2C_SetCallback@idx,w
  6682     0223  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6683     0224  0086               	movwf	6
  6684     0225  0187               	clrf	7
  6685     0226  0870               	movf	I2C_SetCallback@cb,w
  6686     0227  3FC0               	movwi [0]fsr1
  6687     0228  0871               	movf	I2C_SetCallback@cb+1,w
  6688     0229  3FC1               	movwi [1]fsr1
  6689                           
  6690                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  6691     022A  0873               	movf	I2C_SetCallback@idx,w
  6692     022B  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6693     022C  0086               	movwf	6
  6694     022D  0187               	clrf	7
  6695     022E  0872               	movf	I2C_SetCallback@ptr,w
  6696     022F  0081               	movwf	1
  6697                           
  6698                           ;mcc_generated_files/i2c_master.c: 310:     }
  6699     0230  2A3E               	goto	i1l328
  6700     0231                     i1l2672:
  6701                           
  6702                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6703     0231  3573               	lslf	I2C_SetCallback@idx,w
  6704     0232  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6705     0233  0086               	movwf	6
  6706     0234  0187               	clrf	7
  6707     0235  306F               	movlw	low _I2C_CallbackReturnStop
  6708     0236  3FC0               	movwi [0]fsr1
  6709     0237  3004               	movlw	high _I2C_CallbackReturnStop
  6710     0238  3FC1               	movwi [1]fsr1
  6711                           
  6712                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6713     0239  0873               	movf	I2C_SetCallback@idx,w
  6714     023A  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6715     023B  0086               	movwf	6
  6716     023C  0187               	clrf	7
  6717     023D  0181               	clrf	1
  6718     023E                     i1l328:
  6719     023E  0008               	return
  6720     023F                     __end_of_I2C_SetCallback:
  6721                           
  6722                           	psect	text55
  6723     034F                     __ptext55:	
  6724 ;; *************** function _I2C_SetBuffer *****************
  6725 ;; Defined at:
  6726 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  buffer          1    wreg     PTR void 
  6729 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6730 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  6731 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  6732 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  6733 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6734 ;;  bufferSize      2    0[COMMON] unsigned int 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  buffer          1    2[COMMON] PTR void 
  6737 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6738 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  6739 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  6740 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  6741 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6751 ;;      Params:         2       0       0       0       0       0       0       0
  6752 ;;      Locals:         1       0       0       0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0
  6754 ;;      Totals:         3       0       0       0       0       0       0       0
  6755 ;;Total ram usage:        3 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_rd1RegCompleteHandler
  6761 ;;		_rd2RegCompleteHandler
  6762 ;;		_wr1RegCompleteHandler
  6763 ;;		_wr2RegCompleteHandler
  6764 ;;		_rdBlkRegCompleteHandler
  6765 ;;		_I2C_Read1ByteRegister
  6766 ;;		_I2C_Read2ByteRegister
  6767 ;;		_I2C_Write1ByteRegister
  6768 ;;		_I2C_Write2ByteRegister
  6769 ;;		_I2C_WriteNBytes
  6770 ;;		_I2C_ReadNBytes
  6771 ;;		_I2C_ReadDataBlock
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775     034F                     _I2C_SetBuffer:	
  6776                           ;psect for function _I2C_SetBuffer
  6777                           
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _I2C_SetBuffer: [wreg]
  6781                           ;I2C_SetBuffer@buffer stored from wreg
  6782     034F  00F2               	movwf	I2C_SetBuffer@buffer
  6783     0350                     i1l2676:
  6784                           
  6785                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  6786     0350  0020               	movlb	0	; select bank0
  6787     0351  1DBC               	btfss	_I2C_Status+28,3
  6788     0352  2B54               	goto	u78_21
  6789     0353  2B55               	goto	u78_20
  6790     0354                     u78_21:
  6791     0354  2B5C               	goto	i1l305
  6792     0355                     u78_20:
  6793     0355                     i1l2678:
  6794                           
  6795                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  6796     0355  0872               	movf	I2C_SetBuffer@buffer,w
  6797     0356  00B7               	movwf	low ((_I2C_Status| 0+23))
  6798                           
  6799                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  6800     0357  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  6801     0358  00B9               	movwf	_I2C_Status+25
  6802     0359  0870               	movf	I2C_SetBuffer@bufferSize,w
  6803     035A  00B8               	movwf	_I2C_Status+24
  6804     035B                     i1l2680:
  6805                           
  6806                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  6807     035B  11BC               	bcf	_I2C_Status+28,3
  6808     035C                     i1l305:
  6809     035C  0008               	return
  6810     035D                     __end_of_I2C_SetBuffer:
  6811                           
  6812                           	psect	text56
  6813     0467                     __ptext56:	
  6814 ;; *************** function _I2C_MasterStop *****************
  6815 ;; Defined at:
  6816 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		None
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6830 ;;      Params:         0       0       0       0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0
  6833 ;;      Totals:         0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        0 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_I2C_DO_SEND_STOP
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843     0467                     _I2C_MasterStop:	
  6844                           ;psect for function _I2C_MasterStop
  6845                           
  6846     0467                     i1l2684:	
  6847                           ;incstack = 0
  6848                           ; Regs used in _I2C_MasterStop: []
  6849                           
  6850                           
  6851                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  6852     0467  0024               	movlb	4	; select bank4
  6853     0468  1516               	bsf	22,2	;volatile
  6854     0469                     i1l471:
  6855     0469  0008               	return
  6856     046A                     __end_of_I2C_MasterStop:
  6857                           
  6858                           	psect	text57
  6859     046A                     __ptext57:	
  6860 ;; *************** function _I2C_MasterEnableRestart *****************
  6861 ;; Defined at:
  6862 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		None
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6876 ;;      Params:         0       0       0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_I2C_DO_SEND_RESTART_READ
  6886 ;;		_I2C_DO_SEND_RESTART_WRITE
  6887 ;;		_I2C_DO_SEND_RESTART
  6888 ;;		_I2C_DO_RX_EMPTY
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892     046A                     _I2C_MasterEnableRestart:	
  6893                           ;psect for function _I2C_MasterEnableRestart
  6894                           
  6895     046A                     i1l2682:	
  6896                           ;incstack = 0
  6897                           ; Regs used in _I2C_MasterEnableRestart: []
  6898                           
  6899                           
  6900                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  6901     046A  0024               	movlb	4	; select bank4
  6902     046B  1496               	bsf	22,1	;volatile
  6903     046C                     i1l459:
  6904     046C  0008               	return
  6905     046D                     __end_of_I2C_MasterEnableRestart:
  6906                           
  6907                           	psect	text58
  6908     023F                     __ptext58:	
  6909 ;; *************** function _EUSART_Transmit_ISR *****************
  6910 ;; Defined at:
  6911 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;		None
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      void 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6925 ;;      Params:         0       0       0       0       0       0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0       0       0
  6927 ;;      Temps:          1       0       0       0       0       0       0       0
  6928 ;;      Totals:         1       0       0       0       0       0       0       0
  6929 ;;Total ram usage:        1 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_EUSART_Initialize
  6935 ;;		_INTERRUPT_InterruptManager
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939     023F                     _EUSART_Transmit_ISR:	
  6940                           ;psect for function _EUSART_Transmit_ISR
  6941                           
  6942     023F                     i1l3430:	
  6943                           ;incstack = 0
  6944                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6945                           
  6946                           
  6947                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6948     023F  3010               	movlw	16
  6949     0240  0020               	movlb	0	; select bank0
  6950     0241  024A               	subwf	_eusartTxBufferRemaining,w	;volatile
  6951     0242  1803               	skipnc
  6952     0243  2A45               	goto	u118_21
  6953     0244  2A46               	goto	u118_20
  6954     0245                     u118_21:
  6955     0245  2A5E               	goto	i1l649
  6956     0246                     u118_20:
  6957     0246                     i1l3432:
  6958                           
  6959                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6960     0246  084B               	movf	_eusartTxTail,w
  6961     0247  3EC0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6962     0248  0086               	movwf	6
  6963     0249  0187               	clrf	7
  6964     024A  0801               	movf	1,w
  6965     024B  0023               	movlb	3	; select bank3
  6966     024C  009A               	movwf	26	;volatile
  6967     024D                     i1l3434:
  6968     024D  3001               	movlw	1
  6969     024E  00F0               	movwf	??_EUSART_Transmit_ISR
  6970     024F  0870               	movf	??_EUSART_Transmit_ISR,w
  6971     0250  0020               	movlb	0	; select bank0
  6972     0251  07CB               	addwf	_eusartTxTail,f	;volatile
  6973     0252                     i1l3436:
  6974                           
  6975                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6976     0252  3010               	movlw	16
  6977     0253  024B               	subwf	_eusartTxTail,w	;volatile
  6978     0254  1C03               	skipc
  6979     0255  2A57               	goto	u119_21
  6980     0256  2A58               	goto	u119_20
  6981     0257                     u119_21:
  6982     0257  2A59               	goto	i1l3440
  6983     0258                     u119_20:
  6984     0258                     i1l3438:
  6985                           
  6986                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6987     0258  01CB               	clrf	_eusartTxTail	;volatile
  6988     0259                     i1l3440:
  6989                           
  6990                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6991     0259  3001               	movlw	1
  6992     025A  00F0               	movwf	??_EUSART_Transmit_ISR
  6993     025B  0870               	movf	??_EUSART_Transmit_ISR,w
  6994     025C  07CA               	addwf	_eusartTxBufferRemaining,f	;volatile
  6995                           
  6996                           ;mcc_generated_files/eusart.c: 209:     }
  6997     025D  2A60               	goto	i1l652
  6998     025E                     i1l649:	
  6999                           ;mcc_generated_files/eusart.c: 210:     else
  7000                           
  7001                           
  7002                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  7003     025E  0021               	movlb	1	; select bank1
  7004     025F  1211               	bcf	17,4	;volatile
  7005     0260                     i1l652:
  7006     0260  0008               	return
  7007     0261                     __end_of_EUSART_Transmit_ISR:
  7008                           
  7009                           	psect	text59
  7010     0164                     __ptext59:	
  7011 ;; *************** function _EUSART_Receive_ISR *****************
  7012 ;; Defined at:
  7013 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7027 ;;      Params:         0       0       0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 2
  7034 ;; This function calls:
  7035 ;;		NULL
  7036 ;;		_EUSART_DefaultErrorHandler
  7037 ;;		_EUSART_DefaultFramingErrorHandler
  7038 ;;		_EUSART_DefaultOverrunErrorHandler
  7039 ;;		_EUSART_RxDataHandler
  7040 ;; This function is called by:
  7041 ;;		_EUSART_Initialize
  7042 ;;		_INTERRUPT_InterruptManager
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046     0164                     _EUSART_Receive_ISR:	
  7047                           ;psect for function _EUSART_Receive_ISR
  7048                           
  7049     0164                     i1l3442:	
  7050                           ;incstack = 0
  7051                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7052                           
  7053                           
  7054                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7055     0164  0020               	movlb	0	; select bank0
  7056     0165  0849               	movf	_eusartRxHead,w	;volatile
  7057     0166  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7058     0167  0086               	movwf	6
  7059     0168  0187               	clrf	7
  7060     0169  0181               	clrf	1
  7061     016A                     i1l3444:
  7062                           
  7063                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7064     016A  0023               	movlb	3	; select bank3
  7065     016B  1D1D               	btfss	29,2	;volatile
  7066     016C  296E               	goto	u120_21
  7067     016D  296F               	goto	u120_20
  7068     016E                     u120_21:
  7069     016E  297A               	goto	i1l3450
  7070     016F                     u120_20:
  7071     016F                     i1l3446:
  7072                           
  7073                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7074     016F  0020               	movlb	0	; select bank0
  7075     0170  0849               	movf	_eusartRxHead,w	;volatile
  7076     0171  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7077     0172  0086               	movwf	6
  7078     0173  0187               	clrf	7
  7079     0174  1481               	bsf	1,1
  7080     0175                     i1l3448:
  7081                           
  7082                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7083     0175  0869               	movf	_EUSART_FramingErrorHandler+1,w
  7084     0176  008A               	movwf	10
  7085     0177  0868               	movf	_EUSART_FramingErrorHandler,w
  7086     0178  000A               	callw
  7087     0179  3181               	pagesel	$
  7088     017A                     i1l3450:
  7089                           
  7090                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7091     017A  0023               	movlb	3	; select bank3
  7092     017B  1C9D               	btfss	29,1	;volatile
  7093     017C  297E               	goto	u121_21
  7094     017D  297F               	goto	u121_20
  7095     017E                     u121_21:
  7096     017E  298A               	goto	i1l3456
  7097     017F                     u121_20:
  7098     017F                     i1l3452:
  7099                           
  7100                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7101     017F  0020               	movlb	0	; select bank0
  7102     0180  0849               	movf	_eusartRxHead,w	;volatile
  7103     0181  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7104     0182  0086               	movwf	6
  7105     0183  0187               	clrf	7
  7106     0184  1501               	bsf	1,2
  7107     0185                     i1l3454:
  7108                           
  7109                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7110     0185  0867               	movf	_EUSART_OverrunErrorHandler+1,w
  7111     0186  008A               	movwf	10
  7112     0187  0866               	movf	_EUSART_OverrunErrorHandler,w
  7113     0188  000A               	callw
  7114     0189  3181               	pagesel	$
  7115     018A                     i1l3456:
  7116                           
  7117                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7118     018A  0020               	movlb	0	; select bank0
  7119     018B  0849               	movf	_eusartRxHead,w	;volatile
  7120     018C  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7121     018D  0086               	movwf	6
  7122     018E  0187               	clrf	7
  7123     018F  0801               	movf	1,w
  7124     0190  1903               	btfsc	3,2
  7125     0191  2993               	goto	u122_21
  7126     0192  2994               	goto	u122_20
  7127     0193                     u122_21:
  7128     0193  299A               	goto	i1l3460
  7129     0194                     u122_20:
  7130     0194                     i1l3458:
  7131                           
  7132                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7133     0194  0865               	movf	_EUSART_ErrorHandler+1,w
  7134     0195  008A               	movwf	10
  7135     0196  0864               	movf	_EUSART_ErrorHandler,w
  7136     0197  000A               	callw
  7137     0198  3181               	pagesel	$
  7138                           
  7139                           ;mcc_generated_files/eusart.c: 233:     } else {
  7140     0199  299D               	goto	i1l659
  7141     019A                     i1l3460:
  7142                           
  7143                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7144     019A  3182  22B6  3181   	fcall	_EUSART_RxDataHandler
  7145     019D                     i1l659:
  7146     019D  0008               	return
  7147     019E                     __end_of_EUSART_Receive_ISR:
  7148                           
  7149                           	psect	text60
  7150     0453                     __ptext60:	
  7151 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7152 ;; Defined at:
  7153 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		None
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7167 ;;      Params:         0       0       0       0       0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_EUSART_Initialize
  7177 ;;		_EUSART_Receive_ISR
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181     0453                     _EUSART_DefaultOverrunErrorHandler:	
  7182                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7183                           
  7184     0453                     i1l3286:	
  7185                           ;incstack = 0
  7186                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7187                           
  7188                           
  7189                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7190     0453  0023               	movlb	3	; select bank3
  7191     0454  121D               	bcf	29,4	;volatile
  7192                           
  7193                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7194     0455  161D               	bsf	29,4	;volatile
  7195     0456                     i1l669:
  7196     0456  0008               	return
  7197     0457                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7198                           
  7199                           	psect	text61
  7200     0472                     __ptext61:	
  7201 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7202 ;; Defined at:
  7203 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;		None
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		None
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7217 ;;      Params:         0       0       0       0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0
  7220 ;;      Totals:         0       0       0       0       0       0       0       0
  7221 ;;Total ram usage:        0 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_EUSART_Initialize
  7227 ;;		_EUSART_Receive_ISR
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231     0472                     _EUSART_DefaultFramingErrorHandler:	
  7232                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7233                           
  7234     0472                     i1l666:	
  7235                           ;incstack = 0
  7236                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7237                           
  7238     0472  0008               	return
  7239     0473                     __end_of_EUSART_DefaultFramingErrorHandler:
  7240                           
  7241                           	psect	text62
  7242     0457                     __ptext62:	
  7243 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7244 ;; Defined at:
  7245 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7259 ;;      Params:         0       0       0       0       0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used: 1
  7265 ;; Hardware stack levels required when called: 1
  7266 ;; This function calls:
  7267 ;;		_EUSART_RxDataHandler
  7268 ;; This function is called by:
  7269 ;;		_EUSART_Initialize
  7270 ;;		_EUSART_Receive_ISR
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274     0457                     _EUSART_DefaultErrorHandler:	
  7275                           ;psect for function _EUSART_DefaultErrorHandler
  7276                           
  7277     0457                     i1l3288:	
  7278                           ;incstack = 0
  7279                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7280                           
  7281                           
  7282                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7283     0457  3182  22B6  3184   	fcall	_EUSART_RxDataHandler
  7284     045A                     i1l672:
  7285     045A  0008               	return
  7286     045B                     __end_of_EUSART_DefaultErrorHandler:
  7287                           
  7288                           	psect	text63
  7289     02B6                     __ptext63:	
  7290 ;; *************** function _EUSART_RxDataHandler *****************
  7291 ;; Defined at:
  7292 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7306 ;;      Params:         0       0       0       0       0       0       0       0
  7307 ;;      Locals:         0       0       0       0       0       0       0       0
  7308 ;;      Temps:          1       0       0       0       0       0       0       0
  7309 ;;      Totals:         1       0       0       0       0       0       0       0
  7310 ;;Total ram usage:        1 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		_EUSART_Receive_ISR
  7316 ;;		_EUSART_DefaultErrorHandler
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320     02B6                     _EUSART_RxDataHandler:	
  7321                           ;psect for function _EUSART_RxDataHandler
  7322                           
  7323     02B6                     i1l3074:	
  7324                           ;incstack = 0
  7325                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7326                           
  7327                           
  7328                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7329     02B6  0020               	movlb	0	; select bank0
  7330     02B7  0849               	movf	_eusartRxHead,w
  7331     02B8  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7332     02B9  0086               	movwf	6
  7333     02BA  0187               	clrf	7
  7334     02BB  0023               	movlb	3	; select bank3
  7335     02BC  0819               	movf	25,w	;volatile
  7336     02BD  0081               	movwf	1
  7337     02BE                     i1l3076:
  7338     02BE  3001               	movlw	1
  7339     02BF  00F0               	movwf	??_EUSART_RxDataHandler
  7340     02C0  0870               	movf	??_EUSART_RxDataHandler,w
  7341     02C1  0020               	movlb	0	; select bank0
  7342     02C2  07C9               	addwf	_eusartRxHead,f	;volatile
  7343     02C3                     i1l3078:
  7344                           
  7345                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7346     02C3  3010               	movlw	16
  7347     02C4  0249               	subwf	_eusartRxHead,w	;volatile
  7348     02C5  1C03               	skipc
  7349     02C6  2AC8               	goto	u94_21
  7350     02C7  2AC9               	goto	u94_20
  7351     02C8                     u94_21:
  7352     02C8  2ACA               	goto	i1l3082
  7353     02C9                     u94_20:
  7354     02C9                     i1l3080:
  7355                           
  7356                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7357     02C9  01C9               	clrf	_eusartRxHead	;volatile
  7358     02CA                     i1l3082:
  7359                           
  7360                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7361     02CA  3001               	movlw	1
  7362     02CB  00F0               	movwf	??_EUSART_RxDataHandler
  7363     02CC  0870               	movf	??_EUSART_RxDataHandler,w
  7364     02CD  07FC               	addwf	_eusartRxCount,f	;volatile
  7365     02CE                     i1l663:
  7366     02CE  0008               	return
  7367     02CF                     __end_of_EUSART_RxDataHandler:
  7368     007E                     btemp	set	126	;btemp
  7369     007E                     int$flags	set	126
  7370     007E                     wtemp0	set	126
  7371     20D4                     
  7372                           	psect	idloc
  7373                           
  7374                           ;Config register IDLOC0 @ 0x8000
  7375                           ;	unspecified, using default values
  7376     8000                     	org	32768
  7377     8000  3FFF               	dw	16383
  7378                           
  7379                           ;Config register IDLOC1 @ 0x8001
  7380                           ;	unspecified, using default values
  7381     8001                     	org	32769
  7382     8001  3FFF               	dw	16383
  7383                           
  7384                           ;Config register IDLOC2 @ 0x8002
  7385                           ;	unspecified, using default values
  7386     8002                     	org	32770
  7387     8002  3FFF               	dw	16383
  7388                           
  7389                           ;Config register IDLOC3 @ 0x8003
  7390                           ;	unspecified, using default values
  7391     8003                     	org	32771
  7392     8003  3FFF               	dw	16383
  7393                           
  7394                           	psect	config
  7395                           
  7396                           ;Config register CONFIG1 @ 0x8007
  7397                           ;	Oscillator Selection
  7398                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7399                           ;	Watchdog Timer Enable
  7400                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  7401                           ;	Power-up Timer Enable
  7402                           ;	PWRTE = OFF, PWRT disabled
  7403                           ;	MCLR Pin Function Select
  7404                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7405                           ;	Flash Program Memory Code Protection
  7406                           ;	CP = OFF, Program memory code protection is disabled
  7407                           ;	Data Memory Code Protection
  7408                           ;	CPD = OFF, Data memory code protection is disabled
  7409                           ;	Brown-out Reset Enable
  7410                           ;	BOREN = ON, Brown-out Reset enabled
  7411                           ;	Clock Out Enable
  7412                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7413                           ;	Internal/External Switchover
  7414                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7415                           ;	Fail-Safe Clock Monitor Enable
  7416                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7417     8007                     	org	32775
  7418     8007  3FEC               	dw	16364
  7419                           
  7420                           ;Config register CONFIG2 @ 0x8008
  7421                           ;	Flash Memory Self-Write Protection
  7422                           ;	WRT = OFF, Write protection off
  7423                           ;	Voltage Regulator Capacitor Enable
  7424                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
  7425                           ;	PLL Enable
  7426                           ;	PLLEN = OFF, 4x PLL disabled
  7427                           ;	Stack Overflow/Underflow Reset Enable
  7428                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7429                           ;	Brown-out Reset Voltage Selection
  7430                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7431                           ;	Low-Voltage Programming Enable
  7432                           ;	LVP = ON, Low-voltage programming enabled
  7433     8008                     	org	32776
  7434     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        13
    BSS         103
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      2      80
    BANK1            80      0      48
    BANK2            52      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2259$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2264	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2259	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2258	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S1361$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1361$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1361$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     664
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   78494
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (7) _rtcc_handle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   78254
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   19569
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          3     0      3    2478
                                              4 COMMON     3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     4     1      3     914
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        3     1      2    1352
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      30       8       60.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               34      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      8E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 11 15:09:59 2023

                ?_EUSART_SetRxInterruptHandler 006E                         ??_I2C_DO_SEND_ADR_READ 0070  
                      ??_I2C_DO_SEND_ADR_WRITE 0071                                    _SSPSTATbits 0214  
                        ??_I2C_DO_SEND_RESTART 0070                                            l135 029C  
                                          l163 02F9                                            l166 03D9  
                                          l169 0446                                            l278 03B9  
                                          l618 0163                                            l716 02B5  
                                          l681 040A                                            l675 0404  
                                          l684 03F2                                            l749 03EC  
                                          l678 03FE                                            l687 03F8  
                                          l767 03E4                                            l768 03E4  
                              _timer1ReloadVal 0041                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 006E                                            wreg 0009  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 0411  
                      ??_rd2RegCompleteHandler 0078                                           l3200 0290  
                                         l3050 0405                                           l3042 03F3  
                                         l3210 029A                                           l3202 0293  
                                         l3044 03ED                                           l3212 03B1  
                                         l3220 03D3                                           l3204 0295  
                                         l3046 03FF                                           l3214 03B3  
                                         l3222 03D6                                           l3206 0297  
                                         l3230 029F                                           l3048 03F9  
                                         l3216 03B5                                           l3224 03D7  
                                         l3208 0298                                           l3240 02AA  
                                         l3232 02A1                                           l3250 0136  
                                         l3218 03B8                                           l3242 02B2  
                                         l3234 02A3                                           l3226 0443  
                                         l3260 0140                                           l3252 0139  
                                         l3244 0122                                           l3084 03E7  
                                         l3236 02A4                                           l3228 029D  
                                         l3270 015F                                           l3262 0148  
                                         l3254 013B                                           l3246 0124  
                                         l3190 0285                                           l3238 02A8  
                                         l3422 02E7                                           l3272 0160  
                                         l3264 0150                                           l3256 013D  
                                         l3248 012C                                           l3192 0287  
                                         l3274 0161                                           l3266 015C  
                                         l3258 013F                                           l3194 028A  
                                         l3268 015E                                           l3196 028C  
                                         l3188 0281                                           l3198 028E  
                                         l3656 03E1                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _LATE 0110                                           i1l92 033D  
                                         i1l95 032C                                           i1l98 031B  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 0078                                           _main 03E1  
                     ?_I2C_CallbackReturnReset 0077                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0055                     ??_TMR1_SetInterruptHandler 0070  
                                _I2C_DO_RX_ACK 0420                  __end_of_OSCILLATOR_Initialize 03DA  
                                        ?_main 0070                                          _T1CON 0018  
                                        i1l101 034E                                          i1l104 02E6  
                                        i1l305 035C                                          i1l402 0433  
                                        i1l411 0424                                          i1l331 044A  
                                        i1l308 03A6                                          i1l420 0415  
                                        i1l501 0460                                          i1l341 03C2  
                                        i1l405 042E                                          i1l350 00DE  
                                        i1l414 041F                                          i1l335 01F2  
                                        i1l328 023E                                          i1l344 03D2  
                                        i1l408 0429                                          i1l417 041A  
                                        i1l434 0470                                          i1l338 043D  
                                        i1l426 021A                                          i1l347 00C2  
                                        i1l363 00FB                                          i1l364 0121  
                                        i1l532 001A                                          i1l437 046E  
                                        i1l453 0463                                          i1l381 01CA  
                                        i1l534 002A                                          i1l471 0469  
                                        i1l375 03E0                                          i1l543 0053  
                                        i1l480 0452                                          i1l456 0442  
                                        i1l536 003A                                          i1l465 0466  
                                        i1l537 0053                                          i1l474 0410  
                                        i1l730 030A                                          i1l538 0045  
                                        i1l459 046C                                          i1l652 0260  
                                        i1l477 044E                                          i1l742 0376  
                                        i1l663 02CE                                          i1l399 0438  
                                        i1l911 03B0                                          i1l672 045A  
                                        i1l752 0471                                          i1l649 025E  
                                        i1l666 0472                                          i1l498 045D  
                                        i1l746 0383                                          i1l659 019D  
                                        i1l669 0456                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0078  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u90_20 00DB                                          u90_21 00DA  
                                        u91_20 00F6                                          u91_21 00F5  
                                        u77_20 0222                                          u77_21 0221  
                                        u94_20 02C9                                          u78_20 0355  
                                        u94_21 02C8                                          u78_21 0354  
                                        u89_20 0094                                          u89_21 0093  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _SW_Ad 0046                               __end_of_TMR1_ISR 0377  
                            __end_of_I2C_DO_RX 0122                              __end_of_I2C_DO_TX 00DF  
                               _WDT_Initialize 0443                        _I2C_MasterEnableRestart 046A  
                      __end_of_TMR1_Initialize 02B6                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                              _TMR1_WriteTimer 02FA                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0057                                   __end_of_main 03E7  
                    ?_I2C_DO_SEND_RESTART_READ 0070                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0070  
                                       ??_main 0070                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 0447                             ??_I2C_MasterSetIrq 0070  
    __end_of_EUSART_DefaultFramingErrorHandler 0473            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0472  
                   _EUSART_OverrunErrorHandler 0066                __end_of_I2C_CallbackReturnReset 046F  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       u102_20 01D3                                         u102_21 01D2  
                      TMR1_WriteTimer@timerVal 0070                                         u103_20 01DB  
                                       u103_21 01DA                                         i1l3002 01AE  
                                       i1l3010 0423                                         i1l3014 0411  
                                       i1l3030 01FC                                         i1l3022 01F3  
                                       u120_20 016F                                         i1l3008 0420  
                                       i1l3016 0413                                         i1l3024 01F5  
                                       u104_20 02FF                                         u120_21 016E  
                                       u104_21 02FE                                         i1l3018 0414  
                                       i1l3026 01F8                                         i1l3122 03A7  
                                       i1l3036 0200                                         i1l3300 0306  
                                       i1l3302 0308                                         i1l3080 02C9  
                                       u121_20 017F                                         u105_20 037E  
                                       i1l3304 0377                                         u121_21 017E  
                                       u105_21 037D                                         i1l3082 02CA  
                                       i1l3074 02B6                                         i1l3306 037E  
                                       i1l3076 02BE                                         i1l2700 032B  
                                       i1l3078 02C3                                         i1l3430 023F  
                                       u122_20 0194                                         i1l3440 0259  
                                       i1l3432 0246                                         i1l2712 033E  
                                       i1l2704 030B                                         i1l2720 02CF  
                                       i1l3280 01D3                                         i1l3424 0447  
                                       u122_21 0193                                         i1l3450 017A  
                                       i1l3442 0164                                         i1l3434 024D  
                                       i1l2714 0346                                         i1l2706 0313  
                                       i1l2722 02E5                                         i1l3282 01DB  
                                       i1l3290 02FA                                         i1l3426 036A  
                                       i1l3460 019A                                         i1l3452 017F  
                                       i1l3444 016A                                         i1l3436 0252  
                                       i1l2716 034D                                         i1l2708 031A  
                                       i1l2732 043F                                         i1l2900 03C1  
                                       i1l2740 042F                                         i1l3284 01DE  
                                       i1l3276 01CB                                         i1l3292 02FF  
                                       i1l3428 036C                                         i1l3286 0453  
                                       i1l3454 0185                                         i1l3446 016F  
                                       i1l3438 0258                                         i1l2670 0222  
                                       i1l2734 0434                                         i1l2742 0432  
                                       i1l3278 01CE                                         i1l3294 0300  
                                       i1l3630 0006                                         i1l3288 0457  
                                       i1l3456 018A                                         i1l3448 0175  
                                       i1l2680 035B                                         i1l2672 0231  
                                       i1l2752 0461                                         i1l2728 040B  
                                       i1l2904 03CB                                         i1l2920 0099  
                                       i1l2912 008C                                         i1l2736 0437  
                                       i1l2760 0419                                         i1l3296 0302  
                                       i1l3640 0024                                         i1l3632 000A  
                                       i1l3458 0194                                         i1l2682 046A  
                                       i1l2674 039C                                         i1l2690 0335  
                                       i1l2770 0464                                         i1l2906 03CD  
                                       i1l2930 00A1                                         i1l2746 0425  
                                       i1l2850 045B                                         i1l3298 0304  
                                       i1l3650 004A                                         i1l3642 002F  
                                       i1l3634 000F                                         i1l2684 0467  
                                       i1l2676 0350                                         i1l2668 021C  
                                       i1l2692 033C                                         i1l2780 046F  
                                       i1l2756 044B                                         i1l2908 03D1  
                                       i1l2932 00C4                                         i1l2924 009D  
                                       i1l2916 0095                                         i1l2772 042A  
                                       i1l2748 0428                                         i1l2764 041B  
                                       i1l3652 004F                                         i1l3644 0034  
                                       i1l3636 0014                                         i1l2678 0355  
                                       i1l2686 044F                                         i1l2934 00D0  
                                       i1l2950 00EC                                         i1l2774 042D  
                                       i1l2766 041E                                         i1l2758 0416  
                                       i1l3646 003F                                         i1l3638 001F  
                                       i1l2688 032D                                         i1l2696 031C  
                                       i1l2784 046D                                         i1l2936 00DB  
                                       i1l2960 00FD                                         i1l2952 00F6  
                                       i1l2698 0324                                         i1l2778 045E  
                                       i1l2890 043B                                         i1l2938 00DD  
                                       i1l2970 0105                                         i1l2954 00F9  
                                       i1l2946 00DF                                         i1l3770 0212  
                                       i1l2892 043C                                         i1l3772 0113  
                                       i1l2964 0101                                         i1l2948 00E7  
                                       i1l2980 03DF                                         i1l2990 01A5  
                                       i1l3774 00B4                                         i1l3776 01BC  
                                       i1l2992 01A8                                         i1l2984 019E  
                                       i1l2888 0439                                         i1l2896 03BA  
                                       i1l2976 03DA                                         u141_20 000A  
                                       u141_21 0009                                         i1l2986 01A1  
                                       i1l2898 03BC                                         i1l2978 03DC  
                                       i1l2996 01AA                                         u118_20 0246  
                                       u150_20 004A                                         u142_20 000F  
                                       u118_21 0245                                         u150_21 0049  
                                       u142_21 000E                                         u119_20 0258  
                                       u151_20 004F                                         u143_20 0014  
                                       u119_21 0257                                         u151_21 004E  
                                       u143_21 0013                                         u144_20 001F  
                                       u144_21 001E                                         u145_20 0024  
                                       u145_21 0023                                         u146_20 002F  
                                       u146_21 002E                                         u147_20 0034  
                                       u147_21 0033                                         u148_20 003F  
                                       u148_21 003E                                         u149_20 0044  
                                       u149_21 0043                                         _MB_UID 005F  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 0461           __end_of_TMR1_DefaultInterruptHandler 0472  
                 _TMR1_DefaultInterruptHandler 0471                                  _I2C_MasterFsm 01CB  
                                _I2C_MasterIsr 0447                            _EUSART_Transmit_ISR 023F  
                            I2C_SetCallback@cb 0070                                  _I2C_SetBuffer 034F  
                          _I2C_DO_ADDRESS_NACK 01F3                           ?_I2C_MasterGetRxData 0070  
                                 ?_rtcc_handle 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070       TMR1_SetInterruptHandler@InterruptHandler 006E  
                      __end_of_TMR1_WriteTimer 030B                           ?_EUSART_Transmit_ISR 0070  
                        __end_of_TMR1_CallBack 0384                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 02E7                        __end_of__initialization 0088  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 03F3                   _EUSART_SetTxInterruptHandler 03ED  
                      _rdBlkRegCompleteHandler 02CF                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK0 035D  
                       _I2C_CallbackReturnStop 046F                            ??_SYSTEM_Initialize 0070  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                         __end_of_fctsupported 03CB                                 ?_I2C_SetBuffer 0070  
                __end_of_I2C_DO_SEND_ADR_WRITE 03D3                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 00A0                     __end_of_I2C_MasterClearIrq 045E  
              ??_EUSART_SetOverrunErrorHandler 0070                      __end_of_SYSTEM_Initialize 02FA  
                        ??_EUSART_Transmit_ISR 0070                              _I2C_MasterSendAck 044B  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                ??_I2C_DO_IDLE 0070                                  ??_I2C_DO_RCEN 0070  
                __end_of_rd2RegCompleteHandler 032D                   __end_of_I2C_MasterSendTxData 0443  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 0464  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 034F  
                          _I2C_DO_RX_NACK_STOP 041B                          _rd1RegCompleteHandler 032D  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 0453  
                        _wr1RegCompleteHandler 030B                                     __pmaintext 03E1  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0077  
                ?_EUSART_SetTxInterruptHandler 006E               _EUSART_TxDefaultInterruptHandler 006C  
                  __end_of_I2C_DO_SEND_RESTART 042F                                _I2C_DO_TX_EMPTY 019E  
                          I2C_SetBuffer@buffer 0072                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0071  
               I2C_SetDataCompleteCallback@ptr 0076                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0434                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 007C                      __end_of_I2C_MasterSendAck 044F  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0070  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 0467                   ?_I2C_SetDataCompleteCallback 0074  
                                    _I2C_DO_RX 00DF                                      _I2C_DO_TX 008C  
             __end_of_I2C_DO_SEND_RESTART_READ 0439                      ??_rdBlkRegCompleteHandler 0078  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 043E                            __end_of_I2C_DO_RCEN 03E1  
                              ??_I2C_SetBuffer 0072                        I2C_SetBuffer@bufferSize 0070  
                                  _Temperature 0053                                 _I2C_MasterStop 0467  
                               _I2C_Initialize 03B1                                        __ptext1 02E7  
                                      __ptext2 0443                                        __ptext3 029D  
                                      __ptext4 03E7                                        __ptext5 0281  
                                      __ptext6 03D3                                        __ptext7 03B1  
                                      __ptext8 0122                                        __ptext9 03ED  
                        ??_I2C_DO_RX_NACK_STOP 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 03D3  
                           I2C_SetCallback@idx 0073                       ??_PIN_MANAGER_Initialize 006E  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 006E  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 005D                                        clrloop0 0391  
                   _SHT30_CMD_MEASURE_L_Enable 0059                           end_of_initialization 0088  
                   _SHT30_CMD_MEASURE_M_Enable 005B                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 03FF  
                _EUSART_SetOverrunErrorHandler 03F9                                        init_ram 0384  
                       ?_rd1RegCompleteHandler 0077                                        initloop 0385  
                      __end_of_I2C_DO_TX_EMPTY 01CB                              _EUSART_Initialize 0122  
                  _SHT30_CMD_MEASURE_H_Disable 0060                         ?_wr1RegCompleteHandler 0077  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 046A                         __end_of_I2C_Initialize 03BA  
                  _SHT30_CMD_MEASURE_L_Disable 0055                    _SHT30_CMD_MEASURE_M_Disable 0057  
                          ??_EUSART_Initialize 0070                               ??_WDT_Initialize 006E  
               ??_EUSART_SetTxInterruptHandler 0070                __end_of_rdBlkRegCompleteHandler 02E7  
                         _I2C_MasterSendTxData 043E                                    _f_Indicator 0045  
                                 _fctsupported 03C3                      __end_of_EUSART_Initialize 0164  
                                  _I2C_DO_IDLE 0439                                    _I2C_DO_RCEN 03DA  
                   rdBlkRegCompleteHandler@ptr 0077                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 0434  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 046D  
           __end_of_EUSART_DefaultErrorHandler 045B                     _EUSART_DefaultErrorHandler 0457  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                            start_initialization 0057  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 006E  
 EUSART_SetTxInterruptHandler@interruptHandler 006E                                    ??_I2C_DO_RX 0078  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 0471  
                       _I2C_DO_RX_NACK_RESTART 0416                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 045B                 ?_EUSART_SetOverrunErrorHandler 006E  
                   _EUSART_FramingErrorHandler 0068                         _EUSART_SetErrorHandler 0405  
                          ?_I2C_MasterClearIrq 0070                    __end_of_I2C_MasterGetRxData 0464  
                                  __pdataBANK0 0055                          __end_of_I2C_DO_RX_ACK 0425  
                             _I2C_DO_SEND_STOP 0425                              ??_I2C_SetCallback 0073  
                           _I2C_MasterSendNack 044F                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 0261                                    __pbssBIGRAM 20D4  
                  __end_of_EUSART_Transmit_ISR 0261                          _I2C_DO_SEND_ADR_WRITE 03CB  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 006E                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 03C3  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 021B  
                   __end_of_EUSART_Receive_ISR 019E                               _I2C_MasterIsNack 040B  
                    _I2C_DO_SEND_RESTART_WRITE 042F               _EUSART_RxDefaultInterruptHandler 006A  
                             _I2C_MasterSetIrq 045E                                      __pnvBANK0 0062  
                        _rd2RegCompleteHandler 031C                   __end_of_EUSART_RxDataHandler 02CF  
                       _PIN_MANAGER_Initialize 0281                          _wr2RegCompleteHandler 033E  
                    ??_I2C_CallbackReturnReset 0078                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 03ED  
                                 _eusartRxHead 0049                                   _eusartTxHead 004C  
                                 _eusartRxTail 007D                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 004B                      __end_of_i2c_fsmStateTable 0281  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 004A  
                                  _device_time 003D                        ??_rd1RegCompleteHandler 0078  
                               _eusartRxBuffer 00B0                        ??_wr1RegCompleteHandler 0078  
                                _TMR1_CallBack 0377                                 _eusartTxBuffer 00C0  
       EUSART_SetErrorHandler@interruptHandler 006E                                       _LATCbits 010E  
                                    clear_ram0 0390                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0048  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0070  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 01F3  
                        __end_of_I2C_MasterIsr 044B                    __end_of_I2C_DO_RX_NACK_STOP 0420  
    __end_of_EUSART_DefaultOverrunErrorHandler 0457            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0453  
                                     _TMR1_ISR 036A                __end_of_I2C_MasterEnableRestart 046D  
                        __end_of_I2C_SetBuffer 035D                              ??_TMR1_Initialize 0070  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                                ??_rtcc_handle 0070                       wr2RegCompleteHandler@ptr 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0077  
                               ?_TMR1_CallBack 0070                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                                       _Humidity 0051  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 006E                           __end_of_I2C_DO_RESET 0416  
                      ??_OSCILLATOR_Initialize 006E                            _EUSART_ErrorHandler 0064  
                         _I2C_DO_SEND_ADR_READ 03BA                    ?_EUSART_DefaultErrorHandler 0070  
                     _TMR1_SetInterruptHandler 03E7                          _TMR1_InterruptHandler 0062  
                         _EUSART_RxDataHandler 02B6                                       __ptext10 03F3  
                                     __ptext11 03F9                                       __ptext20 0447  
                                     __ptext12 03FF                                       __ptext21 01CB  
                                     __ptext13 0405                                     _T1GCONbits 0019  
                                     __ptext30 042F                                       __ptext22 045B  
                                     __ptext31 0434                                       __ptext23 01F3  
                                     __ptext15 036A                                       __ptext40 040B  
                                     __ptext32 03DA                                       __ptext24 0411  
                                     __ptext16 02FA                                       __ptext41 043E  
                                     __ptext33 00DF                                       __ptext25 0416  
                                     __ptext17 0377                                       __ptext50 031C  
                                     __ptext42 044B                                       __ptext34 008C  
                                     __ptext26 041B                                       __ptext18 0471  
                                     __ptext51 032D                                       __ptext43 0461  
                                     __ptext35 03CB                                       __ptext27 0420  
                                     __ptext19 03A7                                       __ptext60 0453  
                                     __ptext52 033E                                       __ptext44 044F  
                                     __ptext36 03BA                                       __ptext28 0425  
                                     __ptext61 0472                                       __ptext53 039C  
                                     __ptext45 0464                                       __ptext37 0439  
                                     __ptext29 042A                                       __ptext62 0457  
                                     __ptext54 021B                                       __ptext46 046D  
                                     __ptext38 019E                                       __ptext63 02B6  
                                     __ptext55 034F                                       __ptext47 046F  
                                     __ptext39 045E                                       __ptext56 0467  
                                     __ptext48 02CF                                       __ptext57 046A  
                                     __ptext49 030B                                       __ptext58 023F  
                                     __ptext59 0164            __end_of_I2C_SetDataCompleteCallback 03A7  
                  _I2C_SetDataCompleteCallback 039C                        ?_I2C_DO_RX_NACK_RESTART 0070  
                          __end_of_rtcc_handle 03B1                       __end_of_I2C_DO_SEND_STOP 042A  
                      ?_EUSART_SetErrorHandler 006E                                _I2C_SetCallback 021B  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 006E  
                                  _MB_Register 004D                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0055  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0405  
                _EUSART_SetFramingErrorHandler 03FF                              ??_TMR1_WriteTimer 0072  
                     __end_of_I2C_MasterIsNack 0411                       __end_of_I2C_MasterSetIrq 0461  
                                   _LED_Statuc 0047                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 041B  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 040B  
                          _I2C_DO_SEND_RESTART 042A           __end_of_EUSART_SetRxInterruptHandler 03F9  
                 _EUSART_SetRxInterruptHandler 03F3                             _EUSART_Receive_ISR 0164  
EUSART_SetFramingErrorHandler@interruptHandler 006E                                  __pstringtext1 0261  
                                __pstringtext2 03C3                           ?_I2C_DO_SEND_RESTART 0070  
                          ?_EUSART_Receive_ISR 0070                                    _rtcc_handle 03A7  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                                   _SES_Modbus 20D4                        __end_of_I2C_SetCallback 023F  
               __end_of_PIN_MANAGER_Initialize 029D                  __end_of_rd1RegCompleteHandler 033E  
                         ??_EUSART_Receive_ISR 0071                  __end_of_wr1RegCompleteHandler 031C  
                        _MSSP_InterruptHandler 0043                                _TMR1_Initialize 029D  
