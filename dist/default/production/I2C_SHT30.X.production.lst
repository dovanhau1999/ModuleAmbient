

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri May 26 15:49:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	intentry,global,class=CODE,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,delta=2
   124                           	psect	text106,local,class=CODE,merge=1,delta=2
   125                           	psect	text107,local,class=CODE,merge=1,delta=2
   126                           	psect	text108,local,class=CODE,merge=1,delta=2
   127                           	psect	text109,local,class=CODE,merge=1,delta=2
   128                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   129                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   130                           	dabs	1,0x320,16
   131                           	dabs	1,0x2A0,80
   132                           	dabs	1,0x220,80
   133                           	dabs	1,0x1E8,8
   134                           	dabs	1,0x2138,0,_SES_Modbus
   135                           	dabs	1,0x7E,2
   136     0000                     
   137                           ; Version 2.40
   138                           ; Generated 17/11/2021 GMT
   139                           ; 
   140                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution. Publication is not required when
   154                           ;        this file is used in an embedded application.
   155                           ; 
   156                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   157                           ;        software without specific prior written permission.
   158                           ; 
   159                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   160                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   161                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   162                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   163                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   164                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   165                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   166                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   167                           ; 
   168                           ; 
   169                           ; Code-generator required, PIC16F1936 Definitions
   170                           ; 
   171                           ; SFR Addresses
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     0010                     	;# 
   188     0011                     	;# 
   189     0012                     	;# 
   190     0013                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0016                     	;# 
   194     0017                     	;# 
   195     0018                     	;# 
   196     0019                     	;# 
   197     001A                     	;# 
   198     001B                     	;# 
   199     001C                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     008C                     	;# 
   203     008D                     	;# 
   204     008E                     	;# 
   205     0090                     	;# 
   206     0091                     	;# 
   207     0092                     	;# 
   208     0093                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     010C                     	;# 
   221     010D                     	;# 
   222     010E                     	;# 
   223     0110                     	;# 
   224     0111                     	;# 
   225     0112                     	;# 
   226     0113                     	;# 
   227     0114                     	;# 
   228     0115                     	;# 
   229     0116                     	;# 
   230     0117                     	;# 
   231     0118                     	;# 
   232     0119                     	;# 
   233     011A                     	;# 
   234     011B                     	;# 
   235     011D                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     0191                     	;# 
   239     0191                     	;# 
   240     0192                     	;# 
   241     0193                     	;# 
   242     0193                     	;# 
   243     0193                     	;# 
   244     0194                     	;# 
   245     0195                     	;# 
   246     0196                     	;# 
   247     0199                     	;# 
   248     019A                     	;# 
   249     019B                     	;# 
   250     019B                     	;# 
   251     019B                     	;# 
   252     019B                     	;# 
   253     019C                     	;# 
   254     019C                     	;# 
   255     019D                     	;# 
   256     019E                     	;# 
   257     019F                     	;# 
   258     020D                     	;# 
   259     0210                     	;# 
   260     0211                     	;# 
   261     0212                     	;# 
   262     0213                     	;# 
   263     0214                     	;# 
   264     0215                     	;# 
   265     0215                     	;# 
   266     0216                     	;# 
   267     0217                     	;# 
   268     0291                     	;# 
   269     0291                     	;# 
   270     0292                     	;# 
   271     0293                     	;# 
   272     0294                     	;# 
   273     0295                     	;# 
   274     0295                     	;# 
   275     0296                     	;# 
   276     0298                     	;# 
   277     0298                     	;# 
   278     0299                     	;# 
   279     029A                     	;# 
   280     029B                     	;# 
   281     029C                     	;# 
   282     029C                     	;# 
   283     029D                     	;# 
   284     029E                     	;# 
   285     029F                     	;# 
   286     0311                     	;# 
   287     0311                     	;# 
   288     0312                     	;# 
   289     0313                     	;# 
   290     0314                     	;# 
   291     0315                     	;# 
   292     0315                     	;# 
   293     0316                     	;# 
   294     0318                     	;# 
   295     0318                     	;# 
   296     0319                     	;# 
   297     031A                     	;# 
   298     031C                     	;# 
   299     031C                     	;# 
   300     031D                     	;# 
   301     031E                     	;# 
   302     0394                     	;# 
   303     0395                     	;# 
   304     0396                     	;# 
   305     0415                     	;# 
   306     0416                     	;# 
   307     0417                     	;# 
   308     041C                     	;# 
   309     041D                     	;# 
   310     041E                     	;# 
   311     0791                     	;# 
   312     0792                     	;# 
   313     0793                     	;# 
   314     0794                     	;# 
   315     0795                     	;# 
   316     0798                     	;# 
   317     0799                     	;# 
   318     07A0                     	;# 
   319     07A1                     	;# 
   320     07A3                     	;# 
   321     07A4                     	;# 
   322     07A6                     	;# 
   323     07A7                     	;# 
   324     07A9                     	;# 
   325     07AA                     	;# 
   326     0FE4                     	;# 
   327     0FE5                     	;# 
   328     0FE6                     	;# 
   329     0FE7                     	;# 
   330     0FE8                     	;# 
   331     0FE9                     	;# 
   332     0FEA                     	;# 
   333     0FEB                     	;# 
   334     0FED                     	;# 
   335     0FEE                     	;# 
   336     0FEF                     	;# 
   337     0000                     	;# 
   338     0001                     	;# 
   339     0002                     	;# 
   340     0003                     	;# 
   341     0004                     	;# 
   342     0005                     	;# 
   343     0006                     	;# 
   344     0007                     	;# 
   345     0008                     	;# 
   346     0009                     	;# 
   347     000A                     	;# 
   348     000B                     	;# 
   349     000C                     	;# 
   350     000D                     	;# 
   351     000E                     	;# 
   352     0010                     	;# 
   353     0011                     	;# 
   354     0012                     	;# 
   355     0013                     	;# 
   356     0015                     	;# 
   357     0016                     	;# 
   358     0016                     	;# 
   359     0017                     	;# 
   360     0018                     	;# 
   361     0019                     	;# 
   362     001A                     	;# 
   363     001B                     	;# 
   364     001C                     	;# 
   365     001E                     	;# 
   366     001F                     	;# 
   367     008C                     	;# 
   368     008D                     	;# 
   369     008E                     	;# 
   370     0090                     	;# 
   371     0091                     	;# 
   372     0092                     	;# 
   373     0093                     	;# 
   374     0095                     	;# 
   375     0096                     	;# 
   376     0097                     	;# 
   377     0098                     	;# 
   378     0099                     	;# 
   379     009A                     	;# 
   380     009B                     	;# 
   381     009B                     	;# 
   382     009C                     	;# 
   383     009D                     	;# 
   384     009E                     	;# 
   385     010C                     	;# 
   386     010D                     	;# 
   387     010E                     	;# 
   388     0110                     	;# 
   389     0111                     	;# 
   390     0112                     	;# 
   391     0113                     	;# 
   392     0114                     	;# 
   393     0115                     	;# 
   394     0116                     	;# 
   395     0117                     	;# 
   396     0118                     	;# 
   397     0119                     	;# 
   398     011A                     	;# 
   399     011B                     	;# 
   400     011D                     	;# 
   401     018C                     	;# 
   402     018D                     	;# 
   403     0191                     	;# 
   404     0191                     	;# 
   405     0192                     	;# 
   406     0193                     	;# 
   407     0193                     	;# 
   408     0193                     	;# 
   409     0194                     	;# 
   410     0195                     	;# 
   411     0196                     	;# 
   412     0199                     	;# 
   413     019A                     	;# 
   414     019B                     	;# 
   415     019B                     	;# 
   416     019B                     	;# 
   417     019B                     	;# 
   418     019C                     	;# 
   419     019C                     	;# 
   420     019D                     	;# 
   421     019E                     	;# 
   422     019F                     	;# 
   423     020D                     	;# 
   424     0210                     	;# 
   425     0211                     	;# 
   426     0212                     	;# 
   427     0213                     	;# 
   428     0214                     	;# 
   429     0215                     	;# 
   430     0215                     	;# 
   431     0216                     	;# 
   432     0217                     	;# 
   433     0291                     	;# 
   434     0291                     	;# 
   435     0292                     	;# 
   436     0293                     	;# 
   437     0294                     	;# 
   438     0295                     	;# 
   439     0295                     	;# 
   440     0296                     	;# 
   441     0298                     	;# 
   442     0298                     	;# 
   443     0299                     	;# 
   444     029A                     	;# 
   445     029B                     	;# 
   446     029C                     	;# 
   447     029C                     	;# 
   448     029D                     	;# 
   449     029E                     	;# 
   450     029F                     	;# 
   451     0311                     	;# 
   452     0311                     	;# 
   453     0312                     	;# 
   454     0313                     	;# 
   455     0314                     	;# 
   456     0315                     	;# 
   457     0315                     	;# 
   458     0316                     	;# 
   459     0318                     	;# 
   460     0318                     	;# 
   461     0319                     	;# 
   462     031A                     	;# 
   463     031C                     	;# 
   464     031C                     	;# 
   465     031D                     	;# 
   466     031E                     	;# 
   467     0394                     	;# 
   468     0395                     	;# 
   469     0396                     	;# 
   470     0415                     	;# 
   471     0416                     	;# 
   472     0417                     	;# 
   473     041C                     	;# 
   474     041D                     	;# 
   475     041E                     	;# 
   476     0791                     	;# 
   477     0792                     	;# 
   478     0793                     	;# 
   479     0794                     	;# 
   480     0795                     	;# 
   481     0798                     	;# 
   482     0799                     	;# 
   483     07A0                     	;# 
   484     07A1                     	;# 
   485     07A3                     	;# 
   486     07A4                     	;# 
   487     07A6                     	;# 
   488     07A7                     	;# 
   489     07A9                     	;# 
   490     07AA                     	;# 
   491     0FE4                     	;# 
   492     0FE5                     	;# 
   493     0FE6                     	;# 
   494     0FE7                     	;# 
   495     0FE8                     	;# 
   496     0FE9                     	;# 
   497     0FEA                     	;# 
   498     0FEB                     	;# 
   499     0FED                     	;# 
   500     0FEE                     	;# 
   501     0FEF                     	;# 
   502     0000                     	;# 
   503     0001                     	;# 
   504     0002                     	;# 
   505     0003                     	;# 
   506     0004                     	;# 
   507     0005                     	;# 
   508     0006                     	;# 
   509     0007                     	;# 
   510     0008                     	;# 
   511     0009                     	;# 
   512     000A                     	;# 
   513     000B                     	;# 
   514     000C                     	;# 
   515     000D                     	;# 
   516     000E                     	;# 
   517     0010                     	;# 
   518     0011                     	;# 
   519     0012                     	;# 
   520     0013                     	;# 
   521     0015                     	;# 
   522     0016                     	;# 
   523     0016                     	;# 
   524     0017                     	;# 
   525     0018                     	;# 
   526     0019                     	;# 
   527     001A                     	;# 
   528     001B                     	;# 
   529     001C                     	;# 
   530     001E                     	;# 
   531     001F                     	;# 
   532     008C                     	;# 
   533     008D                     	;# 
   534     008E                     	;# 
   535     0090                     	;# 
   536     0091                     	;# 
   537     0092                     	;# 
   538     0093                     	;# 
   539     0095                     	;# 
   540     0096                     	;# 
   541     0097                     	;# 
   542     0098                     	;# 
   543     0099                     	;# 
   544     009A                     	;# 
   545     009B                     	;# 
   546     009B                     	;# 
   547     009C                     	;# 
   548     009D                     	;# 
   549     009E                     	;# 
   550     010C                     	;# 
   551     010D                     	;# 
   552     010E                     	;# 
   553     0110                     	;# 
   554     0111                     	;# 
   555     0112                     	;# 
   556     0113                     	;# 
   557     0114                     	;# 
   558     0115                     	;# 
   559     0116                     	;# 
   560     0117                     	;# 
   561     0118                     	;# 
   562     0119                     	;# 
   563     011A                     	;# 
   564     011B                     	;# 
   565     011D                     	;# 
   566     018C                     	;# 
   567     018D                     	;# 
   568     0191                     	;# 
   569     0191                     	;# 
   570     0192                     	;# 
   571     0193                     	;# 
   572     0193                     	;# 
   573     0193                     	;# 
   574     0194                     	;# 
   575     0195                     	;# 
   576     0196                     	;# 
   577     0199                     	;# 
   578     019A                     	;# 
   579     019B                     	;# 
   580     019B                     	;# 
   581     019B                     	;# 
   582     019B                     	;# 
   583     019C                     	;# 
   584     019C                     	;# 
   585     019D                     	;# 
   586     019E                     	;# 
   587     019F                     	;# 
   588     020D                     	;# 
   589     0210                     	;# 
   590     0211                     	;# 
   591     0212                     	;# 
   592     0213                     	;# 
   593     0214                     	;# 
   594     0215                     	;# 
   595     0215                     	;# 
   596     0216                     	;# 
   597     0217                     	;# 
   598     0291                     	;# 
   599     0291                     	;# 
   600     0292                     	;# 
   601     0293                     	;# 
   602     0294                     	;# 
   603     0295                     	;# 
   604     0295                     	;# 
   605     0296                     	;# 
   606     0298                     	;# 
   607     0298                     	;# 
   608     0299                     	;# 
   609     029A                     	;# 
   610     029B                     	;# 
   611     029C                     	;# 
   612     029C                     	;# 
   613     029D                     	;# 
   614     029E                     	;# 
   615     029F                     	;# 
   616     0311                     	;# 
   617     0311                     	;# 
   618     0312                     	;# 
   619     0313                     	;# 
   620     0314                     	;# 
   621     0315                     	;# 
   622     0315                     	;# 
   623     0316                     	;# 
   624     0318                     	;# 
   625     0318                     	;# 
   626     0319                     	;# 
   627     031A                     	;# 
   628     031C                     	;# 
   629     031C                     	;# 
   630     031D                     	;# 
   631     031E                     	;# 
   632     0394                     	;# 
   633     0395                     	;# 
   634     0396                     	;# 
   635     0415                     	;# 
   636     0416                     	;# 
   637     0417                     	;# 
   638     041C                     	;# 
   639     041D                     	;# 
   640     041E                     	;# 
   641     0791                     	;# 
   642     0792                     	;# 
   643     0793                     	;# 
   644     0794                     	;# 
   645     0795                     	;# 
   646     0798                     	;# 
   647     0799                     	;# 
   648     07A0                     	;# 
   649     07A1                     	;# 
   650     07A3                     	;# 
   651     07A4                     	;# 
   652     07A6                     	;# 
   653     07A7                     	;# 
   654     07A9                     	;# 
   655     07AA                     	;# 
   656     0FE4                     	;# 
   657     0FE5                     	;# 
   658     0FE6                     	;# 
   659     0FE7                     	;# 
   660     0FE8                     	;# 
   661     0FE9                     	;# 
   662     0FEA                     	;# 
   663     0FEB                     	;# 
   664     0FED                     	;# 
   665     0FEE                     	;# 
   666     0FEF                     	;# 
   667     0000                     	;# 
   668     0001                     	;# 
   669     0002                     	;# 
   670     0003                     	;# 
   671     0004                     	;# 
   672     0005                     	;# 
   673     0006                     	;# 
   674     0007                     	;# 
   675     0008                     	;# 
   676     0009                     	;# 
   677     000A                     	;# 
   678     000B                     	;# 
   679     000C                     	;# 
   680     000D                     	;# 
   681     000E                     	;# 
   682     0010                     	;# 
   683     0011                     	;# 
   684     0012                     	;# 
   685     0013                     	;# 
   686     0015                     	;# 
   687     0016                     	;# 
   688     0016                     	;# 
   689     0017                     	;# 
   690     0018                     	;# 
   691     0019                     	;# 
   692     001A                     	;# 
   693     001B                     	;# 
   694     001C                     	;# 
   695     001E                     	;# 
   696     001F                     	;# 
   697     008C                     	;# 
   698     008D                     	;# 
   699     008E                     	;# 
   700     0090                     	;# 
   701     0091                     	;# 
   702     0092                     	;# 
   703     0093                     	;# 
   704     0095                     	;# 
   705     0096                     	;# 
   706     0097                     	;# 
   707     0098                     	;# 
   708     0099                     	;# 
   709     009A                     	;# 
   710     009B                     	;# 
   711     009B                     	;# 
   712     009C                     	;# 
   713     009D                     	;# 
   714     009E                     	;# 
   715     010C                     	;# 
   716     010D                     	;# 
   717     010E                     	;# 
   718     0110                     	;# 
   719     0111                     	;# 
   720     0112                     	;# 
   721     0113                     	;# 
   722     0114                     	;# 
   723     0115                     	;# 
   724     0116                     	;# 
   725     0117                     	;# 
   726     0118                     	;# 
   727     0119                     	;# 
   728     011A                     	;# 
   729     011B                     	;# 
   730     011D                     	;# 
   731     018C                     	;# 
   732     018D                     	;# 
   733     0191                     	;# 
   734     0191                     	;# 
   735     0192                     	;# 
   736     0193                     	;# 
   737     0193                     	;# 
   738     0193                     	;# 
   739     0194                     	;# 
   740     0195                     	;# 
   741     0196                     	;# 
   742     0199                     	;# 
   743     019A                     	;# 
   744     019B                     	;# 
   745     019B                     	;# 
   746     019B                     	;# 
   747     019B                     	;# 
   748     019C                     	;# 
   749     019C                     	;# 
   750     019D                     	;# 
   751     019E                     	;# 
   752     019F                     	;# 
   753     020D                     	;# 
   754     0210                     	;# 
   755     0211                     	;# 
   756     0212                     	;# 
   757     0213                     	;# 
   758     0214                     	;# 
   759     0215                     	;# 
   760     0215                     	;# 
   761     0216                     	;# 
   762     0217                     	;# 
   763     0291                     	;# 
   764     0291                     	;# 
   765     0292                     	;# 
   766     0293                     	;# 
   767     0294                     	;# 
   768     0295                     	;# 
   769     0295                     	;# 
   770     0296                     	;# 
   771     0298                     	;# 
   772     0298                     	;# 
   773     0299                     	;# 
   774     029A                     	;# 
   775     029B                     	;# 
   776     029C                     	;# 
   777     029C                     	;# 
   778     029D                     	;# 
   779     029E                     	;# 
   780     029F                     	;# 
   781     0311                     	;# 
   782     0311                     	;# 
   783     0312                     	;# 
   784     0313                     	;# 
   785     0314                     	;# 
   786     0315                     	;# 
   787     0315                     	;# 
   788     0316                     	;# 
   789     0318                     	;# 
   790     0318                     	;# 
   791     0319                     	;# 
   792     031A                     	;# 
   793     031C                     	;# 
   794     031C                     	;# 
   795     031D                     	;# 
   796     031E                     	;# 
   797     0394                     	;# 
   798     0395                     	;# 
   799     0396                     	;# 
   800     0415                     	;# 
   801     0416                     	;# 
   802     0417                     	;# 
   803     041C                     	;# 
   804     041D                     	;# 
   805     041E                     	;# 
   806     0791                     	;# 
   807     0792                     	;# 
   808     0793                     	;# 
   809     0794                     	;# 
   810     0795                     	;# 
   811     0798                     	;# 
   812     0799                     	;# 
   813     07A0                     	;# 
   814     07A1                     	;# 
   815     07A3                     	;# 
   816     07A4                     	;# 
   817     07A6                     	;# 
   818     07A7                     	;# 
   819     07A9                     	;# 
   820     07AA                     	;# 
   821     0FE4                     	;# 
   822     0FE5                     	;# 
   823     0FE6                     	;# 
   824     0FE7                     	;# 
   825     0FE8                     	;# 
   826     0FE9                     	;# 
   827     0FEA                     	;# 
   828     0FEB                     	;# 
   829     0FED                     	;# 
   830     0FEE                     	;# 
   831     0FEF                     	;# 
   832     0000                     	;# 
   833     0001                     	;# 
   834     0002                     	;# 
   835     0003                     	;# 
   836     0004                     	;# 
   837     0005                     	;# 
   838     0006                     	;# 
   839     0007                     	;# 
   840     0008                     	;# 
   841     0009                     	;# 
   842     000A                     	;# 
   843     000B                     	;# 
   844     000C                     	;# 
   845     000D                     	;# 
   846     000E                     	;# 
   847     0010                     	;# 
   848     0011                     	;# 
   849     0012                     	;# 
   850     0013                     	;# 
   851     0015                     	;# 
   852     0016                     	;# 
   853     0016                     	;# 
   854     0017                     	;# 
   855     0018                     	;# 
   856     0019                     	;# 
   857     001A                     	;# 
   858     001B                     	;# 
   859     001C                     	;# 
   860     001E                     	;# 
   861     001F                     	;# 
   862     008C                     	;# 
   863     008D                     	;# 
   864     008E                     	;# 
   865     0090                     	;# 
   866     0091                     	;# 
   867     0092                     	;# 
   868     0093                     	;# 
   869     0095                     	;# 
   870     0096                     	;# 
   871     0097                     	;# 
   872     0098                     	;# 
   873     0099                     	;# 
   874     009A                     	;# 
   875     009B                     	;# 
   876     009B                     	;# 
   877     009C                     	;# 
   878     009D                     	;# 
   879     009E                     	;# 
   880     010C                     	;# 
   881     010D                     	;# 
   882     010E                     	;# 
   883     0110                     	;# 
   884     0111                     	;# 
   885     0112                     	;# 
   886     0113                     	;# 
   887     0114                     	;# 
   888     0115                     	;# 
   889     0116                     	;# 
   890     0117                     	;# 
   891     0118                     	;# 
   892     0119                     	;# 
   893     011A                     	;# 
   894     011B                     	;# 
   895     011D                     	;# 
   896     018C                     	;# 
   897     018D                     	;# 
   898     0191                     	;# 
   899     0191                     	;# 
   900     0192                     	;# 
   901     0193                     	;# 
   902     0193                     	;# 
   903     0193                     	;# 
   904     0194                     	;# 
   905     0195                     	;# 
   906     0196                     	;# 
   907     0199                     	;# 
   908     019A                     	;# 
   909     019B                     	;# 
   910     019B                     	;# 
   911     019B                     	;# 
   912     019B                     	;# 
   913     019C                     	;# 
   914     019C                     	;# 
   915     019D                     	;# 
   916     019E                     	;# 
   917     019F                     	;# 
   918     020D                     	;# 
   919     0210                     	;# 
   920     0211                     	;# 
   921     0212                     	;# 
   922     0213                     	;# 
   923     0214                     	;# 
   924     0215                     	;# 
   925     0215                     	;# 
   926     0216                     	;# 
   927     0217                     	;# 
   928     0291                     	;# 
   929     0291                     	;# 
   930     0292                     	;# 
   931     0293                     	;# 
   932     0294                     	;# 
   933     0295                     	;# 
   934     0295                     	;# 
   935     0296                     	;# 
   936     0298                     	;# 
   937     0298                     	;# 
   938     0299                     	;# 
   939     029A                     	;# 
   940     029B                     	;# 
   941     029C                     	;# 
   942     029C                     	;# 
   943     029D                     	;# 
   944     029E                     	;# 
   945     029F                     	;# 
   946     0311                     	;# 
   947     0311                     	;# 
   948     0312                     	;# 
   949     0313                     	;# 
   950     0314                     	;# 
   951     0315                     	;# 
   952     0315                     	;# 
   953     0316                     	;# 
   954     0318                     	;# 
   955     0318                     	;# 
   956     0319                     	;# 
   957     031A                     	;# 
   958     031C                     	;# 
   959     031C                     	;# 
   960     031D                     	;# 
   961     031E                     	;# 
   962     0394                     	;# 
   963     0395                     	;# 
   964     0396                     	;# 
   965     0415                     	;# 
   966     0416                     	;# 
   967     0417                     	;# 
   968     041C                     	;# 
   969     041D                     	;# 
   970     041E                     	;# 
   971     0791                     	;# 
   972     0792                     	;# 
   973     0793                     	;# 
   974     0794                     	;# 
   975     0795                     	;# 
   976     0798                     	;# 
   977     0799                     	;# 
   978     07A0                     	;# 
   979     07A1                     	;# 
   980     07A3                     	;# 
   981     07A4                     	;# 
   982     07A6                     	;# 
   983     07A7                     	;# 
   984     07A9                     	;# 
   985     07AA                     	;# 
   986     0FE4                     	;# 
   987     0FE5                     	;# 
   988     0FE6                     	;# 
   989     0FE7                     	;# 
   990     0FE8                     	;# 
   991     0FE9                     	;# 
   992     0FEA                     	;# 
   993     0FEB                     	;# 
   994     0FED                     	;# 
   995     0FEE                     	;# 
   996     0FEF                     	;# 
   997     0000                     	;# 
   998     0001                     	;# 
   999     0002                     	;# 
  1000     0003                     	;# 
  1001     0004                     	;# 
  1002     0005                     	;# 
  1003     0006                     	;# 
  1004     0007                     	;# 
  1005     0008                     	;# 
  1006     0009                     	;# 
  1007     000A                     	;# 
  1008     000B                     	;# 
  1009     000C                     	;# 
  1010     000D                     	;# 
  1011     000E                     	;# 
  1012     0010                     	;# 
  1013     0011                     	;# 
  1014     0012                     	;# 
  1015     0013                     	;# 
  1016     0015                     	;# 
  1017     0016                     	;# 
  1018     0016                     	;# 
  1019     0017                     	;# 
  1020     0018                     	;# 
  1021     0019                     	;# 
  1022     001A                     	;# 
  1023     001B                     	;# 
  1024     001C                     	;# 
  1025     001E                     	;# 
  1026     001F                     	;# 
  1027     008C                     	;# 
  1028     008D                     	;# 
  1029     008E                     	;# 
  1030     0090                     	;# 
  1031     0091                     	;# 
  1032     0092                     	;# 
  1033     0093                     	;# 
  1034     0095                     	;# 
  1035     0096                     	;# 
  1036     0097                     	;# 
  1037     0098                     	;# 
  1038     0099                     	;# 
  1039     009A                     	;# 
  1040     009B                     	;# 
  1041     009B                     	;# 
  1042     009C                     	;# 
  1043     009D                     	;# 
  1044     009E                     	;# 
  1045     010C                     	;# 
  1046     010D                     	;# 
  1047     010E                     	;# 
  1048     0110                     	;# 
  1049     0111                     	;# 
  1050     0112                     	;# 
  1051     0113                     	;# 
  1052     0114                     	;# 
  1053     0115                     	;# 
  1054     0116                     	;# 
  1055     0117                     	;# 
  1056     0118                     	;# 
  1057     0119                     	;# 
  1058     011A                     	;# 
  1059     011B                     	;# 
  1060     011D                     	;# 
  1061     018C                     	;# 
  1062     018D                     	;# 
  1063     0191                     	;# 
  1064     0191                     	;# 
  1065     0192                     	;# 
  1066     0193                     	;# 
  1067     0193                     	;# 
  1068     0193                     	;# 
  1069     0194                     	;# 
  1070     0195                     	;# 
  1071     0196                     	;# 
  1072     0199                     	;# 
  1073     019A                     	;# 
  1074     019B                     	;# 
  1075     019B                     	;# 
  1076     019B                     	;# 
  1077     019B                     	;# 
  1078     019C                     	;# 
  1079     019C                     	;# 
  1080     019D                     	;# 
  1081     019E                     	;# 
  1082     019F                     	;# 
  1083     020D                     	;# 
  1084     0210                     	;# 
  1085     0211                     	;# 
  1086     0212                     	;# 
  1087     0213                     	;# 
  1088     0214                     	;# 
  1089     0215                     	;# 
  1090     0215                     	;# 
  1091     0216                     	;# 
  1092     0217                     	;# 
  1093     0291                     	;# 
  1094     0291                     	;# 
  1095     0292                     	;# 
  1096     0293                     	;# 
  1097     0294                     	;# 
  1098     0295                     	;# 
  1099     0295                     	;# 
  1100     0296                     	;# 
  1101     0298                     	;# 
  1102     0298                     	;# 
  1103     0299                     	;# 
  1104     029A                     	;# 
  1105     029B                     	;# 
  1106     029C                     	;# 
  1107     029C                     	;# 
  1108     029D                     	;# 
  1109     029E                     	;# 
  1110     029F                     	;# 
  1111     0311                     	;# 
  1112     0311                     	;# 
  1113     0312                     	;# 
  1114     0313                     	;# 
  1115     0314                     	;# 
  1116     0315                     	;# 
  1117     0315                     	;# 
  1118     0316                     	;# 
  1119     0318                     	;# 
  1120     0318                     	;# 
  1121     0319                     	;# 
  1122     031A                     	;# 
  1123     031C                     	;# 
  1124     031C                     	;# 
  1125     031D                     	;# 
  1126     031E                     	;# 
  1127     0394                     	;# 
  1128     0395                     	;# 
  1129     0396                     	;# 
  1130     0415                     	;# 
  1131     0416                     	;# 
  1132     0417                     	;# 
  1133     041C                     	;# 
  1134     041D                     	;# 
  1135     041E                     	;# 
  1136     0791                     	;# 
  1137     0792                     	;# 
  1138     0793                     	;# 
  1139     0794                     	;# 
  1140     0795                     	;# 
  1141     0798                     	;# 
  1142     0799                     	;# 
  1143     07A0                     	;# 
  1144     07A1                     	;# 
  1145     07A3                     	;# 
  1146     07A4                     	;# 
  1147     07A6                     	;# 
  1148     07A7                     	;# 
  1149     07A9                     	;# 
  1150     07AA                     	;# 
  1151     0FE4                     	;# 
  1152     0FE5                     	;# 
  1153     0FE6                     	;# 
  1154     0FE7                     	;# 
  1155     0FE8                     	;# 
  1156     0FE9                     	;# 
  1157     0FEA                     	;# 
  1158     0FEB                     	;# 
  1159     0FED                     	;# 
  1160     0FEE                     	;# 
  1161     0FEF                     	;# 
  1162     0000                     	;# 
  1163     0001                     	;# 
  1164     0002                     	;# 
  1165     0003                     	;# 
  1166     0004                     	;# 
  1167     0005                     	;# 
  1168     0006                     	;# 
  1169     0007                     	;# 
  1170     0008                     	;# 
  1171     0009                     	;# 
  1172     000A                     	;# 
  1173     000B                     	;# 
  1174     000C                     	;# 
  1175     000D                     	;# 
  1176     000E                     	;# 
  1177     0010                     	;# 
  1178     0011                     	;# 
  1179     0012                     	;# 
  1180     0013                     	;# 
  1181     0015                     	;# 
  1182     0016                     	;# 
  1183     0016                     	;# 
  1184     0017                     	;# 
  1185     0018                     	;# 
  1186     0019                     	;# 
  1187     001A                     	;# 
  1188     001B                     	;# 
  1189     001C                     	;# 
  1190     001E                     	;# 
  1191     001F                     	;# 
  1192     008C                     	;# 
  1193     008D                     	;# 
  1194     008E                     	;# 
  1195     0090                     	;# 
  1196     0091                     	;# 
  1197     0092                     	;# 
  1198     0093                     	;# 
  1199     0095                     	;# 
  1200     0096                     	;# 
  1201     0097                     	;# 
  1202     0098                     	;# 
  1203     0099                     	;# 
  1204     009A                     	;# 
  1205     009B                     	;# 
  1206     009B                     	;# 
  1207     009C                     	;# 
  1208     009D                     	;# 
  1209     009E                     	;# 
  1210     010C                     	;# 
  1211     010D                     	;# 
  1212     010E                     	;# 
  1213     0110                     	;# 
  1214     0111                     	;# 
  1215     0112                     	;# 
  1216     0113                     	;# 
  1217     0114                     	;# 
  1218     0115                     	;# 
  1219     0116                     	;# 
  1220     0117                     	;# 
  1221     0118                     	;# 
  1222     0119                     	;# 
  1223     011A                     	;# 
  1224     011B                     	;# 
  1225     011D                     	;# 
  1226     018C                     	;# 
  1227     018D                     	;# 
  1228     0191                     	;# 
  1229     0191                     	;# 
  1230     0192                     	;# 
  1231     0193                     	;# 
  1232     0193                     	;# 
  1233     0193                     	;# 
  1234     0194                     	;# 
  1235     0195                     	;# 
  1236     0196                     	;# 
  1237     0199                     	;# 
  1238     019A                     	;# 
  1239     019B                     	;# 
  1240     019B                     	;# 
  1241     019B                     	;# 
  1242     019B                     	;# 
  1243     019C                     	;# 
  1244     019C                     	;# 
  1245     019D                     	;# 
  1246     019E                     	;# 
  1247     019F                     	;# 
  1248     020D                     	;# 
  1249     0210                     	;# 
  1250     0211                     	;# 
  1251     0212                     	;# 
  1252     0213                     	;# 
  1253     0214                     	;# 
  1254     0215                     	;# 
  1255     0215                     	;# 
  1256     0216                     	;# 
  1257     0217                     	;# 
  1258     0291                     	;# 
  1259     0291                     	;# 
  1260     0292                     	;# 
  1261     0293                     	;# 
  1262     0294                     	;# 
  1263     0295                     	;# 
  1264     0295                     	;# 
  1265     0296                     	;# 
  1266     0298                     	;# 
  1267     0298                     	;# 
  1268     0299                     	;# 
  1269     029A                     	;# 
  1270     029B                     	;# 
  1271     029C                     	;# 
  1272     029C                     	;# 
  1273     029D                     	;# 
  1274     029E                     	;# 
  1275     029F                     	;# 
  1276     0311                     	;# 
  1277     0311                     	;# 
  1278     0312                     	;# 
  1279     0313                     	;# 
  1280     0314                     	;# 
  1281     0315                     	;# 
  1282     0315                     	;# 
  1283     0316                     	;# 
  1284     0318                     	;# 
  1285     0318                     	;# 
  1286     0319                     	;# 
  1287     031A                     	;# 
  1288     031C                     	;# 
  1289     031C                     	;# 
  1290     031D                     	;# 
  1291     031E                     	;# 
  1292     0394                     	;# 
  1293     0395                     	;# 
  1294     0396                     	;# 
  1295     0415                     	;# 
  1296     0416                     	;# 
  1297     0417                     	;# 
  1298     041C                     	;# 
  1299     041D                     	;# 
  1300     041E                     	;# 
  1301     0791                     	;# 
  1302     0792                     	;# 
  1303     0793                     	;# 
  1304     0794                     	;# 
  1305     0795                     	;# 
  1306     0798                     	;# 
  1307     0799                     	;# 
  1308     07A0                     	;# 
  1309     07A1                     	;# 
  1310     07A3                     	;# 
  1311     07A4                     	;# 
  1312     07A6                     	;# 
  1313     07A7                     	;# 
  1314     07A9                     	;# 
  1315     07AA                     	;# 
  1316     0FE4                     	;# 
  1317     0FE5                     	;# 
  1318     0FE6                     	;# 
  1319     0FE7                     	;# 
  1320     0FE8                     	;# 
  1321     0FE9                     	;# 
  1322     0FEA                     	;# 
  1323     0FEB                     	;# 
  1324     0FED                     	;# 
  1325     0FEE                     	;# 
  1326     0FEF                     	;# 
  1327     0000                     	;# 
  1328     0001                     	;# 
  1329     0002                     	;# 
  1330     0003                     	;# 
  1331     0004                     	;# 
  1332     0005                     	;# 
  1333     0006                     	;# 
  1334     0007                     	;# 
  1335     0008                     	;# 
  1336     0009                     	;# 
  1337     000A                     	;# 
  1338     000B                     	;# 
  1339     000C                     	;# 
  1340     000D                     	;# 
  1341     000E                     	;# 
  1342     0010                     	;# 
  1343     0011                     	;# 
  1344     0012                     	;# 
  1345     0013                     	;# 
  1346     0015                     	;# 
  1347     0016                     	;# 
  1348     0016                     	;# 
  1349     0017                     	;# 
  1350     0018                     	;# 
  1351     0019                     	;# 
  1352     001A                     	;# 
  1353     001B                     	;# 
  1354     001C                     	;# 
  1355     001E                     	;# 
  1356     001F                     	;# 
  1357     008C                     	;# 
  1358     008D                     	;# 
  1359     008E                     	;# 
  1360     0090                     	;# 
  1361     0091                     	;# 
  1362     0092                     	;# 
  1363     0093                     	;# 
  1364     0095                     	;# 
  1365     0096                     	;# 
  1366     0097                     	;# 
  1367     0098                     	;# 
  1368     0099                     	;# 
  1369     009A                     	;# 
  1370     009B                     	;# 
  1371     009B                     	;# 
  1372     009C                     	;# 
  1373     009D                     	;# 
  1374     009E                     	;# 
  1375     010C                     	;# 
  1376     010D                     	;# 
  1377     010E                     	;# 
  1378     0110                     	;# 
  1379     0111                     	;# 
  1380     0112                     	;# 
  1381     0113                     	;# 
  1382     0114                     	;# 
  1383     0115                     	;# 
  1384     0116                     	;# 
  1385     0117                     	;# 
  1386     0118                     	;# 
  1387     0119                     	;# 
  1388     011A                     	;# 
  1389     011B                     	;# 
  1390     011D                     	;# 
  1391     018C                     	;# 
  1392     018D                     	;# 
  1393     0191                     	;# 
  1394     0191                     	;# 
  1395     0192                     	;# 
  1396     0193                     	;# 
  1397     0193                     	;# 
  1398     0193                     	;# 
  1399     0194                     	;# 
  1400     0195                     	;# 
  1401     0196                     	;# 
  1402     0199                     	;# 
  1403     019A                     	;# 
  1404     019B                     	;# 
  1405     019B                     	;# 
  1406     019B                     	;# 
  1407     019B                     	;# 
  1408     019C                     	;# 
  1409     019C                     	;# 
  1410     019D                     	;# 
  1411     019E                     	;# 
  1412     019F                     	;# 
  1413     020D                     	;# 
  1414     0210                     	;# 
  1415     0211                     	;# 
  1416     0212                     	;# 
  1417     0213                     	;# 
  1418     0214                     	;# 
  1419     0215                     	;# 
  1420     0215                     	;# 
  1421     0216                     	;# 
  1422     0217                     	;# 
  1423     0291                     	;# 
  1424     0291                     	;# 
  1425     0292                     	;# 
  1426     0293                     	;# 
  1427     0294                     	;# 
  1428     0295                     	;# 
  1429     0295                     	;# 
  1430     0296                     	;# 
  1431     0298                     	;# 
  1432     0298                     	;# 
  1433     0299                     	;# 
  1434     029A                     	;# 
  1435     029B                     	;# 
  1436     029C                     	;# 
  1437     029C                     	;# 
  1438     029D                     	;# 
  1439     029E                     	;# 
  1440     029F                     	;# 
  1441     0311                     	;# 
  1442     0311                     	;# 
  1443     0312                     	;# 
  1444     0313                     	;# 
  1445     0314                     	;# 
  1446     0315                     	;# 
  1447     0315                     	;# 
  1448     0316                     	;# 
  1449     0318                     	;# 
  1450     0318                     	;# 
  1451     0319                     	;# 
  1452     031A                     	;# 
  1453     031C                     	;# 
  1454     031C                     	;# 
  1455     031D                     	;# 
  1456     031E                     	;# 
  1457     0394                     	;# 
  1458     0395                     	;# 
  1459     0396                     	;# 
  1460     0415                     	;# 
  1461     0416                     	;# 
  1462     0417                     	;# 
  1463     041C                     	;# 
  1464     041D                     	;# 
  1465     041E                     	;# 
  1466     0791                     	;# 
  1467     0792                     	;# 
  1468     0793                     	;# 
  1469     0794                     	;# 
  1470     0795                     	;# 
  1471     0798                     	;# 
  1472     0799                     	;# 
  1473     07A0                     	;# 
  1474     07A1                     	;# 
  1475     07A3                     	;# 
  1476     07A4                     	;# 
  1477     07A6                     	;# 
  1478     07A7                     	;# 
  1479     07A9                     	;# 
  1480     07AA                     	;# 
  1481     0FE4                     	;# 
  1482     0FE5                     	;# 
  1483     0FE6                     	;# 
  1484     0FE7                     	;# 
  1485     0FE8                     	;# 
  1486     0FE9                     	;# 
  1487     0FEA                     	;# 
  1488     0FEB                     	;# 
  1489     0FED                     	;# 
  1490     0FEE                     	;# 
  1491     0FEF                     	;# 
  1492     0000                     	;# 
  1493     0001                     	;# 
  1494     0002                     	;# 
  1495     0003                     	;# 
  1496     0004                     	;# 
  1497     0005                     	;# 
  1498     0006                     	;# 
  1499     0007                     	;# 
  1500     0008                     	;# 
  1501     0009                     	;# 
  1502     000A                     	;# 
  1503     000B                     	;# 
  1504     000C                     	;# 
  1505     000D                     	;# 
  1506     000E                     	;# 
  1507     0010                     	;# 
  1508     0011                     	;# 
  1509     0012                     	;# 
  1510     0013                     	;# 
  1511     0015                     	;# 
  1512     0016                     	;# 
  1513     0016                     	;# 
  1514     0017                     	;# 
  1515     0018                     	;# 
  1516     0019                     	;# 
  1517     001A                     	;# 
  1518     001B                     	;# 
  1519     001C                     	;# 
  1520     001E                     	;# 
  1521     001F                     	;# 
  1522     008C                     	;# 
  1523     008D                     	;# 
  1524     008E                     	;# 
  1525     0090                     	;# 
  1526     0091                     	;# 
  1527     0092                     	;# 
  1528     0093                     	;# 
  1529     0095                     	;# 
  1530     0096                     	;# 
  1531     0097                     	;# 
  1532     0098                     	;# 
  1533     0099                     	;# 
  1534     009A                     	;# 
  1535     009B                     	;# 
  1536     009B                     	;# 
  1537     009C                     	;# 
  1538     009D                     	;# 
  1539     009E                     	;# 
  1540     010C                     	;# 
  1541     010D                     	;# 
  1542     010E                     	;# 
  1543     0110                     	;# 
  1544     0111                     	;# 
  1545     0112                     	;# 
  1546     0113                     	;# 
  1547     0114                     	;# 
  1548     0115                     	;# 
  1549     0116                     	;# 
  1550     0117                     	;# 
  1551     0118                     	;# 
  1552     0119                     	;# 
  1553     011A                     	;# 
  1554     011B                     	;# 
  1555     011D                     	;# 
  1556     018C                     	;# 
  1557     018D                     	;# 
  1558     0191                     	;# 
  1559     0191                     	;# 
  1560     0192                     	;# 
  1561     0193                     	;# 
  1562     0193                     	;# 
  1563     0193                     	;# 
  1564     0194                     	;# 
  1565     0195                     	;# 
  1566     0196                     	;# 
  1567     0199                     	;# 
  1568     019A                     	;# 
  1569     019B                     	;# 
  1570     019B                     	;# 
  1571     019B                     	;# 
  1572     019B                     	;# 
  1573     019C                     	;# 
  1574     019C                     	;# 
  1575     019D                     	;# 
  1576     019E                     	;# 
  1577     019F                     	;# 
  1578     020D                     	;# 
  1579     0210                     	;# 
  1580     0211                     	;# 
  1581     0212                     	;# 
  1582     0213                     	;# 
  1583     0214                     	;# 
  1584     0215                     	;# 
  1585     0215                     	;# 
  1586     0216                     	;# 
  1587     0217                     	;# 
  1588     0291                     	;# 
  1589     0291                     	;# 
  1590     0292                     	;# 
  1591     0293                     	;# 
  1592     0294                     	;# 
  1593     0295                     	;# 
  1594     0295                     	;# 
  1595     0296                     	;# 
  1596     0298                     	;# 
  1597     0298                     	;# 
  1598     0299                     	;# 
  1599     029A                     	;# 
  1600     029B                     	;# 
  1601     029C                     	;# 
  1602     029C                     	;# 
  1603     029D                     	;# 
  1604     029E                     	;# 
  1605     029F                     	;# 
  1606     0311                     	;# 
  1607     0311                     	;# 
  1608     0312                     	;# 
  1609     0313                     	;# 
  1610     0314                     	;# 
  1611     0315                     	;# 
  1612     0315                     	;# 
  1613     0316                     	;# 
  1614     0318                     	;# 
  1615     0318                     	;# 
  1616     0319                     	;# 
  1617     031A                     	;# 
  1618     031C                     	;# 
  1619     031C                     	;# 
  1620     031D                     	;# 
  1621     031E                     	;# 
  1622     0394                     	;# 
  1623     0395                     	;# 
  1624     0396                     	;# 
  1625     0415                     	;# 
  1626     0416                     	;# 
  1627     0417                     	;# 
  1628     041C                     	;# 
  1629     041D                     	;# 
  1630     041E                     	;# 
  1631     0791                     	;# 
  1632     0792                     	;# 
  1633     0793                     	;# 
  1634     0794                     	;# 
  1635     0795                     	;# 
  1636     0798                     	;# 
  1637     0799                     	;# 
  1638     07A0                     	;# 
  1639     07A1                     	;# 
  1640     07A3                     	;# 
  1641     07A4                     	;# 
  1642     07A6                     	;# 
  1643     07A7                     	;# 
  1644     07A9                     	;# 
  1645     07AA                     	;# 
  1646     0FE4                     	;# 
  1647     0FE5                     	;# 
  1648     0FE6                     	;# 
  1649     0FE7                     	;# 
  1650     0FE8                     	;# 
  1651     0FE9                     	;# 
  1652     0FEA                     	;# 
  1653     0FEB                     	;# 
  1654     0FED                     	;# 
  1655     0FEE                     	;# 
  1656     0FEF                     	;# 
  1657     0000                     	;# 
  1658     0001                     	;# 
  1659     0002                     	;# 
  1660     0003                     	;# 
  1661     0004                     	;# 
  1662     0005                     	;# 
  1663     0006                     	;# 
  1664     0007                     	;# 
  1665     0008                     	;# 
  1666     0009                     	;# 
  1667     000A                     	;# 
  1668     000B                     	;# 
  1669     000C                     	;# 
  1670     000D                     	;# 
  1671     000E                     	;# 
  1672     0010                     	;# 
  1673     0011                     	;# 
  1674     0012                     	;# 
  1675     0013                     	;# 
  1676     0015                     	;# 
  1677     0016                     	;# 
  1678     0016                     	;# 
  1679     0017                     	;# 
  1680     0018                     	;# 
  1681     0019                     	;# 
  1682     001A                     	;# 
  1683     001B                     	;# 
  1684     001C                     	;# 
  1685     001E                     	;# 
  1686     001F                     	;# 
  1687     008C                     	;# 
  1688     008D                     	;# 
  1689     008E                     	;# 
  1690     0090                     	;# 
  1691     0091                     	;# 
  1692     0092                     	;# 
  1693     0093                     	;# 
  1694     0095                     	;# 
  1695     0096                     	;# 
  1696     0097                     	;# 
  1697     0098                     	;# 
  1698     0099                     	;# 
  1699     009A                     	;# 
  1700     009B                     	;# 
  1701     009B                     	;# 
  1702     009C                     	;# 
  1703     009D                     	;# 
  1704     009E                     	;# 
  1705     010C                     	;# 
  1706     010D                     	;# 
  1707     010E                     	;# 
  1708     0110                     	;# 
  1709     0111                     	;# 
  1710     0112                     	;# 
  1711     0113                     	;# 
  1712     0114                     	;# 
  1713     0115                     	;# 
  1714     0116                     	;# 
  1715     0117                     	;# 
  1716     0118                     	;# 
  1717     0119                     	;# 
  1718     011A                     	;# 
  1719     011B                     	;# 
  1720     011D                     	;# 
  1721     018C                     	;# 
  1722     018D                     	;# 
  1723     0191                     	;# 
  1724     0191                     	;# 
  1725     0192                     	;# 
  1726     0193                     	;# 
  1727     0193                     	;# 
  1728     0193                     	;# 
  1729     0194                     	;# 
  1730     0195                     	;# 
  1731     0196                     	;# 
  1732     0199                     	;# 
  1733     019A                     	;# 
  1734     019B                     	;# 
  1735     019B                     	;# 
  1736     019B                     	;# 
  1737     019B                     	;# 
  1738     019C                     	;# 
  1739     019C                     	;# 
  1740     019D                     	;# 
  1741     019E                     	;# 
  1742     019F                     	;# 
  1743     020D                     	;# 
  1744     0210                     	;# 
  1745     0211                     	;# 
  1746     0212                     	;# 
  1747     0213                     	;# 
  1748     0214                     	;# 
  1749     0215                     	;# 
  1750     0215                     	;# 
  1751     0216                     	;# 
  1752     0217                     	;# 
  1753     0291                     	;# 
  1754     0291                     	;# 
  1755     0292                     	;# 
  1756     0293                     	;# 
  1757     0294                     	;# 
  1758     0295                     	;# 
  1759     0295                     	;# 
  1760     0296                     	;# 
  1761     0298                     	;# 
  1762     0298                     	;# 
  1763     0299                     	;# 
  1764     029A                     	;# 
  1765     029B                     	;# 
  1766     029C                     	;# 
  1767     029C                     	;# 
  1768     029D                     	;# 
  1769     029E                     	;# 
  1770     029F                     	;# 
  1771     0311                     	;# 
  1772     0311                     	;# 
  1773     0312                     	;# 
  1774     0313                     	;# 
  1775     0314                     	;# 
  1776     0315                     	;# 
  1777     0315                     	;# 
  1778     0316                     	;# 
  1779     0318                     	;# 
  1780     0318                     	;# 
  1781     0319                     	;# 
  1782     031A                     	;# 
  1783     031C                     	;# 
  1784     031C                     	;# 
  1785     031D                     	;# 
  1786     031E                     	;# 
  1787     0394                     	;# 
  1788     0395                     	;# 
  1789     0396                     	;# 
  1790     0415                     	;# 
  1791     0416                     	;# 
  1792     0417                     	;# 
  1793     041C                     	;# 
  1794     041D                     	;# 
  1795     041E                     	;# 
  1796     0791                     	;# 
  1797     0792                     	;# 
  1798     0793                     	;# 
  1799     0794                     	;# 
  1800     0795                     	;# 
  1801     0798                     	;# 
  1802     0799                     	;# 
  1803     07A0                     	;# 
  1804     07A1                     	;# 
  1805     07A3                     	;# 
  1806     07A4                     	;# 
  1807     07A6                     	;# 
  1808     07A7                     	;# 
  1809     07A9                     	;# 
  1810     07AA                     	;# 
  1811     0FE4                     	;# 
  1812     0FE5                     	;# 
  1813     0FE6                     	;# 
  1814     0FE7                     	;# 
  1815     0FE8                     	;# 
  1816     0FE9                     	;# 
  1817     0FEA                     	;# 
  1818     0FEB                     	;# 
  1819     0FED                     	;# 
  1820     0FEE                     	;# 
  1821     0FEF                     	;# 
  1822     0000                     	;# 
  1823     0001                     	;# 
  1824     0002                     	;# 
  1825     0003                     	;# 
  1826     0004                     	;# 
  1827     0005                     	;# 
  1828     0006                     	;# 
  1829     0007                     	;# 
  1830     0008                     	;# 
  1831     0009                     	;# 
  1832     000A                     	;# 
  1833     000B                     	;# 
  1834     000C                     	;# 
  1835     000D                     	;# 
  1836     000E                     	;# 
  1837     0010                     	;# 
  1838     0011                     	;# 
  1839     0012                     	;# 
  1840     0013                     	;# 
  1841     0015                     	;# 
  1842     0016                     	;# 
  1843     0016                     	;# 
  1844     0017                     	;# 
  1845     0018                     	;# 
  1846     0019                     	;# 
  1847     001A                     	;# 
  1848     001B                     	;# 
  1849     001C                     	;# 
  1850     001E                     	;# 
  1851     001F                     	;# 
  1852     008C                     	;# 
  1853     008D                     	;# 
  1854     008E                     	;# 
  1855     0090                     	;# 
  1856     0091                     	;# 
  1857     0092                     	;# 
  1858     0093                     	;# 
  1859     0095                     	;# 
  1860     0096                     	;# 
  1861     0097                     	;# 
  1862     0098                     	;# 
  1863     0099                     	;# 
  1864     009A                     	;# 
  1865     009B                     	;# 
  1866     009B                     	;# 
  1867     009C                     	;# 
  1868     009D                     	;# 
  1869     009E                     	;# 
  1870     010C                     	;# 
  1871     010D                     	;# 
  1872     010E                     	;# 
  1873     0110                     	;# 
  1874     0111                     	;# 
  1875     0112                     	;# 
  1876     0113                     	;# 
  1877     0114                     	;# 
  1878     0115                     	;# 
  1879     0116                     	;# 
  1880     0117                     	;# 
  1881     0118                     	;# 
  1882     0119                     	;# 
  1883     011A                     	;# 
  1884     011B                     	;# 
  1885     011D                     	;# 
  1886     018C                     	;# 
  1887     018D                     	;# 
  1888     0191                     	;# 
  1889     0191                     	;# 
  1890     0192                     	;# 
  1891     0193                     	;# 
  1892     0193                     	;# 
  1893     0193                     	;# 
  1894     0194                     	;# 
  1895     0195                     	;# 
  1896     0196                     	;# 
  1897     0199                     	;# 
  1898     019A                     	;# 
  1899     019B                     	;# 
  1900     019B                     	;# 
  1901     019B                     	;# 
  1902     019B                     	;# 
  1903     019C                     	;# 
  1904     019C                     	;# 
  1905     019D                     	;# 
  1906     019E                     	;# 
  1907     019F                     	;# 
  1908     020D                     	;# 
  1909     0210                     	;# 
  1910     0211                     	;# 
  1911     0212                     	;# 
  1912     0213                     	;# 
  1913     0214                     	;# 
  1914     0215                     	;# 
  1915     0215                     	;# 
  1916     0216                     	;# 
  1917     0217                     	;# 
  1918     0291                     	;# 
  1919     0291                     	;# 
  1920     0292                     	;# 
  1921     0293                     	;# 
  1922     0294                     	;# 
  1923     0295                     	;# 
  1924     0295                     	;# 
  1925     0296                     	;# 
  1926     0298                     	;# 
  1927     0298                     	;# 
  1928     0299                     	;# 
  1929     029A                     	;# 
  1930     029B                     	;# 
  1931     029C                     	;# 
  1932     029C                     	;# 
  1933     029D                     	;# 
  1934     029E                     	;# 
  1935     029F                     	;# 
  1936     0311                     	;# 
  1937     0311                     	;# 
  1938     0312                     	;# 
  1939     0313                     	;# 
  1940     0314                     	;# 
  1941     0315                     	;# 
  1942     0315                     	;# 
  1943     0316                     	;# 
  1944     0318                     	;# 
  1945     0318                     	;# 
  1946     0319                     	;# 
  1947     031A                     	;# 
  1948     031C                     	;# 
  1949     031C                     	;# 
  1950     031D                     	;# 
  1951     031E                     	;# 
  1952     0394                     	;# 
  1953     0395                     	;# 
  1954     0396                     	;# 
  1955     0415                     	;# 
  1956     0416                     	;# 
  1957     0417                     	;# 
  1958     041C                     	;# 
  1959     041D                     	;# 
  1960     041E                     	;# 
  1961     0791                     	;# 
  1962     0792                     	;# 
  1963     0793                     	;# 
  1964     0794                     	;# 
  1965     0795                     	;# 
  1966     0798                     	;# 
  1967     0799                     	;# 
  1968     07A0                     	;# 
  1969     07A1                     	;# 
  1970     07A3                     	;# 
  1971     07A4                     	;# 
  1972     07A6                     	;# 
  1973     07A7                     	;# 
  1974     07A9                     	;# 
  1975     07AA                     	;# 
  1976     0FE4                     	;# 
  1977     0FE5                     	;# 
  1978     0FE6                     	;# 
  1979     0FE7                     	;# 
  1980     0FE8                     	;# 
  1981     0FE9                     	;# 
  1982     0FEA                     	;# 
  1983     0FEB                     	;# 
  1984     0FED                     	;# 
  1985     0FEE                     	;# 
  1986     0FEF                     	;# 
  1987     0000                     	;# 
  1988     0001                     	;# 
  1989     0002                     	;# 
  1990     0003                     	;# 
  1991     0004                     	;# 
  1992     0005                     	;# 
  1993     0006                     	;# 
  1994     0007                     	;# 
  1995     0008                     	;# 
  1996     0009                     	;# 
  1997     000A                     	;# 
  1998     000B                     	;# 
  1999     000C                     	;# 
  2000     000D                     	;# 
  2001     000E                     	;# 
  2002     0010                     	;# 
  2003     0011                     	;# 
  2004     0012                     	;# 
  2005     0013                     	;# 
  2006     0015                     	;# 
  2007     0016                     	;# 
  2008     0016                     	;# 
  2009     0017                     	;# 
  2010     0018                     	;# 
  2011     0019                     	;# 
  2012     001A                     	;# 
  2013     001B                     	;# 
  2014     001C                     	;# 
  2015     001E                     	;# 
  2016     001F                     	;# 
  2017     008C                     	;# 
  2018     008D                     	;# 
  2019     008E                     	;# 
  2020     0090                     	;# 
  2021     0091                     	;# 
  2022     0092                     	;# 
  2023     0093                     	;# 
  2024     0095                     	;# 
  2025     0096                     	;# 
  2026     0097                     	;# 
  2027     0098                     	;# 
  2028     0099                     	;# 
  2029     009A                     	;# 
  2030     009B                     	;# 
  2031     009B                     	;# 
  2032     009C                     	;# 
  2033     009D                     	;# 
  2034     009E                     	;# 
  2035     010C                     	;# 
  2036     010D                     	;# 
  2037     010E                     	;# 
  2038     0110                     	;# 
  2039     0111                     	;# 
  2040     0112                     	;# 
  2041     0113                     	;# 
  2042     0114                     	;# 
  2043     0115                     	;# 
  2044     0116                     	;# 
  2045     0117                     	;# 
  2046     0118                     	;# 
  2047     0119                     	;# 
  2048     011A                     	;# 
  2049     011B                     	;# 
  2050     011D                     	;# 
  2051     018C                     	;# 
  2052     018D                     	;# 
  2053     0191                     	;# 
  2054     0191                     	;# 
  2055     0192                     	;# 
  2056     0193                     	;# 
  2057     0193                     	;# 
  2058     0193                     	;# 
  2059     0194                     	;# 
  2060     0195                     	;# 
  2061     0196                     	;# 
  2062     0199                     	;# 
  2063     019A                     	;# 
  2064     019B                     	;# 
  2065     019B                     	;# 
  2066     019B                     	;# 
  2067     019B                     	;# 
  2068     019C                     	;# 
  2069     019C                     	;# 
  2070     019D                     	;# 
  2071     019E                     	;# 
  2072     019F                     	;# 
  2073     020D                     	;# 
  2074     0210                     	;# 
  2075     0211                     	;# 
  2076     0212                     	;# 
  2077     0213                     	;# 
  2078     0214                     	;# 
  2079     0215                     	;# 
  2080     0215                     	;# 
  2081     0216                     	;# 
  2082     0217                     	;# 
  2083     0291                     	;# 
  2084     0291                     	;# 
  2085     0292                     	;# 
  2086     0293                     	;# 
  2087     0294                     	;# 
  2088     0295                     	;# 
  2089     0295                     	;# 
  2090     0296                     	;# 
  2091     0298                     	;# 
  2092     0298                     	;# 
  2093     0299                     	;# 
  2094     029A                     	;# 
  2095     029B                     	;# 
  2096     029C                     	;# 
  2097     029C                     	;# 
  2098     029D                     	;# 
  2099     029E                     	;# 
  2100     029F                     	;# 
  2101     0311                     	;# 
  2102     0311                     	;# 
  2103     0312                     	;# 
  2104     0313                     	;# 
  2105     0314                     	;# 
  2106     0315                     	;# 
  2107     0315                     	;# 
  2108     0316                     	;# 
  2109     0318                     	;# 
  2110     0318                     	;# 
  2111     0319                     	;# 
  2112     031A                     	;# 
  2113     031C                     	;# 
  2114     031C                     	;# 
  2115     031D                     	;# 
  2116     031E                     	;# 
  2117     0394                     	;# 
  2118     0395                     	;# 
  2119     0396                     	;# 
  2120     0415                     	;# 
  2121     0416                     	;# 
  2122     0417                     	;# 
  2123     041C                     	;# 
  2124     041D                     	;# 
  2125     041E                     	;# 
  2126     0791                     	;# 
  2127     0792                     	;# 
  2128     0793                     	;# 
  2129     0794                     	;# 
  2130     0795                     	;# 
  2131     0798                     	;# 
  2132     0799                     	;# 
  2133     07A0                     	;# 
  2134     07A1                     	;# 
  2135     07A3                     	;# 
  2136     07A4                     	;# 
  2137     07A6                     	;# 
  2138     07A7                     	;# 
  2139     07A9                     	;# 
  2140     07AA                     	;# 
  2141     0FE4                     	;# 
  2142     0FE5                     	;# 
  2143     0FE6                     	;# 
  2144     0FE7                     	;# 
  2145     0FE8                     	;# 
  2146     0FE9                     	;# 
  2147     0FEA                     	;# 
  2148     0FEB                     	;# 
  2149     0FED                     	;# 
  2150     0FEE                     	;# 
  2151     0FEF                     	;_SES_Modbus
  2152                           
  2153                           	psect	idataBANK2
  2154     1379                     __pidataBANK2:
  2155                           
  2156                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2157     1379  3424               	retlw	36
  2158     137A  3416               	retlw	22
  2159                           
  2160                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2161     137B  3424               	retlw	36
  2162     137C  340B               	retlw	11
  2163                           
  2164                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2165     137D  3424               	retlw	36
  2166     137E  3400               	retlw	0
  2167                           
  2168                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2169     137F  342C               	retlw	44
  2170     1380  3410               	retlw	16
  2171                           
  2172                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2173     1381  342C               	retlw	44
  2174     1382  340D               	retlw	13
  2175                           
  2176                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2177     1383  342C               	retlw	44
  2178     1384  3406               	retlw	6
  2179                           
  2180                           	psect	stringtext1
  2181     1800                     __pstringtext1:
  2182     1800                     _i2c_fsmStateTable:
  2183     1800  3483               	retlw	low _I2C_DO_IDLE
  2184     1801  3412               	retlw	high _I2C_DO_IDLE
  2185     1802  34CF               	retlw	low _I2C_DO_SEND_ADR_READ
  2186     1803  3412               	retlw	high _I2C_DO_SEND_ADR_READ
  2187     1804  34C7               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2188     1805  3412               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2189     1806  34D4               	retlw	low _I2C_DO_TX
  2190     1807  3408               	retlw	high _I2C_DO_TX
  2191     1808  343B               	retlw	low _I2C_DO_RX
  2192     1809  3408               	retlw	high _I2C_DO_RX
  2193     180A  34C0               	retlw	low _I2C_DO_RCEN
  2194     180B  3412               	retlw	high _I2C_DO_RCEN
  2195     180C  34C1               	retlw	low _I2C_DO_TX_EMPTY
  2196     180D  3416               	retlw	high _I2C_DO_TX_EMPTY
  2197     180E  3488               	retlw	low _I2C_DO_SEND_RESTART_READ
  2198     180F  3412               	retlw	high _I2C_DO_SEND_RESTART_READ
  2199     1810  348D               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2200     1811  3412               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2201     1812  3492               	retlw	low _I2C_DO_SEND_RESTART
  2202     1813  3412               	retlw	high _I2C_DO_SEND_RESTART
  2203     1814  3497               	retlw	low _I2C_DO_SEND_STOP
  2204     1815  3412               	retlw	high _I2C_DO_SEND_STOP
  2205     1816  349C               	retlw	low _I2C_DO_RX_ACK
  2206     1817  3412               	retlw	high _I2C_DO_RX_ACK
  2207     1818  34A1               	retlw	low _I2C_DO_RX_NACK_STOP
  2208     1819  3412               	retlw	high _I2C_DO_RX_NACK_STOP
  2209     181A  34A6               	retlw	low _I2C_DO_RX_NACK_RESTART
  2210     181B  3412               	retlw	high _I2C_DO_RX_NACK_RESTART
  2211     181C  34AB               	retlw	low _I2C_DO_RESET
  2212     181D  3412               	retlw	high _I2C_DO_RESET
  2213     181E  34EF               	retlw	low _I2C_DO_ADDRESS_NACK
  2214     181F  3415               	retlw	high _I2C_DO_ADDRESS_NACK
  2215     1820                     __end_of_i2c_fsmStateTable:
  2216                           
  2217                           	psect	stringtext2
  2218     1820                     __pstringtext2:
  2219     1820                     _fctsupported:
  2220     1820  3401               	retlw	1
  2221     1821  3402               	retlw	2
  2222     1822  3403               	retlw	3
  2223     1823  3404               	retlw	4
  2224     1824  3405               	retlw	5
  2225     1825  3406               	retlw	6
  2226     1826  340F               	retlw	15
  2227     1827  3410               	retlw	16
  2228     1828                     __end_of_fctsupported:
  2229     000C                     _PORTAbits	set	12
  2230     0019                     _T1GCONbits	set	25
  2231     0018                     _T1CONbits	set	24
  2232     0018                     _T1CON	set	24
  2233     0016                     _TMR1L	set	22
  2234     0017                     _TMR1H	set	23
  2235     0019                     _T1GCON	set	25
  2236     0012                     _PIR2bits	set	18
  2237     0011                     _PIR1bits	set	17
  2238     000B                     _INTCONbits	set	11
  2239     0092                     _PIE2bits	set	146
  2240     0091                     _PIE1bits	set	145
  2241     0097                     _WDTCON	set	151
  2242     0098                     _OSCTUNE	set	152
  2243     0099                     _OSCCON	set	153
  2244     0095                     _OPTION_REGbits	set	149
  2245     008E                     _TRISC	set	142
  2246     008D                     _TRISB	set	141
  2247     008C                     _TRISA	set	140
  2248     0090                     _TRISE	set	144
  2249     04D6                     _PLLR	set	1238
  2250     010E                     _LATCbits	set	270
  2251     0116                     _BORCON	set	278
  2252     011D                     _APFCON	set	285
  2253     010E                     _LATC	set	270
  2254     010D                     _LATB	set	269
  2255     010C                     _LATA	set	268
  2256     0110                     _LATE	set	272
  2257     0199                     _RCREG	set	409
  2258     019D                     _RCSTAbits	set	413
  2259     019A                     _TXREG	set	410
  2260     019E                     _TXSTAbits	set	414
  2261     019C                     _SPBRGH	set	412
  2262     019B                     _SPBRGL	set	411
  2263     019E                     _TXSTA	set	414
  2264     019D                     _RCSTA	set	413
  2265     019F                     _BAUDCON	set	415
  2266     018C                     _ANSELA	set	396
  2267     018D                     _ANSELB	set	397
  2268     0214                     _SSPSTATbits	set	532
  2269     0216                     _SSPCON2bits	set	534
  2270     0211                     _SSPBUF	set	529
  2271     0215                     _SSPCON1bits	set	533
  2272     0212                     _SSPADD	set	530
  2273     0216                     _SSPCON2	set	534
  2274     0215                     _SSPCON1	set	533
  2275     0214                     _SSPSTAT	set	532
  2276     020D                     _WPUB	set	525
  2277     0210                     _WPUE	set	528
  2278                           
  2279                           	psect	cinit
  2280     005A                     start_initialization:	
  2281                           ; #config settings
  2282                           
  2283     005A                     __initialization:	;BIGRAM
  2284                           
  2285                           ; Initialize objects allocated to BANK2
  2286     005A  3079               	movlw	low __pidataBANK2
  2287     005B  0084               	movwf	4
  2288     005C  3093               	movlw	(high __pidataBANK2)| (0+128)
  2289     005D  0085               	movwf	5
  2290     005E  305E               	movlw	low __pdataBANK2
  2291     005F  0086               	movwf	6
  2292     0060  3001               	movlw	high __pdataBANK2
  2293     0061  0087               	movwf	7
  2294     0062  3000               	movlw	0
  2295     0063  00FF               	movwf	btemp+1
  2296     0064  300C               	movlw	12
  2297     0065  3193  236D  3180   	fcall	init_ram
  2298                           
  2299                           ; Clear objects allocated to BIGRAM
  2300     0068  3038               	movlw	low (0+8504)
  2301     0069  0084               	movwf	4
  2302     006A  3021               	movlw	high (0+8504)
  2303     006B  0085               	movwf	5
  2304     006C  30B8               	movlw	184
  2305     006D  00FE               	movwf	btemp
  2306     006E  3000               	movlw	0
  2307     006F  00FF               	movwf	btemp+1
  2308     0070  3193  2361  3180   	fcall	clear_ram0
  2309                           
  2310                           ; Clear objects allocated to COMMON
  2311     0073  01FC               	clrf	__pbssCOMMON& (0+127)
  2312     0074  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2313                           
  2314                           ; Clear objects allocated to BANK0
  2315     0075  01E9               	clrf	__pbssBANK0& (0+127)
  2316     0076  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  2317     0077  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  2318     0078  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  2319     0079  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  2320     007A  01EE               	clrf	(__pbssBANK0+5)& (0+127)
  2321     007B  01EF               	clrf	(__pbssBANK0+6)& (0+127)
  2322                           
  2323                           ; Clear objects allocated to BANK1
  2324     007C  30D7               	movlw	low __pbssBANK1
  2325     007D  0084               	movwf	4
  2326     007E  3000               	movlw	high __pbssBANK1
  2327     007F  0085               	movwf	5
  2328     0080  3019               	movlw	25
  2329     0081  00FE               	movwf	btemp
  2330     0082  3000               	movlw	0
  2331     0083  00FF               	movwf	btemp+1
  2332     0084  3193  2361  3180   	fcall	clear_ram0
  2333                           
  2334                           ; Clear objects allocated to BANK2
  2335     0087  3020               	movlw	low __pbssBANK2
  2336     0088  0084               	movwf	4
  2337     0089  3001               	movlw	high __pbssBANK2
  2338     008A  0085               	movwf	5
  2339     008B  303E               	movlw	62
  2340     008C  00FE               	movwf	btemp
  2341     008D  3000               	movlw	0
  2342     008E  00FF               	movwf	btemp+1
  2343     008F  3193  2361  3180   	fcall	clear_ram0
  2344     0092                     end_of_initialization:	
  2345                           ;End of C runtime variable initialization code
  2346                           
  2347     0092                     __end_of__initialization:
  2348     0092  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2349     0093  0020               	movlb	0
  2350     0094  3193  2BAE         	ljmp	_main	;jump to C main() function
  2351                           
  2352                           	psect	bssCOMMON
  2353     007C                     __pbssCOMMON:
  2354     007C                     _timer1ReloadVal:
  2355     007C                     	ds	2
  2356                           
  2357                           	psect	bssBANK0
  2358     0069                     __pbssBANK0:
  2359     0069                     _SW_Ad:
  2360     0069                     	ds	1
  2361     006A                     _eusartRxCount:
  2362     006A                     	ds	1
  2363     006B                     _eusartRxTail:
  2364     006B                     	ds	1
  2365     006C                     _eusartRxHead:
  2366     006C                     	ds	1
  2367     006D                     _eusartTxBufferRemaining:
  2368     006D                     	ds	1
  2369     006E                     _eusartTxTail:
  2370     006E                     	ds	1
  2371     006F                     _eusartTxHead:
  2372     006F                     	ds	1
  2373                           
  2374                           	psect	bssBANK1
  2375     00D7                     __pbssBANK1:
  2376     00D7                     _device_time:
  2377     00D7                     	ds	4
  2378     00DB                     _SensorAmbient:
  2379     00DB                     	ds	4
  2380     00DF                     _TMR1_InterruptHandler:
  2381     00DF                     	ds	2
  2382     00E1                     _EUSART_ErrorHandler:
  2383     00E1                     	ds	2
  2384     00E3                     _EUSART_OverrunErrorHandler:
  2385     00E3                     	ds	2
  2386     00E5                     _EUSART_FramingErrorHandler:
  2387     00E5                     	ds	2
  2388     00E7                     _EUSART_RxDefaultInterruptHandler:
  2389     00E7                     	ds	2
  2390     00E9                     _EUSART_TxDefaultInterruptHandler:
  2391     00E9                     	ds	2
  2392     00EB                     _MSSP_InterruptHandler:
  2393     00EB                     	ds	2
  2394     00ED                     Task_MB@f_Modbus_Init:
  2395     00ED                     	ds	1
  2396     00EE                     _f_Indicator:
  2397     00EE                     	ds	1
  2398     00EF                     _eusartRxLastError:
  2399     00EF                     	ds	1
  2400                           
  2401                           	psect	bssBANK2
  2402     0120                     __pbssBANK2:
  2403     0120                     _I2C_Status:
  2404     0120                     	ds	30
  2405     013E                     _eusartRxStatusBuffer:
  2406     013E                     	ds	8
  2407     0146                     _eusartRxBuffer:
  2408     0146                     	ds	8
  2409     014E                     _eusartTxBuffer:
  2410     014E                     	ds	8
  2411     0156                     Task_Sensor@valTime:
  2412     0156                     	ds	4
  2413     015A                     _MB_Register:
  2414     015A                     	ds	4
  2415                           
  2416                           	psect	dataBANK2
  2417     015E                     __pdataBANK2:
  2418     015E                     _SHT30_CMD_MEASURE_L_Disable:
  2419     015E                     	ds	2
  2420     0160                     _SHT30_CMD_MEASURE_M_Disable:
  2421     0160                     	ds	2
  2422     0162                     _SHT30_CMD_MEASURE_H_Disable:
  2423     0162                     	ds	2
  2424     0164                     _SHT30_CMD_MEASURE_L_Enable:
  2425     0164                     	ds	2
  2426     0166                     _SHT30_CMD_MEASURE_M_Enable:
  2427     0166                     	ds	2
  2428     0168                     _SHT30_CMD_MEASURE_H_Enable:
  2429     0168                     	ds	2
  2430                           
  2431                           	psect	inittext
  2432     136D                     init_ram:
  2433     136D  00FE               	movwf	btemp
  2434     136E                     initloop:
  2435     136E  0012               	moviw fsr0++
  2436     136F  001E               	movwi fsr1++
  2437     1370  3001               	movlw	1
  2438     1371  02FE               	subwf	btemp,f
  2439     1372  3000               	movlw	0
  2440     1373  3BFF               	subwfb	btemp+1,f
  2441     1374  087F               	movf	btemp+1,w
  2442     1375  047E               	iorwf	btemp,w
  2443     1376  1D03               	skipz
  2444     1377  2B6E               	goto	initloop
  2445     1378  3400               	retlw	0
  2446                           
  2447                           	psect	clrtext
  2448     1361                     clear_ram0:	
  2449                           ;	Called with FSR0 containing the base address, and
  2450                           ;	btemp/btemp+1 has the size to clear
  2451                           
  2452     1361  0064               	clrwdt	;clear the watchdog before getting into this loop
  2453     1362                     clrloop0:
  2454     1362  0180               	clrf	0	;clear RAM location pointed to by FSR
  2455     1363  3101               	addfsr 0,1
  2456     1364  3001               	movlw	1
  2457     1365  02FE               	subwf	btemp,f
  2458     1366  3000               	movlw	0
  2459     1367  3BFF               	subwfb	btemp+1,f
  2460     1368  087F               	movf	btemp+1,w
  2461     1369  047E               	iorwf	btemp,w
  2462     136A  1D03               	skipz
  2463     136B  2B62               	goto	clrloop0	;have we reached the end yet?
  2464     136C  3400               	retlw	0	;all done for this memory range, return
  2465                           
  2466                           	psect	cstackBANK1
  2467     00A0                     __pcstackBANK1:
  2468     00A0                     ___fldiv@rem:
  2469                           
  2470                           ; 4 bytes @ 0x0
  2471     00A0                     	ds	4
  2472     00A4                     ___fldiv@sign:
  2473                           
  2474                           ; 1 bytes @ 0x4
  2475     00A4                     	ds	1
  2476     00A5                     ___fldiv@new_exp:
  2477                           
  2478                           ; 2 bytes @ 0x5
  2479     00A5                     	ds	2
  2480     00A7                     ___fldiv@grs:
  2481                           
  2482                           ; 4 bytes @ 0x7
  2483     00A7                     	ds	4
  2484     00AB                     ___fldiv@bexp:
  2485                           
  2486                           ; 1 bytes @ 0xB
  2487     00AB                     	ds	1
  2488     00AC                     ___fldiv@aexp:
  2489                           
  2490                           ; 1 bytes @ 0xC
  2491     00AC                     	ds	1
  2492     00AD                     ??_ReadData:
  2493                           
  2494                           ; 1 bytes @ 0xD
  2495     00AD                     	ds	8
  2496     00B5                     ReadData@aData:
  2497                           
  2498                           ; 6 bytes @ 0x15
  2499     00B5                     	ds	6
  2500     00BB                     ReadData@ctemp:
  2501                           
  2502                           ; 4 bytes @ 0x1B
  2503     00BB                     	ds	4
  2504     00BF                     ReadData@humidity:
  2505                           
  2506                           ; 4 bytes @ 0x1F
  2507     00BF                     	ds	4
  2508     00C3                     _ReadData$2418:
  2509                           
  2510                           ; 4 bytes @ 0x23
  2511     00C3                     	ds	4
  2512     00C7                     _ReadData$2419:
  2513                           
  2514                           ; 4 bytes @ 0x27
  2515     00C7                     	ds	4
  2516     00CB                     ??_Task_Sensor:
  2517                           
  2518                           ; 1 bytes @ 0x2B
  2519     00CB                     	ds	12
  2520                           
  2521                           	psect	cstackCOMMON
  2522     0070                     __pcstackCOMMON:
  2523     0070                     ?_I2C_Open:
  2524     0070                     ?_I2C_MasterWrite:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0070                     ?_I2C_Close:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530     0070                     ?_I2C_MasterRead:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533     0070                     ?_I2C_Initialize:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536     0070                     ?_OSCILLATOR_Initialize:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539     0070                     ?_WDT_Initialize:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0070                     ?_TMR1_Initialize:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0070                     ?_EUSART_Initialize:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0070                     ?_TMR1_ISR:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0070                     ?_EUSART_Receive_ISR:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554     0070                     ?_EUSART_Transmit_ISR:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557     0070                     ??_EUSART_Transmit_ISR:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572     0070                     ?_EUSART_DefaultErrorHandler:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575     0070                     ?_EUSART_RxDataHandler:	
  2576                           ; 1 bytes @ 0x0
  2577                           
  2578     0070                     ??_EUSART_RxDataHandler:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581     0070                     ?_TMR1_DefaultInterruptHandler:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584     0070                     ??_TMR1_DefaultInterruptHandler:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587     0070                     ?_TMR1_CallBack:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590     0070                     ??_TMR1_CallBack:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593     0070                     ?_I2C_DO_IDLE:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596     0070                     ??_I2C_DO_IDLE:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608     0070                     ?_I2C_DO_TX:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611     0070                     ?_I2C_DO_RX:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614     0070                     ?_I2C_DO_RCEN:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617     0070                     ??_I2C_DO_RCEN:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620     0070                     ?_I2C_DO_TX_EMPTY:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635     0070                     ?_I2C_DO_SEND_RESTART:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638     0070                     ??_I2C_DO_SEND_RESTART:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641     0070                     ?_I2C_DO_SEND_STOP:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644     0070                     ??_I2C_DO_SEND_STOP:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647     0070                     ?_I2C_DO_RX_ACK:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650     0070                     ??_I2C_DO_RX_ACK:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665     0070                     ?_I2C_DO_RESET:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668     0070                     ??_I2C_DO_RESET:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674     0070                     ?_I2C_MasterIsr:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677     0070                     ?_I2C_MasterClearIrq:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680     0070                     ?_I2C_MasterOpen:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683     0070                     ?_I2C_MasterEnableIrq:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686     0070                     ?_I2C_MasterDisableIrq:	
  2687                           ; 1 bytes @ 0x0
  2688                           
  2689     0070                     ?_I2C_MasterClose:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692     0070                     ?_I2C_MasterStart:	
  2693                           ; 1 bytes @ 0x0
  2694                           
  2695     0070                     ?_I2C_MasterFsm:	
  2696                           ; 1 bytes @ 0x0
  2697                           
  2698     0070                     ?_I2C_MasterIsNack:	
  2699                           ; 1 bytes @ 0x0
  2700                           
  2701     0070                     ??_I2C_MasterIsNack:	
  2702                           ; 1 bytes @ 0x0
  2703                           
  2704     0070                     ?_I2C_MasterSendTxData:	
  2705                           ; 1 bytes @ 0x0
  2706                           
  2707     0070                     ??_I2C_MasterSendTxData:	
  2708                           ; 1 bytes @ 0x0
  2709                           
  2710     0070                     ?_I2C_MasterGetRxData:	
  2711                           ; 1 bytes @ 0x0
  2712                           
  2713     0070                     ??_I2C_MasterGetRxData:	
  2714                           ; 1 bytes @ 0x0
  2715                           
  2716     0070                     ?_I2C_MasterSendAck:	
  2717                           ; 1 bytes @ 0x0
  2718                           
  2719     0070                     ??_I2C_MasterSendAck:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722     0070                     ?_I2C_MasterStartRx:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725     0070                     ??_I2C_MasterStartRx:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728     0070                     ?_I2C_MasterSetIrq:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731     0070                     ??_I2C_MasterSetIrq:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734     0070                     ?_I2C_MasterEnableRestart:	
  2735                           ; 1 bytes @ 0x0
  2736                           
  2737     0070                     ??_I2C_MasterEnableRestart:	
  2738                           ; 1 bytes @ 0x0
  2739                           
  2740     0070                     ?_I2C_MasterStop:	
  2741                           ; 1 bytes @ 0x0
  2742                           
  2743     0070                     ??_I2C_MasterStop:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746     0070                     ?_I2C_MasterSendNack:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749     0070                     ??_I2C_MasterSendNack:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752     0070                     ?_App_Init:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755     0070                     ?_App_Process:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758     0070                     ?_Tick_Init_SES:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761     0070                     ?_Task_MB:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764     0070                     ?_Modbus_sendTxBuff:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767     0070                     ?_rtcc_handle:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770     0070                     ??_rtcc_handle:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773     0070                     ?_PIN_MANAGER_Initialize:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776     0070                     ?_SYSTEM_Initialize:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779     0070                     ?_INTERRUPT_InterruptManager:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782     0070                     ?_EUSART_is_tx_done:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785     0070                     ?_EUSART_Read:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788     0070                     ?_EUSART_Write:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791     0070                     ?_TMR1_StartTimer:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794     0070                     ?_TMR1_WriteTimer:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797     0070                     ?_I2C_MasterOperation:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800     0070                     ?_main:	
  2801                           ; 1 bytes @ 0x0
  2802                           
  2803     0070                     ?_ReadData:	
  2804                           ; 1 bytes @ 0x0
  2805                           
  2806     0070                     ?_Task_Sensor:	
  2807                           ; 1 bytes @ 0x0
  2808                           
  2809     0070                     ?_Task_Indicator:	
  2810                           ; 1 bytes @ 0x0
  2811                           
  2812     0070                     ?_Device_Init:	
  2813                           ; 1 bytes @ 0x0
  2814                           
  2815     0070                     ?_buildException:	
  2816                           ; 1 bytes @ 0x0
  2817                           
  2818     0070                     ?_Modbus_getRxBuff:	
  2819                           ; 1 bytes @ 0x0
  2820                           
  2821     0070                     ?_validateRequest:	
  2822                           ; 1 bytes @ 0x0
  2823                           
  2824     0070                     ?_ModbusSlave_Init:	
  2825                           ; 1 bytes @ 0x0
  2826                           
  2827     0070                     ?_ModbusSlave_Process:	
  2828                           ; 1 bytes @ 0x0
  2829                           
  2830     0070                     ?i1_I2C_SetBuffer:	
  2831                           ; 1 bytes @ 0x0
  2832                           
  2833     0070                     ?i1_I2C_SetCallback:	
  2834                           ; 1 bytes @ 0x0
  2835                           
  2836     0070                     ?i1_I2C_MasterClearIrq:	
  2837                           ; 1 bytes @ 0x0
  2838                           
  2839     0070                     ??i1_I2C_MasterClearIrq:	
  2840                           ; 1 bytes @ 0x0
  2841                           
  2842     0070                     I2C_MasterSendTxData@data:	
  2843                           ; 1 bytes @ 0x0
  2844                           
  2845     0070                     TMR1_WriteTimer@timerVal:	
  2846                           ; 1 bytes @ 0x0
  2847                           
  2848     0070                     i1I2C_SetBuffer@buffer:	
  2849                           ; 2 bytes @ 0x0
  2850                           
  2851     0070                     i1I2C_SetCallback@cb:	
  2852                           ; 2 bytes @ 0x0
  2853                           
  2854                           
  2855                           ; 2 bytes @ 0x0
  2856     0070                     	ds	1
  2857     0071                     ??_EUSART_Receive_ISR:
  2858     0071                     ??_EUSART_DefaultErrorHandler:	
  2859                           ; 1 bytes @ 0x1
  2860                           
  2861     0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2862                           ; 1 bytes @ 0x1
  2863                           
  2864                           
  2865                           ; 1 bytes @ 0x1
  2866     0071                     	ds	1
  2867     0072                     ??_TMR1_ISR:
  2868     0072                     ??_TMR1_WriteTimer:	
  2869                           ; 1 bytes @ 0x2
  2870                           
  2871     0072                     i1I2C_SetCallback@ptr:	
  2872                           ; 1 bytes @ 0x2
  2873                           
  2874     0072                     i1I2C_SetBuffer@bufferSize:	
  2875                           ; 1 bytes @ 0x2
  2876                           
  2877                           
  2878                           ; 2 bytes @ 0x2
  2879     0072                     	ds	1
  2880     0073                     ??i1_I2C_SetCallback:
  2881     0073                     i1I2C_SetCallback@idx:	
  2882                           ; 1 bytes @ 0x3
  2883                           
  2884                           
  2885                           ; 1 bytes @ 0x3
  2886     0073                     	ds	1
  2887     0074                     ?_I2C_SetDataCompleteCallback:
  2888     0074                     ??i1_I2C_SetBuffer:	
  2889                           ; 1 bytes @ 0x4
  2890                           
  2891     0074                     I2C_SetDataCompleteCallback@cb:	
  2892                           ; 1 bytes @ 0x4
  2893                           
  2894                           
  2895                           ; 2 bytes @ 0x4
  2896     0074                     	ds	2
  2897     0076                     I2C_SetDataCompleteCallback@ptr:
  2898                           
  2899                           ; 1 bytes @ 0x6
  2900     0076                     	ds	1
  2901     0077                     ??_I2C_SetDataCompleteCallback:
  2902     0077                     ?_rd1RegCompleteHandler:	
  2903                           ; 1 bytes @ 0x7
  2904                           
  2905     0077                     ?_rd2RegCompleteHandler:	
  2906                           ; 1 bytes @ 0x7
  2907                           
  2908     0077                     ?_wr1RegCompleteHandler:	
  2909                           ; 1 bytes @ 0x7
  2910                           
  2911     0077                     ?_wr2RegCompleteHandler:	
  2912                           ; 1 bytes @ 0x7
  2913                           
  2914     0077                     ?_rdBlkRegCompleteHandler:	
  2915                           ; 1 bytes @ 0x7
  2916                           
  2917     0077                     ?_I2C_CallbackReturnStop:	
  2918                           ; 1 bytes @ 0x7
  2919                           
  2920     0077                     ?_I2C_CallbackReturnReset:	
  2921                           ; 1 bytes @ 0x7
  2922                           
  2923     0077                     rd1RegCompleteHandler@ptr:	
  2924                           ; 1 bytes @ 0x7
  2925                           
  2926     0077                     rd2RegCompleteHandler@ptr:	
  2927                           ; 1 bytes @ 0x7
  2928                           
  2929     0077                     wr1RegCompleteHandler@ptr:	
  2930                           ; 1 bytes @ 0x7
  2931                           
  2932     0077                     wr2RegCompleteHandler@ptr:	
  2933                           ; 1 bytes @ 0x7
  2934                           
  2935     0077                     rdBlkRegCompleteHandler@ptr:	
  2936                           ; 1 bytes @ 0x7
  2937                           
  2938     0077                     I2C_CallbackReturnStop@funPtr:	
  2939                           ; 1 bytes @ 0x7
  2940                           
  2941     0077                     I2C_CallbackReturnReset@funPtr:	
  2942                           ; 1 bytes @ 0x7
  2943                           
  2944                           
  2945                           ; 1 bytes @ 0x7
  2946     0077                     	ds	1
  2947     0078                     ??_rd1RegCompleteHandler:
  2948     0078                     ??_rd2RegCompleteHandler:	
  2949                           ; 1 bytes @ 0x8
  2950                           
  2951     0078                     ??_wr1RegCompleteHandler:	
  2952                           ; 1 bytes @ 0x8
  2953                           
  2954     0078                     ??_wr2RegCompleteHandler:	
  2955                           ; 1 bytes @ 0x8
  2956                           
  2957     0078                     ??_rdBlkRegCompleteHandler:	
  2958                           ; 1 bytes @ 0x8
  2959                           
  2960     0078                     ??_I2C_DO_TX:	
  2961                           ; 1 bytes @ 0x8
  2962                           
  2963     0078                     ??_I2C_DO_RX:	
  2964                           ; 1 bytes @ 0x8
  2965                           
  2966     0078                     ??_I2C_DO_TX_EMPTY:	
  2967                           ; 1 bytes @ 0x8
  2968                           
  2969     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2970                           ; 1 bytes @ 0x8
  2971                           
  2972     0078                     ??_I2C_CallbackReturnStop:	
  2973                           ; 1 bytes @ 0x8
  2974                           
  2975     0078                     ??_I2C_CallbackReturnReset:	
  2976                           ; 1 bytes @ 0x8
  2977                           
  2978                           
  2979                           ; 1 bytes @ 0x8
  2980     0078                     	ds	2
  2981     007A                     ??_I2C_MasterFsm:
  2982                           
  2983                           ; 1 bytes @ 0xA
  2984     007A                     	ds	2
  2985     007C                     ??_I2C_MasterIsr:
  2986     007C                     ??_INTERRUPT_InterruptManager:	
  2987                           ; 1 bytes @ 0xC
  2988                           
  2989                           
  2990                           	psect	cstackBANK0
  2991     0020                     __pcstackBANK0:	
  2992                           ; 1 bytes @ 0xC
  2993                           
  2994     0020                     ?_I2C_SetBuffer:
  2995     0020                     ??_I2C_Close:	
  2996                           ; 1 bytes @ 0x0
  2997                           
  2998     0020                     ??_I2C_Initialize:	
  2999                           ; 1 bytes @ 0x0
  3000                           
  3001     0020                     ??_OSCILLATOR_Initialize:	
  3002                           ; 1 bytes @ 0x0
  3003                           
  3004     0020                     ??_WDT_Initialize:	
  3005                           ; 1 bytes @ 0x0
  3006                           
  3007     0020                     ?_EUSART_SetRxInterruptHandler:	
  3008                           ; 1 bytes @ 0x0
  3009                           
  3010     0020                     ?_EUSART_SetTxInterruptHandler:	
  3011                           ; 1 bytes @ 0x0
  3012                           
  3013     0020                     ?_EUSART_SetFramingErrorHandler:	
  3014                           ; 1 bytes @ 0x0
  3015                           
  3016     0020                     ?_EUSART_SetOverrunErrorHandler:	
  3017                           ; 1 bytes @ 0x0
  3018                           
  3019     0020                     ?_EUSART_SetErrorHandler:	
  3020                           ; 1 bytes @ 0x0
  3021                           
  3022     0020                     ?_TMR1_SetInterruptHandler:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025     0020                     ?_I2C_SetInterruptHandler:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028     0020                     ??_I2C_MasterClearIrq:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031     0020                     ??_I2C_MasterOpen:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034     0020                     ??_I2C_MasterEnableIrq:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037     0020                     ??_I2C_MasterDisableIrq:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040     0020                     ??_I2C_MasterClose:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043     0020                     ??_I2C_MasterStart:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046     0020                     ?_I2C_SetCallback:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049     0020                     ??_PIN_MANAGER_Initialize:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052     0020                     ??_EUSART_is_tx_done:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055     0020                     ??_EUSART_Read:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058     0020                     ??_EUSART_Write:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061     0020                     ??_TMR1_StartTimer:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064     0020                     ??_I2C_MasterOperation:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067     0020                     ??_Task_Indicator:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070     0020                     ??_Device_Init:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073     0020                     ??_buildException:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076     0020                     ??_ModbusSlave_Init:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079     0020                     ?_Modbus_calcCRC:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082     0020                     ?__Umul8_16:	
  3083                           ; 2 bytes @ 0x0
  3084                           
  3085     0020                     ?_Get_millis:	
  3086                           ; 2 bytes @ 0x0
  3087                           
  3088     0020                     ?___fltol:	
  3089                           ; 4 bytes @ 0x0
  3090                           
  3091     0020                     ?___xxtofl:	
  3092                           ; 4 bytes @ 0x0
  3093                           
  3094     0020                     I2C_Close@returnValue:	
  3095                           ; 4 bytes @ 0x0
  3096                           
  3097     0020                     I2C_MasterOperation@read:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100     0020                     Device_Init@value_SW1:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103     0020                     ModbusSlave_Init@_SW_Ad:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106     0020                     __Umul8_16@multiplicand:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3113                           ; 2 bytes @ 0x0
  3114                           
  3115     0020                     EUSART_SetErrorHandler@interruptHandler:	
  3116                           ; 2 bytes @ 0x0
  3117                           
  3118     0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3119                           ; 2 bytes @ 0x0
  3120                           
  3121     0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3122                           ; 2 bytes @ 0x0
  3123                           
  3124     0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  3125                           ; 2 bytes @ 0x0
  3126                           
  3127     0020                     I2C_SetBuffer@buffer:	
  3128                           ; 2 bytes @ 0x0
  3129                           
  3130     0020                     I2C_SetInterruptHandler@InterruptHandler:	
  3131                           ; 2 bytes @ 0x0
  3132                           
  3133     0020                     I2C_SetCallback@cb:	
  3134                           ; 2 bytes @ 0x0
  3135                           
  3136     0020                     ___fltol@f1:	
  3137                           ; 2 bytes @ 0x0
  3138                           
  3139     0020                     ___xxtofl@val:	
  3140                           ; 4 bytes @ 0x0
  3141                           
  3142                           
  3143                           ; 4 bytes @ 0x0
  3144     0020                     	ds	1
  3145     0021                     EUSART_Read@readValue:
  3146     0021                     EUSART_Write@txData:	
  3147                           ; 1 bytes @ 0x1
  3148                           
  3149     0021                     I2C_MasterOperation@returnValue:	
  3150                           ; 1 bytes @ 0x1
  3151                           
  3152     0021                     Device_Init@value_SW2:	
  3153                           ; 1 bytes @ 0x1
  3154                           
  3155     0021                     buildException@exception:	
  3156                           ; 1 bytes @ 0x1
  3157                           
  3158                           
  3159                           ; 1 bytes @ 0x1
  3160     0021                     	ds	1
  3161     0022                     ??_I2C_Open:
  3162     0022                     ??_I2C_MasterWrite:	
  3163                           ; 1 bytes @ 0x2
  3164                           
  3165     0022                     ??_I2C_MasterRead:	
  3166                           ; 1 bytes @ 0x2
  3167                           
  3168     0022                     ??_TMR1_Initialize:	
  3169                           ; 1 bytes @ 0x2
  3170                           
  3171     0022                     ??_EUSART_Initialize:	
  3172                           ; 1 bytes @ 0x2
  3173                           
  3174     0022                     ??_EUSART_SetRxInterruptHandler:	
  3175                           ; 1 bytes @ 0x2
  3176                           
  3177     0022                     ??_EUSART_SetTxInterruptHandler:	
  3178                           ; 1 bytes @ 0x2
  3179                           
  3180     0022                     ??_EUSART_SetFramingErrorHandler:	
  3181                           ; 1 bytes @ 0x2
  3182                           
  3183     0022                     ??_EUSART_SetOverrunErrorHandler:	
  3184                           ; 1 bytes @ 0x2
  3185                           
  3186     0022                     ??_EUSART_SetErrorHandler:	
  3187                           ; 1 bytes @ 0x2
  3188                           
  3189     0022                     ??_TMR1_SetInterruptHandler:	
  3190                           ; 1 bytes @ 0x2
  3191                           
  3192     0022                     ??_I2C_SetInterruptHandler:	
  3193                           ; 1 bytes @ 0x2
  3194                           
  3195     0022                     ??_Tick_Init_SES:	
  3196                           ; 1 bytes @ 0x2
  3197                           
  3198     0022                     ??_Modbus_calcCRC:	
  3199                           ; 1 bytes @ 0x2
  3200                           
  3201     0022                     ??__Umul8_16:	
  3202                           ; 1 bytes @ 0x2
  3203                           
  3204     0022                     ??_SYSTEM_Initialize:	
  3205                           ; 1 bytes @ 0x2
  3206                           
  3207     0022                     ??_Modbus_getRxBuff:	
  3208                           ; 1 bytes @ 0x2
  3209                           
  3210     0022                     I2C_Open@address:	
  3211                           ; 1 bytes @ 0x2
  3212                           
  3213     0022                     I2C_SetCallback@ptr:	
  3214                           ; 1 bytes @ 0x2
  3215                           
  3216     0022                     Device_Init@value_SW3:	
  3217                           ; 1 bytes @ 0x2
  3218                           
  3219     0022                     buildException@u8func:	
  3220                           ; 1 bytes @ 0x2
  3221                           
  3222     0022                     I2C_SetBuffer@bufferSize:	
  3223                           ; 1 bytes @ 0x2
  3224                           
  3225                           
  3226                           ; 2 bytes @ 0x2
  3227     0022                     	ds	1
  3228     0023                     ??_I2C_SetCallback:
  3229     0023                     I2C_Open@returnValue:	
  3230                           ; 1 bytes @ 0x3
  3231                           
  3232     0023                     I2C_SetCallback@idx:	
  3233                           ; 1 bytes @ 0x3
  3234                           
  3235     0023                     Device_Init@value_SW4:	
  3236                           ; 1 bytes @ 0x3
  3237                           
  3238                           
  3239                           ; 1 bytes @ 0x3
  3240     0023                     	ds	1
  3241     0024                     ??_I2C_SetBuffer:
  3242     0024                     ?_I2C_SetAddressNackCallback:	
  3243                           ; 1 bytes @ 0x4
  3244                           
  3245     0024                     ??_App_Init:	
  3246                           ; 1 bytes @ 0x4
  3247                           
  3248     0024                     ??_Get_millis:	
  3249                           ; 1 bytes @ 0x4
  3250                           
  3251     0024                     ?_I2C_ReadNBytes:	
  3252                           ; 1 bytes @ 0x4
  3253                           
  3254     0024                     ??___fltol:	
  3255                           ; 1 bytes @ 0x4
  3256                           
  3257     0024                     ??___xxtofl:	
  3258                           ; 1 bytes @ 0x4
  3259                           
  3260     0024                     ?_llabs:	
  3261                           ; 1 bytes @ 0x4
  3262                           
  3263     0024                     I2C_ReadNBytes@data:	
  3264                           ; 8 bytes @ 0x4
  3265                           
  3266     0024                     I2C_SetAddressNackCallback@cb:	
  3267                           ; 1 bytes @ 0x4
  3268                           
  3269     0024                     __Umul8_16@product:	
  3270                           ; 2 bytes @ 0x4
  3271                           
  3272     0024                     llabs@a:	
  3273                           ; 2 bytes @ 0x4
  3274                           
  3275                           
  3276                           ; 8 bytes @ 0x4
  3277     0024                     	ds	1
  3278     0025                     I2C_ReadNBytes@len:
  3279                           
  3280                           ; 2 bytes @ 0x5
  3281     0025                     	ds	1
  3282     0026                     I2C_SetAddressNackCallback@ptr:
  3283     0026                     Modbus_calcCRC@temp2:	
  3284                           ; 2 bytes @ 0x6
  3285                           
  3286     0026                     __Umul8_16@word_mpld:	
  3287                           ; 2 bytes @ 0x6
  3288                           
  3289                           
  3290                           ; 2 bytes @ 0x6
  3291     0026                     	ds	1
  3292     0027                     ??_I2C_ReadNBytes:
  3293     0027                     I2C_ReadNBytes@address:	
  3294                           ; 1 bytes @ 0x7
  3295                           
  3296                           
  3297                           ; 1 bytes @ 0x7
  3298     0027                     	ds	1
  3299     0028                     ??_I2C_SetAddressNackCallback:
  3300     0028                     ?_I2C_WriteNBytes:	
  3301                           ; 1 bytes @ 0x8
  3302                           
  3303     0028                     I2C_WriteNBytes@data:	
  3304                           ; 1 bytes @ 0x8
  3305                           
  3306     0028                     ___fltol@sign1:	
  3307                           ; 1 bytes @ 0x8
  3308                           
  3309     0028                     __Umul8_16@multiplier:	
  3310                           ; 1 bytes @ 0x8
  3311                           
  3312     0028                     ___xxtofl@sign:	
  3313                           ; 1 bytes @ 0x8
  3314                           
  3315     0028                     Modbus_calcCRC@flag:	
  3316                           ; 1 bytes @ 0x8
  3317                           
  3318                           
  3319                           ; 2 bytes @ 0x8
  3320     0028                     	ds	1
  3321     0029                     Modbus_getRxBuff@bBuffOverflow:
  3322     0029                     ___fltol@exp1:	
  3323                           ; 1 bytes @ 0x9
  3324                           
  3325     0029                     ___xxtofl@exp:	
  3326                           ; 1 bytes @ 0x9
  3327                           
  3328     0029                     I2C_WriteNBytes@len:	
  3329                           ; 1 bytes @ 0x9
  3330                           
  3331                           
  3332                           ; 2 bytes @ 0x9
  3333     0029                     	ds	1
  3334     002A                     Modbus_calcCRC@len:
  3335     002A                     ___xxtofl@arg:	
  3336                           ; 1 bytes @ 0xA
  3337                           
  3338                           
  3339                           ; 4 bytes @ 0xA
  3340     002A                     	ds	1
  3341     002B                     ??_I2C_WriteNBytes:
  3342     002B                     I2C_WriteNBytes@address:	
  3343                           ; 1 bytes @ 0xB
  3344                           
  3345     002B                     Modbus_calcCRC@i:	
  3346                           ; 1 bytes @ 0xB
  3347                           
  3348                           
  3349                           ; 1 bytes @ 0xB
  3350     002B                     	ds	1
  3351     002C                     ??_llabs:
  3352     002C                     Modbus_calcCRC@j:	
  3353                           ; 1 bytes @ 0xC
  3354                           
  3355                           
  3356                           ; 1 bytes @ 0xC
  3357     002C                     	ds	1
  3358     002D                     Modbus_calcCRC@temp:
  3359                           
  3360                           ; 2 bytes @ 0xD
  3361     002D                     	ds	1
  3362     002E                     ?___flmul:
  3363     002E                     ___flmul@b:	
  3364                           ; 4 bytes @ 0xE
  3365                           
  3366                           
  3367                           ; 4 bytes @ 0xE
  3368     002E                     	ds	1
  3369     002F                     ??_Modbus_sendTxBuff:
  3370     002F                     ??_validateRequest:	
  3371                           ; 1 bytes @ 0xF
  3372                           
  3373                           
  3374                           ; 1 bytes @ 0xF
  3375     002F                     	ds	3
  3376     0032                     ___flmul@a:
  3377                           
  3378                           ; 4 bytes @ 0x12
  3379     0032                     	ds	4
  3380     0036                     ??___flmul:
  3381     0036                     Modbus_sendTxBuff@u16crc:	
  3382                           ; 1 bytes @ 0x16
  3383                           
  3384                           
  3385                           ; 2 bytes @ 0x16
  3386     0036                     	ds	2
  3387     0038                     Modbus_sendTxBuff@index:
  3388                           
  3389                           ; 2 bytes @ 0x18
  3390     0038                     	ds	2
  3391     003A                     Modbus_sendTxBuff@u32overTimecountDown:
  3392                           
  3393                           ; 4 bytes @ 0x1A
  3394     003A                     	ds	1
  3395     003B                     ___flmul@sign:
  3396                           
  3397                           ; 1 bytes @ 0x1B
  3398     003B                     	ds	1
  3399     003C                     validateRequest@u16MsgCRC:
  3400     003C                     ___flmul@grs:	
  3401                           ; 2 bytes @ 0x1C
  3402                           
  3403                           
  3404                           ; 4 bytes @ 0x1C
  3405     003C                     	ds	2
  3406     003E                     ?_ModbusSlaveF04:
  3407     003E                     validateRequest@isSupported:	
  3408                           ; 1 bytes @ 0x1E
  3409                           
  3410     003E                     ModbusSlaveF04@size:	
  3411                           ; 1 bytes @ 0x1E
  3412                           
  3413                           
  3414                           ; 2 bytes @ 0x1E
  3415     003E                     	ds	1
  3416     003F                     validateRequest@i:
  3417                           
  3418                           ; 1 bytes @ 0x1F
  3419     003F                     	ds	1
  3420     0040                     ??_ModbusSlaveF04:
  3421     0040                     ___flmul@aexp:	
  3422                           ; 1 bytes @ 0x20
  3423                           
  3424                           
  3425                           ; 1 bytes @ 0x20
  3426     0040                     	ds	1
  3427     0041                     ___flmul@bexp:
  3428                           
  3429                           ; 1 bytes @ 0x21
  3430     0041                     	ds	1
  3431     0042                     ___flmul@prod:
  3432                           
  3433                           ; 4 bytes @ 0x22
  3434     0042                     	ds	4
  3435     0046                     ___flmul@temp:
  3436                           
  3437                           ; 2 bytes @ 0x26
  3438     0046                     	ds	2
  3439     0048                     ?___fladd:
  3440     0048                     ___fladd@b:	
  3441                           ; 4 bytes @ 0x28
  3442                           
  3443                           
  3444                           ; 4 bytes @ 0x28
  3445     0048                     	ds	2
  3446     004A                     ModbusSlaveF04@u8StartAdd:
  3447                           
  3448                           ; 2 bytes @ 0x2A
  3449     004A                     	ds	2
  3450     004C                     ModbusSlaveF04@u8regsno:
  3451     004C                     ___fladd@a:	
  3452                           ; 1 bytes @ 0x2C
  3453                           
  3454                           
  3455                           ; 4 bytes @ 0x2C
  3456     004C                     	ds	1
  3457     004D                     ModbusSlaveF04@reg:
  3458                           
  3459                           ; 1 bytes @ 0x2D
  3460     004D                     	ds	1
  3461     004E                     ModbusSlaveF04@valueAdd:
  3462                           
  3463                           ; 2 bytes @ 0x2E
  3464     004E                     	ds	2
  3465     0050                     ??___fladd:
  3466     0050                     ModbusSlaveF04@valueRegsno:	
  3467                           ; 1 bytes @ 0x30
  3468                           
  3469                           
  3470                           ; 2 bytes @ 0x30
  3471     0050                     	ds	2
  3472     0052                     ModbusSlaveF04@i:
  3473                           
  3474                           ; 2 bytes @ 0x32
  3475     0052                     	ds	2
  3476     0054                     ?_ModbusRTU_Slave_Poll:
  3477     0054                     ModbusRTU_Slave_Poll@size:	
  3478                           ; 1 bytes @ 0x34
  3479                           
  3480                           
  3481                           ; 2 bytes @ 0x34
  3482     0054                     	ds	2
  3483     0056                     ??_ModbusRTU_Slave_Poll:
  3484                           
  3485                           ; 1 bytes @ 0x36
  3486     0056                     	ds	2
  3487     0058                     ___fladd@signs:
  3488                           
  3489                           ; 1 bytes @ 0x38
  3490     0058                     	ds	1
  3491     0059                     ___fladd@aexp:
  3492                           
  3493                           ; 1 bytes @ 0x39
  3494     0059                     	ds	1
  3495     005A                     ___fladd@bexp:
  3496                           
  3497                           ; 1 bytes @ 0x3A
  3498     005A                     	ds	1
  3499     005B                     ___fladd@grs:
  3500                           
  3501                           ; 1 bytes @ 0x3B
  3502     005B                     	ds	1
  3503     005C                     ?___fldiv:
  3504     005C                     ___fldiv@a:	
  3505                           ; 4 bytes @ 0x3C
  3506                           
  3507                           
  3508                           ; 4 bytes @ 0x3C
  3509     005C                     	ds	2
  3510     005E                     ModbusRTU_Slave_Poll@reg:
  3511                           
  3512                           ; 1 bytes @ 0x3E
  3513     005E                     	ds	1
  3514     005F                     ModbusRTU_Slave_Poll@u8Current:
  3515                           
  3516                           ; 1 bytes @ 0x3F
  3517     005F                     	ds	1
  3518     0060                     ModbusRTU_Slave_Poll@i8state:
  3519     0060                     ___fldiv@b:	
  3520                           ; 1 bytes @ 0x40
  3521                           
  3522                           
  3523                           ; 4 bytes @ 0x40
  3524     0060                     	ds	1
  3525     0061                     ModbusRTU_Slave_Poll@u8exception:
  3526                           
  3527                           ; 1 bytes @ 0x41
  3528     0061                     	ds	1
  3529     0062                     ??_Task_MB:
  3530     0062                     ??_ModbusSlave_Process:	
  3531                           ; 1 bytes @ 0x42
  3532                           
  3533                           
  3534                           ; 1 bytes @ 0x42
  3535     0062                     	ds	2
  3536     0064                     ??___fldiv:
  3537                           
  3538                           ; 1 bytes @ 0x44
  3539     0064                     	ds	5
  3540     0069                     ??_App_Process:
  3541     0069                     ??_main:	
  3542                           ; 1 bytes @ 0x49
  3543                           
  3544                           
  3545                           	psect	maintext
  3546     13AE                     __pmaintext:	
  3547                           ; 1 bytes @ 0x49
  3548 ;;
  3549 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3550 ;;
  3551 ;; *************** function _main *****************
  3552 ;; Defined at:
  3553 ;;		line 49 in file "main.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : B1F/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3567 ;;      Params:         0       0       0       0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels required when called: 14
  3573 ;; This function calls:
  3574 ;;		_App_Init
  3575 ;;		_App_Process
  3576 ;;		_SYSTEM_Initialize
  3577 ;; This function is called by:
  3578 ;;		Startup code after reset
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582     13AE                     _main:	
  3583                           ;psect for function _main
  3584                           
  3585     13AE                     l5759:	
  3586                           ;incstack = 0
  3587                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3588                           
  3589                           
  3590                           ;main.c: 51:     SYSTEM_Initialize();
  3591     13AE  3194  2450  3193   	fcall	_SYSTEM_Initialize
  3592                           
  3593                           ;main.c: 52:     App_Init();
  3594     13B1  3193  232A  3193   	fcall	_App_Init
  3595     13B4                     l5761:
  3596                           
  3597                           ;main.c: 57:     (INTCONbits.GIE = 1);
  3598     13B4  178B               	bsf	11,7	;volatile
  3599     13B5                     l5763:
  3600                           
  3601                           ;main.c: 60:     (INTCONbits.PEIE = 1);
  3602     13B5  170B               	bsf	11,6	;volatile
  3603     13B6                     l786:	
  3604                           ;main.c: 68:     while (1) {
  3605                           
  3606     13B6  0064               	clrwdt	;# 
  3607     13B7                     l5765:
  3608                           
  3609                           ;main.c: 71:         App_Process();
  3610     13B7  3193  2334  3193   	fcall	_App_Process
  3611     13BA  2BB6               	goto	l786
  3612     13BB  3180  2858         	ljmp	start
  3613     13BD                     __end_of_main:
  3614                           
  3615                           	psect	text1
  3616     1450                     __ptext1:	
  3617 ;; *************** function _SYSTEM_Initialize *****************
  3618 ;; Defined at:
  3619 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3633 ;;      Params:         0       0       0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 9
  3640 ;; This function calls:
  3641 ;;		_EUSART_Initialize
  3642 ;;		_I2C_Initialize
  3643 ;;		_OSCILLATOR_Initialize
  3644 ;;		_PIN_MANAGER_Initialize
  3645 ;;		_TMR1_Initialize
  3646 ;;		_WDT_Initialize
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652     1450                     _SYSTEM_Initialize:	
  3653                           ;psect for function _SYSTEM_Initialize
  3654                           
  3655     1450                     l5047:	
  3656                           ;incstack = 0
  3657                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3658                           
  3659                           
  3660                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3661     1450  3193  2317  3194   	fcall	_I2C_Initialize
  3662                           
  3663                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3664     1453  3194  24FB  3194   	fcall	_PIN_MANAGER_Initialize
  3665                           
  3666                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3667     1456  3193  2355  3194   	fcall	_OSCILLATOR_Initialize
  3668                           
  3669                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3670     1459  3187  27FC  3194   	fcall	_WDT_Initialize
  3671                           
  3672                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  3673     145C  3194  247A  3194   	fcall	_TMR1_Initialize
  3674                           
  3675                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  3676     145F  3197  272F  3194   	fcall	_EUSART_Initialize
  3677     1462                     l165:
  3678     1462  0008               	return
  3679     1463                     __end_of_SYSTEM_Initialize:
  3680                           
  3681                           	psect	text2
  3682     07FC                     __ptext2:	
  3683 ;; *************** function _WDT_Initialize *****************
  3684 ;; Defined at:
  3685 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3699 ;;      Params:         0       0       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 7
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_SYSTEM_Initialize
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     07FC                     _WDT_Initialize:	
  3714                           ;psect for function _WDT_Initialize
  3715                           
  3716     07FC                     l4883:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _WDT_Initialize: [wreg]
  3719                           
  3720                           
  3721                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x1E;
  3722     07FC  301E               	movlw	30
  3723     07FD  0021               	movlb	1	; select bank1
  3724     07FE  0097               	movwf	23	;volatile
  3725     07FF                     l174:
  3726     07FF  0008               	return
  3727     0800                     __end_of_WDT_Initialize:
  3728                           
  3729                           	psect	text3
  3730     147A                     __ptext3:	
  3731 ;; *************** function _TMR1_Initialize *****************
  3732 ;; Defined at:
  3733 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3747 ;;      Params:         0       0       0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 8
  3754 ;; This function calls:
  3755 ;;		_TMR1_SetInterruptHandler
  3756 ;; This function is called by:
  3757 ;;		_SYSTEM_Initialize
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     147A                     _TMR1_Initialize:	
  3762                           ;psect for function _TMR1_Initialize
  3763                           
  3764     147A                     l4885:	
  3765                           ;incstack = 0
  3766                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3767                           
  3768                           
  3769                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3770     147A  0020               	movlb	0	; select bank0
  3771     147B  0199               	clrf	25	;volatile
  3772     147C                     l4887:
  3773                           
  3774                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x83;
  3775     147C  3083               	movlw	131
  3776     147D  0097               	movwf	23	;volatile
  3777     147E                     l4889:
  3778                           
  3779                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  3780     147E  0196               	clrf	22	;volatile
  3781     147F                     l4891:
  3782                           
  3783                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3784     147F  1011               	bcf	17,0	;volatile
  3785                           
  3786                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3787     1480  0817               	movf	23,w	;volatile
  3788     1481  00FD               	movwf	_timer1ReloadVal+1	;volatile
  3789     1482  0816               	movf	22,w	;volatile
  3790     1483  00FC               	movwf	_timer1ReloadVal	;volatile
  3791     1484                     l4893:
  3792                           
  3793                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3794     1484  0021               	movlb	1	; select bank1
  3795     1485  1411               	bsf	17,0	;volatile
  3796     1486                     l4895:
  3797                           
  3798                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3799     1486  303F               	movlw	low _TMR1_DefaultInterruptHandler
  3800     1487  0020               	movlb	0	; select bank0
  3801     1488  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3802     1489  3012               	movlw	high _TMR1_DefaultInterruptHandler
  3803     148A  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3804     148B  3192  22D8  3194   	fcall	_TMR1_SetInterruptHandler
  3805     148E                     l4897:
  3806                           
  3807                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3808     148E  3041               	movlw	65
  3809     148F  0020               	movlb	0	; select bank0
  3810     1490  0098               	movwf	24	;volatile
  3811     1491                     l388:
  3812     1491  0008               	return
  3813     1492                     __end_of_TMR1_Initialize:
  3814                           
  3815                           	psect	text4
  3816     14FB                     __ptext4:	
  3817 ;; *************** function _PIN_MANAGER_Initialize *****************
  3818 ;; Defined at:
  3819 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3833 ;;      Params:         0       0       0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 7
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_SYSTEM_Initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847     14FB                     _PIN_MANAGER_Initialize:	
  3848                           ;psect for function _PIN_MANAGER_Initialize
  3849                           
  3850     14FB                     l4845:	
  3851                           ;incstack = 0
  3852                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3853                           
  3854                           
  3855                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3856     14FB  0022               	movlb	2	; select bank2
  3857     14FC  0190               	clrf	16	;volatile
  3858                           
  3859                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3860     14FD  018C               	clrf	12	;volatile
  3861                           
  3862                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3863     14FE  018D               	clrf	13	;volatile
  3864     14FF                     l4847:
  3865                           
  3866                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x63;
  3867     14FF  3063               	movlw	99
  3868     1500  008E               	movwf	14	;volatile
  3869     1501                     l4849:
  3870                           
  3871                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3872     1501  3008               	movlw	8
  3873     1502  0021               	movlb	1	; select bank1
  3874     1503  0090               	movwf	16	;volatile
  3875     1504                     l4851:
  3876                           
  3877                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3878     1504  30FF               	movlw	255
  3879     1505  008C               	movwf	12	;volatile
  3880     1506                     l4853:
  3881                           
  3882                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3883     1506  30FF               	movlw	255
  3884     1507  008D               	movwf	13	;volatile
  3885     1508                     l4855:
  3886                           
  3887                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3888     1508  309C               	movlw	156
  3889     1509  008E               	movwf	14	;volatile
  3890     150A                     l4857:
  3891                           
  3892                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3893     150A  303F               	movlw	63
  3894     150B  0023               	movlb	3	; select bank3
  3895     150C  008D               	movwf	13	;volatile
  3896     150D                     l4859:
  3897                           
  3898                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3899     150D  3030               	movlw	48
  3900     150E  008C               	movwf	12	;volatile
  3901     150F                     l4861:
  3902                           
  3903                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3904     150F  0024               	movlb	4	; select bank4
  3905     1510  0190               	clrf	16	;volatile
  3906     1511                     l4863:
  3907                           
  3908                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3909     1511  018D               	clrf	13	;volatile
  3910     1512                     l4865:
  3911                           
  3912                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3913     1512  0021               	movlb	1	; select bank1
  3914     1513  1795               	bsf	21,7	;volatile
  3915     1514                     l4867:
  3916                           
  3917                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3918     1514  0022               	movlb	2	; select bank2
  3919     1515  019D               	clrf	29	;volatile
  3920     1516                     l135:
  3921     1516  0008               	return
  3922     1517                     __end_of_PIN_MANAGER_Initialize:
  3923                           
  3924                           	psect	text5
  3925     1355                     __ptext5:	
  3926 ;; *************** function _OSCILLATOR_Initialize *****************
  3927 ;; Defined at:
  3928 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3942 ;;      Params:         0       0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 7
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_SYSTEM_Initialize
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956     1355                     _OSCILLATOR_Initialize:	
  3957                           ;psect for function _OSCILLATOR_Initialize
  3958                           
  3959     1355                     l4877:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3962                           
  3963                           
  3964                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3965     1355  3070               	movlw	112
  3966     1356  0021               	movlb	1	; select bank1
  3967     1357  0099               	movwf	25	;volatile
  3968     1358                     l4879:
  3969                           
  3970                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3971     1358  0198               	clrf	24	;volatile
  3972     1359                     l4881:
  3973                           
  3974                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3975     1359  0022               	movlb	2	; select bank2
  3976     135A  0196               	clrf	22	;volatile
  3977     135B                     l168:	
  3978                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  3979                           
  3980                           
  3981                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  3982     135B  0021               	movlb	1	; select bank1
  3983     135C  1F1A               	btfss	26,6	;volatile
  3984     135D  2B5F               	goto	u4041
  3985     135E  2B60               	goto	u4040
  3986     135F                     u4041:
  3987     135F  2B5B               	goto	l168
  3988     1360                     u4040:
  3989     1360                     l171:
  3990     1360  0008               	return
  3991     1361                     __end_of_OSCILLATOR_Initialize:
  3992                           
  3993                           	psect	text6
  3994     1317                     __ptext6:	
  3995 ;; *************** function _I2C_Initialize *****************
  3996 ;; Defined at:
  3997 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4011 ;;      Params:         0       0       0       0       0       0       0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0
  4014 ;;      Totals:         0       0       0       0       0       0       0       0
  4015 ;;Total ram usage:        0 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 7
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_SYSTEM_Initialize
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025     1317                     _I2C_Initialize:	
  4026                           ;psect for function _I2C_Initialize
  4027                           
  4028     1317                     l4869:	
  4029                           ;incstack = 0
  4030                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4031                           
  4032                           
  4033                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  4034     1317  0024               	movlb	4	; select bank4
  4035     1318  0194               	clrf	20	;volatile
  4036     1319                     l4871:
  4037                           
  4038                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4039     1319  3008               	movlw	8
  4040     131A  0095               	movwf	21	;volatile
  4041     131B                     l4873:
  4042                           
  4043                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4044     131B  0196               	clrf	22	;volatile
  4045                           
  4046                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x9F;
  4047     131C  309F               	movlw	159
  4048     131D  0092               	movwf	18	;volatile
  4049     131E                     l4875:
  4050                           
  4051                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4052     131E  1295               	bcf	21,5	;volatile
  4053     131F                     l533:
  4054     131F  0008               	return
  4055     1320                     __end_of_I2C_Initialize:
  4056                           
  4057                           	psect	text7
  4058     172F                     __ptext7:	
  4059 ;; *************** function _EUSART_Initialize *****************
  4060 ;; Defined at:
  4061 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4075 ;;      Params:         0       0       0       0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 8
  4082 ;; This function calls:
  4083 ;;		_EUSART_SetErrorHandler
  4084 ;;		_EUSART_SetFramingErrorHandler
  4085 ;;		_EUSART_SetOverrunErrorHandler
  4086 ;;		_EUSART_SetRxInterruptHandler
  4087 ;;		_EUSART_SetTxInterruptHandler
  4088 ;; This function is called by:
  4089 ;;		_SYSTEM_Initialize
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093     172F                     _EUSART_Initialize:	
  4094                           ;psect for function _EUSART_Initialize
  4095                           
  4096     172F                     l4899:	
  4097                           ;incstack = 0
  4098                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4099                           
  4100                           
  4101                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4102     172F  0021               	movlb	1	; select bank1
  4103     1730  1291               	bcf	17,5	;volatile
  4104     1731                     l4901:
  4105                           
  4106                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4107     1731  30EE               	movlw	low _EUSART_Receive_ISR
  4108     1732  0020               	movlb	0	; select bank0
  4109     1733  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4110     1734  3016               	movlw	high _EUSART_Receive_ISR
  4111     1735  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4112     1736  3193  2305  3197   	fcall	_EUSART_SetRxInterruptHandler
  4113     1739                     l4903:
  4114                           
  4115                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4116     1739  0021               	movlb	1	; select bank1
  4117     173A  1211               	bcf	17,4	;volatile
  4118                           
  4119                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4120     173B  3035               	movlw	low _EUSART_Transmit_ISR
  4121     173C  0020               	movlb	0	; select bank0
  4122     173D  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4123     173E  3015               	movlw	high _EUSART_Transmit_ISR
  4124     173F  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4125     1740  3193  230E  3197   	fcall	_EUSART_SetTxInterruptHandler
  4126     1743                     l4905:
  4127                           
  4128                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4129     1743  3008               	movlw	8
  4130     1744  0023               	movlb	3	; select bank3
  4131     1745  009F               	movwf	31	;volatile
  4132     1746                     l4907:
  4133                           
  4134                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4135     1746  3090               	movlw	144
  4136     1747  009D               	movwf	29	;volatile
  4137     1748                     l4909:
  4138                           
  4139                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4140     1748  3024               	movlw	36
  4141     1749  009E               	movwf	30	;volatile
  4142     174A                     l4911:
  4143                           
  4144                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4145     174A  3040               	movlw	64
  4146     174B  009B               	movwf	27	;volatile
  4147     174C                     l4913:
  4148                           
  4149                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4150     174C  3003               	movlw	3
  4151     174D  009C               	movwf	28	;volatile
  4152     174E                     l4915:
  4153                           
  4154                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4155     174E  303E               	movlw	low _EUSART_DefaultFramingErrorHandler
  4156     174F  0020               	movlb	0	; select bank0
  4157     1750  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4158     1751  3012               	movlw	high _EUSART_DefaultFramingErrorHandler
  4159     1752  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4160     1753  3192  22F3  3197   	fcall	_EUSART_SetFramingErrorHandler
  4161     1756                     l4917:
  4162                           
  4163                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4164     1756  306A               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4165     1757  0020               	movlb	0	; select bank0
  4166     1758  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4167     1759  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4168     175A  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4169     175B  3192  22FC  3197   	fcall	_EUSART_SetOverrunErrorHandler
  4170     175E                     l4919:
  4171                           
  4172                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4173     175E  3066               	movlw	low _EUSART_DefaultErrorHandler
  4174     175F  0020               	movlb	0	; select bank0
  4175     1760  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4176     1761  3012               	movlw	high _EUSART_DefaultErrorHandler
  4177     1762  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4178     1763  3192  22EA  3197   	fcall	_EUSART_SetErrorHandler
  4179     1766                     l4921:
  4180                           
  4181                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4182     1766  0021               	movlb	1	; select bank1
  4183     1767  01EF               	clrf	_eusartRxLastError^(0+128)	;volatile
  4184     1768                     l4923:
  4185                           
  4186                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4187     1768  0020               	movlb	0	; select bank0
  4188     1769  01EF               	clrf	_eusartTxHead	;volatile
  4189     176A                     l4925:
  4190                           
  4191                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4192     176A  01EE               	clrf	_eusartTxTail	;volatile
  4193     176B                     l4927:
  4194                           
  4195                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4196     176B  3008               	movlw	8
  4197     176C  00ED               	movwf	_eusartTxBufferRemaining	;volatile
  4198                           
  4199                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4200     176D  01EC               	clrf	_eusartRxHead	;volatile
  4201                           
  4202                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4203     176E  01EB               	clrf	_eusartRxTail	;volatile
  4204                           
  4205                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4206     176F  01EA               	clrf	_eusartRxCount	;volatile
  4207     1770                     l4929:
  4208                           
  4209                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4210     1770  0021               	movlb	1	; select bank1
  4211     1771  1691               	bsf	17,5	;volatile
  4212     1772                     l284:
  4213     1772  0008               	return
  4214     1773                     __end_of_EUSART_Initialize:
  4215                           
  4216                           	psect	text8
  4217     130E                     __ptext8:	
  4218 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4219 ;; Defined at:
  4220 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4223 ;;		 -> EUSART_Transmit_ISR(1), 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4235 ;;      Params:         0       2       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0
  4238 ;;      Totals:         0       2       0       0       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 7
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_EUSART_Initialize
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249     130E                     _EUSART_SetTxInterruptHandler:	
  4250                           ;psect for function _EUSART_SetTxInterruptHandler
  4251                           
  4252     130E                     l4619:	
  4253                           ;incstack = 0
  4254                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4255                           
  4256                           
  4257                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4258     130E  0020               	movlb	0	; select bank0
  4259     130F  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4260     1310  0021               	movlb	1	; select bank1
  4261     1311  00EA               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  4262     1312  0020               	movlb	0	; select bank0
  4263     1313  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4264     1314  0021               	movlb	1	; select bank1
  4265     1315  00E9               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  4266     1316                     l356:
  4267     1316  0008               	return
  4268     1317                     __end_of_EUSART_SetTxInterruptHandler:
  4269                           
  4270                           	psect	text9
  4271     1305                     __ptext9:	
  4272 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4273 ;; Defined at:
  4274 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4277 ;;		 -> EUSART_Receive_ISR(1), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4289 ;;      Params:         0       2       0       0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0
  4292 ;;      Totals:         0       2       0       0       0       0       0       0
  4293 ;;Total ram usage:        2 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 7
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_EUSART_Initialize
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303     1305                     _EUSART_SetRxInterruptHandler:	
  4304                           ;psect for function _EUSART_SetRxInterruptHandler
  4305                           
  4306     1305                     l4617:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4309                           
  4310                           
  4311                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4312     1305  0020               	movlb	0	; select bank0
  4313     1306  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4314     1307  0021               	movlb	1	; select bank1
  4315     1308  00E8               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  4316     1309  0020               	movlb	0	; select bank0
  4317     130A  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4318     130B  0021               	movlb	1	; select bank1
  4319     130C  00E7               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  4320     130D                     l359:
  4321     130D  0008               	return
  4322     130E                     __end_of_EUSART_SetRxInterruptHandler:
  4323                           
  4324                           	psect	text10
  4325     12FC                     __ptext10:	
  4326 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4327 ;; Defined at:
  4328 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4331 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4343 ;;      Params:         0       2       0       0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0
  4346 ;;      Totals:         0       2       0       0       0       0       0       0
  4347 ;;Total ram usage:        2 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 7
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_EUSART_Initialize
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357     12FC                     _EUSART_SetOverrunErrorHandler:	
  4358                           ;psect for function _EUSART_SetOverrunErrorHandler
  4359                           
  4360     12FC                     l4623:	
  4361                           ;incstack = 0
  4362                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4363                           
  4364                           
  4365                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4366     12FC  0020               	movlb	0	; select bank0
  4367     12FD  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4368     12FE  0021               	movlb	1	; select bank1
  4369     12FF  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4370     1300  0020               	movlb	0	; select bank0
  4371     1301  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4372     1302  0021               	movlb	1	; select bank1
  4373     1303  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4374     1304                     l350:
  4375     1304  0008               	return
  4376     1305                     __end_of_EUSART_SetOverrunErrorHandler:
  4377                           
  4378                           	psect	text11
  4379     12F3                     __ptext11:	
  4380 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4381 ;; Defined at:
  4382 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4385 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4397 ;;      Params:         0       2       0       0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0
  4400 ;;      Totals:         0       2       0       0       0       0       0       0
  4401 ;;Total ram usage:        2 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 7
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_EUSART_Initialize
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411     12F3                     _EUSART_SetFramingErrorHandler:	
  4412                           ;psect for function _EUSART_SetFramingErrorHandler
  4413                           
  4414     12F3                     l4621:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4417                           
  4418                           
  4419                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4420     12F3  0020               	movlb	0	; select bank0
  4421     12F4  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4422     12F5  0021               	movlb	1	; select bank1
  4423     12F6  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4424     12F7  0020               	movlb	0	; select bank0
  4425     12F8  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4426     12F9  0021               	movlb	1	; select bank1
  4427     12FA  00E5               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4428     12FB                     l347:
  4429     12FB  0008               	return
  4430     12FC                     __end_of_EUSART_SetFramingErrorHandler:
  4431                           
  4432                           	psect	text12
  4433     12EA                     __ptext12:	
  4434 ;; *************** function _EUSART_SetErrorHandler *****************
  4435 ;; Defined at:
  4436 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4439 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4451 ;;      Params:         0       2       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0
  4454 ;;      Totals:         0       2       0       0       0       0       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 7
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_EUSART_Initialize
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465     12EA                     _EUSART_SetErrorHandler:	
  4466                           ;psect for function _EUSART_SetErrorHandler
  4467                           
  4468     12EA                     l4625:	
  4469                           ;incstack = 0
  4470                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4471                           
  4472                           
  4473                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4474     12EA  0020               	movlb	0	; select bank0
  4475     12EB  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4476     12EC  0021               	movlb	1	; select bank1
  4477     12ED  00E2               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4478     12EE  0020               	movlb	0	; select bank0
  4479     12EF  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4480     12F0  0021               	movlb	1	; select bank1
  4481     12F1  00E1               	movwf	_EUSART_ErrorHandler^(0+128)
  4482     12F2                     l353:
  4483     12F2  0008               	return
  4484     12F3                     __end_of_EUSART_SetErrorHandler:
  4485                           
  4486                           	psect	text13
  4487     1334                     __ptext13:	
  4488 ;; *************** function _App_Process *****************
  4489 ;; Defined at:
  4490 ;;		line 61 in file "MCU.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4504 ;;      Params:         0       0       0       0       0       0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 13
  4511 ;; This function calls:
  4512 ;;		_Task_Indicator
  4513 ;;		_Task_MB
  4514 ;;		_Task_Sensor
  4515 ;; This function is called by:
  4516 ;;		_main
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520     1334                     _App_Process:	
  4521                           ;psect for function _App_Process
  4522                           
  4523     1334                     l5643:	
  4524                           ;incstack = 0
  4525                           ; Regs used in _App_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4526                           
  4527                           
  4528                           ;MCU.c: 62:     Task_Sensor();
  4529     1334  318B  234A  3193   	fcall	_Task_Sensor
  4530     1337                     l5645:
  4531                           
  4532                           ;MCU.c: 63:     Task_MB();
  4533     1337  3194  243D  3193   	fcall	_Task_MB
  4534     133A                     l5647:
  4535                           
  4536                           ;MCU.c: 64:     Task_Indicator();
  4537     133A  3187  27CD  3193   	fcall	_Task_Indicator
  4538     133D                     l889:
  4539     133D  0008               	return
  4540     133E                     __end_of_App_Process:
  4541                           
  4542                           	psect	text14
  4543     0B4A                     __ptext14:	
  4544 ;; *************** function _Task_Sensor *****************
  4545 ;; Defined at:
  4546 ;;		line 49 in file "I2C_SHT30.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      void 
  4553 ;; Registers used:
  4554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4560 ;;      Params:         0       0       0       0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0
  4562 ;;      Temps:          0       0      12       0       0       0       0       0
  4563 ;;      Totals:         0       0      12       0       0       0       0       0
  4564 ;;Total ram usage:       12 bytes
  4565 ;; Hardware stack levels used: 1
  4566 ;; Hardware stack levels required when called: 12
  4567 ;; This function calls:
  4568 ;;		_Get_millis
  4569 ;;		_ReadData
  4570 ;;		_llabs
  4571 ;; This function is called by:
  4572 ;;		_App_Process
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576     0B4A                     _Task_Sensor:	
  4577                           ;psect for function _Task_Sensor
  4578                           
  4579     0B4A                     l5627:	
  4580                           ;incstack = 0
  4581                           ; Regs used in _Task_Sensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4582                           
  4583                           
  4584                           ;I2C_SHT30.c: 50:     static uint32_t valTime = 0;;I2C_SHT30.c: 53:     if ((llabs(((uin
      +                          t32_t) Get_millis() - valTime)) >= (uint32_t) 2 * 1000)) {
  4585     0B4A  3193  23CE  318B   	fcall	_Get_millis
  4586     0B4D  0022               	movlb	2	; select bank2
  4587     0B4E  0856               	movf	Task_Sensor@valTime^(0+256),w
  4588     0B4F  0020               	movlb	0	; select bank0
  4589     0B50  0220               	subwf	?_Get_millis,w
  4590     0B51  0021               	movlb	1	; select bank1
  4591     0B52  00CB               	movwf	??_Task_Sensor^(0+128)
  4592     0B53  0022               	movlb	2	; select bank2
  4593     0B54  0857               	movf	(Task_Sensor@valTime+1)^(0+256),w
  4594     0B55  0020               	movlb	0	; select bank0
  4595     0B56  3B21               	subwfb	?_Get_millis+1,w
  4596     0B57  0021               	movlb	1	; select bank1
  4597     0B58  00CC               	movwf	(??_Task_Sensor^(0+128)+1)
  4598     0B59  0022               	movlb	2	; select bank2
  4599     0B5A  0858               	movf	(Task_Sensor@valTime+2)^(0+256),w
  4600     0B5B  0020               	movlb	0	; select bank0
  4601     0B5C  3B22               	subwfb	?_Get_millis+2,w
  4602     0B5D  0021               	movlb	1	; select bank1
  4603     0B5E  00CD               	movwf	(??_Task_Sensor^(0+128)+2)
  4604     0B5F  0022               	movlb	2	; select bank2
  4605     0B60  0859               	movf	(Task_Sensor@valTime+3)^(0+256),w
  4606     0B61  0020               	movlb	0	; select bank0
  4607     0B62  3B23               	subwfb	?_Get_millis+3,w
  4608     0B63  0021               	movlb	1	; select bank1
  4609     0B64  00CE               	movwf	(??_Task_Sensor^(0+128)+3)
  4610     0B65  084B               	movf	??_Task_Sensor^(0+128),w
  4611     0B66  00CF               	movwf	(??_Task_Sensor+4)^(0+128)
  4612     0B67  084C               	movf	(??_Task_Sensor+1)^(0+128),w
  4613     0B68  00D0               	movwf	((??_Task_Sensor+4)^(0+128)+1)
  4614     0B69  084D               	movf	(??_Task_Sensor+2)^(0+128),w
  4615     0B6A  00D1               	movwf	((??_Task_Sensor+4)^(0+128)+2)
  4616     0B6B  084E               	movf	(??_Task_Sensor+3)^(0+128),w
  4617     0B6C  00D2               	movwf	((??_Task_Sensor+4)^(0+128)+3)
  4618     0B6D  01D3               	clrf	((??_Task_Sensor+4)^(0+128)+4)
  4619     0B6E  01D4               	clrf	((??_Task_Sensor+4)^(0+128)+5)
  4620     0B6F  01D5               	clrf	((??_Task_Sensor+4)^(0+128)+6)
  4621     0B70  01D6               	clrf	((??_Task_Sensor+4)^(0+128)+7)
  4622     0B71  0856               	movf	((??_Task_Sensor+4)^(0+128)+7),w
  4623     0B72  0020               	movlb	0	; select bank0
  4624     0B73  00AB               	movwf	llabs@a+7
  4625     0B74  0021               	movlb	1	; select bank1
  4626     0B75  0855               	movf	((??_Task_Sensor+4)^(0+128)+6),w
  4627     0B76  0020               	movlb	0	; select bank0
  4628     0B77  00AA               	movwf	llabs@a+6
  4629     0B78  0021               	movlb	1	; select bank1
  4630     0B79  0854               	movf	((??_Task_Sensor+4)^(0+128)+5),w
  4631     0B7A  0020               	movlb	0	; select bank0
  4632     0B7B  00A9               	movwf	llabs@a+5
  4633     0B7C  0021               	movlb	1	; select bank1
  4634     0B7D  0853               	movf	((??_Task_Sensor+4)^(0+128)+4),w
  4635     0B7E  0020               	movlb	0	; select bank0
  4636     0B7F  00A8               	movwf	llabs@a+4
  4637     0B80  0021               	movlb	1	; select bank1
  4638     0B81  0852               	movf	((??_Task_Sensor+4)^(0+128)+3),w
  4639     0B82  0020               	movlb	0	; select bank0
  4640     0B83  00A7               	movwf	llabs@a+3
  4641     0B84  0021               	movlb	1	; select bank1
  4642     0B85  0851               	movf	((??_Task_Sensor+4)^(0+128)+2),w
  4643     0B86  0020               	movlb	0	; select bank0
  4644     0B87  00A6               	movwf	llabs@a+2
  4645     0B88  0021               	movlb	1	; select bank1
  4646     0B89  0850               	movf	((??_Task_Sensor+4)^(0+128)+1),w
  4647     0B8A  0020               	movlb	0	; select bank0
  4648     0B8B  00A5               	movwf	llabs@a+1
  4649     0B8C  0021               	movlb	1	; select bank1
  4650     0B8D  084F               	movf	(??_Task_Sensor+4)^(0+128),w
  4651     0B8E  0020               	movlb	0	; select bank0
  4652     0B8F  00A4               	movwf	llabs@a
  4653     0B90  3197  27B9  318B   	fcall	_llabs
  4654     0B93  0020               	movlb	0	; select bank0
  4655     0B94  1BAB               	btfsc	?_llabs+7,7
  4656     0B95  2BAF               	goto	u4701
  4657     0B96  082B               	movf	?_llabs+7,w
  4658     0B97  1D03               	btfss	3,2
  4659     0B98  2BB0               	goto	u4700
  4660     0B99  082A               	movf	?_llabs+6,w
  4661     0B9A  1D03               	btfss	3,2
  4662     0B9B  2BB0               	goto	u4700
  4663     0B9C  0829               	movf	?_llabs+5,w
  4664     0B9D  1D03               	btfss	3,2
  4665     0B9E  2BB0               	goto	u4700
  4666     0B9F  0828               	movf	?_llabs+4,w
  4667     0BA0  1D03               	btfss	3,2
  4668     0BA1  2BB0               	goto	u4700
  4669     0BA2  0827               	movf	?_llabs+3,w
  4670     0BA3  1D03               	btfss	3,2
  4671     0BA4  2BB0               	goto	u4700
  4672     0BA5  0826               	movf	?_llabs+2,w
  4673     0BA6  1D03               	btfss	3,2
  4674     0BA7  2BB0               	goto	u4700
  4675     0BA8  30D0               	movlw	208
  4676     0BA9  0224               	subwf	?_llabs,w
  4677     0BAA  3007               	movlw	7
  4678     0BAB  3B25               	subwfb	?_llabs+1,w
  4679     0BAC  1C03               	btfss	3,0
  4680     0BAD  2BAF               	goto	u4701
  4681     0BAE  2BB0               	goto	u4700
  4682     0BAF                     u4701:
  4683     0BAF  2BE0               	goto	l831
  4684     0BB0                     u4700:
  4685     0BB0                     l5629:
  4686                           
  4687                           ;I2C_SHT30.c: 54:         valTime = Get_millis();
  4688     0BB0  3193  23CE  318B   	fcall	_Get_millis
  4689     0BB3  0020               	movlb	0	; select bank0
  4690     0BB4  0823               	movf	?_Get_millis+3,w
  4691     0BB5  0022               	movlb	2	; select bank2
  4692     0BB6  00D9               	movwf	(Task_Sensor@valTime+3)^(0+256)
  4693     0BB7  0020               	movlb	0	; select bank0
  4694     0BB8  0822               	movf	?_Get_millis+2,w
  4695     0BB9  0022               	movlb	2	; select bank2
  4696     0BBA  00D8               	movwf	(Task_Sensor@valTime+2)^(0+256)
  4697     0BBB  0020               	movlb	0	; select bank0
  4698     0BBC  0821               	movf	?_Get_millis+1,w
  4699     0BBD  0022               	movlb	2	; select bank2
  4700     0BBE  00D7               	movwf	(Task_Sensor@valTime+1)^(0+256)
  4701     0BBF  0020               	movlb	0	; select bank0
  4702     0BC0  0820               	movf	?_Get_millis,w
  4703     0BC1  0022               	movlb	2	; select bank2
  4704     0BC2  00D6               	movwf	Task_Sensor@valTime^(0+256)
  4705     0BC3                     l5631:
  4706                           
  4707                           ;I2C_SHT30.c: 55:         f_Indicator = ON_Sensor;
  4708     0BC3  0021               	movlb	1	; select bank1
  4709     0BC4  01EE               	clrf	_f_Indicator^(0+128)
  4710     0BC5  0AEE               	incf	_f_Indicator^(0+128),f
  4711     0BC6                     l5633:
  4712                           
  4713                           ;I2C_SHT30.c: 56:         ReadData();
  4714     0BC6  3182  22D1  318B   	fcall	_ReadData
  4715     0BC9                     l5635:
  4716                           
  4717                           ;I2C_SHT30.c: 57:         if ((SensorAmbient.T.Val16 <= 0) || (SensorAmbient.H.Val16 <= 
      +                          0)) {
  4718     0BC9  0021               	movlb	1	; select bank1
  4719     0BCA  085B               	movf	_SensorAmbient^(0+128),w
  4720     0BCB  045C               	iorwf	(_SensorAmbient+1)^(0+128),w
  4721     0BCC  1903               	btfsc	3,2
  4722     0BCD  2BCF               	goto	u4711
  4723     0BCE  2BD0               	goto	u4710
  4724     0BCF                     u4711:
  4725     0BCF  2BD6               	goto	l5639
  4726     0BD0                     u4710:
  4727     0BD0                     l5637:
  4728     0BD0  085D               	movf	(_SensorAmbient^(0+128)+2),w
  4729     0BD1  045E               	iorwf	((_SensorAmbient+1)^(0+128)+2),w
  4730     0BD2  1D03               	btfss	3,2
  4731     0BD3  2BD5               	goto	u4721
  4732     0BD4  2BD6               	goto	u4720
  4733     0BD5                     u4721:
  4734     0BD5  2BE0               	goto	l831
  4735     0BD6                     u4720:
  4736     0BD6                     l5639:
  4737                           
  4738                           ;I2C_SHT30.c: 58:             SensorAmbient.T.Val16 = 0xFFFF;
  4739     0BD6  30FF               	movlw	255
  4740     0BD7  00DB               	movwf	_SensorAmbient^(0+128)
  4741     0BD8  30FF               	movlw	255
  4742     0BD9  00DC               	movwf	(_SensorAmbient^(0+128)+1)
  4743                           
  4744                           ;I2C_SHT30.c: 59:             SensorAmbient.H.Val16 = 0xFFFF;
  4745     0BDA  30FF               	movlw	255
  4746     0BDB  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  4747     0BDC  30FF               	movlw	255
  4748     0BDD  00DE               	movwf	(_SensorAmbient^(0+128)+3)
  4749                           
  4750                           ;I2C_SHT30.c: 60:             f_Indicator = ERR_Sensor;
  4751     0BDE  3002               	movlw	2
  4752     0BDF  00EE               	movwf	_f_Indicator^(0+128)
  4753     0BE0                     l831:
  4754     0BE0  0008               	return
  4755     0BE1                     __end_of_Task_Sensor:
  4756                           
  4757                           	psect	text15
  4758     17B9                     __ptext15:	
  4759 ;; *************** function _llabs *****************
  4760 ;; Defined at:
  4761 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llabs.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  a               8    4[BANK0 ] long long 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  8    4[BANK0 ] long long 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4775 ;;      Params:         0       8       0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0
  4778 ;;      Totals:         0       8       0       0       0       0       0       0
  4779 ;;Total ram usage:        8 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 7
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_Task_Sensor
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789     17B9                     _llabs:	
  4790                           ;psect for function _llabs
  4791                           
  4792     17B9                     l4821:	
  4793                           ;incstack = 0
  4794                           ; Regs used in _llabs: [wreg+status,2+status,0]
  4795                           
  4796     17B9  0020               	movlb	0	; select bank0
  4797     17BA  1BAB               	btfsc	llabs@a+7,7
  4798     17BB  2FD7               	goto	u4010
  4799     17BC  082B               	movf	llabs@a+7,w
  4800     17BD  1D03               	btfss	3,2
  4801     17BE  2FD6               	goto	u4011
  4802     17BF  082A               	movf	llabs@a+6,w
  4803     17C0  1D03               	btfss	3,2
  4804     17C1  2FD6               	goto	u4011
  4805     17C2  0829               	movf	llabs@a+5,w
  4806     17C3  1D03               	btfss	3,2
  4807     17C4  2FD6               	goto	u4011
  4808     17C5  0828               	movf	llabs@a+4,w
  4809     17C6  1D03               	btfss	3,2
  4810     17C7  2FD6               	goto	u4011
  4811     17C8  0827               	movf	llabs@a+3,w
  4812     17C9  1D03               	btfss	3,2
  4813     17CA  2FD6               	goto	u4011
  4814     17CB  0826               	movf	llabs@a+2,w
  4815     17CC  1D03               	btfss	3,2
  4816     17CD  2FD6               	goto	u4011
  4817     17CE  0825               	movf	llabs@a+1,w
  4818     17CF  1D03               	btfss	3,2
  4819     17D0  2FD6               	goto	u4011
  4820     17D1  3001               	movlw	1
  4821     17D2  0224               	subwf	llabs@a,w
  4822     17D3  1803               	btfsc	3,0
  4823     17D4  2FD6               	goto	u4011
  4824     17D5  2FD7               	goto	u4010
  4825     17D6                     u4011:
  4826     17D6  2FFF               	goto	l1628
  4827     17D7                     u4010:
  4828     17D7                     l4823:
  4829     17D7  0020               	movlb	0	; select bank0
  4830     17D8  0924               	comf	llabs@a,w
  4831     17D9  00A4               	movwf	?_llabs
  4832     17DA  0925               	comf	llabs@a+1,w
  4833     17DB  00A5               	movwf	?_llabs+1
  4834     17DC  0926               	comf	llabs@a+2,w
  4835     17DD  00A6               	movwf	?_llabs+2
  4836     17DE  0927               	comf	llabs@a+3,w
  4837     17DF  00A7               	movwf	?_llabs+3
  4838     17E0  0928               	comf	llabs@a+4,w
  4839     17E1  00A8               	movwf	?_llabs+4
  4840     17E2  0929               	comf	llabs@a+5,w
  4841     17E3  00A9               	movwf	?_llabs+5
  4842     17E4  092A               	comf	llabs@a+6,w
  4843     17E5  00AA               	movwf	?_llabs+6
  4844     17E6  092B               	comf	llabs@a+7,w
  4845     17E7  00AB               	movwf	?_llabs+7
  4846     17E8  0AA4               	incf	?_llabs,f
  4847     17E9  1D03               	skipz
  4848     17EA  2FFE               	goto	u402lld
  4849     17EB  0AA5               	incf	?_llabs+1,f
  4850     17EC  1D03               	skipz
  4851     17ED  2FFE               	goto	u402lld
  4852     17EE  0AA6               	incf	?_llabs+2,f
  4853     17EF  1D03               	skipz
  4854     17F0  2FFE               	goto	u402lld
  4855     17F1  0AA7               	incf	?_llabs+3,f
  4856     17F2  1D03               	skipz
  4857     17F3  2FFE               	goto	u402lld
  4858     17F4  0AA8               	incf	?_llabs+4,f
  4859     17F5  1D03               	skipz
  4860     17F6  2FFE               	goto	u402lld
  4861     17F7  0AA9               	incf	?_llabs+5,f
  4862     17F8  1D03               	skipz
  4863     17F9  2FFE               	goto	u402lld
  4864     17FA  0AAA               	incf	?_llabs+6,f
  4865     17FB  1D03               	skipz
  4866     17FC  2FFE               	goto	u402lld
  4867     17FD  0AAB               	incf	?_llabs+7,f
  4868     17FE                     u402lld:
  4869     17FE  2FFF               	goto	l1631
  4870     17FF                     l1628:
  4871     17FF                     l1631:
  4872     17FF  0008               	return
  4873     1800                     __end_of_llabs:
  4874                           
  4875                           	psect	text16
  4876     02D1                     __ptext16:	
  4877 ;; *************** function _ReadData *****************
  4878 ;; Defined at:
  4879 ;;		line 26 in file "I2C_SHT30.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  aData           6   21[BANK1 ] unsigned char [6]
  4884 ;;  humidity        4   31[BANK1 ] unsigned char [6]
  4885 ;;  ctemp           4   27[BANK1 ] unsigned char [6]
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4895 ;;      Params:         0       0       0       0       0       0       0       0
  4896 ;;      Locals:         0       0      22       0       0       0       0       0
  4897 ;;      Temps:          0       0       8       0       0       0       0       0
  4898 ;;      Totals:         0       0      30       0       0       0       0       0
  4899 ;;Total ram usage:       30 bytes
  4900 ;; Hardware stack levels used: 1
  4901 ;; Hardware stack levels required when called: 11
  4902 ;; This function calls:
  4903 ;;		_I2C_ReadNBytes
  4904 ;;		_I2C_WriteNBytes
  4905 ;;		___fladd
  4906 ;;		___fldiv
  4907 ;;		___flmul
  4908 ;;		___fltol
  4909 ;;		___xxtofl
  4910 ;; This function is called by:
  4911 ;;		_Task_Sensor
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915     02D1                     _ReadData:	
  4916                           ;psect for function _ReadData
  4917                           
  4918     02D1                     l5595:	
  4919                           ;incstack = 0
  4920                           ; Regs used in _ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4921                           
  4922                           
  4923                           ;I2C_SHT30.c: 27:     uint8_t aData[6];;I2C_SHT30.c: 29:     SensorAmbient.T.Val16 = 0;
  4924     02D1  0021               	movlb	1	; select bank1
  4925     02D2  01DB               	clrf	_SensorAmbient^(0+128)
  4926     02D3  01DC               	clrf	(_SensorAmbient+1)^(0+128)
  4927                           
  4928                           ;I2C_SHT30.c: 30:     SensorAmbient.H.Val16 = 0;
  4929     02D4  01DD               	clrf	(_SensorAmbient^(0+128)+2)
  4930     02D5  01DE               	clrf	((_SensorAmbient+1)^(0+128)+2)
  4931     02D6                     l5597:
  4932                           
  4933                           ;I2C_SHT30.c: 31:     I2C_WriteNBytes(0x44, SHT30_CMD_MEASURE_H_Enable, 2);
  4934     02D6  3068               	movlw	(low (_SHT30_CMD_MEASURE_H_Enable| (0+256)))& (0+255)
  4935     02D7  0020               	movlb	0	; select bank0
  4936     02D8  00A8               	movwf	I2C_WriteNBytes@data
  4937     02D9  3002               	movlw	2
  4938     02DA  00A9               	movwf	I2C_WriteNBytes@len
  4939     02DB  3000               	movlw	0
  4940     02DC  00AA               	movwf	I2C_WriteNBytes@len+1
  4941     02DD  3044               	movlw	68
  4942     02DE  3188  200D  3182   	fcall	_I2C_WriteNBytes
  4943     02E1                     l5599:
  4944                           
  4945                           ;I2C_SHT30.c: 35:     I2C_ReadNBytes(0x44, aData, 6);
  4946     02E1  30B5               	movlw	(low (ReadData@aData| 0))& (0+255)
  4947     02E2  0020               	movlb	0	; select bank0
  4948     02E3  00A4               	movwf	I2C_ReadNBytes@data
  4949     02E4  3006               	movlw	6
  4950     02E5  00A5               	movwf	I2C_ReadNBytes@len
  4951     02E6  3000               	movlw	0
  4952     02E7  00A6               	movwf	I2C_ReadNBytes@len+1
  4953     02E8  3044               	movlw	68
  4954     02E9  3195  2558  3182   	fcall	_I2C_ReadNBytes
  4955     02EC                     l5601:
  4956                           
  4957                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  4958     02EC  0021               	movlb	1	; select bank1
  4959     02ED  0836               	movf	(ReadData@aData^(0+128)+1),w
  4960     02EE  00AD               	movwf	??_ReadData^(0+128)
  4961     02EF  01AE               	clrf	(??_ReadData^(0+128)+1)
  4962     02F0  01AF               	clrf	(??_ReadData^(0+128)+2)
  4963     02F1  01B0               	clrf	(??_ReadData^(0+128)+3)
  4964     02F2  0830               	movf	(??_ReadData+3)^(0+128),w
  4965     02F3  0020               	movlb	0	; select bank0
  4966     02F4  00A3               	movwf	___xxtofl@val+3
  4967     02F5  0021               	movlb	1	; select bank1
  4968     02F6  082F               	movf	(??_ReadData+2)^(0+128),w
  4969     02F7  0020               	movlb	0	; select bank0
  4970     02F8  00A2               	movwf	___xxtofl@val+2
  4971     02F9  0021               	movlb	1	; select bank1
  4972     02FA  082E               	movf	(??_ReadData+1)^(0+128),w
  4973     02FB  0020               	movlb	0	; select bank0
  4974     02FC  00A1               	movwf	___xxtofl@val+1
  4975     02FD  0021               	movlb	1	; select bank1
  4976     02FE  082D               	movf	??_ReadData^(0+128),w
  4977     02FF  0020               	movlb	0	; select bank0
  4978     0300  00A0               	movwf	___xxtofl@val
  4979     0301  3001               	movlw	1
  4980     0302  318C  2485  3182   	fcall	___xxtofl
  4981     0305  0020               	movlb	0	; select bank0
  4982     0306  0823               	movf	?___xxtofl+3,w
  4983     0307  00CB               	movwf	___fladd@b+3
  4984     0308  0822               	movf	?___xxtofl+2,w
  4985     0309  00CA               	movwf	___fladd@b+2
  4986     030A  0821               	movf	?___xxtofl+1,w
  4987     030B  00C9               	movwf	___fladd@b+1
  4988     030C  0820               	movf	?___xxtofl,w
  4989     030D  00C8               	movwf	___fladd@b
  4990     030E  3043               	movlw	67
  4991     030F  00B1               	movwf	___flmul@b+3
  4992     0310  3080               	movlw	128
  4993     0311  00B0               	movwf	___flmul@b+2
  4994     0312  3000               	movlw	0
  4995     0313  00AF               	movwf	___flmul@b+1
  4996     0314  3000               	movlw	0
  4997     0315  00AE               	movwf	___flmul@b
  4998     0316  0021               	movlb	1	; select bank1
  4999     0317  0835               	movf	ReadData@aData^(0+128),w
  5000     0318  00B1               	movwf	(??_ReadData+4)^(0+128)
  5001     0319  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5002     031A  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5003     031B  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5004     031C  0834               	movf	(??_ReadData+7)^(0+128),w
  5005     031D  0020               	movlb	0	; select bank0
  5006     031E  00A3               	movwf	___xxtofl@val+3
  5007     031F  0021               	movlb	1	; select bank1
  5008     0320  0833               	movf	(??_ReadData+6)^(0+128),w
  5009     0321  0020               	movlb	0	; select bank0
  5010     0322  00A2               	movwf	___xxtofl@val+2
  5011     0323  0021               	movlb	1	; select bank1
  5012     0324  0832               	movf	(??_ReadData+5)^(0+128),w
  5013     0325  0020               	movlb	0	; select bank0
  5014     0326  00A1               	movwf	___xxtofl@val+1
  5015     0327  0021               	movlb	1	; select bank1
  5016     0328  0831               	movf	(??_ReadData+4)^(0+128),w
  5017     0329  0020               	movlb	0	; select bank0
  5018     032A  00A0               	movwf	___xxtofl@val
  5019     032B  3001               	movlw	1
  5020     032C  318C  2485  3182   	fcall	___xxtofl
  5021     032F  0020               	movlb	0	; select bank0
  5022     0330  0823               	movf	?___xxtofl+3,w
  5023     0331  00B5               	movwf	___flmul@a+3
  5024     0332  0822               	movf	?___xxtofl+2,w
  5025     0333  00B4               	movwf	___flmul@a+2
  5026     0334  0821               	movf	?___xxtofl+1,w
  5027     0335  00B3               	movwf	___flmul@a+1
  5028     0336  0820               	movf	?___xxtofl,w
  5029     0337  00B2               	movwf	___flmul@a
  5030     0338  3180  2096  3182   	fcall	___flmul
  5031     033B  0020               	movlb	0	; select bank0
  5032     033C  0831               	movf	?___flmul+3,w
  5033     033D  00CF               	movwf	___fladd@a+3
  5034     033E  0830               	movf	?___flmul+2,w
  5035     033F  00CE               	movwf	___fladd@a+2
  5036     0340  082F               	movf	?___flmul+1,w
  5037     0341  00CD               	movwf	___fladd@a+1
  5038     0342  082E               	movf	?___flmul,w
  5039     0343  00CC               	movwf	___fladd@a
  5040     0344  3184  24E2  3182   	fcall	___fladd
  5041     0347  0020               	movlb	0	; select bank0
  5042     0348  084B               	movf	?___fladd+3,w
  5043     0349  0021               	movlb	1	; select bank1
  5044     034A  00C6               	movwf	(_ReadData$2418+3)^(0+128)
  5045     034B  0020               	movlb	0	; select bank0
  5046     034C  084A               	movf	?___fladd+2,w
  5047     034D  0021               	movlb	1	; select bank1
  5048     034E  00C5               	movwf	(_ReadData$2418+2)^(0+128)
  5049     034F  0020               	movlb	0	; select bank0
  5050     0350  0849               	movf	?___fladd+1,w
  5051     0351  0021               	movlb	1	; select bank1
  5052     0352  00C4               	movwf	(_ReadData$2418+1)^(0+128)
  5053     0353  0020               	movlb	0	; select bank0
  5054     0354  0848               	movf	?___fladd,w
  5055     0355  0021               	movlb	1	; select bank1
  5056     0356  00C3               	movwf	_ReadData$2418^(0+128)
  5057     0357                     l5603:
  5058                           
  5059                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5060     0357  30C2               	movlw	194
  5061     0358  0020               	movlb	0	; select bank0
  5062     0359  00CB               	movwf	___fladd@b+3
  5063     035A  3034               	movlw	52
  5064     035B  00CA               	movwf	___fladd@b+2
  5065     035C  3000               	movlw	0
  5066     035D  00C9               	movwf	___fladd@b+1
  5067     035E  3000               	movlw	0
  5068     035F  00C8               	movwf	___fladd@b
  5069     0360  3047               	movlw	71
  5070     0361  00DF               	movwf	___fldiv@a+3
  5071     0362  307F               	movlw	127
  5072     0363  00DE               	movwf	___fldiv@a+2
  5073     0364  30FF               	movlw	255
  5074     0365  00DD               	movwf	___fldiv@a+1
  5075     0366  3000               	movlw	0
  5076     0367  00DC               	movwf	___fldiv@a
  5077     0368  3043               	movlw	67
  5078     0369  00B1               	movwf	___flmul@b+3
  5079     036A  302F               	movlw	47
  5080     036B  00B0               	movwf	___flmul@b+2
  5081     036C  3000               	movlw	0
  5082     036D  00AF               	movwf	___flmul@b+1
  5083     036E  3000               	movlw	0
  5084     036F  00AE               	movwf	___flmul@b
  5085     0370  0021               	movlb	1	; select bank1
  5086     0371  0846               	movf	(_ReadData$2418+3)^(0+128),w
  5087     0372  0020               	movlb	0	; select bank0
  5088     0373  00B5               	movwf	___flmul@a+3
  5089     0374  0021               	movlb	1	; select bank1
  5090     0375  0845               	movf	(_ReadData$2418+2)^(0+128),w
  5091     0376  0020               	movlb	0	; select bank0
  5092     0377  00B4               	movwf	___flmul@a+2
  5093     0378  0021               	movlb	1	; select bank1
  5094     0379  0844               	movf	(_ReadData$2418+1)^(0+128),w
  5095     037A  0020               	movlb	0	; select bank0
  5096     037B  00B3               	movwf	___flmul@a+1
  5097     037C  0021               	movlb	1	; select bank1
  5098     037D  0843               	movf	_ReadData$2418^(0+128),w
  5099     037E  0020               	movlb	0	; select bank0
  5100     037F  00B2               	movwf	___flmul@a
  5101     0380  3180  2096  3182   	fcall	___flmul
  5102     0383  0020               	movlb	0	; select bank0
  5103     0384  0831               	movf	?___flmul+3,w
  5104     0385  00E3               	movwf	___fldiv@b+3
  5105     0386  0830               	movf	?___flmul+2,w
  5106     0387  00E2               	movwf	___fldiv@b+2
  5107     0388  082F               	movf	?___flmul+1,w
  5108     0389  00E1               	movwf	___fldiv@b+1
  5109     038A  082E               	movf	?___flmul,w
  5110     038B  00E0               	movwf	___fldiv@b
  5111     038C  318D  25FC  3182   	fcall	___fldiv
  5112     038F  0020               	movlb	0	; select bank0
  5113     0390  085F               	movf	?___fldiv+3,w
  5114     0391  00CF               	movwf	___fladd@a+3
  5115     0392  085E               	movf	?___fldiv+2,w
  5116     0393  00CE               	movwf	___fladd@a+2
  5117     0394  085D               	movf	?___fldiv+1,w
  5118     0395  00CD               	movwf	___fladd@a+1
  5119     0396  085C               	movf	?___fldiv,w
  5120     0397  00CC               	movwf	___fladd@a
  5121     0398  3184  24E2  3182   	fcall	___fladd
  5122     039B  0020               	movlb	0	; select bank0
  5123     039C  084B               	movf	?___fladd+3,w
  5124     039D  0021               	movlb	1	; select bank1
  5125     039E  00CA               	movwf	(_ReadData$2419+3)^(0+128)
  5126     039F  0020               	movlb	0	; select bank0
  5127     03A0  084A               	movf	?___fladd+2,w
  5128     03A1  0021               	movlb	1	; select bank1
  5129     03A2  00C9               	movwf	(_ReadData$2419+2)^(0+128)
  5130     03A3  0020               	movlb	0	; select bank0
  5131     03A4  0849               	movf	?___fladd+1,w
  5132     03A5  0021               	movlb	1	; select bank1
  5133     03A6  00C8               	movwf	(_ReadData$2419+1)^(0+128)
  5134     03A7  0020               	movlb	0	; select bank0
  5135     03A8  0848               	movf	?___fladd,w
  5136     03A9  0021               	movlb	1	; select bank1
  5137     03AA  00C7               	movwf	_ReadData$2419^(0+128)
  5138     03AB                     l5605:
  5139                           
  5140                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5141     03AB  3041               	movlw	65
  5142     03AC  0020               	movlb	0	; select bank0
  5143     03AD  00B1               	movwf	___flmul@b+3
  5144     03AE  3020               	movlw	32
  5145     03AF  00B0               	movwf	___flmul@b+2
  5146     03B0  3000               	movlw	0
  5147     03B1  00AF               	movwf	___flmul@b+1
  5148     03B2  3000               	movlw	0
  5149     03B3  00AE               	movwf	___flmul@b
  5150     03B4  0021               	movlb	1	; select bank1
  5151     03B5  084A               	movf	(_ReadData$2419+3)^(0+128),w
  5152     03B6  0020               	movlb	0	; select bank0
  5153     03B7  00B5               	movwf	___flmul@a+3
  5154     03B8  0021               	movlb	1	; select bank1
  5155     03B9  0849               	movf	(_ReadData$2419+2)^(0+128),w
  5156     03BA  0020               	movlb	0	; select bank0
  5157     03BB  00B4               	movwf	___flmul@a+2
  5158     03BC  0021               	movlb	1	; select bank1
  5159     03BD  0848               	movf	(_ReadData$2419+1)^(0+128),w
  5160     03BE  0020               	movlb	0	; select bank0
  5161     03BF  00B3               	movwf	___flmul@a+1
  5162     03C0  0021               	movlb	1	; select bank1
  5163     03C1  0847               	movf	_ReadData$2419^(0+128),w
  5164     03C2  0020               	movlb	0	; select bank0
  5165     03C3  00B2               	movwf	___flmul@a
  5166     03C4  3180  2096  3182   	fcall	___flmul
  5167     03C7  0020               	movlb	0	; select bank0
  5168     03C8  0831               	movf	?___flmul+3,w
  5169     03C9  0021               	movlb	1	; select bank1
  5170     03CA  00BE               	movwf	(ReadData@ctemp+3)^(0+128)
  5171     03CB  0020               	movlb	0	; select bank0
  5172     03CC  0830               	movf	?___flmul+2,w
  5173     03CD  0021               	movlb	1	; select bank1
  5174     03CE  00BD               	movwf	(ReadData@ctemp+2)^(0+128)
  5175     03CF  0020               	movlb	0	; select bank0
  5176     03D0  082F               	movf	?___flmul+1,w
  5177     03D1  0021               	movlb	1	; select bank1
  5178     03D2  00BC               	movwf	(ReadData@ctemp+1)^(0+128)
  5179     03D3  0020               	movlb	0	; select bank0
  5180     03D4  082E               	movf	?___flmul,w
  5181     03D5  0021               	movlb	1	; select bank1
  5182     03D6  00BB               	movwf	ReadData@ctemp^(0+128)
  5183     03D7                     l5607:
  5184                           
  5185                           ;I2C_SHT30.c: 40:     SensorAmbient.T.Val16 = (uint16_t) ctemp;
  5186     03D7  083E               	movf	(ReadData@ctemp+3)^(0+128),w
  5187     03D8  0020               	movlb	0	; select bank0
  5188     03D9  00A3               	movwf	___fltol@f1+3
  5189     03DA  0021               	movlb	1	; select bank1
  5190     03DB  083D               	movf	(ReadData@ctemp+2)^(0+128),w
  5191     03DC  0020               	movlb	0	; select bank0
  5192     03DD  00A2               	movwf	___fltol@f1+2
  5193     03DE  0021               	movlb	1	; select bank1
  5194     03DF  083C               	movf	(ReadData@ctemp+1)^(0+128),w
  5195     03E0  0020               	movlb	0	; select bank0
  5196     03E1  00A1               	movwf	___fltol@f1+1
  5197     03E2  0021               	movlb	1	; select bank1
  5198     03E3  083B               	movf	ReadData@ctemp^(0+128),w
  5199     03E4  0020               	movlb	0	; select bank0
  5200     03E5  00A0               	movwf	___fltol@f1
  5201     03E6  318A  2254  3182   	fcall	___fltol
  5202     03E9  0020               	movlb	0	; select bank0
  5203     03EA  0821               	movf	?___fltol+1,w
  5204     03EB  0021               	movlb	1	; select bank1
  5205     03EC  00DC               	movwf	(_SensorAmbient+1)^(0+128)
  5206     03ED  0020               	movlb	0	; select bank0
  5207     03EE  0820               	movf	?___fltol,w
  5208     03EF  0021               	movlb	1	; select bank1
  5209     03F0  00DB               	movwf	_SensorAmbient^(0+128)
  5210     03F1                     l5609:
  5211                           
  5212                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5213     03F1  0839               	movf	(ReadData@aData^(0+128)+4),w
  5214     03F2  00AD               	movwf	??_ReadData^(0+128)
  5215     03F3  01AE               	clrf	(??_ReadData^(0+128)+1)
  5216     03F4  01AF               	clrf	(??_ReadData^(0+128)+2)
  5217     03F5  01B0               	clrf	(??_ReadData^(0+128)+3)
  5218     03F6  0830               	movf	(??_ReadData+3)^(0+128),w
  5219     03F7  0020               	movlb	0	; select bank0
  5220     03F8  00A3               	movwf	___xxtofl@val+3
  5221     03F9  0021               	movlb	1	; select bank1
  5222     03FA  082F               	movf	(??_ReadData+2)^(0+128),w
  5223     03FB  0020               	movlb	0	; select bank0
  5224     03FC  00A2               	movwf	___xxtofl@val+2
  5225     03FD  0021               	movlb	1	; select bank1
  5226     03FE  082E               	movf	(??_ReadData+1)^(0+128),w
  5227     03FF  0020               	movlb	0	; select bank0
  5228     0400  00A1               	movwf	___xxtofl@val+1
  5229     0401  0021               	movlb	1	; select bank1
  5230     0402  082D               	movf	??_ReadData^(0+128),w
  5231     0403  0020               	movlb	0	; select bank0
  5232     0404  00A0               	movwf	___xxtofl@val
  5233     0405  3001               	movlw	1
  5234     0406  318C  2485  3182   	fcall	___xxtofl
  5235     0409  0020               	movlb	0	; select bank0
  5236     040A  0823               	movf	?___xxtofl+3,w
  5237     040B  00CB               	movwf	___fladd@b+3
  5238     040C  0822               	movf	?___xxtofl+2,w
  5239     040D  00CA               	movwf	___fladd@b+2
  5240     040E  0821               	movf	?___xxtofl+1,w
  5241     040F  00C9               	movwf	___fladd@b+1
  5242     0410  0820               	movf	?___xxtofl,w
  5243     0411  00C8               	movwf	___fladd@b
  5244     0412  3043               	movlw	67
  5245     0413  00B1               	movwf	___flmul@b+3
  5246     0414  3080               	movlw	128
  5247     0415  00B0               	movwf	___flmul@b+2
  5248     0416  3000               	movlw	0
  5249     0417  00AF               	movwf	___flmul@b+1
  5250     0418  3000               	movlw	0
  5251     0419  00AE               	movwf	___flmul@b
  5252     041A  0021               	movlb	1	; select bank1
  5253     041B  0838               	movf	(ReadData@aData^(0+128)+3),w
  5254     041C  00B1               	movwf	(??_ReadData+4)^(0+128)
  5255     041D  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5256     041E  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5257     041F  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5258     0420  0834               	movf	(??_ReadData+7)^(0+128),w
  5259     0421  0020               	movlb	0	; select bank0
  5260     0422  00A3               	movwf	___xxtofl@val+3
  5261     0423  0021               	movlb	1	; select bank1
  5262     0424  0833               	movf	(??_ReadData+6)^(0+128),w
  5263     0425  0020               	movlb	0	; select bank0
  5264     0426  00A2               	movwf	___xxtofl@val+2
  5265     0427  0021               	movlb	1	; select bank1
  5266     0428  0832               	movf	(??_ReadData+5)^(0+128),w
  5267     0429  0020               	movlb	0	; select bank0
  5268     042A  00A1               	movwf	___xxtofl@val+1
  5269     042B  0021               	movlb	1	; select bank1
  5270     042C  0831               	movf	(??_ReadData+4)^(0+128),w
  5271     042D  0020               	movlb	0	; select bank0
  5272     042E  00A0               	movwf	___xxtofl@val
  5273     042F  3001               	movlw	1
  5274     0430  318C  2485  3182   	fcall	___xxtofl
  5275     0433  0020               	movlb	0	; select bank0
  5276     0434  0823               	movf	?___xxtofl+3,w
  5277     0435  00B5               	movwf	___flmul@a+3
  5278     0436  0822               	movf	?___xxtofl+2,w
  5279     0437  00B4               	movwf	___flmul@a+2
  5280     0438  0821               	movf	?___xxtofl+1,w
  5281     0439  00B3               	movwf	___flmul@a+1
  5282     043A  0820               	movf	?___xxtofl,w
  5283     043B  00B2               	movwf	___flmul@a
  5284     043C  3180  2096  3182   	fcall	___flmul
  5285     043F  0020               	movlb	0	; select bank0
  5286     0440  0831               	movf	?___flmul+3,w
  5287     0441  00CF               	movwf	___fladd@a+3
  5288     0442  0830               	movf	?___flmul+2,w
  5289     0443  00CE               	movwf	___fladd@a+2
  5290     0444  082F               	movf	?___flmul+1,w
  5291     0445  00CD               	movwf	___fladd@a+1
  5292     0446  082E               	movf	?___flmul,w
  5293     0447  00CC               	movwf	___fladd@a
  5294     0448  3184  24E2  3182   	fcall	___fladd
  5295     044B  0020               	movlb	0	; select bank0
  5296     044C  084B               	movf	?___fladd+3,w
  5297     044D  0021               	movlb	1	; select bank1
  5298     044E  00C6               	movwf	(_ReadData$2418+3)^(0+128)
  5299     044F  0020               	movlb	0	; select bank0
  5300     0450  084A               	movf	?___fladd+2,w
  5301     0451  0021               	movlb	1	; select bank1
  5302     0452  00C5               	movwf	(_ReadData$2418+2)^(0+128)
  5303     0453  0020               	movlb	0	; select bank0
  5304     0454  0849               	movf	?___fladd+1,w
  5305     0455  0021               	movlb	1	; select bank1
  5306     0456  00C4               	movwf	(_ReadData$2418+1)^(0+128)
  5307     0457  0020               	movlb	0	; select bank0
  5308     0458  0848               	movf	?___fladd,w
  5309     0459  0021               	movlb	1	; select bank1
  5310     045A  00C3               	movwf	_ReadData$2418^(0+128)
  5311     045B                     l5611:
  5312                           
  5313                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5314     045B  3047               	movlw	71
  5315     045C  0020               	movlb	0	; select bank0
  5316     045D  00DF               	movwf	___fldiv@a+3
  5317     045E  307F               	movlw	127
  5318     045F  00DE               	movwf	___fldiv@a+2
  5319     0460  30FF               	movlw	255
  5320     0461  00DD               	movwf	___fldiv@a+1
  5321     0462  3000               	movlw	0
  5322     0463  00DC               	movwf	___fldiv@a
  5323     0464  3042               	movlw	66
  5324     0465  00B1               	movwf	___flmul@b+3
  5325     0466  30C8               	movlw	200
  5326     0467  00B0               	movwf	___flmul@b+2
  5327     0468  3000               	movlw	0
  5328     0469  00AF               	movwf	___flmul@b+1
  5329     046A  3000               	movlw	0
  5330     046B  00AE               	movwf	___flmul@b
  5331     046C  0021               	movlb	1	; select bank1
  5332     046D  0846               	movf	(_ReadData$2418+3)^(0+128),w
  5333     046E  0020               	movlb	0	; select bank0
  5334     046F  00B5               	movwf	___flmul@a+3
  5335     0470  0021               	movlb	1	; select bank1
  5336     0471  0845               	movf	(_ReadData$2418+2)^(0+128),w
  5337     0472  0020               	movlb	0	; select bank0
  5338     0473  00B4               	movwf	___flmul@a+2
  5339     0474  0021               	movlb	1	; select bank1
  5340     0475  0844               	movf	(_ReadData$2418+1)^(0+128),w
  5341     0476  0020               	movlb	0	; select bank0
  5342     0477  00B3               	movwf	___flmul@a+1
  5343     0478  0021               	movlb	1	; select bank1
  5344     0479  0843               	movf	_ReadData$2418^(0+128),w
  5345     047A  0020               	movlb	0	; select bank0
  5346     047B  00B2               	movwf	___flmul@a
  5347     047C  3180  2096  3182   	fcall	___flmul
  5348     047F  0020               	movlb	0	; select bank0
  5349     0480  0831               	movf	?___flmul+3,w
  5350     0481  00E3               	movwf	___fldiv@b+3
  5351     0482  0830               	movf	?___flmul+2,w
  5352     0483  00E2               	movwf	___fldiv@b+2
  5353     0484  082F               	movf	?___flmul+1,w
  5354     0485  00E1               	movwf	___fldiv@b+1
  5355     0486  082E               	movf	?___flmul,w
  5356     0487  00E0               	movwf	___fldiv@b
  5357     0488  318D  25FC  3182   	fcall	___fldiv
  5358     048B  0020               	movlb	0	; select bank0
  5359     048C  085F               	movf	?___fldiv+3,w
  5360     048D  0021               	movlb	1	; select bank1
  5361     048E  00CA               	movwf	(_ReadData$2419+3)^(0+128)
  5362     048F  0020               	movlb	0	; select bank0
  5363     0490  085E               	movf	?___fldiv+2,w
  5364     0491  0021               	movlb	1	; select bank1
  5365     0492  00C9               	movwf	(_ReadData$2419+2)^(0+128)
  5366     0493  0020               	movlb	0	; select bank0
  5367     0494  085D               	movf	?___fldiv+1,w
  5368     0495  0021               	movlb	1	; select bank1
  5369     0496  00C8               	movwf	(_ReadData$2419+1)^(0+128)
  5370     0497  0020               	movlb	0	; select bank0
  5371     0498  085C               	movf	?___fldiv,w
  5372     0499  0021               	movlb	1	; select bank1
  5373     049A  00C7               	movwf	_ReadData$2419^(0+128)
  5374     049B                     l5613:
  5375                           
  5376                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5377     049B  3041               	movlw	65
  5378     049C  0020               	movlb	0	; select bank0
  5379     049D  00B1               	movwf	___flmul@b+3
  5380     049E  3020               	movlw	32
  5381     049F  00B0               	movwf	___flmul@b+2
  5382     04A0  3000               	movlw	0
  5383     04A1  00AF               	movwf	___flmul@b+1
  5384     04A2  3000               	movlw	0
  5385     04A3  00AE               	movwf	___flmul@b
  5386     04A4  0021               	movlb	1	; select bank1
  5387     04A5  084A               	movf	(_ReadData$2419+3)^(0+128),w
  5388     04A6  0020               	movlb	0	; select bank0
  5389     04A7  00B5               	movwf	___flmul@a+3
  5390     04A8  0021               	movlb	1	; select bank1
  5391     04A9  0849               	movf	(_ReadData$2419+2)^(0+128),w
  5392     04AA  0020               	movlb	0	; select bank0
  5393     04AB  00B4               	movwf	___flmul@a+2
  5394     04AC  0021               	movlb	1	; select bank1
  5395     04AD  0848               	movf	(_ReadData$2419+1)^(0+128),w
  5396     04AE  0020               	movlb	0	; select bank0
  5397     04AF  00B3               	movwf	___flmul@a+1
  5398     04B0  0021               	movlb	1	; select bank1
  5399     04B1  0847               	movf	_ReadData$2419^(0+128),w
  5400     04B2  0020               	movlb	0	; select bank0
  5401     04B3  00B2               	movwf	___flmul@a
  5402     04B4  3180  2096  3182   	fcall	___flmul
  5403     04B7  0020               	movlb	0	; select bank0
  5404     04B8  0831               	movf	?___flmul+3,w
  5405     04B9  0021               	movlb	1	; select bank1
  5406     04BA  00C2               	movwf	(ReadData@humidity+3)^(0+128)
  5407     04BB  0020               	movlb	0	; select bank0
  5408     04BC  0830               	movf	?___flmul+2,w
  5409     04BD  0021               	movlb	1	; select bank1
  5410     04BE  00C1               	movwf	(ReadData@humidity+2)^(0+128)
  5411     04BF  0020               	movlb	0	; select bank0
  5412     04C0  082F               	movf	?___flmul+1,w
  5413     04C1  0021               	movlb	1	; select bank1
  5414     04C2  00C0               	movwf	(ReadData@humidity+1)^(0+128)
  5415     04C3  0020               	movlb	0	; select bank0
  5416     04C4  082E               	movf	?___flmul,w
  5417     04C5  0021               	movlb	1	; select bank1
  5418     04C6  00BF               	movwf	ReadData@humidity^(0+128)
  5419     04C7                     l5615:
  5420                           
  5421                           ;I2C_SHT30.c: 45:     SensorAmbient.H.Val16 = (uint16_t) humidity;
  5422     04C7  0842               	movf	(ReadData@humidity+3)^(0+128),w
  5423     04C8  0020               	movlb	0	; select bank0
  5424     04C9  00A3               	movwf	___fltol@f1+3
  5425     04CA  0021               	movlb	1	; select bank1
  5426     04CB  0841               	movf	(ReadData@humidity+2)^(0+128),w
  5427     04CC  0020               	movlb	0	; select bank0
  5428     04CD  00A2               	movwf	___fltol@f1+2
  5429     04CE  0021               	movlb	1	; select bank1
  5430     04CF  0840               	movf	(ReadData@humidity+1)^(0+128),w
  5431     04D0  0020               	movlb	0	; select bank0
  5432     04D1  00A1               	movwf	___fltol@f1+1
  5433     04D2  0021               	movlb	1	; select bank1
  5434     04D3  083F               	movf	ReadData@humidity^(0+128),w
  5435     04D4  0020               	movlb	0	; select bank0
  5436     04D5  00A0               	movwf	___fltol@f1
  5437     04D6  318A  2254  3182   	fcall	___fltol
  5438     04D9  0020               	movlb	0	; select bank0
  5439     04DA  0821               	movf	?___fltol+1,w
  5440     04DB  0021               	movlb	1	; select bank1
  5441     04DC  00DE               	movwf	((_SensorAmbient+1)^(0+128)+2)
  5442     04DD  0020               	movlb	0	; select bank0
  5443     04DE  0820               	movf	?___fltol,w
  5444     04DF  0021               	movlb	1	; select bank1
  5445     04E0  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  5446     04E1                     l822:
  5447     04E1  0008               	return
  5448     04E2                     __end_of_ReadData:
  5449                           
  5450                           	psect	text17
  5451     0C85                     __ptext17:	
  5452 ;; *************** function ___xxtofl *****************
  5453 ;; Defined at:
  5454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  sign            1    wreg     unsigned char 
  5457 ;;  val             4    0[BANK0 ] long 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  sign            1    8[BANK0 ] unsigned char 
  5460 ;;  arg             4   10[BANK0 ] unsigned long 
  5461 ;;  exp             1    9[BANK0 ] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  4    0[BANK0 ] unsigned char 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5471 ;;      Params:         0       4       0       0       0       0       0       0
  5472 ;;      Locals:         0       6       0       0       0       0       0       0
  5473 ;;      Temps:          0       4       0       0       0       0       0       0
  5474 ;;      Totals:         0      14       0       0       0       0       0       0
  5475 ;;Total ram usage:       14 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 7
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_ReadData
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485     0C85                     ___xxtofl:	
  5486                           ;psect for function ___xxtofl
  5487                           
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5491                           ;___xxtofl@sign stored from wreg
  5492     0C85  0020               	movlb	0	; select bank0
  5493     0C86  00A8               	movwf	___xxtofl@sign
  5494     0C87                     l4573:
  5495     0C87  0828               	movf	___xxtofl@sign,w
  5496     0C88  1903               	btfsc	3,2
  5497     0C89  2C8B               	goto	u3831
  5498     0C8A  2C8C               	goto	u3830
  5499     0C8B                     u3831:
  5500     0C8B  2CA0               	goto	l4579
  5501     0C8C                     u3830:
  5502     0C8C                     l4575:
  5503     0C8C  1FA3               	btfss	___xxtofl@val+3,7
  5504     0C8D  2C8F               	goto	u3841
  5505     0C8E  2C90               	goto	u3840
  5506     0C8F                     u3841:
  5507     0C8F  2CA0               	goto	l4579
  5508     0C90                     u3840:
  5509     0C90                     l4577:
  5510     0C90  0920               	comf	___xxtofl@val,w
  5511     0C91  00AA               	movwf	___xxtofl@arg
  5512     0C92  0921               	comf	___xxtofl@val+1,w
  5513     0C93  00AB               	movwf	___xxtofl@arg+1
  5514     0C94  0922               	comf	___xxtofl@val+2,w
  5515     0C95  00AC               	movwf	___xxtofl@arg+2
  5516     0C96  0923               	comf	___xxtofl@val+3,w
  5517     0C97  00AD               	movwf	___xxtofl@arg+3
  5518     0C98  0AAA               	incf	___xxtofl@arg,f
  5519     0C99  1903               	skipnz
  5520     0C9A  0AAB               	incf	___xxtofl@arg+1,f
  5521     0C9B  1903               	skipnz
  5522     0C9C  0AAC               	incf	___xxtofl@arg+2,f
  5523     0C9D  1903               	skipnz
  5524     0C9E  0AAD               	incf	___xxtofl@arg+3,f
  5525     0C9F  2CA8               	goto	l1609
  5526     0CA0                     l4579:
  5527     0CA0  0823               	movf	___xxtofl@val+3,w
  5528     0CA1  00AD               	movwf	___xxtofl@arg+3
  5529     0CA2  0822               	movf	___xxtofl@val+2,w
  5530     0CA3  00AC               	movwf	___xxtofl@arg+2
  5531     0CA4  0821               	movf	___xxtofl@val+1,w
  5532     0CA5  00AB               	movwf	___xxtofl@arg+1
  5533     0CA6  0820               	movf	___xxtofl@val,w
  5534     0CA7  00AA               	movwf	___xxtofl@arg
  5535     0CA8                     l1609:
  5536     0CA8  0823               	movf	___xxtofl@val+3,w
  5537     0CA9  0422               	iorwf	___xxtofl@val+2,w
  5538     0CAA  0421               	iorwf	___xxtofl@val+1,w
  5539     0CAB  0420               	iorwf	___xxtofl@val,w
  5540     0CAC  1D03               	skipz
  5541     0CAD  2CAF               	goto	u3851
  5542     0CAE  2CB0               	goto	u3850
  5543     0CAF                     u3851:
  5544     0CAF  2CB9               	goto	l4585
  5545     0CB0                     u3850:
  5546     0CB0                     l4581:
  5547     0CB0  3000               	movlw	0
  5548     0CB1  00A3               	movwf	?___xxtofl+3
  5549     0CB2  3000               	movlw	0
  5550     0CB3  00A2               	movwf	?___xxtofl+2
  5551     0CB4  3000               	movlw	0
  5552     0CB5  00A1               	movwf	?___xxtofl+1
  5553     0CB6  3000               	movlw	0
  5554     0CB7  00A0               	movwf	?___xxtofl
  5555     0CB8  2D2F               	goto	l1611
  5556     0CB9                     l4585:
  5557     0CB9  3096               	movlw	150
  5558     0CBA  00A9               	movwf	___xxtofl@exp
  5559     0CBB  2CC7               	goto	l4589
  5560     0CBC                     l4587:
  5561     0CBC  3001               	movlw	1
  5562     0CBD  00A4               	movwf	??___xxtofl
  5563     0CBE  0824               	movf	??___xxtofl,w
  5564     0CBF  07A9               	addwf	___xxtofl@exp,f
  5565     0CC0  3001               	movlw	1
  5566     0CC1                     u3865:
  5567     0CC1  36AD               	lsrf	___xxtofl@arg+3,f
  5568     0CC2  0CAC               	rrf	___xxtofl@arg+2,f
  5569     0CC3  0CAB               	rrf	___xxtofl@arg+1,f
  5570     0CC4  0CAA               	rrf	___xxtofl@arg,f
  5571     0CC5  0B89               	decfsz	9,f
  5572     0CC6  2CC1               	goto	u3865
  5573     0CC7                     l4589:
  5574     0CC7  30FE               	movlw	254
  5575     0CC8  052D               	andwf	___xxtofl@arg+3,w
  5576     0CC9  1D03               	btfss	3,2
  5577     0CCA  2CCC               	goto	u3871
  5578     0CCB  2CCD               	goto	u3870
  5579     0CCC                     u3871:
  5580     0CCC  2CBC               	goto	l4587
  5581     0CCD                     u3870:
  5582     0CCD  2CE1               	goto	l1615
  5583     0CCE                     l4591:
  5584     0CCE  3001               	movlw	1
  5585     0CCF  00A4               	movwf	??___xxtofl
  5586     0CD0  0824               	movf	??___xxtofl,w
  5587     0CD1  07A9               	addwf	___xxtofl@exp,f
  5588     0CD2                     l4593:
  5589     0CD2  3001               	movlw	1
  5590     0CD3  07AA               	addwf	___xxtofl@arg,f
  5591     0CD4  3000               	movlw	0
  5592     0CD5  3DAB               	addwfc	___xxtofl@arg+1,f
  5593     0CD6  3000               	movlw	0
  5594     0CD7  3DAC               	addwfc	___xxtofl@arg+2,f
  5595     0CD8  3000               	movlw	0
  5596     0CD9  3DAD               	addwfc	___xxtofl@arg+3,f
  5597     0CDA                     l4595:
  5598     0CDA  3001               	movlw	1
  5599     0CDB                     u3885:
  5600     0CDB  36AD               	lsrf	___xxtofl@arg+3,f
  5601     0CDC  0CAC               	rrf	___xxtofl@arg+2,f
  5602     0CDD  0CAB               	rrf	___xxtofl@arg+1,f
  5603     0CDE  0CAA               	rrf	___xxtofl@arg,f
  5604     0CDF  0B89               	decfsz	9,f
  5605     0CE0  2CDB               	goto	u3885
  5606     0CE1                     l1615:
  5607     0CE1  30FF               	movlw	255
  5608     0CE2  052D               	andwf	___xxtofl@arg+3,w
  5609     0CE3  1D03               	btfss	3,2
  5610     0CE4  2CE6               	goto	u3891
  5611     0CE5  2CE7               	goto	u3890
  5612     0CE6                     u3891:
  5613     0CE6  2CCE               	goto	l4591
  5614     0CE7                     u3890:
  5615     0CE7  2CF1               	goto	l4599
  5616     0CE8                     l4597:
  5617     0CE8  3001               	movlw	1
  5618     0CE9  02A9               	subwf	___xxtofl@exp,f
  5619     0CEA  3001               	movlw	1
  5620     0CEB                     u3905:
  5621     0CEB  35AA               	lslf	___xxtofl@arg,f
  5622     0CEC  0DAB               	rlf	___xxtofl@arg+1,f
  5623     0CED  0DAC               	rlf	___xxtofl@arg+2,f
  5624     0CEE  0DAD               	rlf	___xxtofl@arg+3,f
  5625     0CEF  0B89               	decfsz	9,f
  5626     0CF0  2CEB               	goto	u3905
  5627     0CF1                     l4599:
  5628     0CF1  1BAC               	btfsc	___xxtofl@arg+2,7
  5629     0CF2  2CF4               	goto	u3911
  5630     0CF3  2CF5               	goto	u3910
  5631     0CF4                     u3911:
  5632     0CF4  2CFB               	goto	l1622
  5633     0CF5                     u3910:
  5634     0CF5                     l4601:
  5635     0CF5  3002               	movlw	2
  5636     0CF6  0229               	subwf	___xxtofl@exp,w
  5637     0CF7  1803               	skipnc
  5638     0CF8  2CFA               	goto	u3921
  5639     0CF9  2CFB               	goto	u3920
  5640     0CFA                     u3921:
  5641     0CFA  2CE8               	goto	l4597
  5642     0CFB                     u3920:
  5643     0CFB                     l1622:
  5644     0CFB  1829               	btfsc	___xxtofl@exp,0
  5645     0CFC  2CFE               	goto	u3931
  5646     0CFD  2CFF               	goto	u3930
  5647     0CFE                     u3931:
  5648     0CFE  2D07               	goto	l1623
  5649     0CFF                     u3930:
  5650     0CFF                     l4603:
  5651     0CFF  30FF               	movlw	255
  5652     0D00  05AA               	andwf	___xxtofl@arg,f
  5653     0D01  30FF               	movlw	255
  5654     0D02  05AB               	andwf	___xxtofl@arg+1,f
  5655     0D03  307F               	movlw	127
  5656     0D04  05AC               	andwf	___xxtofl@arg+2,f
  5657     0D05  30FF               	movlw	255
  5658     0D06  05AD               	andwf	___xxtofl@arg+3,f
  5659     0D07                     l1623:
  5660     0D07  1003               	clrc
  5661     0D08  0CA9               	rrf	___xxtofl@exp,f
  5662     0D09                     l4605:
  5663     0D09  0829               	movf	___xxtofl@exp,w
  5664     0D0A  00A4               	movwf	??___xxtofl
  5665     0D0B  01A5               	clrf	??___xxtofl+1
  5666     0D0C  01A6               	clrf	??___xxtofl+2
  5667     0D0D  01A7               	clrf	??___xxtofl+3
  5668     0D0E  3018               	movlw	24
  5669     0D0F                     u3945:
  5670     0D0F  35A4               	lslf	??___xxtofl,f
  5671     0D10  0DA5               	rlf	??___xxtofl+1,f
  5672     0D11  0DA6               	rlf	??___xxtofl+2,f
  5673     0D12  0DA7               	rlf	??___xxtofl+3,f
  5674     0D13                     u3940:
  5675     0D13  0B89               	decfsz	9,f
  5676     0D14  2D0F               	goto	u3945
  5677     0D15  0824               	movf	??___xxtofl,w
  5678     0D16  04AA               	iorwf	___xxtofl@arg,f
  5679     0D17  0825               	movf	??___xxtofl+1,w
  5680     0D18  04AB               	iorwf	___xxtofl@arg+1,f
  5681     0D19  0826               	movf	??___xxtofl+2,w
  5682     0D1A  04AC               	iorwf	___xxtofl@arg+2,f
  5683     0D1B  0827               	movf	??___xxtofl+3,w
  5684     0D1C  04AD               	iorwf	___xxtofl@arg+3,f
  5685     0D1D                     l4607:
  5686     0D1D  0828               	movf	___xxtofl@sign,w
  5687     0D1E  1903               	btfsc	3,2
  5688     0D1F  2D21               	goto	u3951
  5689     0D20  2D22               	goto	u3950
  5690     0D21                     u3951:
  5691     0D21  2D27               	goto	l4613
  5692     0D22                     u3950:
  5693     0D22                     l4609:
  5694     0D22  1FA3               	btfss	___xxtofl@val+3,7
  5695     0D23  2D25               	goto	u3961
  5696     0D24  2D26               	goto	u3960
  5697     0D25                     u3961:
  5698     0D25  2D27               	goto	l4613
  5699     0D26                     u3960:
  5700     0D26                     l4611:
  5701     0D26  17AD               	bsf	___xxtofl@arg+3,7
  5702     0D27                     l4613:
  5703     0D27  082D               	movf	___xxtofl@arg+3,w
  5704     0D28  00A3               	movwf	?___xxtofl+3
  5705     0D29  082C               	movf	___xxtofl@arg+2,w
  5706     0D2A  00A2               	movwf	?___xxtofl+2
  5707     0D2B  082B               	movf	___xxtofl@arg+1,w
  5708     0D2C  00A1               	movwf	?___xxtofl+1
  5709     0D2D  082A               	movf	___xxtofl@arg,w
  5710     0D2E  00A0               	movwf	?___xxtofl
  5711     0D2F                     l1611:
  5712     0D2F  0008               	return
  5713     0D30                     __end_of___xxtofl:
  5714                           
  5715                           	psect	text18
  5716     0A54                     __ptext18:	
  5717 ;; *************** function ___fltol *****************
  5718 ;; Defined at:
  5719 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  f1              4    0[BANK0 ] unsigned char 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  exp1            1    9[BANK0 ] unsigned char 
  5724 ;;  sign1           1    8[BANK0 ] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  4    0[BANK0 ] long 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5734 ;;      Params:         0       4       0       0       0       0       0       0
  5735 ;;      Locals:         0       2       0       0       0       0       0       0
  5736 ;;      Temps:          0       4       0       0       0       0       0       0
  5737 ;;      Totals:         0      10       0       0       0       0       0       0
  5738 ;;Total ram usage:       10 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 7
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_ReadData
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748     0A54                     ___fltol:	
  5749                           ;psect for function ___fltol
  5750                           
  5751     0A54                     l4063:	
  5752                           ;incstack = 0
  5753                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5754                           
  5755     0A54  1003               	clrc
  5756     0A55  0020               	movlb	0	; select bank0
  5757     0A56  0D22               	rlf	___fltol@f1+2,w
  5758     0A57  0D23               	rlf	___fltol@f1+3,w
  5759     0A58  00A9               	movwf	___fltol@exp1
  5760     0A59  0829               	movf	___fltol@exp1,w
  5761     0A5A  1D03               	btfss	3,2
  5762     0A5B  2A5D               	goto	u2751
  5763     0A5C  2A5E               	goto	u2750
  5764     0A5D                     u2751:
  5765     0A5D  2A67               	goto	l4069
  5766     0A5E                     u2750:
  5767     0A5E                     l4065:
  5768     0A5E  3000               	movlw	0
  5769     0A5F  00A3               	movwf	?___fltol+3
  5770     0A60  3000               	movlw	0
  5771     0A61  00A2               	movwf	?___fltol+2
  5772     0A62  3000               	movlw	0
  5773     0A63  00A1               	movwf	?___fltol+1
  5774     0A64  3000               	movlw	0
  5775     0A65  00A0               	movwf	?___fltol
  5776     0A66  2AC4               	goto	l1362
  5777     0A67                     l4069:
  5778     0A67  0820               	movf	___fltol@f1,w
  5779     0A68  00A4               	movwf	??___fltol
  5780     0A69  0821               	movf	___fltol@f1+1,w
  5781     0A6A  00A5               	movwf	??___fltol+1
  5782     0A6B  0822               	movf	___fltol@f1+2,w
  5783     0A6C  00A6               	movwf	??___fltol+2
  5784     0A6D  0823               	movf	___fltol@f1+3,w
  5785     0A6E  00A7               	movwf	??___fltol+3
  5786     0A6F  301F               	movlw	31
  5787     0A70                     u2765:
  5788     0A70  36A7               	lsrf	??___fltol+3,f
  5789     0A71  0CA6               	rrf	??___fltol+2,f
  5790     0A72  0CA5               	rrf	??___fltol+1,f
  5791     0A73  0CA4               	rrf	??___fltol,f
  5792     0A74                     u2760:
  5793     0A74  0B89               	decfsz	9,f
  5794     0A75  2A70               	goto	u2765
  5795     0A76  0824               	movf	??___fltol,w
  5796     0A77  00A8               	movwf	___fltol@sign1
  5797     0A78                     l4071:
  5798     0A78  17A2               	bsf	___fltol@f1+2,7
  5799     0A79                     l4073:
  5800     0A79  30FF               	movlw	255
  5801     0A7A  05A0               	andwf	___fltol@f1,f
  5802     0A7B  30FF               	movlw	255
  5803     0A7C  05A1               	andwf	___fltol@f1+1,f
  5804     0A7D  30FF               	movlw	255
  5805     0A7E  05A2               	andwf	___fltol@f1+2,f
  5806     0A7F  3000               	movlw	0
  5807     0A80  05A3               	andwf	___fltol@f1+3,f
  5808     0A81                     l4075:
  5809     0A81  3096               	movlw	150
  5810     0A82  02A9               	subwf	___fltol@exp1,f
  5811     0A83                     l4077:
  5812     0A83  1FA9               	btfss	___fltol@exp1,7
  5813     0A84  2A86               	goto	u2771
  5814     0A85  2A87               	goto	u2770
  5815     0A86                     u2771:
  5816     0A86  2A9F               	goto	l4087
  5817     0A87                     u2770:
  5818     0A87                     l4079:
  5819     0A87  0829               	movf	___fltol@exp1,w
  5820     0A88  3A80               	xorlw	128
  5821     0A89  3E97               	addlw	151
  5822     0A8A  1803               	skipnc
  5823     0A8B  2A8D               	goto	u2781
  5824     0A8C  2A8E               	goto	u2780
  5825     0A8D                     u2781:
  5826     0A8D  2A8F               	goto	l4085
  5827     0A8E                     u2780:
  5828     0A8E  2A5E               	goto	l4065
  5829     0A8F                     l4085:
  5830     0A8F  3001               	movlw	1
  5831     0A90                     u2795:
  5832     0A90  36A3               	lsrf	___fltol@f1+3,f
  5833     0A91  0CA2               	rrf	___fltol@f1+2,f
  5834     0A92  0CA1               	rrf	___fltol@f1+1,f
  5835     0A93  0CA0               	rrf	___fltol@f1,f
  5836     0A94  0B89               	decfsz	9,f
  5837     0A95  2A90               	goto	u2795
  5838     0A96  3001               	movlw	1
  5839     0A97  00A4               	movwf	??___fltol
  5840     0A98  0824               	movf	??___fltol,w
  5841     0A99  07A9               	addwf	___fltol@exp1,f
  5842     0A9A  1D03               	btfss	3,2
  5843     0A9B  2A9D               	goto	u2801
  5844     0A9C  2A9E               	goto	u2800
  5845     0A9D                     u2801:
  5846     0A9D  2A8F               	goto	l4085
  5847     0A9E                     u2800:
  5848     0A9E  2AB4               	goto	l4095
  5849     0A9F                     l4087:
  5850     0A9F  3020               	movlw	32
  5851     0AA0  0229               	subwf	___fltol@exp1,w
  5852     0AA1  1C03               	skipc
  5853     0AA2  2AA4               	goto	u2811
  5854     0AA3  2AA5               	goto	u2810
  5855     0AA4                     u2811:
  5856     0AA4  2AAF               	goto	l1369
  5857     0AA5                     u2810:
  5858     0AA5  2A5E               	goto	l4065
  5859     0AA6                     l4093:
  5860     0AA6  3001               	movlw	1
  5861     0AA7                     u2825:
  5862     0AA7  35A0               	lslf	___fltol@f1,f
  5863     0AA8  0DA1               	rlf	___fltol@f1+1,f
  5864     0AA9  0DA2               	rlf	___fltol@f1+2,f
  5865     0AAA  0DA3               	rlf	___fltol@f1+3,f
  5866     0AAB  0B89               	decfsz	9,f
  5867     0AAC  2AA7               	goto	u2825
  5868     0AAD  3001               	movlw	1
  5869     0AAE  02A9               	subwf	___fltol@exp1,f
  5870     0AAF                     l1369:
  5871     0AAF  0829               	movf	___fltol@exp1,w
  5872     0AB0  1D03               	btfss	3,2
  5873     0AB1  2AB3               	goto	u2831
  5874     0AB2  2AB4               	goto	u2830
  5875     0AB3                     u2831:
  5876     0AB3  2AA6               	goto	l4093
  5877     0AB4                     u2830:
  5878     0AB4                     l4095:
  5879     0AB4  0828               	movf	___fltol@sign1,w
  5880     0AB5  1903               	btfsc	3,2
  5881     0AB6  2AB8               	goto	u2841
  5882     0AB7  2AB9               	goto	u2840
  5883     0AB8                     u2841:
  5884     0AB8  2AC4               	goto	l1372
  5885     0AB9                     u2840:
  5886     0AB9                     l4097:
  5887     0AB9  09A0               	comf	___fltol@f1,f
  5888     0ABA  09A1               	comf	___fltol@f1+1,f
  5889     0ABB  09A2               	comf	___fltol@f1+2,f
  5890     0ABC  09A3               	comf	___fltol@f1+3,f
  5891     0ABD  0AA0               	incf	___fltol@f1,f
  5892     0ABE  1903               	skipnz
  5893     0ABF  0AA1               	incf	___fltol@f1+1,f
  5894     0AC0  1903               	skipnz
  5895     0AC1  0AA2               	incf	___fltol@f1+2,f
  5896     0AC2  1903               	skipnz
  5897     0AC3  0AA3               	incf	___fltol@f1+3,f
  5898     0AC4                     l1372:
  5899     0AC4                     l1362:
  5900     0AC4  0008               	return
  5901     0AC5                     __end_of___fltol:
  5902                           
  5903                           	psect	text19
  5904     0096                     __ptext19:	
  5905 ;; *************** function ___flmul *****************
  5906 ;; Defined at:
  5907 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  b               4   14[BANK0 ] long 
  5910 ;;  a               4   18[BANK0 ] long 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  prod            4   34[BANK0 ] struct .
  5913 ;;  grs             4   28[BANK0 ] unsigned long 
  5914 ;;  temp            2   38[BANK0 ] struct .
  5915 ;;  bexp            1   33[BANK0 ] unsigned char 
  5916 ;;  aexp            1   32[BANK0 ] unsigned char 
  5917 ;;  sign            1   27[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  4   14[BANK0 ] unsigned char 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0, pclath, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5927 ;;      Params:         0       8       0       0       0       0       0       0
  5928 ;;      Locals:         0      13       0       0       0       0       0       0
  5929 ;;      Temps:          0       5       0       0       0       0       0       0
  5930 ;;      Totals:         0      26       0       0       0       0       0       0
  5931 ;;Total ram usage:       26 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 8
  5934 ;; This function calls:
  5935 ;;		__Umul8_16
  5936 ;; This function is called by:
  5937 ;;		_ReadData
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941     0096                     ___flmul:	
  5942                           ;psect for function ___flmul
  5943                           
  5944     0096                     l4433:	
  5945                           ;incstack = 0
  5946                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5947                           
  5948     0096  0020               	movlb	0	; select bank0
  5949     0097  0831               	movf	___flmul@b+3,w
  5950     0098  3980               	andlw	128
  5951     0099  00BB               	movwf	___flmul@sign
  5952     009A                     l4435:
  5953     009A  3531               	lslf	___flmul@b+3,w
  5954     009B  00C1               	movwf	___flmul@bexp
  5955     009C                     l4437:
  5956     009C  1FB0               	btfss	___flmul@b+2,7
  5957     009D  289F               	goto	u3571
  5958     009E  28A0               	goto	u3570
  5959     009F                     u3571:
  5960     009F  28A1               	goto	l4441
  5961     00A0                     u3570:
  5962     00A0                     l4439:
  5963     00A0  1441               	bsf	___flmul@bexp,0
  5964     00A1                     l4441:
  5965     00A1  0841               	movf	___flmul@bexp,w
  5966     00A2  1903               	btfsc	3,2
  5967     00A3  28A5               	goto	u3581
  5968     00A4  28A6               	goto	u3580
  5969     00A5                     u3581:
  5970     00A5  28B5               	goto	l4449
  5971     00A6                     u3580:
  5972     00A6                     l4443:
  5973     00A6  0A41               	incf	___flmul@bexp,w
  5974     00A7  1D03               	btfss	3,2
  5975     00A8  28AA               	goto	u3591
  5976     00A9  28AB               	goto	u3590
  5977     00AA                     u3591:
  5978     00AA  28B3               	goto	l4447
  5979     00AB                     u3590:
  5980     00AB                     l4445:
  5981     00AB  3000               	movlw	0
  5982     00AC  00B1               	movwf	___flmul@b+3
  5983     00AD  3000               	movlw	0
  5984     00AE  00B0               	movwf	___flmul@b+2
  5985     00AF  3000               	movlw	0
  5986     00B0  00AF               	movwf	___flmul@b+1
  5987     00B1  3000               	movlw	0
  5988     00B2  00AE               	movwf	___flmul@b
  5989     00B3                     l4447:
  5990     00B3  17B0               	bsf	___flmul@b+2,7
  5991     00B4  28BD               	goto	l4451
  5992     00B5                     l4449:
  5993     00B5  3000               	movlw	0
  5994     00B6  00B1               	movwf	___flmul@b+3
  5995     00B7  3000               	movlw	0
  5996     00B8  00B0               	movwf	___flmul@b+2
  5997     00B9  3000               	movlw	0
  5998     00BA  00AF               	movwf	___flmul@b+1
  5999     00BB  3000               	movlw	0
  6000     00BC  00AE               	movwf	___flmul@b
  6001     00BD                     l4451:
  6002     00BD  0835               	movf	___flmul@a+3,w
  6003     00BE  3980               	andlw	128
  6004     00BF  00B6               	movwf	??___flmul
  6005     00C0  0836               	movf	??___flmul,w
  6006     00C1  06BB               	xorwf	___flmul@sign,f
  6007     00C2                     l4453:
  6008     00C2  3535               	lslf	___flmul@a+3,w
  6009     00C3  00C0               	movwf	___flmul@aexp
  6010     00C4                     l4455:
  6011     00C4  1FB4               	btfss	___flmul@a+2,7
  6012     00C5  28C7               	goto	u3601
  6013     00C6  28C8               	goto	u3600
  6014     00C7                     u3601:
  6015     00C7  28C9               	goto	l4459
  6016     00C8                     u3600:
  6017     00C8                     l4457:
  6018     00C8  1440               	bsf	___flmul@aexp,0
  6019     00C9                     l4459:
  6020     00C9  0840               	movf	___flmul@aexp,w
  6021     00CA  1903               	btfsc	3,2
  6022     00CB  28CD               	goto	u3611
  6023     00CC  28CE               	goto	u3610
  6024     00CD                     u3611:
  6025     00CD  28DD               	goto	l4467
  6026     00CE                     u3610:
  6027     00CE                     l4461:
  6028     00CE  0A40               	incf	___flmul@aexp,w
  6029     00CF  1D03               	btfss	3,2
  6030     00D0  28D2               	goto	u3621
  6031     00D1  28D3               	goto	u3620
  6032     00D2                     u3621:
  6033     00D2  28DB               	goto	l4465
  6034     00D3                     u3620:
  6035     00D3                     l4463:
  6036     00D3  3000               	movlw	0
  6037     00D4  00B5               	movwf	___flmul@a+3
  6038     00D5  3000               	movlw	0
  6039     00D6  00B4               	movwf	___flmul@a+2
  6040     00D7  3000               	movlw	0
  6041     00D8  00B3               	movwf	___flmul@a+1
  6042     00D9  3000               	movlw	0
  6043     00DA  00B2               	movwf	___flmul@a
  6044     00DB                     l4465:
  6045     00DB  17B4               	bsf	___flmul@a+2,7
  6046     00DC  28E5               	goto	l4469
  6047     00DD                     l4467:
  6048     00DD  3000               	movlw	0
  6049     00DE  00B5               	movwf	___flmul@a+3
  6050     00DF  3000               	movlw	0
  6051     00E0  00B4               	movwf	___flmul@a+2
  6052     00E1  3000               	movlw	0
  6053     00E2  00B3               	movwf	___flmul@a+1
  6054     00E3  3000               	movlw	0
  6055     00E4  00B2               	movwf	___flmul@a
  6056     00E5                     l4469:
  6057     00E5  0840               	movf	___flmul@aexp,w
  6058     00E6  1903               	btfsc	3,2
  6059     00E7  28E9               	goto	u3631
  6060     00E8  28EA               	goto	u3630
  6061     00E9                     u3631:
  6062     00E9  28EF               	goto	l4473
  6063     00EA                     u3630:
  6064     00EA                     l4471:
  6065     00EA  0841               	movf	___flmul@bexp,w
  6066     00EB  1D03               	btfss	3,2
  6067     00EC  28EE               	goto	u3641
  6068     00ED  28EF               	goto	u3640
  6069     00EE                     u3641:
  6070     00EE  28F8               	goto	l4477
  6071     00EF                     u3640:
  6072     00EF                     l4473:
  6073     00EF  3000               	movlw	0
  6074     00F0  00B1               	movwf	?___flmul+3
  6075     00F1  3000               	movlw	0
  6076     00F2  00B0               	movwf	?___flmul+2
  6077     00F3  3000               	movlw	0
  6078     00F4  00AF               	movwf	?___flmul+1
  6079     00F5  3000               	movlw	0
  6080     00F6  00AE               	movwf	?___flmul
  6081     00F7  2AD0               	goto	l1565
  6082     00F8                     l4477:
  6083     00F8  082E               	movf	___flmul@b,w
  6084     00F9  00A0               	movwf	__Umul8_16@multiplicand
  6085     00FA  0834               	movf	___flmul@a+2,w
  6086     00FB  3195  257B  3180   	fcall	__Umul8_16
  6087     00FE  0020               	movlb	0	; select bank0
  6088     00FF  0821               	movf	?__Umul8_16+1,w
  6089     0100  00C7               	movwf	___flmul@temp+1
  6090     0101  0820               	movf	?__Umul8_16,w
  6091     0102  00C6               	movwf	___flmul@temp
  6092     0103                     l4479:
  6093     0103  0846               	movf	___flmul@temp,w
  6094     0104  00B6               	movwf	??___flmul
  6095     0105  01B7               	clrf	??___flmul+1
  6096     0106  01B8               	clrf	??___flmul+2
  6097     0107  01B9               	clrf	??___flmul+3
  6098     0108  0839               	movf	??___flmul+3,w
  6099     0109  00BF               	movwf	___flmul@grs+3
  6100     010A  0838               	movf	??___flmul+2,w
  6101     010B  00BE               	movwf	___flmul@grs+2
  6102     010C  0837               	movf	??___flmul+1,w
  6103     010D  00BD               	movwf	___flmul@grs+1
  6104     010E  0836               	movf	??___flmul,w
  6105     010F  00BC               	movwf	___flmul@grs
  6106     0110                     l4481:
  6107     0110  0847               	movf	___flmul@temp+1,w
  6108     0111  00B6               	movwf	??___flmul
  6109     0112  01B7               	clrf	??___flmul+1
  6110     0113  01B8               	clrf	??___flmul+2
  6111     0114  01B9               	clrf	??___flmul+3
  6112     0115  0839               	movf	??___flmul+3,w
  6113     0116  00C5               	movwf	___flmul@prod+3
  6114     0117  0838               	movf	??___flmul+2,w
  6115     0118  00C4               	movwf	___flmul@prod+2
  6116     0119  0837               	movf	??___flmul+1,w
  6117     011A  00C3               	movwf	___flmul@prod+1
  6118     011B  0836               	movf	??___flmul,w
  6119     011C  00C2               	movwf	___flmul@prod
  6120     011D  082F               	movf	___flmul@b+1,w
  6121     011E  00A0               	movwf	__Umul8_16@multiplicand
  6122     011F  0833               	movf	___flmul@a+1,w
  6123     0120  3195  257B  3180   	fcall	__Umul8_16
  6124     0123  0020               	movlb	0	; select bank0
  6125     0124  0821               	movf	?__Umul8_16+1,w
  6126     0125  00C7               	movwf	___flmul@temp+1
  6127     0126  0820               	movf	?__Umul8_16,w
  6128     0127  00C6               	movwf	___flmul@temp
  6129     0128                     l4483:
  6130     0128  0846               	movf	___flmul@temp,w
  6131     0129  00B6               	movwf	??___flmul
  6132     012A  01B7               	clrf	??___flmul+1
  6133     012B  01B8               	clrf	??___flmul+2
  6134     012C  01B9               	clrf	??___flmul+3
  6135     012D  0836               	movf	??___flmul,w
  6136     012E  07BC               	addwf	___flmul@grs,f
  6137     012F  0837               	movf	??___flmul+1,w
  6138     0130  3DBD               	addwfc	___flmul@grs+1,f
  6139     0131  0838               	movf	??___flmul+2,w
  6140     0132  3DBE               	addwfc	___flmul@grs+2,f
  6141     0133  0839               	movf	??___flmul+3,w
  6142     0134  3DBF               	addwfc	___flmul@grs+3,f
  6143     0135                     l4485:
  6144     0135  0847               	movf	___flmul@temp+1,w
  6145     0136  00B6               	movwf	??___flmul
  6146     0137  01B7               	clrf	??___flmul+1
  6147     0138  01B8               	clrf	??___flmul+2
  6148     0139  01B9               	clrf	??___flmul+3
  6149     013A  0836               	movf	??___flmul,w
  6150     013B  07C2               	addwf	___flmul@prod,f
  6151     013C  0837               	movf	??___flmul+1,w
  6152     013D  3DC3               	addwfc	___flmul@prod+1,f
  6153     013E  0838               	movf	??___flmul+2,w
  6154     013F  3DC4               	addwfc	___flmul@prod+2,f
  6155     0140  0839               	movf	??___flmul+3,w
  6156     0141  3DC5               	addwfc	___flmul@prod+3,f
  6157     0142  0830               	movf	___flmul@b+2,w
  6158     0143  00A0               	movwf	__Umul8_16@multiplicand
  6159     0144  0832               	movf	___flmul@a,w
  6160     0145  3195  257B  3180   	fcall	__Umul8_16
  6161     0148  0020               	movlb	0	; select bank0
  6162     0149  0821               	movf	?__Umul8_16+1,w
  6163     014A  00C7               	movwf	___flmul@temp+1
  6164     014B  0820               	movf	?__Umul8_16,w
  6165     014C  00C6               	movwf	___flmul@temp
  6166     014D                     l4487:
  6167     014D  0846               	movf	___flmul@temp,w
  6168     014E  00B6               	movwf	??___flmul
  6169     014F  01B7               	clrf	??___flmul+1
  6170     0150  01B8               	clrf	??___flmul+2
  6171     0151  01B9               	clrf	??___flmul+3
  6172     0152  0836               	movf	??___flmul,w
  6173     0153  07BC               	addwf	___flmul@grs,f
  6174     0154  0837               	movf	??___flmul+1,w
  6175     0155  3DBD               	addwfc	___flmul@grs+1,f
  6176     0156  0838               	movf	??___flmul+2,w
  6177     0157  3DBE               	addwfc	___flmul@grs+2,f
  6178     0158  0839               	movf	??___flmul+3,w
  6179     0159  3DBF               	addwfc	___flmul@grs+3,f
  6180     015A                     l4489:
  6181     015A  0847               	movf	___flmul@temp+1,w
  6182     015B  00B6               	movwf	??___flmul
  6183     015C  01B7               	clrf	??___flmul+1
  6184     015D  01B8               	clrf	??___flmul+2
  6185     015E  01B9               	clrf	??___flmul+3
  6186     015F  0836               	movf	??___flmul,w
  6187     0160  07C2               	addwf	___flmul@prod,f
  6188     0161  0837               	movf	??___flmul+1,w
  6189     0162  3DC3               	addwfc	___flmul@prod+1,f
  6190     0163  0838               	movf	??___flmul+2,w
  6191     0164  3DC4               	addwfc	___flmul@prod+2,f
  6192     0165  0839               	movf	??___flmul+3,w
  6193     0166  3DC5               	addwfc	___flmul@prod+3,f
  6194     0167                     l4491:
  6195     0167  3008               	movlw	8
  6196     0168                     u3655:
  6197     0168  35BC               	lslf	___flmul@grs,f
  6198     0169  0DBD               	rlf	___flmul@grs+1,f
  6199     016A  0DBE               	rlf	___flmul@grs+2,f
  6200     016B  0DBF               	rlf	___flmul@grs+3,f
  6201     016C  0B89               	decfsz	9,f
  6202     016D  2968               	goto	u3655
  6203     016E                     l4493:
  6204     016E  082F               	movf	___flmul@b+1,w
  6205     016F  00A0               	movwf	__Umul8_16@multiplicand
  6206     0170  0832               	movf	___flmul@a,w
  6207     0171  3195  257B  3180   	fcall	__Umul8_16
  6208     0174  0020               	movlb	0	; select bank0
  6209     0175  0821               	movf	?__Umul8_16+1,w
  6210     0176  00C7               	movwf	___flmul@temp+1
  6211     0177  0820               	movf	?__Umul8_16,w
  6212     0178  00C6               	movwf	___flmul@temp
  6213     0179                     l4495:
  6214     0179  0846               	movf	___flmul@temp,w
  6215     017A  07BC               	addwf	___flmul@grs,f
  6216     017B  0847               	movf	___flmul@temp+1,w
  6217     017C  3DBD               	addwfc	___flmul@grs+1,f
  6218     017D  3000               	movlw	0
  6219     017E  3DBE               	addwfc	___flmul@grs+2,f
  6220     017F  3DBF               	addwfc	___flmul@grs+3,f
  6221     0180                     l4497:
  6222     0180  082E               	movf	___flmul@b,w
  6223     0181  00A0               	movwf	__Umul8_16@multiplicand
  6224     0182  0833               	movf	___flmul@a+1,w
  6225     0183  3195  257B  3180   	fcall	__Umul8_16
  6226     0186  0020               	movlb	0	; select bank0
  6227     0187  0821               	movf	?__Umul8_16+1,w
  6228     0188  00C7               	movwf	___flmul@temp+1
  6229     0189  0820               	movf	?__Umul8_16,w
  6230     018A  00C6               	movwf	___flmul@temp
  6231     018B                     l4499:
  6232     018B  0846               	movf	___flmul@temp,w
  6233     018C  07BC               	addwf	___flmul@grs,f
  6234     018D  0847               	movf	___flmul@temp+1,w
  6235     018E  3DBD               	addwfc	___flmul@grs+1,f
  6236     018F  3000               	movlw	0
  6237     0190  3DBE               	addwfc	___flmul@grs+2,f
  6238     0191  3DBF               	addwfc	___flmul@grs+3,f
  6239     0192                     l4501:
  6240     0192  3008               	movlw	8
  6241     0193                     u3665:
  6242     0193  35BC               	lslf	___flmul@grs,f
  6243     0194  0DBD               	rlf	___flmul@grs+1,f
  6244     0195  0DBE               	rlf	___flmul@grs+2,f
  6245     0196  0DBF               	rlf	___flmul@grs+3,f
  6246     0197  0B89               	decfsz	9,f
  6247     0198  2993               	goto	u3665
  6248     0199  082E               	movf	___flmul@b,w
  6249     019A  00A0               	movwf	__Umul8_16@multiplicand
  6250     019B  0832               	movf	___flmul@a,w
  6251     019C  3195  257B  3180   	fcall	__Umul8_16
  6252     019F  0020               	movlb	0	; select bank0
  6253     01A0  0821               	movf	?__Umul8_16+1,w
  6254     01A1  00C7               	movwf	___flmul@temp+1
  6255     01A2  0820               	movf	?__Umul8_16,w
  6256     01A3  00C6               	movwf	___flmul@temp
  6257     01A4                     l4503:
  6258     01A4  0846               	movf	___flmul@temp,w
  6259     01A5  07BC               	addwf	___flmul@grs,f
  6260     01A6  0847               	movf	___flmul@temp+1,w
  6261     01A7  3DBD               	addwfc	___flmul@grs+1,f
  6262     01A8  3000               	movlw	0
  6263     01A9  3DBE               	addwfc	___flmul@grs+2,f
  6264     01AA  3DBF               	addwfc	___flmul@grs+3,f
  6265     01AB                     l4505:
  6266     01AB  082F               	movf	___flmul@b+1,w
  6267     01AC  00A0               	movwf	__Umul8_16@multiplicand
  6268     01AD  0834               	movf	___flmul@a+2,w
  6269     01AE  3195  257B  3180   	fcall	__Umul8_16
  6270     01B1  0020               	movlb	0	; select bank0
  6271     01B2  0821               	movf	?__Umul8_16+1,w
  6272     01B3  00C7               	movwf	___flmul@temp+1
  6273     01B4  0820               	movf	?__Umul8_16,w
  6274     01B5  00C6               	movwf	___flmul@temp
  6275     01B6  0846               	movf	___flmul@temp,w
  6276     01B7  07C2               	addwf	___flmul@prod,f
  6277     01B8  0847               	movf	___flmul@temp+1,w
  6278     01B9  3DC3               	addwfc	___flmul@prod+1,f
  6279     01BA  3000               	movlw	0
  6280     01BB  3DC4               	addwfc	___flmul@prod+2,f
  6281     01BC  3DC5               	addwfc	___flmul@prod+3,f
  6282     01BD                     l4507:
  6283     01BD  0830               	movf	___flmul@b+2,w
  6284     01BE  00A0               	movwf	__Umul8_16@multiplicand
  6285     01BF  0833               	movf	___flmul@a+1,w
  6286     01C0  3195  257B  3180   	fcall	__Umul8_16
  6287     01C3  0020               	movlb	0	; select bank0
  6288     01C4  0821               	movf	?__Umul8_16+1,w
  6289     01C5  00C7               	movwf	___flmul@temp+1
  6290     01C6  0820               	movf	?__Umul8_16,w
  6291     01C7  00C6               	movwf	___flmul@temp
  6292     01C8                     l4509:
  6293     01C8  0846               	movf	___flmul@temp,w
  6294     01C9  07C2               	addwf	___flmul@prod,f
  6295     01CA  0847               	movf	___flmul@temp+1,w
  6296     01CB  3DC3               	addwfc	___flmul@prod+1,f
  6297     01CC  3000               	movlw	0
  6298     01CD  3DC4               	addwfc	___flmul@prod+2,f
  6299     01CE  3DC5               	addwfc	___flmul@prod+3,f
  6300     01CF  0830               	movf	___flmul@b+2,w
  6301     01D0  00A0               	movwf	__Umul8_16@multiplicand
  6302     01D1  0834               	movf	___flmul@a+2,w
  6303     01D2  3195  257B  3180   	fcall	__Umul8_16
  6304     01D5  0020               	movlb	0	; select bank0
  6305     01D6  0821               	movf	?__Umul8_16+1,w
  6306     01D7  00C7               	movwf	___flmul@temp+1
  6307     01D8  0820               	movf	?__Umul8_16,w
  6308     01D9  00C6               	movwf	___flmul@temp
  6309     01DA                     l4511:
  6310     01DA  0846               	movf	___flmul@temp,w
  6311     01DB  00B6               	movwf	??___flmul
  6312     01DC  0847               	movf	___flmul@temp+1,w
  6313     01DD  00B7               	movwf	??___flmul+1
  6314     01DE  01B8               	clrf	??___flmul+2
  6315     01DF  01B9               	clrf	??___flmul+3
  6316     01E0  3008               	movlw	8
  6317     01E1                     u3675:
  6318     01E1  35B6               	lslf	??___flmul,f
  6319     01E2  0DB7               	rlf	??___flmul+1,f
  6320     01E3  0DB8               	rlf	??___flmul+2,f
  6321     01E4  0DB9               	rlf	??___flmul+3,f
  6322     01E5                     u3670:
  6323     01E5  0B89               	decfsz	9,f
  6324     01E6  29E1               	goto	u3675
  6325     01E7  0836               	movf	??___flmul,w
  6326     01E8  07C2               	addwf	___flmul@prod,f
  6327     01E9  0837               	movf	??___flmul+1,w
  6328     01EA  3DC3               	addwfc	___flmul@prod+1,f
  6329     01EB  0838               	movf	??___flmul+2,w
  6330     01EC  3DC4               	addwfc	___flmul@prod+2,f
  6331     01ED  0839               	movf	??___flmul+3,w
  6332     01EE  3DC5               	addwfc	___flmul@prod+3,f
  6333     01EF                     l4513:
  6334     01EF  083C               	movf	___flmul@grs,w
  6335     01F0  00B6               	movwf	??___flmul
  6336     01F1  083D               	movf	___flmul@grs+1,w
  6337     01F2  00B7               	movwf	??___flmul+1
  6338     01F3  083E               	movf	___flmul@grs+2,w
  6339     01F4  00B8               	movwf	??___flmul+2
  6340     01F5  083F               	movf	___flmul@grs+3,w
  6341     01F6  00B9               	movwf	??___flmul+3
  6342     01F7  3018               	movlw	24
  6343     01F8                     u3685:
  6344     01F8  36B9               	lsrf	??___flmul+3,f
  6345     01F9  0CB8               	rrf	??___flmul+2,f
  6346     01FA  0CB7               	rrf	??___flmul+1,f
  6347     01FB  0CB6               	rrf	??___flmul,f
  6348     01FC                     u3680:
  6349     01FC  0B89               	decfsz	9,f
  6350     01FD  29F8               	goto	u3685
  6351     01FE  0836               	movf	??___flmul,w
  6352     01FF  07C2               	addwf	___flmul@prod,f
  6353     0200  0837               	movf	??___flmul+1,w
  6354     0201  3DC3               	addwfc	___flmul@prod+1,f
  6355     0202  0838               	movf	??___flmul+2,w
  6356     0203  3DC4               	addwfc	___flmul@prod+2,f
  6357     0204  0839               	movf	??___flmul+3,w
  6358     0205  3DC5               	addwfc	___flmul@prod+3,f
  6359     0206                     l4515:
  6360     0206  3008               	movlw	8
  6361     0207                     u3695:
  6362     0207  35BC               	lslf	___flmul@grs,f
  6363     0208  0DBD               	rlf	___flmul@grs+1,f
  6364     0209  0DBE               	rlf	___flmul@grs+2,f
  6365     020A  0DBF               	rlf	___flmul@grs+3,f
  6366     020B  0B89               	decfsz	9,f
  6367     020C  2A07               	goto	u3695
  6368     020D                     l4517:
  6369     020D  0841               	movf	___flmul@bexp,w
  6370     020E  0740               	addwf	___flmul@aexp,w
  6371     020F  00B6               	movwf	??___flmul
  6372     0210  01B7               	clrf	??___flmul+1
  6373     0211  0DB7               	rlf	??___flmul+1,f
  6374     0212  0836               	movf	??___flmul,w
  6375     0213  3E82               	addlw	130
  6376     0214  00C6               	movwf	___flmul@temp
  6377     0215  30FF               	movlw	255
  6378     0216  3D37               	addwfc	??___flmul+1,w
  6379     0217  00C7               	movwf	___flmul@temp+1
  6380     0218  2A30               	goto	l4529
  6381     0219                     l4519:
  6382     0219  3001               	movlw	1
  6383     021A                     u3705:
  6384     021A  35C2               	lslf	___flmul@prod,f
  6385     021B  0DC3               	rlf	___flmul@prod+1,f
  6386     021C  0DC4               	rlf	___flmul@prod+2,f
  6387     021D  0DC5               	rlf	___flmul@prod+3,f
  6388     021E  0B89               	decfsz	9,f
  6389     021F  2A1A               	goto	u3705
  6390     0220                     l4521:
  6391     0220  1FBF               	btfss	___flmul@grs+3,7
  6392     0221  2A23               	goto	u3711
  6393     0222  2A24               	goto	u3710
  6394     0223                     u3711:
  6395     0223  2A25               	goto	l4525
  6396     0224                     u3710:
  6397     0224                     l4523:
  6398     0224  1442               	bsf	___flmul@prod,0
  6399     0225                     l4525:
  6400     0225  3001               	movlw	1
  6401     0226                     u3725:
  6402     0226  35BC               	lslf	___flmul@grs,f
  6403     0227  0DBD               	rlf	___flmul@grs+1,f
  6404     0228  0DBE               	rlf	___flmul@grs+2,f
  6405     0229  0DBF               	rlf	___flmul@grs+3,f
  6406     022A  0B89               	decfsz	9,f
  6407     022B  2A26               	goto	u3725
  6408     022C                     l4527:
  6409     022C  30FF               	movlw	255
  6410     022D  07C6               	addwf	___flmul@temp,f
  6411     022E  30FF               	movlw	255
  6412     022F  3DC7               	addwfc	___flmul@temp+1,f
  6413     0230                     l4529:
  6414     0230  1FC4               	btfss	___flmul@prod+2,7
  6415     0231  2A33               	goto	u3731
  6416     0232  2A34               	goto	u3730
  6417     0233                     u3731:
  6418     0233  2A19               	goto	l4519
  6419     0234                     u3730:
  6420     0234                     l4531:
  6421     0234  01C0               	clrf	___flmul@aexp
  6422     0235                     l4533:
  6423     0235  1FBF               	btfss	___flmul@grs+3,7
  6424     0236  2A38               	goto	u3741
  6425     0237  2A39               	goto	u3740
  6426     0238                     u3741:
  6427     0238  2A55               	goto	l4541
  6428     0239                     u3740:
  6429     0239                     l4535:
  6430     0239  30FF               	movlw	255
  6431     023A  053C               	andwf	___flmul@grs,w
  6432     023B  00B6               	movwf	??___flmul
  6433     023C  30FF               	movlw	255
  6434     023D  053D               	andwf	___flmul@grs+1,w
  6435     023E  00B7               	movwf	??___flmul+1
  6436     023F  30FF               	movlw	255
  6437     0240  053E               	andwf	___flmul@grs+2,w
  6438     0241  00B8               	movwf	??___flmul+2
  6439     0242  307F               	movlw	127
  6440     0243  053F               	andwf	___flmul@grs+3,w
  6441     0244  00B9               	movwf	??___flmul+3
  6442     0245  0839               	movf	??___flmul+3,w
  6443     0246  0438               	iorwf	??___flmul+2,w
  6444     0247  0437               	iorwf	??___flmul+1,w
  6445     0248  0436               	iorwf	??___flmul,w
  6446     0249  1903               	skipnz
  6447     024A  2A4C               	goto	u3751
  6448     024B  2A4D               	goto	u3750
  6449     024C                     u3751:
  6450     024C  2A50               	goto	l1571
  6451     024D                     u3750:
  6452     024D                     l4537:
  6453     024D  01C0               	clrf	___flmul@aexp
  6454     024E  0AC0               	incf	___flmul@aexp,f
  6455     024F  2A55               	goto	l4541
  6456     0250                     l1571:
  6457     0250  1C42               	btfss	___flmul@prod,0
  6458     0251  2A53               	goto	u3761
  6459     0252  2A54               	goto	u3760
  6460     0253                     u3761:
  6461     0253  2A55               	goto	l4541
  6462     0254                     u3760:
  6463     0254  2A4D               	goto	l4537
  6464     0255                     l4541:
  6465     0255  0840               	movf	___flmul@aexp,w
  6466     0256  1903               	btfsc	3,2
  6467     0257  2A59               	goto	u3771
  6468     0258  2A5A               	goto	u3770
  6469     0259                     u3771:
  6470     0259  2A82               	goto	l4551
  6471     025A                     u3770:
  6472     025A                     l4543:
  6473     025A  3001               	movlw	1
  6474     025B  07C2               	addwf	___flmul@prod,f
  6475     025C  3000               	movlw	0
  6476     025D  3DC3               	addwfc	___flmul@prod+1,f
  6477     025E  3000               	movlw	0
  6478     025F  3DC4               	addwfc	___flmul@prod+2,f
  6479     0260  3000               	movlw	0
  6480     0261  3DC5               	addwfc	___flmul@prod+3,f
  6481     0262                     l4545:
  6482     0262  1C45               	btfss	___flmul@prod+3,0
  6483     0263  2A65               	goto	u3781
  6484     0264  2A66               	goto	u3780
  6485     0265                     u3781:
  6486     0265  2A82               	goto	l4551
  6487     0266                     u3780:
  6488     0266                     l4547:
  6489     0266  0842               	movf	___flmul@prod,w
  6490     0267  00B6               	movwf	??___flmul
  6491     0268  0843               	movf	___flmul@prod+1,w
  6492     0269  00B7               	movwf	??___flmul+1
  6493     026A  0844               	movf	___flmul@prod+2,w
  6494     026B  00B8               	movwf	??___flmul+2
  6495     026C  0845               	movf	___flmul@prod+3,w
  6496     026D  00B9               	movwf	??___flmul+3
  6497     026E  3001               	movlw	1
  6498     026F  00BA               	movwf	??___flmul+4
  6499     0270                     u3795:
  6500     0270  37B9               	asrf	??___flmul+3,f
  6501     0271  0CB8               	rrf	??___flmul+2,f
  6502     0272  0CB7               	rrf	??___flmul+1,f
  6503     0273  0CB6               	rrf	??___flmul,f
  6504     0274                     u3790:
  6505     0274  0BBA               	decfsz	??___flmul+4,f
  6506     0275  2A70               	goto	u3795
  6507     0276  0839               	movf	??___flmul+3,w
  6508     0277  00C5               	movwf	___flmul@prod+3
  6509     0278  0838               	movf	??___flmul+2,w
  6510     0279  00C4               	movwf	___flmul@prod+2
  6511     027A  0837               	movf	??___flmul+1,w
  6512     027B  00C3               	movwf	___flmul@prod+1
  6513     027C  0836               	movf	??___flmul,w
  6514     027D  00C2               	movwf	___flmul@prod
  6515     027E                     l4549:
  6516     027E  3001               	movlw	1
  6517     027F  07C6               	addwf	___flmul@temp,f
  6518     0280  3000               	movlw	0
  6519     0281  3DC7               	addwfc	___flmul@temp+1,f
  6520     0282                     l4551:
  6521     0282  0847               	movf	___flmul@temp+1,w
  6522     0283  3A80               	xorlw	128
  6523     0284  00B6               	movwf	??___flmul
  6524     0285  3080               	movlw	128
  6525     0286  0236               	subwf	??___flmul,w
  6526     0287  1D03               	skipz
  6527     0288  2A8B               	goto	u3805
  6528     0289  30FF               	movlw	255
  6529     028A  0246               	subwf	___flmul@temp,w
  6530     028B                     u3805:
  6531     028B  1C03               	skipc
  6532     028C  2A8E               	goto	u3801
  6533     028D  2A8F               	goto	u3800
  6534     028E                     u3801:
  6535     028E  2A99               	goto	l4555
  6536     028F                     u3800:
  6537     028F                     l4553:
  6538     028F  307F               	movlw	127
  6539     0290  0020               	movlb	0	; select bank0
  6540     0291  00C5               	movwf	___flmul@prod+3
  6541     0292  3080               	movlw	128
  6542     0293  00C4               	movwf	___flmul@prod+2
  6543     0294  3000               	movlw	0
  6544     0295  00C3               	movwf	___flmul@prod+1
  6545     0296  3000               	movlw	0
  6546     0297  00C2               	movwf	___flmul@prod
  6547     0298  2AC4               	goto	l1577
  6548     0299                     l4555:
  6549     0299  0020               	movlb	0	; select bank0
  6550     029A  0847               	movf	___flmul@temp+1,w
  6551     029B  3A80               	xorlw	128
  6552     029C  00B6               	movwf	??___flmul
  6553     029D  3080               	movlw	128
  6554     029E  0236               	subwf	??___flmul,w
  6555     029F  1D03               	skipz
  6556     02A0  2AA3               	goto	u3815
  6557     02A1  3001               	movlw	1
  6558     02A2  0246               	subwf	___flmul@temp,w
  6559     02A3                     u3815:
  6560     02A3  1803               	skipnc
  6561     02A4  2AA6               	goto	u3811
  6562     02A5  2AA7               	goto	u3810
  6563     02A6                     u3811:
  6564     02A6  2AB2               	goto	l4561
  6565     02A7                     u3810:
  6566     02A7                     l4557:
  6567     02A7  3000               	movlw	0
  6568     02A8  0020               	movlb	0	; select bank0
  6569     02A9  00C5               	movwf	___flmul@prod+3
  6570     02AA  3000               	movlw	0
  6571     02AB  00C4               	movwf	___flmul@prod+2
  6572     02AC  3000               	movlw	0
  6573     02AD  00C3               	movwf	___flmul@prod+1
  6574     02AE  3000               	movlw	0
  6575     02AF  00C2               	movwf	___flmul@prod
  6576     02B0                     l4559:
  6577     02B0  01BB               	clrf	___flmul@sign
  6578     02B1  2AC4               	goto	l1577
  6579     02B2                     l4561:
  6580     02B2  0020               	movlb	0	; select bank0
  6581     02B3  0846               	movf	___flmul@temp,w
  6582     02B4  00C1               	movwf	___flmul@bexp
  6583     02B5  30FF               	movlw	255
  6584     02B6  05C2               	andwf	___flmul@prod,f
  6585     02B7  30FF               	movlw	255
  6586     02B8  05C3               	andwf	___flmul@prod+1,f
  6587     02B9  307F               	movlw	127
  6588     02BA  05C4               	andwf	___flmul@prod+2,f
  6589     02BB  3000               	movlw	0
  6590     02BC  05C5               	andwf	___flmul@prod+3,f
  6591     02BD                     l4563:
  6592     02BD  1C41               	btfss	___flmul@bexp,0
  6593     02BE  2AC0               	goto	u3821
  6594     02BF  2AC1               	goto	u3820
  6595     02C0                     u3821:
  6596     02C0  2AC2               	goto	l4567
  6597     02C1                     u3820:
  6598     02C1                     l4565:
  6599     02C1  17C4               	bsf	___flmul@prod+2,7
  6600     02C2                     l4567:
  6601     02C2  3641               	lsrf	___flmul@bexp,w
  6602     02C3  00C5               	movwf	___flmul@prod+3
  6603     02C4                     l1577:
  6604     02C4  083B               	movf	___flmul@sign,w
  6605     02C5  00B6               	movwf	??___flmul
  6606     02C6  0836               	movf	??___flmul,w
  6607     02C7  04C5               	iorwf	___flmul@prod+3,f
  6608     02C8                     l4569:
  6609     02C8  0845               	movf	___flmul@prod+3,w
  6610     02C9  00B1               	movwf	?___flmul+3
  6611     02CA  0844               	movf	___flmul@prod+2,w
  6612     02CB  00B0               	movwf	?___flmul+2
  6613     02CC  0843               	movf	___flmul@prod+1,w
  6614     02CD  00AF               	movwf	?___flmul+1
  6615     02CE  0842               	movf	___flmul@prod,w
  6616     02CF  00AE               	movwf	?___flmul
  6617     02D0                     l1565:
  6618     02D0  0008               	return
  6619     02D1                     __end_of___flmul:
  6620                           
  6621                           	psect	text20
  6622     157B                     __ptext20:	
  6623 ;; *************** function __Umul8_16 *****************
  6624 ;; Defined at:
  6625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  multiplier      1    wreg     unsigned char 
  6628 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6631 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6632 ;;  product         2    4[BANK0 ] unsigned int 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  2    0[BANK0 ] unsigned int 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6642 ;;      Params:         0       2       0       0       0       0       0       0
  6643 ;;      Locals:         0       5       0       0       0       0       0       0
  6644 ;;      Temps:          0       2       0       0       0       0       0       0
  6645 ;;      Totals:         0       9       0       0       0       0       0       0
  6646 ;;Total ram usage:        9 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 7
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		___flmul
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656     157B                     __Umul8_16:	
  6657                           ;psect for function __Umul8_16
  6658                           
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6662                           ;__Umul8_16@multiplier stored from wreg
  6663     157B  0020               	movlb	0	; select bank0
  6664     157C  00A8               	movwf	__Umul8_16@multiplier
  6665     157D                     l3857:
  6666     157D  01A4               	clrf	__Umul8_16@product
  6667     157E  01A5               	clrf	__Umul8_16@product+1
  6668     157F                     l3859:
  6669     157F  0820               	movf	__Umul8_16@multiplicand,w
  6670     1580  00A2               	movwf	??__Umul8_16
  6671     1581  01A3               	clrf	??__Umul8_16+1
  6672     1582  0822               	movf	??__Umul8_16,w
  6673     1583  00A6               	movwf	__Umul8_16@word_mpld
  6674     1584  0823               	movf	??__Umul8_16+1,w
  6675     1585  00A7               	movwf	__Umul8_16@word_mpld+1
  6676     1586                     l3861:
  6677     1586  1C28               	btfss	__Umul8_16@multiplier,0
  6678     1587  2D89               	goto	u2601
  6679     1588  2D8A               	goto	u2600
  6680     1589                     u2601:
  6681     1589  2D8E               	goto	l1584
  6682     158A                     u2600:
  6683     158A                     l3863:
  6684     158A  0826               	movf	__Umul8_16@word_mpld,w
  6685     158B  07A4               	addwf	__Umul8_16@product,f
  6686     158C  0827               	movf	__Umul8_16@word_mpld+1,w
  6687     158D  3DA5               	addwfc	__Umul8_16@product+1,f
  6688     158E                     l1584:
  6689     158E  3001               	movlw	1
  6690     158F                     u2615:
  6691     158F  35A6               	lslf	__Umul8_16@word_mpld,f
  6692     1590  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6693     1591  0B89               	decfsz	9,f
  6694     1592  2D8F               	goto	u2615
  6695     1593  1003               	clrc
  6696     1594  0CA8               	rrf	__Umul8_16@multiplier,f
  6697     1595                     l3865:
  6698     1595  0828               	movf	__Umul8_16@multiplier,w
  6699     1596  1D03               	btfss	3,2
  6700     1597  2D99               	goto	u2621
  6701     1598  2D9A               	goto	u2620
  6702     1599                     u2621:
  6703     1599  2D86               	goto	l3861
  6704     159A                     u2620:
  6705     159A                     l3867:
  6706     159A  0825               	movf	__Umul8_16@product+1,w
  6707     159B  00A1               	movwf	?__Umul8_16+1
  6708     159C  0824               	movf	__Umul8_16@product,w
  6709     159D  00A0               	movwf	?__Umul8_16
  6710     159E                     l1586:
  6711     159E  0008               	return
  6712     159F                     __end_of__Umul8_16:
  6713                           
  6714                           	psect	text21
  6715     0DFC                     __ptext21:	
  6716 ;; *************** function ___fldiv *****************
  6717 ;; Defined at:
  6718 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  a               4   60[BANK0 ] unsigned int 
  6721 ;;  b               4   64[BANK0 ] unsigned int 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  grs             4    7[BANK1 ] unsigned long 
  6724 ;;  rem             4    0[BANK1 ] unsigned long 
  6725 ;;  new_exp         2    5[BANK1 ] int 
  6726 ;;  aexp            1   12[BANK1 ] unsigned char 
  6727 ;;  bexp            1   11[BANK1 ] unsigned char 
  6728 ;;  sign            1    4[BANK1 ] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  4   60[BANK0 ] unsigned char 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6738 ;;      Params:         0       8       0       0       0       0       0       0
  6739 ;;      Locals:         0       0      13       0       0       0       0       0
  6740 ;;      Temps:          0       5       0       0       0       0       0       0
  6741 ;;      Totals:         0      13      13       0       0       0       0       0
  6742 ;;Total ram usage:       26 bytes
  6743 ;; Hardware stack levels used: 1
  6744 ;; Hardware stack levels required when called: 7
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_ReadData
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752     0DFC                     ___fldiv:	
  6753                           ;psect for function ___fldiv
  6754                           
  6755     0DFC                     l4293:	
  6756                           ;incstack = 0
  6757                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6758                           
  6759     0DFC  0020               	movlb	0	; select bank0
  6760     0DFD  0863               	movf	___fldiv@b+3,w
  6761     0DFE  3980               	andlw	128
  6762     0DFF  0021               	movlb	1	; select bank1
  6763     0E00  00A4               	movwf	___fldiv@sign^(0+128)
  6764     0E01                     l4295:
  6765     0E01  0020               	movlb	0	; select bank0
  6766     0E02  3563               	lslf	___fldiv@b+3,w
  6767     0E03  0021               	movlb	1	; select bank1
  6768     0E04  00AB               	movwf	___fldiv@bexp^(0+128)
  6769     0E05                     l4297:
  6770     0E05  0020               	movlb	0	; select bank0
  6771     0E06  1FE2               	btfss	___fldiv@b+2,7
  6772     0E07  2E09               	goto	u3281
  6773     0E08  2E0A               	goto	u3280
  6774     0E09                     u3281:
  6775     0E09  2E0C               	goto	l4301
  6776     0E0A                     u3280:
  6777     0E0A                     l4299:
  6778     0E0A  0021               	movlb	1	; select bank1
  6779     0E0B  142B               	bsf	___fldiv@bexp^(0+128),0
  6780     0E0C                     l4301:
  6781     0E0C  0021               	movlb	1	; select bank1
  6782     0E0D  082B               	movf	___fldiv@bexp^(0+128),w
  6783     0E0E  1903               	btfsc	3,2
  6784     0E0F  2E11               	goto	u3291
  6785     0E10  2E12               	goto	u3290
  6786     0E11                     u3291:
  6787     0E11  2E24               	goto	l4311
  6788     0E12                     u3290:
  6789     0E12                     l4303:
  6790     0E12  0A2B               	incf	___fldiv@bexp^(0+128),w
  6791     0E13  1D03               	btfss	3,2
  6792     0E14  2E16               	goto	u3301
  6793     0E15  2E17               	goto	u3300
  6794     0E16                     u3301:
  6795     0E16  2E20               	goto	l4307
  6796     0E17                     u3300:
  6797     0E17                     l4305:
  6798     0E17  3000               	movlw	0
  6799     0E18  0020               	movlb	0	; select bank0
  6800     0E19  00E3               	movwf	___fldiv@b+3
  6801     0E1A  3000               	movlw	0
  6802     0E1B  00E2               	movwf	___fldiv@b+2
  6803     0E1C  3000               	movlw	0
  6804     0E1D  00E1               	movwf	___fldiv@b+1
  6805     0E1E  3000               	movlw	0
  6806     0E1F  00E0               	movwf	___fldiv@b
  6807     0E20                     l4307:
  6808     0E20  0020               	movlb	0	; select bank0
  6809     0E21  17E2               	bsf	___fldiv@b+2,7
  6810     0E22                     l4309:
  6811     0E22  01E3               	clrf	___fldiv@b+3
  6812     0E23  2E2D               	goto	l4313
  6813     0E24                     l4311:
  6814     0E24  3000               	movlw	0
  6815     0E25  0020               	movlb	0	; select bank0
  6816     0E26  00E3               	movwf	___fldiv@b+3
  6817     0E27  3000               	movlw	0
  6818     0E28  00E2               	movwf	___fldiv@b+2
  6819     0E29  3000               	movlw	0
  6820     0E2A  00E1               	movwf	___fldiv@b+1
  6821     0E2B  3000               	movlw	0
  6822     0E2C  00E0               	movwf	___fldiv@b
  6823     0E2D                     l4313:
  6824     0E2D  085F               	movf	___fldiv@a+3,w
  6825     0E2E  3980               	andlw	128
  6826     0E2F  00E4               	movwf	??___fldiv
  6827     0E30  0864               	movf	??___fldiv,w
  6828     0E31  0021               	movlb	1	; select bank1
  6829     0E32  06A4               	xorwf	___fldiv@sign^(0+128),f
  6830     0E33                     l4315:
  6831     0E33  0020               	movlb	0	; select bank0
  6832     0E34  355F               	lslf	___fldiv@a+3,w
  6833     0E35  0021               	movlb	1	; select bank1
  6834     0E36  00AC               	movwf	___fldiv@aexp^(0+128)
  6835     0E37                     l4317:
  6836     0E37  0020               	movlb	0	; select bank0
  6837     0E38  1FDE               	btfss	___fldiv@a+2,7
  6838     0E39  2E3B               	goto	u3311
  6839     0E3A  2E3C               	goto	u3310
  6840     0E3B                     u3311:
  6841     0E3B  2E3E               	goto	l4321
  6842     0E3C                     u3310:
  6843     0E3C                     l4319:
  6844     0E3C  0021               	movlb	1	; select bank1
  6845     0E3D  142C               	bsf	___fldiv@aexp^(0+128),0
  6846     0E3E                     l4321:
  6847     0E3E  0021               	movlb	1	; select bank1
  6848     0E3F  082C               	movf	___fldiv@aexp^(0+128),w
  6849     0E40  1903               	btfsc	3,2
  6850     0E41  2E43               	goto	u3321
  6851     0E42  2E44               	goto	u3320
  6852     0E43                     u3321:
  6853     0E43  2E56               	goto	l4331
  6854     0E44                     u3320:
  6855     0E44                     l4323:
  6856     0E44  0A2C               	incf	___fldiv@aexp^(0+128),w
  6857     0E45  1D03               	btfss	3,2
  6858     0E46  2E48               	goto	u3331
  6859     0E47  2E49               	goto	u3330
  6860     0E48                     u3331:
  6861     0E48  2E52               	goto	l4327
  6862     0E49                     u3330:
  6863     0E49                     l4325:
  6864     0E49  3000               	movlw	0
  6865     0E4A  0020               	movlb	0	; select bank0
  6866     0E4B  00DF               	movwf	___fldiv@a+3
  6867     0E4C  3000               	movlw	0
  6868     0E4D  00DE               	movwf	___fldiv@a+2
  6869     0E4E  3000               	movlw	0
  6870     0E4F  00DD               	movwf	___fldiv@a+1
  6871     0E50  3000               	movlw	0
  6872     0E51  00DC               	movwf	___fldiv@a
  6873     0E52                     l4327:
  6874     0E52  0020               	movlb	0	; select bank0
  6875     0E53  17DE               	bsf	___fldiv@a+2,7
  6876     0E54                     l4329:
  6877     0E54  01DF               	clrf	___fldiv@a+3
  6878     0E55  2E5F               	goto	l1525
  6879     0E56                     l4331:
  6880     0E56  3000               	movlw	0
  6881     0E57  0020               	movlb	0	; select bank0
  6882     0E58  00DF               	movwf	___fldiv@a+3
  6883     0E59  3000               	movlw	0
  6884     0E5A  00DE               	movwf	___fldiv@a+2
  6885     0E5B  3000               	movlw	0
  6886     0E5C  00DD               	movwf	___fldiv@a+1
  6887     0E5D  3000               	movlw	0
  6888     0E5E  00DC               	movwf	___fldiv@a
  6889     0E5F                     l1525:
  6890     0E5F  085F               	movf	___fldiv@a+3,w
  6891     0E60  045E               	iorwf	___fldiv@a+2,w
  6892     0E61  045D               	iorwf	___fldiv@a+1,w
  6893     0E62  045C               	iorwf	___fldiv@a,w
  6894     0E63  1D03               	skipz
  6895     0E64  2E66               	goto	u3341
  6896     0E65  2E67               	goto	u3340
  6897     0E66                     u3341:
  6898     0E66  2E82               	goto	l4341
  6899     0E67                     u3340:
  6900     0E67                     l4333:
  6901     0E67  3000               	movlw	0
  6902     0E68  00E3               	movwf	___fldiv@b+3
  6903     0E69  3000               	movlw	0
  6904     0E6A  00E2               	movwf	___fldiv@b+2
  6905     0E6B  3000               	movlw	0
  6906     0E6C  00E1               	movwf	___fldiv@b+1
  6907     0E6D  3000               	movlw	0
  6908     0E6E  00E0               	movwf	___fldiv@b
  6909     0E6F  3080               	movlw	128
  6910     0E70  04E2               	iorwf	___fldiv@b+2,f
  6911     0E71  307F               	movlw	127
  6912     0E72  04E3               	iorwf	___fldiv@b+3,f
  6913     0E73                     l4335:
  6914     0E73  0021               	movlb	1	; select bank1
  6915     0E74  0824               	movf	___fldiv@sign^(0+128),w
  6916     0E75  0020               	movlb	0	; select bank0
  6917     0E76  00E4               	movwf	??___fldiv
  6918     0E77  0864               	movf	??___fldiv,w
  6919     0E78  04E3               	iorwf	___fldiv@b+3,f
  6920     0E79                     l4337:
  6921     0E79  0863               	movf	___fldiv@b+3,w
  6922     0E7A  00DF               	movwf	?___fldiv+3
  6923     0E7B  0862               	movf	___fldiv@b+2,w
  6924     0E7C  00DE               	movwf	?___fldiv+2
  6925     0E7D  0861               	movf	___fldiv@b+1,w
  6926     0E7E  00DD               	movwf	?___fldiv+1
  6927     0E7F  0860               	movf	___fldiv@b,w
  6928     0E80  00DC               	movwf	?___fldiv
  6929     0E81  2FFF               	goto	l1527
  6930     0E82                     l4341:
  6931     0E82  0021               	movlb	1	; select bank1
  6932     0E83  082B               	movf	___fldiv@bexp^(0+128),w
  6933     0E84  1D03               	btfss	3,2
  6934     0E85  2E87               	goto	u3351
  6935     0E86  2E88               	goto	u3350
  6936     0E87                     u3351:
  6937     0E87  2E92               	goto	l4347
  6938     0E88                     u3350:
  6939     0E88                     l4343:
  6940     0E88  3000               	movlw	0
  6941     0E89  0020               	movlb	0	; select bank0
  6942     0E8A  00DF               	movwf	?___fldiv+3
  6943     0E8B  3000               	movlw	0
  6944     0E8C  00DE               	movwf	?___fldiv+2
  6945     0E8D  3000               	movlw	0
  6946     0E8E  00DD               	movwf	?___fldiv+1
  6947     0E8F  3000               	movlw	0
  6948     0E90  00DC               	movwf	?___fldiv
  6949     0E91  2FFF               	goto	l1527
  6950     0E92                     l4347:
  6951     0E92  082B               	movf	___fldiv@bexp^(0+128),w
  6952     0E93  0020               	movlb	0	; select bank0
  6953     0E94  00E4               	movwf	??___fldiv
  6954     0E95  01E5               	clrf	??___fldiv+1
  6955     0E96  0865               	movf	??___fldiv+1,w
  6956     0E97  00E7               	movwf	??___fldiv+3
  6957     0E98  0021               	movlb	1	; select bank1
  6958     0E99  082C               	movf	___fldiv@aexp^(0+128),w
  6959     0E9A  0020               	movlb	0	; select bank0
  6960     0E9B  0264               	subwf	??___fldiv,w
  6961     0E9C  00E6               	movwf	??___fldiv+2
  6962     0E9D  1C03               	skipc
  6963     0E9E  03E7               	decf	??___fldiv+3,f
  6964     0E9F  0866               	movf	??___fldiv+2,w
  6965     0EA0  3E7F               	addlw	127
  6966     0EA1  0021               	movlb	1	; select bank1
  6967     0EA2  00A5               	movwf	___fldiv@new_exp^(0+128)
  6968     0EA3  3000               	movlw	0
  6969     0EA4  0020               	movlb	0	; select bank0
  6970     0EA5  3D67               	addwfc	??___fldiv+3,w
  6971     0EA6  0021               	movlb	1	; select bank1
  6972     0EA7  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  6973     0EA8                     l4349:
  6974     0EA8  0020               	movlb	0	; select bank0
  6975     0EA9  0863               	movf	___fldiv@b+3,w
  6976     0EAA  0021               	movlb	1	; select bank1
  6977     0EAB  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  6978     0EAC  0020               	movlb	0	; select bank0
  6979     0EAD  0862               	movf	___fldiv@b+2,w
  6980     0EAE  0021               	movlb	1	; select bank1
  6981     0EAF  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  6982     0EB0  0020               	movlb	0	; select bank0
  6983     0EB1  0861               	movf	___fldiv@b+1,w
  6984     0EB2  0021               	movlb	1	; select bank1
  6985     0EB3  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  6986     0EB4  0020               	movlb	0	; select bank0
  6987     0EB5  0860               	movf	___fldiv@b,w
  6988     0EB6  0021               	movlb	1	; select bank1
  6989     0EB7  00A0               	movwf	___fldiv@rem^(0+128)
  6990     0EB8                     l4351:
  6991     0EB8  3000               	movlw	0
  6992     0EB9  0020               	movlb	0	; select bank0
  6993     0EBA  00E3               	movwf	___fldiv@b+3
  6994     0EBB  3000               	movlw	0
  6995     0EBC  00E2               	movwf	___fldiv@b+2
  6996     0EBD  3000               	movlw	0
  6997     0EBE  00E1               	movwf	___fldiv@b+1
  6998     0EBF  3000               	movlw	0
  6999     0EC0  00E0               	movwf	___fldiv@b
  7000     0EC1                     l4353:
  7001     0EC1  3000               	movlw	0
  7002     0EC2  0021               	movlb	1	; select bank1
  7003     0EC3  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  7004     0EC4  3000               	movlw	0
  7005     0EC5  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  7006     0EC6  3000               	movlw	0
  7007     0EC7  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  7008     0EC8  3000               	movlw	0
  7009     0EC9  00A7               	movwf	___fldiv@grs^(0+128)
  7010     0ECA                     l4355:
  7011     0ECA  01AC               	clrf	___fldiv@aexp^(0+128)
  7012     0ECB  2F20               	goto	l4375
  7013     0ECC                     l4357:
  7014     0ECC  082C               	movf	___fldiv@aexp^(0+128),w
  7015     0ECD  1903               	btfsc	3,2
  7016     0ECE  2ED0               	goto	u3361
  7017     0ECF  2ED1               	goto	u3360
  7018     0ED0                     u3361:
  7019     0ED0  2EEF               	goto	l4367
  7020     0ED1                     u3360:
  7021     0ED1                     l4359:
  7022     0ED1  3001               	movlw	1
  7023     0ED2                     u3375:
  7024     0ED2  35A0               	lslf	___fldiv@rem^(0+128),f
  7025     0ED3  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  7026     0ED4  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  7027     0ED5  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  7028     0ED6  0B89               	decfsz	9,f
  7029     0ED7  2ED2               	goto	u3375
  7030     0ED8  3001               	movlw	1
  7031     0ED9                     u3385:
  7032     0ED9  0020               	movlb	0	; select bank0
  7033     0EDA  35E0               	lslf	___fldiv@b,f
  7034     0EDB  0DE1               	rlf	___fldiv@b+1,f
  7035     0EDC  0DE2               	rlf	___fldiv@b+2,f
  7036     0EDD  0DE3               	rlf	___fldiv@b+3,f
  7037     0EDE  0B89               	decfsz	9,f
  7038     0EDF  2ED9               	goto	u3385
  7039     0EE0                     l4361:
  7040     0EE0  0021               	movlb	1	; select bank1
  7041     0EE1  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7042     0EE2  2EE4               	goto	u3391
  7043     0EE3  2EE5               	goto	u3390
  7044     0EE4                     u3391:
  7045     0EE4  2EE7               	goto	l4365
  7046     0EE5                     u3390:
  7047     0EE5                     l4363:
  7048     0EE5  0020               	movlb	0	; select bank0
  7049     0EE6  1460               	bsf	___fldiv@b,0
  7050     0EE7                     l4365:
  7051     0EE7  3001               	movlw	1
  7052     0EE8                     u3405:
  7053     0EE8  0021               	movlb	1	; select bank1
  7054     0EE9  35A7               	lslf	___fldiv@grs^(0+128),f
  7055     0EEA  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7056     0EEB  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7057     0EEC  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7058     0EED  0B89               	decfsz	9,f
  7059     0EEE  2EE8               	goto	u3405
  7060     0EEF                     l4367:
  7061     0EEF  0020               	movlb	0	; select bank0
  7062     0EF0  085F               	movf	___fldiv@a+3,w
  7063     0EF1  0021               	movlb	1	; select bank1
  7064     0EF2  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  7065     0EF3  1D03               	skipz
  7066     0EF4  2F05               	goto	u3415
  7067     0EF5  0020               	movlb	0	; select bank0
  7068     0EF6  085E               	movf	___fldiv@a+2,w
  7069     0EF7  0021               	movlb	1	; select bank1
  7070     0EF8  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  7071     0EF9  1D03               	skipz
  7072     0EFA  2F05               	goto	u3415
  7073     0EFB  0020               	movlb	0	; select bank0
  7074     0EFC  085D               	movf	___fldiv@a+1,w
  7075     0EFD  0021               	movlb	1	; select bank1
  7076     0EFE  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  7077     0EFF  1D03               	skipz
  7078     0F00  2F05               	goto	u3415
  7079     0F01  0020               	movlb	0	; select bank0
  7080     0F02  085C               	movf	___fldiv@a,w
  7081     0F03  0021               	movlb	1	; select bank1
  7082     0F04  0220               	subwf	___fldiv@rem^(0+128),w
  7083     0F05                     u3415:
  7084     0F05  1C03               	skipc
  7085     0F06  2F08               	goto	u3411
  7086     0F07  2F09               	goto	u3410
  7087     0F08                     u3411:
  7088     0F08  2F1A               	goto	l4373
  7089     0F09                     u3410:
  7090     0F09                     l4369:
  7091     0F09  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  7092     0F0A                     l4371:
  7093     0F0A  0020               	movlb	0	; select bank0
  7094     0F0B  085C               	movf	___fldiv@a,w
  7095     0F0C  0021               	movlb	1	; select bank1
  7096     0F0D  02A0               	subwf	___fldiv@rem^(0+128),f
  7097     0F0E  0020               	movlb	0	; select bank0
  7098     0F0F  085D               	movf	___fldiv@a+1,w
  7099     0F10  0021               	movlb	1	; select bank1
  7100     0F11  3BA1               	subwfb	(___fldiv@rem+1)^(0+128),f
  7101     0F12  0020               	movlb	0	; select bank0
  7102     0F13  085E               	movf	___fldiv@a+2,w
  7103     0F14  0021               	movlb	1	; select bank1
  7104     0F15  3BA2               	subwfb	(___fldiv@rem+2)^(0+128),f
  7105     0F16  0020               	movlb	0	; select bank0
  7106     0F17  085F               	movf	___fldiv@a+3,w
  7107     0F18  0021               	movlb	1	; select bank1
  7108     0F19  3BA3               	subwfb	(___fldiv@rem+3)^(0+128),f
  7109     0F1A                     l4373:
  7110     0F1A  3001               	movlw	1
  7111     0F1B  0020               	movlb	0	; select bank0
  7112     0F1C  00E4               	movwf	??___fldiv
  7113     0F1D  0864               	movf	??___fldiv,w
  7114     0F1E  0021               	movlb	1	; select bank1
  7115     0F1F  07AC               	addwf	___fldiv@aexp^(0+128),f
  7116     0F20                     l4375:
  7117     0F20  301A               	movlw	26
  7118     0F21  022C               	subwf	___fldiv@aexp^(0+128),w
  7119     0F22  1C03               	skipc
  7120     0F23  2F25               	goto	u3421
  7121     0F24  2F26               	goto	u3420
  7122     0F25                     u3421:
  7123     0F25  2ECC               	goto	l4357
  7124     0F26                     u3420:
  7125     0F26                     l4377:
  7126     0F26  0823               	movf	(___fldiv@rem+3)^(0+128),w
  7127     0F27  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  7128     0F28  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  7129     0F29  0420               	iorwf	___fldiv@rem^(0+128),w
  7130     0F2A  1903               	skipnz
  7131     0F2B  2F2D               	goto	u3431
  7132     0F2C  2F2E               	goto	u3430
  7133     0F2D                     u3431:
  7134     0F2D  2F4A               	goto	l4391
  7135     0F2E                     u3430:
  7136     0F2E                     l4379:
  7137     0F2E  1427               	bsf	___fldiv@grs^(0+128),0
  7138     0F2F  2F4A               	goto	l4391
  7139     0F30                     l4381:
  7140     0F30  3001               	movlw	1
  7141     0F31                     u3445:
  7142     0F31  35E0               	lslf	___fldiv@b,f
  7143     0F32  0DE1               	rlf	___fldiv@b+1,f
  7144     0F33  0DE2               	rlf	___fldiv@b+2,f
  7145     0F34  0DE3               	rlf	___fldiv@b+3,f
  7146     0F35  0B89               	decfsz	9,f
  7147     0F36  2F31               	goto	u3445
  7148     0F37                     l4383:
  7149     0F37  0021               	movlb	1	; select bank1
  7150     0F38  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7151     0F39  2F3B               	goto	u3451
  7152     0F3A  2F3C               	goto	u3450
  7153     0F3B                     u3451:
  7154     0F3B  2F3E               	goto	l4387
  7155     0F3C                     u3450:
  7156     0F3C                     l4385:
  7157     0F3C  0020               	movlb	0	; select bank0
  7158     0F3D  1460               	bsf	___fldiv@b,0
  7159     0F3E                     l4387:
  7160     0F3E  3001               	movlw	1
  7161     0F3F                     u3465:
  7162     0F3F  0021               	movlb	1	; select bank1
  7163     0F40  35A7               	lslf	___fldiv@grs^(0+128),f
  7164     0F41  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7165     0F42  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7166     0F43  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7167     0F44  0B89               	decfsz	9,f
  7168     0F45  2F3F               	goto	u3465
  7169     0F46                     l4389:
  7170     0F46  30FF               	movlw	255
  7171     0F47  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7172     0F48  30FF               	movlw	255
  7173     0F49  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7174     0F4A                     l4391:
  7175     0F4A  0020               	movlb	0	; select bank0
  7176     0F4B  1FE2               	btfss	___fldiv@b+2,7
  7177     0F4C  2F4E               	goto	u3471
  7178     0F4D  2F4F               	goto	u3470
  7179     0F4E                     u3471:
  7180     0F4E  2F30               	goto	l4381
  7181     0F4F                     u3470:
  7182     0F4F                     l4393:
  7183     0F4F  0021               	movlb	1	; select bank1
  7184     0F50  01AC               	clrf	___fldiv@aexp^(0+128)
  7185     0F51                     l4395:
  7186     0F51  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7187     0F52  2F54               	goto	u3481
  7188     0F53  2F55               	goto	u3480
  7189     0F54                     u3481:
  7190     0F54  2F79               	goto	l4403
  7191     0F55                     u3480:
  7192     0F55                     l4397:
  7193     0F55  30FF               	movlw	255
  7194     0F56  0527               	andwf	___fldiv@grs^(0+128),w
  7195     0F57  0020               	movlb	0	; select bank0
  7196     0F58  00E4               	movwf	??___fldiv
  7197     0F59  30FF               	movlw	255
  7198     0F5A  0021               	movlb	1	; select bank1
  7199     0F5B  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  7200     0F5C  0020               	movlb	0	; select bank0
  7201     0F5D  00E5               	movwf	??___fldiv+1
  7202     0F5E  30FF               	movlw	255
  7203     0F5F  0021               	movlb	1	; select bank1
  7204     0F60  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  7205     0F61  0020               	movlb	0	; select bank0
  7206     0F62  00E6               	movwf	??___fldiv+2
  7207     0F63  307F               	movlw	127
  7208     0F64  0021               	movlb	1	; select bank1
  7209     0F65  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  7210     0F66  0020               	movlb	0	; select bank0
  7211     0F67  00E7               	movwf	??___fldiv+3
  7212     0F68  0867               	movf	??___fldiv+3,w
  7213     0F69  0466               	iorwf	??___fldiv+2,w
  7214     0F6A  0465               	iorwf	??___fldiv+1,w
  7215     0F6B  0464               	iorwf	??___fldiv,w
  7216     0F6C  1903               	skipnz
  7217     0F6D  2F6F               	goto	u3491
  7218     0F6E  2F70               	goto	u3490
  7219     0F6F                     u3491:
  7220     0F6F  2F74               	goto	l1541
  7221     0F70                     u3490:
  7222     0F70                     l4399:
  7223     0F70  0021               	movlb	1	; select bank1
  7224     0F71  01AC               	clrf	___fldiv@aexp^(0+128)
  7225     0F72  0AAC               	incf	___fldiv@aexp^(0+128),f
  7226     0F73  2F79               	goto	l4403
  7227     0F74                     l1541:
  7228     0F74  1C60               	btfss	___fldiv@b,0
  7229     0F75  2F77               	goto	u3501
  7230     0F76  2F78               	goto	u3500
  7231     0F77                     u3501:
  7232     0F77  2F79               	goto	l4403
  7233     0F78                     u3500:
  7234     0F78  2F70               	goto	l4399
  7235     0F79                     l4403:
  7236     0F79  0021               	movlb	1	; select bank1
  7237     0F7A  082C               	movf	___fldiv@aexp^(0+128),w
  7238     0F7B  1903               	btfsc	3,2
  7239     0F7C  2F7E               	goto	u3511
  7240     0F7D  2F7F               	goto	u3510
  7241     0F7E                     u3511:
  7242     0F7E  2FA9               	goto	l4413
  7243     0F7F                     u3510:
  7244     0F7F                     l4405:
  7245     0F7F  3001               	movlw	1
  7246     0F80  0020               	movlb	0	; select bank0
  7247     0F81  07E0               	addwf	___fldiv@b,f
  7248     0F82  3000               	movlw	0
  7249     0F83  3DE1               	addwfc	___fldiv@b+1,f
  7250     0F84  3000               	movlw	0
  7251     0F85  3DE2               	addwfc	___fldiv@b+2,f
  7252     0F86  3000               	movlw	0
  7253     0F87  3DE3               	addwfc	___fldiv@b+3,f
  7254     0F88                     l4407:
  7255     0F88  1C63               	btfss	___fldiv@b+3,0
  7256     0F89  2F8B               	goto	u3521
  7257     0F8A  2F8C               	goto	u3520
  7258     0F8B                     u3521:
  7259     0F8B  2FA9               	goto	l4413
  7260     0F8C                     u3520:
  7261     0F8C                     l4409:
  7262     0F8C  0860               	movf	___fldiv@b,w
  7263     0F8D  00E4               	movwf	??___fldiv
  7264     0F8E  0861               	movf	___fldiv@b+1,w
  7265     0F8F  00E5               	movwf	??___fldiv+1
  7266     0F90  0862               	movf	___fldiv@b+2,w
  7267     0F91  00E6               	movwf	??___fldiv+2
  7268     0F92  0863               	movf	___fldiv@b+3,w
  7269     0F93  00E7               	movwf	??___fldiv+3
  7270     0F94  3001               	movlw	1
  7271     0F95  00E8               	movwf	??___fldiv+4
  7272     0F96                     u3535:
  7273     0F96  37E7               	asrf	??___fldiv+3,f
  7274     0F97  0CE6               	rrf	??___fldiv+2,f
  7275     0F98  0CE5               	rrf	??___fldiv+1,f
  7276     0F99  0CE4               	rrf	??___fldiv,f
  7277     0F9A                     u3530:
  7278     0F9A  0BE8               	decfsz	??___fldiv+4,f
  7279     0F9B  2F96               	goto	u3535
  7280     0F9C  0867               	movf	??___fldiv+3,w
  7281     0F9D  00E3               	movwf	___fldiv@b+3
  7282     0F9E  0866               	movf	??___fldiv+2,w
  7283     0F9F  00E2               	movwf	___fldiv@b+2
  7284     0FA0  0865               	movf	??___fldiv+1,w
  7285     0FA1  00E1               	movwf	___fldiv@b+1
  7286     0FA2  0864               	movf	??___fldiv,w
  7287     0FA3  00E0               	movwf	___fldiv@b
  7288     0FA4                     l4411:
  7289     0FA4  3001               	movlw	1
  7290     0FA5  0021               	movlb	1	; select bank1
  7291     0FA6  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7292     0FA7  3000               	movlw	0
  7293     0FA8  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7294     0FA9                     l4413:
  7295     0FA9  0021               	movlb	1	; select bank1
  7296     0FAA  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7297     0FAB  3A80               	xorlw	128
  7298     0FAC  0020               	movlb	0	; select bank0
  7299     0FAD  00E4               	movwf	??___fldiv
  7300     0FAE  3080               	movlw	128
  7301     0FAF  0264               	subwf	??___fldiv,w
  7302     0FB0  1D03               	skipz
  7303     0FB1  2FB5               	goto	u3545
  7304     0FB2  30FF               	movlw	255
  7305     0FB3  0021               	movlb	1	; select bank1
  7306     0FB4  0225               	subwf	___fldiv@new_exp^(0+128),w
  7307     0FB5                     u3545:
  7308     0FB5  1C03               	skipc
  7309     0FB6  2FB8               	goto	u3541
  7310     0FB7  2FB9               	goto	u3540
  7311     0FB8                     u3541:
  7312     0FB8  2FC7               	goto	l1546
  7313     0FB9                     u3540:
  7314     0FB9                     l4415:
  7315     0FB9  30FF               	movlw	255
  7316     0FBA  0021               	movlb	1	; select bank1
  7317     0FBB  00A5               	movwf	___fldiv@new_exp^(0+128)
  7318     0FBC  3000               	movlw	0
  7319     0FBD  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  7320     0FBE  3000               	movlw	0
  7321     0FBF  0020               	movlb	0	; select bank0
  7322     0FC0  00E3               	movwf	___fldiv@b+3
  7323     0FC1  3000               	movlw	0
  7324     0FC2  00E2               	movwf	___fldiv@b+2
  7325     0FC3  3000               	movlw	0
  7326     0FC4  00E1               	movwf	___fldiv@b+1
  7327     0FC5  3000               	movlw	0
  7328     0FC6  00E0               	movwf	___fldiv@b
  7329     0FC7                     l1546:
  7330     0FC7  0021               	movlb	1	; select bank1
  7331     0FC8  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7332     0FC9  3A80               	xorlw	128
  7333     0FCA  0020               	movlb	0	; select bank0
  7334     0FCB  00E4               	movwf	??___fldiv
  7335     0FCC  3080               	movlw	128
  7336     0FCD  0264               	subwf	??___fldiv,w
  7337     0FCE  1D03               	skipz
  7338     0FCF  2FD3               	goto	u3555
  7339     0FD0  3001               	movlw	1
  7340     0FD1  0021               	movlb	1	; select bank1
  7341     0FD2  0225               	subwf	___fldiv@new_exp^(0+128),w
  7342     0FD3                     u3555:
  7343     0FD3  1803               	skipnc
  7344     0FD4  2FD6               	goto	u3551
  7345     0FD5  2FD7               	goto	u3550
  7346     0FD6                     u3551:
  7347     0FD6  2FE5               	goto	l1547
  7348     0FD7                     u3550:
  7349     0FD7                     l4417:
  7350     0FD7  0021               	movlb	1	; select bank1
  7351     0FD8  01A5               	clrf	___fldiv@new_exp^(0+128)
  7352     0FD9  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  7353     0FDA                     l4419:
  7354     0FDA  3000               	movlw	0
  7355     0FDB  0020               	movlb	0	; select bank0
  7356     0FDC  00E3               	movwf	___fldiv@b+3
  7357     0FDD  3000               	movlw	0
  7358     0FDE  00E2               	movwf	___fldiv@b+2
  7359     0FDF  3000               	movlw	0
  7360     0FE0  00E1               	movwf	___fldiv@b+1
  7361     0FE1  3000               	movlw	0
  7362     0FE2  00E0               	movwf	___fldiv@b
  7363     0FE3                     l4421:
  7364     0FE3  0021               	movlb	1	; select bank1
  7365     0FE4  01A4               	clrf	___fldiv@sign^(0+128)
  7366     0FE5                     l1547:
  7367     0FE5  0021               	movlb	1	; select bank1
  7368     0FE6  0825               	movf	___fldiv@new_exp^(0+128),w
  7369     0FE7  00AB               	movwf	___fldiv@bexp^(0+128)
  7370     0FE8                     l4423:
  7371     0FE8  1C2B               	btfss	___fldiv@bexp^(0+128),0
  7372     0FE9  2FEB               	goto	u3561
  7373     0FEA  2FEC               	goto	u3560
  7374     0FEB                     u3561:
  7375     0FEB  2FEF               	goto	l4427
  7376     0FEC                     u3560:
  7377     0FEC                     l4425:
  7378     0FEC  0020               	movlb	0	; select bank0
  7379     0FED  17E2               	bsf	___fldiv@b+2,7
  7380     0FEE  2FF4               	goto	l1549
  7381     0FEF                     l4427:
  7382     0FEF  307F               	movlw	127
  7383     0FF0  0020               	movlb	0	; select bank0
  7384     0FF1  00E4               	movwf	??___fldiv
  7385     0FF2  0864               	movf	??___fldiv,w
  7386     0FF3  05E2               	andwf	___fldiv@b+2,f
  7387     0FF4                     l1549:
  7388     0FF4  0021               	movlb	1	; select bank1
  7389     0FF5  362B               	lsrf	___fldiv@bexp^(0+128),w
  7390     0FF6  0020               	movlb	0	; select bank0
  7391     0FF7  00E3               	movwf	___fldiv@b+3
  7392     0FF8  0021               	movlb	1	; select bank1
  7393     0FF9  0824               	movf	___fldiv@sign^(0+128),w
  7394     0FFA  0020               	movlb	0	; select bank0
  7395     0FFB  00E4               	movwf	??___fldiv
  7396     0FFC  0864               	movf	??___fldiv,w
  7397     0FFD  04E3               	iorwf	___fldiv@b+3,f
  7398     0FFE  2E79               	goto	l4337
  7399     0FFF                     l1527:
  7400     0FFF  0008               	return
  7401     1000                     __end_of___fldiv:
  7402                           
  7403                           	psect	text22
  7404     04E2                     __ptext22:	
  7405 ;; *************** function ___fladd *****************
  7406 ;; Defined at:
  7407 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  b               4   40[BANK0 ] unsigned char 
  7410 ;;  a               4   44[BANK0 ] unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  grs             1   59[BANK0 ] unsigned char 
  7413 ;;  bexp            1   58[BANK0 ] unsigned char 
  7414 ;;  aexp            1   57[BANK0 ] unsigned char 
  7415 ;;  signs           1   56[BANK0 ] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  4   40[BANK0 ] unsigned char 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7425 ;;      Params:         0       8       0       0       0       0       0       0
  7426 ;;      Locals:         0       4       0       0       0       0       0       0
  7427 ;;      Temps:          0       8       0       0       0       0       0       0
  7428 ;;      Totals:         0      20       0       0       0       0       0       0
  7429 ;;Total ram usage:       20 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 7
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_ReadData
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439     04E2                     ___fladd:	
  7440                           ;psect for function ___fladd
  7441                           
  7442     04E2                     l4099:	
  7443                           ;incstack = 0
  7444                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7445                           
  7446     04E2  0020               	movlb	0	; select bank0
  7447     04E3  084B               	movf	___fladd@b+3,w
  7448     04E4  3980               	andlw	128
  7449     04E5  00D8               	movwf	___fladd@signs
  7450     04E6                     l4101:
  7451     04E6  354B               	lslf	___fladd@b+3,w
  7452     04E7  00DA               	movwf	___fladd@bexp
  7453     04E8                     l4103:
  7454     04E8  1FCA               	btfss	___fladd@b+2,7
  7455     04E9  2CEB               	goto	u2851
  7456     04EA  2CEC               	goto	u2850
  7457     04EB                     u2851:
  7458     04EB  2CED               	goto	l4107
  7459     04EC                     u2850:
  7460     04EC                     l4105:
  7461     04EC  145A               	bsf	___fladd@bexp,0
  7462     04ED                     l4107:
  7463     04ED  085A               	movf	___fladd@bexp,w
  7464     04EE  1903               	btfsc	3,2
  7465     04EF  2CF1               	goto	u2861
  7466     04F0  2CF2               	goto	u2860
  7467     04F1                     u2861:
  7468     04F1  2D02               	goto	l4117
  7469     04F2                     u2860:
  7470     04F2                     l4109:
  7471     04F2  0A5A               	incf	___fladd@bexp,w
  7472     04F3  1D03               	btfss	3,2
  7473     04F4  2CF6               	goto	u2871
  7474     04F5  2CF7               	goto	u2870
  7475     04F6                     u2871:
  7476     04F6  2CFF               	goto	l4113
  7477     04F7                     u2870:
  7478     04F7                     l4111:
  7479     04F7  3000               	movlw	0
  7480     04F8  00CB               	movwf	___fladd@b+3
  7481     04F9  3000               	movlw	0
  7482     04FA  00CA               	movwf	___fladd@b+2
  7483     04FB  3000               	movlw	0
  7484     04FC  00C9               	movwf	___fladd@b+1
  7485     04FD  3000               	movlw	0
  7486     04FE  00C8               	movwf	___fladd@b
  7487     04FF                     l4113:
  7488     04FF  17CA               	bsf	___fladd@b+2,7
  7489     0500                     l4115:
  7490     0500  01CB               	clrf	___fladd@b+3
  7491     0501  2D0A               	goto	l4119
  7492     0502                     l4117:
  7493     0502  3000               	movlw	0
  7494     0503  00CB               	movwf	___fladd@b+3
  7495     0504  3000               	movlw	0
  7496     0505  00CA               	movwf	___fladd@b+2
  7497     0506  3000               	movlw	0
  7498     0507  00C9               	movwf	___fladd@b+1
  7499     0508  3000               	movlw	0
  7500     0509  00C8               	movwf	___fladd@b
  7501     050A                     l4119:
  7502     050A  084F               	movf	___fladd@a+3,w
  7503     050B  3980               	andlw	128
  7504     050C  00D9               	movwf	___fladd@aexp
  7505     050D                     l4121:
  7506     050D  0859               	movf	___fladd@aexp,w
  7507     050E  0658               	xorwf	___fladd@signs,w
  7508     050F  1903               	skipnz
  7509     0510  2D12               	goto	u2881
  7510     0511  2D13               	goto	u2880
  7511     0512                     u2881:
  7512     0512  2D14               	goto	l4125
  7513     0513                     u2880:
  7514     0513                     l4123:
  7515     0513  1758               	bsf	___fladd@signs,6
  7516     0514                     l4125:
  7517     0514  354F               	lslf	___fladd@a+3,w
  7518     0515  00D9               	movwf	___fladd@aexp
  7519     0516                     l4127:
  7520     0516  1FCE               	btfss	___fladd@a+2,7
  7521     0517  2D19               	goto	u2891
  7522     0518  2D1A               	goto	u2890
  7523     0519                     u2891:
  7524     0519  2D1B               	goto	l4131
  7525     051A                     u2890:
  7526     051A                     l4129:
  7527     051A  1459               	bsf	___fladd@aexp,0
  7528     051B                     l4131:
  7529     051B  0859               	movf	___fladd@aexp,w
  7530     051C  1903               	btfsc	3,2
  7531     051D  2D1F               	goto	u2901
  7532     051E  2D20               	goto	u2900
  7533     051F                     u2901:
  7534     051F  2D30               	goto	l4141
  7535     0520                     u2900:
  7536     0520                     l4133:
  7537     0520  0A59               	incf	___fladd@aexp,w
  7538     0521  1D03               	btfss	3,2
  7539     0522  2D24               	goto	u2911
  7540     0523  2D25               	goto	u2910
  7541     0524                     u2911:
  7542     0524  2D2D               	goto	l4137
  7543     0525                     u2910:
  7544     0525                     l4135:
  7545     0525  3000               	movlw	0
  7546     0526  00CF               	movwf	___fladd@a+3
  7547     0527  3000               	movlw	0
  7548     0528  00CE               	movwf	___fladd@a+2
  7549     0529  3000               	movlw	0
  7550     052A  00CD               	movwf	___fladd@a+1
  7551     052B  3000               	movlw	0
  7552     052C  00CC               	movwf	___fladd@a
  7553     052D                     l4137:
  7554     052D  17CE               	bsf	___fladd@a+2,7
  7555     052E                     l4139:
  7556     052E  01CF               	clrf	___fladd@a+3
  7557     052F  2D38               	goto	l1469
  7558     0530                     l4141:
  7559     0530  3000               	movlw	0
  7560     0531  00CF               	movwf	___fladd@a+3
  7561     0532  3000               	movlw	0
  7562     0533  00CE               	movwf	___fladd@a+2
  7563     0534  3000               	movlw	0
  7564     0535  00CD               	movwf	___fladd@a+1
  7565     0536  3000               	movlw	0
  7566     0537  00CC               	movwf	___fladd@a
  7567     0538                     l1469:
  7568     0538  085A               	movf	___fladd@bexp,w
  7569     0539  0259               	subwf	___fladd@aexp,w
  7570     053A  1803               	skipnc
  7571     053B  2D3D               	goto	u2921
  7572     053C  2D3E               	goto	u2920
  7573     053D                     u2921:
  7574     053D  2D64               	goto	l4177
  7575     053E                     u2920:
  7576     053E                     l4143:
  7577     053E  1F58               	btfss	___fladd@signs,6
  7578     053F  2D41               	goto	u2931
  7579     0540  2D42               	goto	u2930
  7580     0541                     u2931:
  7581     0541  2D46               	goto	l4147
  7582     0542                     u2930:
  7583     0542                     l4145:
  7584     0542  3080               	movlw	128
  7585     0543  00D0               	movwf	??___fladd
  7586     0544  0850               	movf	??___fladd,w
  7587     0545  06D8               	xorwf	___fladd@signs,f
  7588     0546                     l4147:
  7589     0546  085A               	movf	___fladd@bexp,w
  7590     0547  00DB               	movwf	___fladd@grs
  7591     0548                     l4149:
  7592     0548  0859               	movf	___fladd@aexp,w
  7593     0549  00DA               	movwf	___fladd@bexp
  7594     054A                     l4151:
  7595     054A  085B               	movf	___fladd@grs,w
  7596     054B  00D9               	movwf	___fladd@aexp
  7597     054C                     l4153:
  7598     054C  0848               	movf	___fladd@b,w
  7599     054D  00DB               	movwf	___fladd@grs
  7600     054E                     l4155:
  7601     054E  084C               	movf	___fladd@a,w
  7602     054F  00C8               	movwf	___fladd@b
  7603     0550                     l4157:
  7604     0550  085B               	movf	___fladd@grs,w
  7605     0551  00CC               	movwf	___fladd@a
  7606     0552                     l4159:
  7607     0552  0849               	movf	___fladd@b+1,w
  7608     0553  00DB               	movwf	___fladd@grs
  7609     0554                     l4161:
  7610     0554  084D               	movf	___fladd@a+1,w
  7611     0555  00C9               	movwf	___fladd@b+1
  7612     0556                     l4163:
  7613     0556  085B               	movf	___fladd@grs,w
  7614     0557  00CD               	movwf	___fladd@a+1
  7615     0558                     l4165:
  7616     0558  084A               	movf	___fladd@b+2,w
  7617     0559  00DB               	movwf	___fladd@grs
  7618     055A                     l4167:
  7619     055A  084E               	movf	___fladd@a+2,w
  7620     055B  00CA               	movwf	___fladd@b+2
  7621     055C                     l4169:
  7622     055C  085B               	movf	___fladd@grs,w
  7623     055D  00CE               	movwf	___fladd@a+2
  7624     055E                     l4171:
  7625     055E  084B               	movf	___fladd@b+3,w
  7626     055F  00DB               	movwf	___fladd@grs
  7627     0560                     l4173:
  7628     0560  084F               	movf	___fladd@a+3,w
  7629     0561  00CB               	movwf	___fladd@b+3
  7630     0562                     l4175:
  7631     0562  085B               	movf	___fladd@grs,w
  7632     0563  00CF               	movwf	___fladd@a+3
  7633     0564                     l4177:
  7634     0564  01DB               	clrf	___fladd@grs
  7635     0565                     l4179:
  7636     0565  0859               	movf	___fladd@aexp,w
  7637     0566  00D0               	movwf	??___fladd
  7638     0567  01D1               	clrf	??___fladd+1
  7639     0568  0851               	movf	??___fladd+1,w
  7640     0569  00D3               	movwf	??___fladd+3
  7641     056A  085A               	movf	___fladd@bexp,w
  7642     056B  0250               	subwf	??___fladd,w
  7643     056C  00D2               	movwf	??___fladd+2
  7644     056D  1C03               	skipc
  7645     056E  03D3               	decf	??___fladd+3,f
  7646     056F  0853               	movf	??___fladd+3,w
  7647     0570  3A80               	xorlw	128
  7648     0571  00D4               	movwf	??___fladd+4
  7649     0572  3080               	movlw	128
  7650     0573  0254               	subwf	??___fladd+4,w
  7651     0574  1D03               	skipz
  7652     0575  2D78               	goto	u2945
  7653     0576  301A               	movlw	26
  7654     0577  0252               	subwf	??___fladd+2,w
  7655     0578                     u2945:
  7656     0578  1C03               	skipc
  7657     0579  2D7B               	goto	u2941
  7658     057A  2D7C               	goto	u2940
  7659     057B                     u2941:
  7660     057B  2DAE               	goto	l4195
  7661     057C                     u2940:
  7662     057C                     l4181:
  7663     057C  0020               	movlb	0	; select bank0
  7664     057D  084B               	movf	___fladd@b+3,w
  7665     057E  044A               	iorwf	___fladd@b+2,w
  7666     057F  0449               	iorwf	___fladd@b+1,w
  7667     0580  0448               	iorwf	___fladd@b,w
  7668     0581  1D03               	skipz
  7669     0582  2D84               	goto	u2951
  7670     0583  2D86               	goto	u2950
  7671     0584                     u2951:
  7672     0584  3001               	movlw	1
  7673     0585  2D87               	goto	u2960
  7674     0586                     u2950:
  7675     0586  3000               	movlw	0
  7676     0587                     u2960:
  7677     0587  00DB               	movwf	___fladd@grs
  7678     0588  3000               	movlw	0
  7679     0589  00CB               	movwf	___fladd@b+3
  7680     058A  3000               	movlw	0
  7681     058B  00CA               	movwf	___fladd@b+2
  7682     058C  3000               	movlw	0
  7683     058D  00C9               	movwf	___fladd@b+1
  7684     058E  3000               	movlw	0
  7685     058F  00C8               	movwf	___fladd@b
  7686     0590  0859               	movf	___fladd@aexp,w
  7687     0591  00DA               	movwf	___fladd@bexp
  7688     0592  2DB5               	goto	l1473
  7689     0593                     l1475:
  7690     0593  1C5B               	btfss	___fladd@grs,0
  7691     0594  2D96               	goto	u2971
  7692     0595  2D97               	goto	u2970
  7693     0596                     u2971:
  7694     0596  2D9B               	goto	l4185
  7695     0597                     u2970:
  7696     0597                     l4183:
  7697     0597  365B               	lsrf	___fladd@grs,w
  7698     0598  3801               	iorlw	1
  7699     0599  00DB               	movwf	___fladd@grs
  7700     059A  2D9D               	goto	l4187
  7701     059B                     l4185:
  7702     059B  1003               	clrc
  7703     059C  0CDB               	rrf	___fladd@grs,f
  7704     059D                     l4187:
  7705     059D  1C48               	btfss	___fladd@b,0
  7706     059E  2DA0               	goto	u2981
  7707     059F  2DA1               	goto	u2980
  7708     05A0                     u2981:
  7709     05A0  2DA2               	goto	l4191
  7710     05A1                     u2980:
  7711     05A1                     l4189:
  7712     05A1  17DB               	bsf	___fladd@grs,7
  7713     05A2                     l4191:
  7714     05A2  3001               	movlw	1
  7715     05A3  00D0               	movwf	??___fladd
  7716     05A4                     u2995:
  7717     05A4  37CB               	asrf	___fladd@b+3,f
  7718     05A5  0CCA               	rrf	___fladd@b+2,f
  7719     05A6  0CC9               	rrf	___fladd@b+1,f
  7720     05A7  0CC8               	rrf	___fladd@b,f
  7721     05A8  0BD0               	decfsz	??___fladd& (0+127),f
  7722     05A9  2DA4               	goto	u2995
  7723     05AA                     l4193:
  7724     05AA  3001               	movlw	1
  7725     05AB  00D0               	movwf	??___fladd
  7726     05AC  0850               	movf	??___fladd,w
  7727     05AD  07DA               	addwf	___fladd@bexp,f
  7728     05AE                     l4195:
  7729     05AE  0020               	movlb	0	; select bank0
  7730     05AF  0859               	movf	___fladd@aexp,w
  7731     05B0  025A               	subwf	___fladd@bexp,w
  7732     05B1  1C03               	skipc
  7733     05B2  2DB4               	goto	u3001
  7734     05B3  2DB5               	goto	u3000
  7735     05B4                     u3001:
  7736     05B4  2D93               	goto	l1475
  7737     05B5                     u3000:
  7738     05B5                     l1473:
  7739     05B5  1B58               	btfsc	___fladd@signs,6
  7740     05B6  2DB8               	goto	u3011
  7741     05B7  2DB9               	goto	u3010
  7742     05B8                     u3011:
  7743     05B8  2DEF               	goto	l4221
  7744     05B9                     u3010:
  7745     05B9                     l4197:
  7746     05B9  085A               	movf	___fladd@bexp,w
  7747     05BA  1D03               	btfss	3,2
  7748     05BB  2DBD               	goto	u3021
  7749     05BC  2DBE               	goto	u3020
  7750     05BD                     u3021:
  7751     05BD  2DC7               	goto	l4203
  7752     05BE                     u3020:
  7753     05BE                     l4199:
  7754     05BE  3000               	movlw	0
  7755     05BF  00CB               	movwf	?___fladd+3
  7756     05C0  3000               	movlw	0
  7757     05C1  00CA               	movwf	?___fladd+2
  7758     05C2  3000               	movlw	0
  7759     05C3  00C9               	movwf	?___fladd+1
  7760     05C4  3000               	movlw	0
  7761     05C5  00C8               	movwf	?___fladd
  7762     05C6  2EE9               	goto	l1482
  7763     05C7                     l4203:
  7764     05C7  084C               	movf	___fladd@a,w
  7765     05C8  07C8               	addwf	___fladd@b,f
  7766     05C9  084D               	movf	___fladd@a+1,w
  7767     05CA  3DC9               	addwfc	___fladd@b+1,f
  7768     05CB  084E               	movf	___fladd@a+2,w
  7769     05CC  3DCA               	addwfc	___fladd@b+2,f
  7770     05CD  084F               	movf	___fladd@a+3,w
  7771     05CE  3DCB               	addwfc	___fladd@b+3,f
  7772     05CF                     l4205:
  7773     05CF  1C4B               	btfss	___fladd@b+3,0
  7774     05D0  2DD2               	goto	u3031
  7775     05D1  2DD3               	goto	u3030
  7776     05D2                     u3031:
  7777     05D2  2E7B               	goto	l4255
  7778     05D3                     u3030:
  7779     05D3                     l4207:
  7780     05D3  1C5B               	btfss	___fladd@grs,0
  7781     05D4  2DD6               	goto	u3041
  7782     05D5  2DD7               	goto	u3040
  7783     05D6                     u3041:
  7784     05D6  2DDB               	goto	l4211
  7785     05D7                     u3040:
  7786     05D7                     l4209:
  7787     05D7  365B               	lsrf	___fladd@grs,w
  7788     05D8  3801               	iorlw	1
  7789     05D9  00DB               	movwf	___fladd@grs
  7790     05DA  2DDD               	goto	l4213
  7791     05DB                     l4211:
  7792     05DB  1003               	clrc
  7793     05DC  0CDB               	rrf	___fladd@grs,f
  7794     05DD                     l4213:
  7795     05DD  1C48               	btfss	___fladd@b,0
  7796     05DE  2DE0               	goto	u3051
  7797     05DF  2DE1               	goto	u3050
  7798     05E0                     u3051:
  7799     05E0  2DE2               	goto	l4217
  7800     05E1                     u3050:
  7801     05E1                     l4215:
  7802     05E1  17DB               	bsf	___fladd@grs,7
  7803     05E2                     l4217:
  7804     05E2  3001               	movlw	1
  7805     05E3  00D0               	movwf	??___fladd
  7806     05E4                     u3065:
  7807     05E4  37CB               	asrf	___fladd@b+3,f
  7808     05E5  0CCA               	rrf	___fladd@b+2,f
  7809     05E6  0CC9               	rrf	___fladd@b+1,f
  7810     05E7  0CC8               	rrf	___fladd@b,f
  7811     05E8  0BD0               	decfsz	??___fladd& (0+127),f
  7812     05E9  2DE4               	goto	u3065
  7813     05EA                     l4219:
  7814     05EA  3001               	movlw	1
  7815     05EB  00D0               	movwf	??___fladd
  7816     05EC  0850               	movf	??___fladd,w
  7817     05ED  07DA               	addwf	___fladd@bexp,f
  7818     05EE  2E7B               	goto	l4255
  7819     05EF                     l4221:
  7820     05EF  084B               	movf	___fladd@b+3,w
  7821     05F0  3A80               	xorlw	128
  7822     05F1  00D0               	movwf	??___fladd
  7823     05F2  084F               	movf	___fladd@a+3,w
  7824     05F3  3A80               	xorlw	128
  7825     05F4  0250               	subwf	??___fladd,w
  7826     05F5  1D03               	skipz
  7827     05F6  2E01               	goto	u3073
  7828     05F7  084E               	movf	___fladd@a+2,w
  7829     05F8  024A               	subwf	___fladd@b+2,w
  7830     05F9  1D03               	skipz
  7831     05FA  2E01               	goto	u3073
  7832     05FB  084D               	movf	___fladd@a+1,w
  7833     05FC  0249               	subwf	___fladd@b+1,w
  7834     05FD  1D03               	skipz
  7835     05FE  2E01               	goto	u3073
  7836     05FF  084C               	movf	___fladd@a,w
  7837     0600  0248               	subwf	___fladd@b,w
  7838     0601                     u3073:
  7839     0601  1803               	skipnc
  7840     0602  2E04               	goto	u3071
  7841     0603  2E05               	goto	u3070
  7842     0604                     u3071:
  7843     0604  2E3D               	goto	l4231
  7844     0605                     u3070:
  7845     0605                     l4223:
  7846     0605  30FF               	movlw	255
  7847     0606  00D0               	movwf	??___fladd
  7848     0607  30FF               	movlw	255
  7849     0608  00D1               	movwf	??___fladd+1
  7850     0609  30FF               	movlw	255
  7851     060A  00D2               	movwf	??___fladd+2
  7852     060B  30FF               	movlw	255
  7853     060C  00D3               	movwf	??___fladd+3
  7854     060D  0848               	movf	___fladd@b,w
  7855     060E  024C               	subwf	___fladd@a,w
  7856     060F  00D4               	movwf	??___fladd+4
  7857     0610  0849               	movf	___fladd@b+1,w
  7858     0611  3B4D               	subwfb	___fladd@a+1,w
  7859     0612  00D5               	movwf	??___fladd+5
  7860     0613  084A               	movf	___fladd@b+2,w
  7861     0614  3B4E               	subwfb	___fladd@a+2,w
  7862     0615  00D6               	movwf	??___fladd+6
  7863     0616  084B               	movf	___fladd@b+3,w
  7864     0617  3B4F               	subwfb	___fladd@a+3,w
  7865     0618  00D7               	movwf	??___fladd+7
  7866     0619  0854               	movf	??___fladd+4,w
  7867     061A  07D0               	addwf	??___fladd,f
  7868     061B  0855               	movf	??___fladd+5,w
  7869     061C  3DD1               	addwfc	??___fladd+1,f
  7870     061D  0856               	movf	??___fladd+6,w
  7871     061E  3DD2               	addwfc	??___fladd+2,f
  7872     061F  0857               	movf	??___fladd+7,w
  7873     0620  3DD3               	addwfc	??___fladd+3,f
  7874     0621  0853               	movf	??___fladd+3,w
  7875     0622  00CB               	movwf	___fladd@b+3
  7876     0623  0852               	movf	??___fladd+2,w
  7877     0624  00CA               	movwf	___fladd@b+2
  7878     0625  0851               	movf	??___fladd+1,w
  7879     0626  00C9               	movwf	___fladd@b+1
  7880     0627  0850               	movf	??___fladd,w
  7881     0628  00C8               	movwf	___fladd@b
  7882     0629                     l4225:
  7883     0629  3080               	movlw	128
  7884     062A  00D0               	movwf	??___fladd
  7885     062B  0850               	movf	??___fladd,w
  7886     062C  06D8               	xorwf	___fladd@signs,f
  7887     062D  09DB               	comf	___fladd@grs,f
  7888     062E  0ADB               	incf	___fladd@grs,f
  7889     062F                     l4227:
  7890     062F  085B               	movf	___fladd@grs,w
  7891     0630  1D03               	btfss	3,2
  7892     0631  2E33               	goto	u3081
  7893     0632  2E34               	goto	u3080
  7894     0633                     u3081:
  7895     0633  2E45               	goto	l1490
  7896     0634                     u3080:
  7897     0634                     l4229:
  7898     0634  3001               	movlw	1
  7899     0635  07C8               	addwf	___fladd@b,f
  7900     0636  3000               	movlw	0
  7901     0637  3DC9               	addwfc	___fladd@b+1,f
  7902     0638  3000               	movlw	0
  7903     0639  3DCA               	addwfc	___fladd@b+2,f
  7904     063A  3000               	movlw	0
  7905     063B  3DCB               	addwfc	___fladd@b+3,f
  7906     063C  2E45               	goto	l1490
  7907     063D                     l4231:
  7908     063D  084C               	movf	___fladd@a,w
  7909     063E  02C8               	subwf	___fladd@b,f
  7910     063F  084D               	movf	___fladd@a+1,w
  7911     0640  3BC9               	subwfb	___fladd@b+1,f
  7912     0641  084E               	movf	___fladd@a+2,w
  7913     0642  3BCA               	subwfb	___fladd@b+2,f
  7914     0643  084F               	movf	___fladd@a+3,w
  7915     0644  3BCB               	subwfb	___fladd@b+3,f
  7916     0645                     l1490:
  7917     0645  084B               	movf	___fladd@b+3,w
  7918     0646  044A               	iorwf	___fladd@b+2,w
  7919     0647  0449               	iorwf	___fladd@b+1,w
  7920     0648  0448               	iorwf	___fladd@b,w
  7921     0649  1D03               	skipz
  7922     064A  2E4C               	goto	u3091
  7923     064B  2E4D               	goto	u3090
  7924     064C                     u3091:
  7925     064C  2E77               	goto	l4253
  7926     064D                     u3090:
  7927     064D                     l4233:
  7928     064D  085B               	movf	___fladd@grs,w
  7929     064E  1D03               	btfss	3,2
  7930     064F  2E51               	goto	u3101
  7931     0650  2E52               	goto	u3100
  7932     0651                     u3101:
  7933     0651  2E77               	goto	l4253
  7934     0652                     u3100:
  7935     0652                     l4235:
  7936     0652  3000               	movlw	0
  7937     0653  00CB               	movwf	?___fladd+3
  7938     0654  3000               	movlw	0
  7939     0655  00CA               	movwf	?___fladd+2
  7940     0656  3000               	movlw	0
  7941     0657  00C9               	movwf	?___fladd+1
  7942     0658  3000               	movlw	0
  7943     0659  00C8               	movwf	?___fladd
  7944     065A  2EE9               	goto	l1482
  7945     065B                     l4239:
  7946     065B  3001               	movlw	1
  7947     065C                     u3115:
  7948     065C  35C8               	lslf	___fladd@b,f
  7949     065D  0DC9               	rlf	___fladd@b+1,f
  7950     065E  0DCA               	rlf	___fladd@b+2,f
  7951     065F  0DCB               	rlf	___fladd@b+3,f
  7952     0660  0B89               	decfsz	9,f
  7953     0661  2E5C               	goto	u3115
  7954     0662                     l4241:
  7955     0662  1FDB               	btfss	___fladd@grs,7
  7956     0663  2E65               	goto	u3121
  7957     0664  2E66               	goto	u3120
  7958     0665                     u3121:
  7959     0665  2E67               	goto	l1494
  7960     0666                     u3120:
  7961     0666                     l4243:
  7962     0666  1448               	bsf	___fladd@b,0
  7963     0667                     l1494:
  7964     0667  1C5B               	btfss	___fladd@grs,0
  7965     0668  2E6A               	goto	u3131
  7966     0669  2E6B               	goto	u3130
  7967     066A                     u3131:
  7968     066A  2E6E               	goto	l4247
  7969     066B                     u3130:
  7970     066B                     l4245:
  7971     066B  1403               	setc
  7972     066C  0DDB               	rlf	___fladd@grs,f
  7973     066D  2E70               	goto	l4249
  7974     066E                     l4247:
  7975     066E  1003               	clrc
  7976     066F  0DDB               	rlf	___fladd@grs,f
  7977     0670                     l4249:
  7978     0670  085A               	movf	___fladd@bexp,w
  7979     0671  1903               	btfsc	3,2
  7980     0672  2E74               	goto	u3141
  7981     0673  2E75               	goto	u3140
  7982     0674                     u3141:
  7983     0674  2E77               	goto	l4253
  7984     0675                     u3140:
  7985     0675                     l4251:
  7986     0675  3001               	movlw	1
  7987     0676  02DA               	subwf	___fladd@bexp,f
  7988     0677                     l4253:
  7989     0677  1FCA               	btfss	___fladd@b+2,7
  7990     0678  2E7A               	goto	u3151
  7991     0679  2E7B               	goto	u3150
  7992     067A                     u3151:
  7993     067A  2E5B               	goto	l4239
  7994     067B                     u3150:
  7995     067B                     l4255:
  7996     067B  01D9               	clrf	___fladd@aexp
  7997     067C                     l4257:
  7998     067C  1FDB               	btfss	___fladd@grs,7
  7999     067D  2E7F               	goto	u3161
  8000     067E  2E80               	goto	u3160
  8001     067F                     u3161:
  8002     067F  2E8E               	goto	l4265
  8003     0680                     u3160:
  8004     0680                     l4259:
  8005     0680  085B               	movf	___fladd@grs,w
  8006     0681  397F               	andlw	127
  8007     0682  1903               	btfsc	3,2
  8008     0683  2E85               	goto	u3171
  8009     0684  2E86               	goto	u3170
  8010     0685                     u3171:
  8011     0685  2E89               	goto	l1500
  8012     0686                     u3170:
  8013     0686                     l4261:
  8014     0686  01D9               	clrf	___fladd@aexp
  8015     0687  0AD9               	incf	___fladd@aexp,f
  8016     0688  2E8E               	goto	l4265
  8017     0689                     l1500:
  8018     0689  1C48               	btfss	___fladd@b,0
  8019     068A  2E8C               	goto	u3181
  8020     068B  2E8D               	goto	u3180
  8021     068C                     u3181:
  8022     068C  2E8E               	goto	l4265
  8023     068D                     u3180:
  8024     068D  2E86               	goto	l4261
  8025     068E                     l4265:
  8026     068E  0859               	movf	___fladd@aexp,w
  8027     068F  1903               	btfsc	3,2
  8028     0690  2E92               	goto	u3191
  8029     0691  2E93               	goto	u3190
  8030     0692                     u3191:
  8031     0692  2EC0               	goto	l1503
  8032     0693                     u3190:
  8033     0693                     l4267:
  8034     0693  3001               	movlw	1
  8035     0694  07C8               	addwf	___fladd@b,f
  8036     0695  3000               	movlw	0
  8037     0696  3DC9               	addwfc	___fladd@b+1,f
  8038     0697  3000               	movlw	0
  8039     0698  3DCA               	addwfc	___fladd@b+2,f
  8040     0699  3000               	movlw	0
  8041     069A  3DCB               	addwfc	___fladd@b+3,f
  8042     069B                     l4269:
  8043     069B  1C4B               	btfss	___fladd@b+3,0
  8044     069C  2E9E               	goto	u3201
  8045     069D  2E9F               	goto	u3200
  8046     069E                     u3201:
  8047     069E  2EC0               	goto	l1503
  8048     069F                     u3200:
  8049     069F                     l4271:
  8050     069F  0848               	movf	___fladd@b,w
  8051     06A0  00D0               	movwf	??___fladd
  8052     06A1  0849               	movf	___fladd@b+1,w
  8053     06A2  00D1               	movwf	??___fladd+1
  8054     06A3  084A               	movf	___fladd@b+2,w
  8055     06A4  00D2               	movwf	??___fladd+2
  8056     06A5  084B               	movf	___fladd@b+3,w
  8057     06A6  00D3               	movwf	??___fladd+3
  8058     06A7  3001               	movlw	1
  8059     06A8  00D4               	movwf	??___fladd+4
  8060     06A9                     u3215:
  8061     06A9  37D3               	asrf	??___fladd+3,f
  8062     06AA  0CD2               	rrf	??___fladd+2,f
  8063     06AB  0CD1               	rrf	??___fladd+1,f
  8064     06AC  0CD0               	rrf	??___fladd,f
  8065     06AD                     u3210:
  8066     06AD  0BD4               	decfsz	??___fladd+4,f
  8067     06AE  2EA9               	goto	u3215
  8068     06AF  0853               	movf	??___fladd+3,w
  8069     06B0  00CB               	movwf	___fladd@b+3
  8070     06B1  0852               	movf	??___fladd+2,w
  8071     06B2  00CA               	movwf	___fladd@b+2
  8072     06B3  0851               	movf	??___fladd+1,w
  8073     06B4  00C9               	movwf	___fladd@b+1
  8074     06B5  0850               	movf	??___fladd,w
  8075     06B6  00C8               	movwf	___fladd@b
  8076     06B7  0A5A               	incf	___fladd@bexp,w
  8077     06B8  1903               	btfsc	3,2
  8078     06B9  2EBB               	goto	u3221
  8079     06BA  2EBC               	goto	u3220
  8080     06BB                     u3221:
  8081     06BB  2EC0               	goto	l1503
  8082     06BC                     u3220:
  8083     06BC                     l4273:
  8084     06BC  3001               	movlw	1
  8085     06BD  00D0               	movwf	??___fladd
  8086     06BE  0850               	movf	??___fladd,w
  8087     06BF  07DA               	addwf	___fladd@bexp,f
  8088     06C0                     l1503:
  8089     06C0  0A5A               	incf	___fladd@bexp,w
  8090     06C1  1903               	btfsc	3,2
  8091     06C2  2EC4               	goto	u3231
  8092     06C3  2EC5               	goto	u3230
  8093     06C4                     u3231:
  8094     06C4  2ECA               	goto	l4277
  8095     06C5                     u3230:
  8096     06C5                     l4275:
  8097     06C5  085A               	movf	___fladd@bexp,w
  8098     06C6  1D03               	btfss	3,2
  8099     06C7  2EC9               	goto	u3241
  8100     06C8  2ECA               	goto	u3240
  8101     06C9                     u3241:
  8102     06C9  2ED8               	goto	l4283
  8103     06CA                     u3240:
  8104     06CA                     l4277:
  8105     06CA  3000               	movlw	0
  8106     06CB  00CB               	movwf	___fladd@b+3
  8107     06CC  3000               	movlw	0
  8108     06CD  00CA               	movwf	___fladd@b+2
  8109     06CE  3000               	movlw	0
  8110     06CF  00C9               	movwf	___fladd@b+1
  8111     06D0  3000               	movlw	0
  8112     06D1  00C8               	movwf	___fladd@b
  8113     06D2                     l4279:
  8114     06D2  085A               	movf	___fladd@bexp,w
  8115     06D3  1D03               	btfss	3,2
  8116     06D4  2ED6               	goto	u3251
  8117     06D5  2ED7               	goto	u3250
  8118     06D6                     u3251:
  8119     06D6  2ED8               	goto	l4283
  8120     06D7                     u3250:
  8121     06D7                     l4281:
  8122     06D7  01D8               	clrf	___fladd@signs
  8123     06D8                     l4283:
  8124     06D8  1C5A               	btfss	___fladd@bexp,0
  8125     06D9  2EDB               	goto	u3261
  8126     06DA  2EDC               	goto	u3260
  8127     06DB                     u3261:
  8128     06DB  2EDE               	goto	l4287
  8129     06DC                     u3260:
  8130     06DC                     l4285:
  8131     06DC  17CA               	bsf	___fladd@b+2,7
  8132     06DD  2EE2               	goto	l1511
  8133     06DE                     l4287:
  8134     06DE  307F               	movlw	127
  8135     06DF  00D0               	movwf	??___fladd
  8136     06E0  0850               	movf	??___fladd,w
  8137     06E1  05CA               	andwf	___fladd@b+2,f
  8138     06E2                     l1511:
  8139     06E2  365A               	lsrf	___fladd@bexp,w
  8140     06E3  00CB               	movwf	___fladd@b+3
  8141     06E4                     l4289:
  8142     06E4  1FD8               	btfss	___fladd@signs,7
  8143     06E5  2EE7               	goto	u3271
  8144     06E6  2EE8               	goto	u3270
  8145     06E7                     u3271:
  8146     06E7  2EE9               	goto	l1512
  8147     06E8                     u3270:
  8148     06E8                     l4291:
  8149     06E8  17CB               	bsf	___fladd@b+3,7
  8150     06E9                     l1512:
  8151     06E9                     l1482:
  8152     06E9  0008               	return
  8153     06EA                     __end_of___fladd:
  8154                           
  8155                           	psect	text23
  8156     080D                     __ptext23:	
  8157 ;; *************** function _I2C_WriteNBytes *****************
  8158 ;; Defined at:
  8159 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  address         1    wreg     unsigned char 
  8162 ;;  data            1    8[BANK0 ] PTR unsigned char 
  8163 ;;		 -> SHT30_CMD_MEASURE_H_Enable(2), 
  8164 ;;  len             2    9[BANK0 ] unsigned int 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  address         1   11[BANK0 ] unsigned char 
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8176 ;;      Params:         0       3       0       0       0       0       0       0
  8177 ;;      Locals:         0       1       0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0
  8179 ;;      Totals:         0       4       0       0       0       0       0       0
  8180 ;;Total ram usage:        4 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; Hardware stack levels required when called: 10
  8183 ;; This function calls:
  8184 ;;		_I2C_Close
  8185 ;;		_I2C_MasterWrite
  8186 ;;		_I2C_Open
  8187 ;;		_I2C_SetAddressNackCallback
  8188 ;;		_I2C_SetBuffer
  8189 ;; This function is called by:
  8190 ;;		_ReadData
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194     080D                     _I2C_WriteNBytes:	
  8195                           ;psect for function _I2C_WriteNBytes
  8196                           
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in _I2C_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8200                           ;I2C_WriteNBytes@address stored from wreg
  8201     080D  0020               	movlb	0	; select bank0
  8202     080E  00AB               	movwf	I2C_WriteNBytes@address
  8203     080F                     l5423:
  8204     080F                     l5425:	
  8205                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  8206                           
  8207     080F  0020               	movlb	0	; select bank0
  8208     0810  082B               	movf	I2C_WriteNBytes@address,w
  8209     0811  3197  2773  3188   	fcall	_I2C_Open
  8210     0814  3A00               	xorlw	0
  8211     0815  1903               	skipnz
  8212     0816  2818               	goto	u4611
  8213     0817  2819               	goto	u4610
  8214     0818                     u4611:
  8215     0818  280F               	goto	l5425
  8216     0819                     u4610:
  8217     0819                     l5427:
  8218                           
  8219                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8220     0819  0020               	movlb	0	; select bank0
  8221     081A  0828               	movf	I2C_WriteNBytes@data,w
  8222     081B  00A0               	movwf	I2C_SetBuffer@buffer
  8223     081C  3001               	movlw	1
  8224     081D  00A1               	movwf	I2C_SetBuffer@buffer+1
  8225     081E  082A               	movf	I2C_WriteNBytes@len+1,w
  8226     081F  00A3               	movwf	I2C_SetBuffer@bufferSize+1
  8227     0820  0829               	movf	I2C_WriteNBytes@len,w
  8228     0821  00A2               	movwf	I2C_SetBuffer@bufferSize
  8229     0822  3194  2463  3188   	fcall	_I2C_SetBuffer
  8230     0825                     l5429:
  8231                           
  8232                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8233     0825  3000               	movlw	0
  8234     0826  0020               	movlb	0	; select bank0
  8235     0827  00A4               	movwf	I2C_SetAddressNackCallback@cb
  8236     0828  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
  8237     0829  3000               	movlw	0
  8238     082A  00A6               	movwf	I2C_SetAddressNackCallback@ptr
  8239     082B  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
  8240     082C  3193  2349  3188   	fcall	_I2C_SetAddressNackCallback
  8241     082F                     l5431:
  8242                           
  8243                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8244     082F  3192  22B5  3188   	fcall	_I2C_MasterWrite
  8245     0832                     l5433:	
  8246                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  8247                           
  8248     0832  3194  24E0  3188   	fcall	_I2C_Close
  8249     0835  3A01               	xorlw	1
  8250     0836  1903               	skipnz
  8251     0837  2839               	goto	u4621
  8252     0838  283A               	goto	u4620
  8253     0839                     u4621:
  8254     0839  2832               	goto	l5433
  8255     083A                     u4620:
  8256     083A                     l71:
  8257     083A  0008               	return
  8258     083B                     __end_of_I2C_WriteNBytes:
  8259                           
  8260                           	psect	text24
  8261     1349                     __ptext24:	
  8262 ;; *************** function _I2C_SetAddressNackCallback *****************
  8263 ;; Defined at:
  8264 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  8267 ;;		 -> NULL(1), 
  8268 ;;  ptr             2    6[BANK0 ] PTR void 
  8269 ;;		 -> NULL(0), 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8281 ;;      Params:         0       4       0       0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0
  8284 ;;      Totals:         0       4       0       0       0       0       0       0
  8285 ;;Total ram usage:        4 bytes
  8286 ;; Hardware stack levels used: 1
  8287 ;; Hardware stack levels required when called: 8
  8288 ;; This function calls:
  8289 ;;		_I2C_SetCallback
  8290 ;; This function is called by:
  8291 ;;		_I2C_WriteNBytes
  8292 ;;		_I2C_Read1ByteRegister
  8293 ;;		_I2C_Read2ByteRegister
  8294 ;;		_I2C_Write1ByteRegister
  8295 ;;		_I2C_Write2ByteRegister
  8296 ;;		_I2C_ReadDataBlock
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300     1349                     _I2C_SetAddressNackCallback:	
  8301                           ;psect for function _I2C_SetAddressNackCallback
  8302                           
  8303     1349                     l3721:	
  8304                           ;incstack = 0
  8305                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8306                           
  8307                           
  8308                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8309     1349  0020               	movlb	0	; select bank0
  8310     134A  0825               	movf	I2C_SetAddressNackCallback@cb+1,w
  8311     134B  00A1               	movwf	I2C_SetCallback@cb+1
  8312     134C  0824               	movf	I2C_SetAddressNackCallback@cb,w
  8313     134D  00A0               	movwf	I2C_SetCallback@cb
  8314     134E  0826               	movf	I2C_SetAddressNackCallback@ptr,w
  8315     134F  00A2               	movwf	I2C_SetCallback@ptr
  8316     1350  3002               	movlw	2
  8317     1351  3196  2618  3193   	fcall	_I2C_SetCallback
  8318     1354                     l569:
  8319     1354  0008               	return
  8320     1355                     __end_of_I2C_SetAddressNackCallback:
  8321                           
  8322                           	psect	text25
  8323     1618                     __ptext25:	
  8324 ;; *************** function _I2C_SetCallback *****************
  8325 ;; Defined at:
  8326 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  idx             1    wreg     enum E3130
  8329 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8330 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8331 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8332 ;;  ptr             1    2[BANK0 ] PTR void 
  8333 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8334 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  idx             1    3[BANK0 ] enum E3130
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      void 
  8339 ;; Registers used:
  8340 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8346 ;;      Params:         0       3       0       0       0       0       0       0
  8347 ;;      Locals:         0       1       0       0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0       0       0       0
  8349 ;;      Totals:         0       4       0       0       0       0       0       0
  8350 ;;Total ram usage:        4 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 7
  8353 ;; This function calls:
  8354 ;;		Nothing
  8355 ;; This function is called by:
  8356 ;;		_I2C_SetAddressNackCallback
  8357 ;;		_I2C_SetWriteCollisionCallback
  8358 ;;		_I2C_SetDataNackCallback
  8359 ;;		_I2C_SetTimeoutCallback
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363     1618                     _I2C_SetCallback:	
  8364                           ;psect for function _I2C_SetCallback
  8365                           
  8366                           
  8367                           ;incstack = 0
  8368                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8369                           ;I2C_SetCallback@idx stored from wreg
  8370     1618  0020               	movlb	0	; select bank0
  8371     1619  00A3               	movwf	I2C_SetCallback@idx
  8372     161A                     l3629:
  8373                           
  8374                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8375     161A  0820               	movf	I2C_SetCallback@cb,w
  8376     161B  0421               	iorwf	I2C_SetCallback@cb+1,w
  8377     161C  1903               	btfsc	3,2
  8378     161D  2E1F               	goto	u2421
  8379     161E  2E20               	goto	u2420
  8380     161F                     u2421:
  8381     161F  2E31               	goto	l3633
  8382     1620                     u2420:
  8383     1620                     l3631:
  8384                           
  8385                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8386     1620  3523               	lslf	I2C_SetCallback@idx,w
  8387     1621  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8388     1622  0086               	movwf	6
  8389     1623  3001               	movlw	1	; select bank2/3
  8390     1624  0087               	movwf	7
  8391     1625  0820               	movf	I2C_SetCallback@cb,w
  8392     1626  3FC0               	movwi [0]fsr1
  8393     1627  0821               	movf	I2C_SetCallback@cb+1,w
  8394     1628  3FC1               	movwi [1]fsr1
  8395                           
  8396                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8397     1629  0823               	movf	I2C_SetCallback@idx,w
  8398     162A  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8399     162B  0086               	movwf	6
  8400     162C  3001               	movlw	1	; select bank2/3
  8401     162D  0087               	movwf	7
  8402     162E  0822               	movf	I2C_SetCallback@ptr,w
  8403     162F  0081               	movwf	1
  8404                           
  8405                           ;mcc_generated_files/i2c_master.c: 310:     }
  8406     1630  2E40               	goto	l583
  8407     1631                     l3633:
  8408                           
  8409                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8410     1631  3523               	lslf	I2C_SetCallback@idx,w
  8411     1632  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8412     1633  0086               	movwf	6
  8413     1634  3001               	movlw	1	; select bank2/3
  8414     1635  0087               	movwf	7
  8415     1636  3040               	movlw	low _I2C_CallbackReturnStop
  8416     1637  3FC0               	movwi [0]fsr1
  8417     1638  3012               	movlw	high _I2C_CallbackReturnStop
  8418     1639  3FC1               	movwi [1]fsr1
  8419                           
  8420                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8421     163A  0823               	movf	I2C_SetCallback@idx,w
  8422     163B  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8423     163C  0086               	movwf	6
  8424     163D  3001               	movlw	1	; select bank2/3
  8425     163E  0087               	movwf	7
  8426     163F  0181               	clrf	1
  8427     1640                     l583:
  8428     1640  0008               	return
  8429     1641                     __end_of_I2C_SetCallback:
  8430                           
  8431                           	psect	text26
  8432     12B5                     __ptext26:	
  8433 ;; *************** function _I2C_MasterWrite *****************
  8434 ;; Defined at:
  8435 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      enum E358
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0, pclath, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8449 ;;      Params:         0       0       0       0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0
  8452 ;;      Totals:         0       0       0       0       0       0       0       0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 9
  8456 ;; This function calls:
  8457 ;;		_I2C_MasterOperation
  8458 ;; This function is called by:
  8459 ;;		_I2C_WriteNBytes
  8460 ;;		_I2C_Read1ByteRegister
  8461 ;;		_I2C_Read2ByteRegister
  8462 ;;		_I2C_Write1ByteRegister
  8463 ;;		_I2C_Write2ByteRegister
  8464 ;;		_I2C_ReadDataBlock
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468     12B5                     _I2C_MasterWrite:	
  8469                           ;psect for function _I2C_MasterWrite
  8470                           
  8471     12B5                     l3723:	
  8472                           ;incstack = 0
  8473                           ; Regs used in _I2C_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  8474                           
  8475                           
  8476                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8477     12B5  3000               	movlw	0
  8478     12B6  3195  2517  3192   	fcall	_I2C_MasterOperation
  8479     12B9                     l553:
  8480     12B9  0008               	return
  8481     12BA                     __end_of_I2C_MasterWrite:
  8482                           
  8483                           	psect	text27
  8484     1558                     __ptext27:	
  8485 ;; *************** function _I2C_ReadNBytes *****************
  8486 ;; Defined at:
  8487 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  address         1    wreg     unsigned char 
  8490 ;;  data            1    4[BANK0 ] PTR unsigned char 
  8491 ;;		 -> ReadData@aData(6), 
  8492 ;;  len             2    5[BANK0 ] unsigned int 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;  address         1    7[BANK0 ] unsigned char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  1    wreg      void 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0, pclath, cstack
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8504 ;;      Params:         0       3       0       0       0       0       0       0
  8505 ;;      Locals:         0       1       0       0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0
  8507 ;;      Totals:         0       4       0       0       0       0       0       0
  8508 ;;Total ram usage:        4 bytes
  8509 ;; Hardware stack levels used: 1
  8510 ;; Hardware stack levels required when called: 10
  8511 ;; This function calls:
  8512 ;;		_I2C_Close
  8513 ;;		_I2C_MasterRead
  8514 ;;		_I2C_Open
  8515 ;;		_I2C_SetBuffer
  8516 ;; This function is called by:
  8517 ;;		_ReadData
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521     1558                     _I2C_ReadNBytes:	
  8522                           ;psect for function _I2C_ReadNBytes
  8523                           
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in _I2C_ReadNBytes: [wreg+status,2+status,0+pclath+cstack]
  8527                           ;I2C_ReadNBytes@address stored from wreg
  8528     1558  0020               	movlb	0	; select bank0
  8529     1559  00A7               	movwf	I2C_ReadNBytes@address
  8530     155A                     l5435:
  8531     155A                     l5437:	
  8532                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  8533                           
  8534     155A  0020               	movlb	0	; select bank0
  8535     155B  0827               	movf	I2C_ReadNBytes@address,w
  8536     155C  3197  2773  3195   	fcall	_I2C_Open
  8537     155F  3A00               	xorlw	0
  8538     1560  1903               	skipnz
  8539     1561  2D63               	goto	u4631
  8540     1562  2D64               	goto	u4630
  8541     1563                     u4631:
  8542     1563  2D5A               	goto	l5437
  8543     1564                     u4630:
  8544     1564                     l5439:
  8545                           
  8546                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  8547     1564  0020               	movlb	0	; select bank0
  8548     1565  0824               	movf	I2C_ReadNBytes@data,w
  8549     1566  00A0               	movwf	I2C_SetBuffer@buffer
  8550     1567  01A1               	clrf	I2C_SetBuffer@buffer+1
  8551     1568  0826               	movf	I2C_ReadNBytes@len+1,w
  8552     1569  00A3               	movwf	I2C_SetBuffer@bufferSize+1
  8553     156A  0825               	movf	I2C_ReadNBytes@len,w
  8554     156B  00A2               	movwf	I2C_SetBuffer@bufferSize
  8555     156C  3194  2463  3195   	fcall	_I2C_SetBuffer
  8556                           
  8557                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  8558     156F  3192  22B0  3195   	fcall	_I2C_MasterRead
  8559     1572                     l5441:	
  8560                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  8561                           
  8562     1572  3194  24E0  3195   	fcall	_I2C_Close
  8563     1575  3A01               	xorlw	1
  8564     1576  1903               	skipnz
  8565     1577  2D79               	goto	u4641
  8566     1578  2D7A               	goto	u4640
  8567     1579                     u4641:
  8568     1579  2D72               	goto	l5441
  8569     157A                     u4640:
  8570     157A                     l80:
  8571     157A  0008               	return
  8572     157B                     __end_of_I2C_ReadNBytes:
  8573                           
  8574                           	psect	text28
  8575     1463                     __ptext28:	
  8576 ;; *************** function _I2C_SetBuffer *****************
  8577 ;; Defined at:
  8578 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  buffer          2    0[BANK0 ] PTR void 
  8581 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8582 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8583 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8584 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8585 ;;  bufferSize      2    2[BANK0 ] unsigned int 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8597 ;;      Params:         0       4       0       0       0       0       0       0
  8598 ;;      Locals:         0       0       0       0       0       0       0       0
  8599 ;;      Temps:          0       0       0       0       0       0       0       0
  8600 ;;      Totals:         0       4       0       0       0       0       0       0
  8601 ;;Total ram usage:        4 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 7
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_I2C_WriteNBytes
  8608 ;;		_I2C_ReadNBytes
  8609 ;;		_I2C_Read1ByteRegister
  8610 ;;		_I2C_Read2ByteRegister
  8611 ;;		_I2C_Write1ByteRegister
  8612 ;;		_I2C_Write2ByteRegister
  8613 ;;		_I2C_ReadDataBlock
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617     1463                     _I2C_SetBuffer:	
  8618                           ;psect for function _I2C_SetBuffer
  8619                           
  8620     1463                     l5411:	
  8621                           ;incstack = 0
  8622                           ; Regs used in _I2C_SetBuffer: [wreg]
  8623                           
  8624                           
  8625                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8626     1463  0022               	movlb	2	; select bank2
  8627     1464  1DBD               	btfss	(_I2C_Status^(0+256)+29),3
  8628     1465  2C67               	goto	u4591
  8629     1466  2C68               	goto	u4590
  8630     1467                     u4591:
  8631     1467  2C79               	goto	l560
  8632     1468                     u4590:
  8633     1468                     l5413:
  8634                           
  8635                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8636     1468  0020               	movlb	0	; select bank0
  8637     1469  0821               	movf	I2C_SetBuffer@buffer+1,w
  8638     146A  0022               	movlb	2	; select bank2
  8639     146B  00B8               	movwf	((low ((_I2C_Status| (0+256)+23))+1))^0
  8640     146C  0020               	movlb	0	; select bank0
  8641     146D  0820               	movf	I2C_SetBuffer@buffer,w
  8642     146E  0022               	movlb	2	; select bank2
  8643     146F  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
  8644                           
  8645                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8646     1470  0020               	movlb	0	; select bank0
  8647     1471  0823               	movf	I2C_SetBuffer@bufferSize+1,w
  8648     1472  0022               	movlb	2	; select bank2
  8649     1473  00BA               	movwf	((_I2C_Status+1)^(0+256)+25)
  8650     1474  0020               	movlb	0	; select bank0
  8651     1475  0822               	movf	I2C_SetBuffer@bufferSize,w
  8652     1476  0022               	movlb	2	; select bank2
  8653     1477  00B9               	movwf	(_I2C_Status^(0+256)+25)
  8654     1478                     l5415:
  8655                           
  8656                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8657     1478  11BD               	bcf	(_I2C_Status^(0+256)+29),3
  8658     1479                     l560:
  8659     1479  0008               	return
  8660     147A                     __end_of_I2C_SetBuffer:
  8661                           
  8662                           	psect	text29
  8663     1773                     __ptext29:	
  8664 ;; *************** function _I2C_Open *****************
  8665 ;; Defined at:
  8666 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  address         1    wreg     unsigned char 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  address         1    2[BANK0 ] unsigned char 
  8671 ;;  returnValue     1    3[BANK0 ] enum E358
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      enum E358
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8681 ;;      Params:         0       0       0       0       0       0       0       0
  8682 ;;      Locals:         0       2       0       0       0       0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0
  8684 ;;      Totals:         0       2       0       0       0       0       0       0
  8685 ;;Total ram usage:        2 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; Hardware stack levels required when called: 8
  8688 ;; This function calls:
  8689 ;;		_I2C_MasterClearIrq
  8690 ;;		_I2C_MasterEnableIrq
  8691 ;;		_I2C_MasterOpen
  8692 ;;		_I2C_SetInterruptHandler
  8693 ;; This function is called by:
  8694 ;;		_I2C_WriteNBytes
  8695 ;;		_I2C_ReadNBytes
  8696 ;;		_I2C_Read1ByteRegister
  8697 ;;		_I2C_Read2ByteRegister
  8698 ;;		_I2C_Write1ByteRegister
  8699 ;;		_I2C_Write2ByteRegister
  8700 ;;		_I2C_ReadDataBlock
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704     1773                     _I2C_Open:	
  8705                           ;psect for function _I2C_Open
  8706                           
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  8710                           ;I2C_Open@address stored from wreg
  8711     1773  0020               	movlb	0	; select bank0
  8712     1774  00A2               	movwf	I2C_Open@address
  8713     1775                     l5375:
  8714                           
  8715                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8716     1775  01A3               	clrf	I2C_Open@returnValue
  8717     1776  0AA3               	incf	I2C_Open@returnValue,f
  8718                           
  8719                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8720     1777  0022               	movlb	2	; select bank2
  8721     1778  193D               	btfsc	(_I2C_Status^(0+256)+29),2
  8722     1779  2F7B               	goto	u4581
  8723     177A  2F7C               	goto	u4580
  8724     177B                     u4581:
  8725     177B  2FB6               	goto	l5407
  8726     177C                     u4580:
  8727     177C                     l5377:
  8728                           
  8729                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8730     177C  0020               	movlb	0	; select bank0
  8731     177D  0822               	movf	I2C_Open@address,w
  8732     177E  0022               	movlb	2	; select bank2
  8733     177F  00B6               	movwf	(_I2C_Status^(0+256)+22)
  8734     1780                     l5379:
  8735                           
  8736                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8737     1780  10BD               	bcf	(_I2C_Status^(0+256)+29),1
  8738     1781                     l5381:
  8739                           
  8740                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8741     1781  153D               	bsf	(_I2C_Status^(0+256)+29),2
  8742     1782                     l5383:
  8743                           
  8744                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8745     1782  103D               	bcf	(_I2C_Status^(0+256)+29),0
  8746                           
  8747                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8748     1783  300E               	movlw	14
  8749     1784  00BB               	movwf	(_I2C_Status^(0+256)+27)
  8750                           
  8751                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8752     1785  30F4               	movlw	244
  8753     1786  00B4               	movwf	(_I2C_Status^(0+256)+20)
  8754     1787  3001               	movlw	1
  8755     1788  00B5               	movwf	(_I2C_Status^(0+256)+21)
  8756     1789                     l5385:
  8757                           
  8758                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8759     1789  15BD               	bsf	(_I2C_Status^(0+256)+29),3
  8760                           
  8761                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8762     178A  3040               	movlw	low _I2C_CallbackReturnStop
  8763     178B  00A0               	movwf	_I2C_Status^(0+256)
  8764     178C  3012               	movlw	high _I2C_CallbackReturnStop
  8765     178D  00A1               	movwf	(_I2C_Status^(0+256)+1)
  8766     178E                     l5387:
  8767                           
  8768                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8769     178E  01AC               	clrf	(low ((_I2C_Status| (0+256)+12)))^0
  8770     178F                     l5389:
  8771                           
  8772                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8773     178F  3040               	movlw	low _I2C_CallbackReturnStop
  8774     1790  00A2               	movwf	(low ((_I2C_Status| (0+256)+2)))^0
  8775     1791  3012               	movlw	high _I2C_CallbackReturnStop
  8776     1792  00A3               	movwf	((low ((_I2C_Status| (0+256)+2)))^0+1)
  8777                           
  8778                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8779     1793  01AD               	clrf	(low ((_I2C_Status| (0+256)+13)))^0
  8780     1794                     l5391:
  8781                           
  8782                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8783     1794  3040               	movlw	low _I2C_CallbackReturnStop
  8784     1795  00A4               	movwf	(low ((_I2C_Status| (0+256)+4)))^0
  8785     1796  3012               	movlw	high _I2C_CallbackReturnStop
  8786     1797  00A5               	movwf	((low ((_I2C_Status| (0+256)+4)))^0+1)
  8787     1798                     l5393:
  8788                           
  8789                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8790     1798  01AE               	clrf	(low ((_I2C_Status| (0+256)+14)))^0
  8791                           
  8792                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8793     1799  3040               	movlw	low _I2C_CallbackReturnStop
  8794     179A  00A6               	movwf	(low ((_I2C_Status| (0+256)+6)))^0
  8795     179B  3012               	movlw	high _I2C_CallbackReturnStop
  8796     179C  00A7               	movwf	((low ((_I2C_Status| (0+256)+6)))^0+1)
  8797     179D                     l5395:
  8798                           
  8799                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8800     179D  01AF               	clrf	(low ((_I2C_Status| (0+256)+15)))^0
  8801     179E                     l5397:
  8802                           
  8803                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8804     179E  3002               	movlw	low _I2C_CallbackReturnReset
  8805     179F  00A8               	movwf	(low ((_I2C_Status| (0+256)+8)))^0
  8806     17A0  3000               	movlw	high _I2C_CallbackReturnReset
  8807     17A1  00A9               	movwf	((low ((_I2C_Status| (0+256)+8)))^0+1)
  8808                           
  8809                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8810     17A2  01B0               	clrf	(low ((_I2C_Status| (0+256)+16)))^0
  8811     17A3                     l5399:
  8812                           
  8813                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  8814     17A3  3076               	movlw	low _I2C_MasterIsr
  8815     17A4  0020               	movlb	0	; select bank0
  8816     17A5  00A0               	movwf	I2C_SetInterruptHandler@InterruptHandler
  8817     17A6  3012               	movlw	high _I2C_MasterIsr
  8818     17A7  00A1               	movwf	I2C_SetInterruptHandler@InterruptHandler+1
  8819     17A8  3192  22E1  3197   	fcall	_I2C_SetInterruptHandler
  8820     17AB                     l5401:
  8821                           
  8822                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  8823     17AB  3192  2257  3197   	fcall	_I2C_MasterClearIrq
  8824     17AE                     l5403:
  8825                           
  8826                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  8827     17AE  3188  2000  3197   	fcall	_I2C_MasterOpen
  8828     17B1                     l5405:
  8829                           
  8830                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  8831     17B1  3192  2263  3197   	fcall	_I2C_MasterEnableIrq
  8832                           
  8833                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  8834     17B4  0020               	movlb	0	; select bank0
  8835     17B5  01A3               	clrf	I2C_Open@returnValue
  8836     17B6                     l5407:
  8837                           
  8838                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  8839     17B6  0020               	movlb	0	; select bank0
  8840     17B7  0823               	movf	I2C_Open@returnValue,w
  8841     17B8                     l537:
  8842     17B8  0008               	return
  8843     17B9                     __end_of_I2C_Open:
  8844                           
  8845                           	psect	text30
  8846     12E1                     __ptext30:	
  8847 ;; *************** function _I2C_SetInterruptHandler *****************
  8848 ;; Defined at:
  8849 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8852 ;;		 -> I2C_MasterIsr(1), 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8864 ;;      Params:         0       2       0       0       0       0       0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0
  8867 ;;      Totals:         0       2       0       0       0       0       0       0
  8868 ;;Total ram usage:        2 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; Hardware stack levels required when called: 7
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_I2C_Open
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878     12E1                     _I2C_SetInterruptHandler:	
  8879                           ;psect for function _I2C_SetInterruptHandler
  8880                           
  8881     12E1                     l3589:	
  8882                           ;incstack = 0
  8883                           ; Regs used in _I2C_SetInterruptHandler: [wreg]
  8884                           
  8885                           
  8886                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  8887     12E1  0020               	movlb	0	; select bank0
  8888     12E2  0821               	movf	I2C_SetInterruptHandler@InterruptHandler+1,w
  8889     12E3  0021               	movlb	1	; select bank1
  8890     12E4  00EC               	movwf	(_MSSP_InterruptHandler+1)^(0+128)
  8891     12E5  0020               	movlb	0	; select bank0
  8892     12E6  0820               	movf	I2C_SetInterruptHandler@InterruptHandler,w
  8893     12E7  0021               	movlb	1	; select bank1
  8894     12E8  00EB               	movwf	_MSSP_InterruptHandler^(0+128)
  8895     12E9                     l578:
  8896     12E9  0008               	return
  8897     12EA                     __end_of_I2C_SetInterruptHandler:
  8898                           
  8899                           	psect	text31
  8900     0800                     __ptext31:	
  8901 ;; *************** function _I2C_MasterOpen *****************
  8902 ;; Defined at:
  8903 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      _Bool 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8917 ;;      Params:         0       0       0       0       0       0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0
  8920 ;;      Totals:         0       0       0       0       0       0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 7
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_I2C_Open
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931     0800                     _I2C_MasterOpen:	
  8932                           ;psect for function _I2C_MasterOpen
  8933                           
  8934     0800                     l3593:	
  8935                           ;incstack = 0
  8936                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  8937                           
  8938                           
  8939                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  8940     0800  0024               	movlb	4	; select bank4
  8941     0801  1A95               	btfsc	21,5	;volatile
  8942     0802  2804               	goto	u2391
  8943     0803  2805               	goto	u2390
  8944     0804                     u2391:
  8945     0804  280C               	goto	l702
  8946     0805                     u2390:
  8947     0805                     l3595:
  8948                           
  8949                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  8950     0805  0194               	clrf	20	;volatile
  8951     0806                     l3597:
  8952                           
  8953                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  8954     0806  3008               	movlw	8
  8955     0807  0095               	movwf	21	;volatile
  8956     0808                     l3599:
  8957                           
  8958                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  8959     0808  0196               	clrf	22	;volatile
  8960                           
  8961                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x9F;
  8962     0809  309F               	movlw	159
  8963     080A  0092               	movwf	18	;volatile
  8964     080B                     l3601:
  8965                           
  8966                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  8967     080B  1695               	bsf	21,5	;volatile
  8968     080C                     l702:
  8969     080C  0008               	return
  8970     080D                     __end_of_I2C_MasterOpen:
  8971                           
  8972                           	psect	text32
  8973     1263                     __ptext32:	
  8974 ;; *************** function _I2C_MasterEnableIrq *****************
  8975 ;; Defined at:
  8976 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		None
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8990 ;;      Params:         0       0       0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 7
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_I2C_Open
  9001 ;;		_I2C_SetTimeOut
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005     1263                     _I2C_MasterEnableIrq:	
  9006                           ;psect for function _I2C_MasterEnableIrq
  9007                           
  9008     1263                     l3605:	
  9009                           ;incstack = 0
  9010                           ; Regs used in _I2C_MasterEnableIrq: []
  9011                           
  9012                           
  9013                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  9014     1263  0021               	movlb	1	; select bank1
  9015     1264  1591               	bsf	17,3	;volatile
  9016     1265                     l744:
  9017     1265  0008               	return
  9018     1266                     __end_of_I2C_MasterEnableIrq:
  9019                           
  9020                           	psect	text33
  9021     12B0                     __ptext33:	
  9022 ;; *************** function _I2C_MasterRead *****************
  9023 ;; Defined at:
  9024 ;;		line 247 in file "mcc_generated_files/i2c_master.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;		None
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;		None
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      enum E358
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0, pclath, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9038 ;;      Params:         0       0       0       0       0       0       0       0
  9039 ;;      Locals:         0       0       0       0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0
  9041 ;;      Totals:         0       0       0       0       0       0       0       0
  9042 ;;Total ram usage:        0 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; Hardware stack levels required when called: 9
  9045 ;; This function calls:
  9046 ;;		_I2C_MasterOperation
  9047 ;; This function is called by:
  9048 ;;		_I2C_ReadNBytes
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052     12B0                     _I2C_MasterRead:	
  9053                           ;psect for function _I2C_MasterRead
  9054                           
  9055     12B0                     l3745:	
  9056                           ;incstack = 0
  9057                           ; Regs used in _I2C_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  9058                           
  9059                           
  9060                           ;mcc_generated_files/i2c_master.c: 249:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9061     12B0  3001               	movlw	1
  9062     12B1  3195  2517  3192   	fcall	_I2C_MasterOperation
  9063     12B4                     l550:
  9064     12B4  0008               	return
  9065     12B5                     __end_of_I2C_MasterRead:
  9066                           
  9067                           	psect	text34
  9068     1517                     __ptext34:	
  9069 ;; *************** function _I2C_MasterOperation *****************
  9070 ;; Defined at:
  9071 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  read            1    wreg     _Bool 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  read            1    0[BANK0 ] _Bool 
  9076 ;;  returnValue     1    1[BANK0 ] enum E358
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      enum E358
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, pclath, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9086 ;;      Params:         0       0       0       0       0       0       0       0
  9087 ;;      Locals:         0       2       0       0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0
  9089 ;;      Totals:         0       2       0       0       0       0       0       0
  9090 ;;Total ram usage:        2 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 8
  9093 ;; This function calls:
  9094 ;;		_I2C_MasterStart
  9095 ;; This function is called by:
  9096 ;;		_I2C_MasterRead
  9097 ;;		_I2C_MasterWrite
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101     1517                     _I2C_MasterOperation:	
  9102                           ;psect for function _I2C_MasterOperation
  9103                           
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _I2C_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
  9107                           ;I2C_MasterOperation@read stored from wreg
  9108     1517  0020               	movlb	0	; select bank0
  9109     1518  00A0               	movwf	I2C_MasterOperation@read
  9110     1519                     l3611:
  9111                           
  9112                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9113     1519  01A1               	clrf	I2C_MasterOperation@returnValue
  9114     151A  0AA1               	incf	I2C_MasterOperation@returnValue,f
  9115                           
  9116                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  9117     151B  0022               	movlb	2	; select bank2
  9118     151C  18BD               	btfsc	(_I2C_Status^(0+256)+29),1
  9119     151D  2D1F               	goto	u2401
  9120     151E  2D20               	goto	u2400
  9121     151F                     u2401:
  9122     151F  2D32               	goto	l3625
  9123     1520                     u2400:
  9124     1520                     l3613:
  9125                           
  9126                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  9127     1520  14BD               	bsf	(_I2C_Status^(0+256)+29),1
  9128     1521                     l3615:
  9129                           
  9130                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  9131     1521  0020               	movlb	0	; select bank0
  9132     1522  01A1               	clrf	I2C_MasterOperation@returnValue
  9133     1523                     l3617:
  9134                           
  9135                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  9136     1523  0820               	movf	I2C_MasterOperation@read,w
  9137     1524  1903               	btfsc	3,2
  9138     1525  2D27               	goto	u2411
  9139     1526  2D28               	goto	u2410
  9140     1527                     u2411:
  9141     1527  2D2C               	goto	l3621
  9142     1528                     u2410:
  9143     1528                     l3619:
  9144                           
  9145                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9146     1528  0022               	movlb	2	; select bank2
  9147     1529  01BB               	clrf	(_I2C_Status^(0+256)+27)
  9148     152A  0ABB               	incf	(_I2C_Status^(0+256)+27),f
  9149                           
  9150                           ;mcc_generated_files/i2c_master.c: 237:         }
  9151     152B  2D2F               	goto	l3623
  9152     152C                     l3621:
  9153                           
  9154                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9155     152C  3002               	movlw	2
  9156     152D  0022               	movlb	2	; select bank2
  9157     152E  00BB               	movwf	(_I2C_Status^(0+256)+27)
  9158     152F                     l3623:
  9159                           
  9160                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  9161     152F  3192  2260  3195   	fcall	_I2C_MasterStart
  9162     1532                     l3625:
  9163                           
  9164                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  9165     1532  0020               	movlb	0	; select bank0
  9166     1533  0821               	movf	I2C_MasterOperation@returnValue,w
  9167     1534                     l547:
  9168     1534  0008               	return
  9169     1535                     __end_of_I2C_MasterOperation:
  9170                           
  9171                           	psect	text35
  9172     1260                     __ptext35:	
  9173 ;; *************** function _I2C_MasterStart *****************
  9174 ;; Defined at:
  9175 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		None
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9189 ;;      Params:         0       0       0       0       0       0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used: 1
  9195 ;; Hardware stack levels required when called: 7
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_I2C_MasterOperation
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203     1260                     _I2C_MasterStart:	
  9204                           ;psect for function _I2C_MasterStart
  9205                           
  9206     1260                     l3523:	
  9207                           ;incstack = 0
  9208                           ; Regs used in _I2C_MasterStart: []
  9209                           
  9210                           
  9211                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  9212     1260  0024               	movlb	4	; select bank4
  9213     1261  1416               	bsf	22,0	;volatile
  9214     1262                     l723:
  9215     1262  0008               	return
  9216     1263                     __end_of_I2C_MasterStart:
  9217                           
  9218                           	psect	text36
  9219     14E0                     __ptext36:	
  9220 ;; *************** function _I2C_Close *****************
  9221 ;; Defined at:
  9222 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;		None
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  returnValue     1    0[BANK0 ] enum E358
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      enum E358
  9229 ;; Registers used:
  9230 ;;		wreg, status,2, status,0, pclath, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9236 ;;      Params:         0       0       0       0       0       0       0       0
  9237 ;;      Locals:         0       1       0       0       0       0       0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0
  9239 ;;      Totals:         0       1       0       0       0       0       0       0
  9240 ;;Total ram usage:        1 bytes
  9241 ;; Hardware stack levels used: 1
  9242 ;; Hardware stack levels required when called: 8
  9243 ;; This function calls:
  9244 ;;		_I2C_MasterClearIrq
  9245 ;;		_I2C_MasterClose
  9246 ;;		_I2C_MasterDisableIrq
  9247 ;; This function is called by:
  9248 ;;		_I2C_WriteNBytes
  9249 ;;		_I2C_ReadNBytes
  9250 ;;		_I2C_Read1ByteRegister
  9251 ;;		_I2C_Read2ByteRegister
  9252 ;;		_I2C_Write1ByteRegister
  9253 ;;		_I2C_Write2ByteRegister
  9254 ;;		_I2C_ReadDataBlock
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258     14E0                     _I2C_Close:	
  9259                           ;psect for function _I2C_Close
  9260                           
  9261     14E0                     l3727:	
  9262                           ;incstack = 0
  9263                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  9264                           
  9265                           
  9266                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  9267     14E0  0020               	movlb	0	; select bank0
  9268     14E1  01A0               	clrf	I2C_Close@returnValue
  9269     14E2  0AA0               	incf	I2C_Close@returnValue,f
  9270                           
  9271                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  9272     14E3  0022               	movlb	2	; select bank2
  9273     14E4  18BD               	btfsc	(_I2C_Status^(0+256)+29),1
  9274     14E5  2CE7               	goto	u2511
  9275     14E6  2CE8               	goto	u2510
  9276     14E7                     u2511:
  9277     14E7  2CF8               	goto	l3741
  9278     14E8                     u2510:
  9279     14E8                     l3729:
  9280                           
  9281                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  9282     14E8  113D               	bcf	(_I2C_Status^(0+256)+29),2
  9283     14E9                     l3731:
  9284                           
  9285                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  9286     14E9  30FF               	movlw	255
  9287     14EA  00B6               	movwf	(_I2C_Status^(0+256)+22)
  9288     14EB                     l3733:
  9289                           
  9290                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  9291     14EB  3192  2257  3194   	fcall	_I2C_MasterClearIrq
  9292     14EE                     l3735:
  9293                           
  9294                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  9295     14EE  3192  225D  3194   	fcall	_I2C_MasterDisableIrq
  9296     14F1                     l3737:
  9297                           
  9298                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  9299     14F1  3192  225A  3194   	fcall	_I2C_MasterClose
  9300     14F4                     l3739:
  9301                           
  9302                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  9303     14F4  0022               	movlb	2	; select bank2
  9304     14F5  083C               	movf	(_I2C_Status^(0+256)+28),w
  9305     14F6  0020               	movlb	0	; select bank0
  9306     14F7  00A0               	movwf	I2C_Close@returnValue
  9307     14F8                     l3741:
  9308                           
  9309                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  9310     14F8  0020               	movlb	0	; select bank0
  9311     14F9  0820               	movf	I2C_Close@returnValue,w
  9312     14FA                     l541:
  9313     14FA  0008               	return
  9314     14FB                     __end_of_I2C_Close:
  9315                           
  9316                           	psect	text37
  9317     125D                     __ptext37:	
  9318 ;; *************** function _I2C_MasterDisableIrq *****************
  9319 ;; Defined at:
  9320 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		None
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9334 ;;      Params:         0       0       0       0       0       0       0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used: 1
  9340 ;; Hardware stack levels required when called: 7
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_I2C_Close
  9345 ;;		_I2C_SetTimeOut
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349     125D                     _I2C_MasterDisableIrq:	
  9350                           ;psect for function _I2C_MasterDisableIrq
  9351                           
  9352     125D                     l3607:	
  9353                           ;incstack = 0
  9354                           ; Regs used in _I2C_MasterDisableIrq: []
  9355                           
  9356                           
  9357                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  9358     125D  0021               	movlb	1	; select bank1
  9359     125E  1191               	bcf	17,3	;volatile
  9360     125F                     l750:
  9361     125F  0008               	return
  9362     1260                     __end_of_I2C_MasterDisableIrq:
  9363                           
  9364                           	psect	text38
  9365     125A                     __ptext38:	
  9366 ;; *************** function _I2C_MasterClose *****************
  9367 ;; Defined at:
  9368 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		None
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9382 ;;      Params:         0       0       0       0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used: 1
  9388 ;; Hardware stack levels required when called: 7
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_I2C_Close
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396     125A                     _I2C_MasterClose:	
  9397                           ;psect for function _I2C_MasterClose
  9398                           
  9399     125A                     l3609:	
  9400                           ;incstack = 0
  9401                           ; Regs used in _I2C_MasterClose: []
  9402                           
  9403                           
  9404                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  9405     125A  0024               	movlb	4	; select bank4
  9406     125B  1295               	bcf	21,5	;volatile
  9407     125C                     l705:
  9408     125C  0008               	return
  9409     125D                     __end_of_I2C_MasterClose:
  9410                           
  9411                           	psect	text39
  9412     1257                     __ptext39:	
  9413 ;; *************** function _I2C_MasterClearIrq *****************
  9414 ;; Defined at:
  9415 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;		None
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		None
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9429 ;;      Params:         0       0       0       0       0       0       0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0
  9432 ;;      Totals:         0       0       0       0       0       0       0       0
  9433 ;;Total ram usage:        0 bytes
  9434 ;; Hardware stack levels used: 1
  9435 ;; Hardware stack levels required when called: 7
  9436 ;; This function calls:
  9437 ;;		Nothing
  9438 ;; This function is called by:
  9439 ;;		_I2C_Open
  9440 ;;		_I2C_Close
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444     1257                     _I2C_MasterClearIrq:	
  9445                           ;psect for function _I2C_MasterClearIrq
  9446                           
  9447     1257                     l3591:	
  9448                           ;incstack = 0
  9449                           ; Regs used in _I2C_MasterClearIrq: []
  9450                           
  9451                           
  9452                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9453     1257  0020               	movlb	0	; select bank0
  9454     1258  1191               	bcf	17,3	;volatile
  9455     1259                     l753:
  9456     1259  0008               	return
  9457     125A                     __end_of_I2C_MasterClearIrq:
  9458                           
  9459                           	psect	text40
  9460     143D                     __ptext40:	
  9461 ;; *************** function _Task_MB *****************
  9462 ;; Defined at:
  9463 ;;		line 256 in file "Mobbus_Slave.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;		None
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      void 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9477 ;;      Params:         0       0       0       0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0
  9480 ;;      Totals:         0       0       0       0       0       0       0       0
  9481 ;;Total ram usage:        0 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 12
  9484 ;; This function calls:
  9485 ;;		_ModbusSlave_Init
  9486 ;;		_ModbusSlave_Process
  9487 ;; This function is called by:
  9488 ;;		_App_Process
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492     143D                     _Task_MB:	
  9493                           ;psect for function _Task_MB
  9494                           
  9495     143D                     l5039:	
  9496                           ;incstack = 0
  9497                           ; Regs used in _Task_MB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9498                           
  9499                           
  9500                           ;Mobbus_Slave.c: 257:     static _Bool f_Modbus_Init = 0;;Mobbus_Slave.c: 258:     if (!
      +                          f_Modbus_Init) {
  9501     143D  0021               	movlb	1	; select bank1
  9502     143E  086D               	movf	Task_MB@f_Modbus_Init^(0+128),w
  9503     143F  1D03               	btfss	3,2
  9504     1440  2C42               	goto	u4301
  9505     1441  2C43               	goto	u4300
  9506     1442                     u4301:
  9507     1442  2C4C               	goto	l5045
  9508     1443                     u4300:
  9509     1443                     l5041:
  9510                           
  9511                           ;Mobbus_Slave.c: 259:         ModbusSlave_Init(SW_Ad);
  9512     1443  0020               	movlb	0	; select bank0
  9513     1444  0869               	movf	_SW_Ad,w
  9514     1445  3188  2085  3194   	fcall	_ModbusSlave_Init
  9515     1448                     l5043:
  9516                           
  9517                           ;Mobbus_Slave.c: 260:         f_Modbus_Init = 1;
  9518     1448  0021               	movlb	1	; select bank1
  9519     1449  01ED               	clrf	Task_MB@f_Modbus_Init^(0+128)
  9520     144A  0AED               	incf	Task_MB@f_Modbus_Init^(0+128),f
  9521                           
  9522                           ;Mobbus_Slave.c: 261:     } else {
  9523     144B  2C4F               	goto	l1001
  9524     144C                     l5045:
  9525                           
  9526                           ;Mobbus_Slave.c: 262:         ModbusSlave_Process();
  9527     144C  3194  24C6  3194   	fcall	_ModbusSlave_Process
  9528     144F                     l1001:
  9529     144F  0008               	return
  9530     1450                     __end_of_Task_MB:
  9531                           
  9532                           	psect	text41
  9533     14C6                     __ptext41:	
  9534 ;; *************** function _ModbusSlave_Process *****************
  9535 ;; Defined at:
  9536 ;;		line 247 in file "Mobbus_Slave.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  state           1    0        unsigned char 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9550 ;;      Params:         0       0       0       0       0       0       0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0
  9553 ;;      Totals:         0       0       0       0       0       0       0       0
  9554 ;;Total ram usage:        0 bytes
  9555 ;; Hardware stack levels used: 1
  9556 ;; Hardware stack levels required when called: 11
  9557 ;; This function calls:
  9558 ;;		_ModbusRTU_Slave_Poll
  9559 ;; This function is called by:
  9560 ;;		_Task_MB
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564     14C6                     _ModbusSlave_Process:	
  9565                           ;psect for function _ModbusSlave_Process
  9566                           
  9567     14C6                     l4833:	
  9568                           ;incstack = 0
  9569                           ; Regs used in _ModbusSlave_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9570                           
  9571     14C6                     l4835:
  9572                           
  9573                           ;Mobbus_Slave.c: 250:     MB_Register[0] = SensorAmbient.T.Val16;
  9574     14C6  0021               	movlb	1	; select bank1
  9575     14C7  085C               	movf	(_SensorAmbient+1)^(0+128),w
  9576     14C8  0022               	movlb	2	; select bank2
  9577     14C9  00DB               	movwf	(_MB_Register+1)^(0+256)
  9578     14CA  0021               	movlb	1	; select bank1
  9579     14CB  085B               	movf	_SensorAmbient^(0+128),w
  9580     14CC  0022               	movlb	2	; select bank2
  9581     14CD  00DA               	movwf	_MB_Register^(0+256)
  9582     14CE                     l4837:
  9583                           
  9584                           ;Mobbus_Slave.c: 251:     MB_Register[1] = SensorAmbient.H.Val16;
  9585     14CE  0021               	movlb	1	; select bank1
  9586     14CF  085E               	movf	((_SensorAmbient+1)^(0+128)+2),w
  9587     14D0  0022               	movlb	2	; select bank2
  9588     14D1  00DD               	movwf	((_MB_Register+1)^(0+256)+2)
  9589     14D2  0021               	movlb	1	; select bank1
  9590     14D3  085D               	movf	(_SensorAmbient^(0+128)+2),w
  9591     14D4  0022               	movlb	2	; select bank2
  9592     14D5  00DC               	movwf	(_MB_Register^(0+256)+2)
  9593     14D6                     l4839:
  9594     14D6  3002               	movlw	2
  9595     14D7  0020               	movlb	0	; select bank0
  9596     14D8  00D4               	movwf	ModbusRTU_Slave_Poll@size
  9597     14D9  3000               	movlw	0
  9598     14DA  00D5               	movwf	ModbusRTU_Slave_Poll@size+1
  9599     14DB  305A               	movlw	(low (_MB_Register| (0+256)))& (0+255)
  9600     14DC  318D  2530  3194   	fcall	_ModbusRTU_Slave_Poll
  9601     14DF                     l994:
  9602     14DF  0008               	return
  9603     14E0                     __end_of_ModbusSlave_Process:
  9604                           
  9605                           	psect	text42
  9606     0D30                     __ptext42:	
  9607 ;; *************** function _ModbusRTU_Slave_Poll *****************
  9608 ;; Defined at:
  9609 ;;		line 125 in file "Mobbus_Slave.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  reg             1    wreg     PTR unsigned short 
  9612 ;;		 -> MB_Register(4), 
  9613 ;;  size            2   52[BANK0 ] unsigned short 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  reg             1   62[BANK0 ] PTR unsigned short 
  9616 ;;		 -> MB_Register(4), 
  9617 ;;  u8exception     1   65[BANK0 ] unsigned char 
  9618 ;;  i8state         1   64[BANK0 ] unsigned char 
  9619 ;;  u8Current       1   63[BANK0 ] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9629 ;;      Params:         0       2       0       0       0       0       0       0
  9630 ;;      Locals:         0       4       0       0       0       0       0       0
  9631 ;;      Temps:          0       8       0       0       0       0       0       0
  9632 ;;      Totals:         0      14       0       0       0       0       0       0
  9633 ;;Total ram usage:       14 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 10
  9636 ;; This function calls:
  9637 ;;		_Get_millis
  9638 ;;		_ModbusSlaveF04
  9639 ;;		_Modbus_getRxBuff
  9640 ;;		_Modbus_sendTxBuff
  9641 ;;		_buildException
  9642 ;;		_validateRequest
  9643 ;; This function is called by:
  9644 ;;		_ModbusSlave_Process
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648     0D30                     _ModbusRTU_Slave_Poll:	
  9649                           ;psect for function _ModbusRTU_Slave_Poll
  9650                           
  9651                           
  9652                           ;incstack = 0
  9653                           ; Regs used in _ModbusRTU_Slave_Poll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9654                           ;ModbusRTU_Slave_Poll@reg stored from wreg
  9655     0D30  0020               	movlb	0	; select bank0
  9656     0D31  00DE               	movwf	ModbusRTU_Slave_Poll@reg
  9657     0D32                     l3995:
  9658                           
  9659                           ;Mobbus_Slave.c: 127:     SES_Modbus.u8regsize = size;
  9660     0D32  30EA               	movlw	234
  9661     0D33  0086               	movwf	6
  9662     0D34  3021               	movlw	33
  9663     0D35  0087               	movwf	7
  9664     0D36  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9665     0D37  3FC0               	movwi [0]fsr1
  9666     0D38  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9667     0D39  3FC1               	movwi [1]fsr1
  9668     0D3A                     l3997:
  9669                           
  9670                           ;Mobbus_Slave.c: 128:     uint8_t u8Current;;Mobbus_Slave.c: 130:     u8Current = eusart
      +                          RxCount;
  9671     0D3A  086A               	movf	_eusartRxCount,w	;volatile
  9672     0D3B  00DF               	movwf	ModbusRTU_Slave_Poll@u8Current
  9673     0D3C                     l3999:
  9674                           
  9675                           ;Mobbus_Slave.c: 132:     if (u8Current == 0) return 0;
  9676     0D3C  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9677     0D3D  1D03               	btfss	3,2
  9678     0D3E  2D40               	goto	u2681
  9679     0D3F  2D41               	goto	u2680
  9680     0D40                     u2681:
  9681     0D40  2D43               	goto	l4005
  9682     0D41                     u2680:
  9683     0D41                     l4001:
  9684     0D41  3000               	movlw	0
  9685     0D42  2DFB               	goto	l949
  9686     0D43                     l4005:
  9687                           
  9688                           ;Mobbus_Slave.c: 135:     if (u8Current != SES_Modbus.u8lastRec) {
  9689     0D43  30D3               	movlw	211
  9690     0D44  0086               	movwf	6
  9691     0D45  3021               	movlw	33
  9692     0D46  0087               	movwf	7
  9693     0D47  0801               	movf	1,w
  9694     0D48  065F               	xorwf	ModbusRTU_Slave_Poll@u8Current,w
  9695     0D49  1903               	skipnz
  9696     0D4A  2D4C               	goto	u2691
  9697     0D4B  2D4D               	goto	u2690
  9698     0D4C                     u2691:
  9699     0D4C  2D64               	goto	l4015
  9700     0D4D                     u2690:
  9701     0D4D                     l4007:
  9702                           
  9703                           ;Mobbus_Slave.c: 136:         SES_Modbus.u8lastRec = u8Current;
  9704     0D4D  30D3               	movlw	211
  9705     0D4E  0086               	movwf	6
  9706     0D4F  3021               	movlw	33
  9707     0D50  0087               	movwf	7
  9708     0D51  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9709     0D52  0081               	movwf	1
  9710     0D53                     l4009:
  9711                           
  9712                           ;Mobbus_Slave.c: 137:         SES_Modbus.u32time = Get_millis();
  9713     0D53  3193  23CE  318D   	fcall	_Get_millis
  9714     0D56  30DE               	movlw	222
  9715     0D57  0086               	movwf	6
  9716     0D58  3021               	movlw	33
  9717     0D59  0087               	movwf	7
  9718     0D5A  0020               	movlb	0	; select bank0
  9719     0D5B  0820               	movf	?_Get_millis,w
  9720     0D5C  3FC0               	movwi [0]fsr1
  9721     0D5D  0821               	movf	?_Get_millis+1,w
  9722     0D5E  3FC1               	movwi [1]fsr1
  9723     0D5F  0822               	movf	?_Get_millis+2,w
  9724     0D60  3FC2               	movwi [2]fsr1
  9725     0D61  0823               	movf	?_Get_millis+3,w
  9726     0D62  3FC3               	movwi [3]fsr1
  9727     0D63  2D41               	goto	l4001
  9728     0D64                     l4015:
  9729                           
  9730                           ;Mobbus_Slave.c: 140:     if ((unsigned long) (Get_millis() - SES_Modbus.u32time) < (uns
      +                          igned long) 4) return 0;
  9731     0D64  30DE               	movlw	222
  9732     0D65  0086               	movwf	6
  9733     0D66  3021               	movlw	33
  9734     0D67  0087               	movwf	7
  9735     0D68  3F40               	moviw [0]fsr1
  9736     0D69  00D6               	movwf	??_ModbusRTU_Slave_Poll
  9737     0D6A  3F41               	moviw [1]fsr1
  9738     0D6B  00D7               	movwf	??_ModbusRTU_Slave_Poll+1
  9739     0D6C  3F42               	moviw [2]fsr1
  9740     0D6D  00D8               	movwf	??_ModbusRTU_Slave_Poll+2
  9741     0D6E  3F43               	moviw [3]fsr1
  9742     0D6F  00D9               	movwf	??_ModbusRTU_Slave_Poll+3
  9743     0D70  3193  23CE  318D   	fcall	_Get_millis
  9744     0D73  0020               	movlb	0	; select bank0
  9745     0D74  0820               	movf	?_Get_millis,w
  9746     0D75  00DA               	movwf	??_ModbusRTU_Slave_Poll+4
  9747     0D76  0821               	movf	?_Get_millis+1,w
  9748     0D77  00DB               	movwf	??_ModbusRTU_Slave_Poll+5
  9749     0D78  0822               	movf	?_Get_millis+2,w
  9750     0D79  00DC               	movwf	??_ModbusRTU_Slave_Poll+6
  9751     0D7A  0823               	movf	?_Get_millis+3,w
  9752     0D7B  00DD               	movwf	??_ModbusRTU_Slave_Poll+7
  9753     0D7C  0856               	movf	??_ModbusRTU_Slave_Poll,w
  9754     0D7D  02DA               	subwf	??_ModbusRTU_Slave_Poll+4,f
  9755     0D7E  0857               	movf	??_ModbusRTU_Slave_Poll+1,w
  9756     0D7F  3BDB               	subwfb	??_ModbusRTU_Slave_Poll+5,f
  9757     0D80  0858               	movf	??_ModbusRTU_Slave_Poll+2,w
  9758     0D81  3BDC               	subwfb	??_ModbusRTU_Slave_Poll+6,f
  9759     0D82  0859               	movf	??_ModbusRTU_Slave_Poll+3,w
  9760     0D83  3BDD               	subwfb	??_ModbusRTU_Slave_Poll+7,f
  9761     0D84  085D               	movf	??_ModbusRTU_Slave_Poll+7,w
  9762     0D85  1D03               	btfss	3,2
  9763     0D86  2D92               	goto	u2701
  9764     0D87  085C               	movf	??_ModbusRTU_Slave_Poll+6,w
  9765     0D88  1D03               	btfss	3,2
  9766     0D89  2D92               	goto	u2701
  9767     0D8A  085B               	movf	??_ModbusRTU_Slave_Poll+5,w
  9768     0D8B  1D03               	btfss	3,2
  9769     0D8C  2D92               	goto	u2701
  9770     0D8D  3004               	movlw	4
  9771     0D8E  025A               	subwf	??_ModbusRTU_Slave_Poll+4,w
  9772     0D8F  1803               	btfsc	3,0
  9773     0D90  2D92               	goto	u2701
  9774     0D91  2D93               	goto	u2700
  9775     0D92                     u2701:
  9776     0D92  2D94               	goto	l4021
  9777     0D93                     u2700:
  9778     0D93  2D41               	goto	l4001
  9779     0D94                     l4021:
  9780                           
  9781                           ;Mobbus_Slave.c: 142:     SES_Modbus.u8lastRec = 0;
  9782     0D94  30D3               	movlw	211
  9783     0D95  0086               	movwf	6
  9784     0D96  3021               	movlw	33
  9785     0D97  0087               	movwf	7
  9786     0D98  0181               	clrf	1
  9787     0D99                     l4023:
  9788                           
  9789                           ;Mobbus_Slave.c: 143:     uint8_t i8state = Modbus_getRxBuff();
  9790     0D99  3189  212B  318D   	fcall	_Modbus_getRxBuff
  9791     0D9C  0020               	movlb	0	; select bank0
  9792     0D9D  00E0               	movwf	ModbusRTU_Slave_Poll@i8state
  9793     0D9E                     l4025:
  9794                           
  9795                           ;Mobbus_Slave.c: 144:     SES_Modbus.u8lastError = i8state;
  9796     0D9E  303B               	movlw	59
  9797     0D9F  0086               	movwf	6
  9798     0DA0  3021               	movlw	33
  9799     0DA1  0087               	movwf	7
  9800     0DA2  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9801     0DA3  0081               	movwf	1
  9802     0DA4                     l4027:
  9803                           
  9804                           ;Mobbus_Slave.c: 145:     if (i8state < 7) return i8state;
  9805     0DA4  3007               	movlw	7
  9806     0DA5  0260               	subwf	ModbusRTU_Slave_Poll@i8state,w
  9807     0DA6  1803               	skipnc
  9808     0DA7  2DA9               	goto	u2711
  9809     0DA8  2DAA               	goto	u2710
  9810     0DA9                     u2711:
  9811     0DA9  2DAD               	goto	l4033
  9812     0DAA                     u2710:
  9813     0DAA                     l4029:
  9814     0DAA  0020               	movlb	0	; select bank0
  9815     0DAB  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9816     0DAC  2DFB               	goto	l949
  9817     0DAD                     l4033:
  9818                           
  9819                           ;Mobbus_Slave.c: 148:     if (SES_Modbus.au8Buffer[ ID ] != SES_Modbus.u8id) return 0;
  9820     0DAD  3038               	movlw	56
  9821     0DAE  0086               	movwf	6
  9822     0DAF  3021               	movlw	33
  9823     0DB0  0087               	movwf	7
  9824     0DB1  3038               	movlw	56
  9825     0DB2  0084               	movwf	4
  9826     0DB3  3021               	movlw	33
  9827     0DB4  0085               	movwf	5
  9828     0DB5  3104               	addfsr 0,4
  9829     0DB6  0800               	movf	0,w
  9830     0DB7  0601               	xorwf	1,w
  9831     0DB8  1903               	skipnz
  9832     0DB9  2DBB               	goto	u2721
  9833     0DBA  2DBC               	goto	u2720
  9834     0DBB                     u2721:
  9835     0DBB  2DBD               	goto	l4039
  9836     0DBC                     u2720:
  9837     0DBC  2D41               	goto	l4001
  9838     0DBD                     l4039:
  9839                           
  9840                           ;Mobbus_Slave.c: 151:     uint8_t u8exception = validateRequest();
  9841     0DBD  318A  22C5  318D   	fcall	_validateRequest
  9842     0DC0  0020               	movlb	0	; select bank0
  9843     0DC1  00E1               	movwf	ModbusRTU_Slave_Poll@u8exception
  9844     0DC2                     l4041:
  9845                           
  9846                           ;Mobbus_Slave.c: 152:     if (u8exception > 0) {
  9847     0DC2  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9848     0DC3  1903               	btfsc	3,2
  9849     0DC4  2DC6               	goto	u2731
  9850     0DC5  2DC7               	goto	u2730
  9851     0DC6                     u2731:
  9852     0DC6  2DDC               	goto	l4053
  9853     0DC7                     u2730:
  9854     0DC7                     l4043:
  9855                           
  9856                           ;Mobbus_Slave.c: 153:         if (u8exception != NO_REPLY) {
  9857     0DC7  0A61               	incf	ModbusRTU_Slave_Poll@u8exception,w
  9858     0DC8  1903               	btfsc	3,2
  9859     0DC9  2DCB               	goto	u2741
  9860     0DCA  2DCC               	goto	u2740
  9861     0DCB                     u2741:
  9862     0DCB  2DD3               	goto	l4047
  9863     0DCC                     u2740:
  9864     0DCC                     l4045:
  9865                           
  9866                           ;Mobbus_Slave.c: 154:             buildException(u8exception);
  9867     0DCC  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9868     0DCD  3196  2696  318D   	fcall	_buildException
  9869                           
  9870                           ;Mobbus_Slave.c: 155:             Modbus_sendTxBuff();
  9871     0DD0  3186  26EA  318D   	fcall	_Modbus_sendTxBuff
  9872     0DD3                     l4047:
  9873                           
  9874                           ;Mobbus_Slave.c: 157:         SES_Modbus.u8lastError = u8exception;
  9875     0DD3  303B               	movlw	59
  9876     0DD4  0086               	movwf	6
  9877     0DD5  3021               	movlw	33
  9878     0DD6  0087               	movwf	7
  9879     0DD7  0020               	movlb	0	; select bank0
  9880     0DD8  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9881     0DD9  0081               	movwf	1
  9882     0DDA                     l4049:
  9883                           
  9884                           ;Mobbus_Slave.c: 158:         return u8exception;
  9885     0DDA  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9886     0DDB  2DFB               	goto	l949
  9887     0DDC                     l4053:
  9888                           
  9889                           ;Mobbus_Slave.c: 161:     SES_Modbus.u32timeOut = Get_millis();
  9890     0DDC  3193  23CE  318D   	fcall	_Get_millis
  9891     0DDF  30E2               	movlw	226
  9892     0DE0  0086               	movwf	6
  9893     0DE1  3021               	movlw	33
  9894     0DE2  0087               	movwf	7
  9895     0DE3  0020               	movlb	0	; select bank0
  9896     0DE4  0820               	movf	?_Get_millis,w
  9897     0DE5  3FC0               	movwi [0]fsr1
  9898     0DE6  0821               	movf	?_Get_millis+1,w
  9899     0DE7  3FC1               	movwi [1]fsr1
  9900     0DE8  0822               	movf	?_Get_millis+2,w
  9901     0DE9  3FC2               	movwi [2]fsr1
  9902     0DEA  0823               	movf	?_Get_millis+3,w
  9903     0DEB  3FC3               	movwi [3]fsr1
  9904     0DEC                     l4055:
  9905                           
  9906                           ;Mobbus_Slave.c: 162:     SES_Modbus.u8lastError = 0;
  9907     0DEC  3038               	movlw	56
  9908     0DED  0086               	movwf	6
  9909     0DEE  3021               	movlw	33
  9910     0DEF  0087               	movwf	7
  9911     0DF0  3143               	addfsr 1,3
  9912     0DF1  0181               	clrf	1
  9913     0DF2                     l4057:
  9914                           
  9915                           ;Mobbus_Slave.c: 164:     ModbusSlaveF04(reg, size);
  9916     0DF2  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9917     0DF3  00BF               	movwf	ModbusSlaveF04@size+1
  9918     0DF4  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9919     0DF5  00BE               	movwf	ModbusSlaveF04@size
  9920     0DF6  085E               	movf	ModbusRTU_Slave_Poll@reg,w
  9921     0DF7  318B  23E1  318D   	fcall	_ModbusSlaveF04
  9922     0DFA  2DAA               	goto	l4029
  9923     0DFB                     l949:
  9924     0DFB  0008               	return
  9925     0DFC                     __end_of_ModbusRTU_Slave_Poll:
  9926                           
  9927                           	psect	text43
  9928     0AC5                     __ptext43:	
  9929 ;; *************** function _validateRequest *****************
  9930 ;; Defined at:
  9931 ;;		line 98 in file "Mobbus_Slave.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;		None
  9934 ;; Auto vars:     Size  Location     Type
  9935 ;;  u16MsgCRC       2   28[BANK0 ] unsigned short 
  9936 ;;  i               1   31[BANK0 ] unsigned char 
  9937 ;;  isSupported     1   30[BANK0 ] _Bool 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      unsigned char 
  9940 ;; Registers used:
  9941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9947 ;;      Params:         0       0       0       0       0       0       0       0
  9948 ;;      Locals:         0       4       0       0       0       0       0       0
  9949 ;;      Temps:          0      13       0       0       0       0       0       0
  9950 ;;      Totals:         0      17       0       0       0       0       0       0
  9951 ;;Total ram usage:       17 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; Hardware stack levels required when called: 8
  9954 ;; This function calls:
  9955 ;;		_Modbus_calcCRC
  9956 ;; This function is called by:
  9957 ;;		_ModbusRTU_Slave_Poll
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961     0AC5                     _validateRequest:	
  9962                           ;psect for function _validateRequest
  9963                           
  9964     0AC5                     l3821:	
  9965                           ;incstack = 0
  9966                           ; Regs used in _validateRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9967                           
  9968                           
  9969                           ;Mobbus_Slave.c: 100:     uint16_t u16MsgCRC = (uint16_t)
  9970     0AC5  30D2               	movlw	210
  9971     0AC6  0086               	movwf	6
  9972     0AC7  3021               	movlw	33
  9973     0AC8  0087               	movwf	7
  9974     0AC9  0801               	movf	1,w
  9975     0ACA  0020               	movlb	0	; select bank0
  9976     0ACB  00AF               	movwf	??_validateRequest
  9977     0ACC  01B0               	clrf	??_validateRequest+1
  9978     0ACD  303B               	movlw	59
  9979     0ACE  00B1               	movwf	??_validateRequest+2
  9980     0ACF  3021               	movlw	33
  9981     0AD0  00B2               	movwf	??_validateRequest+3
  9982     0AD1  082F               	movf	??_validateRequest,w
  9983     0AD2  0731               	addwf	??_validateRequest+2,w
  9984     0AD3  0086               	movwf	6
  9985     0AD4  0830               	movf	??_validateRequest+1,w
  9986     0AD5  3D32               	addwfc	??_validateRequest+3,w
  9987     0AD6  0087               	movwf	7
  9988     0AD7  0801               	movf	1,w
  9989     0AD8  00B3               	movwf	??_validateRequest+4
  9990     0AD9  01B4               	clrf	??_validateRequest+5
  9991     0ADA  30D2               	movlw	210
  9992     0ADB  0086               	movwf	6
  9993     0ADC  3021               	movlw	33
  9994     0ADD  0087               	movwf	7
  9995     0ADE  0801               	movf	1,w
  9996     0ADF  00B5               	movwf	??_validateRequest+6
  9997     0AE0  01B6               	clrf	??_validateRequest+7
  9998     0AE1  303A               	movlw	58
  9999     0AE2  00B7               	movwf	??_validateRequest+8
 10000     0AE3  3021               	movlw	33
 10001     0AE4  00B8               	movwf	??_validateRequest+9
 10002     0AE5  0835               	movf	??_validateRequest+6,w
 10003     0AE6  0737               	addwf	??_validateRequest+8,w
 10004     0AE7  0086               	movwf	6
 10005     0AE8  0836               	movf	??_validateRequest+7,w
 10006     0AE9  3D38               	addwfc	??_validateRequest+9,w
 10007     0AEA  0087               	movwf	7
 10008     0AEB  0801               	movf	1,w
 10009     0AEC  00B9               	movwf	??_validateRequest+10
 10010     0AED  01BA               	clrf	??_validateRequest+11
 10011     0AEE  0839               	movf	??_validateRequest+10,w
 10012     0AEF  00BA               	movwf	??_validateRequest+11
 10013     0AF0  01B9               	clrf	??_validateRequest+10
 10014     0AF1  0833               	movf	??_validateRequest+4,w
 10015     0AF2  0439               	iorwf	??_validateRequest+10,w
 10016     0AF3  00BC               	movwf	validateRequest@u16MsgCRC
 10017     0AF4  0834               	movf	??_validateRequest+5,w
 10018     0AF5  043A               	iorwf	??_validateRequest+11,w
 10019     0AF6  00BD               	movwf	validateRequest@u16MsgCRC+1
 10020     0AF7                     l3823:
 10021                           
 10022                           ;Mobbus_Slave.c: 103:     if (Modbus_calcCRC(SES_Modbus.u8BufferSize - 2) != u16MsgCRC) 
      +                          {
 10023     0AF7  30D2               	movlw	210
 10024     0AF8  0086               	movwf	6
 10025     0AF9  3021               	movlw	33
 10026     0AFA  0087               	movwf	7
 10027     0AFB  0801               	movf	1,w
 10028     0AFC  3EFE               	addlw	254
 10029     0AFD  3189  2187  318A   	fcall	_Modbus_calcCRC
 10030     0B00  0020               	movlb	0	; select bank0
 10031     0B01  083D               	movf	validateRequest@u16MsgCRC+1,w
 10032     0B02  0621               	xorwf	?_Modbus_calcCRC+1,w
 10033     0B03  1D03               	skipz
 10034     0B04  2B07               	goto	u2565
 10035     0B05  083C               	movf	validateRequest@u16MsgCRC,w
 10036     0B06  0620               	xorwf	?_Modbus_calcCRC,w
 10037     0B07                     u2565:
 10038     0B07  1903               	skipnz
 10039     0B08  2B0A               	goto	u2561
 10040     0B09  2B0B               	goto	u2560
 10041     0B0A                     u2561:
 10042     0B0A  2B16               	goto	l3831
 10043     0B0B                     u2560:
 10044     0B0B                     l3825:
 10045                           
 10046                           ;Mobbus_Slave.c: 104:         SES_Modbus.u16errCnt++;
 10047     0B0B  30DA               	movlw	218
 10048     0B0C  0086               	movwf	6
 10049     0B0D  3021               	movlw	33
 10050     0B0E  0087               	movwf	7
 10051     0B0F  3001               	movlw	1
 10052     0B10  0781               	addwf	1,f
 10053     0B11  3141               	addfsr 1,1
 10054     0B12  1803               	skipnc
 10055     0B13  0A81               	incf	1,f
 10056     0B14                     l3827:
 10057                           
 10058                           ;Mobbus_Slave.c: 105:         return NO_REPLY;
 10059     0B14  30FF               	movlw	255
 10060     0B15  2B49               	goto	l941
 10061     0B16                     l3831:
 10062                           
 10063                           ;Mobbus_Slave.c: 109:     _Bool isSupported = 0;
 10064     0B16  01BE               	clrf	validateRequest@isSupported
 10065                           
 10066                           ;Mobbus_Slave.c: 110:     uint8_t i = 0;
 10067     0B17  01BF               	clrf	validateRequest@i
 10068                           
 10069                           ;Mobbus_Slave.c: 111:     for (i = 0; i< sizeof ( fctsupported); i++) {
 10070     0B18  01BF               	clrf	validateRequest@i
 10071     0B19                     l3837:
 10072                           
 10073                           ;Mobbus_Slave.c: 112:         if (fctsupported[i] == SES_Modbus.au8Buffer[FUNC]) {
 10074     0B19  3038               	movlw	56
 10075     0B1A  0086               	movwf	6
 10076     0B1B  3021               	movlw	33
 10077     0B1C  0087               	movwf	7
 10078     0B1D  3145               	addfsr 1,5
 10079     0B1E  083F               	movf	validateRequest@i,w
 10080     0B1F  3E20               	addlw	low (_fctsupported| (0+32768))
 10081     0B20  0084               	movwf	4
 10082     0B21  3098               	movlw	high (_fctsupported| (0+32768))
 10083     0B22  1803               	skipnc
 10084     0B23  3E01               	addlw	1
 10085     0B24  0085               	movwf	5
 10086     0B25  0800               	movf	0,w	;code access
 10087     0B26  0601               	xorwf	1,w
 10088     0B27  1D03               	skipz
 10089     0B28  2B2A               	goto	u2571
 10090     0B29  2B2B               	goto	u2570
 10091     0B2A                     u2571:
 10092     0B2A  2B2E               	goto	l3841
 10093     0B2B                     u2570:
 10094     0B2B                     l3839:
 10095                           
 10096                           ;Mobbus_Slave.c: 113:             isSupported = 1;
 10097     0B2B  01BE               	clrf	validateRequest@isSupported
 10098     0B2C  0ABE               	incf	validateRequest@isSupported,f
 10099                           
 10100                           ;Mobbus_Slave.c: 114:             break;
 10101     0B2D  2B38               	goto	l3845
 10102     0B2E                     l3841:
 10103                           
 10104                           ;Mobbus_Slave.c: 116:     }
 10105     0B2E  3001               	movlw	1
 10106     0B2F  00AF               	movwf	??_validateRequest
 10107     0B30  082F               	movf	??_validateRequest,w
 10108     0B31  07BF               	addwf	validateRequest@i,f
 10109     0B32                     l3843:
 10110     0B32  3008               	movlw	8
 10111     0B33  023F               	subwf	validateRequest@i,w
 10112     0B34  1C03               	skipc
 10113     0B35  2B37               	goto	u2581
 10114     0B36  2B38               	goto	u2580
 10115     0B37                     u2581:
 10116     0B37  2B19               	goto	l3837
 10117     0B38                     u2580:
 10118     0B38                     l3845:
 10119                           
 10120                           ;Mobbus_Slave.c: 117:     if (!isSupported) {
 10121     0B38  083E               	movf	validateRequest@isSupported,w
 10122     0B39  1D03               	btfss	3,2
 10123     0B3A  2B3C               	goto	u2591
 10124     0B3B  2B3D               	goto	u2590
 10125     0B3C                     u2591:
 10126     0B3C  2B48               	goto	l3853
 10127     0B3D                     u2590:
 10128     0B3D                     l3847:
 10129                           
 10130                           ;Mobbus_Slave.c: 118:         SES_Modbus.u16errCnt++;
 10131     0B3D  30DA               	movlw	218
 10132     0B3E  0086               	movwf	6
 10133     0B3F  3021               	movlw	33
 10134     0B40  0087               	movwf	7
 10135     0B41  3001               	movlw	1
 10136     0B42  0781               	addwf	1,f
 10137     0B43  3141               	addfsr 1,1
 10138     0B44  1803               	skipnc
 10139     0B45  0A81               	incf	1,f
 10140     0B46                     l3849:
 10141                           
 10142                           ;Mobbus_Slave.c: 119:         return EXC_FUNC_CODE;
 10143     0B46  3001               	movlw	1
 10144     0B47  2B49               	goto	l941
 10145     0B48                     l3853:
 10146                           
 10147                           ;Mobbus_Slave.c: 122:     return 0;
 10148     0B48  3000               	movlw	0
 10149     0B49                     l941:
 10150     0B49  0008               	return
 10151     0B4A                     __end_of_validateRequest:
 10152                           
 10153                           	psect	text44
 10154     1696                     __ptext44:	
 10155 ;; *************** function _buildException *****************
 10156 ;; Defined at:
 10157 ;;		line 64 in file "Mobbus_Slave.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  exception       1    wreg     unsigned char 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  exception       1    1[BANK0 ] unsigned char 
 10162 ;;  u8func          1    2[BANK0 ] unsigned char 
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      void 
 10165 ;; Registers used:
 10166 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10172 ;;      Params:         0       0       0       0       0       0       0       0
 10173 ;;      Locals:         0       2       0       0       0       0       0       0
 10174 ;;      Temps:          0       1       0       0       0       0       0       0
 10175 ;;      Totals:         0       3       0       0       0       0       0       0
 10176 ;;Total ram usage:        3 bytes
 10177 ;; Hardware stack levels used: 1
 10178 ;; Hardware stack levels required when called: 7
 10179 ;; This function calls:
 10180 ;;		Nothing
 10181 ;; This function is called by:
 10182 ;;		_ModbusRTU_Slave_Poll
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186     1696                     _buildException:	
 10187                           ;psect for function _buildException
 10188                           
 10189                           
 10190                           ;incstack = 0
 10191                           ; Regs used in _buildException: [wreg+fsr1l+fsr1h+status,2+status,0]
 10192                           ;buildException@exception stored from wreg
 10193     1696  0020               	movlb	0	; select bank0
 10194     1697  00A1               	movwf	buildException@exception
 10195     1698                     l3783:
 10196                           
 10197                           ;Mobbus_Slave.c: 66:     uint8_t u8func = SES_Modbus.au8Buffer[ FUNC ];
 10198     1698  3038               	movlw	56
 10199     1699  0086               	movwf	6
 10200     169A  3021               	movlw	33
 10201     169B  0087               	movwf	7
 10202     169C  3145               	addfsr 1,5
 10203     169D  0801               	movf	1,w
 10204     169E  00A2               	movwf	buildException@u8func
 10205                           
 10206                           ;Mobbus_Slave.c: 68:     SES_Modbus.au8Buffer[ ID ] = SES_Modbus.u8id;
 10207     169F  3038               	movlw	56
 10208     16A0  0086               	movwf	6
 10209     16A1  3021               	movlw	33
 10210     16A2  0087               	movwf	7
 10211     16A3  0801               	movf	1,w
 10212     16A4  00A0               	movwf	??_buildException
 10213     16A5  303C               	movlw	60
 10214     16A6  0086               	movwf	6
 10215     16A7  3021               	movlw	33
 10216     16A8  0087               	movwf	7
 10217     16A9  0820               	movf	??_buildException,w
 10218     16AA  0081               	movwf	1
 10219     16AB                     l3785:
 10220                           
 10221                           ;Mobbus_Slave.c: 69:     SES_Modbus.au8Buffer[ FUNC ] = u8func + 0x80;
 10222     16AB  0822               	movf	buildException@u8func,w
 10223     16AC  3E80               	addlw	128
 10224     16AD  00A0               	movwf	??_buildException
 10225     16AE  303D               	movlw	61
 10226     16AF  0086               	movwf	6
 10227     16B0  3021               	movlw	33
 10228     16B1  0087               	movwf	7
 10229     16B2  0820               	movf	??_buildException,w
 10230     16B3  0081               	movwf	1
 10231     16B4                     l3787:
 10232                           
 10233                           ;Mobbus_Slave.c: 70:     SES_Modbus.au8Buffer[ 2 ] = exception;
 10234     16B4  303E               	movlw	62
 10235     16B5  0086               	movwf	6
 10236     16B6  3021               	movlw	33
 10237     16B7  0087               	movwf	7
 10238     16B8  0821               	movf	buildException@exception,w
 10239     16B9  0081               	movwf	1
 10240     16BA                     l3789:
 10241                           
 10242                           ;Mobbus_Slave.c: 71:     SES_Modbus.u8BufferSize = EXCEPTION_SIZE;
 10243     16BA  30D2               	movlw	210
 10244     16BB  0086               	movwf	6
 10245     16BC  3021               	movlw	33
 10246     16BD  0087               	movwf	7
 10247     16BE  3003               	movlw	3
 10248     16BF  0081               	movwf	1
 10249     16C0                     l928:
 10250     16C0  0008               	return
 10251     16C1                     __end_of_buildException:
 10252                           
 10253                           	psect	text45
 10254     092B                     __ptext45:	
 10255 ;; *************** function _Modbus_getRxBuff *****************
 10256 ;; Defined at:
 10257 ;;		line 74 in file "Mobbus_Slave.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;		None
 10260 ;; Auto vars:     Size  Location     Type
 10261 ;;  bBuffOverflo    1    9[BANK0 ] _Bool 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  1    wreg      unsigned char 
 10264 ;; Registers used:
 10265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10271 ;;      Params:         0       0       0       0       0       0       0       0
 10272 ;;      Locals:         0       1       0       0       0       0       0       0
 10273 ;;      Temps:          0       7       0       0       0       0       0       0
 10274 ;;      Totals:         0       8       0       0       0       0       0       0
 10275 ;;Total ram usage:        8 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; Hardware stack levels required when called: 8
 10278 ;; This function calls:
 10279 ;;		_EUSART_Read
 10280 ;; This function is called by:
 10281 ;;		_ModbusRTU_Slave_Poll
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285     092B                     _Modbus_getRxBuff:	
 10286                           ;psect for function _Modbus_getRxBuff
 10287                           
 10288     092B                     l3791:	
 10289                           ;incstack = 0
 10290                           ; Regs used in _Modbus_getRxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10291                           
 10292                           
 10293                           ;Mobbus_Slave.c: 75:     _Bool bBuffOverflow = 0;
 10294     092B  0020               	movlb	0	; select bank0
 10295     092C  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10296     092D                     l3795:
 10297                           
 10298                           ;Mobbus_Slave.c: 81:     SES_Modbus.u8BufferSize = 0;
 10299     092D  30D2               	movlw	210
 10300     092E  0086               	movwf	6
 10301     092F  3021               	movlw	33
 10302     0930  0087               	movwf	7
 10303     0931  0181               	clrf	1
 10304                           
 10305                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10306     0932  2963               	goto	l3805
 10307     0933                     l3797:
 10308                           
 10309                           ;Mobbus_Slave.c: 83:         SES_Modbus.au8Buffer [SES_Modbus.u8BufferSize] = EUSART_Rea
      +                          d();
 10310     0933  3196  266B  3189   	fcall	_EUSART_Read
 10311     0936  0020               	movlb	0	; select bank0
 10312     0937  00A2               	movwf	??_Modbus_getRxBuff
 10313     0938  30D2               	movlw	210
 10314     0939  0086               	movwf	6
 10315     093A  3021               	movlw	33
 10316     093B  0087               	movwf	7
 10317     093C  0801               	movf	1,w
 10318     093D  00A3               	movwf	??_Modbus_getRxBuff+1
 10319     093E  01A4               	clrf	??_Modbus_getRxBuff+2
 10320     093F  303C               	movlw	60
 10321     0940  00A5               	movwf	??_Modbus_getRxBuff+3
 10322     0941  3021               	movlw	33
 10323     0942  00A6               	movwf	??_Modbus_getRxBuff+4
 10324     0943  0823               	movf	??_Modbus_getRxBuff+1,w
 10325     0944  0725               	addwf	??_Modbus_getRxBuff+3,w
 10326     0945  00A7               	movwf	??_Modbus_getRxBuff+5
 10327     0946  0824               	movf	??_Modbus_getRxBuff+2,w
 10328     0947  3D26               	addwfc	??_Modbus_getRxBuff+4,w
 10329     0948  00A8               	movwf	??_Modbus_getRxBuff+6
 10330     0949  0827               	movf	??_Modbus_getRxBuff+5,w
 10331     094A  0086               	movwf	6
 10332     094B  0828               	movf	??_Modbus_getRxBuff+6,w
 10333     094C  0087               	movwf	7
 10334     094D  0822               	movf	??_Modbus_getRxBuff,w
 10335     094E  0081               	movwf	1
 10336     094F                     l3799:
 10337                           
 10338                           ;Mobbus_Slave.c: 84:         SES_Modbus.u8BufferSize++;
 10339     094F  3001               	movlw	1
 10340     0950  00A2               	movwf	??_Modbus_getRxBuff
 10341     0951  30D2               	movlw	210
 10342     0952  0086               	movwf	6
 10343     0953  3021               	movlw	33
 10344     0954  0087               	movwf	7
 10345     0955  0822               	movf	??_Modbus_getRxBuff,w
 10346     0956  0781               	addwf	1,f
 10347     0957                     l3801:
 10348                           
 10349                           ;Mobbus_Slave.c: 86:         if (SES_Modbus.u8BufferSize >= 150) bBuffOverflow = 1;
 10350     0957  30D2               	movlw	210
 10351     0958  0086               	movwf	6
 10352     0959  3021               	movlw	33
 10353     095A  0087               	movwf	7
 10354     095B  3096               	movlw	150
 10355     095C  0201               	subwf	1,w
 10356     095D  1C03               	skipc
 10357     095E  2960               	goto	u2531
 10358     095F  2961               	goto	u2530
 10359     0960                     u2531:
 10360     0960  2963               	goto	l3805
 10361     0961                     u2530:
 10362     0961                     l3803:
 10363     0961  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10364     0962  0AA9               	incf	Modbus_getRxBuff@bBuffOverflow,f
 10365     0963                     l3805:
 10366                           
 10367                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10368     0963  086A               	movf	_eusartRxCount,w	;volatile
 10369     0964  1D03               	btfss	3,2
 10370     0965  2967               	goto	u2541
 10371     0966  2968               	goto	u2540
 10372     0967                     u2541:
 10373     0967  2933               	goto	l3797
 10374     0968                     u2540:
 10375     0968                     l3807:
 10376                           
 10377                           ;Mobbus_Slave.c: 88:     SES_Modbus.u16InCnt++;
 10378     0968  30D6               	movlw	214
 10379     0969  0086               	movwf	6
 10380     096A  3021               	movlw	33
 10381     096B  0087               	movwf	7
 10382     096C  3001               	movlw	1
 10383     096D  0781               	addwf	1,f
 10384     096E  3141               	addfsr 1,1
 10385     096F  1803               	skipnc
 10386     0970  0A81               	incf	1,f
 10387     0971                     l3809:
 10388                           
 10389                           ;Mobbus_Slave.c: 90:     if (bBuffOverflow) {
 10390     0971  0829               	movf	Modbus_getRxBuff@bBuffOverflow,w
 10391     0972  1903               	btfsc	3,2
 10392     0973  2975               	goto	u2551
 10393     0974  2976               	goto	u2550
 10394     0975                     u2551:
 10395     0975  2981               	goto	l3817
 10396     0976                     u2550:
 10397     0976                     l3811:
 10398                           
 10399                           ;Mobbus_Slave.c: 91:         SES_Modbus.u16errCnt++;
 10400     0976  30DA               	movlw	218
 10401     0977  0086               	movwf	6
 10402     0978  3021               	movlw	33
 10403     0979  0087               	movwf	7
 10404     097A  3001               	movlw	1
 10405     097B  0781               	addwf	1,f
 10406     097C  3141               	addfsr 1,1
 10407     097D  1803               	skipnc
 10408     097E  0A81               	incf	1,f
 10409     097F                     l3813:
 10410                           
 10411                           ;Mobbus_Slave.c: 92:         return (uint8_t) ERR_BUFF_OVERFLOW;
 10412     097F  30FD               	movlw	253
 10413     0980  2986               	goto	l937
 10414     0981                     l3817:
 10415                           
 10416                           ;Mobbus_Slave.c: 95:     return SES_Modbus.u8BufferSize;
 10417     0981  30D2               	movlw	210
 10418     0982  0086               	movwf	6
 10419     0983  3021               	movlw	33
 10420     0984  0087               	movwf	7
 10421     0985  0801               	movf	1,w
 10422     0986                     l937:
 10423     0986  0008               	return
 10424     0987                     __end_of_Modbus_getRxBuff:
 10425                           
 10426                           	psect	text46
 10427     166B                     __ptext46:	
 10428 ;; *************** function _EUSART_Read *****************
 10429 ;; Defined at:
 10430 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;  readValue       1    1[BANK0 ] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      unsigned char 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10444 ;;      Params:         0       0       0       0       0       0       0       0
 10445 ;;      Locals:         0       1       0       0       0       0       0       0
 10446 ;;      Temps:          0       1       0       0       0       0       0       0
 10447 ;;      Totals:         0       2       0       0       0       0       0       0
 10448 ;;Total ram usage:        2 bytes
 10449 ;; Hardware stack levels used: 1
 10450 ;; Hardware stack levels required when called: 7
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_Modbus_getRxBuff
 10455 ;;		_getch
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459     166B                     _EUSART_Read:	
 10460                           ;psect for function _EUSART_Read
 10461                           
 10462     166B                     l3567:	
 10463                           ;incstack = 0
 10464                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10465                           
 10466     166B                     l3569:	
 10467                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10468                           
 10469                           
 10470                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10471     166B  0020               	movlb	0	; select bank0
 10472     166C  086A               	movf	_eusartRxCount,w	;volatile
 10473     166D  1903               	btfsc	3,2
 10474     166E  2E70               	goto	u2371
 10475     166F  2E71               	goto	u2370
 10476     1670                     u2371:
 10477     1670  2E6B               	goto	l3569
 10478     1671                     u2370:
 10479     1671                     l3571:
 10480                           
 10481                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10482     1671  086B               	movf	_eusartRxTail,w	;volatile
 10483     1672  3E3E               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10484     1673  0086               	movwf	6
 10485     1674  3001               	movlw	1	; select bank2/3
 10486     1675  0087               	movwf	7
 10487     1676  0801               	movf	1,w
 10488     1677  0021               	movlb	1	; select bank1
 10489     1678  00EF               	movwf	_eusartRxLastError^(0+128)	;volatile
 10490                           
 10491                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10492     1679  0020               	movlb	0	; select bank0
 10493     167A  086B               	movf	_eusartRxTail,w
 10494     167B  3E46               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10495     167C  0086               	movwf	6
 10496     167D  3001               	movlw	1	; select bank2/3
 10497     167E  0087               	movwf	7
 10498     167F  0801               	movf	1,w
 10499     1680  00A1               	movwf	EUSART_Read@readValue
 10500     1681                     l3573:
 10501     1681  3001               	movlw	1
 10502     1682  00A0               	movwf	??_EUSART_Read
 10503     1683  0820               	movf	??_EUSART_Read,w
 10504     1684  07EB               	addwf	_eusartRxTail,f	;volatile
 10505     1685                     l3575:
 10506                           
 10507                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10508     1685  3008               	movlw	8
 10509     1686  026B               	subwf	_eusartRxTail,w	;volatile
 10510     1687  1C03               	skipc
 10511     1688  2E8A               	goto	u2381
 10512     1689  2E8B               	goto	u2380
 10513     168A                     u2381:
 10514     168A  2E8C               	goto	l3579
 10515     168B                     u2380:
 10516     168B                     l3577:
 10517                           
 10518                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10519     168B  01EB               	clrf	_eusartRxTail	;volatile
 10520     168C                     l3579:
 10521                           
 10522                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10523     168C  0021               	movlb	1	; select bank1
 10524     168D  1291               	bcf	17,5	;volatile
 10525     168E                     l3581:
 10526                           
 10527                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10528     168E  3001               	movlw	1
 10529     168F  0020               	movlb	0	; select bank0
 10530     1690  02EA               	subwf	_eusartRxCount,f	;volatile
 10531     1691                     l3583:
 10532                           
 10533                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10534     1691  0021               	movlb	1	; select bank1
 10535     1692  1691               	bsf	17,5	;volatile
 10536     1693                     l3585:
 10537                           
 10538                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10539     1693  0020               	movlb	0	; select bank0
 10540     1694  0821               	movf	EUSART_Read@readValue,w
 10541     1695                     l303:
 10542     1695  0008               	return
 10543     1696                     __end_of_EUSART_Read:
 10544                           
 10545                           	psect	text47
 10546     0BE1                     __ptext47:	
 10547 ;; *************** function _ModbusSlaveF04 *****************
 10548 ;; Defined at:
 10549 ;;		line 36 in file "Mobbus_Slave.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;  reg             1    wreg     PTR unsigned short 
 10552 ;;		 -> MB_Register(4), 
 10553 ;;  size            2   30[BANK0 ] unsigned short 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  reg             1   45[BANK0 ] PTR unsigned short 
 10556 ;;		 -> MB_Register(4), 
 10557 ;;  i               2   50[BANK0 ] unsigned short 
 10558 ;;  valueRegsno     2   48[BANK0 ] struct .
 10559 ;;  valueAdd        2   46[BANK0 ] struct .
 10560 ;;  u8StartAdd      2   42[BANK0 ] unsigned short 
 10561 ;;  u8regsno        1   44[BANK0 ] unsigned char 
 10562 ;;  u8CopyBuffer    1    0        unsigned char 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      unsigned char 
 10565 ;; Registers used:
 10566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10572 ;;      Params:         0       2       0       0       0       0       0       0
 10573 ;;      Locals:         0      10       0       0       0       0       0       0
 10574 ;;      Temps:          0      10       0       0       0       0       0       0
 10575 ;;      Totals:         0      22       0       0       0       0       0       0
 10576 ;;Total ram usage:       22 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 9
 10579 ;; This function calls:
 10580 ;;		_Modbus_sendTxBuff
 10581 ;; This function is called by:
 10582 ;;		_ModbusRTU_Slave_Poll
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586     0BE1                     _ModbusSlaveF04:	
 10587                           ;psect for function _ModbusSlaveF04
 10588                           
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _ModbusSlaveF04: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10592                           ;ModbusSlaveF04@reg stored from wreg
 10593     0BE1  0020               	movlb	0	; select bank0
 10594     0BE2  00CD               	movwf	ModbusSlaveF04@reg
 10595     0BE3                     l3755:
 10596                           
 10597                           ;Mobbus_Slave.c: 37:     VALUE16 valueAdd, valueRegsno;;Mobbus_Slave.c: 38:     valueAdd
      +                          ._Byte[1] = SES_Modbus.au8Buffer[ADD_HI];
 10598     0BE3  3038               	movlw	56
 10599     0BE4  0086               	movwf	6
 10600     0BE5  3021               	movlw	33
 10601     0BE6  0087               	movwf	7
 10602     0BE7  3146               	addfsr 1,6
 10603     0BE8  0801               	movf	1,w
 10604     0BE9  00CF               	movwf	ModbusSlaveF04@valueAdd+1
 10605                           
 10606                           ;Mobbus_Slave.c: 39:     valueAdd._Byte[0] = SES_Modbus.au8Buffer[ADD_LO];
 10607     0BEA  3038               	movlw	56
 10608     0BEB  0086               	movwf	6
 10609     0BEC  3021               	movlw	33
 10610     0BED  0087               	movwf	7
 10611     0BEE  3147               	addfsr 1,7
 10612     0BEF  0801               	movf	1,w
 10613     0BF0  00CE               	movwf	ModbusSlaveF04@valueAdd
 10614     0BF1                     l3757:
 10615                           
 10616                           ;Mobbus_Slave.c: 40:     uint16_t u8StartAdd = (uint16_t) valueAdd.Val16;
 10617     0BF1  084F               	movf	ModbusSlaveF04@valueAdd+1,w
 10618     0BF2  00CB               	movwf	ModbusSlaveF04@u8StartAdd+1
 10619     0BF3  084E               	movf	ModbusSlaveF04@valueAdd,w
 10620     0BF4  00CA               	movwf	ModbusSlaveF04@u8StartAdd
 10621     0BF5                     l3759:
 10622                           
 10623                           ;Mobbus_Slave.c: 42:     valueRegsno._Byte[1] = SES_Modbus.au8Buffer[ NB_HI];
 10624     0BF5  3038               	movlw	56
 10625     0BF6  0086               	movwf	6
 10626     0BF7  3021               	movlw	33
 10627     0BF8  0087               	movwf	7
 10628     0BF9  3148               	addfsr 1,8
 10629     0BFA  0801               	movf	1,w
 10630     0BFB  00D1               	movwf	ModbusSlaveF04@valueRegsno+1
 10631     0BFC                     l3761:
 10632                           
 10633                           ;Mobbus_Slave.c: 43:     valueRegsno._Byte[0] = SES_Modbus.au8Buffer[ NB_LO];
 10634     0BFC  3038               	movlw	56
 10635     0BFD  0086               	movwf	6
 10636     0BFE  3021               	movlw	33
 10637     0BFF  0087               	movwf	7
 10638     0C00  3149               	addfsr 1,9
 10639     0C01  0801               	movf	1,w
 10640     0C02  00D0               	movwf	ModbusSlaveF04@valueRegsno
 10641     0C03                     l3763:
 10642                           
 10643                           ;Mobbus_Slave.c: 44:     uint8_t u8regsno = (uint8_t) valueRegsno.Val16;
 10644     0C03  0850               	movf	ModbusSlaveF04@valueRegsno,w
 10645     0C04  00CC               	movwf	ModbusSlaveF04@u8regsno
 10646     0C05                     l3765:
 10647                           
 10648                           ;Mobbus_Slave.c: 46:     uint8_t u8CopyBufferSize;;Mobbus_Slave.c: 47:     uint16_t i;;M
      +                          obbus_Slave.c: 49:     SES_Modbus.au8Buffer[ 2 ] = u8regsno * 2;
 10649     0C05  354C               	lslf	ModbusSlaveF04@u8regsno,w
 10650     0C06  00C0               	movwf	??_ModbusSlaveF04
 10651     0C07  303E               	movlw	62
 10652     0C08  0086               	movwf	6
 10653     0C09  3021               	movlw	33
 10654     0C0A  0087               	movwf	7
 10655     0C0B  0840               	movf	??_ModbusSlaveF04,w
 10656     0C0C  0081               	movwf	1
 10657     0C0D                     l3767:
 10658                           
 10659                           ;Mobbus_Slave.c: 50:     SES_Modbus.u8BufferSize = 3;
 10660     0C0D  30D2               	movlw	210
 10661     0C0E  0086               	movwf	6
 10662     0C0F  3021               	movlw	33
 10663     0C10  0087               	movwf	7
 10664     0C11  3003               	movlw	3
 10665     0C12  0081               	movwf	1
 10666     0C13                     l3769:
 10667                           
 10668                           ;Mobbus_Slave.c: 52:     for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++) {
 10669     0C13  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10670     0C14  00D3               	movwf	ModbusSlaveF04@i+1
 10671     0C15  084A               	movf	ModbusSlaveF04@u8StartAdd,w
 10672     0C16  00D2               	movwf	ModbusSlaveF04@i
 10673     0C17  2C70               	goto	l3775
 10674     0C18                     l3771:
 10675                           
 10676                           ;Mobbus_Slave.c: 53:         SES_Modbus.au8Buffer[SES_Modbus.u8BufferSize ] = ((uint8_t)
      +                           ((reg[i]) >> 8));
 10677     0C18  3552               	lslf	ModbusSlaveF04@i,w
 10678     0C19  074D               	addwf	ModbusSlaveF04@reg,w
 10679     0C1A  00C0               	movwf	??_ModbusSlaveF04
 10680     0C1B  0840               	movf	??_ModbusSlaveF04,w
 10681     0C1C  0086               	movwf	6
 10682     0C1D  3001               	movlw	1	; select bank2/3
 10683     0C1E  0087               	movwf	7
 10684     0C1F  3F40               	moviw [0]fsr1
 10685     0C20  00C1               	movwf	??_ModbusSlaveF04+1
 10686     0C21  3F41               	moviw [1]fsr1
 10687     0C22  00C2               	movwf	??_ModbusSlaveF04+2
 10688     0C23  0842               	movf	??_ModbusSlaveF04+2,w
 10689     0C24  00C3               	movwf	??_ModbusSlaveF04+3
 10690     0C25  30D2               	movlw	210
 10691     0C26  0086               	movwf	6
 10692     0C27  3021               	movlw	33
 10693     0C28  0087               	movwf	7
 10694     0C29  0801               	movf	1,w
 10695     0C2A  00C4               	movwf	??_ModbusSlaveF04+4
 10696     0C2B  01C5               	clrf	??_ModbusSlaveF04+5
 10697     0C2C  303C               	movlw	60
 10698     0C2D  00C6               	movwf	??_ModbusSlaveF04+6
 10699     0C2E  3021               	movlw	33
 10700     0C2F  00C7               	movwf	??_ModbusSlaveF04+7
 10701     0C30  0844               	movf	??_ModbusSlaveF04+4,w
 10702     0C31  0746               	addwf	??_ModbusSlaveF04+6,w
 10703     0C32  00C8               	movwf	??_ModbusSlaveF04+8
 10704     0C33  0845               	movf	??_ModbusSlaveF04+5,w
 10705     0C34  3D47               	addwfc	??_ModbusSlaveF04+7,w
 10706     0C35  00C9               	movwf	??_ModbusSlaveF04+9
 10707     0C36  0848               	movf	??_ModbusSlaveF04+8,w
 10708     0C37  0086               	movwf	6
 10709     0C38  0849               	movf	??_ModbusSlaveF04+9,w
 10710     0C39  0087               	movwf	7
 10711     0C3A  0843               	movf	??_ModbusSlaveF04+3,w
 10712     0C3B  0081               	movwf	1
 10713                           
 10714                           ;Mobbus_Slave.c: 54:         SES_Modbus.u8BufferSize++;
 10715     0C3C  3001               	movlw	1
 10716     0C3D  00C0               	movwf	??_ModbusSlaveF04
 10717     0C3E  30D2               	movlw	210
 10718     0C3F  0086               	movwf	6
 10719     0C40  3021               	movlw	33
 10720     0C41  0087               	movwf	7
 10721     0C42  0840               	movf	??_ModbusSlaveF04,w
 10722     0C43  0781               	addwf	1,f
 10723                           
 10724                           ;Mobbus_Slave.c: 55:         SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = ((uint8_t
      +                          ) ((reg[i]) & 0xff));
 10725     0C44  3552               	lslf	ModbusSlaveF04@i,w
 10726     0C45  074D               	addwf	ModbusSlaveF04@reg,w
 10727     0C46  00C0               	movwf	??_ModbusSlaveF04
 10728     0C47  0840               	movf	??_ModbusSlaveF04,w
 10729     0C48  0086               	movwf	6
 10730     0C49  3001               	movlw	1	; select bank2/3
 10731     0C4A  0087               	movwf	7
 10732     0C4B  0801               	movf	1,w
 10733     0C4C  00C1               	movwf	??_ModbusSlaveF04+1
 10734     0C4D  30D2               	movlw	210
 10735     0C4E  0086               	movwf	6
 10736     0C4F  3021               	movlw	33
 10737     0C50  0087               	movwf	7
 10738     0C51  0801               	movf	1,w
 10739     0C52  00C2               	movwf	??_ModbusSlaveF04+2
 10740     0C53  01C3               	clrf	??_ModbusSlaveF04+3
 10741     0C54  303C               	movlw	60
 10742     0C55  00C4               	movwf	??_ModbusSlaveF04+4
 10743     0C56  3021               	movlw	33
 10744     0C57  00C5               	movwf	??_ModbusSlaveF04+5
 10745     0C58  0842               	movf	??_ModbusSlaveF04+2,w
 10746     0C59  0744               	addwf	??_ModbusSlaveF04+4,w
 10747     0C5A  00C6               	movwf	??_ModbusSlaveF04+6
 10748     0C5B  0843               	movf	??_ModbusSlaveF04+3,w
 10749     0C5C  3D45               	addwfc	??_ModbusSlaveF04+5,w
 10750     0C5D  00C7               	movwf	??_ModbusSlaveF04+7
 10751     0C5E  0846               	movf	??_ModbusSlaveF04+6,w
 10752     0C5F  0086               	movwf	6
 10753     0C60  0847               	movf	??_ModbusSlaveF04+7,w
 10754     0C61  0087               	movwf	7
 10755     0C62  0841               	movf	??_ModbusSlaveF04+1,w
 10756     0C63  0081               	movwf	1
 10757                           
 10758                           ;Mobbus_Slave.c: 56:         SES_Modbus.u8BufferSize++;
 10759     0C64  3001               	movlw	1
 10760     0C65  00C0               	movwf	??_ModbusSlaveF04
 10761     0C66  30D2               	movlw	210
 10762     0C67  0086               	movwf	6
 10763     0C68  3021               	movlw	33
 10764     0C69  0087               	movwf	7
 10765     0C6A  0840               	movf	??_ModbusSlaveF04,w
 10766     0C6B  0781               	addwf	1,f
 10767     0C6C                     l3773:
 10768                           
 10769                           ;Mobbus_Slave.c: 57:     }
 10770     0C6C  3001               	movlw	1
 10771     0C6D  07D2               	addwf	ModbusSlaveF04@i,f
 10772     0C6E  3000               	movlw	0
 10773     0C6F  3DD3               	addwfc	ModbusSlaveF04@i+1,f
 10774     0C70                     l3775:
 10775     0C70  084C               	movf	ModbusSlaveF04@u8regsno,w
 10776     0C71  074A               	addwf	ModbusSlaveF04@u8StartAdd,w
 10777     0C72  00C0               	movwf	??_ModbusSlaveF04
 10778     0C73  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10779     0C74  1803               	skipnc
 10780     0C75  0A4B               	incf	ModbusSlaveF04@u8StartAdd+1,w
 10781     0C76  00C1               	movwf	??_ModbusSlaveF04+1
 10782     0C77  0841               	movf	??_ModbusSlaveF04+1,w
 10783     0C78  0253               	subwf	ModbusSlaveF04@i+1,w
 10784     0C79  1D03               	skipz
 10785     0C7A  2C7D               	goto	u2525
 10786     0C7B  0840               	movf	??_ModbusSlaveF04,w
 10787     0C7C  0252               	subwf	ModbusSlaveF04@i,w
 10788     0C7D                     u2525:
 10789     0C7D  1C03               	skipc
 10790     0C7E  2C80               	goto	u2521
 10791     0C7F  2C81               	goto	u2520
 10792     0C80                     u2521:
 10793     0C80  2C18               	goto	l3771
 10794     0C81                     u2520:
 10795     0C81                     l3777:
 10796     0C81                     l3779:
 10797                           
 10798                           ;Mobbus_Slave.c: 59:     Modbus_sendTxBuff();
 10799     0C81  3186  26EA  318B   	fcall	_Modbus_sendTxBuff
 10800     0C84                     l925:
 10801     0C84  0008               	return
 10802     0C85                     __end_of_ModbusSlaveF04:
 10803                           
 10804                           	psect	text48
 10805     06EA                     __ptext48:	
 10806 ;; *************** function _Modbus_sendTxBuff *****************
 10807 ;; Defined at:
 10808 ;;		line 169 in file "Mobbus_Slave.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;		None
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  u32overTimec    4   26[BANK0 ] volatile unsigned long 
 10813 ;;  index           2   24[BANK0 ] int 
 10814 ;;  u16crc          2   22[BANK0 ] unsigned short 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  1    wreg      void 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10824 ;;      Params:         0       0       0       0       0       0       0       0
 10825 ;;      Locals:         0       8       0       0       0       0       0       0
 10826 ;;      Temps:          0       7       0       0       0       0       0       0
 10827 ;;      Totals:         0      15       0       0       0       0       0       0
 10828 ;;Total ram usage:       15 bytes
 10829 ;; Hardware stack levels used: 1
 10830 ;; Hardware stack levels required when called: 8
 10831 ;; This function calls:
 10832 ;;		_EUSART_Write
 10833 ;;		_EUSART_is_tx_done
 10834 ;;		_Get_millis
 10835 ;;		_Modbus_calcCRC
 10836 ;; This function is called by:
 10837 ;;		_ModbusSlaveF04
 10838 ;;		_ModbusRTU_Slave_Poll
 10839 ;; This function uses a non-reentrant model
 10840 ;;
 10841                           
 10842     06EA                     _Modbus_sendTxBuff:	
 10843                           ;psect for function _Modbus_sendTxBuff
 10844                           
 10845     06EA                     l3635:	
 10846                           ;incstack = 0
 10847                           ; Regs used in _Modbus_sendTxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10848                           
 10849                           
 10850                           ;Mobbus_Slave.c: 170:     uint16_t u16crc = Modbus_calcCRC(SES_Modbus.u8BufferSize);
 10851     06EA  30D2               	movlw	210
 10852     06EB  0086               	movwf	6
 10853     06EC  3021               	movlw	33
 10854     06ED  0087               	movwf	7
 10855     06EE  0801               	movf	1,w
 10856     06EF  3189  2187  3186   	fcall	_Modbus_calcCRC
 10857     06F2  0020               	movlb	0	; select bank0
 10858     06F3  0821               	movf	?_Modbus_calcCRC+1,w
 10859     06F4  00B7               	movwf	Modbus_sendTxBuff@u16crc+1
 10860     06F5  0820               	movf	?_Modbus_calcCRC,w
 10861     06F6  00B6               	movwf	Modbus_sendTxBuff@u16crc
 10862     06F7                     l3637:
 10863                           
 10864                           ;Mobbus_Slave.c: 171:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc >> 8;
 10865     06F7  0837               	movf	Modbus_sendTxBuff@u16crc+1,w
 10866     06F8  00AF               	movwf	??_Modbus_sendTxBuff
 10867     06F9  30D2               	movlw	210
 10868     06FA  0086               	movwf	6
 10869     06FB  3021               	movlw	33
 10870     06FC  0087               	movwf	7
 10871     06FD  0801               	movf	1,w
 10872     06FE  00B0               	movwf	??_Modbus_sendTxBuff+1
 10873     06FF  01B1               	clrf	??_Modbus_sendTxBuff+2
 10874     0700  303C               	movlw	60
 10875     0701  00B2               	movwf	??_Modbus_sendTxBuff+3
 10876     0702  3021               	movlw	33
 10877     0703  00B3               	movwf	??_Modbus_sendTxBuff+4
 10878     0704  0830               	movf	??_Modbus_sendTxBuff+1,w
 10879     0705  0732               	addwf	??_Modbus_sendTxBuff+3,w
 10880     0706  00B4               	movwf	??_Modbus_sendTxBuff+5
 10881     0707  0831               	movf	??_Modbus_sendTxBuff+2,w
 10882     0708  3D33               	addwfc	??_Modbus_sendTxBuff+4,w
 10883     0709  00B5               	movwf	??_Modbus_sendTxBuff+6
 10884     070A  0834               	movf	??_Modbus_sendTxBuff+5,w
 10885     070B  0086               	movwf	6
 10886     070C  0835               	movf	??_Modbus_sendTxBuff+6,w
 10887     070D  0087               	movwf	7
 10888     070E  082F               	movf	??_Modbus_sendTxBuff,w
 10889     070F  0081               	movwf	1
 10890     0710                     l3639:
 10891                           
 10892                           ;Mobbus_Slave.c: 172:     SES_Modbus.u8BufferSize++;
 10893     0710  3001               	movlw	1
 10894     0711  00AF               	movwf	??_Modbus_sendTxBuff
 10895     0712  30D2               	movlw	210
 10896     0713  0086               	movwf	6
 10897     0714  3021               	movlw	33
 10898     0715  0087               	movwf	7
 10899     0716  082F               	movf	??_Modbus_sendTxBuff,w
 10900     0717  0781               	addwf	1,f
 10901     0718                     l3641:
 10902                           
 10903                           ;Mobbus_Slave.c: 173:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc & 0x0
      +                          0ff;
 10904     0718  30D2               	movlw	210
 10905     0719  0086               	movwf	6
 10906     071A  3021               	movlw	33
 10907     071B  0087               	movwf	7
 10908     071C  0801               	movf	1,w
 10909     071D  00AF               	movwf	??_Modbus_sendTxBuff
 10910     071E  01B0               	clrf	??_Modbus_sendTxBuff+1
 10911     071F  303C               	movlw	60
 10912     0720  00B1               	movwf	??_Modbus_sendTxBuff+2
 10913     0721  3021               	movlw	33
 10914     0722  00B2               	movwf	??_Modbus_sendTxBuff+3
 10915     0723  082F               	movf	??_Modbus_sendTxBuff,w
 10916     0724  0731               	addwf	??_Modbus_sendTxBuff+2,w
 10917     0725  00B3               	movwf	??_Modbus_sendTxBuff+4
 10918     0726  0830               	movf	??_Modbus_sendTxBuff+1,w
 10919     0727  3D32               	addwfc	??_Modbus_sendTxBuff+3,w
 10920     0728  00B4               	movwf	??_Modbus_sendTxBuff+5
 10921     0729  0833               	movf	??_Modbus_sendTxBuff+4,w
 10922     072A  0086               	movwf	6
 10923     072B  0834               	movf	??_Modbus_sendTxBuff+5,w
 10924     072C  0087               	movwf	7
 10925     072D  0836               	movf	Modbus_sendTxBuff@u16crc,w
 10926     072E  0081               	movwf	1
 10927     072F                     l3643:
 10928                           
 10929                           ;Mobbus_Slave.c: 174:     SES_Modbus.u8BufferSize++;
 10930     072F  3001               	movlw	1
 10931     0730  00AF               	movwf	??_Modbus_sendTxBuff
 10932     0731  30D2               	movlw	210
 10933     0732  0086               	movwf	6
 10934     0733  3021               	movlw	33
 10935     0734  0087               	movwf	7
 10936     0735  082F               	movf	??_Modbus_sendTxBuff,w
 10937     0736  0781               	addwf	1,f
 10938     0737                     l3645:
 10939                           
 10940                           ;Mobbus_Slave.c: 177:     if (SES_Modbus.u8txenpin > 1) {
 10941     0737  3038               	movlw	56
 10942     0738  0086               	movwf	6
 10943     0739  3021               	movlw	33
 10944     073A  0087               	movwf	7
 10945     073B  3141               	addfsr 1,1
 10946     073C  3002               	movlw	2
 10947     073D  0201               	subwf	1,w
 10948     073E  1C03               	skipc
 10949     073F  2F41               	goto	u2431
 10950     0740  2F42               	goto	u2430
 10951     0741                     u2431:
 10952     0741  2F44               	goto	l3647
 10953     0742                     u2430:
 10954     0742                     l959:	
 10955                           ;Mobbus_Slave.c: 178:         do { LATCbits.LATC5 = 1; } while(0);
 10956                           
 10957     0742  0022               	movlb	2	; select bank2
 10958     0743  168E               	bsf	14,5	;volatile
 10959     0744                     l3647:
 10960                           
 10961                           ;Mobbus_Slave.c: 184:     for (int index = 0; index < SES_Modbus.u8BufferSize; index++) 
      +                          {
 10962     0744  0020               	movlb	0	; select bank0
 10963     0745  01B8               	clrf	Modbus_sendTxBuff@index
 10964     0746  01B9               	clrf	Modbus_sendTxBuff@index+1
 10965     0747  2F5C               	goto	l3653
 10966     0748                     l3649:
 10967                           
 10968                           ;Mobbus_Slave.c: 185:         EUSART_Write(SES_Modbus.au8Buffer[index]);
 10969     0748  303C               	movlw	60
 10970     0749  0020               	movlb	0	; select bank0
 10971     074A  00AF               	movwf	??_Modbus_sendTxBuff
 10972     074B  3021               	movlw	33
 10973     074C  00B0               	movwf	??_Modbus_sendTxBuff+1
 10974     074D  0838               	movf	Modbus_sendTxBuff@index,w
 10975     074E  072F               	addwf	??_Modbus_sendTxBuff,w
 10976     074F  0086               	movwf	6
 10977     0750  0839               	movf	Modbus_sendTxBuff@index+1,w
 10978     0751  3D30               	addwfc	??_Modbus_sendTxBuff+1,w
 10979     0752  0087               	movwf	7
 10980     0753  0801               	movf	1,w
 10981     0754  3196  2641  3186   	fcall	_EUSART_Write
 10982     0757                     l3651:
 10983                           
 10984                           ;Mobbus_Slave.c: 186:     }
 10985     0757  3001               	movlw	1
 10986     0758  0020               	movlb	0	; select bank0
 10987     0759  07B8               	addwf	Modbus_sendTxBuff@index,f
 10988     075A  3000               	movlw	0
 10989     075B  3DB9               	addwfc	Modbus_sendTxBuff@index+1,f
 10990     075C                     l3653:
 10991     075C  30D2               	movlw	210
 10992     075D  0086               	movwf	6
 10993     075E  3021               	movlw	33
 10994     075F  0087               	movwf	7
 10995     0760  0839               	movf	Modbus_sendTxBuff@index+1,w
 10996     0761  3A80               	xorlw	128
 10997     0762  00AF               	movwf	??_Modbus_sendTxBuff
 10998     0763  3080               	movlw	128
 10999     0764  022F               	subwf	??_Modbus_sendTxBuff,w
 11000     0765  1D03               	skipz
 11001     0766  2F69               	goto	u2445
 11002     0767  0801               	movf	1,w
 11003     0768  0238               	subwf	Modbus_sendTxBuff@index,w
 11004     0769                     u2445:
 11005     0769  1C03               	skipc
 11006     076A  2F6C               	goto	u2441
 11007     076B  2F6D               	goto	u2440
 11008     076C                     u2441:
 11009     076C  2F48               	goto	l3649
 11010     076D                     u2440:
 11011     076D                     l3655:
 11012                           
 11013                           ;Mobbus_Slave.c: 188:     if (SES_Modbus.u8txenpin > 1) {
 11014     076D  3038               	movlw	56
 11015     076E  0086               	movwf	6
 11016     076F  3021               	movlw	33
 11017     0770  0087               	movwf	7
 11018     0771  3141               	addfsr 1,1
 11019     0772  3002               	movlw	2
 11020     0773  0201               	subwf	1,w
 11021     0774  1C03               	skipc
 11022     0775  2F77               	goto	u2451
 11023     0776  2F78               	goto	u2450
 11024     0777                     u2451:
 11025     0777  2FAE               	goto	l3665
 11026     0778                     u2450:
 11027     0778                     l3659:
 11028     0778  3192  227A  3186   	fcall	_EUSART_is_tx_done
 11029     077B  3A00               	xorlw	0
 11030     077C  1903               	skipnz
 11031     077D  2F7F               	goto	u2461
 11032     077E  2F80               	goto	u2460
 11033     077F                     u2461:
 11034     077F  2F78               	goto	l3659
 11035     0780                     u2460:
 11036     0780                     l3661:
 11037                           
 11038                           ;Mobbus_Slave.c: 196:         volatile uint32_t u32overTimecountDown = SES_Modbus.u32ove
      +                          rTime;
 11039     0780  30E6               	movlw	230
 11040     0781  0086               	movwf	6
 11041     0782  3021               	movlw	33
 11042     0783  0087               	movwf	7
 11043     0784  3F40               	moviw [0]fsr1
 11044     0785  0020               	movlb	0	; select bank0
 11045     0786  00BA               	movwf	Modbus_sendTxBuff@u32overTimecountDown	;volatile
 11046     0787  3F41               	moviw [1]fsr1
 11047     0788  00BB               	movwf	Modbus_sendTxBuff@u32overTimecountDown+1	;volatile
 11048     0789  3F42               	moviw [2]fsr1
 11049     078A  00BC               	movwf	Modbus_sendTxBuff@u32overTimecountDown+2	;volatile
 11050     078B  3F43               	moviw [3]fsr1
 11051     078C  00BD               	movwf	Modbus_sendTxBuff@u32overTimecountDown+3	;volatile
 11052     078D                     l3663:	
 11053                           ;Mobbus_Slave.c: 198:         while (u32overTimecountDown-- > 0);
 11054                           
 11055     078D  3001               	movlw	1
 11056     078E  0020               	movlb	0	; select bank0
 11057     078F  00AF               	movwf	??_Modbus_sendTxBuff
 11058     0790  3000               	movlw	0
 11059     0791  00B0               	movwf	??_Modbus_sendTxBuff+1
 11060     0792  3000               	movlw	0
 11061     0793  00B1               	movwf	??_Modbus_sendTxBuff+2
 11062     0794  3000               	movlw	0
 11063     0795  00B2               	movwf	??_Modbus_sendTxBuff+3
 11064     0796  082F               	movf	??_Modbus_sendTxBuff,w
 11065     0797  02BA               	subwf	Modbus_sendTxBuff@u32overTimecountDown,f	;volatile
 11066     0798  0830               	movf	??_Modbus_sendTxBuff+1,w
 11067     0799  3BBB               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+1,f	;volatile
 11068     079A  0831               	movf	??_Modbus_sendTxBuff+2,w
 11069     079B  3BBC               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+2,f	;volatile
 11070     079C  0832               	movf	??_Modbus_sendTxBuff+3,w
 11071     079D  3BBD               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+3,f	;volatile
 11072     079E  0A3A               	incf	Modbus_sendTxBuff@u32overTimecountDown,w	;volatile
 11073     079F  1D03               	skipz
 11074     07A0  2FAB               	goto	u2471
 11075     07A1  0A3B               	incf	Modbus_sendTxBuff@u32overTimecountDown+1,w	;volatile
 11076     07A2  1D03               	skipz
 11077     07A3  2FAB               	goto	u2471
 11078     07A4  0A3C               	incf	Modbus_sendTxBuff@u32overTimecountDown+2,w	;volatile
 11079     07A5  1D03               	skipz
 11080     07A6  2FAB               	goto	u2471
 11081     07A7  0A3D               	incf	Modbus_sendTxBuff@u32overTimecountDown+3,w	;volatile
 11082     07A8  1D03               	btfss	3,2
 11083     07A9  2FAB               	goto	u2471
 11084     07AA  2FAC               	goto	u2470
 11085     07AB                     u2471:
 11086     07AB  2F8D               	goto	l3663
 11087     07AC                     u2470:
 11088     07AC                     l971:	
 11089                           ;Mobbus_Slave.c: 199:         do { LATCbits.LATC5 = 0; } while(0);
 11090                           
 11091     07AC  0022               	movlb	2	; select bank2
 11092     07AD  128E               	bcf	14,5	;volatile
 11093     07AE                     l3665:
 11094                           
 11095                           ;Mobbus_Slave.c: 202:     SES_Modbus.u8BufferSize = 0;
 11096     07AE  30D2               	movlw	210
 11097     07AF  0086               	movwf	6
 11098     07B0  3021               	movlw	33
 11099     07B1  0087               	movwf	7
 11100     07B2  0181               	clrf	1
 11101     07B3                     l3667:
 11102                           
 11103                           ;Mobbus_Slave.c: 205:     SES_Modbus.u32timeOut = Get_millis();
 11104     07B3  3193  23CE  3186   	fcall	_Get_millis
 11105     07B6  30E2               	movlw	226
 11106     07B7  0086               	movwf	6
 11107     07B8  3021               	movlw	33
 11108     07B9  0087               	movwf	7
 11109     07BA  0020               	movlb	0	; select bank0
 11110     07BB  0820               	movf	?_Get_millis,w
 11111     07BC  3FC0               	movwi [0]fsr1
 11112     07BD  0821               	movf	?_Get_millis+1,w
 11113     07BE  3FC1               	movwi [1]fsr1
 11114     07BF  0822               	movf	?_Get_millis+2,w
 11115     07C0  3FC2               	movwi [2]fsr1
 11116     07C1  0823               	movf	?_Get_millis+3,w
 11117     07C2  3FC3               	movwi [3]fsr1
 11118     07C3                     l3669:
 11119                           
 11120                           ;Mobbus_Slave.c: 208:     SES_Modbus.u16OutCnt++;
 11121     07C3  30D8               	movlw	216
 11122     07C4  0086               	movwf	6
 11123     07C5  3021               	movlw	33
 11124     07C6  0087               	movwf	7
 11125     07C7  3001               	movlw	1
 11126     07C8  0781               	addwf	1,f
 11127     07C9  3141               	addfsr 1,1
 11128     07CA  1803               	skipnc
 11129     07CB  0A81               	incf	1,f
 11130     07CC                     l973:
 11131     07CC  0008               	return
 11132     07CD                     __end_of_Modbus_sendTxBuff:
 11133                           
 11134                           	psect	text49
 11135     0987                     __ptext49:	
 11136 ;; *************** function _Modbus_calcCRC *****************
 11137 ;; Defined at:
 11138 ;;		line 211 in file "Mobbus_Slave.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  len             1    wreg     unsigned char 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  len             1   10[BANK0 ] unsigned char 
 11143 ;;  j               1   12[BANK0 ] unsigned char 
 11144 ;;  temp            2   13[BANK0 ] unsigned int 
 11145 ;;  flag            2    8[BANK0 ] unsigned int 
 11146 ;;  temp2           2    6[BANK0 ] unsigned int 
 11147 ;;  i               1   11[BANK0 ] unsigned char 
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  2    0[BANK0 ] unsigned short 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11157 ;;      Params:         0       2       0       0       0       0       0       0
 11158 ;;      Locals:         0       9       0       0       0       0       0       0
 11159 ;;      Temps:          0       4       0       0       0       0       0       0
 11160 ;;      Totals:         0      15       0       0       0       0       0       0
 11161 ;;Total ram usage:       15 bytes
 11162 ;; Hardware stack levels used: 1
 11163 ;; Hardware stack levels required when called: 7
 11164 ;; This function calls:
 11165 ;;		Nothing
 11166 ;; This function is called by:
 11167 ;;		_validateRequest
 11168 ;;		_Modbus_sendTxBuff
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172     0987                     _Modbus_calcCRC:	
 11173                           ;psect for function _Modbus_calcCRC
 11174                           
 11175                           
 11176                           ;incstack = 0
 11177                           ; Regs used in _Modbus_calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 11178                           ;Modbus_calcCRC@len stored from wreg
 11179     0987  0020               	movlb	0	; select bank0
 11180     0988  00AA               	movwf	Modbus_calcCRC@len
 11181     0989                     l3529:
 11182                           
 11183                           ;Mobbus_Slave.c: 212:     unsigned int temp, temp2, flag;;Mobbus_Slave.c: 213:     temp 
      +                          = 0xFFFF;
 11184     0989  30FF               	movlw	255
 11185     098A  00AD               	movwf	Modbus_calcCRC@temp
 11186     098B  30FF               	movlw	255
 11187     098C  00AE               	movwf	Modbus_calcCRC@temp+1
 11188     098D                     l3531:
 11189                           
 11190                           ;Mobbus_Slave.c: 214:     unsigned char i = 0;
 11191     098D  01AB               	clrf	Modbus_calcCRC@i
 11192                           
 11193                           ;Mobbus_Slave.c: 215:     for (i = 0; i < len; i++) {
 11194     098E  01AB               	clrf	Modbus_calcCRC@i
 11195     098F  29C7               	goto	l3557
 11196     0990                     l3533:
 11197                           
 11198                           ;Mobbus_Slave.c: 216:         temp = temp ^ SES_Modbus.au8Buffer[i];
 11199     0990  082B               	movf	Modbus_calcCRC@i,w
 11200     0991  00A2               	movwf	??_Modbus_calcCRC
 11201     0992  01A3               	clrf	??_Modbus_calcCRC+1
 11202     0993  303C               	movlw	60
 11203     0994  00A4               	movwf	??_Modbus_calcCRC+2
 11204     0995  3021               	movlw	33
 11205     0996  00A5               	movwf	??_Modbus_calcCRC+3
 11206     0997  0822               	movf	??_Modbus_calcCRC,w
 11207     0998  0724               	addwf	??_Modbus_calcCRC+2,w
 11208     0999  0086               	movwf	6
 11209     099A  0823               	movf	??_Modbus_calcCRC+1,w
 11210     099B  3D25               	addwfc	??_Modbus_calcCRC+3,w
 11211     099C  0087               	movwf	7
 11212     099D  082D               	movf	Modbus_calcCRC@temp,w
 11213     099E  0601               	xorwf	1,w
 11214     099F  00AD               	movwf	Modbus_calcCRC@temp
 11215     09A0  082E               	movf	Modbus_calcCRC@temp+1,w
 11216     09A1  00AE               	movwf	Modbus_calcCRC@temp+1
 11217     09A2                     l3535:
 11218     09A2                     l3537:
 11219                           
 11220                           ;Mobbus_Slave.c: 218:         for (j = 1; j <= 8; j++) {
 11221     09A2  01AC               	clrf	Modbus_calcCRC@j
 11222     09A3  0AAC               	incf	Modbus_calcCRC@j,f
 11223     09A4                     l3543:
 11224                           
 11225                           ;Mobbus_Slave.c: 219:             flag = temp & 0x0001;
 11226     09A4  3001               	movlw	1
 11227     09A5  052D               	andwf	Modbus_calcCRC@temp,w
 11228     09A6  00A8               	movwf	Modbus_calcCRC@flag
 11229     09A7  3000               	movlw	0
 11230     09A8  052E               	andwf	Modbus_calcCRC@temp+1,w
 11231     09A9  00A9               	movwf	Modbus_calcCRC@flag+1
 11232     09AA                     l3545:
 11233                           
 11234                           ;Mobbus_Slave.c: 220:             temp >>= 1;
 11235     09AA  3001               	movlw	1
 11236     09AB                     u2335:
 11237     09AB  36AE               	lsrf	Modbus_calcCRC@temp+1,f
 11238     09AC  0CAD               	rrf	Modbus_calcCRC@temp,f
 11239     09AD  0B89               	decfsz	9,f
 11240     09AE  29AB               	goto	u2335
 11241     09AF                     l3547:
 11242                           
 11243                           ;Mobbus_Slave.c: 221:             if (flag)
 11244     09AF  0828               	movf	Modbus_calcCRC@flag,w
 11245     09B0  0429               	iorwf	Modbus_calcCRC@flag+1,w
 11246     09B1  1903               	btfsc	3,2
 11247     09B2  29B4               	goto	u2341
 11248     09B3  29B5               	goto	u2340
 11249     09B4                     u2341:
 11250     09B4  29B9               	goto	l3551
 11251     09B5                     u2340:
 11252     09B5                     l3549:
 11253                           
 11254                           ;Mobbus_Slave.c: 222:                 temp ^= 0xA001;
 11255     09B5  3001               	movlw	1
 11256     09B6  06AD               	xorwf	Modbus_calcCRC@temp,f
 11257     09B7  30A0               	movlw	160
 11258     09B8  06AE               	xorwf	Modbus_calcCRC@temp+1,f
 11259     09B9                     l3551:
 11260                           
 11261                           ;Mobbus_Slave.c: 223:         }
 11262     09B9  3001               	movlw	1
 11263     09BA  00A2               	movwf	??_Modbus_calcCRC
 11264     09BB  0822               	movf	??_Modbus_calcCRC,w
 11265     09BC  07AC               	addwf	Modbus_calcCRC@j,f
 11266     09BD                     l3553:
 11267     09BD  3009               	movlw	9
 11268     09BE  022C               	subwf	Modbus_calcCRC@j,w
 11269     09BF  1C03               	skipc
 11270     09C0  29C2               	goto	u2351
 11271     09C1  29C3               	goto	u2350
 11272     09C2                     u2351:
 11273     09C2  29A4               	goto	l3543
 11274     09C3                     u2350:
 11275     09C3                     l3555:
 11276                           
 11277                           ;Mobbus_Slave.c: 224:     }
 11278     09C3  3001               	movlw	1
 11279     09C4  00A2               	movwf	??_Modbus_calcCRC
 11280     09C5  0822               	movf	??_Modbus_calcCRC,w
 11281     09C6  07AB               	addwf	Modbus_calcCRC@i,f
 11282     09C7                     l3557:
 11283     09C7  082A               	movf	Modbus_calcCRC@len,w
 11284     09C8  022B               	subwf	Modbus_calcCRC@i,w
 11285     09C9  1C03               	skipc
 11286     09CA  29CC               	goto	u2361
 11287     09CB  29CD               	goto	u2360
 11288     09CC                     u2361:
 11289     09CC  2990               	goto	l3533
 11290     09CD                     u2360:
 11291     09CD                     l3559:
 11292                           
 11293                           ;Mobbus_Slave.c: 226:     temp2 = temp >> 8;
 11294     09CD  082E               	movf	Modbus_calcCRC@temp+1,w
 11295     09CE  00A3               	movwf	??_Modbus_calcCRC+1
 11296     09CF  082D               	movf	Modbus_calcCRC@temp,w
 11297     09D0  00A2               	movwf	??_Modbus_calcCRC
 11298     09D1  0823               	movf	??_Modbus_calcCRC+1,w
 11299     09D2  00A2               	movwf	??_Modbus_calcCRC
 11300     09D3  01A3               	clrf	??_Modbus_calcCRC+1
 11301     09D4  0822               	movf	??_Modbus_calcCRC,w
 11302     09D5  00A6               	movwf	Modbus_calcCRC@temp2
 11303     09D6  0823               	movf	??_Modbus_calcCRC+1,w
 11304     09D7  00A7               	movwf	Modbus_calcCRC@temp2+1
 11305     09D8                     l3561:
 11306                           
 11307                           ;Mobbus_Slave.c: 227:     temp = (temp << 8) | temp2;
 11308     09D8  082D               	movf	Modbus_calcCRC@temp,w
 11309     09D9  00A3               	movwf	??_Modbus_calcCRC+1
 11310     09DA  01A2               	clrf	??_Modbus_calcCRC
 11311     09DB  0826               	movf	Modbus_calcCRC@temp2,w
 11312     09DC  0422               	iorwf	??_Modbus_calcCRC,w
 11313     09DD  00AD               	movwf	Modbus_calcCRC@temp
 11314     09DE  0827               	movf	Modbus_calcCRC@temp2+1,w
 11315     09DF  0423               	iorwf	??_Modbus_calcCRC+1,w
 11316     09E0  00AE               	movwf	Modbus_calcCRC@temp+1
 11317     09E1                     l3563:
 11318                           
 11319                           ;Mobbus_Slave.c: 231:     return temp;
 11320     09E1  082E               	movf	Modbus_calcCRC@temp+1,w
 11321     09E2  00A1               	movwf	?_Modbus_calcCRC+1
 11322     09E3  082D               	movf	Modbus_calcCRC@temp,w
 11323     09E4  00A0               	movwf	?_Modbus_calcCRC
 11324     09E5                     l982:
 11325     09E5  0008               	return
 11326     09E6                     __end_of_Modbus_calcCRC:
 11327                           
 11328                           	psect	text50
 11329     13CE                     __ptext50:	
 11330 ;; *************** function _Get_millis *****************
 11331 ;; Defined at:
 11332 ;;		line 15 in file "tick.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;		None
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;		None
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  4    0[BANK0 ] unsigned long 
 11339 ;; Registers used:
 11340 ;;		wreg
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11346 ;;      Params:         0       4       0       0       0       0       0       0
 11347 ;;      Locals:         0       0       0       0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0
 11349 ;;      Totals:         0       4       0       0       0       0       0       0
 11350 ;;Total ram usage:        4 bytes
 11351 ;; Hardware stack levels used: 1
 11352 ;; Hardware stack levels required when called: 7
 11353 ;; This function calls:
 11354 ;;		Nothing
 11355 ;; This function is called by:
 11356 ;;		_Task_Sensor
 11357 ;;		_ModbusRTU_Slave_Poll
 11358 ;;		_Modbus_sendTxBuff
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362     13CE                     _Get_millis:	
 11363                           ;psect for function _Get_millis
 11364                           
 11365     13CE                     l3525:	
 11366                           ;incstack = 0
 11367                           ; Regs used in _Get_millis: [wreg]
 11368                           
 11369                           
 11370                           ;tick.c: 16:     return device_time;
 11371     13CE  0021               	movlb	1	; select bank1
 11372     13CF  085A               	movf	(_device_time+3)^(0+128),w	;volatile
 11373     13D0  0020               	movlb	0	; select bank0
 11374     13D1  00A3               	movwf	?_Get_millis+3
 11375     13D2  0021               	movlb	1	; select bank1
 11376     13D3  0859               	movf	(_device_time+2)^(0+128),w	;volatile
 11377     13D4  0020               	movlb	0	; select bank0
 11378     13D5  00A2               	movwf	?_Get_millis+2
 11379     13D6  0021               	movlb	1	; select bank1
 11380     13D7  0858               	movf	(_device_time+1)^(0+128),w	;volatile
 11381     13D8  0020               	movlb	0	; select bank0
 11382     13D9  00A1               	movwf	?_Get_millis+1
 11383     13DA  0021               	movlb	1	; select bank1
 11384     13DB  0857               	movf	_device_time^(0+128),w	;volatile
 11385     13DC  0020               	movlb	0	; select bank0
 11386     13DD  00A0               	movwf	?_Get_millis
 11387     13DE                     l1018:
 11388     13DE  0008               	return
 11389     13DF                     __end_of_Get_millis:
 11390                           
 11391                           	psect	text51
 11392     127A                     __ptext51:	
 11393 ;; *************** function _EUSART_is_tx_done *****************
 11394 ;; Defined at:
 11395 ;;		line 142 in file "mcc_generated_files/eusart.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      _Bool 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2, status,0
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11409 ;;      Params:         0       0       0       0       0       0       0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0
 11412 ;;      Totals:         0       0       0       0       0       0       0       0
 11413 ;;Total ram usage:        0 bytes
 11414 ;; Hardware stack levels used: 1
 11415 ;; Hardware stack levels required when called: 7
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_Modbus_sendTxBuff
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423     127A                     _EUSART_is_tx_done:	
 11424                           ;psect for function _EUSART_is_tx_done
 11425                           
 11426     127A                     l3501:	
 11427                           ;incstack = 0
 11428                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
 11429                           
 11430                           
 11431                           ;mcc_generated_files/eusart.c: 144:     return TXSTAbits.TRMT;
 11432     127A  0023               	movlb	3	; select bank3
 11433     127B  0C1E               	rrf	30,w	;volatile
 11434     127C  3901               	andlw	1
 11435     127D                     l293:
 11436     127D  0008               	return
 11437     127E                     __end_of_EUSART_is_tx_done:
 11438                           
 11439                           	psect	text52
 11440     1641                     __ptext52:	
 11441 ;; *************** function _EUSART_Write *****************
 11442 ;; Defined at:
 11443 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  txData          1    wreg     unsigned char 
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;  txData          1    1[BANK0 ] unsigned char 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11457 ;;      Params:         0       0       0       0       0       0       0       0
 11458 ;;      Locals:         0       1       0       0       0       0       0       0
 11459 ;;      Temps:          0       1       0       0       0       0       0       0
 11460 ;;      Totals:         0       2       0       0       0       0       0       0
 11461 ;;Total ram usage:        2 bytes
 11462 ;; Hardware stack levels used: 1
 11463 ;; Hardware stack levels required when called: 7
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_Modbus_sendTxBuff
 11468 ;;		_putch
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472     1641                     _EUSART_Write:	
 11473                           ;psect for function _EUSART_Write
 11474                           
 11475                           
 11476                           ;incstack = 0
 11477                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11478                           ;EUSART_Write@txData stored from wreg
 11479     1641  0020               	movlb	0	; select bank0
 11480     1642  00A1               	movwf	EUSART_Write@txData
 11481     1643                     l3505:
 11482     1643                     l3507:	
 11483                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11484                           
 11485                           
 11486                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11487     1643  086D               	movf	_eusartTxBufferRemaining,w	;volatile
 11488     1644  1903               	btfsc	3,2
 11489     1645  2E47               	goto	u2301
 11490     1646  2E48               	goto	u2300
 11491     1647                     u2301:
 11492     1647  2E43               	goto	l3507
 11493     1648                     u2300:
 11494     1648                     l308:
 11495                           
 11496                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 11497     1648  0021               	movlb	1	; select bank1
 11498     1649  1A11               	btfsc	17,4	;volatile
 11499     164A  2E4C               	goto	u2311
 11500     164B  2E4D               	goto	u2310
 11501     164C                     u2311:
 11502     164C  2E52               	goto	l309
 11503     164D                     u2310:
 11504     164D                     l3509:
 11505                           
 11506                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
 11507     164D  0020               	movlb	0	; select bank0
 11508     164E  0821               	movf	EUSART_Write@txData,w
 11509     164F  0023               	movlb	3	; select bank3
 11510     1650  009A               	movwf	26	;volatile
 11511                           
 11512                           ;mcc_generated_files/eusart.c: 182:     }
 11513     1651  2E68               	goto	l3521
 11514     1652                     l309:	
 11515                           ;mcc_generated_files/eusart.c: 183:     else
 11516                           
 11517                           
 11518                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 11519     1652  1211               	bcf	17,4	;volatile
 11520     1653                     l3511:
 11521                           
 11522                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11523     1653  0020               	movlb	0	; select bank0
 11524     1654  086F               	movf	_eusartTxHead,w
 11525     1655  3E4E               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11526     1656  0086               	movwf	6
 11527     1657  3001               	movlw	1	; select bank2/3
 11528     1658  0087               	movwf	7
 11529     1659  0821               	movf	EUSART_Write@txData,w
 11530     165A  0081               	movwf	1
 11531     165B                     l3513:
 11532     165B  3001               	movlw	1
 11533     165C  00A0               	movwf	??_EUSART_Write
 11534     165D  0820               	movf	??_EUSART_Write,w
 11535     165E  07EF               	addwf	_eusartTxHead,f	;volatile
 11536     165F                     l3515:
 11537                           
 11538                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11539     165F  3008               	movlw	8
 11540     1660  026F               	subwf	_eusartTxHead,w	;volatile
 11541     1661  1C03               	skipc
 11542     1662  2E64               	goto	u2321
 11543     1663  2E65               	goto	u2320
 11544     1664                     u2321:
 11545     1664  2E66               	goto	l3519
 11546     1665                     u2320:
 11547     1665                     l3517:
 11548                           
 11549                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11550     1665  01EF               	clrf	_eusartTxHead	;volatile
 11551     1666                     l3519:
 11552                           
 11553                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11554     1666  3001               	movlw	1
 11555     1667  02ED               	subwf	_eusartTxBufferRemaining,f	;volatile
 11556     1668                     l3521:
 11557                           
 11558                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 11559     1668  0021               	movlb	1	; select bank1
 11560     1669  1611               	bsf	17,4	;volatile
 11561     166A                     l312:
 11562     166A  0008               	return
 11563     166B                     __end_of_EUSART_Write:
 11564                           
 11565                           	psect	text53
 11566     0885                     __ptext53:	
 11567 ;; *************** function _ModbusSlave_Init *****************
 11568 ;; Defined at:
 11569 ;;		line 234 in file "Mobbus_Slave.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  _SW_Ad          1    wreg     unsigned char 
 11572 ;; Auto vars:     Size  Location     Type
 11573 ;;  _SW_Ad          1    0[BANK0 ] unsigned char 
 11574 ;; Return value:  Size  Location     Type
 11575 ;;                  1    wreg      void 
 11576 ;; Registers used:
 11577 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11578 ;; Tracked objects:
 11579 ;;		On entry : 0/0
 11580 ;;		On exit  : 0/0
 11581 ;;		Unchanged: 0/0
 11582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11583 ;;      Params:         0       0       0       0       0       0       0       0
 11584 ;;      Locals:         0       1       0       0       0       0       0       0
 11585 ;;      Temps:          0       0       0       0       0       0       0       0
 11586 ;;      Totals:         0       1       0       0       0       0       0       0
 11587 ;;Total ram usage:        1 bytes
 11588 ;; Hardware stack levels used: 1
 11589 ;; Hardware stack levels required when called: 7
 11590 ;; This function calls:
 11591 ;;		Nothing
 11592 ;; This function is called by:
 11593 ;;		_Task_MB
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597     0885                     _ModbusSlave_Init:	
 11598                           ;psect for function _ModbusSlave_Init
 11599                           
 11600                           
 11601                           ;incstack = 0
 11602                           ; Regs used in _ModbusSlave_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11603                           ;ModbusSlave_Init@_SW_Ad stored from wreg
 11604     0885  0020               	movlb	0	; select bank0
 11605     0886  00A0               	movwf	ModbusSlave_Init@_SW_Ad
 11606     0887                     l4825:
 11607                           
 11608                           ;Mobbus_Slave.c: 235:     SES_Modbus.u8id = (uint8_t) _SW_Ad;
 11609     0887  3038               	movlw	56
 11610     0888  0086               	movwf	6
 11611     0889  3021               	movlw	33
 11612     088A  0087               	movwf	7
 11613     088B  0820               	movf	ModbusSlave_Init@_SW_Ad,w
 11614     088C  3FC0               	movwi [0]fsr1
 11615                           
 11616                           ;Mobbus_Slave.c: 236:     SES_Modbus.u8txenpin = RS485;
 11617     088D  3039               	movlw	57
 11618     088E  0086               	movwf	6
 11619     088F  3021               	movlw	33
 11620     0890  0087               	movwf	7
 11621     0891  3002               	movlw	2
 11622     0892  0081               	movwf	1
 11623     0893                     l4827:
 11624                           
 11625                           ;Mobbus_Slave.c: 237:     SES_Modbus.u16timeOut = 1000;
 11626     0893  30DC               	movlw	220
 11627     0894  0086               	movwf	6
 11628     0895  3021               	movlw	33
 11629     0896  0087               	movwf	7
 11630     0897  30E8               	movlw	232
 11631     0898  3FC0               	movwi [0]fsr1
 11632     0899  3003               	movlw	3
 11633     089A  3FC1               	movwi [1]fsr1
 11634     089B                     l4829:
 11635                           
 11636                           ;Mobbus_Slave.c: 238:     SES_Modbus.u32overTime = 0;
 11637     089B  30E6               	movlw	230
 11638     089C  0086               	movwf	6
 11639     089D  3021               	movlw	33
 11640     089E  0087               	movwf	7
 11641     089F  3000               	movlw	0
 11642     08A0  3FC0               	movwi [0]fsr1
 11643     08A1  3FC1               	movwi [1]fsr1
 11644     08A2  3FC2               	movwi [2]fsr1
 11645     08A3  3FC3               	movwi [3]fsr1
 11646                           
 11647                           ;Mobbus_Slave.c: 240:     if (SES_Modbus.u8txenpin > 1) do { LATCbits.LATC5 = 0; } while
      +                          (0);
 11648     08A4  3038               	movlw	56
 11649     08A5  0086               	movwf	6
 11650     08A6  3021               	movlw	33
 11651     08A7  0087               	movwf	7
 11652     08A8  3141               	addfsr 1,1
 11653     08A9  3002               	movlw	2
 11654     08AA  0201               	subwf	1,w
 11655     08AB  1C03               	skipc
 11656     08AC  28AE               	goto	u4031
 11657     08AD  28AF               	goto	u4030
 11658     08AE                     u4031:
 11659     08AE  28B2               	goto	l989
 11660     08AF                     u4030:
 11661     08AF                     l986:
 11662     08AF  0022               	movlb	2	; select bank2
 11663     08B0  128E               	bcf	14,5	;volatile
 11664     08B1  28B4               	goto	l4831
 11665     08B2                     l989:
 11666     08B2  0022               	movlb	2	; select bank2
 11667     08B3  168E               	bsf	14,5	;volatile
 11668     08B4                     l4831:
 11669                           
 11670                           ;Mobbus_Slave.c: 243:     SES_Modbus.u8lastRec = SES_Modbus.u8BufferSize = 0;
 11671     08B4  30D2               	movlw	210
 11672     08B5  0086               	movwf	6
 11673     08B6  3021               	movlw	33
 11674     08B7  0087               	movwf	7
 11675     08B8  0181               	clrf	1
 11676     08B9  30D3               	movlw	211
 11677     08BA  0086               	movwf	6
 11678     08BB  3021               	movlw	33
 11679     08BC  0087               	movwf	7
 11680     08BD  0181               	clrf	1
 11681                           
 11682                           ;Mobbus_Slave.c: 244:     SES_Modbus.u16InCnt = SES_Modbus.u16OutCnt = SES_Modbus.u16err
      +                          Cnt = 0;
 11683     08BE  30DA               	movlw	218
 11684     08BF  0086               	movwf	6
 11685     08C0  3021               	movlw	33
 11686     08C1  0087               	movwf	7
 11687     08C2  3000               	movlw	0
 11688     08C3  3FC0               	movwi [0]fsr1
 11689     08C4  3FC1               	movwi [1]fsr1
 11690     08C5  30D8               	movlw	216
 11691     08C6  0086               	movwf	6
 11692     08C7  3021               	movlw	33
 11693     08C8  0087               	movwf	7
 11694     08C9  3000               	movlw	0
 11695     08CA  3FC0               	movwi [0]fsr1
 11696     08CB  3FC1               	movwi [1]fsr1
 11697     08CC  30D6               	movlw	214
 11698     08CD  0086               	movwf	6
 11699     08CE  3021               	movlw	33
 11700     08CF  0087               	movwf	7
 11701     08D0  3000               	movlw	0
 11702     08D1  3FC0               	movwi [0]fsr1
 11703     08D2  3FC1               	movwi [1]fsr1
 11704     08D3                     l991:
 11705     08D3  0008               	return
 11706     08D4                     __end_of_ModbusSlave_Init:
 11707                           
 11708                           	psect	text54
 11709     07CD                     __ptext54:	
 11710 ;; *************** function _Task_Indicator *****************
 11711 ;; Defined at:
 11712 ;;		line 7 in file "MCU.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;		None
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;		None
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11726 ;;      Params:         0       0       0       0       0       0       0       0
 11727 ;;      Locals:         0       0       0       0       0       0       0       0
 11728 ;;      Temps:          0       2       0       0       0       0       0       0
 11729 ;;      Totals:         0       2       0       0       0       0       0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used: 1
 11732 ;; Hardware stack levels required when called: 7
 11733 ;; This function calls:
 11734 ;;		Nothing
 11735 ;; This function is called by:
 11736 ;;		_App_Process
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740     07CD                     _Task_Indicator:	
 11741                           ;psect for function _Task_Indicator
 11742                           
 11743     07CD                     l4979:	
 11744                           ;incstack = 0
 11745                           ; Regs used in _Task_Indicator: [wreg-fsr0h+status,2+status,0]
 11746                           
 11747                           
 11748                           ;MCU.c: 8:     switch (f_Indicator) {
 11749     07CD  2FE4               	goto	l4987
 11750     07CE                     l858:	
 11751                           ;MCU.c: 10:         {;MCU.c: 11:             do { LATCbits.LATC1 = 1; } while(0);
 11752                           
 11753     07CE  0022               	movlb	2	; select bank2
 11754     07CF  148E               	bsf	14,1	;volatile
 11755     07D0                     l860:	
 11756                           ;MCU.c: 12:             do { LATCbits.LATC0 = 1; } while(0);
 11757                           
 11758     07D0  140E               	bsf	14,0	;volatile
 11759     07D1  2FFB               	goto	l873
 11760     07D2                     l4981:
 11761     07D2  1003               	clrc
 11762     07D3  0022               	movlb	2	; select bank2
 11763     07D4  1C8E               	btfss	14,1	;volatile
 11764     07D5  1403               	setc
 11765     07D6  1803               	btfsc	3,0
 11766     07D7  2FD9               	goto	u4121
 11767     07D8  2FDC               	goto	u4120
 11768     07D9                     u4121:
 11769     07D9  0022               	movlb	2	; select bank2
 11770     07DA  148E               	bsf	14,1	;volatile
 11771     07DB  2FDE               	goto	u4134
 11772     07DC                     u4120:
 11773     07DC  0022               	movlb	2	; select bank2
 11774     07DD  108E               	bcf	14,1	;volatile
 11775     07DE                     u4134:
 11776     07DE                     l4983:
 11777     07DE  140E               	bsf	14,0	;volatile
 11778     07DF  2FFB               	goto	l873
 11779     07E0                     l869:	
 11780                           ;MCU.c: 22:         {;MCU.c: 23:             do { LATCbits.LATC1 = 1; } while(0);
 11781                           
 11782     07E0  0022               	movlb	2	; select bank2
 11783     07E1  148E               	bsf	14,1	;volatile
 11784     07E2                     l871:	
 11785                           ;MCU.c: 24:             do { LATCbits.LATC0 = 0; } while(0);
 11786                           
 11787     07E2  100E               	bcf	14,0	;volatile
 11788     07E3  2FFB               	goto	l873
 11789     07E4                     l4987:
 11790     07E4  0021               	movlb	1	; select bank1
 11791     07E5  086E               	movf	_f_Indicator^(0+128),w
 11792     07E6  0020               	movlb	0	; select bank0
 11793     07E7  00A0               	movwf	??_Task_Indicator
 11794     07E8  01A1               	clrf	??_Task_Indicator+1
 11795     07E9  1BA0               	btfsc	??_Task_Indicator,7
 11796     07EA  03A1               	decf	??_Task_Indicator+1,f
 11797                           
 11798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11799                           ; Switch size 1, requested type "simple"
 11800                           ; Number of cases is 1, Range of values is 0 to 0
 11801                           ; switch strategies available:
 11802                           ; Name         Instructions Cycles
 11803                           ; simple_byte            4     3 (average)
 11804                           ; direct_byte            8     6 (fixed)
 11805                           ; jumptable            260     6 (fixed)
 11806                           ;	Chosen strategy is simple_byte
 11807     07EB  0821               	movf	??_Task_Indicator+1,w
 11808     07EC  3A00               	xorlw	0	; case 0
 11809     07ED  1903               	skipnz
 11810     07EE  2FF0               	goto	l5897
 11811     07EF  2FFB               	goto	l873
 11812     07F0                     l5897:
 11813                           
 11814                           ; Switch size 1, requested type "simple"
 11815                           ; Number of cases is 3, Range of values is 0 to 2
 11816                           ; switch strategies available:
 11817                           ; Name         Instructions Cycles
 11818                           ; simple_byte           10     6 (average)
 11819                           ; direct_byte           12     6 (fixed)
 11820                           ; jumptable            260     6 (fixed)
 11821                           ;	Chosen strategy is simple_byte
 11822     07F0  0820               	movf	??_Task_Indicator,w
 11823     07F1  3A00               	xorlw	0	; case 0
 11824     07F2  1903               	skipnz
 11825     07F3  2FCE               	goto	l858
 11826     07F4  3A01               	xorlw	1	; case 1
 11827     07F5  1903               	skipnz
 11828     07F6  2FD2               	goto	l4981
 11829     07F7  3A03               	xorlw	3	; case 2
 11830     07F8  1903               	skipnz
 11831     07F9  2FE0               	goto	l869
 11832     07FA  2FFB               	goto	l873
 11833     07FB                     l873:
 11834     07FB  0008               	return
 11835     07FC                     __end_of_Task_Indicator:
 11836                           
 11837                           	psect	text55
 11838     132A                     __ptext55:	
 11839 ;; *************** function _App_Init *****************
 11840 ;; Defined at:
 11841 ;;		line 54 in file "MCU.c"
 11842 ;; Parameters:    Size  Location     Type
 11843 ;;		None
 11844 ;; Auto vars:     Size  Location     Type
 11845 ;;		None
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1    wreg      void 
 11848 ;; Registers used:
 11849 ;;		wreg, status,2, status,0, pclath, cstack
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11855 ;;      Params:         0       0       0       0       0       0       0       0
 11856 ;;      Locals:         0       0       0       0       0       0       0       0
 11857 ;;      Temps:          0       0       0       0       0       0       0       0
 11858 ;;      Totals:         0       0       0       0       0       0       0       0
 11859 ;;Total ram usage:        0 bytes
 11860 ;; Hardware stack levels used: 1
 11861 ;; Hardware stack levels required when called: 9
 11862 ;; This function calls:
 11863 ;;		_Device_Init
 11864 ;;		_TMR1_StartTimer
 11865 ;;		_Tick_Init_SES
 11866 ;; This function is called by:
 11867 ;;		_main
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871     132A                     _App_Init:	
 11872                           ;psect for function _App_Init
 11873                           
 11874     132A                     l5087:	
 11875                           ;incstack = 0
 11876                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
 11877                           
 11878                           
 11879                           ;MCU.c: 55:     Device_Init();
 11880     132A  3189  21E6  3193   	fcall	_Device_Init
 11881     132D                     l5089:
 11882                           
 11883                           ;MCU.c: 56:     TMR1_StartTimer();
 11884     132D  3192  2254  3193   	fcall	_TMR1_StartTimer
 11885     1330                     l5091:
 11886                           
 11887                           ;MCU.c: 57:     Tick_Init_SES();
 11888     1330  3193  23DF  3193   	fcall	_Tick_Init_SES
 11889     1333                     l886:
 11890     1333  0008               	return
 11891     1334                     __end_of_App_Init:
 11892                           
 11893                           	psect	text56
 11894     13DF                     __ptext56:	
 11895 ;; *************** function _Tick_Init_SES *****************
 11896 ;; Defined at:
 11897 ;;		line 6 in file "tick.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;		None
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  1    wreg      void 
 11904 ;; Registers used:
 11905 ;;		wreg, status,2, status,0, pclath, cstack
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11911 ;;      Params:         0       0       0       0       0       0       0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0
 11914 ;;      Totals:         0       0       0       0       0       0       0       0
 11915 ;;Total ram usage:        0 bytes
 11916 ;; Hardware stack levels used: 1
 11917 ;; Hardware stack levels required when called: 8
 11918 ;; This function calls:
 11919 ;;		_TMR1_SetInterruptHandler
 11920 ;; This function is called by:
 11921 ;;		_App_Init
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925     13DF                     _Tick_Init_SES:	
 11926                           ;psect for function _Tick_Init_SES
 11927                           
 11928     13DF                     l5035:	
 11929                           ;incstack = 0
 11930                           ; Regs used in _Tick_Init_SES: [wreg+status,2+status,0+pclath+cstack]
 11931                           
 11932                           
 11933                           ;tick.c: 7:     device_time = 0;
 11934     13DF  3000               	movlw	0
 11935     13E0  0021               	movlb	1	; select bank1
 11936     13E1  00DA               	movwf	(_device_time+3)^(0+128)	;volatile
 11937     13E2  3000               	movlw	0
 11938     13E3  00D9               	movwf	(_device_time+2)^(0+128)	;volatile
 11939     13E4  3000               	movlw	0
 11940     13E5  00D8               	movwf	(_device_time+1)^(0+128)	;volatile
 11941     13E6  3000               	movlw	0
 11942     13E7  00D7               	movwf	_device_time^(0+128)	;volatile
 11943     13E8                     l5037:
 11944                           
 11945                           ;tick.c: 8:     TMR1_SetInterruptHandler(rtcc_handle);
 11946     13E8  3020               	movlw	low _rtcc_handle
 11947     13E9  0020               	movlb	0	; select bank0
 11948     13EA  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11949     13EB  3013               	movlw	high _rtcc_handle
 11950     13EC  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11951     13ED  3192  22D8  3193   	fcall	_TMR1_SetInterruptHandler
 11952     13F0                     l1012:
 11953     13F0  0008               	return
 11954     13F1                     __end_of_Tick_Init_SES:
 11955                           
 11956                           	psect	text57
 11957     12D8                     __ptext57:	
 11958 ;; *************** function _TMR1_SetInterruptHandler *****************
 11959 ;; Defined at:
 11960 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11963 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;		None
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      void 
 11968 ;; Registers used:
 11969 ;;		wreg
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11975 ;;      Params:         0       2       0       0       0       0       0       0
 11976 ;;      Locals:         0       0       0       0       0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0
 11978 ;;      Totals:         0       2       0       0       0       0       0       0
 11979 ;;Total ram usage:        2 bytes
 11980 ;; Hardware stack levels used: 1
 11981 ;; Hardware stack levels required when called: 7
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		_TMR1_Initialize
 11986 ;;		_Tick_Init_SES
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990     12D8                     _TMR1_SetInterruptHandler:	
 11991                           ;psect for function _TMR1_SetInterruptHandler
 11992                           
 11993     12D8                     l4637:	
 11994                           ;incstack = 0
 11995                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11996                           
 11997                           
 11998                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 11999     12D8  0020               	movlb	0	; select bank0
 12000     12D9  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12001     12DA  0021               	movlb	1	; select bank1
 12002     12DB  00E0               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 12003     12DC  0020               	movlb	0	; select bank0
 12004     12DD  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12005     12DE  0021               	movlb	1	; select bank1
 12006     12DF  00DF               	movwf	_TMR1_InterruptHandler^(0+128)
 12007     12E0                     l421:
 12008     12E0  0008               	return
 12009     12E1                     __end_of_TMR1_SetInterruptHandler:
 12010                           
 12011                           	psect	text58
 12012     1254                     __ptext58:	
 12013 ;; *************** function _TMR1_StartTimer *****************
 12014 ;; Defined at:
 12015 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		None
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12029 ;;      Params:         0       0       0       0       0       0       0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0
 12032 ;;      Totals:         0       0       0       0       0       0       0       0
 12033 ;;Total ram usage:        0 bytes
 12034 ;; Hardware stack levels used: 1
 12035 ;; Hardware stack levels required when called: 7
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_App_Init
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043     1254                     _TMR1_StartTimer:	
 12044                           ;psect for function _TMR1_StartTimer
 12045                           
 12046     1254                     l4935:	
 12047                           ;incstack = 0
 12048                           ; Regs used in _TMR1_StartTimer: []
 12049                           
 12050                           
 12051                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 12052     1254  0020               	movlb	0	; select bank0
 12053     1255  1418               	bsf	24,0	;volatile
 12054     1256                     l391:
 12055     1256  0008               	return
 12056     1257                     __end_of_TMR1_StartTimer:
 12057                           
 12058                           	psect	text59
 12059     09E6                     __ptext59:	
 12060 ;; *************** function _Device_Init *****************
 12061 ;; Defined at:
 12062 ;;		line 30 in file "MCU.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;		None
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;  value_SW4       1    3[BANK0 ] char 
 12067 ;;  value_SW3       1    2[BANK0 ] char 
 12068 ;;  value_SW2       1    1[BANK0 ] char 
 12069 ;;  value_SW1       1    0[BANK0 ] char 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  1    wreg      void 
 12072 ;; Registers used:
 12073 ;;		wreg, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12079 ;;      Params:         0       0       0       0       0       0       0       0
 12080 ;;      Locals:         0       4       0       0       0       0       0       0
 12081 ;;      Temps:          0       0       0       0       0       0       0       0
 12082 ;;      Totals:         0       4       0       0       0       0       0       0
 12083 ;;Total ram usage:        4 bytes
 12084 ;; Hardware stack levels used: 1
 12085 ;; Hardware stack levels required when called: 7
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_App_Init
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093     09E6                     _Device_Init:	
 12094                           ;psect for function _Device_Init
 12095                           
 12096     09E6                     l4993:	
 12097                           ;incstack = 0
 12098                           ; Regs used in _Device_Init: [wreg+status,2+status,0]
 12099                           
 12100                           
 12101                           ;MCU.c: 31:     int8_t value_SW1, value_SW2, value_SW3, value_SW4;;MCU.c: 33:     value_
      +                          SW1 = PORTAbits.RA0;
 12102     09E6  3000               	movlw	0
 12103     09E7  0020               	movlb	0	; select bank0
 12104     09E8  180C               	btfsc	12,0	;volatile
 12105     09E9  3001               	movlw	1
 12106     09EA  00A0               	movwf	Device_Init@value_SW1
 12107                           
 12108                           ;MCU.c: 34:     value_SW2 = PORTAbits.RA1;
 12109     09EB  3000               	movlw	0
 12110     09EC  188C               	btfsc	12,1	;volatile
 12111     09ED  3001               	movlw	1
 12112     09EE  00A1               	movwf	Device_Init@value_SW2
 12113                           
 12114                           ;MCU.c: 35:     value_SW3 = PORTAbits.RA2;
 12115     09EF  3000               	movlw	0
 12116     09F0  190C               	btfsc	12,2	;volatile
 12117     09F1  3001               	movlw	1
 12118     09F2  00A2               	movwf	Device_Init@value_SW3
 12119                           
 12120                           ;MCU.c: 36:     value_SW4 = PORTAbits.RA3;
 12121     09F3  3000               	movlw	0
 12122     09F4  198C               	btfsc	12,3	;volatile
 12123     09F5  3001               	movlw	1
 12124     09F6  00A3               	movwf	Device_Init@value_SW4
 12125     09F7                     l4995:
 12126                           
 12127                           ;MCU.c: 39:     if ((value_SW1 == 1) && (value_SW2 == 0) && (value_SW3 == 0) && (value_S
      +                          W4 == 0))
 12128     09F7  0320               	decf	Device_Init@value_SW1,w
 12129     09F8  1D03               	btfss	3,2
 12130     09F9  29FB               	goto	u4141
 12131     09FA  29FC               	goto	u4140
 12132     09FB                     u4141:
 12133     09FB  2A0E               	goto	l5005
 12134     09FC                     u4140:
 12135     09FC                     l4997:
 12136     09FC  0821               	movf	Device_Init@value_SW2,w
 12137     09FD  1D03               	btfss	3,2
 12138     09FE  2A00               	goto	u4151
 12139     09FF  2A01               	goto	u4150
 12140     0A00                     u4151:
 12141     0A00  2A0E               	goto	l5005
 12142     0A01                     u4150:
 12143     0A01                     l4999:
 12144     0A01  0822               	movf	Device_Init@value_SW3,w
 12145     0A02  1D03               	btfss	3,2
 12146     0A03  2A05               	goto	u4161
 12147     0A04  2A06               	goto	u4160
 12148     0A05                     u4161:
 12149     0A05  2A0E               	goto	l5005
 12150     0A06                     u4160:
 12151     0A06                     l5001:
 12152     0A06  0823               	movf	Device_Init@value_SW4,w
 12153     0A07  1D03               	btfss	3,2
 12154     0A08  2A0A               	goto	u4171
 12155     0A09  2A0B               	goto	u4170
 12156     0A0A                     u4171:
 12157     0A0A  2A0E               	goto	l5005
 12158     0A0B                     u4170:
 12159     0A0B                     l5003:
 12160                           
 12161                           ;MCU.c: 40:     {;MCU.c: 41:         SW_Ad = 0x01;
 12162     0A0B  01E9               	clrf	_SW_Ad
 12163     0A0C  0AE9               	incf	_SW_Ad,f
 12164                           
 12165                           ;MCU.c: 42:     } else if ((value_SW1 == 0) && (value_SW2 == 1) && (value_SW3 == 0) && (
      +                          value_SW4 == 0))
 12166     0A0D  2A53               	goto	l883
 12167     0A0E                     l5005:
 12168     0A0E  0820               	movf	Device_Init@value_SW1,w
 12169     0A0F  1D03               	btfss	3,2
 12170     0A10  2A12               	goto	u4181
 12171     0A11  2A13               	goto	u4180
 12172     0A12                     u4181:
 12173     0A12  2A25               	goto	l5015
 12174     0A13                     u4180:
 12175     0A13                     l5007:
 12176     0A13  0321               	decf	Device_Init@value_SW2,w
 12177     0A14  1D03               	btfss	3,2
 12178     0A15  2A17               	goto	u4191
 12179     0A16  2A18               	goto	u4190
 12180     0A17                     u4191:
 12181     0A17  2A25               	goto	l5015
 12182     0A18                     u4190:
 12183     0A18                     l5009:
 12184     0A18  0822               	movf	Device_Init@value_SW3,w
 12185     0A19  1D03               	btfss	3,2
 12186     0A1A  2A1C               	goto	u4201
 12187     0A1B  2A1D               	goto	u4200
 12188     0A1C                     u4201:
 12189     0A1C  2A25               	goto	l5015
 12190     0A1D                     u4200:
 12191     0A1D                     l5011:
 12192     0A1D  0823               	movf	Device_Init@value_SW4,w
 12193     0A1E  1D03               	btfss	3,2
 12194     0A1F  2A21               	goto	u4211
 12195     0A20  2A22               	goto	u4210
 12196     0A21                     u4211:
 12197     0A21  2A25               	goto	l5015
 12198     0A22                     u4210:
 12199     0A22                     l5013:
 12200                           
 12201                           ;MCU.c: 43:     {;MCU.c: 44:         SW_Ad = 0x02;
 12202     0A22  3002               	movlw	2
 12203     0A23  00E9               	movwf	_SW_Ad
 12204                           
 12205                           ;MCU.c: 45:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 1) && (
      +                          value_SW4 == 0))
 12206     0A24  2A53               	goto	l883
 12207     0A25                     l5015:
 12208     0A25  0820               	movf	Device_Init@value_SW1,w
 12209     0A26  1D03               	btfss	3,2
 12210     0A27  2A29               	goto	u4221
 12211     0A28  2A2A               	goto	u4220
 12212     0A29                     u4221:
 12213     0A29  2A3C               	goto	l5025
 12214     0A2A                     u4220:
 12215     0A2A                     l5017:
 12216     0A2A  0821               	movf	Device_Init@value_SW2,w
 12217     0A2B  1D03               	btfss	3,2
 12218     0A2C  2A2E               	goto	u4231
 12219     0A2D  2A2F               	goto	u4230
 12220     0A2E                     u4231:
 12221     0A2E  2A3C               	goto	l5025
 12222     0A2F                     u4230:
 12223     0A2F                     l5019:
 12224     0A2F  0322               	decf	Device_Init@value_SW3,w
 12225     0A30  1D03               	btfss	3,2
 12226     0A31  2A33               	goto	u4241
 12227     0A32  2A34               	goto	u4240
 12228     0A33                     u4241:
 12229     0A33  2A3C               	goto	l5025
 12230     0A34                     u4240:
 12231     0A34                     l5021:
 12232     0A34  0823               	movf	Device_Init@value_SW4,w
 12233     0A35  1D03               	btfss	3,2
 12234     0A36  2A38               	goto	u4251
 12235     0A37  2A39               	goto	u4250
 12236     0A38                     u4251:
 12237     0A38  2A3C               	goto	l5025
 12238     0A39                     u4250:
 12239     0A39                     l5023:
 12240                           
 12241                           ;MCU.c: 46:     {;MCU.c: 47:         SW_Ad = 0x04;
 12242     0A39  3004               	movlw	4
 12243     0A3A  00E9               	movwf	_SW_Ad
 12244                           
 12245                           ;MCU.c: 48:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 0) && (
      +                          value_SW4 == 1))
 12246     0A3B  2A53               	goto	l883
 12247     0A3C                     l5025:
 12248     0A3C  0820               	movf	Device_Init@value_SW1,w
 12249     0A3D  1D03               	btfss	3,2
 12250     0A3E  2A40               	goto	u4261
 12251     0A3F  2A41               	goto	u4260
 12252     0A40                     u4261:
 12253     0A40  2A53               	goto	l879
 12254     0A41                     u4260:
 12255     0A41                     l5027:
 12256     0A41  0821               	movf	Device_Init@value_SW2,w
 12257     0A42  1D03               	btfss	3,2
 12258     0A43  2A45               	goto	u4271
 12259     0A44  2A46               	goto	u4270
 12260     0A45                     u4271:
 12261     0A45  2A53               	goto	l879
 12262     0A46                     u4270:
 12263     0A46                     l5029:
 12264     0A46  0822               	movf	Device_Init@value_SW3,w
 12265     0A47  1D03               	btfss	3,2
 12266     0A48  2A4A               	goto	u4281
 12267     0A49  2A4B               	goto	u4280
 12268     0A4A                     u4281:
 12269     0A4A  2A53               	goto	l879
 12270     0A4B                     u4280:
 12271     0A4B                     l5031:
 12272     0A4B  0323               	decf	Device_Init@value_SW4,w
 12273     0A4C  1D03               	btfss	3,2
 12274     0A4D  2A4F               	goto	u4291
 12275     0A4E  2A50               	goto	u4290
 12276     0A4F                     u4291:
 12277     0A4F  2A53               	goto	l879
 12278     0A50                     u4290:
 12279     0A50                     l5033:
 12280                           
 12281                           ;MCU.c: 49:     {;MCU.c: 50:         SW_Ad = 0x08;
 12282     0A50  3008               	movlw	8
 12283     0A51  00E9               	movwf	_SW_Ad
 12284     0A52  2A53               	goto	l883
 12285     0A53                     l879:
 12286     0A53                     l883:
 12287     0A53  0008               	return
 12288     0A54                     __end_of_Device_Init:
 12289                           
 12290                           	psect	intentry
 12291     0004                     __pintentry:	
 12292 ;; *************** function _INTERRUPT_InterruptManager *****************
 12293 ;; Defined at:
 12294 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12308 ;;      Params:         0       0       0       0       0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 6
 12315 ;; This function calls:
 12316 ;;		NULL
 12317 ;;		_EUSART_Receive_ISR
 12318 ;;		_EUSART_Transmit_ISR
 12319 ;;		_I2C_MasterIsr
 12320 ;;		_TMR1_ISR
 12321 ;; This function is called by:
 12322 ;;		Interrupt level 1
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326     0004                     _INTERRUPT_InterruptManager:
 12327                           
 12328                           ;incstack = 0
 12329     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12330                           
 12331                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12332     0005  3180               	pagesel	$
 12333     0006                     i1l5709:
 12334                           
 12335                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12336     0006  1F0B               	btfss	11,6	;volatile
 12337     0007  2809               	goto	u483_21
 12338     0008  280A               	goto	u483_20
 12339     0009                     u483_21:
 12340     0009  2856               	goto	i1l209
 12341     000A                     u483_20:
 12342     000A                     i1l5711:
 12343                           
 12344                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 12345     000A  0021               	movlb	1	; select bank1
 12346     000B  1E11               	btfss	17,4	;volatile
 12347     000C  280E               	goto	u484_21
 12348     000D  280F               	goto	u484_20
 12349     000E                     u484_21:
 12350     000E  281B               	goto	i1l198
 12351     000F                     u484_20:
 12352     000F                     i1l5713:
 12353     000F  0020               	movlb	0	; select bank0
 12354     0010  1E11               	btfss	17,4	;volatile
 12355     0011  2813               	goto	u485_21
 12356     0012  2814               	goto	u485_20
 12357     0013                     u485_21:
 12358     0013  281B               	goto	i1l198
 12359     0014                     u485_20:
 12360     0014                     i1l5715:
 12361                           
 12362                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 12363     0014  0021               	movlb	1	; select bank1
 12364     0015  086A               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 12365     0016  008A               	movwf	10
 12366     0017  0869               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 12367     0018  000A               	callw
 12368     0019  3180               	pagesel	$
 12369                           
 12370                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12371     001A  2856               	goto	i1l209
 12372     001B                     i1l198:	
 12373                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 12374                           
 12375     001B  0021               	movlb	1	; select bank1
 12376     001C  1E91               	btfss	17,5	;volatile
 12377     001D  281F               	goto	u486_21
 12378     001E  2820               	goto	u486_20
 12379     001F                     u486_21:
 12380     001F  282C               	goto	i1l200
 12381     0020                     u486_20:
 12382     0020                     i1l5717:
 12383     0020  0020               	movlb	0	; select bank0
 12384     0021  1E91               	btfss	17,5	;volatile
 12385     0022  2824               	goto	u487_21
 12386     0023  2825               	goto	u487_20
 12387     0024                     u487_21:
 12388     0024  282C               	goto	i1l200
 12389     0025                     u487_20:
 12390     0025                     i1l5719:
 12391                           
 12392                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 12393     0025  0021               	movlb	1	; select bank1
 12394     0026  0868               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 12395     0027  008A               	movwf	10
 12396     0028  0867               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 12397     0029  000A               	callw
 12398     002A  3180               	pagesel	$
 12399                           
 12400                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12401     002B  2856               	goto	i1l209
 12402     002C                     i1l200:	
 12403                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
 12404                           
 12405     002C  0021               	movlb	1	; select bank1
 12406     002D  1D92               	btfss	18,3	;volatile
 12407     002E  2830               	goto	u488_21
 12408     002F  2831               	goto	u488_20
 12409     0030                     u488_21:
 12410     0030  283D               	goto	i1l202
 12411     0031                     u488_20:
 12412     0031                     i1l5721:
 12413     0031  0020               	movlb	0	; select bank0
 12414     0032  1D92               	btfss	18,3	;volatile
 12415     0033  2835               	goto	u489_21
 12416     0034  2836               	goto	u489_20
 12417     0035                     u489_21:
 12418     0035  283D               	goto	i1l202
 12419     0036                     u489_20:
 12420     0036                     i1l5723:
 12421                           
 12422                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
 12423     0036  0021               	movlb	1	; select bank1
 12424     0037  086C               	movf	(_MSSP_InterruptHandler+1)^(0+128),w
 12425     0038  008A               	movwf	10
 12426     0039  086B               	movf	_MSSP_InterruptHandler^(0+128),w
 12427     003A  000A               	callw
 12428     003B  3180               	pagesel	$
 12429                           
 12430                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12431     003C  2856               	goto	i1l209
 12432     003D                     i1l202:	
 12433                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 12434                           
 12435     003D  0021               	movlb	1	; select bank1
 12436     003E  1D91               	btfss	17,3	;volatile
 12437     003F  2841               	goto	u490_21
 12438     0040  2842               	goto	u490_20
 12439     0041                     u490_21:
 12440     0041  2848               	goto	i1l204
 12441     0042                     u490_20:
 12442     0042                     i1l5725:
 12443     0042  0020               	movlb	0	; select bank0
 12444     0043  1D91               	btfss	17,3	;volatile
 12445     0044  2846               	goto	u491_21
 12446     0045  2847               	goto	u491_20
 12447     0046                     u491_21:
 12448     0046  2848               	goto	i1l204
 12449     0047                     u491_20:
 12450     0047  2836               	goto	i1l5723
 12451     0048                     i1l204:	
 12452                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 12453                           
 12454     0048  0021               	movlb	1	; select bank1
 12455     0049  1C11               	btfss	17,0	;volatile
 12456     004A  284C               	goto	u492_21
 12457     004B  284D               	goto	u492_20
 12458     004C                     u492_21:
 12459     004C  2856               	goto	i1l203
 12460     004D                     u492_20:
 12461     004D                     i1l5729:
 12462     004D  0020               	movlb	0	; select bank0
 12463     004E  1C11               	btfss	17,0	;volatile
 12464     004F  2851               	goto	u493_21
 12465     0050  2852               	goto	u493_20
 12466     0051                     u493_21:
 12467     0051  2856               	goto	i1l203
 12468     0052                     u493_20:
 12469     0052                     i1l5731:
 12470                           
 12471                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 12472     0052  3193  2392  3180   	fcall	_TMR1_ISR
 12473                           
 12474                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12475     0055  2856               	goto	i1l209
 12476     0056                     i1l203:
 12477     0056                     i1l209:
 12478     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12479     0057  0009               	retfie
 12480     0058                     __end_of_INTERRUPT_InterruptManager:
 12481                           
 12482                           	psect	text61
 12483     1392                     __ptext61:	
 12484 ;; *************** function _TMR1_ISR *****************
 12485 ;; Defined at:
 12486 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;		None
 12489 ;; Auto vars:     Size  Location     Type
 12490 ;;		None
 12491 ;; Return value:  Size  Location     Type
 12492 ;;                  1    wreg      void 
 12493 ;; Registers used:
 12494 ;;		wreg, status,2, status,0, pclath, cstack
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 0/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12500 ;;      Params:         0       0       0       0       0       0       0       0
 12501 ;;      Locals:         0       0       0       0       0       0       0       0
 12502 ;;      Temps:          0       0       0       0       0       0       0       0
 12503 ;;      Totals:         0       0       0       0       0       0       0       0
 12504 ;;Total ram usage:        0 bytes
 12505 ;; Hardware stack levels used: 1
 12506 ;; Hardware stack levels required when called: 2
 12507 ;; This function calls:
 12508 ;;		_TMR1_CallBack
 12509 ;;		_TMR1_WriteTimer
 12510 ;; This function is called by:
 12511 ;;		_INTERRUPT_InterruptManager
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515     1392                     _TMR1_ISR:	
 12516                           ;psect for function _TMR1_ISR
 12517                           
 12518     1392                     i1l5049:	
 12519                           ;incstack = 0
 12520                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12521                           
 12522                           
 12523                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 12524     1392  0020               	movlb	0	; select bank0
 12525     1393  1011               	bcf	17,0	;volatile
 12526     1394                     i1l5051:
 12527                           
 12528                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 12529     1394  087D               	movf	_timer1ReloadVal+1,w	;volatile
 12530     1395  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12531     1396  087C               	movf	_timer1ReloadVal,w	;volatile
 12532     1397  00F0               	movwf	TMR1_WriteTimer@timerVal
 12533     1398  3193  23BD  3193   	fcall	_TMR1_WriteTimer
 12534                           
 12535                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
 12536     139B  3193  2385  3193   	fcall	_TMR1_CallBack
 12537     139E                     i1l414:
 12538     139E  0008               	return
 12539     139F                     __end_of_TMR1_ISR:
 12540                           
 12541                           	psect	text62
 12542     13BD                     __ptext62:	
 12543 ;; *************** function _TMR1_WriteTimer *****************
 12544 ;; Defined at:
 12545 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  timerVal        2    0[COMMON] unsigned short 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, status,2
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12559 ;;      Params:         2       0       0       0       0       0       0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0
 12562 ;;      Totals:         2       0       0       0       0       0       0       0
 12563 ;;Total ram usage:        2 bytes
 12564 ;; Hardware stack levels used: 1
 12565 ;; This function calls:
 12566 ;;		Nothing
 12567 ;; This function is called by:
 12568 ;;		_TMR1_ISR
 12569 ;;		_TMR1_Reload
 12570 ;; This function uses a non-reentrant model
 12571 ;;
 12572                           
 12573     13BD                     _TMR1_WriteTimer:	
 12574                           ;psect for function _TMR1_WriteTimer
 12575                           
 12576     13BD                     i1l4937:	
 12577                           ;incstack = 0
 12578                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12579                           
 12580                           
 12581                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 12582     13BD  0020               	movlb	0	; select bank0
 12583     13BE  1D18               	btfss	24,2	;volatile
 12584     13BF  2BC1               	goto	u405_21
 12585     13C0  2BC2               	goto	u405_20
 12586     13C1                     u405_21:
 12587     13C1  2BC9               	goto	i1l4947
 12588     13C2                     u405_20:
 12589     13C2                     i1l4939:
 12590                           
 12591                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 12592     13C2  1018               	bcf	24,0	;volatile
 12593     13C3                     i1l4941:
 12594                           
 12595                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 12596     13C3  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12597     13C4  0097               	movwf	23	;volatile
 12598     13C5                     i1l4943:
 12599                           
 12600                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 12601     13C5  0870               	movf	TMR1_WriteTimer@timerVal,w
 12602     13C6  0096               	movwf	22	;volatile
 12603     13C7                     i1l4945:
 12604                           
 12605                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 12606     13C7  1418               	bsf	24,0	;volatile
 12607                           
 12608                           ;mcc_generated_files/tmr1.c: 133:     }
 12609     13C8  2BCD               	goto	i1l402
 12610     13C9                     i1l4947:
 12611                           
 12612                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12613     13C9  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12614     13CA  0097               	movwf	23	;volatile
 12615     13CB                     i1l4949:
 12616                           
 12617                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 12618     13CB  0870               	movf	TMR1_WriteTimer@timerVal,w
 12619     13CC  0096               	movwf	22	;volatile
 12620     13CD                     i1l402:
 12621     13CD  0008               	return
 12622     13CE                     __end_of_TMR1_WriteTimer:
 12623                           
 12624                           	psect	text63
 12625     1385                     __ptext63:	
 12626 ;; *************** function _TMR1_CallBack *****************
 12627 ;; Defined at:
 12628 ;;		line 169 in file "mcc_generated_files/tmr1.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;		None
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;		None
 12633 ;; Return value:  Size  Location     Type
 12634 ;;                  1    wreg      void 
 12635 ;; Registers used:
 12636 ;;		wreg, status,2, status,0, pclath, cstack
 12637 ;; Tracked objects:
 12638 ;;		On entry : 0/0
 12639 ;;		On exit  : 0/0
 12640 ;;		Unchanged: 0/0
 12641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12642 ;;      Params:         0       0       0       0       0       0       0       0
 12643 ;;      Locals:         0       0       0       0       0       0       0       0
 12644 ;;      Temps:          0       0       0       0       0       0       0       0
 12645 ;;      Totals:         0       0       0       0       0       0       0       0
 12646 ;;Total ram usage:        0 bytes
 12647 ;; Hardware stack levels used: 1
 12648 ;; Hardware stack levels required when called: 1
 12649 ;; This function calls:
 12650 ;;		NULL
 12651 ;;		_TMR1_DefaultInterruptHandler
 12652 ;;		_rtcc_handle
 12653 ;; This function is called by:
 12654 ;;		_TMR1_ISR
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658     1385                     _TMR1_CallBack:	
 12659                           ;psect for function _TMR1_CallBack
 12660                           
 12661     1385                     i1l4951:	
 12662                           ;incstack = 0
 12663                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12664                           
 12665                           
 12666                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
 12667     1385  0021               	movlb	1	; select bank1
 12668     1386  085F               	movf	_TMR1_InterruptHandler^(0+128),w
 12669     1387  0460               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 12670     1388  1903               	btfsc	3,2
 12671     1389  2B8B               	goto	u406_21
 12672     138A  2B8C               	goto	u406_20
 12673     138B                     u406_21:
 12674     138B  2B91               	goto	i1l418
 12675     138C                     u406_20:
 12676     138C                     i1l4953:
 12677                           
 12678                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
 12679     138C  0860               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 12680     138D  008A               	movwf	10
 12681     138E  085F               	movf	_TMR1_InterruptHandler^(0+128),w
 12682     138F  000A               	callw
 12683     1390  3193               	pagesel	$
 12684     1391                     i1l418:
 12685     1391  0008               	return
 12686     1392                     __end_of_TMR1_CallBack:
 12687                           
 12688                           	psect	text64
 12689     123F                     __ptext64:	
 12690 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12691 ;; Defined at:
 12692 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;		None
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;		None
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  1    wreg      void 
 12699 ;; Registers used:
 12700 ;;		None
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12706 ;;      Params:         0       0       0       0       0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0
 12709 ;;      Totals:         0       0       0       0       0       0       0       0
 12710 ;;Total ram usage:        0 bytes
 12711 ;; Hardware stack levels used: 1
 12712 ;; This function calls:
 12713 ;;		Nothing
 12714 ;; This function is called by:
 12715 ;;		_TMR1_Initialize
 12716 ;;		_TMR1_CallBack
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720     123F                     _TMR1_DefaultInterruptHandler:	
 12721                           ;psect for function _TMR1_DefaultInterruptHandler
 12722                           
 12723     123F                     i1l424:	
 12724                           ;incstack = 0
 12725                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 12726                           
 12727     123F  0008               	return
 12728     1240                     __end_of_TMR1_DefaultInterruptHandler:
 12729                           
 12730                           	psect	text65
 12731     1320                     __ptext65:	
 12732 ;; *************** function _rtcc_handle *****************
 12733 ;; Defined at:
 12734 ;;		line 11 in file "tick.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;		None
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;		None
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      void 
 12741 ;; Registers used:
 12742 ;;		wreg
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12748 ;;      Params:         0       0       0       0       0       0       0       0
 12749 ;;      Locals:         0       0       0       0       0       0       0       0
 12750 ;;      Temps:          0       0       0       0       0       0       0       0
 12751 ;;      Totals:         0       0       0       0       0       0       0       0
 12752 ;;Total ram usage:        0 bytes
 12753 ;; Hardware stack levels used: 1
 12754 ;; This function calls:
 12755 ;;		Nothing
 12756 ;; This function is called by:
 12757 ;;		_Tick_Init_SES
 12758 ;;		_TMR1_CallBack
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762     1320                     _rtcc_handle:	
 12763                           ;psect for function _rtcc_handle
 12764                           
 12765     1320                     i1l4841:	
 12766                           ;incstack = 0
 12767                           ; Regs used in _rtcc_handle: [wreg]
 12768                           
 12769                           
 12770                           ;tick.c: 12:     device_time++;
 12771     1320  3001               	movlw	1
 12772     1321  0021               	movlb	1	; select bank1
 12773     1322  07D7               	addwf	_device_time^(0+128),f	;volatile
 12774     1323  3000               	movlw	0
 12775     1324  3DD8               	addwfc	(_device_time+1)^(0+128),f	;volatile
 12776     1325  3000               	movlw	0
 12777     1326  3DD9               	addwfc	(_device_time+2)^(0+128),f	;volatile
 12778     1327  3000               	movlw	0
 12779     1328  3DDA               	addwfc	(_device_time+3)^(0+128),f	;volatile
 12780     1329                     i1l1015:
 12781     1329  0008               	return
 12782     132A                     __end_of_rtcc_handle:
 12783                           
 12784                           	psect	text66
 12785     1276                     __ptext66:	
 12786 ;; *************** function _I2C_MasterIsr *****************
 12787 ;; Defined at:
 12788 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;		None
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  1    wreg      void 
 12795 ;; Registers used:
 12796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12797 ;; Tracked objects:
 12798 ;;		On entry : 0/0
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12802 ;;      Params:         0       0       0       0       0       0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0       0
 12805 ;;      Totals:         0       0       0       0       0       0       0       0
 12806 ;;Total ram usage:        0 bytes
 12807 ;; Hardware stack levels used: 1
 12808 ;; Hardware stack levels required when called: 5
 12809 ;; This function calls:
 12810 ;;		_I2C_MasterFsm
 12811 ;; This function is called by:
 12812 ;;		_I2C_Open
 12813 ;;		_INTERRUPT_InterruptManager
 12814 ;; This function uses a non-reentrant model
 12815 ;;
 12816                           
 12817     1276                     _I2C_MasterIsr:	
 12818                           ;psect for function _I2C_MasterIsr
 12819                           
 12820     1276                     i1l5641:	
 12821                           ;incstack = 0
 12822                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12823                           
 12824                           
 12825                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
 12826     1276  3195  25C7  3192   	fcall	_I2C_MasterFsm
 12827     1279                     i1l586:
 12828     1279  0008               	return
 12829     127A                     __end_of_I2C_MasterIsr:
 12830                           
 12831                           	psect	text67
 12832     15C7                     __ptext67:	
 12833 ;; *************** function _I2C_MasterFsm *****************
 12834 ;; Defined at:
 12835 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;		None
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;		None
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  1    wreg      void 
 12842 ;; Registers used:
 12843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12849 ;;      Params:         0       0       0       0       0       0       0       0
 12850 ;;      Locals:         0       0       0       0       0       0       0       0
 12851 ;;      Temps:          2       0       0       0       0       0       0       0
 12852 ;;      Totals:         2       0       0       0       0       0       0       0
 12853 ;;Total ram usage:        2 bytes
 12854 ;; Hardware stack levels used: 1
 12855 ;; Hardware stack levels required when called: 4
 12856 ;; This function calls:
 12857 ;;		_I2C_DO_ADDRESS_NACK
 12858 ;;		_I2C_DO_IDLE
 12859 ;;		_I2C_DO_RCEN
 12860 ;;		_I2C_DO_RESET
 12861 ;;		_I2C_DO_RX
 12862 ;;		_I2C_DO_RX_ACK
 12863 ;;		_I2C_DO_RX_NACK_RESTART
 12864 ;;		_I2C_DO_RX_NACK_STOP
 12865 ;;		_I2C_DO_SEND_ADR_READ
 12866 ;;		_I2C_DO_SEND_ADR_WRITE
 12867 ;;		_I2C_DO_SEND_RESTART
 12868 ;;		_I2C_DO_SEND_RESTART_READ
 12869 ;;		_I2C_DO_SEND_RESTART_WRITE
 12870 ;;		_I2C_DO_SEND_STOP
 12871 ;;		_I2C_DO_TX
 12872 ;;		_I2C_DO_TX_EMPTY
 12873 ;;		_I2C_MasterIsNack
 12874 ;;		i1_I2C_MasterClearIrq
 12875 ;; This function is called by:
 12876 ;;		_I2C_MasterIsr
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880     15C7                     _I2C_MasterFsm:	
 12881                           ;psect for function _I2C_MasterFsm
 12882                           
 12883     15C7                     i1l5617:	
 12884                           ;incstack = 0
 12885                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12886                           
 12887                           
 12888                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
 12889     15C7  3192  2251  3195   	fcall	i1_I2C_MasterClearIrq
 12890     15CA                     i1l5619:
 12891                           
 12892                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12893     15CA  0022               	movlb	2	; select bank2
 12894     15CB  1C3D               	btfss	(_I2C_Status^(0+256)+29),0
 12895     15CC  2DCE               	goto	u468_21
 12896     15CD  2DCF               	goto	u468_20
 12897     15CE                     u468_21:
 12898     15CE  2DDA               	goto	i1l5625
 12899     15CF                     u468_20:
 12900     15CF                     i1l5621:
 12901     15CF  3192  22BA  3195   	fcall	_I2C_MasterIsNack
 12902     15D2  3A00               	xorlw	0
 12903     15D3  1903               	skipnz
 12904     15D4  2DD6               	goto	u469_21
 12905     15D5  2DD7               	goto	u469_20
 12906     15D6                     u469_21:
 12907     15D6  2DDA               	goto	i1l5625
 12908     15D7                     u469_20:
 12909     15D7                     i1l5623:
 12910                           
 12911                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12912     15D7  300F               	movlw	15
 12913     15D8  0022               	movlb	2	; select bank2
 12914     15D9  00BB               	movwf	(_I2C_Status^(0+256)+27)
 12915     15DA                     i1l5625:
 12916                           
 12917                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12918     15DA  0022               	movlb	2	; select bank2
 12919     15DB  083B               	movf	(_I2C_Status^(0+256)+27),w
 12920     15DC  00FA               	movwf	??_I2C_MasterFsm
 12921     15DD  01FB               	clrf	??_I2C_MasterFsm+1
 12922     15DE  35FA               	lslf	??_I2C_MasterFsm,f
 12923     15DF  0DFB               	rlf	??_I2C_MasterFsm+1,f
 12924     15E0  3000               	movlw	low _i2c_fsmStateTable
 12925     15E1  077A               	addwf	??_I2C_MasterFsm,w
 12926     15E2  0084               	movwf	4
 12927     15E3  3018               	movlw	high _i2c_fsmStateTable
 12928     15E4  3D7B               	addwfc	??_I2C_MasterFsm+1,w
 12929     15E5  3880               	iorlw	128
 12930     15E6  0085               	movwf	5
 12931     15E7  3F01               	moviw [1]fsr0
 12932     15E8  008A               	movwf	10
 12933     15E9  3F00               	moviw [0]fsr0
 12934     15EA  000A               	callw
 12935     15EB  3195               	pagesel	$
 12936     15EC  0022               	movlb	2	; select bank2
 12937     15ED  00BB               	movwf	(_I2C_Status^(0+256)+27)
 12938     15EE                     i1l590:
 12939     15EE  0008               	return
 12940     15EF                     __end_of_I2C_MasterFsm:
 12941                           
 12942                           	psect	text68
 12943     1251                     __ptext68:	
 12944 ;; *************** function i1_I2C_MasterClearIrq *****************
 12945 ;; Defined at:
 12946 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;		None
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;		None
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  1    wreg      void 
 12953 ;; Registers used:
 12954 ;;		None
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12960 ;;      Params:         0       0       0       0       0       0       0       0
 12961 ;;      Locals:         0       0       0       0       0       0       0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0
 12963 ;;      Totals:         0       0       0       0       0       0       0       0
 12964 ;;Total ram usage:        0 bytes
 12965 ;; Hardware stack levels used: 1
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_I2C_MasterFsm
 12970 ;; This function uses a non-reentrant model
 12971 ;;
 12972                           
 12973     1251                     i1_I2C_MasterClearIrq:	
 12974                           ;psect for function i1_I2C_MasterClearIrq
 12975                           
 12976     1251                     i1l4843:	
 12977                           ;incstack = 0
 12978                           ; Regs used in i1_I2C_MasterClearIrq: []
 12979                           
 12980                           
 12981                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 12982     1251  0020               	movlb	0	; select bank0
 12983     1252  1191               	bcf	17,3	;volatile
 12984     1253                     i1l753:
 12985     1253  0008               	return
 12986     1254                     __end_ofi1_I2C_MasterClearIrq:
 12987                           
 12988                           	psect	text69
 12989     15EF                     __ptext69:	
 12990 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 12991 ;; Defined at:
 12992 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      enum E3112
 12999 ;; Registers used:
 13000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13006 ;;      Params:         0       0       0       0       0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0       0       0       0
 13008 ;;      Temps:          2       0       0       0       0       0       0       0
 13009 ;;      Totals:         2       0       0       0       0       0       0       0
 13010 ;;Total ram usage:        2 bytes
 13011 ;; Hardware stack levels used: 1
 13012 ;; Hardware stack levels required when called: 3
 13013 ;; This function calls:
 13014 ;;		NULL
 13015 ;;		_I2C_CallbackReturnReset
 13016 ;;		_I2C_CallbackReturnStop
 13017 ;;		_I2C_DO_SEND_RESTART
 13018 ;;		_I2C_DO_SEND_STOP
 13019 ;;		_rd1RegCompleteHandler
 13020 ;;		_rd2RegCompleteHandler
 13021 ;;		_rdBlkRegCompleteHandler
 13022 ;;		_wr1RegCompleteHandler
 13023 ;;		_wr2RegCompleteHandler
 13024 ;; This function is called by:
 13025 ;;		_I2C_MasterFsm
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029     15EF                     _I2C_DO_ADDRESS_NACK:	
 13030                           ;psect for function _I2C_DO_ADDRESS_NACK
 13031                           
 13032     15EF                     i1l5573:	
 13033                           ;incstack = 0
 13034                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13035                           
 13036                           
 13037                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 13038     15EF  0022               	movlb	2	; select bank2
 13039     15F0  103D               	bcf	(_I2C_Status^(0+256)+29),0
 13040     15F1                     i1l5575:
 13041                           
 13042                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 13043     15F1  3002               	movlw	2
 13044     15F2  00BC               	movwf	(_I2C_Status^(0+256)+28)
 13045                           
 13046                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 13047     15F3  2DFC               	goto	i1l5587
 13048     15F4                     i1l5577:
 13049                           
 13050                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 13051     15F4  3192  2292  3195   	fcall	_I2C_DO_SEND_RESTART
 13052     15F7  2E17               	goto	i1l681
 13053     15F8                     i1l5581:
 13054                           
 13055                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 13056     15F8  3192  2297  3195   	fcall	_I2C_DO_SEND_STOP
 13057     15FB  2E17               	goto	i1l681
 13058     15FC                     i1l5587:
 13059     15FC  082E               	movf	(low ((_I2C_Status| (0+256)+14)))^0,w
 13060     15FD  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13061     15FE  3004               	movlw	4
 13062     15FF  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13063     1600  0086               	movwf	6
 13064     1601  3001               	movlw	1	; select bank2/3
 13065     1602  0087               	movwf	7
 13066     1603  3F41               	moviw [1]fsr1
 13067     1604  008A               	movwf	10
 13068     1605  3F40               	moviw [0]fsr1
 13069     1606  000A               	callw
 13070     1607  3195               	pagesel	$
 13071     1608  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
 13072     1609  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
 13073                           
 13074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13075                           ; Switch size 1, requested type "simple"
 13076                           ; Number of cases is 1, Range of values is 0 to 0
 13077                           ; switch strategies available:
 13078                           ; Name         Instructions Cycles
 13079                           ; simple_byte            4     3 (average)
 13080                           ; direct_byte            8     6 (fixed)
 13081                           ; jumptable            260     6 (fixed)
 13082                           ;	Chosen strategy is simple_byte
 13083     160A  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 13084     160B  3A00               	xorlw	0	; case 0
 13085     160C  1903               	skipnz
 13086     160D  2E0F               	goto	i1l5899
 13087     160E  2DF8               	goto	i1l5581
 13088     160F                     i1l5899:
 13089                           
 13090                           ; Switch size 1, requested type "simple"
 13091                           ; Number of cases is 2, Range of values is 2 to 3
 13092                           ; switch strategies available:
 13093                           ; Name         Instructions Cycles
 13094                           ; simple_byte            7     4 (average)
 13095                           ; direct_byte           13     9 (fixed)
 13096                           ; jumptable            263     9 (fixed)
 13097                           ;	Chosen strategy is simple_byte
 13098     160F  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
 13099     1610  3A02               	xorlw	2	; case 2
 13100     1611  1903               	skipnz
 13101     1612  2DF4               	goto	i1l5577
 13102     1613  3A01               	xorlw	1	; case 3
 13103     1614  1903               	skipnz
 13104     1615  2DF4               	goto	i1l5577
 13105     1616  2DF8               	goto	i1l5581
 13106     1617                     i1l681:
 13107     1617  0008               	return
 13108     1618                     __end_of_I2C_DO_ADDRESS_NACK:
 13109                           
 13110                           	psect	text70
 13111     12AB                     __ptext70:	
 13112 ;; *************** function _I2C_DO_RESET *****************
 13113 ;; Defined at:
 13114 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;		None
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;		None
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  1    wreg      enum E3112
 13121 ;; Registers used:
 13122 ;;		wreg, status,2
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13128 ;;      Params:         0       0       0       0       0       0       0       0
 13129 ;;      Locals:         0       0       0       0       0       0       0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0       0
 13131 ;;      Totals:         0       0       0       0       0       0       0       0
 13132 ;;Total ram usage:        0 bytes
 13133 ;; Hardware stack levels used: 1
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_I2C_MasterFsm
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141     12AB                     _I2C_DO_RESET:	
 13142                           ;psect for function _I2C_DO_RESET
 13143                           
 13144     12AB                     i1l4769:	
 13145                           ;incstack = 0
 13146                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 13147                           
 13148                           
 13149                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 13150     12AB  0022               	movlb	2	; select bank2
 13151     12AC  10BD               	bcf	(_I2C_Status^(0+256)+29),1
 13152     12AD                     i1l4771:
 13153                           
 13154                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 13155     12AD  01BC               	clrf	(_I2C_Status^(0+256)+28)
 13156     12AE                     i1l4773:
 13157                           
 13158                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 13159     12AE  300E               	movlw	14
 13160     12AF                     i1l675:
 13161     12AF  0008               	return
 13162     12B0                     __end_of_I2C_DO_RESET:
 13163                           
 13164                           	psect	text71
 13165     12A6                     __ptext71:	
 13166 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13167 ;; Defined at:
 13168 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;		None
 13171 ;; Auto vars:     Size  Location     Type
 13172 ;;		None
 13173 ;; Return value:  Size  Location     Type
 13174 ;;                  1    wreg      enum E3112
 13175 ;; Registers used:
 13176 ;;		wreg, status,2, status,0, pclath, cstack
 13177 ;; Tracked objects:
 13178 ;;		On entry : 0/0
 13179 ;;		On exit  : 0/0
 13180 ;;		Unchanged: 0/0
 13181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13182 ;;      Params:         0       0       0       0       0       0       0       0
 13183 ;;      Locals:         0       0       0       0       0       0       0       0
 13184 ;;      Temps:          0       0       0       0       0       0       0       0
 13185 ;;      Totals:         0       0       0       0       0       0       0       0
 13186 ;;Total ram usage:        0 bytes
 13187 ;; Hardware stack levels used: 1
 13188 ;; Hardware stack levels required when called: 1
 13189 ;; This function calls:
 13190 ;;		_I2C_MasterSendNack
 13191 ;; This function is called by:
 13192 ;;		_I2C_DO_RX
 13193 ;;		_I2C_MasterFsm
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197     12A6                     _I2C_DO_RX_NACK_RESTART:	
 13198                           ;psect for function _I2C_DO_RX_NACK_RESTART
 13199                           
 13200     12A6                     i1l3965:	
 13201                           ;incstack = 0
 13202                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13203                           
 13204                           
 13205                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 13206     12A6  3192  226E  3192   	fcall	_I2C_MasterSendNack
 13207     12A9                     i1l3967:
 13208                           
 13209                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 13210     12A9  3009               	movlw	9
 13211     12AA                     i1l672:
 13212     12AA  0008               	return
 13213     12AB                     __end_of_I2C_DO_RX_NACK_RESTART:
 13214                           
 13215                           	psect	text72
 13216     12A1                     __ptext72:	
 13217 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13218 ;; Defined at:
 13219 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;		None
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;		None
 13224 ;; Return value:  Size  Location     Type
 13225 ;;                  1    wreg      enum E3112
 13226 ;; Registers used:
 13227 ;;		wreg, status,2, status,0, pclath, cstack
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13233 ;;      Params:         0       0       0       0       0       0       0       0
 13234 ;;      Locals:         0       0       0       0       0       0       0       0
 13235 ;;      Temps:          0       0       0       0       0       0       0       0
 13236 ;;      Totals:         0       0       0       0       0       0       0       0
 13237 ;;Total ram usage:        0 bytes
 13238 ;; Hardware stack levels used: 1
 13239 ;; Hardware stack levels required when called: 1
 13240 ;; This function calls:
 13241 ;;		_I2C_MasterSendNack
 13242 ;; This function is called by:
 13243 ;;		_I2C_DO_RX
 13244 ;;		_I2C_MasterFsm
 13245 ;; This function uses a non-reentrant model
 13246 ;;
 13247                           
 13248     12A1                     _I2C_DO_RX_NACK_STOP:	
 13249                           ;psect for function _I2C_DO_RX_NACK_STOP
 13250                           
 13251     12A1                     i1l3971:	
 13252                           ;incstack = 0
 13253                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13254                           
 13255                           
 13256                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 13257     12A1  3192  226E  3192   	fcall	_I2C_MasterSendNack
 13258     12A4                     i1l3973:
 13259                           
 13260                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 13261     12A4  300A               	movlw	10
 13262     12A5                     i1l669:
 13263     12A5  0008               	return
 13264     12A6                     __end_of_I2C_DO_RX_NACK_STOP:
 13265                           
 13266                           	psect	text73
 13267     129C                     __ptext73:	
 13268 ;; *************** function _I2C_DO_RX_ACK *****************
 13269 ;; Defined at:
 13270 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;		None
 13273 ;; Auto vars:     Size  Location     Type
 13274 ;;		None
 13275 ;; Return value:  Size  Location     Type
 13276 ;;                  1    wreg      enum E3112
 13277 ;; Registers used:
 13278 ;;		wreg, status,2, status,0, pclath, cstack
 13279 ;; Tracked objects:
 13280 ;;		On entry : 0/0
 13281 ;;		On exit  : 0/0
 13282 ;;		Unchanged: 0/0
 13283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13284 ;;      Params:         0       0       0       0       0       0       0       0
 13285 ;;      Locals:         0       0       0       0       0       0       0       0
 13286 ;;      Temps:          0       0       0       0       0       0       0       0
 13287 ;;      Totals:         0       0       0       0       0       0       0       0
 13288 ;;Total ram usage:        0 bytes
 13289 ;; Hardware stack levels used: 1
 13290 ;; Hardware stack levels required when called: 1
 13291 ;; This function calls:
 13292 ;;		_I2C_MasterSendAck
 13293 ;; This function is called by:
 13294 ;;		_I2C_MasterFsm
 13295 ;; This function uses a non-reentrant model
 13296 ;;
 13297                           
 13298     129C                     _I2C_DO_RX_ACK:	
 13299                           ;psect for function _I2C_DO_RX_ACK
 13300                           
 13301     129C                     i1l4763:	
 13302                           ;incstack = 0
 13303                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13304                           
 13305                           
 13306                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 13307     129C  3192  2272  3192   	fcall	_I2C_MasterSendAck
 13308     129F                     i1l4765:
 13309                           
 13310                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 13311     129F  3005               	movlw	5
 13312     12A0                     i1l666:
 13313     12A0  0008               	return
 13314     12A1                     __end_of_I2C_DO_RX_ACK:
 13315                           
 13316                           	psect	text74
 13317     1297                     __ptext74:	
 13318 ;; *************** function _I2C_DO_SEND_STOP *****************
 13319 ;; Defined at:
 13320 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 13321 ;; Parameters:    Size  Location     Type
 13322 ;;		None
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;		None
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  1    wreg      enum E3112
 13327 ;; Registers used:
 13328 ;;		wreg, status,2, status,0, pclath, cstack
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13334 ;;      Params:         0       0       0       0       0       0       0       0
 13335 ;;      Locals:         0       0       0       0       0       0       0       0
 13336 ;;      Temps:          0       0       0       0       0       0       0       0
 13337 ;;      Totals:         0       0       0       0       0       0       0       0
 13338 ;;Total ram usage:        0 bytes
 13339 ;; Hardware stack levels used: 1
 13340 ;; Hardware stack levels required when called: 1
 13341 ;; This function calls:
 13342 ;;		_I2C_MasterStop
 13343 ;; This function is called by:
 13344 ;;		_I2C_DO_TX
 13345 ;;		_I2C_DO_TX_EMPTY
 13346 ;;		_I2C_DO_ADDRESS_NACK
 13347 ;;		_I2C_MasterFsm
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351     1297                     _I2C_DO_SEND_STOP:	
 13352                           ;psect for function _I2C_DO_SEND_STOP
 13353                           
 13354     1297                     i1l3953:	
 13355                           ;incstack = 0
 13356                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13357                           
 13358                           
 13359                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 13360     1297  3192  2245  3192   	fcall	_I2C_MasterStop
 13361     129A                     i1l3955:
 13362                           
 13363                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 13364     129A  3000               	movlw	0
 13365     129B                     i1l663:
 13366     129B  0008               	return
 13367     129C                     __end_of_I2C_DO_SEND_STOP:
 13368                           
 13369                           	psect	text75
 13370     1292                     __ptext75:	
 13371 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13372 ;; Defined at:
 13373 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      enum E3112
 13380 ;; Registers used:
 13381 ;;		wreg, status,2, status,0, pclath, cstack
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13387 ;;      Params:         0       0       0       0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0       0       0       0
 13389 ;;      Temps:          0       0       0       0       0       0       0       0
 13390 ;;      Totals:         0       0       0       0       0       0       0       0
 13391 ;;Total ram usage:        0 bytes
 13392 ;; Hardware stack levels used: 1
 13393 ;; Hardware stack levels required when called: 1
 13394 ;; This function calls:
 13395 ;;		_I2C_MasterEnableRestart
 13396 ;; This function is called by:
 13397 ;;		_I2C_DO_TX_EMPTY
 13398 ;;		_I2C_DO_ADDRESS_NACK
 13399 ;;		_I2C_MasterFsm
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403     1292                     _I2C_DO_SEND_RESTART:	
 13404                           ;psect for function _I2C_DO_SEND_RESTART
 13405                           
 13406     1292                     i1l3979:	
 13407                           ;incstack = 0
 13408                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13409                           
 13410                           
 13411                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 13412     1292  3192  2242  3192   	fcall	_I2C_MasterEnableRestart
 13413     1295                     i1l3981:
 13414                           
 13415                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 13416     1295  3001               	movlw	1
 13417     1296                     i1l660:
 13418     1296  0008               	return
 13419     1297                     __end_of_I2C_DO_SEND_RESTART:
 13420                           
 13421                           	psect	text76
 13422     128D                     __ptext76:	
 13423 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13424 ;; Defined at:
 13425 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 13426 ;; Parameters:    Size  Location     Type
 13427 ;;		None
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;		None
 13430 ;; Return value:  Size  Location     Type
 13431 ;;                  1    wreg      enum E3112
 13432 ;; Registers used:
 13433 ;;		wreg, status,2, status,0, pclath, cstack
 13434 ;; Tracked objects:
 13435 ;;		On entry : 0/0
 13436 ;;		On exit  : 0/0
 13437 ;;		Unchanged: 0/0
 13438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13439 ;;      Params:         0       0       0       0       0       0       0       0
 13440 ;;      Locals:         0       0       0       0       0       0       0       0
 13441 ;;      Temps:          0       0       0       0       0       0       0       0
 13442 ;;      Totals:         0       0       0       0       0       0       0       0
 13443 ;;Total ram usage:        0 bytes
 13444 ;; Hardware stack levels used: 1
 13445 ;; Hardware stack levels required when called: 1
 13446 ;; This function calls:
 13447 ;;		_I2C_MasterEnableRestart
 13448 ;; This function is called by:
 13449 ;;		_I2C_DO_TX
 13450 ;;		_I2C_MasterFsm
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454     128D                     _I2C_DO_SEND_RESTART_WRITE:	
 13455                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 13456                           
 13457     128D                     i1l3947:	
 13458                           ;incstack = 0
 13459                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13460                           
 13461                           
 13462                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 13463     128D  3192  2242  3192   	fcall	_I2C_MasterEnableRestart
 13464     1290                     i1l3949:
 13465                           
 13466                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 13467     1290  3002               	movlw	2
 13468     1291                     i1l657:
 13469     1291  0008               	return
 13470     1292                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13471                           
 13472                           	psect	text77
 13473     1288                     __ptext77:	
 13474 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13475 ;; Defined at:
 13476 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1    wreg      enum E3112
 13483 ;; Registers used:
 13484 ;;		wreg, status,2, status,0, pclath, cstack
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13490 ;;      Params:         0       0       0       0       0       0       0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0
 13492 ;;      Temps:          0       0       0       0       0       0       0       0
 13493 ;;      Totals:         0       0       0       0       0       0       0       0
 13494 ;;Total ram usage:        0 bytes
 13495 ;; Hardware stack levels used: 1
 13496 ;; Hardware stack levels required when called: 1
 13497 ;; This function calls:
 13498 ;;		_I2C_MasterEnableRestart
 13499 ;; This function is called by:
 13500 ;;		_I2C_DO_TX
 13501 ;;		_I2C_MasterFsm
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505     1288                     _I2C_DO_SEND_RESTART_READ:	
 13506                           ;psect for function _I2C_DO_SEND_RESTART_READ
 13507                           
 13508     1288                     i1l3941:	
 13509                           ;incstack = 0
 13510                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13511                           
 13512                           
 13513                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 13514     1288  3192  2242  3192   	fcall	_I2C_MasterEnableRestart
 13515     128B                     i1l3943:
 13516                           
 13517                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 13518     128B  3001               	movlw	1
 13519     128C                     i1l654:
 13520     128C  0008               	return
 13521     128D                     __end_of_I2C_DO_SEND_RESTART_READ:
 13522                           
 13523                           	psect	text78
 13524     12C0                     __ptext78:	
 13525 ;; *************** function _I2C_DO_RCEN *****************
 13526 ;; Defined at:
 13527 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;		None
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;		None
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      enum E3112
 13534 ;; Registers used:
 13535 ;;		wreg, status,2, status,0, pclath, cstack
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13541 ;;      Params:         0       0       0       0       0       0       0       0
 13542 ;;      Locals:         0       0       0       0       0       0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0
 13544 ;;      Totals:         0       0       0       0       0       0       0       0
 13545 ;;Total ram usage:        0 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 1
 13548 ;; This function calls:
 13549 ;;		_I2C_MasterStartRx
 13550 ;; This function is called by:
 13551 ;;		_I2C_MasterFsm
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555     12C0                     _I2C_DO_RCEN:	
 13556                           ;psect for function _I2C_DO_RCEN
 13557                           
 13558     12C0                     i1l4729:	
 13559                           ;incstack = 0
 13560                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13561                           
 13562                           
 13563                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 13564     12C0  0022               	movlb	2	; select bank2
 13565     12C1  103D               	bcf	(_I2C_Status^(0+256)+29),0
 13566     12C2                     i1l4731:
 13567                           
 13568                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 13569     12C2  3192  2248  3192   	fcall	_I2C_MasterStartRx
 13570     12C5                     i1l4733:
 13571                           
 13572                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 13573     12C5  3004               	movlw	4
 13574     12C6                     i1l630:
 13575     12C6  0008               	return
 13576     12C7                     __end_of_I2C_DO_RCEN:
 13577                           
 13578                           	psect	text79
 13579     083B                     __ptext79:	
 13580 ;; *************** function _I2C_DO_RX *****************
 13581 ;; Defined at:
 13582 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;		None
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      enum E3112
 13589 ;; Registers used:
 13590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13596 ;;      Params:         0       0       0       0       0       0       0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0
 13598 ;;      Temps:          2       0       0       0       0       0       0       0
 13599 ;;      Totals:         2       0       0       0       0       0       0       0
 13600 ;;Total ram usage:        2 bytes
 13601 ;; Hardware stack levels used: 1
 13602 ;; Hardware stack levels required when called: 3
 13603 ;; This function calls:
 13604 ;;		NULL
 13605 ;;		_I2C_CallbackReturnReset
 13606 ;;		_I2C_CallbackReturnStop
 13607 ;;		_I2C_DO_RX_NACK_RESTART
 13608 ;;		_I2C_DO_RX_NACK_STOP
 13609 ;;		_I2C_MasterGetRxData
 13610 ;;		_I2C_MasterSendAck
 13611 ;;		_rd1RegCompleteHandler
 13612 ;;		_rd2RegCompleteHandler
 13613 ;;		_rdBlkRegCompleteHandler
 13614 ;;		_wr1RegCompleteHandler
 13615 ;;		_wr2RegCompleteHandler
 13616 ;; This function is called by:
 13617 ;;		_I2C_MasterFsm
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621     083B                     _I2C_DO_RX:	
 13622                           ;psect for function _I2C_DO_RX
 13623                           
 13624     083B                     i1l5515:	
 13625                           ;incstack = 0
 13626                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13627                           
 13628                           
 13629                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13630     083B  3192  224B  3188   	fcall	_I2C_MasterGetRxData
 13631     083E  00F8               	movwf	??_I2C_DO_RX
 13632     083F  3017               	movlw	23
 13633     0840  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13634     0841  0086               	movwf	6
 13635     0842  3001               	movlw	1	; select bank2/3
 13636     0843  0087               	movwf	7
 13637     0844  3F40               	moviw [0]fsr1
 13638     0845  0084               	movwf	4
 13639     0846  3F41               	moviw [1]fsr1
 13640     0847  0085               	movwf	5
 13641     0848  0878               	movf	??_I2C_DO_RX,w
 13642     0849  0080               	movwf	0
 13643     084A                     i1l5517:
 13644     084A  3001               	movlw	1
 13645     084B  0022               	movlb	2	; select bank2
 13646     084C  07B7               	addwf	(low ((_I2C_Status| (0+256)+23)))^0,f
 13647     084D  3000               	movlw	0
 13648     084E  3DB8               	addwfc	((low ((_I2C_Status| (0+256)+23))+1))^0,f
 13649     084F                     i1l5519:
 13650                           
 13651                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 13652     084F  3001               	movlw	1
 13653     0850  02B9               	subwf	(_I2C_Status^(0+256)+25),f
 13654     0851  3000               	movlw	0
 13655     0852  3BBA               	subwfb	((_I2C_Status+1)^(0+256)+25),f
 13656     0853  0839               	movf	(_I2C_Status^(0+256)+25),w
 13657     0854  043A               	iorwf	((_I2C_Status+1)^(0+256)+25),w
 13658     0855  1903               	btfsc	3,2
 13659     0856  2858               	goto	u467_21
 13660     0857  2859               	goto	u467_20
 13661     0858                     u467_21:
 13662     0858  285E               	goto	i1l618
 13663     0859                     u467_20:
 13664     0859                     i1l5521:
 13665                           
 13666                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 13667     0859  3192  2272  3188   	fcall	_I2C_MasterSendAck
 13668     085C                     i1l5523:
 13669                           
 13670                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 13671     085C  3005               	movlw	5
 13672     085D  2884               	goto	i1l619
 13673     085E                     i1l618:	
 13674                           ;mcc_generated_files/i2c_master.c: 388:     else
 13675                           
 13676                           
 13677                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 13678     085E  15BD               	bsf	(_I2C_Status^(0+256)+29),3
 13679                           
 13680                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13681     085F  2868               	goto	i1l5539
 13682     0860                     i1l5529:
 13683                           
 13684                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 13685     0860  3192  22A6  3188   	fcall	_I2C_DO_RX_NACK_RESTART
 13686     0863  2884               	goto	i1l619
 13687     0864                     i1l5533:
 13688                           
 13689                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 13690     0864  3192  22A1  3188   	fcall	_I2C_DO_RX_NACK_STOP
 13691     0867  2884               	goto	i1l619
 13692     0868                     i1l5539:
 13693     0868  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 13694     0869  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13695     086A  0821               	movf	(_I2C_Status+1)^(0+256),w
 13696     086B  008A               	movwf	10
 13697     086C  0820               	movf	_I2C_Status^(0+256),w
 13698     086D  000A               	callw
 13699     086E  3188               	pagesel	$
 13700     086F  00F8               	movwf	??_I2C_DO_RX
 13701     0870  01F9               	clrf	??_I2C_DO_RX+1
 13702                           
 13703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13704                           ; Switch size 1, requested type "simple"
 13705                           ; Number of cases is 1, Range of values is 0 to 0
 13706                           ; switch strategies available:
 13707                           ; Name         Instructions Cycles
 13708                           ; simple_byte            4     3 (average)
 13709                           ; direct_byte            8     6 (fixed)
 13710                           ; jumptable            260     6 (fixed)
 13711                           ;	Chosen strategy is simple_byte
 13712     0871  0879               	movf	??_I2C_DO_RX+1,w
 13713     0872  3A00               	xorlw	0	; case 0
 13714     0873  1903               	skipnz
 13715     0874  2876               	goto	i1l5901
 13716     0875  2864               	goto	i1l5533
 13717     0876                     i1l5901:
 13718                           
 13719                           ; Switch size 1, requested type "simple"
 13720                           ; Number of cases is 4, Range of values is 1 to 4
 13721                           ; switch strategies available:
 13722                           ; Name         Instructions Cycles
 13723                           ; simple_byte           13     7 (average)
 13724                           ; direct_byte           17     9 (fixed)
 13725                           ; jumptable            263     9 (fixed)
 13726                           ;	Chosen strategy is simple_byte
 13727     0876  0878               	movf	??_I2C_DO_RX,w
 13728     0877  3A01               	xorlw	1	; case 1
 13729     0878  1903               	skipnz
 13730     0879  2864               	goto	i1l5533
 13731     087A  3A03               	xorlw	3	; case 2
 13732     087B  1903               	skipnz
 13733     087C  2860               	goto	i1l5529
 13734     087D  3A01               	xorlw	1	; case 3
 13735     087E  1903               	skipnz
 13736     087F  2860               	goto	i1l5529
 13737     0880  3A07               	xorlw	7	; case 4
 13738     0881  1903               	skipnz
 13739     0882  2864               	goto	i1l5533
 13740     0883  2864               	goto	i1l5533
 13741     0884                     i1l619:
 13742     0884  0008               	return
 13743     0885                     __end_of_I2C_DO_RX:
 13744                           
 13745                           	psect	text80
 13746     08D4                     __ptext80:	
 13747 ;; *************** function _I2C_DO_TX *****************
 13748 ;; Defined at:
 13749 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 13750 ;; Parameters:    Size  Location     Type
 13751 ;;		None
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;		None
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1    wreg      enum E3112
 13756 ;; Registers used:
 13757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13758 ;; Tracked objects:
 13759 ;;		On entry : 0/0
 13760 ;;		On exit  : 0/0
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13763 ;;      Params:         0       0       0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0
 13765 ;;      Temps:          2       0       0       0       0       0       0       0
 13766 ;;      Totals:         2       0       0       0       0       0       0       0
 13767 ;;Total ram usage:        2 bytes
 13768 ;; Hardware stack levels used: 1
 13769 ;; Hardware stack levels required when called: 3
 13770 ;; This function calls:
 13771 ;;		NULL
 13772 ;;		_I2C_CallbackReturnReset
 13773 ;;		_I2C_CallbackReturnStop
 13774 ;;		_I2C_DO_SEND_RESTART_READ
 13775 ;;		_I2C_DO_SEND_RESTART_WRITE
 13776 ;;		_I2C_DO_SEND_STOP
 13777 ;;		_I2C_MasterIsNack
 13778 ;;		_I2C_MasterSendTxData
 13779 ;;		_rd1RegCompleteHandler
 13780 ;;		_rd2RegCompleteHandler
 13781 ;;		_rdBlkRegCompleteHandler
 13782 ;;		_wr1RegCompleteHandler
 13783 ;;		_wr2RegCompleteHandler
 13784 ;; This function is called by:
 13785 ;;		_I2C_MasterFsm
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789     08D4                     _I2C_DO_TX:	
 13790                           ;psect for function _I2C_DO_TX
 13791                           
 13792     08D4                     i1l5481:	
 13793                           ;incstack = 0
 13794                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13795                           
 13796                           
 13797                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 13798     08D4  3192  22BA  3188   	fcall	_I2C_MasterIsNack
 13799     08D7  3A00               	xorlw	0
 13800     08D8  1903               	skipnz
 13801     08D9  28DB               	goto	u465_21
 13802     08DA  28DC               	goto	u465_20
 13803     08DB                     u465_21:
 13804     08DB  290B               	goto	i1l602
 13805     08DC                     u465_20:
 13806     08DC  28E9               	goto	i1l5499
 13807     08DD                     i1l5485:
 13808                           
 13809                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13810     08DD  3192  2288  3188   	fcall	_I2C_DO_SEND_RESTART_READ
 13811     08E0  292A               	goto	i1l605
 13812     08E1                     i1l5489:
 13813                           
 13814                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13815     08E1  3192  228D  3188   	fcall	_I2C_DO_SEND_RESTART_WRITE
 13816     08E4  292A               	goto	i1l605
 13817     08E5                     i1l5493:
 13818                           
 13819                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 13820     08E5  3192  2297  3188   	fcall	_I2C_DO_SEND_STOP
 13821     08E8  292A               	goto	i1l605
 13822     08E9                     i1l5499:
 13823     08E9  0022               	movlb	2	; select bank2
 13824     08EA  082F               	movf	(low ((_I2C_Status| (0+256)+15)))^0,w
 13825     08EB  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13826     08EC  3006               	movlw	6
 13827     08ED  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13828     08EE  0086               	movwf	6
 13829     08EF  3001               	movlw	1	; select bank2/3
 13830     08F0  0087               	movwf	7
 13831     08F1  3F41               	moviw [1]fsr1
 13832     08F2  008A               	movwf	10
 13833     08F3  3F40               	moviw [0]fsr1
 13834     08F4  000A               	callw
 13835     08F5  3188               	pagesel	$
 13836     08F6  00F8               	movwf	??_I2C_DO_TX
 13837     08F7  01F9               	clrf	??_I2C_DO_TX+1
 13838                           
 13839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13840                           ; Switch size 1, requested type "simple"
 13841                           ; Number of cases is 1, Range of values is 0 to 0
 13842                           ; switch strategies available:
 13843                           ; Name         Instructions Cycles
 13844                           ; simple_byte            4     3 (average)
 13845                           ; direct_byte            8     6 (fixed)
 13846                           ; jumptable            260     6 (fixed)
 13847                           ;	Chosen strategy is simple_byte
 13848     08F8  0879               	movf	??_I2C_DO_TX+1,w
 13849     08F9  3A00               	xorlw	0	; case 0
 13850     08FA  1903               	skipnz
 13851     08FB  28FD               	goto	i1l5903
 13852     08FC  28E5               	goto	i1l5493
 13853     08FD                     i1l5903:
 13854                           
 13855                           ; Switch size 1, requested type "simple"
 13856                           ; Number of cases is 4, Range of values is 1 to 4
 13857                           ; switch strategies available:
 13858                           ; Name         Instructions Cycles
 13859                           ; simple_byte           13     7 (average)
 13860                           ; direct_byte           17     9 (fixed)
 13861                           ; jumptable            263     9 (fixed)
 13862                           ;	Chosen strategy is simple_byte
 13863     08FD  0878               	movf	??_I2C_DO_TX,w
 13864     08FE  3A01               	xorlw	1	; case 1
 13865     08FF  1903               	skipnz
 13866     0900  28E5               	goto	i1l5493
 13867     0901  3A03               	xorlw	3	; case 2
 13868     0902  1903               	skipnz
 13869     0903  28DD               	goto	i1l5485
 13870     0904  3A01               	xorlw	1	; case 3
 13871     0905  1903               	skipnz
 13872     0906  28E1               	goto	i1l5489
 13873     0907  3A07               	xorlw	7	; case 4
 13874     0908  1903               	skipnz
 13875     0909  28E5               	goto	i1l5493
 13876     090A  28E5               	goto	i1l5493
 13877     090B                     i1l602:	
 13878                           ;mcc_generated_files/i2c_master.c: 372:     else
 13879                           
 13880                           
 13881                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 13882     090B  0022               	movlb	2	; select bank2
 13883     090C  103D               	bcf	(_I2C_Status^(0+256)+29),0
 13884     090D                     i1l5501:
 13885                           
 13886                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13887     090D  0838               	movf	((low ((_I2C_Status| (0+256)+23))+1))^0,w
 13888     090E  00F9               	movwf	??_I2C_DO_TX+1
 13889     090F  0837               	movf	(low ((_I2C_Status| (0+256)+23)))^0,w
 13890     0910  00F8               	movwf	??_I2C_DO_TX
 13891     0911  0AB7               	incf	(low ((_I2C_Status| (0+256)+23)))^0,f
 13892     0912  1903               	skipnz
 13893     0913  0AB8               	incf	((low ((_I2C_Status| (0+256)+23))+1))^0,f
 13894     0914  0878               	movf	??_I2C_DO_TX,w
 13895     0915  0086               	movwf	6
 13896     0916  0879               	movf	??_I2C_DO_TX+1,w
 13897     0917  0087               	movwf	7
 13898     0918  0801               	movf	1,w
 13899     0919  3192  227E  3188   	fcall	_I2C_MasterSendTxData
 13900     091C                     i1l5503:
 13901                           
 13902                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13903     091C  3001               	movlw	1
 13904     091D  0022               	movlb	2	; select bank2
 13905     091E  02B9               	subwf	(_I2C_Status^(0+256)+25),f
 13906     091F  3000               	movlw	0
 13907     0920  3BBA               	subwfb	((_I2C_Status+1)^(0+256)+25),f
 13908     0921  0839               	movf	(_I2C_Status^(0+256)+25),w
 13909     0922  043A               	iorwf	((_I2C_Status+1)^(0+256)+25),w
 13910     0923  1D03               	btfss	3,2
 13911     0924  2926               	goto	u466_21
 13912     0925  2927               	goto	u466_20
 13913     0926                     u466_21:
 13914     0926  2929               	goto	i1l5507
 13915     0927                     u466_20:
 13916     0927                     i1l5505:
 13917     0927  3006               	movlw	6
 13918     0928  292A               	goto	i1l605
 13919     0929                     i1l5507:
 13920     0929  3003               	movlw	3
 13921     092A                     i1l605:
 13922     092A  0008               	return
 13923     092B                     __end_of_I2C_DO_TX:
 13924                           
 13925                           	psect	text81
 13926     12C7                     __ptext81:	
 13927 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13928 ;; Defined at:
 13929 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 13930 ;; Parameters:    Size  Location     Type
 13931 ;;		None
 13932 ;; Auto vars:     Size  Location     Type
 13933 ;;		None
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  1    wreg      enum E3112
 13936 ;; Registers used:
 13937 ;;		wreg, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13943 ;;      Params:         0       0       0       0       0       0       0       0
 13944 ;;      Locals:         0       0       0       0       0       0       0       0
 13945 ;;      Temps:          0       0       0       0       0       0       0       0
 13946 ;;      Totals:         0       0       0       0       0       0       0       0
 13947 ;;Total ram usage:        0 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; Hardware stack levels required when called: 1
 13950 ;; This function calls:
 13951 ;;		_I2C_MasterSendTxData
 13952 ;; This function is called by:
 13953 ;;		_I2C_MasterFsm
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957     12C7                     _I2C_DO_SEND_ADR_WRITE:	
 13958                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 13959                           
 13960     12C7                     i1l4655:	
 13961                           ;incstack = 0
 13962                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13963                           
 13964                           
 13965                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 13966     12C7  0022               	movlb	2	; select bank2
 13967     12C8  143D               	bsf	(_I2C_Status^(0+256)+29),0
 13968     12C9                     i1l4657:
 13969                           
 13970                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 13971     12C9  3536               	lslf	(_I2C_Status^(0+256)+22),w
 13972     12CA  3192  227E  3192   	fcall	_I2C_MasterSendTxData
 13973     12CD                     i1l4659:
 13974                           
 13975                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 13976     12CD  3003               	movlw	3
 13977     12CE                     i1l599:
 13978     12CE  0008               	return
 13979     12CF                     __end_of_I2C_DO_SEND_ADR_WRITE:
 13980                           
 13981                           	psect	text82
 13982     12CF                     __ptext82:	
 13983 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 13984 ;; Defined at:
 13985 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;		None
 13988 ;; Auto vars:     Size  Location     Type
 13989 ;;		None
 13990 ;; Return value:  Size  Location     Type
 13991 ;;                  1    wreg      enum E3112
 13992 ;; Registers used:
 13993 ;;		wreg, status,2, status,0, pclath, cstack
 13994 ;; Tracked objects:
 13995 ;;		On entry : 0/0
 13996 ;;		On exit  : 0/0
 13997 ;;		Unchanged: 0/0
 13998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13999 ;;      Params:         0       0       0       0       0       0       0       0
 14000 ;;      Locals:         0       0       0       0       0       0       0       0
 14001 ;;      Temps:          0       0       0       0       0       0       0       0
 14002 ;;      Totals:         0       0       0       0       0       0       0       0
 14003 ;;Total ram usage:        0 bytes
 14004 ;; Hardware stack levels used: 1
 14005 ;; Hardware stack levels required when called: 1
 14006 ;; This function calls:
 14007 ;;		_I2C_MasterSendTxData
 14008 ;; This function is called by:
 14009 ;;		_I2C_MasterFsm
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013     12CF                     _I2C_DO_SEND_ADR_READ:	
 14014                           ;psect for function _I2C_DO_SEND_ADR_READ
 14015                           
 14016     12CF                     i1l4647:	
 14017                           ;incstack = 0
 14018                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14019                           
 14020                           
 14021                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 14022     12CF  0022               	movlb	2	; select bank2
 14023     12D0  143D               	bsf	(_I2C_Status^(0+256)+29),0
 14024     12D1                     i1l4649:
 14025                           
 14026                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 14027     12D1  1403               	setc
 14028     12D2  0D36               	rlf	(_I2C_Status^(0+256)+22),w
 14029     12D3  3192  227E  3192   	fcall	_I2C_MasterSendTxData
 14030     12D6                     i1l4651:
 14031                           
 14032                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 14033     12D6  3005               	movlw	5
 14034     12D7                     i1l596:
 14035     12D7  0008               	return
 14036     12D8                     __end_of_I2C_DO_SEND_ADR_READ:
 14037                           
 14038                           	psect	text83
 14039     1283                     __ptext83:	
 14040 ;; *************** function _I2C_DO_IDLE *****************
 14041 ;; Defined at:
 14042 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;		None
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;		None
 14047 ;; Return value:  Size  Location     Type
 14048 ;;                  1    wreg      enum E3112
 14049 ;; Registers used:
 14050 ;;		wreg, status,2
 14051 ;; Tracked objects:
 14052 ;;		On entry : 0/0
 14053 ;;		On exit  : 0/0
 14054 ;;		Unchanged: 0/0
 14055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14056 ;;      Params:         0       0       0       0       0       0       0       0
 14057 ;;      Locals:         0       0       0       0       0       0       0       0
 14058 ;;      Temps:          0       0       0       0       0       0       0       0
 14059 ;;      Totals:         0       0       0       0       0       0       0       0
 14060 ;;Total ram usage:        0 bytes
 14061 ;; Hardware stack levels used: 1
 14062 ;; This function calls:
 14063 ;;		Nothing
 14064 ;; This function is called by:
 14065 ;;		_I2C_MasterFsm
 14066 ;; This function uses a non-reentrant model
 14067 ;;
 14068                           
 14069     1283                     _I2C_DO_IDLE:	
 14070                           ;psect for function _I2C_DO_IDLE
 14071                           
 14072     1283                     i1l4639:	
 14073                           ;incstack = 0
 14074                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 14075                           
 14076                           
 14077                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 14078     1283  0022               	movlb	2	; select bank2
 14079     1284  10BD               	bcf	(_I2C_Status^(0+256)+29),1
 14080     1285                     i1l4641:
 14081                           
 14082                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 14083     1285  01BC               	clrf	(_I2C_Status^(0+256)+28)
 14084     1286                     i1l4643:
 14085                           
 14086                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 14087     1286  300E               	movlw	14
 14088     1287                     i1l593:
 14089     1287  0008               	return
 14090     1288                     __end_of_I2C_DO_IDLE:
 14091                           
 14092                           	psect	text84
 14093     16C1                     __ptext84:	
 14094 ;; *************** function _I2C_DO_TX_EMPTY *****************
 14095 ;; Defined at:
 14096 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      enum E3112
 14103 ;; Registers used:
 14104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14110 ;;      Params:         0       0       0       0       0       0       0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0
 14112 ;;      Temps:          2       0       0       0       0       0       0       0
 14113 ;;      Totals:         2       0       0       0       0       0       0       0
 14114 ;;Total ram usage:        2 bytes
 14115 ;; Hardware stack levels used: 1
 14116 ;; Hardware stack levels required when called: 3
 14117 ;; This function calls:
 14118 ;;		NULL
 14119 ;;		_I2C_CallbackReturnReset
 14120 ;;		_I2C_CallbackReturnStop
 14121 ;;		_I2C_DO_SEND_RESTART
 14122 ;;		_I2C_DO_SEND_STOP
 14123 ;;		_I2C_MasterSetIrq
 14124 ;;		_rd1RegCompleteHandler
 14125 ;;		_rd2RegCompleteHandler
 14126 ;;		_rdBlkRegCompleteHandler
 14127 ;;		_wr1RegCompleteHandler
 14128 ;;		_wr2RegCompleteHandler
 14129 ;; This function is called by:
 14130 ;;		_I2C_MasterFsm
 14131 ;; This function uses a non-reentrant model
 14132 ;;
 14133                           
 14134     16C1                     _I2C_DO_TX_EMPTY:	
 14135                           ;psect for function _I2C_DO_TX_EMPTY
 14136                           
 14137     16C1                     i1l5547:	
 14138                           ;incstack = 0
 14139                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14140                           
 14141                           
 14142                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 14143     16C1  0022               	movlb	2	; select bank2
 14144     16C2  15BD               	bsf	(_I2C_Status^(0+256)+29),3
 14145                           
 14146                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14147     16C3  2ED1               	goto	i1l5565
 14148     16C4                     i1l5549:
 14149                           
 14150                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 14151     16C4  3192  2292  3196   	fcall	_I2C_DO_SEND_RESTART
 14152     16C7  2EED               	goto	i1l636
 14153     16C8                     i1l5553:
 14154                           
 14155                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 14156     16C8  3192  224E  3196   	fcall	_I2C_MasterSetIrq
 14157     16CB                     i1l5555:
 14158                           
 14159                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 14160     16CB  3003               	movlw	3
 14161     16CC  2EED               	goto	i1l636
 14162     16CD                     i1l5559:
 14163                           
 14164                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 14165     16CD  3192  2297  3196   	fcall	_I2C_DO_SEND_STOP
 14166     16D0  2EED               	goto	i1l636
 14167     16D1                     i1l5565:
 14168     16D1  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 14169     16D2  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 14170     16D3  0821               	movf	(_I2C_Status+1)^(0+256),w
 14171     16D4  008A               	movwf	10
 14172     16D5  0820               	movf	_I2C_Status^(0+256),w
 14173     16D6  000A               	callw
 14174     16D7  3196               	pagesel	$
 14175     16D8  00F8               	movwf	??_I2C_DO_TX_EMPTY
 14176     16D9  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
 14177                           
 14178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14179                           ; Switch size 1, requested type "simple"
 14180                           ; Number of cases is 1, Range of values is 0 to 0
 14181                           ; switch strategies available:
 14182                           ; Name         Instructions Cycles
 14183                           ; simple_byte            4     3 (average)
 14184                           ; direct_byte            8     6 (fixed)
 14185                           ; jumptable            260     6 (fixed)
 14186                           ;	Chosen strategy is simple_byte
 14187     16DA  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
 14188     16DB  3A00               	xorlw	0	; case 0
 14189     16DC  1903               	skipnz
 14190     16DD  2EDF               	goto	i1l5905
 14191     16DE  2ECD               	goto	i1l5559
 14192     16DF                     i1l5905:
 14193                           
 14194                           ; Switch size 1, requested type "simple"
 14195                           ; Number of cases is 4, Range of values is 1 to 4
 14196                           ; switch strategies available:
 14197                           ; Name         Instructions Cycles
 14198                           ; simple_byte           13     7 (average)
 14199                           ; direct_byte           17     9 (fixed)
 14200                           ; jumptable            263     9 (fixed)
 14201                           ;	Chosen strategy is simple_byte
 14202     16DF  0878               	movf	??_I2C_DO_TX_EMPTY,w
 14203     16E0  3A01               	xorlw	1	; case 1
 14204     16E1  1903               	skipnz
 14205     16E2  2ECD               	goto	i1l5559
 14206     16E3  3A03               	xorlw	3	; case 2
 14207     16E4  1903               	skipnz
 14208     16E5  2EC4               	goto	i1l5549
 14209     16E6  3A01               	xorlw	1	; case 3
 14210     16E7  1903               	skipnz
 14211     16E8  2EC4               	goto	i1l5549
 14212     16E9  3A07               	xorlw	7	; case 4
 14213     16EA  1903               	skipnz
 14214     16EB  2EC8               	goto	i1l5553
 14215     16EC  2ECD               	goto	i1l5559
 14216     16ED                     i1l636:
 14217     16ED  0008               	return
 14218     16EE                     __end_of_I2C_DO_TX_EMPTY:
 14219                           
 14220                           	psect	text85
 14221     124E                     __ptext85:	
 14222 ;; *************** function _I2C_MasterSetIrq *****************
 14223 ;; Defined at:
 14224 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;		None
 14227 ;; Auto vars:     Size  Location     Type
 14228 ;;		None
 14229 ;; Return value:  Size  Location     Type
 14230 ;;                  1    wreg      void 
 14231 ;; Registers used:
 14232 ;;		None
 14233 ;; Tracked objects:
 14234 ;;		On entry : 0/0
 14235 ;;		On exit  : 0/0
 14236 ;;		Unchanged: 0/0
 14237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14238 ;;      Params:         0       0       0       0       0       0       0       0
 14239 ;;      Locals:         0       0       0       0       0       0       0       0
 14240 ;;      Temps:          0       0       0       0       0       0       0       0
 14241 ;;      Totals:         0       0       0       0       0       0       0       0
 14242 ;;Total ram usage:        0 bytes
 14243 ;; Hardware stack levels used: 1
 14244 ;; This function calls:
 14245 ;;		Nothing
 14246 ;; This function is called by:
 14247 ;;		_I2C_DO_TX_EMPTY
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251     124E                     _I2C_MasterSetIrq:	
 14252                           ;psect for function _I2C_MasterSetIrq
 14253                           
 14254     124E                     i1l3985:	
 14255                           ;incstack = 0
 14256                           ; Regs used in _I2C_MasterSetIrq: []
 14257                           
 14258                           
 14259                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 14260     124E  0020               	movlb	0	; select bank0
 14261     124F  1591               	bsf	17,3	;volatile
 14262     1250                     i1l756:
 14263     1250  0008               	return
 14264     1251                     __end_of_I2C_MasterSetIrq:
 14265                           
 14266                           	psect	text86
 14267     12BA                     __ptext86:	
 14268 ;; *************** function _I2C_MasterIsNack *****************
 14269 ;; Defined at:
 14270 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 14271 ;; Parameters:    Size  Location     Type
 14272 ;;		None
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;		None
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      _Bool 
 14277 ;; Registers used:
 14278 ;;		wreg, status,2, status,0
 14279 ;; Tracked objects:
 14280 ;;		On entry : 0/0
 14281 ;;		On exit  : 0/0
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14284 ;;      Params:         0       0       0       0       0       0       0       0
 14285 ;;      Locals:         0       0       0       0       0       0       0       0
 14286 ;;      Temps:          0       0       0       0       0       0       0       0
 14287 ;;      Totals:         0       0       0       0       0       0       0       0
 14288 ;;Total ram usage:        0 bytes
 14289 ;; Hardware stack levels used: 1
 14290 ;; This function calls:
 14291 ;;		Nothing
 14292 ;; This function is called by:
 14293 ;;		_I2C_MasterFsm
 14294 ;;		_I2C_DO_TX
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298     12BA                     _I2C_MasterIsNack:	
 14299                           ;psect for function _I2C_MasterIsNack
 14300                           
 14301     12BA                     i1l3935:	
 14302                           ;incstack = 0
 14303                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 14304                           
 14305                           
 14306                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 14307     12BA  0024               	movlb	4	; select bank4
 14308     12BB  0E16               	swapf	22,w	;volatile
 14309     12BC  0C89               	rrf	9,f
 14310     12BD  0C89               	rrf	9,f
 14311     12BE  3901               	andlw	1
 14312     12BF                     i1l729:
 14313     12BF  0008               	return
 14314     12C0                     __end_of_I2C_MasterIsNack:
 14315                           
 14316                           	psect	text87
 14317     127E                     __ptext87:	
 14318 ;; *************** function _I2C_MasterSendTxData *****************
 14319 ;; Defined at:
 14320 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  data            1    wreg     unsigned char 
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;  data            1    0[COMMON] unsigned char 
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		wreg
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14334 ;;      Params:         0       0       0       0       0       0       0       0
 14335 ;;      Locals:         1       0       0       0       0       0       0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0
 14337 ;;      Totals:         1       0       0       0       0       0       0       0
 14338 ;;Total ram usage:        1 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; This function calls:
 14341 ;;		Nothing
 14342 ;; This function is called by:
 14343 ;;		_I2C_DO_SEND_ADR_READ
 14344 ;;		_I2C_DO_SEND_ADR_WRITE
 14345 ;;		_I2C_DO_TX
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349     127E                     _I2C_MasterSendTxData:	
 14350                           ;psect for function _I2C_MasterSendTxData
 14351                           
 14352                           
 14353                           ;incstack = 0
 14354                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 14355                           ;I2C_MasterSendTxData@data stored from wreg
 14356     127E  00F0               	movwf	I2C_MasterSendTxData@data
 14357     127F                     i1l3939:
 14358                           
 14359                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 14360     127F  0870               	movf	I2C_MasterSendTxData@data,w
 14361     1280  0024               	movlb	4	; select bank4
 14362     1281  0091               	movwf	17	;volatile
 14363     1282                     i1l711:
 14364     1282  0008               	return
 14365     1283                     __end_of_I2C_MasterSendTxData:
 14366                           
 14367                           	psect	text88
 14368     1272                     __ptext88:	
 14369 ;; *************** function _I2C_MasterSendAck *****************
 14370 ;; Defined at:
 14371 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;		None
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;		None
 14376 ;; Return value:  Size  Location     Type
 14377 ;;                  1    wreg      void 
 14378 ;; Registers used:
 14379 ;;		None
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14385 ;;      Params:         0       0       0       0       0       0       0       0
 14386 ;;      Locals:         0       0       0       0       0       0       0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0
 14388 ;;      Totals:         0       0       0       0       0       0       0       0
 14389 ;;Total ram usage:        0 bytes
 14390 ;; Hardware stack levels used: 1
 14391 ;; This function calls:
 14392 ;;		Nothing
 14393 ;; This function is called by:
 14394 ;;		_I2C_DO_RX
 14395 ;;		_I2C_DO_RX_ACK
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399     1272                     _I2C_MasterSendAck:	
 14400                           ;psect for function _I2C_MasterSendAck
 14401                           
 14402     1272                     i1l3963:	
 14403                           ;incstack = 0
 14404                           ; Regs used in _I2C_MasterSendAck: []
 14405                           
 14406                           
 14407                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 14408     1272  0024               	movlb	4	; select bank4
 14409     1273  1296               	bcf	22,5	;volatile
 14410                           
 14411                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 14412     1274  1616               	bsf	22,4	;volatile
 14413     1275                     i1l732:
 14414     1275  0008               	return
 14415     1276                     __end_of_I2C_MasterSendAck:
 14416                           
 14417                           	psect	text89
 14418     124B                     __ptext89:	
 14419 ;; *************** function _I2C_MasterGetRxData *****************
 14420 ;; Defined at:
 14421 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 14422 ;; Parameters:    Size  Location     Type
 14423 ;;		None
 14424 ;; Auto vars:     Size  Location     Type
 14425 ;;		None
 14426 ;; Return value:  Size  Location     Type
 14427 ;;                  1    wreg      unsigned char 
 14428 ;; Registers used:
 14429 ;;		wreg
 14430 ;; Tracked objects:
 14431 ;;		On entry : 0/0
 14432 ;;		On exit  : 0/0
 14433 ;;		Unchanged: 0/0
 14434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14435 ;;      Params:         0       0       0       0       0       0       0       0
 14436 ;;      Locals:         0       0       0       0       0       0       0       0
 14437 ;;      Temps:          0       0       0       0       0       0       0       0
 14438 ;;      Totals:         0       0       0       0       0       0       0       0
 14439 ;;Total ram usage:        0 bytes
 14440 ;; Hardware stack levels used: 1
 14441 ;; This function calls:
 14442 ;;		Nothing
 14443 ;; This function is called by:
 14444 ;;		_I2C_DO_RX
 14445 ;; This function uses a non-reentrant model
 14446 ;;
 14447                           
 14448     124B                     _I2C_MasterGetRxData:	
 14449                           ;psect for function _I2C_MasterGetRxData
 14450                           
 14451     124B                     i1l3959:	
 14452                           ;incstack = 0
 14453                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 14454                           
 14455                           
 14456                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 14457     124B  0024               	movlb	4	; select bank4
 14458     124C  0811               	movf	17,w	;volatile
 14459     124D                     i1l708:
 14460     124D  0008               	return
 14461     124E                     __end_of_I2C_MasterGetRxData:
 14462                           
 14463                           	psect	text90
 14464     126E                     __ptext90:	
 14465 ;; *************** function _I2C_MasterSendNack *****************
 14466 ;; Defined at:
 14467 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;		None
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;		None
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  1    wreg      void 
 14474 ;; Registers used:
 14475 ;;		None
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14481 ;;      Params:         0       0       0       0       0       0       0       0
 14482 ;;      Locals:         0       0       0       0       0       0       0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0       0
 14484 ;;      Totals:         0       0       0       0       0       0       0       0
 14485 ;;Total ram usage:        0 bytes
 14486 ;; Hardware stack levels used: 1
 14487 ;; This function calls:
 14488 ;;		Nothing
 14489 ;; This function is called by:
 14490 ;;		_I2C_DO_RX_NACK_STOP
 14491 ;;		_I2C_DO_RX_NACK_RESTART
 14492 ;; This function uses a non-reentrant model
 14493 ;;
 14494                           
 14495     126E                     _I2C_MasterSendNack:	
 14496                           ;psect for function _I2C_MasterSendNack
 14497                           
 14498     126E                     i1l3753:	
 14499                           ;incstack = 0
 14500                           ; Regs used in _I2C_MasterSendNack: []
 14501                           
 14502                           
 14503                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 14504     126E  0024               	movlb	4	; select bank4
 14505     126F  1696               	bsf	22,5	;volatile
 14506                           
 14507                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 14508     1270  1616               	bsf	22,4	;volatile
 14509     1271                     i1l735:
 14510     1271  0008               	return
 14511     1272                     __end_of_I2C_MasterSendNack:
 14512                           
 14513                           	psect	text91
 14514     1248                     __ptext91:	
 14515 ;; *************** function _I2C_MasterStartRx *****************
 14516 ;; Defined at:
 14517 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;		None
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;		None
 14522 ;; Return value:  Size  Location     Type
 14523 ;;                  1    wreg      void 
 14524 ;; Registers used:
 14525 ;;		None
 14526 ;; Tracked objects:
 14527 ;;		On entry : 0/0
 14528 ;;		On exit  : 0/0
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14531 ;;      Params:         0       0       0       0       0       0       0       0
 14532 ;;      Locals:         0       0       0       0       0       0       0       0
 14533 ;;      Temps:          0       0       0       0       0       0       0       0
 14534 ;;      Totals:         0       0       0       0       0       0       0       0
 14535 ;;Total ram usage:        0 bytes
 14536 ;; Hardware stack levels used: 1
 14537 ;; This function calls:
 14538 ;;		Nothing
 14539 ;; This function is called by:
 14540 ;;		_I2C_DO_RCEN
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544     1248                     _I2C_MasterStartRx:	
 14545                           ;psect for function _I2C_MasterStartRx
 14546                           
 14547     1248                     i1l3977:	
 14548                           ;incstack = 0
 14549                           ; Regs used in _I2C_MasterStartRx: []
 14550                           
 14551                           
 14552                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 14553     1248  0024               	movlb	4	; select bank4
 14554     1249  1596               	bsf	22,3	;volatile
 14555     124A                     i1l720:
 14556     124A  0008               	return
 14557     124B                     __end_of_I2C_MasterStartRx:
 14558                           
 14559                           	psect	text92
 14560     0002                     __ptext92:	
 14561 ;; *************** function _I2C_CallbackReturnReset *****************
 14562 ;; Defined at:
 14563 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;  funPtr          1    7[COMMON] PTR void 
 14566 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14567 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      enum E363
 14572 ;; Registers used:
 14573 ;;		wreg
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14579 ;;      Params:         1       0       0       0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0
 14582 ;;      Totals:         1       0       0       0       0       0       0       0
 14583 ;;Total ram usage:        1 bytes
 14584 ;; Hardware stack levels used: 1
 14585 ;; This function calls:
 14586 ;;		Nothing
 14587 ;; This function is called by:
 14588 ;;		_I2C_Open
 14589 ;;		_I2C_DO_TX
 14590 ;;		_I2C_DO_RX
 14591 ;;		_I2C_DO_TX_EMPTY
 14592 ;;		_I2C_DO_ADDRESS_NACK
 14593 ;;		_I2C_DO_RX_EMPTY
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597     0002                     _I2C_CallbackReturnReset:	
 14598                           ;psect for function _I2C_CallbackReturnReset
 14599                           
 14600     0002                     i1l3991:	
 14601                           ;incstack = 0
 14602                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 14603                           
 14604                           
 14605                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 14606     0002  3005               	movlw	5
 14607     0003                     i1l692:
 14608     0003  0008               	return
 14609     0004                     __end_of_I2C_CallbackReturnReset:
 14610                           
 14611                           	psect	text93
 14612     1240                     __ptext93:	
 14613 ;; *************** function _I2C_CallbackReturnStop *****************
 14614 ;; Defined at:
 14615 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  funPtr          1    7[COMMON] PTR void 
 14618 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14619 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;		None
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  1    wreg      enum E363
 14624 ;; Registers used:
 14625 ;;		wreg
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14631 ;;      Params:         1       0       0       0       0       0       0       0
 14632 ;;      Locals:         0       0       0       0       0       0       0       0
 14633 ;;      Temps:          0       0       0       0       0       0       0       0
 14634 ;;      Totals:         1       0       0       0       0       0       0       0
 14635 ;;Total ram usage:        1 bytes
 14636 ;; Hardware stack levels used: 1
 14637 ;; This function calls:
 14638 ;;		Nothing
 14639 ;; This function is called by:
 14640 ;;		_I2C_Open
 14641 ;;		_I2C_SetCallback
 14642 ;;		i1_I2C_SetCallback
 14643 ;;		_I2C_DO_TX
 14644 ;;		_I2C_DO_RX
 14645 ;;		_I2C_DO_TX_EMPTY
 14646 ;;		_I2C_DO_ADDRESS_NACK
 14647 ;;		_I2C_DO_RX_EMPTY
 14648 ;; This function uses a non-reentrant model
 14649 ;;
 14650                           
 14651     1240                     _I2C_CallbackReturnStop:	
 14652                           ;psect for function _I2C_CallbackReturnStop
 14653                           
 14654     1240                     i1l3987:	
 14655                           ;incstack = 0
 14656                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 14657                           
 14658                           
 14659                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 14660     1240  3001               	movlw	1
 14661     1241                     i1l689:
 14662     1241  0008               	return
 14663     1242                     __end_of_I2C_CallbackReturnStop:
 14664                           
 14665                           	psect	text94
 14666     14AC                     __ptext94:	
 14667 ;; *************** function _rdBlkRegCompleteHandler *****************
 14668 ;; Defined at:
 14669 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14670 ;; Parameters:    Size  Location     Type
 14671 ;;  ptr             1    7[COMMON] PTR void 
 14672 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14673 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14674 ;; Auto vars:     Size  Location     Type
 14675 ;;		None
 14676 ;; Return value:  Size  Location     Type
 14677 ;;                  1    wreg      enum E363
 14678 ;; Registers used:
 14679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14685 ;;      Params:         1       0       0       0       0       0       0       0
 14686 ;;      Locals:         0       0       0       0       0       0       0       0
 14687 ;;      Temps:          0       0       0       0       0       0       0       0
 14688 ;;      Totals:         1       0       0       0       0       0       0       0
 14689 ;;Total ram usage:        1 bytes
 14690 ;; Hardware stack levels used: 1
 14691 ;; Hardware stack levels required when called: 2
 14692 ;; This function calls:
 14693 ;;		_I2C_SetDataCompleteCallback
 14694 ;;		i1_I2C_SetBuffer
 14695 ;; This function is called by:
 14696 ;;		_I2C_ReadDataBlock
 14697 ;;		_I2C_DO_TX
 14698 ;;		_I2C_DO_RX
 14699 ;;		_I2C_DO_TX_EMPTY
 14700 ;;		_I2C_DO_ADDRESS_NACK
 14701 ;;		_I2C_DO_RX_EMPTY
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705     14AC                     _rdBlkRegCompleteHandler:	
 14706                           ;psect for function _rdBlkRegCompleteHandler
 14707                           
 14708     14AC                     i1l5475:	
 14709                           ;incstack = 0
 14710                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14711                           
 14712                           
 14713                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14714     14AC  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14715     14AD  3E02               	addlw	2
 14716     14AE  0086               	movwf	6
 14717     14AF  0187               	clrf	7
 14718     14B0  0801               	movf	1,w
 14719     14B1  00F0               	movwf	i1I2C_SetBuffer@buffer
 14720     14B2  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 14721     14B3  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14722     14B4  0086               	movwf	6
 14723     14B5  0187               	clrf	7
 14724     14B6  3F40               	moviw [0]fsr1
 14725     14B7  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 14726     14B8  3F41               	moviw [1]fsr1
 14727     14B9  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 14728     14BA  3193  239F  3194   	fcall	i1_I2C_SetBuffer
 14729                           
 14730                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14731     14BD  3000               	movlw	0
 14732     14BE  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14733     14BF  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14734     14C0  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14735     14C1  3193  233E  3194   	fcall	_I2C_SetDataCompleteCallback
 14736     14C4                     i1l5477:
 14737                           
 14738                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14739     14C4  3002               	movlw	2
 14740     14C5                     i1l104:
 14741     14C5  0008               	return
 14742     14C6                     __end_of_rdBlkRegCompleteHandler:
 14743                           
 14744                           	psect	text95
 14745     142A                     __ptext95:	
 14746 ;; *************** function _wr1RegCompleteHandler *****************
 14747 ;; Defined at:
 14748 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;  ptr             1    7[COMMON] PTR void 
 14751 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14752 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;		None
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      enum E363
 14757 ;; Registers used:
 14758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14764 ;;      Params:         1       0       0       0       0       0       0       0
 14765 ;;      Locals:         0       0       0       0       0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0       0
 14767 ;;      Totals:         1       0       0       0       0       0       0       0
 14768 ;;Total ram usage:        1 bytes
 14769 ;; Hardware stack levels used: 1
 14770 ;; Hardware stack levels required when called: 2
 14771 ;; This function calls:
 14772 ;;		_I2C_SetDataCompleteCallback
 14773 ;;		i1_I2C_SetBuffer
 14774 ;; This function is called by:
 14775 ;;		_I2C_Write1ByteRegister
 14776 ;;		_I2C_DO_TX
 14777 ;;		_I2C_DO_RX
 14778 ;;		_I2C_DO_TX_EMPTY
 14779 ;;		_I2C_DO_ADDRESS_NACK
 14780 ;;		_I2C_DO_RX_EMPTY
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784     142A                     _wr1RegCompleteHandler:	
 14785                           ;psect for function _wr1RegCompleteHandler
 14786                           
 14787     142A                     i1l5459:	
 14788                           ;incstack = 0
 14789                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14790                           
 14791                           
 14792                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14793     142A  0877               	movf	wr1RegCompleteHandler@ptr,w
 14794     142B  00F0               	movwf	i1I2C_SetBuffer@buffer
 14795     142C  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 14796     142D  3001               	movlw	1
 14797     142E  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 14798     142F  3000               	movlw	0
 14799     1430  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 14800     1431  3193  239F  3194   	fcall	i1_I2C_SetBuffer
 14801     1434                     i1l5461:
 14802                           
 14803                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14804     1434  3000               	movlw	0
 14805     1435  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14806     1436  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14807     1437  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14808     1438  3193  233E  3194   	fcall	_I2C_SetDataCompleteCallback
 14809     143B                     i1l5463:
 14810                           
 14811                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14812     143B  3004               	movlw	4
 14813     143C                     i1l98:
 14814     143C  0008               	return
 14815     143D                     __end_of_wr1RegCompleteHandler:
 14816                           
 14817                           	psect	text96
 14818     1417                     __ptext96:	
 14819 ;; *************** function _rd2RegCompleteHandler *****************
 14820 ;; Defined at:
 14821 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;  ptr             1    7[COMMON] PTR void 
 14824 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14825 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;		None
 14828 ;; Return value:  Size  Location     Type
 14829 ;;                  1    wreg      enum E363
 14830 ;; Registers used:
 14831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14832 ;; Tracked objects:
 14833 ;;		On entry : 0/0
 14834 ;;		On exit  : 0/0
 14835 ;;		Unchanged: 0/0
 14836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14837 ;;      Params:         1       0       0       0       0       0       0       0
 14838 ;;      Locals:         0       0       0       0       0       0       0       0
 14839 ;;      Temps:          0       0       0       0       0       0       0       0
 14840 ;;      Totals:         1       0       0       0       0       0       0       0
 14841 ;;Total ram usage:        1 bytes
 14842 ;; Hardware stack levels used: 1
 14843 ;; Hardware stack levels required when called: 2
 14844 ;; This function calls:
 14845 ;;		_I2C_SetDataCompleteCallback
 14846 ;;		i1_I2C_SetBuffer
 14847 ;; This function is called by:
 14848 ;;		_I2C_Read2ByteRegister
 14849 ;;		_I2C_DO_TX
 14850 ;;		_I2C_DO_RX
 14851 ;;		_I2C_DO_TX_EMPTY
 14852 ;;		_I2C_DO_ADDRESS_NACK
 14853 ;;		_I2C_DO_RX_EMPTY
 14854 ;; This function uses a non-reentrant model
 14855 ;;
 14856                           
 14857     1417                     _rd2RegCompleteHandler:	
 14858                           ;psect for function _rd2RegCompleteHandler
 14859                           
 14860     1417                     i1l5451:	
 14861                           ;incstack = 0
 14862                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14863                           
 14864                           
 14865                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14866     1417  0877               	movf	rd2RegCompleteHandler@ptr,w
 14867     1418  00F0               	movwf	i1I2C_SetBuffer@buffer
 14868     1419  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 14869     141A  3002               	movlw	2
 14870     141B  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 14871     141C  3000               	movlw	0
 14872     141D  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 14873     141E  3193  239F  3194   	fcall	i1_I2C_SetBuffer
 14874     1421                     i1l5453:
 14875                           
 14876                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14877     1421  3000               	movlw	0
 14878     1422  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14879     1423  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14880     1424  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14881     1425  3193  233E  3194   	fcall	_I2C_SetDataCompleteCallback
 14882     1428                     i1l5455:
 14883                           
 14884                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14885     1428  3002               	movlw	2
 14886     1429                     i1l95:
 14887     1429  0008               	return
 14888     142A                     __end_of_rd2RegCompleteHandler:
 14889                           
 14890                           	psect	text97
 14891     1404                     __ptext97:	
 14892 ;; *************** function _rd1RegCompleteHandler *****************
 14893 ;; Defined at:
 14894 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;  ptr             1    7[COMMON] PTR void 
 14897 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14898 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      enum E363
 14903 ;; Registers used:
 14904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14910 ;;      Params:         1       0       0       0       0       0       0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0
 14912 ;;      Temps:          0       0       0       0       0       0       0       0
 14913 ;;      Totals:         1       0       0       0       0       0       0       0
 14914 ;;Total ram usage:        1 bytes
 14915 ;; Hardware stack levels used: 1
 14916 ;; Hardware stack levels required when called: 2
 14917 ;; This function calls:
 14918 ;;		_I2C_SetDataCompleteCallback
 14919 ;;		i1_I2C_SetBuffer
 14920 ;; This function is called by:
 14921 ;;		_I2C_Read1ByteRegister
 14922 ;;		_I2C_DO_TX
 14923 ;;		_I2C_DO_RX
 14924 ;;		_I2C_DO_TX_EMPTY
 14925 ;;		_I2C_DO_ADDRESS_NACK
 14926 ;;		_I2C_DO_RX_EMPTY
 14927 ;; This function uses a non-reentrant model
 14928 ;;
 14929                           
 14930     1404                     _rd1RegCompleteHandler:	
 14931                           ;psect for function _rd1RegCompleteHandler
 14932                           
 14933     1404                     i1l5443:	
 14934                           ;incstack = 0
 14935                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14936                           
 14937                           
 14938                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14939     1404  0877               	movf	rd1RegCompleteHandler@ptr,w
 14940     1405  00F0               	movwf	i1I2C_SetBuffer@buffer
 14941     1406  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 14942     1407  3001               	movlw	1
 14943     1408  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 14944     1409  3000               	movlw	0
 14945     140A  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 14946     140B  3193  239F  3194   	fcall	i1_I2C_SetBuffer
 14947     140E                     i1l5445:
 14948                           
 14949                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14950     140E  3000               	movlw	0
 14951     140F  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14952     1410  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14953     1411  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14954     1412  3193  233E  3194   	fcall	_I2C_SetDataCompleteCallback
 14955     1415                     i1l5447:
 14956                           
 14957                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14958     1415  3002               	movlw	2
 14959     1416                     i1l92:
 14960     1416  0008               	return
 14961     1417                     __end_of_rd1RegCompleteHandler:
 14962                           
 14963                           	psect	text98
 14964     13F1                     __ptext98:	
 14965 ;; *************** function _wr2RegCompleteHandler *****************
 14966 ;; Defined at:
 14967 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14968 ;; Parameters:    Size  Location     Type
 14969 ;;  ptr             1    7[COMMON] PTR void 
 14970 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14971 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14972 ;; Auto vars:     Size  Location     Type
 14973 ;;		None
 14974 ;; Return value:  Size  Location     Type
 14975 ;;                  1    wreg      enum E363
 14976 ;; Registers used:
 14977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14978 ;; Tracked objects:
 14979 ;;		On entry : 0/0
 14980 ;;		On exit  : 0/0
 14981 ;;		Unchanged: 0/0
 14982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14983 ;;      Params:         1       0       0       0       0       0       0       0
 14984 ;;      Locals:         0       0       0       0       0       0       0       0
 14985 ;;      Temps:          0       0       0       0       0       0       0       0
 14986 ;;      Totals:         1       0       0       0       0       0       0       0
 14987 ;;Total ram usage:        1 bytes
 14988 ;; Hardware stack levels used: 1
 14989 ;; Hardware stack levels required when called: 2
 14990 ;; This function calls:
 14991 ;;		_I2C_SetDataCompleteCallback
 14992 ;;		i1_I2C_SetBuffer
 14993 ;; This function is called by:
 14994 ;;		_I2C_Write2ByteRegister
 14995 ;;		_I2C_DO_TX
 14996 ;;		_I2C_DO_RX
 14997 ;;		_I2C_DO_TX_EMPTY
 14998 ;;		_I2C_DO_ADDRESS_NACK
 14999 ;;		_I2C_DO_RX_EMPTY
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003     13F1                     _wr2RegCompleteHandler:	
 15004                           ;psect for function _wr2RegCompleteHandler
 15005                           
 15006     13F1                     i1l5467:	
 15007                           ;incstack = 0
 15008                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15009                           
 15010                           
 15011                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 15012     13F1  0877               	movf	wr2RegCompleteHandler@ptr,w
 15013     13F2  00F0               	movwf	i1I2C_SetBuffer@buffer
 15014     13F3  01F1               	clrf	i1I2C_SetBuffer@buffer+1
 15015     13F4  3002               	movlw	2
 15016     13F5  00F2               	movwf	i1I2C_SetBuffer@bufferSize
 15017     13F6  3000               	movlw	0
 15018     13F7  00F3               	movwf	i1I2C_SetBuffer@bufferSize+1
 15019     13F8  3193  239F  3193   	fcall	i1_I2C_SetBuffer
 15020     13FB                     i1l5469:
 15021                           
 15022                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15023     13FB  3000               	movlw	0
 15024     13FC  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 15025     13FD  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 15026     13FE  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 15027     13FF  3193  233E  3193   	fcall	_I2C_SetDataCompleteCallback
 15028     1402                     i1l5471:
 15029                           
 15030                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 15031     1402  3004               	movlw	4
 15032     1403                     i1l101:
 15033     1403  0008               	return
 15034     1404                     __end_of_wr2RegCompleteHandler:
 15035                           
 15036                           	psect	text99
 15037     139F                     __ptext99:	
 15038 ;; *************** function i1_I2C_SetBuffer *****************
 15039 ;; Defined at:
 15040 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  buffer          2    0[COMMON] PTR void 
 15043 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15044 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15045 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15046 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15047 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15048 ;;  bufferSize      2    2[COMMON] unsigned int 
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;		None
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      void 
 15053 ;; Registers used:
 15054 ;;		wreg
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15060 ;;      Params:         4       0       0       0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0
 15063 ;;      Totals:         4       0       0       0       0       0       0       0
 15064 ;;Total ram usage:        4 bytes
 15065 ;; Hardware stack levels used: 1
 15066 ;; This function calls:
 15067 ;;		Nothing
 15068 ;; This function is called by:
 15069 ;;		_rd1RegCompleteHandler
 15070 ;;		_rd2RegCompleteHandler
 15071 ;;		_wr1RegCompleteHandler
 15072 ;;		_wr2RegCompleteHandler
 15073 ;;		_rdBlkRegCompleteHandler
 15074 ;; This function uses a non-reentrant model
 15075 ;;
 15076                           
 15077     139F                     i1_I2C_SetBuffer:	
 15078                           ;psect for function i1_I2C_SetBuffer
 15079                           
 15080     139F                     i1l5417:	
 15081                           ;incstack = 0
 15082                           ; Regs used in i1_I2C_SetBuffer: [wreg]
 15083                           
 15084                           
 15085                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 15086     139F  0022               	movlb	2	; select bank2
 15087     13A0  1DBD               	btfss	(_I2C_Status^(0+256)+29),3
 15088     13A1  2BA3               	goto	u460_21
 15089     13A2  2BA4               	goto	u460_20
 15090     13A3                     u460_21:
 15091     13A3  2BAD               	goto	i1l560
 15092     13A4                     u460_20:
 15093     13A4                     i1l5419:
 15094                           
 15095                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 15096     13A4  0871               	movf	i1I2C_SetBuffer@buffer+1,w
 15097     13A5  00B8               	movwf	((low ((_I2C_Status| (0+256)+23))+1))^0
 15098     13A6  0870               	movf	i1I2C_SetBuffer@buffer,w
 15099     13A7  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
 15100                           
 15101                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 15102     13A8  0873               	movf	i1I2C_SetBuffer@bufferSize+1,w
 15103     13A9  00BA               	movwf	((_I2C_Status+1)^(0+256)+25)
 15104     13AA  0872               	movf	i1I2C_SetBuffer@bufferSize,w
 15105     13AB  00B9               	movwf	(_I2C_Status^(0+256)+25)
 15106     13AC                     i1l5421:
 15107                           
 15108                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 15109     13AC  11BD               	bcf	(_I2C_Status^(0+256)+29),3
 15110     13AD                     i1l560:
 15111     13AD  0008               	return
 15112     13AE                     __end_ofi1_I2C_SetBuffer:
 15113                           
 15114                           	psect	text100
 15115     133E                     __ptext100:	
 15116 ;; *************** function _I2C_SetDataCompleteCallback *****************
 15117 ;; Defined at:
 15118 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 15121 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15122 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15123 ;;  ptr             1    6[COMMON] PTR void 
 15124 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15125 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  1    wreg      void 
 15130 ;; Registers used:
 15131 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15137 ;;      Params:         3       0       0       0       0       0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0
 15140 ;;      Totals:         3       0       0       0       0       0       0       0
 15141 ;;Total ram usage:        3 bytes
 15142 ;; Hardware stack levels used: 1
 15143 ;; Hardware stack levels required when called: 1
 15144 ;; This function calls:
 15145 ;;		i1_I2C_SetCallback
 15146 ;; This function is called by:
 15147 ;;		_rd1RegCompleteHandler
 15148 ;;		_rd2RegCompleteHandler
 15149 ;;		_wr1RegCompleteHandler
 15150 ;;		_wr2RegCompleteHandler
 15151 ;;		_rdBlkRegCompleteHandler
 15152 ;;		_I2C_Read1ByteRegister
 15153 ;;		_I2C_Read2ByteRegister
 15154 ;;		_I2C_Write1ByteRegister
 15155 ;;		_I2C_Write2ByteRegister
 15156 ;;		_I2C_ReadDataBlock
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160     133E                     _I2C_SetDataCompleteCallback:	
 15161                           ;psect for function _I2C_SetDataCompleteCallback
 15162                           
 15163     133E                     i1l3713:	
 15164                           ;incstack = 0
 15165                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15166                           
 15167                           
 15168                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15169     133E  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
 15170     133F  00F1               	movwf	i1I2C_SetCallback@cb+1
 15171     1340  0874               	movf	I2C_SetDataCompleteCallback@cb,w
 15172     1341  00F0               	movwf	i1I2C_SetCallback@cb
 15173     1342  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
 15174     1343  00F2               	movwf	i1I2C_SetCallback@ptr
 15175     1344  3000               	movlw	0
 15176     1345  3195  259F  3193   	fcall	i1_I2C_SetCallback
 15177     1348                     i1l563:
 15178     1348  0008               	return
 15179     1349                     __end_of_I2C_SetDataCompleteCallback:
 15180                           
 15181                           	psect	text101
 15182     159F                     __ptext101:	
 15183 ;; *************** function i1_I2C_SetCallback *****************
 15184 ;; Defined at:
 15185 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;  idx             1    wreg     enum E3130
 15188 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 15189 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15190 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15191 ;;  ptr             1    2[COMMON] PTR void 
 15192 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15193 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  idx             1    3[COMMON] enum E3130
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  1    wreg      void 
 15198 ;; Registers used:
 15199 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15205 ;;      Params:         3       0       0       0       0       0       0       0
 15206 ;;      Locals:         1       0       0       0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0
 15208 ;;      Totals:         4       0       0       0       0       0       0       0
 15209 ;;Total ram usage:        4 bytes
 15210 ;; Hardware stack levels used: 1
 15211 ;; This function calls:
 15212 ;;		Nothing
 15213 ;; This function is called by:
 15214 ;;		_I2C_SetDataCompleteCallback
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218     159F                     i1_I2C_SetCallback:	
 15219                           ;psect for function i1_I2C_SetCallback
 15220                           
 15221                           
 15222                           ;incstack = 0
 15223                           ; Regs used in i1_I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15224                           ;i1I2C_SetCallback@idx stored from wreg
 15225     159F  00F3               	movwf	i1I2C_SetCallback@idx
 15226     15A0                     i1l3671:
 15227                           
 15228                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 15229     15A0  0870               	movf	i1I2C_SetCallback@cb,w
 15230     15A1  0471               	iorwf	i1I2C_SetCallback@cb+1,w
 15231     15A2  1903               	btfsc	3,2
 15232     15A3  2DA5               	goto	u248_21
 15233     15A4  2DA6               	goto	u248_20
 15234     15A5                     u248_21:
 15235     15A5  2DB7               	goto	i1l3675
 15236     15A6                     u248_20:
 15237     15A6                     i1l3673:
 15238                           
 15239                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15240     15A6  3573               	lslf	i1I2C_SetCallback@idx,w
 15241     15A7  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15242     15A8  0086               	movwf	6
 15243     15A9  3001               	movlw	1	; select bank2/3
 15244     15AA  0087               	movwf	7
 15245     15AB  0870               	movf	i1I2C_SetCallback@cb,w
 15246     15AC  3FC0               	movwi [0]fsr1
 15247     15AD  0871               	movf	i1I2C_SetCallback@cb+1,w
 15248     15AE  3FC1               	movwi [1]fsr1
 15249                           
 15250                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 15251     15AF  0873               	movf	i1I2C_SetCallback@idx,w
 15252     15B0  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15253     15B1  0086               	movwf	6
 15254     15B2  3001               	movlw	1	; select bank2/3
 15255     15B3  0087               	movwf	7
 15256     15B4  0872               	movf	i1I2C_SetCallback@ptr,w
 15257     15B5  0081               	movwf	1
 15258                           
 15259                           ;mcc_generated_files/i2c_master.c: 310:     }
 15260     15B6  2DC6               	goto	i1l583
 15261     15B7                     i1l3675:
 15262                           
 15263                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15264     15B7  3573               	lslf	i1I2C_SetCallback@idx,w
 15265     15B8  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15266     15B9  0086               	movwf	6
 15267     15BA  3001               	movlw	1	; select bank2/3
 15268     15BB  0087               	movwf	7
 15269     15BC  3040               	movlw	low _I2C_CallbackReturnStop
 15270     15BD  3FC0               	movwi [0]fsr1
 15271     15BE  3012               	movlw	high _I2C_CallbackReturnStop
 15272     15BF  3FC1               	movwi [1]fsr1
 15273                           
 15274                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15275     15C0  0873               	movf	i1I2C_SetCallback@idx,w
 15276     15C1  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15277     15C2  0086               	movwf	6
 15278     15C3  3001               	movlw	1	; select bank2/3
 15279     15C4  0087               	movwf	7
 15280     15C5  0181               	clrf	1
 15281     15C6                     i1l583:
 15282     15C6  0008               	return
 15283     15C7                     __end_ofi1_I2C_SetCallback:
 15284                           
 15285                           	psect	text102
 15286     1245                     __ptext102:	
 15287 ;; *************** function _I2C_MasterStop *****************
 15288 ;; Defined at:
 15289 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 15290 ;; Parameters:    Size  Location     Type
 15291 ;;		None
 15292 ;; Auto vars:     Size  Location     Type
 15293 ;;		None
 15294 ;; Return value:  Size  Location     Type
 15295 ;;                  1    wreg      void 
 15296 ;; Registers used:
 15297 ;;		None
 15298 ;; Tracked objects:
 15299 ;;		On entry : 0/0
 15300 ;;		On exit  : 0/0
 15301 ;;		Unchanged: 0/0
 15302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15303 ;;      Params:         0       0       0       0       0       0       0       0
 15304 ;;      Locals:         0       0       0       0       0       0       0       0
 15305 ;;      Temps:          0       0       0       0       0       0       0       0
 15306 ;;      Totals:         0       0       0       0       0       0       0       0
 15307 ;;Total ram usage:        0 bytes
 15308 ;; Hardware stack levels used: 1
 15309 ;; This function calls:
 15310 ;;		Nothing
 15311 ;; This function is called by:
 15312 ;;		_I2C_DO_SEND_STOP
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316     1245                     _I2C_MasterStop:	
 15317                           ;psect for function _I2C_MasterStop
 15318                           
 15319     1245                     i1l3751:	
 15320                           ;incstack = 0
 15321                           ; Regs used in _I2C_MasterStop: []
 15322                           
 15323                           
 15324                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 15325     1245  0024               	movlb	4	; select bank4
 15326     1246  1516               	bsf	22,2	;volatile
 15327     1247                     i1l726:
 15328     1247  0008               	return
 15329     1248                     __end_of_I2C_MasterStop:
 15330                           
 15331                           	psect	text103
 15332     1242                     __ptext103:	
 15333 ;; *************** function _I2C_MasterEnableRestart *****************
 15334 ;; Defined at:
 15335 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;		None
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;		None
 15340 ;; Return value:  Size  Location     Type
 15341 ;;                  1    wreg      void 
 15342 ;; Registers used:
 15343 ;;		None
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15349 ;;      Params:         0       0       0       0       0       0       0       0
 15350 ;;      Locals:         0       0       0       0       0       0       0       0
 15351 ;;      Temps:          0       0       0       0       0       0       0       0
 15352 ;;      Totals:         0       0       0       0       0       0       0       0
 15353 ;;Total ram usage:        0 bytes
 15354 ;; Hardware stack levels used: 1
 15355 ;; This function calls:
 15356 ;;		Nothing
 15357 ;; This function is called by:
 15358 ;;		_I2C_DO_SEND_RESTART_READ
 15359 ;;		_I2C_DO_SEND_RESTART_WRITE
 15360 ;;		_I2C_DO_SEND_RESTART
 15361 ;;		_I2C_DO_RX_EMPTY
 15362 ;; This function uses a non-reentrant model
 15363 ;;
 15364                           
 15365     1242                     _I2C_MasterEnableRestart:	
 15366                           ;psect for function _I2C_MasterEnableRestart
 15367                           
 15368     1242                     i1l3749:	
 15369                           ;incstack = 0
 15370                           ; Regs used in _I2C_MasterEnableRestart: []
 15371                           
 15372                           
 15373                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 15374     1242  0024               	movlb	4	; select bank4
 15375     1243  1496               	bsf	22,1	;volatile
 15376     1244                     i1l714:
 15377     1244  0008               	return
 15378     1245                     __end_of_I2C_MasterEnableRestart:
 15379                           
 15380                           	psect	text104
 15381     1535                     __ptext104:	
 15382 ;; *************** function _EUSART_Transmit_ISR *****************
 15383 ;; Defined at:
 15384 ;;		line 206 in file "mcc_generated_files/eusart.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;		None
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;		None
 15389 ;; Return value:  Size  Location     Type
 15390 ;;                  1    wreg      void 
 15391 ;; Registers used:
 15392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15393 ;; Tracked objects:
 15394 ;;		On entry : 0/0
 15395 ;;		On exit  : 0/0
 15396 ;;		Unchanged: 0/0
 15397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15398 ;;      Params:         0       0       0       0       0       0       0       0
 15399 ;;      Locals:         0       0       0       0       0       0       0       0
 15400 ;;      Temps:          1       0       0       0       0       0       0       0
 15401 ;;      Totals:         1       0       0       0       0       0       0       0
 15402 ;;Total ram usage:        1 bytes
 15403 ;; Hardware stack levels used: 1
 15404 ;; This function calls:
 15405 ;;		Nothing
 15406 ;; This function is called by:
 15407 ;;		_EUSART_Initialize
 15408 ;;		_INTERRUPT_InterruptManager
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412     1535                     _EUSART_Transmit_ISR:	
 15413                           ;psect for function _EUSART_Transmit_ISR
 15414                           
 15415     1535                     i1l5053:	
 15416                           ;incstack = 0
 15417                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15418                           
 15419                           
 15420                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15421     1535  3008               	movlw	8
 15422     1536  0020               	movlb	0	; select bank0
 15423     1537  026D               	subwf	_eusartTxBufferRemaining,w	;volatile
 15424     1538  1803               	skipnc
 15425     1539  2D3B               	goto	u431_21
 15426     153A  2D3C               	goto	u431_20
 15427     153B                     u431_21:
 15428     153B  2D55               	goto	i1l321
 15429     153C                     u431_20:
 15430     153C                     i1l5055:
 15431                           
 15432                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 15433     153C  086E               	movf	_eusartTxTail,w
 15434     153D  3E4E               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15435     153E  0086               	movwf	6
 15436     153F  3001               	movlw	1	; select bank2/3
 15437     1540  0087               	movwf	7
 15438     1541  0801               	movf	1,w
 15439     1542  0023               	movlb	3	; select bank3
 15440     1543  009A               	movwf	26	;volatile
 15441     1544                     i1l5057:
 15442     1544  3001               	movlw	1
 15443     1545  00F0               	movwf	??_EUSART_Transmit_ISR
 15444     1546  0870               	movf	??_EUSART_Transmit_ISR,w
 15445     1547  0020               	movlb	0	; select bank0
 15446     1548  07EE               	addwf	_eusartTxTail,f	;volatile
 15447     1549                     i1l5059:
 15448                           
 15449                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15450     1549  3008               	movlw	8
 15451     154A  026E               	subwf	_eusartTxTail,w	;volatile
 15452     154B  1C03               	skipc
 15453     154C  2D4E               	goto	u432_21
 15454     154D  2D4F               	goto	u432_20
 15455     154E                     u432_21:
 15456     154E  2D50               	goto	i1l5063
 15457     154F                     u432_20:
 15458     154F                     i1l5061:
 15459                           
 15460                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 15461     154F  01EE               	clrf	_eusartTxTail	;volatile
 15462     1550                     i1l5063:
 15463                           
 15464                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 15465     1550  3001               	movlw	1
 15466     1551  00F0               	movwf	??_EUSART_Transmit_ISR
 15467     1552  0870               	movf	??_EUSART_Transmit_ISR,w
 15468     1553  07ED               	addwf	_eusartTxBufferRemaining,f	;volatile
 15469                           
 15470                           ;mcc_generated_files/eusart.c: 218:     }
 15471     1554  2D57               	goto	i1l324
 15472     1555                     i1l321:	
 15473                           ;mcc_generated_files/eusart.c: 219:     else
 15474                           
 15475                           
 15476                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 15477     1555  0021               	movlb	1	; select bank1
 15478     1556  1211               	bcf	17,4	;volatile
 15479     1557                     i1l324:
 15480     1557  0008               	return
 15481     1558                     __end_of_EUSART_Transmit_ISR:
 15482                           
 15483                           	psect	text105
 15484     16EE                     __ptext105:	
 15485 ;; *************** function _EUSART_Receive_ISR *****************
 15486 ;; Defined at:
 15487 ;;		line 225 in file "mcc_generated_files/eusart.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15496 ;; Tracked objects:
 15497 ;;		On entry : 0/0
 15498 ;;		On exit  : 0/0
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15501 ;;      Params:         0       0       0       0       0       0       0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0
 15504 ;;      Totals:         0       0       0       0       0       0       0       0
 15505 ;;Total ram usage:        0 bytes
 15506 ;; Hardware stack levels used: 1
 15507 ;; Hardware stack levels required when called: 2
 15508 ;; This function calls:
 15509 ;;		NULL
 15510 ;;		_EUSART_DefaultErrorHandler
 15511 ;;		_EUSART_DefaultFramingErrorHandler
 15512 ;;		_EUSART_DefaultOverrunErrorHandler
 15513 ;;		_EUSART_RxDataHandler
 15514 ;; This function is called by:
 15515 ;;		_EUSART_Initialize
 15516 ;;		_INTERRUPT_InterruptManager
 15517 ;; This function uses a non-reentrant model
 15518 ;;
 15519                           
 15520     16EE                     _EUSART_Receive_ISR:	
 15521                           ;psect for function _EUSART_Receive_ISR
 15522                           
 15523     16EE                     i1l5065:	
 15524                           ;incstack = 0
 15525                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15526                           
 15527                           
 15528                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15529     16EE  0020               	movlb	0	; select bank0
 15530     16EF  086C               	movf	_eusartRxHead,w	;volatile
 15531     16F0  3E3E               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15532     16F1  0086               	movwf	6
 15533     16F2  3001               	movlw	1	; select bank2/3
 15534     16F3  0087               	movwf	7
 15535     16F4  0181               	clrf	1
 15536     16F5                     i1l5067:
 15537                           
 15538                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 15539     16F5  0023               	movlb	3	; select bank3
 15540     16F6  1D1D               	btfss	29,2	;volatile
 15541     16F7  2EF9               	goto	u433_21
 15542     16F8  2EFA               	goto	u433_20
 15543     16F9                     u433_21:
 15544     16F9  2F07               	goto	i1l5073
 15545     16FA                     u433_20:
 15546     16FA                     i1l5069:
 15547                           
 15548                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15549     16FA  0020               	movlb	0	; select bank0
 15550     16FB  086C               	movf	_eusartRxHead,w	;volatile
 15551     16FC  3E3E               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15552     16FD  0086               	movwf	6
 15553     16FE  3001               	movlw	1	; select bank2/3
 15554     16FF  0087               	movwf	7
 15555     1700  1481               	bsf	1,1
 15556     1701                     i1l5071:
 15557                           
 15558                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 15559     1701  0021               	movlb	1	; select bank1
 15560     1702  0866               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 15561     1703  008A               	movwf	10
 15562     1704  0865               	movf	_EUSART_FramingErrorHandler^(0+128),w
 15563     1705  000A               	callw
 15564     1706  3196               	pagesel	$
 15565     1707                     i1l5073:
 15566                           
 15567                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 15568     1707  0023               	movlb	3	; select bank3
 15569     1708  1C9D               	btfss	29,1	;volatile
 15570     1709  2F0B               	goto	u434_21
 15571     170A  2F0C               	goto	u434_20
 15572     170B                     u434_21:
 15573     170B  2F19               	goto	i1l5079
 15574     170C                     u434_20:
 15575     170C                     i1l5075:
 15576                           
 15577                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15578     170C  0020               	movlb	0	; select bank0
 15579     170D  086C               	movf	_eusartRxHead,w	;volatile
 15580     170E  3E3E               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15581     170F  0086               	movwf	6
 15582     1710  3001               	movlw	1	; select bank2/3
 15583     1711  0087               	movwf	7
 15584     1712  1501               	bsf	1,2
 15585     1713                     i1l5077:
 15586                           
 15587                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 15588     1713  0021               	movlb	1	; select bank1
 15589     1714  0864               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 15590     1715  008A               	movwf	10
 15591     1716  0863               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 15592     1717  000A               	callw
 15593     1718  3196               	pagesel	$
 15594     1719                     i1l5079:
 15595                           
 15596                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15597     1719  0020               	movlb	0	; select bank0
 15598     171A  086C               	movf	_eusartRxHead,w	;volatile
 15599     171B  3E3E               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15600     171C  0086               	movwf	6
 15601     171D  3001               	movlw	1	; select bank2/3
 15602     171E  0087               	movwf	7
 15603     171F  0801               	movf	1,w
 15604     1720  1903               	btfsc	3,2
 15605     1721  2F23               	goto	u435_21
 15606     1722  2F24               	goto	u435_20
 15607     1723                     u435_21:
 15608     1723  2F2B               	goto	i1l5083
 15609     1724                     u435_20:
 15610     1724                     i1l5081:
 15611                           
 15612                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 15613     1724  0021               	movlb	1	; select bank1
 15614     1725  0862               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 15615     1726  008A               	movwf	10
 15616     1727  0861               	movf	_EUSART_ErrorHandler^(0+128),w
 15617     1728  000A               	callw
 15618     1729  3196               	pagesel	$
 15619                           
 15620                           ;mcc_generated_files/eusart.c: 242:     } else {
 15621     172A  2F2E               	goto	i1l331
 15622     172B                     i1l5083:
 15623                           
 15624                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 15625     172B  3194  2492  3196   	fcall	_EUSART_RxDataHandler
 15626     172E                     i1l331:
 15627     172E  0008               	return
 15628     172F                     __end_of_EUSART_Receive_ISR:
 15629                           
 15630                           	psect	text106
 15631     126A                     __ptext106:	
 15632 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15633 ;; Defined at:
 15634 ;;		line 261 in file "mcc_generated_files/eusart.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;		None
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  1    wreg      void 
 15641 ;; Registers used:
 15642 ;;		None
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15648 ;;      Params:         0       0       0       0       0       0       0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0
 15650 ;;      Temps:          0       0       0       0       0       0       0       0
 15651 ;;      Totals:         0       0       0       0       0       0       0       0
 15652 ;;Total ram usage:        0 bytes
 15653 ;; Hardware stack levels used: 1
 15654 ;; This function calls:
 15655 ;;		Nothing
 15656 ;; This function is called by:
 15657 ;;		_EUSART_Initialize
 15658 ;;		_EUSART_Receive_ISR
 15659 ;; This function uses a non-reentrant model
 15660 ;;
 15661                           
 15662     126A                     _EUSART_DefaultOverrunErrorHandler:	
 15663                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15664                           
 15665     126A                     i1l4931:	
 15666                           ;incstack = 0
 15667                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15668                           
 15669                           
 15670                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 15671     126A  0023               	movlb	3	; select bank3
 15672     126B  121D               	bcf	29,4	;volatile
 15673                           
 15674                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 15675     126C  161D               	bsf	29,4	;volatile
 15676     126D                     i1l341:
 15677     126D  0008               	return
 15678     126E                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15679                           
 15680                           	psect	text107
 15681     123E                     __ptext107:	
 15682 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15683 ;; Defined at:
 15684 ;;		line 259 in file "mcc_generated_files/eusart.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;		None
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		None
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15698 ;;      Params:         0       0       0       0       0       0       0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0
 15700 ;;      Temps:          0       0       0       0       0       0       0       0
 15701 ;;      Totals:         0       0       0       0       0       0       0       0
 15702 ;;Total ram usage:        0 bytes
 15703 ;; Hardware stack levels used: 1
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_EUSART_Initialize
 15708 ;;		_EUSART_Receive_ISR
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712     123E                     _EUSART_DefaultFramingErrorHandler:	
 15713                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15714                           
 15715     123E                     i1l338:	
 15716                           ;incstack = 0
 15717                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15718                           
 15719     123E  0008               	return
 15720     123F                     __end_of_EUSART_DefaultFramingErrorHandler:
 15721                           
 15722                           	psect	text108
 15723     1266                     __ptext108:	
 15724 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15725 ;; Defined at:
 15726 ;;		line 269 in file "mcc_generated_files/eusart.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;		None
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15740 ;;      Params:         0       0       0       0       0       0       0       0
 15741 ;;      Locals:         0       0       0       0       0       0       0       0
 15742 ;;      Temps:          0       0       0       0       0       0       0       0
 15743 ;;      Totals:         0       0       0       0       0       0       0       0
 15744 ;;Total ram usage:        0 bytes
 15745 ;; Hardware stack levels used: 1
 15746 ;; Hardware stack levels required when called: 1
 15747 ;; This function calls:
 15748 ;;		_EUSART_RxDataHandler
 15749 ;; This function is called by:
 15750 ;;		_EUSART_Initialize
 15751 ;;		_EUSART_Receive_ISR
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755     1266                     _EUSART_DefaultErrorHandler:	
 15756                           ;psect for function _EUSART_DefaultErrorHandler
 15757                           
 15758     1266                     i1l4933:	
 15759                           ;incstack = 0
 15760                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15761                           
 15762                           
 15763                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 15764     1266  3194  2492  3192   	fcall	_EUSART_RxDataHandler
 15765     1269                     i1l344:
 15766     1269  0008               	return
 15767     126A                     __end_of_EUSART_DefaultErrorHandler:
 15768                           
 15769                           	psect	text109
 15770     1492                     __ptext109:	
 15771 ;; *************** function _EUSART_RxDataHandler *****************
 15772 ;; Defined at:
 15773 ;;		line 249 in file "mcc_generated_files/eusart.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;		None
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  1    wreg      void 
 15780 ;; Registers used:
 15781 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15782 ;; Tracked objects:
 15783 ;;		On entry : 0/0
 15784 ;;		On exit  : 0/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15787 ;;      Params:         0       0       0       0       0       0       0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0
 15789 ;;      Temps:          1       0       0       0       0       0       0       0
 15790 ;;      Totals:         1       0       0       0       0       0       0       0
 15791 ;;Total ram usage:        1 bytes
 15792 ;; Hardware stack levels used: 1
 15793 ;; This function calls:
 15794 ;;		Nothing
 15795 ;; This function is called by:
 15796 ;;		_EUSART_Receive_ISR
 15797 ;;		_EUSART_DefaultErrorHandler
 15798 ;; This function uses a non-reentrant model
 15799 ;;
 15800                           
 15801     1492                     _EUSART_RxDataHandler:	
 15802                           ;psect for function _EUSART_RxDataHandler
 15803                           
 15804     1492                     i1l4627:	
 15805                           ;incstack = 0
 15806                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15807                           
 15808                           
 15809                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 15810     1492  0020               	movlb	0	; select bank0
 15811     1493  086C               	movf	_eusartRxHead,w
 15812     1494  3E46               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15813     1495  0086               	movwf	6
 15814     1496  3001               	movlw	1	; select bank2/3
 15815     1497  0087               	movwf	7
 15816     1498  0023               	movlb	3	; select bank3
 15817     1499  0819               	movf	25,w	;volatile
 15818     149A  0081               	movwf	1
 15819     149B                     i1l4629:
 15820     149B  3001               	movlw	1
 15821     149C  00F0               	movwf	??_EUSART_RxDataHandler
 15822     149D  0870               	movf	??_EUSART_RxDataHandler,w
 15823     149E  0020               	movlb	0	; select bank0
 15824     149F  07EC               	addwf	_eusartRxHead,f	;volatile
 15825     14A0                     i1l4631:
 15826                           
 15827                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15828     14A0  3008               	movlw	8
 15829     14A1  026C               	subwf	_eusartRxHead,w	;volatile
 15830     14A2  1C03               	skipc
 15831     14A3  2CA5               	goto	u397_21
 15832     14A4  2CA6               	goto	u397_20
 15833     14A5                     u397_21:
 15834     14A5  2CA7               	goto	i1l4635
 15835     14A6                     u397_20:
 15836     14A6                     i1l4633:
 15837                           
 15838                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 15839     14A6  01EC               	clrf	_eusartRxHead	;volatile
 15840     14A7                     i1l4635:
 15841                           
 15842                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 15843     14A7  3001               	movlw	1
 15844     14A8  00F0               	movwf	??_EUSART_RxDataHandler
 15845     14A9  0870               	movf	??_EUSART_RxDataHandler,w
 15846     14AA  07EA               	addwf	_eusartRxCount,f	;volatile
 15847     14AB                     i1l335:
 15848     14AB  0008               	return
 15849     14AC                     __end_of_EUSART_RxDataHandler:
 15850     007E                     btemp	set	126	;btemp
 15851     007E                     int$flags	set	126
 15852     007E                     wtemp0	set	126
 15853     2138                     
 15854                           	psect	idloc
 15855                           
 15856                           ;Config register IDLOC0 @ 0x8000
 15857                           ;	unspecified, using default values
 15858     8000                     	org	32768
 15859     8000  3FFF               	dw	16383
 15860                           
 15861                           ;Config register IDLOC1 @ 0x8001
 15862                           ;	unspecified, using default values
 15863     8001                     	org	32769
 15864     8001  3FFF               	dw	16383
 15865                           
 15866                           ;Config register IDLOC2 @ 0x8002
 15867                           ;	unspecified, using default values
 15868     8002                     	org	32770
 15869     8002  3FFF               	dw	16383
 15870                           
 15871                           ;Config register IDLOC3 @ 0x8003
 15872                           ;	unspecified, using default values
 15873     8003                     	org	32771
 15874     8003  3FFF               	dw	16383
 15875                           
 15876                           	psect	config
 15877                           
 15878                           ;Config register CONFIG1 @ 0x8007
 15879                           ;	Oscillator Selection
 15880                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15881                           ;	Watchdog Timer Enable
 15882                           ;	WDTE = ON, WDT enabled
 15883                           ;	Power-up Timer Enable
 15884                           ;	PWRTE = OFF, PWRT disabled
 15885                           ;	MCLR Pin Function Select
 15886                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15887                           ;	Flash Program Memory Code Protection
 15888                           ;	CP = OFF, Program memory code protection is disabled
 15889                           ;	Data Memory Code Protection
 15890                           ;	CPD = OFF, Data memory code protection is disabled
 15891                           ;	Brown-out Reset Enable
 15892                           ;	BOREN = ON, Brown-out Reset enabled
 15893                           ;	Clock Out Enable
 15894                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15895                           ;	Internal/External Switchover
 15896                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15897                           ;	Fail-Safe Clock Monitor Enable
 15898                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15899     8007                     	org	32775
 15900     8007  3FFC               	dw	16380
 15901                           
 15902                           ;Config register CONFIG2 @ 0x8008
 15903                           ;	Flash Memory Self-Write Protection
 15904                           ;	WRT = OFF, Write protection off
 15905                           ;	Voltage Regulator Capacitor Enable
 15906                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
 15907                           ;	PLL Enable
 15908                           ;	PLLEN = ON, 4x PLL enabled
 15909                           ;	Stack Overflow/Underflow Reset Enable
 15910                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15911                           ;	Brown-out Reset Voltage Selection
 15912                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15913                           ;	Low-Voltage Programming Enable
 15914                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 15915     8008                     	org	32776
 15916     8008  1FDF               	dw	8159

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         96
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     73      80
    BANK1            80     55      80
    BANK2            80      0      74
    BANK3            72      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2421$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2426	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2421	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2420	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S872$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ModbusRTU_Slave_Poll@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    ModbusSlaveF04@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    S1524$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1524$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1524$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK2[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S872$data_ptr	PTR unsigned char  size(2) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK2[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK2[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S872$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S872$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), NULL(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Transmit_ISR(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> SHT30_CMD_MEASURE_H_Enable(BANK2[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->i1_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _llabs->_Get_millis
    _ReadData->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _I2C_WriteNBytes->_I2C_SetAddressNackCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_ReadNBytes->_I2C_Open
    _I2C_ReadNBytes->_I2C_SetBuffer
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterRead->_I2C_MasterOperation
    _ModbusSlave_Process->_ModbusRTU_Slave_Poll
    _ModbusRTU_Slave_Poll->_ModbusSlaveF04
    _validateRequest->_Modbus_calcCRC
    _Modbus_getRxBuff->_EUSART_Read
    _ModbusSlaveF04->_Modbus_sendTxBuff
    _Modbus_sendTxBuff->_Modbus_calcCRC
    _App_Init->_Device_Init
    _Tick_Init_SES->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _App_Process->_Task_Sensor
    _Task_Sensor->_ReadData
    _ReadData->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17812
                           _App_Init
                        _App_Process
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _App_Process                                          0     0      0   16618
                     _Task_Indicator
                            _Task_MB
                        _Task_Sensor
 ---------------------------------------------------------------------------------
 (2) _Task_Sensor                                         12    12      0   14384
                                             43 BANK1     12    12      0
                         _Get_millis
                           _ReadData
                              _llabs
 ---------------------------------------------------------------------------------
 (3) _llabs                                                8     0      8     142
                                              4 BANK0      8     0      8
                         _Get_millis (ARG)
 ---------------------------------------------------------------------------------
 (3) _ReadData                                            30    30      0   14242
                                             13 BANK1     30    30      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3177
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2566
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      4     1      3    3754
                                              8 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1818
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      4     1      3     862
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadNBytes                                       4     1      3    1936
                                              4 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1427
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     166
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterRead                                       0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      46
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Task_MB                                              0     0      0    2234
                   _ModbusSlave_Init
                _ModbusSlave_Process
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Process                                  1     1      0    2212
               _ModbusRTU_Slave_Poll
 ---------------------------------------------------------------------------------
 (4) _ModbusRTU_Slave_Poll                                14    12      2    2210
                                             52 BANK0     14    12      2
                         _Get_millis
                     _ModbusSlaveF04
                   _Modbus_getRxBuff
                  _Modbus_sendTxBuff
                     _buildException
                    _validateRequest
 ---------------------------------------------------------------------------------
 (5) _validateRequest                                     17    17      0     393
                                             15 BANK0     17    17      0
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (5) _buildException                                       3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _Modbus_getRxBuff                                     8     8      0      48
                                              2 BANK0      8     8      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ModbusSlaveF04                                      23    21      2     847
                                             30 BANK0     22    20      2
                  _Modbus_sendTxBuff
 ---------------------------------------------------------------------------------
 (5) _Modbus_sendTxBuff                                   15    15      0     435
                                             15 BANK0     15    15      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                         _Get_millis
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (6) _Modbus_calcCRC                                      15    13      2     277
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (3) _Get_millis                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Init                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Task_Indicator                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     530
                        _Device_Init
                    _TMR1_StartTimer
                      _Tick_Init_SES
 ---------------------------------------------------------------------------------
 (2) _Tick_Init_SES                                        0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Device_Init                                          4     4      0     356
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   42650
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (11) _rtcc_handle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   42410
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       2     2      0   42410
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i1_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i1_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0   10586
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0   10608
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0   10586
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0   10586
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               1     0      1    2058
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               1     0      1    2058
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             1     0      1    2089
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               1     0      1    2058
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               1     0      1    2058
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (13) i1_I2C_SetBuffer                                     4     0      4     257
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (13) _I2C_SetDataCompleteCallback                         3     0      3    1770
                                              4 COMMON     3     0      3
                  i1_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetCallback                                   4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Device_Init
     _TMR1_StartTimer
     _Tick_Init_SES
       _TMR1_SetInterruptHandler
   _App_Process
     _Task_Indicator
     _Task_MB
       _ModbusSlave_Init
       _ModbusSlave_Process
         _ModbusRTU_Slave_Poll
           _Get_millis
           _ModbusSlaveF04
             _Modbus_sendTxBuff
               _EUSART_Write
               _EUSART_is_tx_done
               _Get_millis
               _Modbus_calcCRC
           _Modbus_getRxBuff
             _EUSART_Read
           _Modbus_sendTxBuff
           _buildException
           _validateRequest
             _Modbus_calcCRC
     _Task_Sensor
       _Get_millis
       _ReadData
         _I2C_ReadNBytes
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterRead
             _I2C_MasterOperation
               _I2C_MasterStart
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterEnableIrq
             _I2C_MasterOpen
             _I2C_SetInterruptHandler
           _I2C_SetBuffer
         _I2C_WriteNBytes
           _I2C_Close
           _I2C_MasterWrite
             _I2C_MasterOperation
           _I2C_Open
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___fltol
         ___xxtofl
       _llabs
         _Get_millis (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
             i1_I2C_SetCallback
           i1_I2C_SetBuffer
         _rd2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _rdBlkRegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i1_I2C_MasterClearIrq *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     37      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4A      10       92.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               48      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      F8      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri May 26 15:49:09 2023

                            _Modbus_sendTxBuff 06EA                           ?_ModbusSlave_Process 0070  
                ?_EUSART_SetRxInterruptHandler 0020                         ??_I2C_DO_SEND_ADR_READ 0070  
                                 ___fldiv@aexp 00AC                                   ___fldiv@bexp 00AB  
                                 ___fldiv@sign 00A4                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                             ?_Modbus_sendTxBuff 0070  
                                           l71 083A                                             l80 157A  
                      buildException@exception 0021                                  _ReadData$2418 00C3  
                                _ReadData$2419 00C7                          ??_I2C_DO_SEND_RESTART 0070  
                          __Umul8_16@word_mpld 0026                                            l303 1695  
                                          l135 1516                                            l312 166A  
                                          l171 1360                                            l308 1648  
                                          l421 12E0                                            l309 1652  
                                          l165 1462                                            l350 1304  
                                          l174 07FF                                            l168 135B  
                                          l353 12F2                                            l347 12FB  
                                          l356 1316                                            l284 1772  
                                          l293 127D                                            l541 14FA  
                                          l533 131F                                            l550 12B4  
                                          l702 080C                                            l391 1256  
                                          l359 130D                                            l560 1479  
                                          l705 125C                                            l537 17B8  
                                          l553 12B9                                            l723 1262  
                                          l547 1534                                            l388 1491  
                                          l750 125F                                            l822 04E1  
                                          l583 1640                                            l831 0BE0  
                                          l744 1265                                            l753 1259  
                                          l569 1354                                            l578 12E9  
                                          l860 07D0                                            l925 0C84  
                                          l941 0B49                                            l871 07E2  
                                          l928 16C0                                            l873 07FB  
                                          l937 0986                                            l858 07CE  
                                          l786 13B6                                            l883 0A53  
                                          l971 07AC                                            l869 07E0  
                                          l973 07CC                                            l949 0DFB  
                                          l886 1333                                            l982 09E5  
                                          l879 0A53                                            l991 08D3  
                                          l959 0742                                            l889 133D  
                                          l986 08AF                                            l994 14DF  
                                          l989 08B2                            __end_of_App_Process 133E  
                              _timer1ReloadVal 007C                         ??_EUSART_RxDataHandler 0070  
                          ??_Modbus_sendTxBuff 002F                 ?_EUSART_SetFramingErrorHandler 0020  
                                          wreg 0009                                   ___flmul@aexp 0040  
                                 ___flmul@bexp 0041                            __end_of_Device_Init 0A54  
                 ??_I2C_SetAddressNackCallback 0028                                   ___flmul@sign 003B  
                                 ___flmul@temp 0046                                   ___flmul@prod 0042  
                                 ?_EUSART_Read 0070                       ??_I2C_CallbackReturnStop 0078  
                                 _I2C_DO_RESET 12AB                                   ___fltol@exp1 0029  
                              ?_buildException 0070                                           l1001 144F  
                                         l1012 13F0                                           l1018 13DE  
                      ??_rd2RegCompleteHandler 0078                                           l1500 0689  
                                         l1511 06E2                                           l1503 06C0  
                                         l1512 06E9                                           l4001 0D41  
                                         l1362 0AC4                                           l1611 0D2F  
                                         l1372 0AC4                                           l4021 0D94  
                                         l4005 0D43                                           l4101 04E6  
                                         l1541 0F74                                           l1525 0E5F  
                                         l1622 0CFB                                           l4023 0D99  
                                         l4007 0D4D                                           l4015 0D64  
                                         l4111 04F7                                           l4103 04E8  
                                         l1527 0FFF                                           l1623 0D07  
                                         l1615 0CE1                                           l1631 17FF  
                                         l5001 0A06                                           l4041 0DC2  
                                         l4033 0DAD                                           l4025 0D9E  
                                         l4009 0D53                                           l1473 05B5  
                                         l4121 050D                                           l4113 04FF  
                                         l4105 04EC                                           l1369 0AAF  
                                         l1609 0CA8                                           l1490 0645  
                                         l1482 06E9                                           l1546 0FC7  
                                         l5011 0A1D                                           l5003 0A0B  
                                         l4043 0DC7                                           l4027 0DA4  
                                         l4211 05DB                                           l4203 05C7  
                                         l1475 0593                                           l4131 051B  
                                         l4123 0513                                           l4115 0500  
                                         l4107 04ED                                           l1547 0FE5  
                                         l1571 0250                                           l1628 17FF  
                                         l5021 0A34                                           l5013 0A22  
                                         l5005 0A0E                                           l3501 127A  
                                         l4045 0DCC                                           l4053 0DDC  
                                         l4029 0DAA                                           l4213 05DD  
                                         l4205 05CF                                           l4221 05EF  
                                         l1469 0538                                           l4133 0520  
                                         l4141 0530                                           l4125 0514  
                                         l4109 04F2                                           l4117 0502  
                                         l1549 0FF4                                           l4301 0E0C  
                                         l1565 02D0                                           l1494 0667  
                                         l5031 0A4B                                           l5023 0A39  
                                         l5007 0A13                                           l5015 0A25  
                                         l3511 1653                                           l4055 0DEC  
                                         l4047 0DD3                                           l4039 0DBD  
                                         l4223 0605                                           l4231 063D  
                                         l4215 05E1                                           l4207 05D3  
                                         l4151 054A                                           l4143 053E  
                                         l4135 0525                                           l4127 0516  
                                         l4119 050A                                           l4303 0E12  
                                         l4311 0E24                                           l4071 0A78  
                                         l4063 0A54                                           l1584 158E  
                                         l5033 0A50                                           l5017 0A2A  
                                         l5025 0A3C                                           l5009 0A18  
                                         l3513 165B                                           l3521 1668  
                                         l3505 1643                                           l4057 0DF2  
                                         l4049 0DDA                                           l5041 1443  
                                         l3601 080B                                           l4241 0662  
                                         l4233 064D                                           l4225 0629  
                                         l4217 05E2                                           l4209 05D7  
                                         l4161 0554                                           l4153 054C  
                                         l4145 0542                                           l4137 052D  
                                         l4129 051A                                           l4321 0E3E  
                                         l4313 0E2D                                           l4305 0E17  
                                         l1577 02C4                                           l4073 0A79  
                                         l4065 0A5E                                           l1586 159E  
                                         l5027 0A41                                           l5019 0A2F  
                                         l5035 13DF                                           l3515 165F  
                                         l3507 1643                                           l3531 098D  
                                         l5043 1448                                           l3523 1260  
                                         l3611 1519                                           l4251 0675  
                                         l4243 0666                                           l4235 0652  
                                         l4227 062F                                           l4219 05EA  
                                         l4171 055E                                           l4163 0556  
                                         l4155 054E                                           l4147 0546  
                                         l4139 052E                                           l4411 0FA4  
                                         l4403 0F79                                           l4323 0E44  
                                         l4331 0E56                                           l4315 0E33  
                                         l4307 0E20                                           l4075 0A81  
                                         l5029 0A46                                           l5037 13E8  
                                         l3517 1665                                           l3509 164D  
                                         l3525 13CE                                           l3533 0990  
                                         l5045 144C                                           l3621 152C  
                                         l3613 1520                                           l3605 1263  
                                         l4261 0686                                           l4245 066B  
                                         l4253 0677                                           l4229 0634  
                                         l4181 057C                                           l4173 0560  
                                         l4165 0558                                           l4157 0550  
                                         l4149 0548                                           l4421 0FE3  
                                         l4405 0F7F                                           l4413 0FA9  
                                         l4333 0E67                                           l4341 0E82  
                                         l4325 0E49                                           l4317 0E37  
                                         l4309 0E22                                           l4501 0192  
                                         l4093 0AA6                                           l4085 0A8F  
                                         l4077 0A83                                           l4069 0A67  
                                         l3519 1666                                           l3551 09B9  
                                         l3543 09A4                                           l3535 09A2  
                                         l5039 143D                                           l3607 125D  
                                         l3623 152F                                           l3615 1521  
                                         l3631 1620                                           l4271 069F  
                                         l4247 066E                                           l4239 065B  
                                         l4255 067B                                           l4191 05A2  
                                         l4183 0597                                           l4175 0562  
                                         l4167 055A                                           l4159 0552  
                                         l4423 0FE8                                           l4415 0FB9  
                                         l4407 0F88                                           l4351 0EB8  
                                         l4343 0E88                                           l4335 0E73  
                                         l4327 0E52                                           l4319 0E3C  
                                         l4511 01DA                                           l4503 01A4  
                                         l4095 0AB4                                           l4079 0A87  
                                         l4087 0A9F                                           l5047 1450  
                                         l3561 09D8                                           l3553 09BD  
                                         l3545 09AA                                           l3537 09A2  
                                         l3529 0989                                           l3641 0718  
                                         l3801 0957                                           l3609 125A  
                                         l3617 1523                                           l3625 1532  
                                         l5401 17AB                                           l3633 1631  
                                         l3721 1349                                           l4281 06D7  
                                         l4273 06BC                                           l4265 068E  
                                         l4257 067C                                           l4249 0670  
                                         l4193 05AA                                           l4185 059B  
                                         l4169 055C                                           l4177 0564  
                                         l4425 0FEC                                           l4417 0FD7  
                                         l4409 0F8C                                           l4361 0EE0  
                                         l4353 0EC1                                           l4337 0E79  
                                         l4329 0E54                                           l4521 0220  
                                         l4513 01EF                                           l4505 01AB  
                                         l4441 00A1                                           l4433 0096  
                                         l4097 0AB9                                           l4601 0CF5  
                                         l5091 1330                                           l3563 09E1  
                                         l3555 09C3                                           l3547 09AF  
                                         l3651 0757                                           l3643 072F  
                                         l3635 06EA                                           l3571 1671  
                                         l3811 0976                                           l3803 0961  
                                         l3731 14E9                                           l3619 1528  
                                         l5403 17AE                                           l5411 1463  
                                         l3723 12B5                                           l4291 06E8  
                                         l4283 06D8                                           l4275 06C5  
                                         l4267 0693                                           l4259 0680  
                                         l4187 059D                                           l4195 05AE  
                                         l4179 0565                                           l4099 04E2  
                                         l4427 0FEF                                           l4419 0FDA  
                                         l4371 0F0A                                           l4363 0EE5  
                                         l4355 0ECA                                           l4347 0E92  
                                         l4531 0234                                           l4523 0224  
                                         l4515 0206                                           l4507 01BD  
                                         l4451 00BD                                           l4443 00A6  
                                         l4435 009A                                           l4611 0D26  
                                         l4603 0CFF                                           l3549 09B5  
                                         l3557 09C7                                           l3661 0780  
                                         l3653 075C                                           l3645 0737  
                                         l3637 06F7                                           l3581 168E  
                                         l3573 1681                                           l3813 097F  
                                         l3805 0963                                           l3821 0AC5  
                                         l3733 14EB                                           l3741 14F8  
                                         l5405 17B1                                           l5413 1468  
                                         l3629 161A                                           l4285 06DC  
                                         l4277 06CA                                           l4269 069B  
                                         l4197 05B9                                           l4189 05A1  
                                         l4381 0F30                                           l4373 0F1A  
                                         l4365 0EE7                                           l4357 0ECC  
                                         l4349 0EA8                                           l4293 0DFC  
                                         l4541 0255                                           l4533 0235  
                                         l4525 0225                                           l4517 020D  
                                         l4509 01C8                                           l4461 00CE  
                                         l4453 00C2                                           l4445 00AB  
                                         l4437 009C                                           l4613 0D27  
                                         l4605 0D09                                           l4621 12F3  
                                         l5087 132A                                           l3559 09CD  
                                         l3663 078D                                           l3655 076D  
                                         l3647 0744                                           l3639 0710  
                                         l3583 1691                                           l3575 1685  
                                         l3567 166B                                           l3807 0968  
                                         l3831 0B16                                           l3823 0AF7  
                                         l3591 1257                                           l3735 14EE  
                                         l3727 14E0                                           l5407 17B6  
                                         l5415 1478                                           l5431 082F  
                                         l5423 080F                                           l4287 06DE  
                                         l4279 06D2                                           l4199 05BE  
                                         l4383 0F37                                           l4391 0F4A  
                                         l4359 0ED1                                           l4367 0EEF  
                                         l4375 0F20                                           l4295 0E01  
                                         l4543 025A                                           l4551 0282  
                                         l4535 0239                                           l4527 022C  
                                         l4519 0219                                           l4471 00EA  
                                         l4463 00D3                                           l4455 00C4  
                                         l4447 00B3                                           l4439 00A0  
                                         l4607 0D1D                                           l4623 12FC  
                                         l5089 132D                                           l3665 07AE  
                                         l3649 0748                                           l3761 0BFC  
                                         l3585 1693                                           l3577 168B  
                                         l3569 166B                                           l3817 0981  
                                         l3809 0971                                           l3841 0B2E  
                                         l3825 0B0B                                           l3737 14F1  
                                         l3729 14E8                                           l3745 12B0  
                                         l3593 0800                                           l5441 1572  
                                         l5433 0832                                           l5425 080F  
                                         l4289 06E4                                           l4393 0F4F  
                                         l4385 0F3C                                           l4377 0F26  
                                         l4369 0F09                                           l4297 0E05  
                                         l4561 02B2                                           l4553 028F  
                                         l4545 0262                                           l4537 024D  
                                         l4529 0230                                           l4481 0110  
                                         l4473 00EF                                           l4465 00DB  
                                         l4457 00C8                                           l4449 00B5  
                                         l4609 0D22                                           l5601 02EC  
                                         l4625 12EA                                           l4617 1305  
                                         l3667 07B3                                           l3659 0778  
                                         l3771 0C18                                           l3763 0C03  
                                         l3755 0BE3                                           l3579 168C  
                                         l3843 0B32                                           l3827 0B14  
                                         l3739 14F4                                           l3595 0805  
                                         l5435 155A                                           l5427 0819  
                                         l4395 0F51                                           l4387 0F3E  
                                         l4379 0F2E                                           l4299 0E0A  
                                         l4563 02BD                                           l4555 0299  
                                         l4547 0266                                           l4491 0167  
                                         l4483 0128                                           l4467 00DD  
                                         l4459 00C9                                           l5611 045B  
                                         l5603 0357                                           l4619 130E  
                                         l4637 12D8                                           l3669 07C3  
                                         l3773 0C6C                                           l3765 0C05  
                                         l3757 0BF1                                           l3853 0B48  
                                         l3845 0B38                                           l3837 0B19  
                                         l3597 0806                                           l3589 12E1  
                                         l5381 1781                                           l5437 155A  
                                         l5429 0825                                           l4397 0F55  
                                         l4389 0F46                                           l3861 1586  
                                         l4565 02C1                                           l4557 02A7  
                                         l4549 027E                                           l4493 016E  
                                         l4485 0135                                           l4477 00F8  
                                         l4469 00E5                                           l4581 0CB0  
                                         l4573 0C87                                           l5613 049B  
                                         l5605 03AB                                           l4821 17B9  
                                         l4901 1731                                           l4831 08B4  
                                         l3775 0C70                                           l3767 0C0D  
                                         l3759 0BF5                                           l3791 092B  
                                         l3783 1698                                           l3847 0B3D  
                                         l3839 0B2B                                           l3599 0808  
                                         l5391 1794                                           l5383 1782  
                                         l5375 1775                                           l5439 1564  
                                         l4399 0F70                                           l3863 158A  
                                         l4567 02C2                                           l4559 02B0  
                                         l4495 0179                                           l4487 014D  
                                         l4479 0103                                           l4591 0CCE  
                                         l4575 0C8C                                           l5615 04C7  
                                         l5607 03D7                                           l4823 17D7  
                                         l5631 0BC3                                           l4911 174A  
                                         l4903 1739                                           l4825 0887  
                                         l3777 0C81                                           l3769 0C13  
                                         l3785 16AB                                           l3849 0B46  
                                         l4833 14C6                                           l5393 1798  
                                         l5385 1789                                           l5377 177C  
                                         l3865 1595                                           l3857 157D  
                                         l4569 02C8                                           l4497 0180  
                                         l4489 015A                                           l4593 0CD2  
                                         l4585 0CB9                                           l4577 0C90  
                                         l5609 03F1                                           l5633 0BC6  
                                         l4921 1766                                           l4913 174C  
                                         l4905 1743                                           l4827 0893  
                                         l3779 0C81                                           l3795 092D  
                                         l3787 16B4                                           l4835 14C6  
                                         l5395 179D                                           l5387 178E  
                                         l5379 1780                                           l3867 159A  
                                         l3859 157F                                           l4499 018B  
                                         l4595 0CDA                                           l4587 0CBC  
                                         l4579 0CA0                                           l5635 0BC9  
                                         l5627 0B4A                                           l5643 1334  
                                         l4923 1768                                           l4915 174E  
                                         l4907 1746                                           l4851 1504  
                                         l4829 089B                                           l3797 0933  
                                         l3789 16BA                                           l4837 14CE  
                                         l5397 179E                                           l5389 178F  
                                         l4597 0CE8                                           l4589 0CC7  
                                         l5637 0BD0                                           l5629 0BB0  
                                         l5645 1337                                           l4925 176A  
                                         l4917 1756                                           l4909 1748  
                                         l4861 150F                                           l4853 1506  
                                         l4845 14FB                                           l4935 1254  
                                         l3799 094F                                           l4839 14D6  
                                         l5399 17A3                                           l4599 0CF1  
                                         l5639 0BD6                                           l5647 133A  
                                         l4927 176B                                           l4919 175E  
                                         l4871 1319                                           l4863 1511  
                                         l4855 1508                                           l4847 14FF  
                                         l4929 1770                                           l4873 131B  
                                         l4881 1359                                           l4865 1512  
                                         l4857 150A                                           l4849 1501  
                                         l5761 13B4                                           l3995 0D32  
                                         l5595 02D1                                           l4875 131E  
                                         l4867 1514                                           l4859 150D  
                                         l4891 147F                                           l4883 07FC  
                                         l5763 13B5                                           l4981 07D2  
                                         l3997 0D3A                                           l5597 02D6  
                                         l4869 1317                                           l4877 1355  
                                         l4893 1484                                           l4885 147A  
                                         l5765 13B7                                           l4983 07DE  
                                         l3999 0D3C                                           l5599 02E1  
                                         l4879 1358                                           l4895 1486  
                                         l4887 147C                                           l5759 13AE  
                                         l4993 09E6                                           l4897 148E  
                                         l4889 147E                                           l4995 09F7  
                                         l4987 07E4                                           l4979 07CD  
                                         l4899 172F                                           l4997 09FC  
                                         l4999 0A01                                           l5897 07F0  
                                         u3000 05B5                                           u3001 05B4  
                                         u3010 05B9                                           u3011 05B8  
                                         u2300 1648                                           u3100 0652  
                                         u3020 05BE                                           u2301 1647  
                                         u3101 0651                                           u3021 05BD  
                                         _LATA 010C                                           u2310 164D  
                                         u3030 05D3                                           _LATB 010D  
                                         u2311 164C                                           u3031 05D2  
                                         _LATC 010E                                           u2320 1665  
                                         u2400 1520                                           u3200 069F  
                                         u3120 0666                                           u3040 05D7  
                                         u2321 1664                                           u2401 151F  
                                         u3201 069E                                           u3121 0665  
                                         u3041 05D6                                           _LATE 0110  
                                         u2410 1528                                           u3210 06AD  
                                         u3130 066B                                           u3050 05E1  
                                         u4010 17D7                                           u2411 1527  
                                         u3131 066A                                           u3115 065C  
                                         u3051 05E0                                           u4011 17D6  
                                         u2340 09B5                                           u2420 1620  
                                         u3220 06BC                                           u3140 0675  
                                         u3300 0E17                                           u2341 09B4  
                                         u2421 161F                                           u3221 06BB  
                                         u3141 0674                                           u3301 0E16  
                                         u4030 08AF                                           u2350 09C3  
                                         u2430 0742                                           u2510 14E8  
                                         u3230 06C5                                           u3150 067B  
                                         u3070 0605                                           u3310 0E3C  
                                         u4031 08AE                                           u2351 09C2  
                                         u2335 09AB                                           u2431 0741  
                                         u2511 14E7                                           u3231 06C4  
                                         u3215 06A9                                           u3151 067A  
                                         u3071 0604                                           u3311 0E3B  
                                         u4200 0A1D                                           u4120 07DC  
                                         u2360 09CD                                           u2440 076D  
                                         u2520 0C81                                           u3240 06CA  
                                         u3160 0680                                           u3080 0634  
                                         u3320 0E44                                           u2600 158A  
                                         u4040 1360                                           u4201 0A1C  
                                         u4121 07D9                                           u2361 09CC  
                                         u2441 076C                                           u2521 0C80  
                                         u3241 06C9                                           u3161 067F  
                                         u3081 0633                                           u3073 0601  
                                         u3065 05E4                                           u3321 0E43  
                                         u2601 1589                                           u4041 135F  
                                         u4210 0A22                                           u2450 0778  
                                         u2370 1671                                           u2530 0961  
                                         u3250 06D7                                           u3170 0686  
                                         u3090 064D                                           u3410 0F09  
                                         u3330 0E49                                           u4211 0A21  
                                         u2451 0777                                           u2371 1670  
                                         u2531 0960                                           u3251 06D6  
                                         u3171 0685                                           u3091 064C  
                                         u3411 0F08                                           u3331 0E48  
                                         u4220 0A2A                                           u4140 09FC  
                                         u2460 0780                                           u2380 168B  
                                         u2540 0968                                           u2700 0D93  
                                         u4300 1443                                           u3260 06DC  
                                         u3180 068D                                           u3500 0F78  
                                         u3420 0F26                                           u3340 0E67  
                                         u2620 159A                                           u4221 0A29  
                                         u4141 09FB                                           u2461 077F  
                                         u2445 0769                                           u2525 0C7D  
                                         u2381 168A                                           u2541 0967  
                                         u2701 0D92                                           u4301 1442  
                                         u3261 06DB                                           u3181 068C  
                                         u3501 0F77                                           u3421 0F25  
                                         u3405 0EE8                                           u3341 0E66  
                                         u2621 1599                                           u4230 0A2F  
                                         u4150 0A01                                           u4134 07DE  
                                         u2470 07AC                                           u2550 0976  
                                         u2710 0DAA                                           u2390 0805  
                                         u3270 06E8                                           u3190 0693  
                                         u3510 0F7F                                           u3430 0F2E  
                                         u3350 0E88                                           u4231 0A2E  
                                         u4151 0A00                                           u2471 07AB  
                                         u2551 0975                                           u2711 0DA9  
                                         u2391 0804                                           u3271 06E7  
                                         u3191 0692                                           u3511 0F7E  
                                         u3431 0F2D                                           u3415 0F05  
                                         u3351 0E87                                           u2615 158F  
                                         u4240 0A34                                           u4160 0A06  
                                         u2560 0B0B                                           u2720 0DBC  
                                         u3520 0F8C                                           u3360 0ED1  
                                         u3280 0E0A                                           u3600 00C8  
                                         u2800 0A9E                                           u4241 0A33  
                                         u4161 0A05                                           u2561 0B0A  
                                         u2721 0DBB                                           u3521 0F8B  
                                         u3361 0ED0                                           u3281 0E09  
                                         u3601 00C7                                           u2801 0A9D  
                                         u4250 0A39                                           u4170 0A0B  
                                         u2570 0B2B                                           u2730 0DC7  
                                         u3530 0F9A                                           u3450 0F3C  
                                         u3290 0E12                                           u3610 00CE  
                                         u2810 0AA5                                           u4251 0A38  
                                         u4171 0A0A                                           u2571 0B2A  
                                         u2731 0DC6                                           u3451 0F3B  
                                         u3291 0E11                                           u3611 00CD  
                                         u2811 0AA4                                           u4260 0A41  
                                         u4180 0A13                                           u2580 0B38  
                                         u2740 0DCC                                           u2900 0520  
                                         u3540 0FB9                                           u3620 00D3  
                                         u4261 0A40                                           u4181 0A12  
                                         u2581 0B37                                           u2565 0B07  
                                         u2741 0DCB                                           u2901 051F  
                                         u3541 0FB8                                           u3445 0F31  
                                         u3621 00D2                                           u4270 0A46  
                                         u4190 0A18                                           u2590 0B3D  
                                         u2910 0525                                           u3550 0FD7  
                                         u3470 0F4F                                           u3390 0EE5  
                                         u3710 0224                                           u3630 00EA  
                                         u2830 0AB4                                           u2750 0A5E  
                                         u4271 0A45                                           u4191 0A17  
                                         u2591 0B3C                                           u2911 0524  
                                         u3551 0FD6                                           u3535 0F96  
                                         u3471 0F4E                                           u3391 0EE4  
                                         u3375 0ED2                                           u3711 0223  
                                         u3631 00E9                                           u2831 0AB3  
                                         u2751 0A5D                                           u4280 0A4B  
                                         u2680 0D41                                           u2920 053E  
                                         u3560 0FEC                                           u3480 0F55  
                                         u3800 028F                                           u3640 00EF  
                                         u2840 0AB9                                           u2760 0A74  
                                         u4281 0A4A                                           u2681 0D40  
                                         u2921 053D                                           u3561 0FEB  
                                         u3545 0FB5                                           u3481 0F54  
                                         u3465 0F3F                                           u3385 0ED9  
                                         u3801 028E                                           u3705 021A  
                                         u3641 00EE                                           u2841 0AB8  
                                         u2825 0AA7                                           u4290 0A50  
                                         u2690 0D4D                                           u4610 0819  
                                         u2930 0542                                           u2850 04EC  
                                         u3490 0F70                                           u3810 02A7  
                                         u3730 0234                                           u3570 00A0  
                                         u2770 0A87                                           u4291 0A4F  
                                         u2691 0D4C                                           u4611 0818  
                                         u2931 0541                                           u2851 04EB  
                                         u3555 0FD3                                           u3491 0F6F  
                                         u3811 02A6                                           u3731 0233  
                                         u3571 009F                                           u2771 0A86  
                                         u4620 083A                                           u2940 057C  
                                         u2860 04F2                                           u3820 02C1  
                                         u3740 0239                                           u3580 00A6  
                                         u2780 0A8E                                           u4700 0BB0  
                                         u4621 0839                                           u2941 057B  
                                         u2861 04F1                                           u3821 02C0  
                                         u3805 028B                                           u3741 0238  
                                         u3725 0226                                           u3581 00A5  
                                         u2781 0A8D                                           u2765 0A70  
                                         u4701 0BAF                                           u4630 1564  
                                         u2950 0586                                           u2870 04F7  
                                         u3750 024D                                           u3670 01E5  
                                         u3590 00AB                                           u3910 0CF5  
                                         u3830 0C8C                                           u4710 0BD0  
                                         u4631 1563                                           u2951 0584  
                                         u2871 04F6                                           u3815 02A3  
                                         u3751 024C                                           u3655 0168  
                                         u3591 00AA                                           u3911 0CF4  
                                         u3831 0C8B                                           u4711 0BCF  
                                         u4640 157A                                           u2960 0587  
                                         u2880 0513                                           u3760 0254  
                                         u3680 01FC                                           u3920 0CFB  
                                         u3840 0C90                                           u4720 0BD6  
                                         u4641 1579                                           u2945 0578  
                                         u2881 0512                                           u3761 0253  
                                         u3665 0193                                           u3921 0CFA  
                                         u3905 0CEB                                           u3841 0C8F  
                                         u4721 0BD5                                           u2970 0597  
                                         u2890 051A                                           u3770 025A  
                                         u3930 0CFF                                           u3850 0CB0  
                                         u2971 0596                                           u2891 0519  
                                         u3771 0259                                           u3675 01E1  
                                         u2795 0A90                                           u3931 0CFE  
                                         u3851 0CAF                                           u4580 177C  
                                         u2980 05A1                                           u3780 0266  
                                         u3940 0D13                                           u4581 177B  
                                         u2981 05A0                                           u3781 0265  
                                         u3685 01F8                                           u4590 1468  
                                         u3790 0274                                           u3950 0D22  
                                         u3870 0CCD                                           u4591 1467  
                                         u3695 0207                                           u3951 0D21  
                                         u3871 0CCC                                           u3960 0D26  
                                         u3961 0D25                                           u3945 0D0F  
                                         u3865 0CC1                                           u3890 0CE7  
                                         u2995 05A4                                           u3795 0270  
                                         u3891 0CE6                                           i1l92 1416  
                                         u3885 0CDB                                           i1l95 1429  
                                         i1l98 143C                                           _PLLR 04D6  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 0078                                           _main 13AE  
                     ?_I2C_CallbackReturnReset 0077                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                               __end_of_I2C_Open 17B9  
                                         btemp 007E                                           start 0058  
                    __end_of_Modbus_sendTxBuff 07CD                        _I2C_SetInterruptHandler 12E1  
                              ___fldiv@new_exp 00A5                                ?_Task_Indicator 0070  
                   ??_TMR1_SetInterruptHandler 0022                          ??_ModbusSlave_Process 0062  
                             ?_I2C_MasterClose 0070                                __end_of_Task_MB 1450  
                              _I2C_WriteNBytes 080D                                  ?_EUSART_Write 0070  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 129C  
                             ?_I2C_MasterWrite 0070                  __end_of_OSCILLATOR_Initialize 1361  
                                ___fltol@sign1 0028                                __end_of___fladd 06EA  
                                        ?_main 0070                                __end_of___fldiv 1000  
                              __end_of___flmul 02D1                                __end_of___fltol 0AC5  
                              _TMR1_StartTimer 1254                                          _T1CON 0018  
                                        i1l101 1403                                          i1l104 14C5  
                                        i1l200 002C                                          i1l202 003D  
                                        i1l203 0056                                          i1l204 0048  
                                        i1l321 1555                                          i1l209 0056  
                                        i1l402 13CD                                          i1l331 172E  
                                        i1l324 1557                                          i1l341 126D  
                                        i1l414 139E                                          i1l335 14AB  
                                        i1l344 1269                                          i1l424 123F  
                                        i1l338 123E                                          i1l602 090B  
                                        i1l418 1391                                          i1l605 092A  
                                        i1l630 12C6                                          i1l198 001B  
                                        i1l711 1282                                          i1l560 13AD  
                                        i1l720 124A                                          i1l714 1244  
                                        i1l618 085E                                          i1l563 1348  
                                        i1l619 0884                                          i1l708 124D  
                                        i1l732 1275                                          i1l636 16ED  
                                        i1l660 1296                                          i1l726 1247  
                                        i1l654 128C                                          i1l590 15EE  
                                        i1l583 15C6                                          i1l735 1271  
                                        i1l663 129B                                          i1l672 12AA  
                                        i1l729 12BF                                          i1l593 1287  
                                        i1l657 1291                                          i1l681 1617  
                                        i1l753 1253                                          i1l666 12A0  
                                        i1l586 1279                                          i1l675 12AF  
                                        i1l692 0003                                          i1l756 1250  
                                        i1l596 12D7                                          i1l669 12A5  
                                        i1l599 12CE                                          i1l689 1241  
                                        _RCREG 0199                                          _RCSTA 019D  
                             ?_validateRequest 0070                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0078  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _SW_Ad 0069                                     _Get_millis 13CE  
                             __end_of_TMR1_ISR 139F                              __end_of_I2C_DO_RX 0885  
                            __end_of_I2C_DO_TX 092B                                 _WDT_Initialize 07FC  
                                        _llabs 17B9                              __end_of_I2C_Close 14FB  
               I2C_MasterOperation@returnValue 0021                        _I2C_MasterEnableRestart 1242  
                      __end_of_TMR1_Initialize 1492                                          pclath 000A  
                             ?_I2C_SetCallback 0020                   I2C_SetAddressNackCallback@cb 0024  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                              ??i1_I2C_SetBuffer 0074  
                              _TMR1_WriteTimer 13BD                               __end_of_App_Init 1334  
                           ??_I2C_DO_SEND_STOP 0070                                __initialization 005A  
                                 __end_of_main 13BD                                    _App_Process 1334  
                    ?_I2C_DO_SEND_RESTART_READ 0070                               __end_of_ReadData 04E2  
                               ??_EUSART_Write 0020                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                   __end_of_ModbusRTU_Slave_Poll 0DFC  
               ??_EUSART_SetRxInterruptHandler 0022                                    _Device_Init 09E6  
                                       ??_main 0069                   __end_ofi1_I2C_MasterClearIrq 1254  
                            ?_I2C_MasterIsNack 0070                              ?_I2C_MasterSetIrq 0070  
                           ??_I2C_MasterIsNack 0070                           i1I2C_SetCallback@idx 0073  
                         i1I2C_SetCallback@ptr 0072                         __end_of_WDT_Initialize 0800  
                           ??_I2C_MasterSetIrq 0070                                  ??_Task_Sensor 00CB  
    __end_of_EUSART_DefaultFramingErrorHandler 123F            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 123E  
                   _EUSART_OverrunErrorHandler 00E3                                         ?_llabs 0024  
              __end_of_I2C_CallbackReturnReset 0004                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0074                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1015 1329  
                      TMR1_WriteTimer@timerVal 0070                                         i1l5051 1394  
                                       i1l5061 154F                                         i1l5053 1535  
                                       i1l5071 1701                                         i1l5063 1550  
                                       i1l5055 153C                                         i1l5081 1724  
                                       i1l5073 1707                                         i1l5065 16EE  
                                       i1l5057 1544                                         i1l3713 133E  
                                       i1l5049 1392                                         i1l5083 172B  
                                       i1l5075 170C                                         i1l5067 16F5  
                                       i1l5059 1549                                         i1l5077 1713  
                                       i1l5069 16FA                                         i1l5421 13AC  
                                       i1l5501 090D                                         i1l4631 14A0  
                                       i1l5079 1719                                         i1l3751 1245  
                                       i1l3671 15A0                                         i1l5503 091C  
                                       i1l4633 14A6                                         i1l3673 15A6  
                                       i1l5417 139F                                         i1l3753 126E  
                                       i1l4641 1285                                         i1l5505 0927  
                                       i1l5521 0859                                         i1l4635 14A7  
                                       i1l4627 1492                                         i1l3675 15B7  
                                       i1l5419 13A4                                         i1l5443 1404  
                                       i1l5451 1417                                         i1l4643 1286  
                                       i1l4651 12D6                                         i1l5507 0929  
                                       i1l5523 085C                                         i1l5515 083B  
                                       i1l4731 12C2                                         i1l4629 149B  
                                       i1l3749 1242                                         i1l5445 140E  
                                       i1l5453 1421                                         i1l5461 1434  
                                       i1l5533 0864                                         i1l5517 084A  
                                       i1l4733 12C5                                         i1l3941 1288  
                                       i1l5621 15CF                                         i1l5471 1402  
                                       i1l5447 1415                                         i1l5455 1428  
                                       i1l5463 143B                                         i1l3935 12BA  
                                       i1l4639 1283                                         i1l4647 12CF  
                                       i1l4655 12C7                                         i1l5519 084F  
                                       i1l3943 128B                                         i1l5623 15D7  
                                       i1l5711 000A                                         i1l5553 16C8  
                                       i1l4649 12D1                                         i1l4657 12C9  
                                       i1l5481 08D4                                         i1l5529 0860  
                                       i1l4729 12C0                                         i1l3953 1297  
                                       i1l5625 15DA                                         i1l5617 15C7  
                                       i1l5641 1276                                         i1l4841 1320  
                                       i1l5721 0031                                         i1l5713 000F  
                                       i1l4931 126A                                         i1l5467 13F1  
                                       i1l5459 142A                                         i1l5475 14AC  
                                       i1l3963 1272                                         i1l3939 127F  
                                       i1l5555 16CB                                         i1l5547 16C1  
                                       i1l4659 12CD                                         i1l5539 0868  
                                       i1l3947 128D                                         i1l3955 129A  
                                       i1l4763 129C                                         i1l3971 12A1  
                                       i1l4771 12AD                                         i1l4843 1251  
                                       i1l5619 15CA                                         i1l5731 0052  
                                       i1l5723 0036                                         i1l5715 0014  
                                       i1l4933 1266                                         i1l5469 13FB  
                                       i1l5477 14C4                                         i1l5549 16C4  
                                       i1l5565 16D1                                         i1l5493 08E5  
                                       i1l5485 08DD                                         i1l5901 0876  
                                       i1l3949 1290                                         i1l3981 1295  
                                       i1l4765 129F                                         i1l3973 12A4  
                                       i1l3965 12A6                                         i1l4773 12AE  
                                       i1l5581 15F8                                         i1l5573 15EF  
                                       i1l4941 13C3                                         i1l5725 0042  
                                       i1l5717 0020                                         i1l5709 0006  
                                       i1l3991 0002                                         i1l3959 124B  
                                       i1l5559 16CD                                         i1l5903 08FD  
                                       i1l3967 12A9                                         i1l5575 15F1  
                                       i1l4951 1385                                         i1l4943 13C5  
                                       i1l5719 0025                                         i1l3977 1248  
                                       i1l3985 124E                                         i1l5905 16DF  
                                       i1l5489 08E1                                         i1l4769 12AB  
                                       i1l5577 15F4                                         i1l4953 138C  
                                       i1l4945 13C7                                         i1l4937 13BD  
                                       i1l5729 004D                                         i1l3987 1240  
                                       i1l5499 08E9                                         i1l3979 1292  
                                       i1l5587 15FC                                         i1l4939 13C2  
                                       i1l4947 13C9                                         i1l4949 13CB  
                                       i1l5899 160F                                         u405_20 13C2  
                                       u405_21 13C1                                         u406_20 138C  
                                       u406_21 138B                                         u431_20 153C  
                                       u431_21 153B                                         u432_20 154F  
                                       u248_20 15A6                                         u432_21 154E  
                                       u248_21 15A5                                         u433_20 16FA  
                                       u433_21 16F9                                         u434_20 170C  
                                       u434_21 170B                                         u435_20 1724  
                                       u435_21 1723                                         u460_20 13A4  
                                       u460_21 13A3                                         u465_20 08DC  
                                       u465_21 08DB                                         u466_20 0927  
                                       u490_20 0042                                         _OSCCON 0099  
                                       u466_21 0926                                         u490_21 0041  
                                       u467_20 0859                                         u491_20 0047  
                                       u483_20 000A                                         u467_21 0858  
                                       u491_21 0046                                         u483_21 0009  
                                       u468_20 15CF                                         u492_20 004D  
                                       u484_20 000F                                         u468_21 15CE  
                                       u492_21 004C                                         u484_21 000E  
                                       u397_20 14A6                                         u469_20 15D7  
                                       u493_20 0052                                         u485_20 0014  
                                       u397_21 14A5                                         u469_21 15D6  
                                       u493_21 0051                                         u485_21 0013  
                                       u486_20 0020                                         u486_21 001F  
                                       u487_20 0025                                         u487_21 0024  
                                       u488_20 0031                                         u488_21 0030  
                                       u489_20 0036                                         u489_21 0035  
                                       u402lld 17FE                      ??_I2C_SetInterruptHandler 0022  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _SSPBUF 0211                               __end_of___xxtofl 0D30  
                          _I2C_MasterEnableIrq 1263                            _I2C_MasterGetRxData 124B  
                      __end_of_I2C_WriteNBytes 083B                                      ??_Task_MB 0062  
         __end_of_TMR1_DefaultInterruptHandler 1240                   _TMR1_DefaultInterruptHandler 123F  
                      __end_of_TMR1_StartTimer 1257                                      ??___fladd 0050  
                                    ??___fldiv 0064                                  _I2C_MasterFsm 15C7  
                                _I2C_MasterIsr 1276                                      ??___flmul 0036  
                                    ??___fltol 0024                            _EUSART_Transmit_ISR 1535  
                            I2C_SetCallback@cb 0020                                  _I2C_SetBuffer 1463  
                 __end_of_I2C_MasterDisableIrq 1260                                         llabs@a 0024  
                         ?_I2C_MasterEnableIrq 0070                            _I2C_DO_ADDRESS_NACK 15EF  
                         ?_I2C_MasterGetRxData 0070                                      ?_I2C_Open 0070  
           __end_of_I2C_SetAddressNackCallback 1355                     _I2C_SetAddressNackCallback 1349  
                                  ?_Get_millis 0020                                   ?_rtcc_handle 0070  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 0070  
      I2C_SetInterruptHandler@InterruptHandler 0020       TMR1_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 13CE                           ?_EUSART_Transmit_ISR 0070  
                        __end_of_TMR1_CallBack 1392                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 1450                                   ___xxtofl@val 0020  
                      __end_of__initialization 0092                            _I2C_MasterOperation 1517  
                          __end_of_Task_Sensor 0BE1                       validateRequest@u16MsgCRC 003C  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                                   ___fltol@f1 0020           __end_of_EUSART_SetTxInterruptHandler 1317  
                 _EUSART_SetTxInterruptHandler 130E                        _rdBlkRegCompleteHandler 14AC  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                                 __pidataBANK2 1379                         _I2C_CallbackReturnStop 1240  
                          ??_SYSTEM_Initialize 0022                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  __end_of_llabs 1800  
                         __end_of_fctsupported 1828                                 ?_I2C_SetBuffer 0020  
                __end_of_I2C_DO_SEND_ADR_WRITE 12CF                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterEnableIrq 0020  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                             ??_buildException 0020                          I2C_ReadNBytes@address 0027  
                                   ??_I2C_Open 0022                           _eusartRxStatusBuffer 013E  
                                    ?_App_Init 0070                     __end_of_I2C_MasterClearIrq 125A  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_llabs 002C  
                    __end_of_SYSTEM_Initialize 1463                          ??_EUSART_Transmit_ISR 0070  
                            _I2C_MasterSendAck 1272                                     __pbssBANK0 0069  
                                   __pbssBANK1 00D7                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 166B                                  ??_I2C_DO_IDLE 0070  
                                    ?_ReadData 0070                                  ??_I2C_DO_RCEN 0070  
                             ??_Task_Indicator 0020                  __end_of_rd2RegCompleteHandler 142A  
                 __end_of_I2C_MasterSendTxData 1283                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 1248                           _ModbusRTU_Slave_Poll 0D30  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 1404  
                         Task_MB@f_Modbus_Init 00ED                            _I2C_DO_RX_NACK_STOP 12A1  
                         i1_I2C_MasterClearIrq 1251                          _rd1RegCompleteHandler 1404  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 1272  
                            __end_of__Umul8_16 159F                               ?_I2C_WriteNBytes 0028  
                       I2C_WriteNBytes@address 002B                          _wr1RegCompleteHandler 142A  
                     ModbusRTU_Slave_Poll@size 0054                                     __pmaintext 13AE  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0077  
                                ReadData@aData 00B5                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 00E9                    __end_of_I2C_DO_SEND_RESTART 1297  
                              _I2C_DO_TX_EMPTY 16C1                            I2C_SetBuffer@buffer 0020  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                                ReadData@ctemp 00BB                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0071                          ??_I2C_MasterOperation 0020  
               I2C_SetDataCompleteCallback@ptr 0076                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 1292                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 006A                                      ?___xxtofl 0020  
                                   ??_App_Init 0024                                i1_I2C_SetBuffer 139F  
                    __end_of_I2C_MasterSendAck 1276                                        _OSCTUNE 0098  
                             _ModbusSlave_Init 0885                                    _Task_Sensor 0B4A  
                     ??_EUSART_SetErrorHandler 0022                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                   validateRequest@isSupported 003E                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 124B                           I2C_Close@returnValue 0020  
                 ?_I2C_SetDataCompleteCallback 0074                                      _I2C_DO_RX 083B  
                                    _I2C_DO_TX 08D4               __end_of_I2C_DO_SEND_RESTART_READ 128D  
                                   ??_ReadData 00AD                          ?_ModbusRTU_Slave_Poll 0054  
                  __end_of_ModbusSlave_Process 14E0                                      _I2C_Close 14E0  
                    ??_rdBlkRegCompleteHandler 0078                          ?i1_I2C_MasterClearIrq 0070  
                         _I2C_MasterDisableIrq 125D                                ??_I2C_MasterFsm 007A  
                              ??_I2C_MasterIsr 007C                                        _Task_MB 143D  
                               _I2C_ReadNBytes 1558                            __end_of_I2C_DO_IDLE 1288  
                          __end_of_I2C_DO_RCEN 12C7                                        ___fladd 04E2  
                                 ?_App_Process 0070                                        ___fldiv 0DFC  
                                      ___flmul 0096                                        ___fltol 0A54  
                              ??_I2C_SetBuffer 0024                        I2C_SetBuffer@bufferSize 0022  
                           I2C_ReadNBytes@data 0024                                 _I2C_MasterRead 12B0  
                               _I2C_MasterOpen 0800                                 _I2C_MasterStop 1245  
                               _I2C_Initialize 1317                                   ?_Device_Init 0070  
                                      __ptext1 1450                                        __ptext2 07FC  
                                      __ptext3 147A                                        __ptext4 14FB  
                                      __ptext5 1355                                        __ptext6 1317  
                                      __ptext7 172F                                        __ptext8 130E  
                                      __ptext9 1305                          ??_I2C_DO_RX_NACK_STOP 0070  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 1355                                     ??___xxtofl 0024  
                           I2C_SetCallback@idx 0023                       ??_PIN_MANAGER_Initialize 0020  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 0020  
                           I2C_SetCallback@ptr 0022                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 0168                                ModbusSlaveF04@i 0052  
                    i1I2C_SetBuffer@bufferSize 0072                                        clrloop0 1362  
                   _SHT30_CMD_MEASURE_L_Enable 0164                           end_of_initialization 0092  
                       Modbus_sendTxBuff@index 0038                     _SHT30_CMD_MEASURE_M_Enable 0166  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 1305                  _EUSART_SetOverrunErrorHandler 12FC  
                                      init_ram 136D                               _Modbus_getRxBuff 092B  
                                   ?_I2C_Close 0070                         ?_rd1RegCompleteHandler 0077  
                            i1_I2C_SetCallback 159F                                        initloop 136E  
                      __end_of_I2C_DO_TX_EMPTY 16EE                          ?_I2C_MasterDisableIrq 0070  
                       __end_of_I2C_ReadNBytes 157B                              _EUSART_Initialize 172F  
                  _SHT30_CMD_MEASURE_H_Disable 0162                         ?_wr1RegCompleteHandler 0077  
                           ?i1_I2C_SetCallback 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                  _Tick_Init_SES 13DF  
                       __end_of_I2C_MasterRead 12B5                         __end_of_I2C_MasterOpen 080D  
                       __end_of_I2C_MasterStop 1248                         __end_of_I2C_Initialize 1320  
                  _SHT30_CMD_MEASURE_L_Disable 015E                            ??i1_I2C_SetCallback 0073  
                  _SHT30_CMD_MEASURE_M_Disable 0160                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                      ModbusSlaveF04@valueRegsno 0050  
                           ModbusSlaveF04@size 003E                 ??_EUSART_SetTxInterruptHandler 0022  
                      __end_ofi1_I2C_SetBuffer 13AE                                      _PORTAbits 000C  
              __end_of_rdBlkRegCompleteHandler 14C6                           _I2C_MasterSendTxData 127E  
                              Modbus_calcCRC@i 002B                                Modbus_calcCRC@j 002C  
                                  ___fladd@grs 005B                                   ??_Get_millis 0024  
                                ___xxtofl@sign 0028                    ?_I2C_SetAddressNackCallback 0024  
                                  ___fldiv@grs 00A7                                    _f_Indicator 00EE  
                                  ___fldiv@rem 00A0                         ??_ModbusRTU_Slave_Poll 0056  
                ModbusRTU_Slave_Poll@u8Current 005F                      __end_ofi1_I2C_SetCallback 15C7  
                                 _fctsupported 1820                         ??i1_I2C_MasterClearIrq 0070  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 1773  
                                  _I2C_DO_IDLE 1283                                    _I2C_DO_RCEN 12C0  
                   rdBlkRegCompleteHandler@ptr 0077                               validateRequest@i 003F  
                                    _TXSTAbits 019E                                ?_I2C_ReadNBytes 0024  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 1288  
                               ?_Tick_Init_SES 0070                             __end_of_Get_millis 13DF  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 0002  
           __end_of_EUSART_DefaultErrorHandler 126A                     _EUSART_DefaultErrorHandler 1266  
                                 _EUSART_Write 1641                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 005A                                  ??_EUSART_Read 0020  
                                ?_I2C_DO_RESET 0070                       ?_I2C_SetInterruptHandler 0020  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  ??_I2C_DO_RX 0078                                    ??_I2C_DO_TX 0078  
                          i1I2C_SetCallback@cb 0070                              ??_I2C_MasterClose 0020  
                  ModbusRTU_Slave_Poll@i8state 0060                         ??_I2C_MasterDisableIrq 0020  
                                  ??_I2C_Close 0020                              ??_I2C_MasterStart 0020  
                            ??_I2C_MasterWrite 0022                 __end_of_I2C_CallbackReturnStop 1242  
                       _I2C_DO_RX_NACK_RESTART 12A6                                 _ModbusSlaveF04 0BE1  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 1257  
                            ??_validateRequest 002F                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 00E5                                 _Modbus_calcCRC 0987  
                     __end_of_ModbusSlave_Init 08D4                         _EUSART_SetErrorHandler 12EA  
                  __end_of_I2C_MasterEnableIrq 1266                            ?_I2C_MasterClearIrq 0070  
                                    __Umul8_16 157B                    __end_of_I2C_MasterGetRxData 124E  
                                  __pdataBANK2 015E                          __end_of_I2C_DO_RX_ACK 12A1  
                       ModbusSlave_Init@_SW_Ad 0020                               _I2C_DO_SEND_STOP 1297  
                            ??_I2C_SetCallback 0023                               ?i1_I2C_SetBuffer 0070  
                          I2C_Open@returnValue 0023                             _I2C_MasterSendNack 126E  
                     ?_I2C_MasterEnableRestart 0070                                      ___fladd@a 004C  
                                    ___fladd@b 0048                              _i2c_fsmStateTable 1800  
                                    ___fldiv@a 005C                                      ___fldiv@b 0060  
                                  __pbssBIGRAM 2138                    __end_of_EUSART_Transmit_ISR 1558  
                        _I2C_DO_SEND_ADR_WRITE 12C7                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                    __pbssCOMMON 007C  
                                    ___latbits 0002                                  _SensorAmbient 00DB  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                               ??_I2C_DO_RESET 0070                            ?_I2C_MasterSendNack 0070  
                                 ?_Task_Sensor 0070                   __end_of_I2C_DO_SEND_ADR_READ 12D8  
                         ??_I2C_MasterClearIrq 0020                    __end_of_I2C_DO_ADDRESS_NACK 1618  
                       __end_of_ModbusSlaveF04 0C85                     __end_of_EUSART_Receive_ISR 172F  
                             _I2C_MasterIsNack 12BA                      _I2C_DO_SEND_RESTART_WRITE 128D  
             _EUSART_RxDefaultInterruptHandler 00E7                            __end_of_EUSART_Read 1696  
                             _I2C_MasterSetIrq 124E                          _rd2RegCompleteHandler 1417  
                              ??_Tick_Init_SES 0022                         __end_of_Modbus_calcCRC 09E6  
                 __end_of_EUSART_RxDataHandler 14AC                                       ?_Task_MB 0070  
                       _PIN_MANAGER_Initialize 14FB                          _wr2RegCompleteHandler 13F1  
                    ??_I2C_CallbackReturnReset 0078                        ModbusRTU_Slave_Poll@reg 005E  
                         EUSART_Read@readValue 0021                    __end_of_I2C_MasterOperation 1535  
                         ??_I2C_MasterSendNack 0070                       rd2RegCompleteHandler@ptr 0077  
             __end_of_TMR1_SetInterruptHandler 12E1                                       ?___fladd 0048  
                                     ?___fldiv 005C                                      __ptext100 133E  
                                    __ptext101 159F                                      __ptext102 1245  
                                    __ptext103 1242                                      __ptext104 1535  
                                    __ptext105 16EE                                      __ptext106 126A  
                                    __ptext107 123E                                      __ptext108 1266  
                                    __ptext109 1492                                       ?___flmul 002E  
                                     ?___fltol 0020                                     ?__Umul8_16 0020  
                                 _eusartRxHead 006C                                   _eusartTxHead 006F  
                                 _eusartRxTail 006B                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 006E                      __end_of_i2c_fsmStateTable 1820  
                 ??_INTERRUPT_InterruptManager 007C                       __end_of_Modbus_getRxBuff 0987  
                      _eusartTxBufferRemaining 006D                __end_of_I2C_SetInterruptHandler 12EA  
                       ModbusSlaveF04@u8regsno 004C                        I2C_MasterOperation@read 0020  
                                     _I2C_Open 1773                                    _device_time 00D7  
                            I2C_ReadNBytes@len 0025                        ??_rd1RegCompleteHandler 0078  
                               _eusartRxBuffer 0146                                ?_ModbusSlaveF04 003E  
                      ??_wr1RegCompleteHandler 0078                       ModbusSlaveF04@u8StartAdd 004A  
                                _TMR1_CallBack 1385                                 _eusartTxBuffer 014E  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATCbits 010E  
                                    clear_ram0 1361                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 00EF  
                              ?_Modbus_calcCRC 0020                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                                       _PIR2bits 0012  
                       ModbusSlaveF04@valueAdd 004E                          __end_of_I2C_MasterFsm 15EF  
                        __end_of_I2C_MasterIsr 127A                              _EUSART_is_tx_done 127A  
                  __end_of_I2C_DO_RX_NACK_STOP 12A6      __end_of_EUSART_DefaultOverrunErrorHandler 126E  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 126A                                       _TMR1_ISR 1392  
                            ModbusSlaveF04@reg 004D                __end_of_I2C_MasterEnableRestart 1245  
                           ?_EUSART_is_tx_done 0070                           buildException@u8func 0022  
                        __end_of_I2C_SetBuffer 147A                              ??_TMR1_Initialize 0022  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                          ??_EUSART_is_tx_done 0020                               ReadData@humidity 00BF  
                                ??_rtcc_handle 0070                                       _App_Init 132A  
                     wr2RegCompleteHandler@ptr 0077                                    _EUSART_Read 166B  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0077  
                             ??_I2C_ReadNBytes 0027                                 ?_TMR1_CallBack 0070  
        Modbus_sendTxBuff@u32overTimecountDown 003A                                     _I2C_Status 0120  
                                     _ReadData 02D1                                   ?_I2C_DO_IDLE 0070  
                                 ?_I2C_DO_RCEN 0070                         ?_rd2RegCompleteHandler 0077  
                             ??_I2C_MasterRead 0022                            I2C_WriteNBytes@data 0028  
                             ??_I2C_MasterOpen 0020                         ?_wr2RegCompleteHandler 0077  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 0020  
                    __end_of_EUSART_is_tx_done 127E                          i1I2C_SetBuffer@buffer 0070  
                         __end_of_I2C_DO_RESET 12B0                        ??_OSCILLATOR_Initialize 0020  
                                  ??__Umul8_16 0022                            _EUSART_ErrorHandler 00E1  
                         _I2C_DO_SEND_ADR_READ 12CF                    ?_EUSART_DefaultErrorHandler 0070  
                     _TMR1_SetInterruptHandler 12D8                          _TMR1_InterruptHandler 00DF  
                              _I2C_MasterClose 125A                  I2C_SetAddressNackCallback@ptr 0026  
                              I2C_Open@address 0022                                       ___xxtofl 0C85  
                              _I2C_MasterStart 1260                                _I2C_MasterWrite 12B5  
                         _EUSART_RxDataHandler 1492                              ??_I2C_WriteNBytes 002B  
                                     __ptext10 12FC                                       __ptext11 12F3  
                                     __ptext20 157B                                       __ptext12 12EA  
                                     __ptext21 0DFC                                       __ptext13 1334  
                                   _T1GCONbits 0019                                       __ptext30 12E1  
                                     __ptext22 04E2                                       __ptext14 0B4A  
                                     __ptext31 0800                                       __ptext23 080D  
                                     __ptext15 17B9                                       __ptext40 143D  
                                     __ptext32 1263                                       __ptext24 1349  
                                     __ptext16 02D1                                       __ptext41 14C6  
                                     __ptext33 12B0                                       __ptext25 1618  
                                     __ptext17 0C85                                       __ptext50 13CE  
                                     __ptext42 0D30                                       __ptext34 1517  
                                     __ptext26 12B5                                       __ptext18 0A54  
                                     __ptext51 127A                                       __ptext43 0AC5  
                                     __ptext35 1260                                       __ptext27 1558  
                                     __ptext19 0096                                       __ptext52 1641  
                                     __ptext44 1696                                       __ptext36 14E0  
                                     __ptext28 1463                                       __ptext61 1392  
                                     __ptext53 0885                                       __ptext45 092B  
                                     __ptext37 125D                                       __ptext29 1773  
                                     __ptext70 12AB                                       __ptext62 13BD  
                                     __ptext54 07CD                                       __ptext46 166B  
                                     __ptext38 125A                                       __ptext71 12A6  
                                     __ptext63 1385                                       __ptext55 132A  
                                     __ptext47 0BE1                                       __ptext39 1257  
                                     __ptext80 08D4                                       __ptext72 12A1  
                                     __ptext64 123F                                       __ptext56 13DF  
                                     __ptext48 06EA                                       __ptext81 12C7  
                                     __ptext73 129C                                       __ptext65 1320  
                                     __ptext57 12D8                                       __ptext49 0987  
                                     __ptext90 126E                                       __ptext82 12CF  
                                     __ptext74 1297                                       __ptext66 1276  
                                     __ptext58 1254                                       __ptext91 1248  
                                     __ptext83 1283                                       __ptext75 1292  
                                     __ptext67 15C7                                       __ptext59 09E6  
                                     __ptext92 0002                                       __ptext84 16C1  
                                     __ptext76 128D                                       __ptext68 1251  
                                     __ptext93 1240                                       __ptext85 124E  
                                     __ptext77 1288                                       __ptext69 15EF  
                                     __ptext94 14AC                                       __ptext86 12BA  
                                     __ptext78 12C0                                       __ptext95 142A  
                                     __ptext87 127E                                       __ptext79 083B  
                                     __ptext96 1417                                       __ptext88 1272  
                                     __ptext97 1404                                       __ptext89 124B  
                                     __ptext98 13F1                                       __ptext99 139F  
                              _validateRequest 0AC5            __end_of_I2C_SetDataCompleteCallback 1349  
                  _I2C_SetDataCompleteCallback 133E                              ??_TMR1_StartTimer 0020  
                      ?_I2C_DO_RX_NACK_RESTART 0070                            __end_of_rtcc_handle 132A  
                     __end_of_I2C_DO_SEND_STOP 129C                  Modbus_getRxBuff@bBuffOverflow 0029  
                      ?_EUSART_SetErrorHandler 0020                                _I2C_SetCallback 1618  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                          Modbus_calcCRC@temp2 0026                        Modbus_sendTxBuff@u16crc 0036  
                                  _MB_Register 015A                                       int$flags 007E  
                            ?_ModbusSlave_Init 0070                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0058                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 12FC                  _EUSART_SetFramingErrorHandler 12F3  
                            ??_TMR1_WriteTimer 0072                             ??_ModbusSlave_Init 0020  
                     __end_of_I2C_MasterIsNack 12C0                       __end_of_I2C_MasterSetIrq 1251  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 0029  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 12AB  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                               _buildException 1696                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 12F3                            _I2C_DO_SEND_RESTART 1292  
         __end_of_EUSART_SetRxInterruptHandler 130E                   _EUSART_SetRxInterruptHandler 1305  
                         Device_Init@value_SW1 0020                           Device_Init@value_SW2 0021  
                         Device_Init@value_SW3 0022                           Device_Init@value_SW4 0023  
                           Modbus_calcCRC@flag 0028                             Modbus_calcCRC@temp 002D  
                                ??_App_Process 0069                                 _Task_Indicator 07CD  
                           _EUSART_Receive_ISR 16EE  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                      __end_of_I2C_MasterClose 125D                        __end_of_I2C_MasterStart 1263  
              ModbusRTU_Slave_Poll@u8exception 0061                        __end_of_I2C_MasterWrite 12BA  
                                ??_Device_Init 0020                                  __pstringtext1 1800  
                                __pstringtext2 1820                         __Umul8_16@multiplicand 0020  
                         ?_I2C_DO_SEND_RESTART 0070                              ?_Modbus_getRxBuff 0070  
                          ?_EUSART_Receive_ISR 0070                        __end_of_validateRequest 0B4A  
                           ??_Modbus_getRxBuff 0022                                    _rtcc_handle 1320  
                             ??_ModbusSlaveF04 0040                              Modbus_calcCRC@len 002A  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                          _ModbusSlave_Process 14C6                         __end_of_buildException 16C1  
                                ___fladd@signs 0058                                     _SES_Modbus 2138  
                           EUSART_Write@txData 0021                        __end_of_I2C_SetCallback 1641  
               __end_of_PIN_MANAGER_Initialize 1517                               ??_Modbus_calcCRC 0022  
                __end_of_rd1RegCompleteHandler 1417                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0028                  __end_of_wr1RegCompleteHandler 143D  
                        _MSSP_InterruptHandler 00EB                                _TMR1_Initialize 147A  
                           Task_Sensor@valTime 0156                         __end_of_Task_Indicator 07FC  
                            __Umul8_16@product 0024                          __end_of_Tick_Init_SES 13F1  
