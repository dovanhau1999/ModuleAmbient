

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Apr 28 15:10:20 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	intentry,global,class=CODE,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   130                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   131                           	dabs	1,0x320,16
   132                           	dabs	1,0x2A0,80
   133                           	dabs	1,0x220,80
   134                           	dabs	1,0x1E8,8
   135                           	dabs	1,0x2138,0,_SES_Modbus
   136                           	dabs	1,0x7E,2
   137     0000                     
   138                           ; Version 2.40
   139                           ; Generated 17/11/2021 GMT
   140                           ; 
   141                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution. Publication is not required when
   155                           ;        this file is used in an embedded application.
   156                           ; 
   157                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   158                           ;        software without specific prior written permission.
   159                           ; 
   160                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   161                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   162                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   163                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   164                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   165                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   166                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   167                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   168                           ; 
   169                           ; 
   170                           ; Code-generator required, PIC16F1936 Definitions
   171                           ; 
   172                           ; SFR Addresses
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     0090                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     0110                     	;# 
   225     0111                     	;# 
   226     0112                     	;# 
   227     0113                     	;# 
   228     0114                     	;# 
   229     0115                     	;# 
   230     0116                     	;# 
   231     0117                     	;# 
   232     0118                     	;# 
   233     0119                     	;# 
   234     011A                     	;# 
   235     011B                     	;# 
   236     011D                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0191                     	;# 
   240     0191                     	;# 
   241     0192                     	;# 
   242     0193                     	;# 
   243     0193                     	;# 
   244     0193                     	;# 
   245     0194                     	;# 
   246     0195                     	;# 
   247     0196                     	;# 
   248     0199                     	;# 
   249     019A                     	;# 
   250     019B                     	;# 
   251     019B                     	;# 
   252     019B                     	;# 
   253     019B                     	;# 
   254     019C                     	;# 
   255     019C                     	;# 
   256     019D                     	;# 
   257     019E                     	;# 
   258     019F                     	;# 
   259     020D                     	;# 
   260     0210                     	;# 
   261     0211                     	;# 
   262     0212                     	;# 
   263     0213                     	;# 
   264     0214                     	;# 
   265     0215                     	;# 
   266     0215                     	;# 
   267     0216                     	;# 
   268     0217                     	;# 
   269     0291                     	;# 
   270     0291                     	;# 
   271     0292                     	;# 
   272     0293                     	;# 
   273     0294                     	;# 
   274     0295                     	;# 
   275     0295                     	;# 
   276     0296                     	;# 
   277     0298                     	;# 
   278     0298                     	;# 
   279     0299                     	;# 
   280     029A                     	;# 
   281     029B                     	;# 
   282     029C                     	;# 
   283     029C                     	;# 
   284     029D                     	;# 
   285     029E                     	;# 
   286     029F                     	;# 
   287     0311                     	;# 
   288     0311                     	;# 
   289     0312                     	;# 
   290     0313                     	;# 
   291     0314                     	;# 
   292     0315                     	;# 
   293     0315                     	;# 
   294     0316                     	;# 
   295     0318                     	;# 
   296     0318                     	;# 
   297     0319                     	;# 
   298     031A                     	;# 
   299     031C                     	;# 
   300     031C                     	;# 
   301     031D                     	;# 
   302     031E                     	;# 
   303     0394                     	;# 
   304     0395                     	;# 
   305     0396                     	;# 
   306     0415                     	;# 
   307     0416                     	;# 
   308     0417                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     0791                     	;# 
   313     0792                     	;# 
   314     0793                     	;# 
   315     0794                     	;# 
   316     0795                     	;# 
   317     0798                     	;# 
   318     0799                     	;# 
   319     07A0                     	;# 
   320     07A1                     	;# 
   321     07A3                     	;# 
   322     07A4                     	;# 
   323     07A6                     	;# 
   324     07A7                     	;# 
   325     07A9                     	;# 
   326     07AA                     	;# 
   327     0FE4                     	;# 
   328     0FE5                     	;# 
   329     0FE6                     	;# 
   330     0FE7                     	;# 
   331     0FE8                     	;# 
   332     0FE9                     	;# 
   333     0FEA                     	;# 
   334     0FEB                     	;# 
   335     0FED                     	;# 
   336     0FEE                     	;# 
   337     0FEF                     	;# 
   338     0000                     	;# 
   339     0001                     	;# 
   340     0002                     	;# 
   341     0003                     	;# 
   342     0004                     	;# 
   343     0005                     	;# 
   344     0006                     	;# 
   345     0007                     	;# 
   346     0008                     	;# 
   347     0009                     	;# 
   348     000A                     	;# 
   349     000B                     	;# 
   350     000C                     	;# 
   351     000D                     	;# 
   352     000E                     	;# 
   353     0010                     	;# 
   354     0011                     	;# 
   355     0012                     	;# 
   356     0013                     	;# 
   357     0015                     	;# 
   358     0016                     	;# 
   359     0016                     	;# 
   360     0017                     	;# 
   361     0018                     	;# 
   362     0019                     	;# 
   363     001A                     	;# 
   364     001B                     	;# 
   365     001C                     	;# 
   366     001E                     	;# 
   367     001F                     	;# 
   368     008C                     	;# 
   369     008D                     	;# 
   370     008E                     	;# 
   371     0090                     	;# 
   372     0091                     	;# 
   373     0092                     	;# 
   374     0093                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009B                     	;# 
   383     009C                     	;# 
   384     009D                     	;# 
   385     009E                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     0110                     	;# 
   390     0111                     	;# 
   391     0112                     	;# 
   392     0113                     	;# 
   393     0114                     	;# 
   394     0115                     	;# 
   395     0116                     	;# 
   396     0117                     	;# 
   397     0118                     	;# 
   398     0119                     	;# 
   399     011A                     	;# 
   400     011B                     	;# 
   401     011D                     	;# 
   402     018C                     	;# 
   403     018D                     	;# 
   404     0191                     	;# 
   405     0191                     	;# 
   406     0192                     	;# 
   407     0193                     	;# 
   408     0193                     	;# 
   409     0193                     	;# 
   410     0194                     	;# 
   411     0195                     	;# 
   412     0196                     	;# 
   413     0199                     	;# 
   414     019A                     	;# 
   415     019B                     	;# 
   416     019B                     	;# 
   417     019B                     	;# 
   418     019B                     	;# 
   419     019C                     	;# 
   420     019C                     	;# 
   421     019D                     	;# 
   422     019E                     	;# 
   423     019F                     	;# 
   424     020D                     	;# 
   425     0210                     	;# 
   426     0211                     	;# 
   427     0212                     	;# 
   428     0213                     	;# 
   429     0214                     	;# 
   430     0215                     	;# 
   431     0215                     	;# 
   432     0216                     	;# 
   433     0217                     	;# 
   434     0291                     	;# 
   435     0291                     	;# 
   436     0292                     	;# 
   437     0293                     	;# 
   438     0294                     	;# 
   439     0295                     	;# 
   440     0295                     	;# 
   441     0296                     	;# 
   442     0298                     	;# 
   443     0298                     	;# 
   444     0299                     	;# 
   445     029A                     	;# 
   446     029B                     	;# 
   447     029C                     	;# 
   448     029C                     	;# 
   449     029D                     	;# 
   450     029E                     	;# 
   451     029F                     	;# 
   452     0311                     	;# 
   453     0311                     	;# 
   454     0312                     	;# 
   455     0313                     	;# 
   456     0314                     	;# 
   457     0315                     	;# 
   458     0315                     	;# 
   459     0316                     	;# 
   460     0318                     	;# 
   461     0318                     	;# 
   462     0319                     	;# 
   463     031A                     	;# 
   464     031C                     	;# 
   465     031C                     	;# 
   466     031D                     	;# 
   467     031E                     	;# 
   468     0394                     	;# 
   469     0395                     	;# 
   470     0396                     	;# 
   471     0415                     	;# 
   472     0416                     	;# 
   473     0417                     	;# 
   474     041C                     	;# 
   475     041D                     	;# 
   476     041E                     	;# 
   477     0791                     	;# 
   478     0792                     	;# 
   479     0793                     	;# 
   480     0794                     	;# 
   481     0795                     	;# 
   482     0798                     	;# 
   483     0799                     	;# 
   484     07A0                     	;# 
   485     07A1                     	;# 
   486     07A3                     	;# 
   487     07A4                     	;# 
   488     07A6                     	;# 
   489     07A7                     	;# 
   490     07A9                     	;# 
   491     07AA                     	;# 
   492     0FE4                     	;# 
   493     0FE5                     	;# 
   494     0FE6                     	;# 
   495     0FE7                     	;# 
   496     0FE8                     	;# 
   497     0FE9                     	;# 
   498     0FEA                     	;# 
   499     0FEB                     	;# 
   500     0FED                     	;# 
   501     0FEE                     	;# 
   502     0FEF                     	;# 
   503     0000                     	;# 
   504     0001                     	;# 
   505     0002                     	;# 
   506     0003                     	;# 
   507     0004                     	;# 
   508     0005                     	;# 
   509     0006                     	;# 
   510     0007                     	;# 
   511     0008                     	;# 
   512     0009                     	;# 
   513     000A                     	;# 
   514     000B                     	;# 
   515     000C                     	;# 
   516     000D                     	;# 
   517     000E                     	;# 
   518     0010                     	;# 
   519     0011                     	;# 
   520     0012                     	;# 
   521     0013                     	;# 
   522     0015                     	;# 
   523     0016                     	;# 
   524     0016                     	;# 
   525     0017                     	;# 
   526     0018                     	;# 
   527     0019                     	;# 
   528     001A                     	;# 
   529     001B                     	;# 
   530     001C                     	;# 
   531     001E                     	;# 
   532     001F                     	;# 
   533     008C                     	;# 
   534     008D                     	;# 
   535     008E                     	;# 
   536     0090                     	;# 
   537     0091                     	;# 
   538     0092                     	;# 
   539     0093                     	;# 
   540     0095                     	;# 
   541     0096                     	;# 
   542     0097                     	;# 
   543     0098                     	;# 
   544     0099                     	;# 
   545     009A                     	;# 
   546     009B                     	;# 
   547     009B                     	;# 
   548     009C                     	;# 
   549     009D                     	;# 
   550     009E                     	;# 
   551     010C                     	;# 
   552     010D                     	;# 
   553     010E                     	;# 
   554     0110                     	;# 
   555     0111                     	;# 
   556     0112                     	;# 
   557     0113                     	;# 
   558     0114                     	;# 
   559     0115                     	;# 
   560     0116                     	;# 
   561     0117                     	;# 
   562     0118                     	;# 
   563     0119                     	;# 
   564     011A                     	;# 
   565     011B                     	;# 
   566     011D                     	;# 
   567     018C                     	;# 
   568     018D                     	;# 
   569     0191                     	;# 
   570     0191                     	;# 
   571     0192                     	;# 
   572     0193                     	;# 
   573     0193                     	;# 
   574     0193                     	;# 
   575     0194                     	;# 
   576     0195                     	;# 
   577     0196                     	;# 
   578     0199                     	;# 
   579     019A                     	;# 
   580     019B                     	;# 
   581     019B                     	;# 
   582     019B                     	;# 
   583     019B                     	;# 
   584     019C                     	;# 
   585     019C                     	;# 
   586     019D                     	;# 
   587     019E                     	;# 
   588     019F                     	;# 
   589     020D                     	;# 
   590     0210                     	;# 
   591     0211                     	;# 
   592     0212                     	;# 
   593     0213                     	;# 
   594     0214                     	;# 
   595     0215                     	;# 
   596     0215                     	;# 
   597     0216                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029C                     	;# 
   614     029D                     	;# 
   615     029E                     	;# 
   616     029F                     	;# 
   617     0311                     	;# 
   618     0311                     	;# 
   619     0312                     	;# 
   620     0313                     	;# 
   621     0314                     	;# 
   622     0315                     	;# 
   623     0315                     	;# 
   624     0316                     	;# 
   625     0318                     	;# 
   626     0318                     	;# 
   627     0319                     	;# 
   628     031A                     	;# 
   629     031C                     	;# 
   630     031C                     	;# 
   631     031D                     	;# 
   632     031E                     	;# 
   633     0394                     	;# 
   634     0395                     	;# 
   635     0396                     	;# 
   636     0415                     	;# 
   637     0416                     	;# 
   638     0417                     	;# 
   639     041C                     	;# 
   640     041D                     	;# 
   641     041E                     	;# 
   642     0791                     	;# 
   643     0792                     	;# 
   644     0793                     	;# 
   645     0794                     	;# 
   646     0795                     	;# 
   647     0798                     	;# 
   648     0799                     	;# 
   649     07A0                     	;# 
   650     07A1                     	;# 
   651     07A3                     	;# 
   652     07A4                     	;# 
   653     07A6                     	;# 
   654     07A7                     	;# 
   655     07A9                     	;# 
   656     07AA                     	;# 
   657     0FE4                     	;# 
   658     0FE5                     	;# 
   659     0FE6                     	;# 
   660     0FE7                     	;# 
   661     0FE8                     	;# 
   662     0FE9                     	;# 
   663     0FEA                     	;# 
   664     0FEB                     	;# 
   665     0FED                     	;# 
   666     0FEE                     	;# 
   667     0FEF                     	;# 
   668     0000                     	;# 
   669     0001                     	;# 
   670     0002                     	;# 
   671     0003                     	;# 
   672     0004                     	;# 
   673     0005                     	;# 
   674     0006                     	;# 
   675     0007                     	;# 
   676     0008                     	;# 
   677     0009                     	;# 
   678     000A                     	;# 
   679     000B                     	;# 
   680     000C                     	;# 
   681     000D                     	;# 
   682     000E                     	;# 
   683     0010                     	;# 
   684     0011                     	;# 
   685     0012                     	;# 
   686     0013                     	;# 
   687     0015                     	;# 
   688     0016                     	;# 
   689     0016                     	;# 
   690     0017                     	;# 
   691     0018                     	;# 
   692     0019                     	;# 
   693     001A                     	;# 
   694     001B                     	;# 
   695     001C                     	;# 
   696     001E                     	;# 
   697     001F                     	;# 
   698     008C                     	;# 
   699     008D                     	;# 
   700     008E                     	;# 
   701     0090                     	;# 
   702     0091                     	;# 
   703     0092                     	;# 
   704     0093                     	;# 
   705     0095                     	;# 
   706     0096                     	;# 
   707     0097                     	;# 
   708     0098                     	;# 
   709     0099                     	;# 
   710     009A                     	;# 
   711     009B                     	;# 
   712     009B                     	;# 
   713     009C                     	;# 
   714     009D                     	;# 
   715     009E                     	;# 
   716     010C                     	;# 
   717     010D                     	;# 
   718     010E                     	;# 
   719     0110                     	;# 
   720     0111                     	;# 
   721     0112                     	;# 
   722     0113                     	;# 
   723     0114                     	;# 
   724     0115                     	;# 
   725     0116                     	;# 
   726     0117                     	;# 
   727     0118                     	;# 
   728     0119                     	;# 
   729     011A                     	;# 
   730     011B                     	;# 
   731     011D                     	;# 
   732     018C                     	;# 
   733     018D                     	;# 
   734     0191                     	;# 
   735     0191                     	;# 
   736     0192                     	;# 
   737     0193                     	;# 
   738     0193                     	;# 
   739     0193                     	;# 
   740     0194                     	;# 
   741     0195                     	;# 
   742     0196                     	;# 
   743     0199                     	;# 
   744     019A                     	;# 
   745     019B                     	;# 
   746     019B                     	;# 
   747     019B                     	;# 
   748     019B                     	;# 
   749     019C                     	;# 
   750     019C                     	;# 
   751     019D                     	;# 
   752     019E                     	;# 
   753     019F                     	;# 
   754     020D                     	;# 
   755     0210                     	;# 
   756     0211                     	;# 
   757     0212                     	;# 
   758     0213                     	;# 
   759     0214                     	;# 
   760     0215                     	;# 
   761     0215                     	;# 
   762     0216                     	;# 
   763     0217                     	;# 
   764     0291                     	;# 
   765     0291                     	;# 
   766     0292                     	;# 
   767     0293                     	;# 
   768     0294                     	;# 
   769     0295                     	;# 
   770     0295                     	;# 
   771     0296                     	;# 
   772     0298                     	;# 
   773     0298                     	;# 
   774     0299                     	;# 
   775     029A                     	;# 
   776     029B                     	;# 
   777     029C                     	;# 
   778     029C                     	;# 
   779     029D                     	;# 
   780     029E                     	;# 
   781     029F                     	;# 
   782     0311                     	;# 
   783     0311                     	;# 
   784     0312                     	;# 
   785     0313                     	;# 
   786     0314                     	;# 
   787     0315                     	;# 
   788     0315                     	;# 
   789     0316                     	;# 
   790     0318                     	;# 
   791     0318                     	;# 
   792     0319                     	;# 
   793     031A                     	;# 
   794     031C                     	;# 
   795     031C                     	;# 
   796     031D                     	;# 
   797     031E                     	;# 
   798     0394                     	;# 
   799     0395                     	;# 
   800     0396                     	;# 
   801     0415                     	;# 
   802     0416                     	;# 
   803     0417                     	;# 
   804     041C                     	;# 
   805     041D                     	;# 
   806     041E                     	;# 
   807     0791                     	;# 
   808     0792                     	;# 
   809     0793                     	;# 
   810     0794                     	;# 
   811     0795                     	;# 
   812     0798                     	;# 
   813     0799                     	;# 
   814     07A0                     	;# 
   815     07A1                     	;# 
   816     07A3                     	;# 
   817     07A4                     	;# 
   818     07A6                     	;# 
   819     07A7                     	;# 
   820     07A9                     	;# 
   821     07AA                     	;# 
   822     0FE4                     	;# 
   823     0FE5                     	;# 
   824     0FE6                     	;# 
   825     0FE7                     	;# 
   826     0FE8                     	;# 
   827     0FE9                     	;# 
   828     0FEA                     	;# 
   829     0FEB                     	;# 
   830     0FED                     	;# 
   831     0FEE                     	;# 
   832     0FEF                     	;# 
   833     0000                     	;# 
   834     0001                     	;# 
   835     0002                     	;# 
   836     0003                     	;# 
   837     0004                     	;# 
   838     0005                     	;# 
   839     0006                     	;# 
   840     0007                     	;# 
   841     0008                     	;# 
   842     0009                     	;# 
   843     000A                     	;# 
   844     000B                     	;# 
   845     000C                     	;# 
   846     000D                     	;# 
   847     000E                     	;# 
   848     0010                     	;# 
   849     0011                     	;# 
   850     0012                     	;# 
   851     0013                     	;# 
   852     0015                     	;# 
   853     0016                     	;# 
   854     0016                     	;# 
   855     0017                     	;# 
   856     0018                     	;# 
   857     0019                     	;# 
   858     001A                     	;# 
   859     001B                     	;# 
   860     001C                     	;# 
   861     001E                     	;# 
   862     001F                     	;# 
   863     008C                     	;# 
   864     008D                     	;# 
   865     008E                     	;# 
   866     0090                     	;# 
   867     0091                     	;# 
   868     0092                     	;# 
   869     0093                     	;# 
   870     0095                     	;# 
   871     0096                     	;# 
   872     0097                     	;# 
   873     0098                     	;# 
   874     0099                     	;# 
   875     009A                     	;# 
   876     009B                     	;# 
   877     009B                     	;# 
   878     009C                     	;# 
   879     009D                     	;# 
   880     009E                     	;# 
   881     010C                     	;# 
   882     010D                     	;# 
   883     010E                     	;# 
   884     0110                     	;# 
   885     0111                     	;# 
   886     0112                     	;# 
   887     0113                     	;# 
   888     0114                     	;# 
   889     0115                     	;# 
   890     0116                     	;# 
   891     0117                     	;# 
   892     0118                     	;# 
   893     0119                     	;# 
   894     011A                     	;# 
   895     011B                     	;# 
   896     011D                     	;# 
   897     018C                     	;# 
   898     018D                     	;# 
   899     0191                     	;# 
   900     0191                     	;# 
   901     0192                     	;# 
   902     0193                     	;# 
   903     0193                     	;# 
   904     0193                     	;# 
   905     0194                     	;# 
   906     0195                     	;# 
   907     0196                     	;# 
   908     0199                     	;# 
   909     019A                     	;# 
   910     019B                     	;# 
   911     019B                     	;# 
   912     019B                     	;# 
   913     019B                     	;# 
   914     019C                     	;# 
   915     019C                     	;# 
   916     019D                     	;# 
   917     019E                     	;# 
   918     019F                     	;# 
   919     020D                     	;# 
   920     0210                     	;# 
   921     0211                     	;# 
   922     0212                     	;# 
   923     0213                     	;# 
   924     0214                     	;# 
   925     0215                     	;# 
   926     0215                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0291                     	;# 
   930     0291                     	;# 
   931     0292                     	;# 
   932     0293                     	;# 
   933     0294                     	;# 
   934     0295                     	;# 
   935     0295                     	;# 
   936     0296                     	;# 
   937     0298                     	;# 
   938     0298                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     029B                     	;# 
   942     029C                     	;# 
   943     029C                     	;# 
   944     029D                     	;# 
   945     029E                     	;# 
   946     029F                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0315                     	;# 
   954     0316                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031C                     	;# 
   960     031C                     	;# 
   961     031D                     	;# 
   962     031E                     	;# 
   963     0394                     	;# 
   964     0395                     	;# 
   965     0396                     	;# 
   966     0415                     	;# 
   967     0416                     	;# 
   968     0417                     	;# 
   969     041C                     	;# 
   970     041D                     	;# 
   971     041E                     	;# 
   972     0791                     	;# 
   973     0792                     	;# 
   974     0793                     	;# 
   975     0794                     	;# 
   976     0795                     	;# 
   977     0798                     	;# 
   978     0799                     	;# 
   979     07A0                     	;# 
   980     07A1                     	;# 
   981     07A3                     	;# 
   982     07A4                     	;# 
   983     07A6                     	;# 
   984     07A7                     	;# 
   985     07A9                     	;# 
   986     07AA                     	;# 
   987     0FE4                     	;# 
   988     0FE5                     	;# 
   989     0FE6                     	;# 
   990     0FE7                     	;# 
   991     0FE8                     	;# 
   992     0FE9                     	;# 
   993     0FEA                     	;# 
   994     0FEB                     	;# 
   995     0FED                     	;# 
   996     0FEE                     	;# 
   997     0FEF                     	;# 
   998     0000                     	;# 
   999     0001                     	;# 
  1000     0002                     	;# 
  1001     0003                     	;# 
  1002     0004                     	;# 
  1003     0005                     	;# 
  1004     0006                     	;# 
  1005     0007                     	;# 
  1006     0008                     	;# 
  1007     0009                     	;# 
  1008     000A                     	;# 
  1009     000B                     	;# 
  1010     000C                     	;# 
  1011     000D                     	;# 
  1012     000E                     	;# 
  1013     0010                     	;# 
  1014     0011                     	;# 
  1015     0012                     	;# 
  1016     0013                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001B                     	;# 
  1025     001C                     	;# 
  1026     001E                     	;# 
  1027     001F                     	;# 
  1028     008C                     	;# 
  1029     008D                     	;# 
  1030     008E                     	;# 
  1031     0090                     	;# 
  1032     0091                     	;# 
  1033     0092                     	;# 
  1034     0093                     	;# 
  1035     0095                     	;# 
  1036     0096                     	;# 
  1037     0097                     	;# 
  1038     0098                     	;# 
  1039     0099                     	;# 
  1040     009A                     	;# 
  1041     009B                     	;# 
  1042     009B                     	;# 
  1043     009C                     	;# 
  1044     009D                     	;# 
  1045     009E                     	;# 
  1046     010C                     	;# 
  1047     010D                     	;# 
  1048     010E                     	;# 
  1049     0110                     	;# 
  1050     0111                     	;# 
  1051     0112                     	;# 
  1052     0113                     	;# 
  1053     0114                     	;# 
  1054     0115                     	;# 
  1055     0116                     	;# 
  1056     0117                     	;# 
  1057     0118                     	;# 
  1058     0119                     	;# 
  1059     011A                     	;# 
  1060     011B                     	;# 
  1061     011D                     	;# 
  1062     018C                     	;# 
  1063     018D                     	;# 
  1064     0191                     	;# 
  1065     0191                     	;# 
  1066     0192                     	;# 
  1067     0193                     	;# 
  1068     0193                     	;# 
  1069     0193                     	;# 
  1070     0194                     	;# 
  1071     0195                     	;# 
  1072     0196                     	;# 
  1073     0199                     	;# 
  1074     019A                     	;# 
  1075     019B                     	;# 
  1076     019B                     	;# 
  1077     019B                     	;# 
  1078     019B                     	;# 
  1079     019C                     	;# 
  1080     019C                     	;# 
  1081     019D                     	;# 
  1082     019E                     	;# 
  1083     019F                     	;# 
  1084     020D                     	;# 
  1085     0210                     	;# 
  1086     0211                     	;# 
  1087     0212                     	;# 
  1088     0213                     	;# 
  1089     0214                     	;# 
  1090     0215                     	;# 
  1091     0215                     	;# 
  1092     0216                     	;# 
  1093     0217                     	;# 
  1094     0291                     	;# 
  1095     0291                     	;# 
  1096     0292                     	;# 
  1097     0293                     	;# 
  1098     0294                     	;# 
  1099     0295                     	;# 
  1100     0295                     	;# 
  1101     0296                     	;# 
  1102     0298                     	;# 
  1103     0298                     	;# 
  1104     0299                     	;# 
  1105     029A                     	;# 
  1106     029B                     	;# 
  1107     029C                     	;# 
  1108     029C                     	;# 
  1109     029D                     	;# 
  1110     029E                     	;# 
  1111     029F                     	;# 
  1112     0311                     	;# 
  1113     0311                     	;# 
  1114     0312                     	;# 
  1115     0313                     	;# 
  1116     0314                     	;# 
  1117     0315                     	;# 
  1118     0315                     	;# 
  1119     0316                     	;# 
  1120     0318                     	;# 
  1121     0318                     	;# 
  1122     0319                     	;# 
  1123     031A                     	;# 
  1124     031C                     	;# 
  1125     031C                     	;# 
  1126     031D                     	;# 
  1127     031E                     	;# 
  1128     0394                     	;# 
  1129     0395                     	;# 
  1130     0396                     	;# 
  1131     0415                     	;# 
  1132     0416                     	;# 
  1133     0417                     	;# 
  1134     041C                     	;# 
  1135     041D                     	;# 
  1136     041E                     	;# 
  1137     0791                     	;# 
  1138     0792                     	;# 
  1139     0793                     	;# 
  1140     0794                     	;# 
  1141     0795                     	;# 
  1142     0798                     	;# 
  1143     0799                     	;# 
  1144     07A0                     	;# 
  1145     07A1                     	;# 
  1146     07A3                     	;# 
  1147     07A4                     	;# 
  1148     07A6                     	;# 
  1149     07A7                     	;# 
  1150     07A9                     	;# 
  1151     07AA                     	;# 
  1152     0FE4                     	;# 
  1153     0FE5                     	;# 
  1154     0FE6                     	;# 
  1155     0FE7                     	;# 
  1156     0FE8                     	;# 
  1157     0FE9                     	;# 
  1158     0FEA                     	;# 
  1159     0FEB                     	;# 
  1160     0FED                     	;# 
  1161     0FEE                     	;# 
  1162     0FEF                     	;# 
  1163     0000                     	;# 
  1164     0001                     	;# 
  1165     0002                     	;# 
  1166     0003                     	;# 
  1167     0004                     	;# 
  1168     0005                     	;# 
  1169     0006                     	;# 
  1170     0007                     	;# 
  1171     0008                     	;# 
  1172     0009                     	;# 
  1173     000A                     	;# 
  1174     000B                     	;# 
  1175     000C                     	;# 
  1176     000D                     	;# 
  1177     000E                     	;# 
  1178     0010                     	;# 
  1179     0011                     	;# 
  1180     0012                     	;# 
  1181     0013                     	;# 
  1182     0015                     	;# 
  1183     0016                     	;# 
  1184     0016                     	;# 
  1185     0017                     	;# 
  1186     0018                     	;# 
  1187     0019                     	;# 
  1188     001A                     	;# 
  1189     001B                     	;# 
  1190     001C                     	;# 
  1191     001E                     	;# 
  1192     001F                     	;# 
  1193     008C                     	;# 
  1194     008D                     	;# 
  1195     008E                     	;# 
  1196     0090                     	;# 
  1197     0091                     	;# 
  1198     0092                     	;# 
  1199     0093                     	;# 
  1200     0095                     	;# 
  1201     0096                     	;# 
  1202     0097                     	;# 
  1203     0098                     	;# 
  1204     0099                     	;# 
  1205     009A                     	;# 
  1206     009B                     	;# 
  1207     009B                     	;# 
  1208     009C                     	;# 
  1209     009D                     	;# 
  1210     009E                     	;# 
  1211     010C                     	;# 
  1212     010D                     	;# 
  1213     010E                     	;# 
  1214     0110                     	;# 
  1215     0111                     	;# 
  1216     0112                     	;# 
  1217     0113                     	;# 
  1218     0114                     	;# 
  1219     0115                     	;# 
  1220     0116                     	;# 
  1221     0117                     	;# 
  1222     0118                     	;# 
  1223     0119                     	;# 
  1224     011A                     	;# 
  1225     011B                     	;# 
  1226     011D                     	;# 
  1227     018C                     	;# 
  1228     018D                     	;# 
  1229     0191                     	;# 
  1230     0191                     	;# 
  1231     0192                     	;# 
  1232     0193                     	;# 
  1233     0193                     	;# 
  1234     0193                     	;# 
  1235     0194                     	;# 
  1236     0195                     	;# 
  1237     0196                     	;# 
  1238     0199                     	;# 
  1239     019A                     	;# 
  1240     019B                     	;# 
  1241     019B                     	;# 
  1242     019B                     	;# 
  1243     019B                     	;# 
  1244     019C                     	;# 
  1245     019C                     	;# 
  1246     019D                     	;# 
  1247     019E                     	;# 
  1248     019F                     	;# 
  1249     020D                     	;# 
  1250     0210                     	;# 
  1251     0211                     	;# 
  1252     0212                     	;# 
  1253     0213                     	;# 
  1254     0214                     	;# 
  1255     0215                     	;# 
  1256     0215                     	;# 
  1257     0216                     	;# 
  1258     0217                     	;# 
  1259     0291                     	;# 
  1260     0291                     	;# 
  1261     0292                     	;# 
  1262     0293                     	;# 
  1263     0294                     	;# 
  1264     0295                     	;# 
  1265     0295                     	;# 
  1266     0296                     	;# 
  1267     0298                     	;# 
  1268     0298                     	;# 
  1269     0299                     	;# 
  1270     029A                     	;# 
  1271     029B                     	;# 
  1272     029C                     	;# 
  1273     029C                     	;# 
  1274     029D                     	;# 
  1275     029E                     	;# 
  1276     029F                     	;# 
  1277     0311                     	;# 
  1278     0311                     	;# 
  1279     0312                     	;# 
  1280     0313                     	;# 
  1281     0314                     	;# 
  1282     0315                     	;# 
  1283     0315                     	;# 
  1284     0316                     	;# 
  1285     0318                     	;# 
  1286     0318                     	;# 
  1287     0319                     	;# 
  1288     031A                     	;# 
  1289     031C                     	;# 
  1290     031C                     	;# 
  1291     031D                     	;# 
  1292     031E                     	;# 
  1293     0394                     	;# 
  1294     0395                     	;# 
  1295     0396                     	;# 
  1296     0415                     	;# 
  1297     0416                     	;# 
  1298     0417                     	;# 
  1299     041C                     	;# 
  1300     041D                     	;# 
  1301     041E                     	;# 
  1302     0791                     	;# 
  1303     0792                     	;# 
  1304     0793                     	;# 
  1305     0794                     	;# 
  1306     0795                     	;# 
  1307     0798                     	;# 
  1308     0799                     	;# 
  1309     07A0                     	;# 
  1310     07A1                     	;# 
  1311     07A3                     	;# 
  1312     07A4                     	;# 
  1313     07A6                     	;# 
  1314     07A7                     	;# 
  1315     07A9                     	;# 
  1316     07AA                     	;# 
  1317     0FE4                     	;# 
  1318     0FE5                     	;# 
  1319     0FE6                     	;# 
  1320     0FE7                     	;# 
  1321     0FE8                     	;# 
  1322     0FE9                     	;# 
  1323     0FEA                     	;# 
  1324     0FEB                     	;# 
  1325     0FED                     	;# 
  1326     0FEE                     	;# 
  1327     0FEF                     	;# 
  1328     0000                     	;# 
  1329     0001                     	;# 
  1330     0002                     	;# 
  1331     0003                     	;# 
  1332     0004                     	;# 
  1333     0005                     	;# 
  1334     0006                     	;# 
  1335     0007                     	;# 
  1336     0008                     	;# 
  1337     0009                     	;# 
  1338     000A                     	;# 
  1339     000B                     	;# 
  1340     000C                     	;# 
  1341     000D                     	;# 
  1342     000E                     	;# 
  1343     0010                     	;# 
  1344     0011                     	;# 
  1345     0012                     	;# 
  1346     0013                     	;# 
  1347     0015                     	;# 
  1348     0016                     	;# 
  1349     0016                     	;# 
  1350     0017                     	;# 
  1351     0018                     	;# 
  1352     0019                     	;# 
  1353     001A                     	;# 
  1354     001B                     	;# 
  1355     001C                     	;# 
  1356     001E                     	;# 
  1357     001F                     	;# 
  1358     008C                     	;# 
  1359     008D                     	;# 
  1360     008E                     	;# 
  1361     0090                     	;# 
  1362     0091                     	;# 
  1363     0092                     	;# 
  1364     0093                     	;# 
  1365     0095                     	;# 
  1366     0096                     	;# 
  1367     0097                     	;# 
  1368     0098                     	;# 
  1369     0099                     	;# 
  1370     009A                     	;# 
  1371     009B                     	;# 
  1372     009B                     	;# 
  1373     009C                     	;# 
  1374     009D                     	;# 
  1375     009E                     	;# 
  1376     010C                     	;# 
  1377     010D                     	;# 
  1378     010E                     	;# 
  1379     0110                     	;# 
  1380     0111                     	;# 
  1381     0112                     	;# 
  1382     0113                     	;# 
  1383     0114                     	;# 
  1384     0115                     	;# 
  1385     0116                     	;# 
  1386     0117                     	;# 
  1387     0118                     	;# 
  1388     0119                     	;# 
  1389     011A                     	;# 
  1390     011B                     	;# 
  1391     011D                     	;# 
  1392     018C                     	;# 
  1393     018D                     	;# 
  1394     0191                     	;# 
  1395     0191                     	;# 
  1396     0192                     	;# 
  1397     0193                     	;# 
  1398     0193                     	;# 
  1399     0193                     	;# 
  1400     0194                     	;# 
  1401     0195                     	;# 
  1402     0196                     	;# 
  1403     0199                     	;# 
  1404     019A                     	;# 
  1405     019B                     	;# 
  1406     019B                     	;# 
  1407     019B                     	;# 
  1408     019B                     	;# 
  1409     019C                     	;# 
  1410     019C                     	;# 
  1411     019D                     	;# 
  1412     019E                     	;# 
  1413     019F                     	;# 
  1414     020D                     	;# 
  1415     0210                     	;# 
  1416     0211                     	;# 
  1417     0212                     	;# 
  1418     0213                     	;# 
  1419     0214                     	;# 
  1420     0215                     	;# 
  1421     0215                     	;# 
  1422     0216                     	;# 
  1423     0217                     	;# 
  1424     0291                     	;# 
  1425     0291                     	;# 
  1426     0292                     	;# 
  1427     0293                     	;# 
  1428     0294                     	;# 
  1429     0295                     	;# 
  1430     0295                     	;# 
  1431     0296                     	;# 
  1432     0298                     	;# 
  1433     0298                     	;# 
  1434     0299                     	;# 
  1435     029A                     	;# 
  1436     029B                     	;# 
  1437     029C                     	;# 
  1438     029C                     	;# 
  1439     029D                     	;# 
  1440     029E                     	;# 
  1441     029F                     	;# 
  1442     0311                     	;# 
  1443     0311                     	;# 
  1444     0312                     	;# 
  1445     0313                     	;# 
  1446     0314                     	;# 
  1447     0315                     	;# 
  1448     0315                     	;# 
  1449     0316                     	;# 
  1450     0318                     	;# 
  1451     0318                     	;# 
  1452     0319                     	;# 
  1453     031A                     	;# 
  1454     031C                     	;# 
  1455     031C                     	;# 
  1456     031D                     	;# 
  1457     031E                     	;# 
  1458     0394                     	;# 
  1459     0395                     	;# 
  1460     0396                     	;# 
  1461     0415                     	;# 
  1462     0416                     	;# 
  1463     0417                     	;# 
  1464     041C                     	;# 
  1465     041D                     	;# 
  1466     041E                     	;# 
  1467     0791                     	;# 
  1468     0792                     	;# 
  1469     0793                     	;# 
  1470     0794                     	;# 
  1471     0795                     	;# 
  1472     0798                     	;# 
  1473     0799                     	;# 
  1474     07A0                     	;# 
  1475     07A1                     	;# 
  1476     07A3                     	;# 
  1477     07A4                     	;# 
  1478     07A6                     	;# 
  1479     07A7                     	;# 
  1480     07A9                     	;# 
  1481     07AA                     	;# 
  1482     0FE4                     	;# 
  1483     0FE5                     	;# 
  1484     0FE6                     	;# 
  1485     0FE7                     	;# 
  1486     0FE8                     	;# 
  1487     0FE9                     	;# 
  1488     0FEA                     	;# 
  1489     0FEB                     	;# 
  1490     0FED                     	;# 
  1491     0FEE                     	;# 
  1492     0FEF                     	;# 
  1493     0000                     	;# 
  1494     0001                     	;# 
  1495     0002                     	;# 
  1496     0003                     	;# 
  1497     0004                     	;# 
  1498     0005                     	;# 
  1499     0006                     	;# 
  1500     0007                     	;# 
  1501     0008                     	;# 
  1502     0009                     	;# 
  1503     000A                     	;# 
  1504     000B                     	;# 
  1505     000C                     	;# 
  1506     000D                     	;# 
  1507     000E                     	;# 
  1508     0010                     	;# 
  1509     0011                     	;# 
  1510     0012                     	;# 
  1511     0013                     	;# 
  1512     0015                     	;# 
  1513     0016                     	;# 
  1514     0016                     	;# 
  1515     0017                     	;# 
  1516     0018                     	;# 
  1517     0019                     	;# 
  1518     001A                     	;# 
  1519     001B                     	;# 
  1520     001C                     	;# 
  1521     001E                     	;# 
  1522     001F                     	;# 
  1523     008C                     	;# 
  1524     008D                     	;# 
  1525     008E                     	;# 
  1526     0090                     	;# 
  1527     0091                     	;# 
  1528     0092                     	;# 
  1529     0093                     	;# 
  1530     0095                     	;# 
  1531     0096                     	;# 
  1532     0097                     	;# 
  1533     0098                     	;# 
  1534     0099                     	;# 
  1535     009A                     	;# 
  1536     009B                     	;# 
  1537     009B                     	;# 
  1538     009C                     	;# 
  1539     009D                     	;# 
  1540     009E                     	;# 
  1541     010C                     	;# 
  1542     010D                     	;# 
  1543     010E                     	;# 
  1544     0110                     	;# 
  1545     0111                     	;# 
  1546     0112                     	;# 
  1547     0113                     	;# 
  1548     0114                     	;# 
  1549     0115                     	;# 
  1550     0116                     	;# 
  1551     0117                     	;# 
  1552     0118                     	;# 
  1553     0119                     	;# 
  1554     011A                     	;# 
  1555     011B                     	;# 
  1556     011D                     	;# 
  1557     018C                     	;# 
  1558     018D                     	;# 
  1559     0191                     	;# 
  1560     0191                     	;# 
  1561     0192                     	;# 
  1562     0193                     	;# 
  1563     0193                     	;# 
  1564     0193                     	;# 
  1565     0194                     	;# 
  1566     0195                     	;# 
  1567     0196                     	;# 
  1568     0199                     	;# 
  1569     019A                     	;# 
  1570     019B                     	;# 
  1571     019B                     	;# 
  1572     019B                     	;# 
  1573     019B                     	;# 
  1574     019C                     	;# 
  1575     019C                     	;# 
  1576     019D                     	;# 
  1577     019E                     	;# 
  1578     019F                     	;# 
  1579     020D                     	;# 
  1580     0210                     	;# 
  1581     0211                     	;# 
  1582     0212                     	;# 
  1583     0213                     	;# 
  1584     0214                     	;# 
  1585     0215                     	;# 
  1586     0215                     	;# 
  1587     0216                     	;# 
  1588     0217                     	;# 
  1589     0291                     	;# 
  1590     0291                     	;# 
  1591     0292                     	;# 
  1592     0293                     	;# 
  1593     0294                     	;# 
  1594     0295                     	;# 
  1595     0295                     	;# 
  1596     0296                     	;# 
  1597     0298                     	;# 
  1598     0298                     	;# 
  1599     0299                     	;# 
  1600     029A                     	;# 
  1601     029B                     	;# 
  1602     029C                     	;# 
  1603     029C                     	;# 
  1604     029D                     	;# 
  1605     029E                     	;# 
  1606     029F                     	;# 
  1607     0311                     	;# 
  1608     0311                     	;# 
  1609     0312                     	;# 
  1610     0313                     	;# 
  1611     0314                     	;# 
  1612     0315                     	;# 
  1613     0315                     	;# 
  1614     0316                     	;# 
  1615     0318                     	;# 
  1616     0318                     	;# 
  1617     0319                     	;# 
  1618     031A                     	;# 
  1619     031C                     	;# 
  1620     031C                     	;# 
  1621     031D                     	;# 
  1622     031E                     	;# 
  1623     0394                     	;# 
  1624     0395                     	;# 
  1625     0396                     	;# 
  1626     0415                     	;# 
  1627     0416                     	;# 
  1628     0417                     	;# 
  1629     041C                     	;# 
  1630     041D                     	;# 
  1631     041E                     	;# 
  1632     0791                     	;# 
  1633     0792                     	;# 
  1634     0793                     	;# 
  1635     0794                     	;# 
  1636     0795                     	;# 
  1637     0798                     	;# 
  1638     0799                     	;# 
  1639     07A0                     	;# 
  1640     07A1                     	;# 
  1641     07A3                     	;# 
  1642     07A4                     	;# 
  1643     07A6                     	;# 
  1644     07A7                     	;# 
  1645     07A9                     	;# 
  1646     07AA                     	;# 
  1647     0FE4                     	;# 
  1648     0FE5                     	;# 
  1649     0FE6                     	;# 
  1650     0FE7                     	;# 
  1651     0FE8                     	;# 
  1652     0FE9                     	;# 
  1653     0FEA                     	;# 
  1654     0FEB                     	;# 
  1655     0FED                     	;# 
  1656     0FEE                     	;# 
  1657     0FEF                     	;# 
  1658     0000                     	;# 
  1659     0001                     	;# 
  1660     0002                     	;# 
  1661     0003                     	;# 
  1662     0004                     	;# 
  1663     0005                     	;# 
  1664     0006                     	;# 
  1665     0007                     	;# 
  1666     0008                     	;# 
  1667     0009                     	;# 
  1668     000A                     	;# 
  1669     000B                     	;# 
  1670     000C                     	;# 
  1671     000D                     	;# 
  1672     000E                     	;# 
  1673     0010                     	;# 
  1674     0011                     	;# 
  1675     0012                     	;# 
  1676     0013                     	;# 
  1677     0015                     	;# 
  1678     0016                     	;# 
  1679     0016                     	;# 
  1680     0017                     	;# 
  1681     0018                     	;# 
  1682     0019                     	;# 
  1683     001A                     	;# 
  1684     001B                     	;# 
  1685     001C                     	;# 
  1686     001E                     	;# 
  1687     001F                     	;# 
  1688     008C                     	;# 
  1689     008D                     	;# 
  1690     008E                     	;# 
  1691     0090                     	;# 
  1692     0091                     	;# 
  1693     0092                     	;# 
  1694     0093                     	;# 
  1695     0095                     	;# 
  1696     0096                     	;# 
  1697     0097                     	;# 
  1698     0098                     	;# 
  1699     0099                     	;# 
  1700     009A                     	;# 
  1701     009B                     	;# 
  1702     009B                     	;# 
  1703     009C                     	;# 
  1704     009D                     	;# 
  1705     009E                     	;# 
  1706     010C                     	;# 
  1707     010D                     	;# 
  1708     010E                     	;# 
  1709     0110                     	;# 
  1710     0111                     	;# 
  1711     0112                     	;# 
  1712     0113                     	;# 
  1713     0114                     	;# 
  1714     0115                     	;# 
  1715     0116                     	;# 
  1716     0117                     	;# 
  1717     0118                     	;# 
  1718     0119                     	;# 
  1719     011A                     	;# 
  1720     011B                     	;# 
  1721     011D                     	;# 
  1722     018C                     	;# 
  1723     018D                     	;# 
  1724     0191                     	;# 
  1725     0191                     	;# 
  1726     0192                     	;# 
  1727     0193                     	;# 
  1728     0193                     	;# 
  1729     0193                     	;# 
  1730     0194                     	;# 
  1731     0195                     	;# 
  1732     0196                     	;# 
  1733     0199                     	;# 
  1734     019A                     	;# 
  1735     019B                     	;# 
  1736     019B                     	;# 
  1737     019B                     	;# 
  1738     019B                     	;# 
  1739     019C                     	;# 
  1740     019C                     	;# 
  1741     019D                     	;# 
  1742     019E                     	;# 
  1743     019F                     	;# 
  1744     020D                     	;# 
  1745     0210                     	;# 
  1746     0211                     	;# 
  1747     0212                     	;# 
  1748     0213                     	;# 
  1749     0214                     	;# 
  1750     0215                     	;# 
  1751     0215                     	;# 
  1752     0216                     	;# 
  1753     0217                     	;# 
  1754     0291                     	;# 
  1755     0291                     	;# 
  1756     0292                     	;# 
  1757     0293                     	;# 
  1758     0294                     	;# 
  1759     0295                     	;# 
  1760     0295                     	;# 
  1761     0296                     	;# 
  1762     0298                     	;# 
  1763     0298                     	;# 
  1764     0299                     	;# 
  1765     029A                     	;# 
  1766     029B                     	;# 
  1767     029C                     	;# 
  1768     029C                     	;# 
  1769     029D                     	;# 
  1770     029E                     	;# 
  1771     029F                     	;# 
  1772     0311                     	;# 
  1773     0311                     	;# 
  1774     0312                     	;# 
  1775     0313                     	;# 
  1776     0314                     	;# 
  1777     0315                     	;# 
  1778     0315                     	;# 
  1779     0316                     	;# 
  1780     0318                     	;# 
  1781     0318                     	;# 
  1782     0319                     	;# 
  1783     031A                     	;# 
  1784     031C                     	;# 
  1785     031C                     	;# 
  1786     031D                     	;# 
  1787     031E                     	;# 
  1788     0394                     	;# 
  1789     0395                     	;# 
  1790     0396                     	;# 
  1791     0415                     	;# 
  1792     0416                     	;# 
  1793     0417                     	;# 
  1794     041C                     	;# 
  1795     041D                     	;# 
  1796     041E                     	;# 
  1797     0791                     	;# 
  1798     0792                     	;# 
  1799     0793                     	;# 
  1800     0794                     	;# 
  1801     0795                     	;# 
  1802     0798                     	;# 
  1803     0799                     	;# 
  1804     07A0                     	;# 
  1805     07A1                     	;# 
  1806     07A3                     	;# 
  1807     07A4                     	;# 
  1808     07A6                     	;# 
  1809     07A7                     	;# 
  1810     07A9                     	;# 
  1811     07AA                     	;# 
  1812     0FE4                     	;# 
  1813     0FE5                     	;# 
  1814     0FE6                     	;# 
  1815     0FE7                     	;# 
  1816     0FE8                     	;# 
  1817     0FE9                     	;# 
  1818     0FEA                     	;# 
  1819     0FEB                     	;# 
  1820     0FED                     	;# 
  1821     0FEE                     	;# 
  1822     0FEF                     	;# 
  1823     0000                     	;# 
  1824     0001                     	;# 
  1825     0002                     	;# 
  1826     0003                     	;# 
  1827     0004                     	;# 
  1828     0005                     	;# 
  1829     0006                     	;# 
  1830     0007                     	;# 
  1831     0008                     	;# 
  1832     0009                     	;# 
  1833     000A                     	;# 
  1834     000B                     	;# 
  1835     000C                     	;# 
  1836     000D                     	;# 
  1837     000E                     	;# 
  1838     0010                     	;# 
  1839     0011                     	;# 
  1840     0012                     	;# 
  1841     0013                     	;# 
  1842     0015                     	;# 
  1843     0016                     	;# 
  1844     0016                     	;# 
  1845     0017                     	;# 
  1846     0018                     	;# 
  1847     0019                     	;# 
  1848     001A                     	;# 
  1849     001B                     	;# 
  1850     001C                     	;# 
  1851     001E                     	;# 
  1852     001F                     	;# 
  1853     008C                     	;# 
  1854     008D                     	;# 
  1855     008E                     	;# 
  1856     0090                     	;# 
  1857     0091                     	;# 
  1858     0092                     	;# 
  1859     0093                     	;# 
  1860     0095                     	;# 
  1861     0096                     	;# 
  1862     0097                     	;# 
  1863     0098                     	;# 
  1864     0099                     	;# 
  1865     009A                     	;# 
  1866     009B                     	;# 
  1867     009B                     	;# 
  1868     009C                     	;# 
  1869     009D                     	;# 
  1870     009E                     	;# 
  1871     010C                     	;# 
  1872     010D                     	;# 
  1873     010E                     	;# 
  1874     0110                     	;# 
  1875     0111                     	;# 
  1876     0112                     	;# 
  1877     0113                     	;# 
  1878     0114                     	;# 
  1879     0115                     	;# 
  1880     0116                     	;# 
  1881     0117                     	;# 
  1882     0118                     	;# 
  1883     0119                     	;# 
  1884     011A                     	;# 
  1885     011B                     	;# 
  1886     011D                     	;# 
  1887     018C                     	;# 
  1888     018D                     	;# 
  1889     0191                     	;# 
  1890     0191                     	;# 
  1891     0192                     	;# 
  1892     0193                     	;# 
  1893     0193                     	;# 
  1894     0193                     	;# 
  1895     0194                     	;# 
  1896     0195                     	;# 
  1897     0196                     	;# 
  1898     0199                     	;# 
  1899     019A                     	;# 
  1900     019B                     	;# 
  1901     019B                     	;# 
  1902     019B                     	;# 
  1903     019B                     	;# 
  1904     019C                     	;# 
  1905     019C                     	;# 
  1906     019D                     	;# 
  1907     019E                     	;# 
  1908     019F                     	;# 
  1909     020D                     	;# 
  1910     0210                     	;# 
  1911     0211                     	;# 
  1912     0212                     	;# 
  1913     0213                     	;# 
  1914     0214                     	;# 
  1915     0215                     	;# 
  1916     0215                     	;# 
  1917     0216                     	;# 
  1918     0217                     	;# 
  1919     0291                     	;# 
  1920     0291                     	;# 
  1921     0292                     	;# 
  1922     0293                     	;# 
  1923     0294                     	;# 
  1924     0295                     	;# 
  1925     0295                     	;# 
  1926     0296                     	;# 
  1927     0298                     	;# 
  1928     0298                     	;# 
  1929     0299                     	;# 
  1930     029A                     	;# 
  1931     029B                     	;# 
  1932     029C                     	;# 
  1933     029C                     	;# 
  1934     029D                     	;# 
  1935     029E                     	;# 
  1936     029F                     	;# 
  1937     0311                     	;# 
  1938     0311                     	;# 
  1939     0312                     	;# 
  1940     0313                     	;# 
  1941     0314                     	;# 
  1942     0315                     	;# 
  1943     0315                     	;# 
  1944     0316                     	;# 
  1945     0318                     	;# 
  1946     0318                     	;# 
  1947     0319                     	;# 
  1948     031A                     	;# 
  1949     031C                     	;# 
  1950     031C                     	;# 
  1951     031D                     	;# 
  1952     031E                     	;# 
  1953     0394                     	;# 
  1954     0395                     	;# 
  1955     0396                     	;# 
  1956     0415                     	;# 
  1957     0416                     	;# 
  1958     0417                     	;# 
  1959     041C                     	;# 
  1960     041D                     	;# 
  1961     041E                     	;# 
  1962     0791                     	;# 
  1963     0792                     	;# 
  1964     0793                     	;# 
  1965     0794                     	;# 
  1966     0795                     	;# 
  1967     0798                     	;# 
  1968     0799                     	;# 
  1969     07A0                     	;# 
  1970     07A1                     	;# 
  1971     07A3                     	;# 
  1972     07A4                     	;# 
  1973     07A6                     	;# 
  1974     07A7                     	;# 
  1975     07A9                     	;# 
  1976     07AA                     	;# 
  1977     0FE4                     	;# 
  1978     0FE5                     	;# 
  1979     0FE6                     	;# 
  1980     0FE7                     	;# 
  1981     0FE8                     	;# 
  1982     0FE9                     	;# 
  1983     0FEA                     	;# 
  1984     0FEB                     	;# 
  1985     0FED                     	;# 
  1986     0FEE                     	;# 
  1987     0FEF                     	;# 
  1988     0000                     	;# 
  1989     0001                     	;# 
  1990     0002                     	;# 
  1991     0003                     	;# 
  1992     0004                     	;# 
  1993     0005                     	;# 
  1994     0006                     	;# 
  1995     0007                     	;# 
  1996     0008                     	;# 
  1997     0009                     	;# 
  1998     000A                     	;# 
  1999     000B                     	;# 
  2000     000C                     	;# 
  2001     000D                     	;# 
  2002     000E                     	;# 
  2003     0010                     	;# 
  2004     0011                     	;# 
  2005     0012                     	;# 
  2006     0013                     	;# 
  2007     0015                     	;# 
  2008     0016                     	;# 
  2009     0016                     	;# 
  2010     0017                     	;# 
  2011     0018                     	;# 
  2012     0019                     	;# 
  2013     001A                     	;# 
  2014     001B                     	;# 
  2015     001C                     	;# 
  2016     001E                     	;# 
  2017     001F                     	;# 
  2018     008C                     	;# 
  2019     008D                     	;# 
  2020     008E                     	;# 
  2021     0090                     	;# 
  2022     0091                     	;# 
  2023     0092                     	;# 
  2024     0093                     	;# 
  2025     0095                     	;# 
  2026     0096                     	;# 
  2027     0097                     	;# 
  2028     0098                     	;# 
  2029     0099                     	;# 
  2030     009A                     	;# 
  2031     009B                     	;# 
  2032     009B                     	;# 
  2033     009C                     	;# 
  2034     009D                     	;# 
  2035     009E                     	;# 
  2036     010C                     	;# 
  2037     010D                     	;# 
  2038     010E                     	;# 
  2039     0110                     	;# 
  2040     0111                     	;# 
  2041     0112                     	;# 
  2042     0113                     	;# 
  2043     0114                     	;# 
  2044     0115                     	;# 
  2045     0116                     	;# 
  2046     0117                     	;# 
  2047     0118                     	;# 
  2048     0119                     	;# 
  2049     011A                     	;# 
  2050     011B                     	;# 
  2051     011D                     	;# 
  2052     018C                     	;# 
  2053     018D                     	;# 
  2054     0191                     	;# 
  2055     0191                     	;# 
  2056     0192                     	;# 
  2057     0193                     	;# 
  2058     0193                     	;# 
  2059     0193                     	;# 
  2060     0194                     	;# 
  2061     0195                     	;# 
  2062     0196                     	;# 
  2063     0199                     	;# 
  2064     019A                     	;# 
  2065     019B                     	;# 
  2066     019B                     	;# 
  2067     019B                     	;# 
  2068     019B                     	;# 
  2069     019C                     	;# 
  2070     019C                     	;# 
  2071     019D                     	;# 
  2072     019E                     	;# 
  2073     019F                     	;# 
  2074     020D                     	;# 
  2075     0210                     	;# 
  2076     0211                     	;# 
  2077     0212                     	;# 
  2078     0213                     	;# 
  2079     0214                     	;# 
  2080     0215                     	;# 
  2081     0215                     	;# 
  2082     0216                     	;# 
  2083     0217                     	;# 
  2084     0291                     	;# 
  2085     0291                     	;# 
  2086     0292                     	;# 
  2087     0293                     	;# 
  2088     0294                     	;# 
  2089     0295                     	;# 
  2090     0295                     	;# 
  2091     0296                     	;# 
  2092     0298                     	;# 
  2093     0298                     	;# 
  2094     0299                     	;# 
  2095     029A                     	;# 
  2096     029B                     	;# 
  2097     029C                     	;# 
  2098     029C                     	;# 
  2099     029D                     	;# 
  2100     029E                     	;# 
  2101     029F                     	;# 
  2102     0311                     	;# 
  2103     0311                     	;# 
  2104     0312                     	;# 
  2105     0313                     	;# 
  2106     0314                     	;# 
  2107     0315                     	;# 
  2108     0315                     	;# 
  2109     0316                     	;# 
  2110     0318                     	;# 
  2111     0318                     	;# 
  2112     0319                     	;# 
  2113     031A                     	;# 
  2114     031C                     	;# 
  2115     031C                     	;# 
  2116     031D                     	;# 
  2117     031E                     	;# 
  2118     0394                     	;# 
  2119     0395                     	;# 
  2120     0396                     	;# 
  2121     0415                     	;# 
  2122     0416                     	;# 
  2123     0417                     	;# 
  2124     041C                     	;# 
  2125     041D                     	;# 
  2126     041E                     	;# 
  2127     0791                     	;# 
  2128     0792                     	;# 
  2129     0793                     	;# 
  2130     0794                     	;# 
  2131     0795                     	;# 
  2132     0798                     	;# 
  2133     0799                     	;# 
  2134     07A0                     	;# 
  2135     07A1                     	;# 
  2136     07A3                     	;# 
  2137     07A4                     	;# 
  2138     07A6                     	;# 
  2139     07A7                     	;# 
  2140     07A9                     	;# 
  2141     07AA                     	;# 
  2142     0FE4                     	;# 
  2143     0FE5                     	;# 
  2144     0FE6                     	;# 
  2145     0FE7                     	;# 
  2146     0FE8                     	;# 
  2147     0FE9                     	;# 
  2148     0FEA                     	;# 
  2149     0FEB                     	;# 
  2150     0FED                     	;# 
  2151     0FEE                     	;# 
  2152     0FEF                     	;_SES_Modbus
  2153                           
  2154                           	psect	idataBANK1
  2155     1397                     __pidataBANK1:
  2156                           
  2157                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2158     1397  3424               	retlw	36
  2159     1398  3416               	retlw	22
  2160                           
  2161                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2162     1399  3424               	retlw	36
  2163     139A  340B               	retlw	11
  2164                           
  2165                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2166     139B  3424               	retlw	36
  2167     139C  3400               	retlw	0
  2168                           
  2169                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2170     139D  342C               	retlw	44
  2171     139E  3410               	retlw	16
  2172                           
  2173                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2174     139F  342C               	retlw	44
  2175     13A0  340D               	retlw	13
  2176                           
  2177                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2178     13A1  342C               	retlw	44
  2179     13A2  3406               	retlw	6
  2180                           
  2181                           	psect	stringtext1
  2182     1800                     __pstringtext1:
  2183     1800                     _i2c_fsmStateTable:
  2184     1800  34A6               	retlw	low _I2C_DO_IDLE
  2185     1801  3412               	retlw	high _I2C_DO_IDLE
  2186     1802  34F9               	retlw	low _I2C_DO_SEND_ADR_READ
  2187     1803  3412               	retlw	high _I2C_DO_SEND_ADR_READ
  2188     1804  34F1               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2189     1805  3412               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2190     1806  34D6               	retlw	low _I2C_DO_TX
  2191     1807  3408               	retlw	high _I2C_DO_TX
  2192     1808  3477               	retlw	low _I2C_DO_RX
  2193     1809  3417               	retlw	high _I2C_DO_RX
  2194     180A  34E3               	retlw	low _I2C_DO_RCEN
  2195     180B  3412               	retlw	high _I2C_DO_RCEN
  2196     180C  3413               	retlw	low _I2C_DO_TX_EMPTY
  2197     180D  3408               	retlw	high _I2C_DO_TX_EMPTY
  2198     180E  34AB               	retlw	low _I2C_DO_SEND_RESTART_READ
  2199     180F  3412               	retlw	high _I2C_DO_SEND_RESTART_READ
  2200     1810  34B0               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2201     1811  3412               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2202     1812  34B5               	retlw	low _I2C_DO_SEND_RESTART
  2203     1813  3412               	retlw	high _I2C_DO_SEND_RESTART
  2204     1814  34BA               	retlw	low _I2C_DO_SEND_STOP
  2205     1815  3412               	retlw	high _I2C_DO_SEND_STOP
  2206     1816  34BF               	retlw	low _I2C_DO_RX_ACK
  2207     1817  3412               	retlw	high _I2C_DO_RX_ACK
  2208     1818  34C4               	retlw	low _I2C_DO_RX_NACK_STOP
  2209     1819  3412               	retlw	high _I2C_DO_RX_NACK_STOP
  2210     181A  34C9               	retlw	low _I2C_DO_RX_NACK_RESTART
  2211     181B  3412               	retlw	high _I2C_DO_RX_NACK_RESTART
  2212     181C  34CE               	retlw	low _I2C_DO_RESET
  2213     181D  3412               	retlw	high _I2C_DO_RESET
  2214     181E  34F9               	retlw	low _I2C_DO_ADDRESS_NACK
  2215     181F  3415               	retlw	high _I2C_DO_ADDRESS_NACK
  2216     1820                     __end_of_i2c_fsmStateTable:
  2217                           
  2218                           	psect	stringtext2
  2219     1820                     __pstringtext2:
  2220     1820                     _fctsupported:
  2221     1820  3401               	retlw	1
  2222     1821  3402               	retlw	2
  2223     1822  3403               	retlw	3
  2224     1823  3404               	retlw	4
  2225     1824  3405               	retlw	5
  2226     1825  3406               	retlw	6
  2227     1826  340F               	retlw	15
  2228     1827  3410               	retlw	16
  2229     1828                     __end_of_fctsupported:
  2230                           
  2231                           	psect	nvBANK2
  2232     015D                     __pnvBANK2:
  2233     015D                     _TMR1_InterruptHandler:
  2234     015D                     	ds	2
  2235     015F                     _EUSART_ErrorHandler:
  2236     015F                     	ds	2
  2237     0161                     _EUSART_OverrunErrorHandler:
  2238     0161                     	ds	2
  2239     0163                     _EUSART_FramingErrorHandler:
  2240     0163                     	ds	2
  2241     0165                     _EUSART_RxDefaultInterruptHandler:
  2242     0165                     	ds	2
  2243     0167                     _EUSART_TxDefaultInterruptHandler:
  2244     0167                     	ds	2
  2245     000C                     _PORTAbits	set	12
  2246     0018                     _T1CONbits	set	24
  2247     0018                     _T1CON	set	24
  2248     0016                     _TMR1L	set	22
  2249     0017                     _TMR1H	set	23
  2250     0019                     _T1GCON	set	25
  2251     0012                     _PIR2bits	set	18
  2252     0011                     _PIR1bits	set	17
  2253     000B                     _INTCONbits	set	11
  2254     0092                     _PIE2bits	set	146
  2255     0091                     _PIE1bits	set	145
  2256     0097                     _WDTCON	set	151
  2257     0098                     _OSCTUNE	set	152
  2258     0099                     _OSCCON	set	153
  2259     0095                     _OPTION_REGbits	set	149
  2260     008E                     _TRISC	set	142
  2261     008D                     _TRISB	set	141
  2262     008C                     _TRISA	set	140
  2263     0090                     _TRISE	set	144
  2264     010E                     _LATCbits	set	270
  2265     0116                     _BORCON	set	278
  2266     011D                     _APFCON	set	285
  2267     010E                     _LATC	set	270
  2268     010D                     _LATB	set	269
  2269     010C                     _LATA	set	268
  2270     0110                     _LATE	set	272
  2271     0199                     _RCREG	set	409
  2272     019D                     _RCSTAbits	set	413
  2273     019A                     _TXREG	set	410
  2274     019E                     _TXSTAbits	set	414
  2275     019C                     _SPBRGH	set	412
  2276     019B                     _SPBRGL	set	411
  2277     019E                     _TXSTA	set	414
  2278     019D                     _RCSTA	set	413
  2279     019F                     _BAUDCON	set	415
  2280     018C                     _ANSELA	set	396
  2281     018D                     _ANSELB	set	397
  2282     0214                     _SSPSTATbits	set	532
  2283     0216                     _SSPCON2bits	set	534
  2284     0211                     _SSPBUF	set	529
  2285     0215                     _SSPCON1bits	set	533
  2286     0212                     _SSPADD	set	530
  2287     0216                     _SSPCON2	set	534
  2288     0215                     _SSPCON1	set	533
  2289     0214                     _SSPSTAT	set	532
  2290     020D                     _WPUB	set	525
  2291     0210                     _WPUE	set	528
  2292                           
  2293                           	psect	cinit
  2294     005A                     start_initialization:	
  2295                           ; #config settings
  2296                           
  2297     005A                     __initialization:	;BIGRAM
  2298                           
  2299                           ; Initialize objects allocated to BANK1
  2300     005A  3097               	movlw	low __pidataBANK1
  2301     005B  0084               	movwf	4
  2302     005C  3093               	movlw	(high __pidataBANK1)| (0+128)
  2303     005D  0085               	movwf	5
  2304     005E  30E4               	movlw	low __pdataBANK1
  2305     005F  0086               	movwf	6
  2306     0060  3000               	movlw	high __pdataBANK1
  2307     0061  0087               	movwf	7
  2308     0062  3000               	movlw	0
  2309     0063  00FF               	movwf	btemp+1
  2310     0064  300C               	movlw	12
  2311     0065  3193  238B  3180   	fcall	init_ram
  2312                           
  2313                           ; Clear objects allocated to BIGRAM
  2314     0068  3038               	movlw	low (0+8504)
  2315     0069  0084               	movwf	4
  2316     006A  3021               	movlw	high (0+8504)
  2317     006B  0085               	movwf	5
  2318     006C  30B8               	movlw	184
  2319     006D  00FE               	movwf	btemp
  2320     006E  3000               	movlw	0
  2321     006F  00FF               	movwf	btemp+1
  2322     0070  3193  237F  3180   	fcall	clear_ram0
  2323                           
  2324                           ; Clear objects allocated to COMMON
  2325     0073  01FC               	clrf	__pbssCOMMON& (0+127)
  2326     0074  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2327                           
  2328                           ; Clear objects allocated to BANK0
  2329     0075  01E9               	clrf	__pbssBANK0& (0+127)
  2330     0076  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  2331     0077  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  2332     0078  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  2333     0079  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  2334     007A  01EE               	clrf	(__pbssBANK0+5)& (0+127)
  2335     007B  01EF               	clrf	(__pbssBANK0+6)& (0+127)
  2336                           
  2337                           ; Clear objects allocated to BANK1
  2338     007C  30D7               	movlw	low __pbssBANK1
  2339     007D  0084               	movwf	4
  2340     007E  3000               	movlw	high __pbssBANK1
  2341     007F  0085               	movwf	5
  2342     0080  300D               	movlw	13
  2343     0081  00FE               	movwf	btemp
  2344     0082  3000               	movlw	0
  2345     0083  00FF               	movwf	btemp+1
  2346     0084  3193  237F  3180   	fcall	clear_ram0
  2347                           
  2348                           ; Clear objects allocated to BANK2
  2349     0087  3020               	movlw	low __pbssBANK2
  2350     0088  0084               	movwf	4
  2351     0089  3001               	movlw	high __pbssBANK2
  2352     008A  0085               	movwf	5
  2353     008B  303D               	movlw	61
  2354     008C  00FE               	movwf	btemp
  2355     008D  3000               	movlw	0
  2356     008E  00FF               	movwf	btemp+1
  2357     008F  3193  237F  3180   	fcall	clear_ram0
  2358     0092                     end_of_initialization:	
  2359                           ;End of C runtime variable initialization code
  2360                           
  2361     0092                     __end_of__initialization:
  2362     0092  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2363     0093  0020               	movlb	0
  2364     0094  3193  2BD9         	ljmp	_main	;jump to C main() function
  2365                           
  2366                           	psect	bssCOMMON
  2367     007C                     __pbssCOMMON:
  2368     007C                     Task_MB@f_Modbus_Init:
  2369     007C                     	ds	1
  2370     007D                     _eusartRxLastError:
  2371     007D                     	ds	1
  2372                           
  2373                           	psect	bssBANK0
  2374     0069                     __pbssBANK0:
  2375     0069                     _SW_Ad:
  2376     0069                     	ds	1
  2377     006A                     _eusartRxCount:
  2378     006A                     	ds	1
  2379     006B                     _eusartRxTail:
  2380     006B                     	ds	1
  2381     006C                     _eusartRxHead:
  2382     006C                     	ds	1
  2383     006D                     _eusartTxBufferRemaining:
  2384     006D                     	ds	1
  2385     006E                     _eusartTxTail:
  2386     006E                     	ds	1
  2387     006F                     _eusartTxHead:
  2388     006F                     	ds	1
  2389                           
  2390                           	psect	bssBANK1
  2391     00D7                     __pbssBANK1:
  2392     00D7                     _device_time:
  2393     00D7                     	ds	4
  2394     00DB                     _SensorAmbient:
  2395     00DB                     	ds	4
  2396     00DF                     _timer1ReloadVal:
  2397     00DF                     	ds	2
  2398     00E1                     _MSSP_InterruptHandler:
  2399     00E1                     	ds	2
  2400     00E3                     _f_Indicator:
  2401     00E3                     	ds	1
  2402                           
  2403                           	psect	dataBANK1
  2404     00E4                     __pdataBANK1:
  2405     00E4                     _SHT30_CMD_MEASURE_L_Disable:
  2406     00E4                     	ds	2
  2407     00E6                     _SHT30_CMD_MEASURE_M_Disable:
  2408     00E6                     	ds	2
  2409     00E8                     _SHT30_CMD_MEASURE_H_Disable:
  2410     00E8                     	ds	2
  2411     00EA                     _SHT30_CMD_MEASURE_L_Enable:
  2412     00EA                     	ds	2
  2413     00EC                     _SHT30_CMD_MEASURE_M_Enable:
  2414     00EC                     	ds	2
  2415     00EE                     _SHT30_CMD_MEASURE_H_Enable:
  2416     00EE                     	ds	2
  2417                           
  2418                           	psect	bssBANK2
  2419     0120                     __pbssBANK2:
  2420     0120                     _I2C_Status:
  2421     0120                     	ds	29
  2422     013D                     _eusartRxStatusBuffer:
  2423     013D                     	ds	8
  2424     0145                     _eusartRxBuffer:
  2425     0145                     	ds	8
  2426     014D                     _eusartTxBuffer:
  2427     014D                     	ds	8
  2428     0155                     Task_Sensor@valTime:
  2429     0155                     	ds	4
  2430     0159                     _MB_Register:
  2431     0159                     	ds	4
  2432                           
  2433                           	psect	inittext
  2434     138B                     init_ram:
  2435     138B  00FE               	movwf	btemp
  2436     138C                     initloop:
  2437     138C  0012               	moviw fsr0++
  2438     138D  001E               	movwi fsr1++
  2439     138E  3001               	movlw	1
  2440     138F  02FE               	subwf	btemp,f
  2441     1390  3000               	movlw	0
  2442     1391  3BFF               	subwfb	btemp+1,f
  2443     1392  087F               	movf	btemp+1,w
  2444     1393  047E               	iorwf	btemp,w
  2445     1394  1D03               	skipz
  2446     1395  2B8C               	goto	initloop
  2447     1396  3400               	retlw	0
  2448                           
  2449                           	psect	clrtext
  2450     137F                     clear_ram0:	
  2451                           ;	Called with FSR0 containing the base address, and
  2452                           ;	btemp/btemp+1 has the size to clear
  2453                           
  2454     137F  0064               	clrwdt	;clear the watchdog before getting into this loop
  2455     1380                     clrloop0:
  2456     1380  0180               	clrf	0	;clear RAM location pointed to by FSR
  2457     1381  3101               	addfsr 0,1
  2458     1382  3001               	movlw	1
  2459     1383  02FE               	subwf	btemp,f
  2460     1384  3000               	movlw	0
  2461     1385  3BFF               	subwfb	btemp+1,f
  2462     1386  087F               	movf	btemp+1,w
  2463     1387  047E               	iorwf	btemp,w
  2464     1388  1D03               	skipz
  2465     1389  2B80               	goto	clrloop0	;have we reached the end yet?
  2466     138A  3400               	retlw	0	;all done for this memory range, return
  2467                           
  2468                           	psect	cstackBANK1
  2469     00A0                     __pcstackBANK1:
  2470     00A0                     ___fldiv@rem:
  2471                           
  2472                           ; 4 bytes @ 0x0
  2473     00A0                     	ds	4
  2474     00A4                     ___fldiv@sign:
  2475                           
  2476                           ; 1 bytes @ 0x4
  2477     00A4                     	ds	1
  2478     00A5                     ___fldiv@new_exp:
  2479                           
  2480                           ; 2 bytes @ 0x5
  2481     00A5                     	ds	2
  2482     00A7                     ___fldiv@grs:
  2483                           
  2484                           ; 4 bytes @ 0x7
  2485     00A7                     	ds	4
  2486     00AB                     ___fldiv@bexp:
  2487                           
  2488                           ; 1 bytes @ 0xB
  2489     00AB                     	ds	1
  2490     00AC                     ___fldiv@aexp:
  2491                           
  2492                           ; 1 bytes @ 0xC
  2493     00AC                     	ds	1
  2494     00AD                     ??_ReadData:
  2495                           
  2496                           ; 1 bytes @ 0xD
  2497     00AD                     	ds	8
  2498     00B5                     ReadData@aData:
  2499                           
  2500                           ; 6 bytes @ 0x15
  2501     00B5                     	ds	6
  2502     00BB                     ReadData@ctemp:
  2503                           
  2504                           ; 4 bytes @ 0x1B
  2505     00BB                     	ds	4
  2506     00BF                     ReadData@humidity:
  2507                           
  2508                           ; 4 bytes @ 0x1F
  2509     00BF                     	ds	4
  2510     00C3                     _ReadData$2360:
  2511                           
  2512                           ; 4 bytes @ 0x23
  2513     00C3                     	ds	4
  2514     00C7                     _ReadData$2361:
  2515                           
  2516                           ; 4 bytes @ 0x27
  2517     00C7                     	ds	4
  2518     00CB                     ??_Task_Sensor:
  2519                           
  2520                           ; 1 bytes @ 0x2B
  2521     00CB                     	ds	12
  2522                           
  2523                           	psect	cstackCOMMON
  2524     0070                     __pcstackCOMMON:
  2525     0070                     ?_I2C_Open:
  2526     0070                     ?_I2C_MasterWrite:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529     0070                     ?_I2C_Close:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532     0070                     ?_I2C_MasterRead:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535     0070                     ?_I2C_Initialize:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538     0070                     ?_OSCILLATOR_Initialize:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541     0070                     ?_WDT_Initialize:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544     0070                     ?_TMR1_Initialize:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547     0070                     ?_EUSART_Initialize:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550     0070                     ?_TMR1_ISR:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553     0070                     ?_EUSART_Receive_ISR:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556     0070                     ?_EUSART_Transmit_ISR:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559     0070                     ??_EUSART_Transmit_ISR:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574     0070                     ?_EUSART_DefaultErrorHandler:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577     0070                     ?_EUSART_RxDataHandler:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0070                     ??_EUSART_RxDataHandler:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0070                     ?_TMR1_DefaultInterruptHandler:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0070                     ??_TMR1_DefaultInterruptHandler:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589     0070                     ?_TMR1_CallBack:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592     0070                     ??_TMR1_CallBack:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595     0070                     ?_I2C_DO_IDLE:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598     0070                     ??_I2C_DO_IDLE:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610     0070                     ?_I2C_DO_TX:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613     0070                     ?_I2C_DO_RX:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616     0070                     ?_I2C_DO_RCEN:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619     0070                     ??_I2C_DO_RCEN:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622     0070                     ?_I2C_DO_TX_EMPTY:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637     0070                     ?_I2C_DO_SEND_RESTART:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640     0070                     ??_I2C_DO_SEND_RESTART:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643     0070                     ?_I2C_DO_SEND_STOP:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646     0070                     ??_I2C_DO_SEND_STOP:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649     0070                     ?_I2C_DO_RX_ACK:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652     0070                     ??_I2C_DO_RX_ACK:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667     0070                     ?_I2C_DO_RESET:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670     0070                     ??_I2C_DO_RESET:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676     0070                     ?_I2C_MasterIsr:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679     0070                     ?_I2C_MasterClearIrq:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682     0070                     ?_I2C_MasterOpen:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685     0070                     ?_I2C_MasterEnableIrq:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688     0070                     ?_I2C_MasterDisableIrq:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691     0070                     ?_I2C_MasterClose:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694     0070                     ?_I2C_MasterStart:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697     0070                     ?_I2C_MasterFsm:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700     0070                     ?_I2C_MasterIsNack:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703     0070                     ??_I2C_MasterIsNack:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706     0070                     ?_I2C_MasterSendTxData:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709     0070                     ??_I2C_MasterSendTxData:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712     0070                     ?_I2C_MasterGetRxData:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715     0070                     ??_I2C_MasterGetRxData:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718     0070                     ?_I2C_MasterSendAck:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721     0070                     ??_I2C_MasterSendAck:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724     0070                     ?_I2C_MasterStartRx:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727     0070                     ??_I2C_MasterStartRx:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730     0070                     ?_I2C_MasterSetIrq:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733     0070                     ??_I2C_MasterSetIrq:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736     0070                     ?_I2C_MasterEnableRestart:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739     0070                     ??_I2C_MasterEnableRestart:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742     0070                     ?_I2C_MasterStop:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745     0070                     ??_I2C_MasterStop:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748     0070                     ?_I2C_MasterSendNack:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751     0070                     ??_I2C_MasterSendNack:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754     0070                     ?_App_Init:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757     0070                     ?_App_Process:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760     0070                     ?_Tick_Init_SES:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763     0070                     ?_Task_MB:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766     0070                     ?_Modbus_sendTxBuff:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769     0070                     ?_rtcc_handle:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772     0070                     ??_rtcc_handle:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775     0070                     ?_PIN_MANAGER_Initialize:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778     0070                     ?_SYSTEM_Initialize:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781     0070                     ?_INTERRUPT_InterruptManager:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784     0070                     ?_EUSART_is_tx_done:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787     0070                     ?_EUSART_Read:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790     0070                     ?_EUSART_Write:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793     0070                     ?_TMR1_StartTimer:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796     0070                     ?_TMR1_WriteTimer:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799     0070                     ?_I2C_MasterOperation:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802     0070                     ?_main:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805     0070                     ?_ReadData:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808     0070                     ?_Task_Sensor:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811     0070                     ?_Task_Indicator:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814     0070                     ?_Device_Init:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817     0070                     ?_buildException:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820     0070                     ?_Modbus_getRxBuff:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823     0070                     ?_validateRequest:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826     0070                     ?_ModbusSlave_Init:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829     0070                     ?_ModbusSlave_Process:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832     0070                     ?i1_I2C_SetBuffer:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835     0070                     ?i1_I2C_SetCallback:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838     0070                     ?i1_I2C_MasterClearIrq:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841     0070                     ??i1_I2C_MasterClearIrq:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844     0070                     I2C_MasterSendTxData@data:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847     0070                     TMR1_WriteTimer@timerVal:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850     0070                     i1I2C_SetBuffer@bufferSize:	
  2851                           ; 2 bytes @ 0x0
  2852                           
  2853     0070                     i1I2C_SetCallback@cb:	
  2854                           ; 2 bytes @ 0x0
  2855                           
  2856                           
  2857                           ; 2 bytes @ 0x0
  2858     0070                     	ds	1
  2859     0071                     ??_EUSART_Receive_ISR:
  2860     0071                     ??_EUSART_DefaultErrorHandler:	
  2861                           ; 1 bytes @ 0x1
  2862                           
  2863     0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2864                           ; 1 bytes @ 0x1
  2865                           
  2866                           
  2867                           ; 1 bytes @ 0x1
  2868     0071                     	ds	1
  2869     0072                     ??_TMR1_ISR:
  2870     0072                     ??_TMR1_WriteTimer:	
  2871                           ; 1 bytes @ 0x2
  2872                           
  2873     0072                     ??i1_I2C_SetBuffer:	
  2874                           ; 1 bytes @ 0x2
  2875                           
  2876     0072                     i1I2C_SetBuffer@buffer:	
  2877                           ; 1 bytes @ 0x2
  2878                           
  2879     0072                     i1I2C_SetCallback@ptr:	
  2880                           ; 1 bytes @ 0x2
  2881                           
  2882                           
  2883                           ; 1 bytes @ 0x2
  2884     0072                     	ds	1
  2885     0073                     ??i1_I2C_SetCallback:
  2886     0073                     i1I2C_SetCallback@idx:	
  2887                           ; 1 bytes @ 0x3
  2888                           
  2889                           
  2890                           ; 1 bytes @ 0x3
  2891     0073                     	ds	1
  2892     0074                     ?_I2C_SetDataCompleteCallback:
  2893     0074                     I2C_SetDataCompleteCallback@cb:	
  2894                           ; 1 bytes @ 0x4
  2895                           
  2896                           
  2897                           ; 2 bytes @ 0x4
  2898     0074                     	ds	2
  2899     0076                     I2C_SetDataCompleteCallback@ptr:
  2900                           
  2901                           ; 1 bytes @ 0x6
  2902     0076                     	ds	1
  2903     0077                     ??_I2C_SetDataCompleteCallback:
  2904     0077                     ?_rd1RegCompleteHandler:	
  2905                           ; 1 bytes @ 0x7
  2906                           
  2907     0077                     ?_rd2RegCompleteHandler:	
  2908                           ; 1 bytes @ 0x7
  2909                           
  2910     0077                     ?_wr1RegCompleteHandler:	
  2911                           ; 1 bytes @ 0x7
  2912                           
  2913     0077                     ?_wr2RegCompleteHandler:	
  2914                           ; 1 bytes @ 0x7
  2915                           
  2916     0077                     ?_rdBlkRegCompleteHandler:	
  2917                           ; 1 bytes @ 0x7
  2918                           
  2919     0077                     ?_I2C_CallbackReturnStop:	
  2920                           ; 1 bytes @ 0x7
  2921                           
  2922     0077                     ?_I2C_CallbackReturnReset:	
  2923                           ; 1 bytes @ 0x7
  2924                           
  2925     0077                     rd1RegCompleteHandler@ptr:	
  2926                           ; 1 bytes @ 0x7
  2927                           
  2928     0077                     rd2RegCompleteHandler@ptr:	
  2929                           ; 1 bytes @ 0x7
  2930                           
  2931     0077                     wr1RegCompleteHandler@ptr:	
  2932                           ; 1 bytes @ 0x7
  2933                           
  2934     0077                     wr2RegCompleteHandler@ptr:	
  2935                           ; 1 bytes @ 0x7
  2936                           
  2937     0077                     rdBlkRegCompleteHandler@ptr:	
  2938                           ; 1 bytes @ 0x7
  2939                           
  2940     0077                     I2C_CallbackReturnStop@funPtr:	
  2941                           ; 1 bytes @ 0x7
  2942                           
  2943     0077                     I2C_CallbackReturnReset@funPtr:	
  2944                           ; 1 bytes @ 0x7
  2945                           
  2946                           
  2947                           ; 1 bytes @ 0x7
  2948     0077                     	ds	1
  2949     0078                     ??_rd1RegCompleteHandler:
  2950     0078                     ??_rd2RegCompleteHandler:	
  2951                           ; 1 bytes @ 0x8
  2952                           
  2953     0078                     ??_wr1RegCompleteHandler:	
  2954                           ; 1 bytes @ 0x8
  2955                           
  2956     0078                     ??_wr2RegCompleteHandler:	
  2957                           ; 1 bytes @ 0x8
  2958                           
  2959     0078                     ??_rdBlkRegCompleteHandler:	
  2960                           ; 1 bytes @ 0x8
  2961                           
  2962     0078                     ??_I2C_DO_TX:	
  2963                           ; 1 bytes @ 0x8
  2964                           
  2965     0078                     ??_I2C_DO_RX:	
  2966                           ; 1 bytes @ 0x8
  2967                           
  2968     0078                     ??_I2C_DO_TX_EMPTY:	
  2969                           ; 1 bytes @ 0x8
  2970                           
  2971     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2972                           ; 1 bytes @ 0x8
  2973                           
  2974     0078                     ??_I2C_CallbackReturnStop:	
  2975                           ; 1 bytes @ 0x8
  2976                           
  2977     0078                     ??_I2C_CallbackReturnReset:	
  2978                           ; 1 bytes @ 0x8
  2979                           
  2980                           
  2981                           ; 1 bytes @ 0x8
  2982     0078                     	ds	2
  2983     007A                     ??_I2C_MasterFsm:
  2984                           
  2985                           ; 1 bytes @ 0xA
  2986     007A                     	ds	2
  2987     007C                     ??_I2C_MasterIsr:
  2988     007C                     ??_INTERRUPT_InterruptManager:	
  2989                           ; 1 bytes @ 0xC
  2990                           
  2991                           
  2992                           	psect	cstackBANK0
  2993     0020                     __pcstackBANK0:	
  2994                           ; 1 bytes @ 0xC
  2995                           
  2996     0020                     ?_I2C_SetBuffer:
  2997     0020                     ??_I2C_Close:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000     0020                     ??_I2C_Initialize:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003     0020                     ??_OSCILLATOR_Initialize:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006     0020                     ??_WDT_Initialize:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009     0020                     ?_EUSART_SetRxInterruptHandler:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012     0020                     ?_EUSART_SetTxInterruptHandler:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015     0020                     ?_EUSART_SetFramingErrorHandler:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018     0020                     ?_EUSART_SetOverrunErrorHandler:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021     0020                     ?_EUSART_SetErrorHandler:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024     0020                     ?_TMR1_SetInterruptHandler:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027     0020                     ?_I2C_SetInterruptHandler:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030     0020                     ??_I2C_MasterClearIrq:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033     0020                     ??_I2C_MasterOpen:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036     0020                     ??_I2C_MasterEnableIrq:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039     0020                     ??_I2C_MasterDisableIrq:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042     0020                     ??_I2C_MasterClose:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045     0020                     ??_I2C_MasterStart:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048     0020                     ?_I2C_SetCallback:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051     0020                     ??_PIN_MANAGER_Initialize:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054     0020                     ??_EUSART_is_tx_done:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057     0020                     ??_EUSART_Read:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060     0020                     ??_EUSART_Write:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063     0020                     ??_TMR1_StartTimer:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066     0020                     ??_I2C_MasterOperation:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069     0020                     ??_Task_Indicator:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072     0020                     ??_Device_Init:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075     0020                     ??_buildException:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078     0020                     ??_ModbusSlave_Init:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081     0020                     ?_Modbus_calcCRC:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084     0020                     ?__Umul8_16:	
  3085                           ; 2 bytes @ 0x0
  3086                           
  3087     0020                     ?_Get_millis:	
  3088                           ; 2 bytes @ 0x0
  3089                           
  3090     0020                     ?___fltol:	
  3091                           ; 4 bytes @ 0x0
  3092                           
  3093     0020                     ?___xxtofl:	
  3094                           ; 4 bytes @ 0x0
  3095                           
  3096     0020                     I2C_Close@returnValue:	
  3097                           ; 4 bytes @ 0x0
  3098                           
  3099     0020                     I2C_MasterOperation@read:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102     0020                     Device_Init@value_SW1:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105     0020                     ModbusSlave_Init@_SW_Ad:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108     0020                     __Umul8_16@multiplicand:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3115                           ; 2 bytes @ 0x0
  3116                           
  3117     0020                     EUSART_SetErrorHandler@interruptHandler:	
  3118                           ; 2 bytes @ 0x0
  3119                           
  3120     0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3121                           ; 2 bytes @ 0x0
  3122                           
  3123     0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3124                           ; 2 bytes @ 0x0
  3125                           
  3126     0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  3127                           ; 2 bytes @ 0x0
  3128                           
  3129     0020                     I2C_SetBuffer@bufferSize:	
  3130                           ; 2 bytes @ 0x0
  3131                           
  3132     0020                     I2C_SetInterruptHandler@InterruptHandler:	
  3133                           ; 2 bytes @ 0x0
  3134                           
  3135     0020                     I2C_SetCallback@cb:	
  3136                           ; 2 bytes @ 0x0
  3137                           
  3138     0020                     ___fltol@f1:	
  3139                           ; 2 bytes @ 0x0
  3140                           
  3141     0020                     ___xxtofl@val:	
  3142                           ; 4 bytes @ 0x0
  3143                           
  3144                           
  3145                           ; 4 bytes @ 0x0
  3146     0020                     	ds	1
  3147     0021                     EUSART_Read@readValue:
  3148     0021                     EUSART_Write@txData:	
  3149                           ; 1 bytes @ 0x1
  3150                           
  3151     0021                     I2C_MasterOperation@returnValue:	
  3152                           ; 1 bytes @ 0x1
  3153                           
  3154     0021                     Device_Init@value_SW2:	
  3155                           ; 1 bytes @ 0x1
  3156                           
  3157     0021                     buildException@exception:	
  3158                           ; 1 bytes @ 0x1
  3159                           
  3160                           
  3161                           ; 1 bytes @ 0x1
  3162     0021                     	ds	1
  3163     0022                     ??_I2C_Open:
  3164     0022                     ??_I2C_SetBuffer:	
  3165                           ; 1 bytes @ 0x2
  3166                           
  3167     0022                     ??_I2C_MasterWrite:	
  3168                           ; 1 bytes @ 0x2
  3169                           
  3170     0022                     ??_I2C_MasterRead:	
  3171                           ; 1 bytes @ 0x2
  3172                           
  3173     0022                     ??_TMR1_Initialize:	
  3174                           ; 1 bytes @ 0x2
  3175                           
  3176     0022                     ??_EUSART_Initialize:	
  3177                           ; 1 bytes @ 0x2
  3178                           
  3179     0022                     ??_EUSART_SetRxInterruptHandler:	
  3180                           ; 1 bytes @ 0x2
  3181                           
  3182     0022                     ??_EUSART_SetTxInterruptHandler:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185     0022                     ??_EUSART_SetFramingErrorHandler:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188     0022                     ??_EUSART_SetOverrunErrorHandler:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191     0022                     ??_EUSART_SetErrorHandler:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194     0022                     ??_TMR1_SetInterruptHandler:	
  3195                           ; 1 bytes @ 0x2
  3196                           
  3197     0022                     ??_I2C_SetInterruptHandler:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200     0022                     ??_Tick_Init_SES:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203     0022                     ??_Modbus_calcCRC:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206     0022                     ??__Umul8_16:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209     0022                     ??_SYSTEM_Initialize:	
  3210                           ; 1 bytes @ 0x2
  3211                           
  3212     0022                     ??_Modbus_getRxBuff:	
  3213                           ; 1 bytes @ 0x2
  3214                           
  3215     0022                     I2C_Open@address:	
  3216                           ; 1 bytes @ 0x2
  3217                           
  3218     0022                     I2C_SetBuffer@buffer:	
  3219                           ; 1 bytes @ 0x2
  3220                           
  3221     0022                     I2C_SetCallback@ptr:	
  3222                           ; 1 bytes @ 0x2
  3223                           
  3224     0022                     Device_Init@value_SW3:	
  3225                           ; 1 bytes @ 0x2
  3226                           
  3227     0022                     buildException@u8func:	
  3228                           ; 1 bytes @ 0x2
  3229                           
  3230                           
  3231                           ; 1 bytes @ 0x2
  3232     0022                     	ds	1
  3233     0023                     ??_I2C_SetCallback:
  3234     0023                     I2C_Open@returnValue:	
  3235                           ; 1 bytes @ 0x3
  3236                           
  3237     0023                     I2C_SetCallback@idx:	
  3238                           ; 1 bytes @ 0x3
  3239                           
  3240     0023                     Device_Init@value_SW4:	
  3241                           ; 1 bytes @ 0x3
  3242                           
  3243                           
  3244                           ; 1 bytes @ 0x3
  3245     0023                     	ds	1
  3246     0024                     ?_I2C_SetAddressNackCallback:
  3247     0024                     ??_App_Init:	
  3248                           ; 1 bytes @ 0x4
  3249                           
  3250     0024                     ??_Get_millis:	
  3251                           ; 1 bytes @ 0x4
  3252                           
  3253     0024                     ?_I2C_ReadNBytes:	
  3254                           ; 1 bytes @ 0x4
  3255                           
  3256     0024                     ??___fltol:	
  3257                           ; 1 bytes @ 0x4
  3258                           
  3259     0024                     ??___xxtofl:	
  3260                           ; 1 bytes @ 0x4
  3261                           
  3262     0024                     ?_llabs:	
  3263                           ; 1 bytes @ 0x4
  3264                           
  3265     0024                     I2C_ReadNBytes@data:	
  3266                           ; 8 bytes @ 0x4
  3267                           
  3268     0024                     I2C_SetAddressNackCallback@cb:	
  3269                           ; 1 bytes @ 0x4
  3270                           
  3271     0024                     __Umul8_16@product:	
  3272                           ; 2 bytes @ 0x4
  3273                           
  3274     0024                     llabs@a:	
  3275                           ; 2 bytes @ 0x4
  3276                           
  3277                           
  3278                           ; 8 bytes @ 0x4
  3279     0024                     	ds	1
  3280     0025                     I2C_ReadNBytes@len:
  3281                           
  3282                           ; 2 bytes @ 0x5
  3283     0025                     	ds	1
  3284     0026                     I2C_SetAddressNackCallback@ptr:
  3285     0026                     Modbus_calcCRC@temp2:	
  3286                           ; 2 bytes @ 0x6
  3287                           
  3288     0026                     __Umul8_16@word_mpld:	
  3289                           ; 2 bytes @ 0x6
  3290                           
  3291                           
  3292                           ; 2 bytes @ 0x6
  3293     0026                     	ds	1
  3294     0027                     ??_I2C_ReadNBytes:
  3295     0027                     I2C_ReadNBytes@address:	
  3296                           ; 1 bytes @ 0x7
  3297                           
  3298                           
  3299                           ; 1 bytes @ 0x7
  3300     0027                     	ds	1
  3301     0028                     ??_I2C_SetAddressNackCallback:
  3302     0028                     ?_I2C_WriteNBytes:	
  3303                           ; 1 bytes @ 0x8
  3304                           
  3305     0028                     I2C_WriteNBytes@data:	
  3306                           ; 1 bytes @ 0x8
  3307                           
  3308     0028                     ___fltol@sign1:	
  3309                           ; 1 bytes @ 0x8
  3310                           
  3311     0028                     __Umul8_16@multiplier:	
  3312                           ; 1 bytes @ 0x8
  3313                           
  3314     0028                     ___xxtofl@sign:	
  3315                           ; 1 bytes @ 0x8
  3316                           
  3317     0028                     Modbus_calcCRC@flag:	
  3318                           ; 1 bytes @ 0x8
  3319                           
  3320                           
  3321                           ; 2 bytes @ 0x8
  3322     0028                     	ds	1
  3323     0029                     Modbus_getRxBuff@bBuffOverflow:
  3324     0029                     ___fltol@exp1:	
  3325                           ; 1 bytes @ 0x9
  3326                           
  3327     0029                     ___xxtofl@exp:	
  3328                           ; 1 bytes @ 0x9
  3329                           
  3330     0029                     I2C_WriteNBytes@len:	
  3331                           ; 1 bytes @ 0x9
  3332                           
  3333                           
  3334                           ; 2 bytes @ 0x9
  3335     0029                     	ds	1
  3336     002A                     Modbus_calcCRC@len:
  3337     002A                     ___xxtofl@arg:	
  3338                           ; 1 bytes @ 0xA
  3339                           
  3340                           
  3341                           ; 4 bytes @ 0xA
  3342     002A                     	ds	1
  3343     002B                     ??_I2C_WriteNBytes:
  3344     002B                     I2C_WriteNBytes@address:	
  3345                           ; 1 bytes @ 0xB
  3346                           
  3347     002B                     Modbus_calcCRC@i:	
  3348                           ; 1 bytes @ 0xB
  3349                           
  3350                           
  3351                           ; 1 bytes @ 0xB
  3352     002B                     	ds	1
  3353     002C                     ??_llabs:
  3354     002C                     Modbus_calcCRC@j:	
  3355                           ; 1 bytes @ 0xC
  3356                           
  3357                           
  3358                           ; 1 bytes @ 0xC
  3359     002C                     	ds	1
  3360     002D                     Modbus_calcCRC@temp:
  3361                           
  3362                           ; 2 bytes @ 0xD
  3363     002D                     	ds	1
  3364     002E                     ?___flmul:
  3365     002E                     ___flmul@b:	
  3366                           ; 4 bytes @ 0xE
  3367                           
  3368                           
  3369                           ; 4 bytes @ 0xE
  3370     002E                     	ds	1
  3371     002F                     ??_Modbus_sendTxBuff:
  3372     002F                     ??_validateRequest:	
  3373                           ; 1 bytes @ 0xF
  3374                           
  3375                           
  3376                           ; 1 bytes @ 0xF
  3377     002F                     	ds	3
  3378     0032                     ___flmul@a:
  3379                           
  3380                           ; 4 bytes @ 0x12
  3381     0032                     	ds	4
  3382     0036                     ??___flmul:
  3383     0036                     Modbus_sendTxBuff@u16crc:	
  3384                           ; 1 bytes @ 0x16
  3385                           
  3386                           
  3387                           ; 2 bytes @ 0x16
  3388     0036                     	ds	2
  3389     0038                     Modbus_sendTxBuff@index:
  3390                           
  3391                           ; 2 bytes @ 0x18
  3392     0038                     	ds	2
  3393     003A                     Modbus_sendTxBuff@u32overTimecountDown:
  3394                           
  3395                           ; 4 bytes @ 0x1A
  3396     003A                     	ds	1
  3397     003B                     ___flmul@sign:
  3398                           
  3399                           ; 1 bytes @ 0x1B
  3400     003B                     	ds	1
  3401     003C                     validateRequest@u16MsgCRC:
  3402     003C                     ___flmul@grs:	
  3403                           ; 2 bytes @ 0x1C
  3404                           
  3405                           
  3406                           ; 4 bytes @ 0x1C
  3407     003C                     	ds	2
  3408     003E                     ?_ModbusSlaveF04:
  3409     003E                     validateRequest@isSupported:	
  3410                           ; 1 bytes @ 0x1E
  3411                           
  3412     003E                     ModbusSlaveF04@size:	
  3413                           ; 1 bytes @ 0x1E
  3414                           
  3415                           
  3416                           ; 2 bytes @ 0x1E
  3417     003E                     	ds	1
  3418     003F                     validateRequest@i:
  3419                           
  3420                           ; 1 bytes @ 0x1F
  3421     003F                     	ds	1
  3422     0040                     ??_ModbusSlaveF04:
  3423     0040                     ___flmul@aexp:	
  3424                           ; 1 bytes @ 0x20
  3425                           
  3426                           
  3427                           ; 1 bytes @ 0x20
  3428     0040                     	ds	1
  3429     0041                     ___flmul@bexp:
  3430                           
  3431                           ; 1 bytes @ 0x21
  3432     0041                     	ds	1
  3433     0042                     ___flmul@prod:
  3434                           
  3435                           ; 4 bytes @ 0x22
  3436     0042                     	ds	4
  3437     0046                     ___flmul@temp:
  3438                           
  3439                           ; 2 bytes @ 0x26
  3440     0046                     	ds	2
  3441     0048                     ?___fladd:
  3442     0048                     ___fladd@b:	
  3443                           ; 4 bytes @ 0x28
  3444                           
  3445                           
  3446                           ; 4 bytes @ 0x28
  3447     0048                     	ds	2
  3448     004A                     ModbusSlaveF04@u8StartAdd:
  3449                           
  3450                           ; 2 bytes @ 0x2A
  3451     004A                     	ds	2
  3452     004C                     ModbusSlaveF04@u8regsno:
  3453     004C                     ___fladd@a:	
  3454                           ; 1 bytes @ 0x2C
  3455                           
  3456                           
  3457                           ; 4 bytes @ 0x2C
  3458     004C                     	ds	1
  3459     004D                     ModbusSlaveF04@reg:
  3460                           
  3461                           ; 1 bytes @ 0x2D
  3462     004D                     	ds	1
  3463     004E                     ModbusSlaveF04@valueAdd:
  3464                           
  3465                           ; 2 bytes @ 0x2E
  3466     004E                     	ds	2
  3467     0050                     ??___fladd:
  3468     0050                     ModbusSlaveF04@valueRegsno:	
  3469                           ; 1 bytes @ 0x30
  3470                           
  3471                           
  3472                           ; 2 bytes @ 0x30
  3473     0050                     	ds	2
  3474     0052                     ModbusSlaveF04@i:
  3475                           
  3476                           ; 2 bytes @ 0x32
  3477     0052                     	ds	2
  3478     0054                     ?_ModbusRTU_Slave_Poll:
  3479     0054                     ModbusRTU_Slave_Poll@size:	
  3480                           ; 1 bytes @ 0x34
  3481                           
  3482                           
  3483                           ; 2 bytes @ 0x34
  3484     0054                     	ds	2
  3485     0056                     ??_ModbusRTU_Slave_Poll:
  3486                           
  3487                           ; 1 bytes @ 0x36
  3488     0056                     	ds	2
  3489     0058                     ___fladd@signs:
  3490                           
  3491                           ; 1 bytes @ 0x38
  3492     0058                     	ds	1
  3493     0059                     ___fladd@aexp:
  3494                           
  3495                           ; 1 bytes @ 0x39
  3496     0059                     	ds	1
  3497     005A                     ___fladd@bexp:
  3498                           
  3499                           ; 1 bytes @ 0x3A
  3500     005A                     	ds	1
  3501     005B                     ___fladd@grs:
  3502                           
  3503                           ; 1 bytes @ 0x3B
  3504     005B                     	ds	1
  3505     005C                     ?___fldiv:
  3506     005C                     ___fldiv@a:	
  3507                           ; 4 bytes @ 0x3C
  3508                           
  3509                           
  3510                           ; 4 bytes @ 0x3C
  3511     005C                     	ds	2
  3512     005E                     ModbusRTU_Slave_Poll@reg:
  3513                           
  3514                           ; 1 bytes @ 0x3E
  3515     005E                     	ds	1
  3516     005F                     ModbusRTU_Slave_Poll@u8Current:
  3517                           
  3518                           ; 1 bytes @ 0x3F
  3519     005F                     	ds	1
  3520     0060                     ModbusRTU_Slave_Poll@i8state:
  3521     0060                     ___fldiv@b:	
  3522                           ; 1 bytes @ 0x40
  3523                           
  3524                           
  3525                           ; 4 bytes @ 0x40
  3526     0060                     	ds	1
  3527     0061                     ModbusRTU_Slave_Poll@u8exception:
  3528                           
  3529                           ; 1 bytes @ 0x41
  3530     0061                     	ds	1
  3531     0062                     ??_Task_MB:
  3532     0062                     ??_ModbusSlave_Process:	
  3533                           ; 1 bytes @ 0x42
  3534                           
  3535                           
  3536                           ; 1 bytes @ 0x42
  3537     0062                     	ds	2
  3538     0064                     ??___fldiv:
  3539                           
  3540                           ; 1 bytes @ 0x44
  3541     0064                     	ds	5
  3542     0069                     ??_App_Process:
  3543     0069                     ??_main:	
  3544                           ; 1 bytes @ 0x49
  3545                           
  3546                           
  3547                           	psect	maintext
  3548     13D9                     __pmaintext:	
  3549                           ; 1 bytes @ 0x49
  3550 ;;
  3551 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3552 ;;
  3553 ;; *************** function _main *****************
  3554 ;; Defined at:
  3555 ;;		line 49 in file "main.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1    wreg      void 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3564 ;; Tracked objects:
  3565 ;;		On entry : B1F/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3569 ;;      Params:         0       0       0       0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels required when called: 14
  3575 ;; This function calls:
  3576 ;;		_App_Init
  3577 ;;		_App_Process
  3578 ;;		_SYSTEM_Initialize
  3579 ;; This function is called by:
  3580 ;;		Startup code after reset
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584     13D9                     _main:	
  3585                           ;psect for function _main
  3586                           
  3587     13D9                     l5210:	
  3588                           ;incstack = 0
  3589                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3590                           
  3591                           
  3592                           ;main.c: 51:     SYSTEM_Initialize();
  3593     13D9  3188  2000  3193   	fcall	_SYSTEM_Initialize
  3594                           
  3595                           ;main.c: 52:     App_Init();
  3596     13DC  3193  2354  3193   	fcall	_App_Init
  3597     13DF                     l5212:
  3598                           
  3599                           ;main.c: 57:     (INTCONbits.GIE = 1);
  3600     13DF  178B               	bsf	11,7	;volatile
  3601     13E0                     l5214:
  3602                           
  3603                           ;main.c: 60:     (INTCONbits.PEIE = 1);
  3604     13E0  170B               	bsf	11,6	;volatile
  3605     13E1                     l5216:
  3606                           
  3607                           ;main.c: 70:         App_Process();
  3608     13E1  3193  235E  3193   	fcall	_App_Process
  3609     13E4  2BE1               	goto	l5216
  3610     13E5  3180  2858         	ljmp	start
  3611     13E7                     __end_of_main:
  3612                           
  3613                           	psect	text1
  3614     0800                     __ptext1:	
  3615 ;; *************** function _SYSTEM_Initialize *****************
  3616 ;; Defined at:
  3617 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, pclath, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3631 ;;      Params:         0       0       0       0       0       0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 9
  3638 ;; This function calls:
  3639 ;;		_EUSART_Initialize
  3640 ;;		_I2C_Initialize
  3641 ;;		_OSCILLATOR_Initialize
  3642 ;;		_PIN_MANAGER_Initialize
  3643 ;;		_TMR1_Initialize
  3644 ;;		_WDT_Initialize
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650     0800                     _SYSTEM_Initialize:	
  3651                           ;psect for function _SYSTEM_Initialize
  3652                           
  3653     0800                     l5022:	
  3654                           ;incstack = 0
  3655                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3656                           
  3657                           
  3658                           ;mcc_generated_files/mcc.c: 52:     I2C_Initialize();
  3659     0800  3193  2341  3188   	fcall	_I2C_Initialize
  3660                           
  3661                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3662     0803  3195  2507  3188   	fcall	_PIN_MANAGER_Initialize
  3663                           
  3664                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3665     0806  3192  22EA  3188   	fcall	_OSCILLATOR_Initialize
  3666                           
  3667                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3668     0809  3187  27FC  3188   	fcall	_WDT_Initialize
  3669                           
  3670                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  3671     080C  3194  24EC  3188   	fcall	_TMR1_Initialize
  3672                           
  3673                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3674     080F  3197  2735  3188   	fcall	_EUSART_Initialize
  3675     0812                     l163:
  3676     0812  0008               	return
  3677     0813                     __end_of_SYSTEM_Initialize:
  3678                           
  3679                           	psect	text2
  3680     07FC                     __ptext2:	
  3681 ;; *************** function _WDT_Initialize *****************
  3682 ;; Defined at:
  3683 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3697 ;;      Params:         0       0       0       0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 7
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_SYSTEM_Initialize
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     07FC                     _WDT_Initialize:	
  3712                           ;psect for function _WDT_Initialize
  3713                           
  3714     07FC                     l4856:	
  3715                           ;incstack = 0
  3716                           ; Regs used in _WDT_Initialize: [wreg]
  3717                           
  3718                           
  3719                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x24;
  3720     07FC  3024               	movlw	36
  3721     07FD  0021               	movlb	1	; select bank1
  3722     07FE  0097               	movwf	23	;volatile
  3723     07FF                     l169:
  3724     07FF  0008               	return
  3725     0800                     __end_of_WDT_Initialize:
  3726                           
  3727                           	psect	text3
  3728     14EC                     __ptext3:	
  3729 ;; *************** function _TMR1_Initialize *****************
  3730 ;; Defined at:
  3731 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, pclath, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3745 ;;      Params:         0       0       0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 8
  3752 ;; This function calls:
  3753 ;;		_TMR1_SetInterruptHandler
  3754 ;; This function is called by:
  3755 ;;		_SYSTEM_Initialize
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759     14EC                     _TMR1_Initialize:	
  3760                           ;psect for function _TMR1_Initialize
  3761                           
  3762     14EC                     l4858:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3765                           
  3766                           
  3767                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3768     14EC  0020               	movlb	0	; select bank0
  3769     14ED  0199               	clrf	25	;volatile
  3770     14EE                     l4860:
  3771                           
  3772                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3773     14EE  30E0               	movlw	224
  3774     14EF  0097               	movwf	23	;volatile
  3775     14F0                     l4862:
  3776                           
  3777                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3778     14F0  30C0               	movlw	192
  3779     14F1  0096               	movwf	22	;volatile
  3780     14F2                     l4864:
  3781                           
  3782                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3783     14F2  1011               	bcf	17,0	;volatile
  3784     14F3                     l4866:
  3785                           
  3786                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3787     14F3  0817               	movf	23,w	;volatile
  3788     14F4  0021               	movlb	1	; select bank1
  3789     14F5  00E0               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3790     14F6  0020               	movlb	0	; select bank0
  3791     14F7  0816               	movf	22,w	;volatile
  3792     14F8  0021               	movlb	1	; select bank1
  3793     14F9  00DF               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3794     14FA                     l4868:
  3795                           
  3796                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3797     14FA  1411               	bsf	17,0	;volatile
  3798     14FB                     l4870:
  3799                           
  3800                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3801     14FB  3062               	movlw	low _TMR1_DefaultInterruptHandler
  3802     14FC  0020               	movlb	0	; select bank0
  3803     14FD  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3804     14FE  3012               	movlw	high _TMR1_DefaultInterruptHandler
  3805     14FF  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3806     1500  3193  2302  3194   	fcall	_TMR1_SetInterruptHandler
  3807     1503                     l4872:
  3808                           
  3809                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3810     1503  3041               	movlw	65
  3811     1504  0020               	movlb	0	; select bank0
  3812     1505  0098               	movwf	24	;volatile
  3813     1506                     l381:
  3814     1506  0008               	return
  3815     1507                     __end_of_TMR1_Initialize:
  3816                           
  3817                           	psect	text4
  3818     1507                     __ptext4:	
  3819 ;; *************** function _PIN_MANAGER_Initialize *****************
  3820 ;; Defined at:
  3821 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3835 ;;      Params:         0       0       0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 7
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_SYSTEM_Initialize
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849     1507                     _PIN_MANAGER_Initialize:	
  3850                           ;psect for function _PIN_MANAGER_Initialize
  3851                           
  3852     1507                     l4818:	
  3853                           ;incstack = 0
  3854                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3855                           
  3856                           
  3857                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3858     1507  0022               	movlb	2	; select bank2
  3859     1508  0190               	clrf	16	;volatile
  3860                           
  3861                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3862     1509  018C               	clrf	12	;volatile
  3863                           
  3864                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3865     150A  018D               	clrf	13	;volatile
  3866     150B                     l4820:
  3867                           
  3868                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x63;
  3869     150B  3063               	movlw	99
  3870     150C  008E               	movwf	14	;volatile
  3871     150D                     l4822:
  3872                           
  3873                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3874     150D  3008               	movlw	8
  3875     150E  0021               	movlb	1	; select bank1
  3876     150F  0090               	movwf	16	;volatile
  3877     1510                     l4824:
  3878                           
  3879                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3880     1510  30FF               	movlw	255
  3881     1511  008C               	movwf	12	;volatile
  3882     1512                     l4826:
  3883                           
  3884                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3885     1512  30FF               	movlw	255
  3886     1513  008D               	movwf	13	;volatile
  3887     1514                     l4828:
  3888                           
  3889                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3890     1514  309C               	movlw	156
  3891     1515  008E               	movwf	14	;volatile
  3892     1516                     l4830:
  3893                           
  3894                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3895     1516  303F               	movlw	63
  3896     1517  0023               	movlb	3	; select bank3
  3897     1518  008D               	movwf	13	;volatile
  3898     1519                     l4832:
  3899                           
  3900                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3901     1519  3030               	movlw	48
  3902     151A  008C               	movwf	12	;volatile
  3903     151B                     l4834:
  3904                           
  3905                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3906     151B  0024               	movlb	4	; select bank4
  3907     151C  0190               	clrf	16	;volatile
  3908     151D                     l4836:
  3909                           
  3910                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3911     151D  018D               	clrf	13	;volatile
  3912     151E                     l4838:
  3913                           
  3914                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3915     151E  0021               	movlb	1	; select bank1
  3916     151F  1795               	bsf	21,7	;volatile
  3917     1520                     l4840:
  3918                           
  3919                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3920     1520  0022               	movlb	2	; select bank2
  3921     1521  019D               	clrf	29	;volatile
  3922     1522                     l135:
  3923     1522  0008               	return
  3924     1523                     __end_of_PIN_MANAGER_Initialize:
  3925                           
  3926                           	psect	text5
  3927     12EA                     __ptext5:	
  3928 ;; *************** function _OSCILLATOR_Initialize *****************
  3929 ;; Defined at:
  3930 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3944 ;;      Params:         0       0       0       0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 7
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_SYSTEM_Initialize
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958     12EA                     _OSCILLATOR_Initialize:	
  3959                           ;psect for function _OSCILLATOR_Initialize
  3960                           
  3961     12EA                     l4850:	
  3962                           ;incstack = 0
  3963                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3964                           
  3965                           
  3966                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3967     12EA  3070               	movlw	112
  3968     12EB  0021               	movlb	1	; select bank1
  3969     12EC  0099               	movwf	25	;volatile
  3970     12ED                     l4852:
  3971                           
  3972                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3973     12ED  0198               	clrf	24	;volatile
  3974     12EE                     l4854:
  3975                           
  3976                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3977     12EE  0022               	movlb	2	; select bank2
  3978     12EF  0196               	clrf	22	;volatile
  3979     12F0                     l166:
  3980     12F0  0008               	return
  3981     12F1                     __end_of_OSCILLATOR_Initialize:
  3982                           
  3983                           	psect	text6
  3984     1341                     __ptext6:	
  3985 ;; *************** function _I2C_Initialize *****************
  3986 ;; Defined at:
  3987 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4001 ;;      Params:         0       0       0       0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 7
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_SYSTEM_Initialize
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     1341                     _I2C_Initialize:	
  4016                           ;psect for function _I2C_Initialize
  4017                           
  4018     1341                     l4842:	
  4019                           ;incstack = 0
  4020                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4021                           
  4022                           
  4023                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  4024     1341  0024               	movlb	4	; select bank4
  4025     1342  0194               	clrf	20	;volatile
  4026     1343                     l4844:
  4027                           
  4028                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4029     1343  3008               	movlw	8
  4030     1344  0095               	movwf	21	;volatile
  4031     1345                     l4846:
  4032                           
  4033                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4034     1345  0196               	clrf	22	;volatile
  4035                           
  4036                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  4037     1346  3013               	movlw	19
  4038     1347  0092               	movwf	18	;volatile
  4039     1348                     l4848:
  4040                           
  4041                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4042     1348  1295               	bcf	21,5	;volatile
  4043     1349                     l514:
  4044     1349  0008               	return
  4045     134A                     __end_of_I2C_Initialize:
  4046                           
  4047                           	psect	text7
  4048     1735                     __ptext7:	
  4049 ;; *************** function _EUSART_Initialize *****************
  4050 ;; Defined at:
  4051 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4065 ;;      Params:         0       0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 8
  4072 ;; This function calls:
  4073 ;;		_EUSART_SetErrorHandler
  4074 ;;		_EUSART_SetFramingErrorHandler
  4075 ;;		_EUSART_SetOverrunErrorHandler
  4076 ;;		_EUSART_SetRxInterruptHandler
  4077 ;;		_EUSART_SetTxInterruptHandler
  4078 ;; This function is called by:
  4079 ;;		_SYSTEM_Initialize
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083     1735                     _EUSART_Initialize:	
  4084                           ;psect for function _EUSART_Initialize
  4085                           
  4086     1735                     l4874:	
  4087                           ;incstack = 0
  4088                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4089                           
  4090                           
  4091                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4092     1735  0021               	movlb	1	; select bank1
  4093     1736  1291               	bcf	17,5	;volatile
  4094     1737                     l4876:
  4095                           
  4096                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4097     1737  30F4               	movlw	low _EUSART_Receive_ISR
  4098     1738  0020               	movlb	0	; select bank0
  4099     1739  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4100     173A  3016               	movlw	high _EUSART_Receive_ISR
  4101     173B  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4102     173C  3193  232F  3197   	fcall	_EUSART_SetRxInterruptHandler
  4103     173F                     l4878:
  4104                           
  4105                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4106     173F  0021               	movlb	1	; select bank1
  4107     1740  1211               	bcf	17,4	;volatile
  4108                           
  4109                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4110     1741  3062               	movlw	low _EUSART_Transmit_ISR
  4111     1742  0020               	movlb	0	; select bank0
  4112     1743  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4113     1744  3015               	movlw	high _EUSART_Transmit_ISR
  4114     1745  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4115     1746  3193  2338  3197   	fcall	_EUSART_SetTxInterruptHandler
  4116     1749                     l4880:
  4117                           
  4118                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4119     1749  3008               	movlw	8
  4120     174A  0023               	movlb	3	; select bank3
  4121     174B  009F               	movwf	31	;volatile
  4122     174C                     l4882:
  4123                           
  4124                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4125     174C  3090               	movlw	144
  4126     174D  009D               	movwf	29	;volatile
  4127     174E                     l4884:
  4128                           
  4129                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4130     174E  3024               	movlw	36
  4131     174F  009E               	movwf	30	;volatile
  4132     1750                     l4886:
  4133                           
  4134                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  4135     1750  30CF               	movlw	207
  4136     1751  009B               	movwf	27	;volatile
  4137     1752                     l4888:
  4138                           
  4139                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4140     1752  019C               	clrf	28	;volatile
  4141     1753                     l4890:
  4142                           
  4143                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4144     1753  3061               	movlw	low _EUSART_DefaultFramingErrorHandler
  4145     1754  0020               	movlb	0	; select bank0
  4146     1755  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4147     1756  3012               	movlw	high _EUSART_DefaultFramingErrorHandler
  4148     1757  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4149     1758  3193  231D  3197   	fcall	_EUSART_SetFramingErrorHandler
  4150     175B                     l4892:
  4151                           
  4152                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4153     175B  308D               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4154     175C  0020               	movlb	0	; select bank0
  4155     175D  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4156     175E  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4157     175F  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4158     1760  3193  2326  3197   	fcall	_EUSART_SetOverrunErrorHandler
  4159     1763                     l4894:
  4160                           
  4161                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4162     1763  3089               	movlw	low _EUSART_DefaultErrorHandler
  4163     1764  0020               	movlb	0	; select bank0
  4164     1765  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4165     1766  3012               	movlw	high _EUSART_DefaultErrorHandler
  4166     1767  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4167     1768  3193  2314  3197   	fcall	_EUSART_SetErrorHandler
  4168                           
  4169                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4170     176B  01FD               	clrf	_eusartRxLastError	;volatile
  4171                           
  4172                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4173     176C  0020               	movlb	0	; select bank0
  4174     176D  01EF               	clrf	_eusartTxHead	;volatile
  4175                           
  4176                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4177     176E  01EE               	clrf	_eusartTxTail	;volatile
  4178     176F                     l4896:
  4179                           
  4180                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4181     176F  3008               	movlw	8
  4182     1770  00ED               	movwf	_eusartTxBufferRemaining	;volatile
  4183     1771                     l4898:
  4184                           
  4185                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4186     1771  01EC               	clrf	_eusartRxHead	;volatile
  4187     1772                     l4900:
  4188                           
  4189                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4190     1772  01EB               	clrf	_eusartRxTail	;volatile
  4191     1773                     l4902:
  4192                           
  4193                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4194     1773  01EA               	clrf	_eusartRxCount	;volatile
  4195     1774                     l4904:
  4196                           
  4197                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4198     1774  0021               	movlb	1	; select bank1
  4199     1775  1691               	bsf	17,5	;volatile
  4200     1776                     l279:
  4201     1776  0008               	return
  4202     1777                     __end_of_EUSART_Initialize:
  4203                           
  4204                           	psect	text8
  4205     1338                     __ptext8:	
  4206 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4207 ;; Defined at:
  4208 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4211 ;;		 -> EUSART_Transmit_ISR(1), 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4223 ;;      Params:         0       2       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0
  4226 ;;      Totals:         0       2       0       0       0       0       0       0
  4227 ;;Total ram usage:        2 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 7
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_EUSART_Initialize
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237     1338                     _EUSART_SetTxInterruptHandler:	
  4238                           ;psect for function _EUSART_SetTxInterruptHandler
  4239                           
  4240     1338                     l4592:	
  4241                           ;incstack = 0
  4242                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4243                           
  4244                           
  4245                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4246     1338  0020               	movlb	0	; select bank0
  4247     1339  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4248     133A  0022               	movlb	2	; select bank2
  4249     133B  00E8               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
  4250     133C  0020               	movlb	0	; select bank0
  4251     133D  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4252     133E  0022               	movlb	2	; select bank2
  4253     133F  00E7               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
  4254     1340                     l351:
  4255     1340  0008               	return
  4256     1341                     __end_of_EUSART_SetTxInterruptHandler:
  4257                           
  4258                           	psect	text9
  4259     132F                     __ptext9:	
  4260 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4261 ;; Defined at:
  4262 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4265 ;;		 -> EUSART_Receive_ISR(1), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4277 ;;      Params:         0       2       0       0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0
  4280 ;;      Totals:         0       2       0       0       0       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 7
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_EUSART_Initialize
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291     132F                     _EUSART_SetRxInterruptHandler:	
  4292                           ;psect for function _EUSART_SetRxInterruptHandler
  4293                           
  4294     132F                     l4590:	
  4295                           ;incstack = 0
  4296                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4297                           
  4298                           
  4299                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4300     132F  0020               	movlb	0	; select bank0
  4301     1330  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4302     1331  0022               	movlb	2	; select bank2
  4303     1332  00E6               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
  4304     1333  0020               	movlb	0	; select bank0
  4305     1334  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4306     1335  0022               	movlb	2	; select bank2
  4307     1336  00E5               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
  4308     1337                     l354:
  4309     1337  0008               	return
  4310     1338                     __end_of_EUSART_SetRxInterruptHandler:
  4311                           
  4312                           	psect	text10
  4313     1326                     __ptext10:	
  4314 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4315 ;; Defined at:
  4316 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4319 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4331 ;;      Params:         0       2       0       0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0
  4334 ;;      Totals:         0       2       0       0       0       0       0       0
  4335 ;;Total ram usage:        2 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 7
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_EUSART_Initialize
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345     1326                     _EUSART_SetOverrunErrorHandler:	
  4346                           ;psect for function _EUSART_SetOverrunErrorHandler
  4347                           
  4348     1326                     l4596:	
  4349                           ;incstack = 0
  4350                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4351                           
  4352                           
  4353                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4354     1326  0020               	movlb	0	; select bank0
  4355     1327  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4356     1328  0022               	movlb	2	; select bank2
  4357     1329  00E2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  4358     132A  0020               	movlb	0	; select bank0
  4359     132B  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4360     132C  0022               	movlb	2	; select bank2
  4361     132D  00E1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  4362     132E                     l345:
  4363     132E  0008               	return
  4364     132F                     __end_of_EUSART_SetOverrunErrorHandler:
  4365                           
  4366                           	psect	text11
  4367     131D                     __ptext11:	
  4368 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4369 ;; Defined at:
  4370 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4373 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4385 ;;      Params:         0       2       0       0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0
  4388 ;;      Totals:         0       2       0       0       0       0       0       0
  4389 ;;Total ram usage:        2 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 7
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_EUSART_Initialize
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     131D                     _EUSART_SetFramingErrorHandler:	
  4400                           ;psect for function _EUSART_SetFramingErrorHandler
  4401                           
  4402     131D                     l4594:	
  4403                           ;incstack = 0
  4404                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4405                           
  4406                           
  4407                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4408     131D  0020               	movlb	0	; select bank0
  4409     131E  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4410     131F  0022               	movlb	2	; select bank2
  4411     1320  00E4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  4412     1321  0020               	movlb	0	; select bank0
  4413     1322  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4414     1323  0022               	movlb	2	; select bank2
  4415     1324  00E3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  4416     1325                     l342:
  4417     1325  0008               	return
  4418     1326                     __end_of_EUSART_SetFramingErrorHandler:
  4419                           
  4420                           	psect	text12
  4421     1314                     __ptext12:	
  4422 ;; *************** function _EUSART_SetErrorHandler *****************
  4423 ;; Defined at:
  4424 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4427 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4439 ;;      Params:         0       2       0       0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0
  4442 ;;      Totals:         0       2       0       0       0       0       0       0
  4443 ;;Total ram usage:        2 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 7
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_EUSART_Initialize
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453     1314                     _EUSART_SetErrorHandler:	
  4454                           ;psect for function _EUSART_SetErrorHandler
  4455                           
  4456     1314                     l4598:	
  4457                           ;incstack = 0
  4458                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4459                           
  4460                           
  4461                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4462     1314  0020               	movlb	0	; select bank0
  4463     1315  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4464     1316  0022               	movlb	2	; select bank2
  4465     1317  00E0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  4466     1318  0020               	movlb	0	; select bank0
  4467     1319  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4468     131A  0022               	movlb	2	; select bank2
  4469     131B  00DF               	movwf	_EUSART_ErrorHandler^(0+256)
  4470     131C                     l348:
  4471     131C  0008               	return
  4472     131D                     __end_of_EUSART_SetErrorHandler:
  4473                           
  4474                           	psect	text13
  4475     135E                     __ptext13:	
  4476 ;; *************** function _App_Process *****************
  4477 ;; Defined at:
  4478 ;;		line 61 in file "MCU.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4492 ;;      Params:         0       0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 13
  4499 ;; This function calls:
  4500 ;;		_Task_Indicator
  4501 ;;		_Task_MB
  4502 ;;		_Task_Sensor
  4503 ;; This function is called by:
  4504 ;;		_main
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508     135E                     _App_Process:	
  4509                           ;psect for function _App_Process
  4510                           
  4511     135E                     l5068:	
  4512                           ;incstack = 0
  4513                           ; Regs used in _App_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4514                           
  4515                           
  4516                           ;MCU.c: 62:     Task_Sensor();
  4517     135E  318B  234A  3193   	fcall	_Task_Sensor
  4518     1361                     l5070:
  4519                           
  4520                           ;MCU.c: 63:     Task_MB();
  4521     1361  3194  244D  3193   	fcall	_Task_MB
  4522     1364                     l5072:
  4523                           
  4524                           ;MCU.c: 64:     Task_Indicator();
  4525     1364  3187  27CD  3193   	fcall	_Task_Indicator
  4526     1367                     l870:
  4527     1367  0008               	return
  4528     1368                     __end_of_App_Process:
  4529                           
  4530                           	psect	text14
  4531     0B4A                     __ptext14:	
  4532 ;; *************** function _Task_Sensor *****************
  4533 ;; Defined at:
  4534 ;;		line 49 in file "I2C_SHT30.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4548 ;;      Params:         0       0       0       0       0       0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0
  4550 ;;      Temps:          0       0      12       0       0       0       0       0
  4551 ;;      Totals:         0       0      12       0       0       0       0       0
  4552 ;;Total ram usage:       12 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 12
  4555 ;; This function calls:
  4556 ;;		_Get_millis
  4557 ;;		_ReadData
  4558 ;;		_llabs
  4559 ;; This function is called by:
  4560 ;;		_App_Process
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564     0B4A                     _Task_Sensor:	
  4565                           ;psect for function _Task_Sensor
  4566                           
  4567     0B4A                     l4940:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _Task_Sensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4570                           
  4571                           
  4572                           ;I2C_SHT30.c: 50:     static uint32_t valTime = 0;;I2C_SHT30.c: 53:     if ((llabs(((uin
      +                          t32_t) Get_millis() - valTime)) >= (uint32_t) 2 * 1000)) {
  4573     0B4A  3194  243C  318B   	fcall	_Get_millis
  4574     0B4D  0022               	movlb	2	; select bank2
  4575     0B4E  0855               	movf	Task_Sensor@valTime^(0+256),w
  4576     0B4F  0020               	movlb	0	; select bank0
  4577     0B50  0220               	subwf	?_Get_millis,w
  4578     0B51  0021               	movlb	1	; select bank1
  4579     0B52  00CB               	movwf	??_Task_Sensor^(0+128)
  4580     0B53  0022               	movlb	2	; select bank2
  4581     0B54  0856               	movf	(Task_Sensor@valTime+1)^(0+256),w
  4582     0B55  0020               	movlb	0	; select bank0
  4583     0B56  3B21               	subwfb	?_Get_millis+1,w
  4584     0B57  0021               	movlb	1	; select bank1
  4585     0B58  00CC               	movwf	(??_Task_Sensor^(0+128)+1)
  4586     0B59  0022               	movlb	2	; select bank2
  4587     0B5A  0857               	movf	(Task_Sensor@valTime+2)^(0+256),w
  4588     0B5B  0020               	movlb	0	; select bank0
  4589     0B5C  3B22               	subwfb	?_Get_millis+2,w
  4590     0B5D  0021               	movlb	1	; select bank1
  4591     0B5E  00CD               	movwf	(??_Task_Sensor^(0+128)+2)
  4592     0B5F  0022               	movlb	2	; select bank2
  4593     0B60  0858               	movf	(Task_Sensor@valTime+3)^(0+256),w
  4594     0B61  0020               	movlb	0	; select bank0
  4595     0B62  3B23               	subwfb	?_Get_millis+3,w
  4596     0B63  0021               	movlb	1	; select bank1
  4597     0B64  00CE               	movwf	(??_Task_Sensor^(0+128)+3)
  4598     0B65  084B               	movf	??_Task_Sensor^(0+128),w
  4599     0B66  00CF               	movwf	(??_Task_Sensor+4)^(0+128)
  4600     0B67  084C               	movf	(??_Task_Sensor+1)^(0+128),w
  4601     0B68  00D0               	movwf	((??_Task_Sensor+4)^(0+128)+1)
  4602     0B69  084D               	movf	(??_Task_Sensor+2)^(0+128),w
  4603     0B6A  00D1               	movwf	((??_Task_Sensor+4)^(0+128)+2)
  4604     0B6B  084E               	movf	(??_Task_Sensor+3)^(0+128),w
  4605     0B6C  00D2               	movwf	((??_Task_Sensor+4)^(0+128)+3)
  4606     0B6D  01D3               	clrf	((??_Task_Sensor+4)^(0+128)+4)
  4607     0B6E  01D4               	clrf	((??_Task_Sensor+4)^(0+128)+5)
  4608     0B6F  01D5               	clrf	((??_Task_Sensor+4)^(0+128)+6)
  4609     0B70  01D6               	clrf	((??_Task_Sensor+4)^(0+128)+7)
  4610     0B71  0856               	movf	((??_Task_Sensor+4)^(0+128)+7),w
  4611     0B72  0020               	movlb	0	; select bank0
  4612     0B73  00AB               	movwf	llabs@a+7
  4613     0B74  0021               	movlb	1	; select bank1
  4614     0B75  0855               	movf	((??_Task_Sensor+4)^(0+128)+6),w
  4615     0B76  0020               	movlb	0	; select bank0
  4616     0B77  00AA               	movwf	llabs@a+6
  4617     0B78  0021               	movlb	1	; select bank1
  4618     0B79  0854               	movf	((??_Task_Sensor+4)^(0+128)+5),w
  4619     0B7A  0020               	movlb	0	; select bank0
  4620     0B7B  00A9               	movwf	llabs@a+5
  4621     0B7C  0021               	movlb	1	; select bank1
  4622     0B7D  0853               	movf	((??_Task_Sensor+4)^(0+128)+4),w
  4623     0B7E  0020               	movlb	0	; select bank0
  4624     0B7F  00A8               	movwf	llabs@a+4
  4625     0B80  0021               	movlb	1	; select bank1
  4626     0B81  0852               	movf	((??_Task_Sensor+4)^(0+128)+3),w
  4627     0B82  0020               	movlb	0	; select bank0
  4628     0B83  00A7               	movwf	llabs@a+3
  4629     0B84  0021               	movlb	1	; select bank1
  4630     0B85  0851               	movf	((??_Task_Sensor+4)^(0+128)+2),w
  4631     0B86  0020               	movlb	0	; select bank0
  4632     0B87  00A6               	movwf	llabs@a+2
  4633     0B88  0021               	movlb	1	; select bank1
  4634     0B89  0850               	movf	((??_Task_Sensor+4)^(0+128)+1),w
  4635     0B8A  0020               	movlb	0	; select bank0
  4636     0B8B  00A5               	movwf	llabs@a+1
  4637     0B8C  0021               	movlb	1	; select bank1
  4638     0B8D  084F               	movf	(??_Task_Sensor+4)^(0+128),w
  4639     0B8E  0020               	movlb	0	; select bank0
  4640     0B8F  00A4               	movwf	llabs@a
  4641     0B90  3188  2040  318B   	fcall	_llabs
  4642     0B93  0020               	movlb	0	; select bank0
  4643     0B94  1BAB               	btfsc	?_llabs+7,7
  4644     0B95  2BAF               	goto	u4071
  4645     0B96  082B               	movf	?_llabs+7,w
  4646     0B97  1D03               	btfss	3,2
  4647     0B98  2BB0               	goto	u4070
  4648     0B99  082A               	movf	?_llabs+6,w
  4649     0B9A  1D03               	btfss	3,2
  4650     0B9B  2BB0               	goto	u4070
  4651     0B9C  0829               	movf	?_llabs+5,w
  4652     0B9D  1D03               	btfss	3,2
  4653     0B9E  2BB0               	goto	u4070
  4654     0B9F  0828               	movf	?_llabs+4,w
  4655     0BA0  1D03               	btfss	3,2
  4656     0BA1  2BB0               	goto	u4070
  4657     0BA2  0827               	movf	?_llabs+3,w
  4658     0BA3  1D03               	btfss	3,2
  4659     0BA4  2BB0               	goto	u4070
  4660     0BA5  0826               	movf	?_llabs+2,w
  4661     0BA6  1D03               	btfss	3,2
  4662     0BA7  2BB0               	goto	u4070
  4663     0BA8  30D0               	movlw	208
  4664     0BA9  0224               	subwf	?_llabs,w
  4665     0BAA  3007               	movlw	7
  4666     0BAB  3B25               	subwfb	?_llabs+1,w
  4667     0BAC  1C03               	btfss	3,0
  4668     0BAD  2BAF               	goto	u4071
  4669     0BAE  2BB0               	goto	u4070
  4670     0BAF                     u4071:
  4671     0BAF  2BE0               	goto	l812
  4672     0BB0                     u4070:
  4673     0BB0                     l4942:
  4674                           
  4675                           ;I2C_SHT30.c: 54:         valTime = Get_millis();
  4676     0BB0  3194  243C  318B   	fcall	_Get_millis
  4677     0BB3  0020               	movlb	0	; select bank0
  4678     0BB4  0823               	movf	?_Get_millis+3,w
  4679     0BB5  0022               	movlb	2	; select bank2
  4680     0BB6  00D8               	movwf	(Task_Sensor@valTime+3)^(0+256)
  4681     0BB7  0020               	movlb	0	; select bank0
  4682     0BB8  0822               	movf	?_Get_millis+2,w
  4683     0BB9  0022               	movlb	2	; select bank2
  4684     0BBA  00D7               	movwf	(Task_Sensor@valTime+2)^(0+256)
  4685     0BBB  0020               	movlb	0	; select bank0
  4686     0BBC  0821               	movf	?_Get_millis+1,w
  4687     0BBD  0022               	movlb	2	; select bank2
  4688     0BBE  00D6               	movwf	(Task_Sensor@valTime+1)^(0+256)
  4689     0BBF  0020               	movlb	0	; select bank0
  4690     0BC0  0820               	movf	?_Get_millis,w
  4691     0BC1  0022               	movlb	2	; select bank2
  4692     0BC2  00D5               	movwf	Task_Sensor@valTime^(0+256)
  4693     0BC3                     l4944:
  4694                           
  4695                           ;I2C_SHT30.c: 55:         f_Indicator = ON_Sensor;
  4696     0BC3  0021               	movlb	1	; select bank1
  4697     0BC4  01E3               	clrf	_f_Indicator^(0+128)
  4698     0BC5  0AE3               	incf	_f_Indicator^(0+128),f
  4699     0BC6                     l4946:
  4700                           
  4701                           ;I2C_SHT30.c: 56:         ReadData();
  4702     0BC6  3182  22D1  318B   	fcall	_ReadData
  4703     0BC9                     l4948:
  4704                           
  4705                           ;I2C_SHT30.c: 57:         if ((SensorAmbient.T.Val16 <= 0) || (SensorAmbient.H.Val16 <= 
      +                          0)) {
  4706     0BC9  0021               	movlb	1	; select bank1
  4707     0BCA  085B               	movf	_SensorAmbient^(0+128),w
  4708     0BCB  045C               	iorwf	(_SensorAmbient+1)^(0+128),w
  4709     0BCC  1903               	btfsc	3,2
  4710     0BCD  2BCF               	goto	u4081
  4711     0BCE  2BD0               	goto	u4080
  4712     0BCF                     u4081:
  4713     0BCF  2BD6               	goto	l4952
  4714     0BD0                     u4080:
  4715     0BD0                     l4950:
  4716     0BD0  085D               	movf	(_SensorAmbient^(0+128)+2),w
  4717     0BD1  045E               	iorwf	((_SensorAmbient+1)^(0+128)+2),w
  4718     0BD2  1D03               	btfss	3,2
  4719     0BD3  2BD5               	goto	u4091
  4720     0BD4  2BD6               	goto	u4090
  4721     0BD5                     u4091:
  4722     0BD5  2BE0               	goto	l812
  4723     0BD6                     u4090:
  4724     0BD6                     l4952:
  4725                           
  4726                           ;I2C_SHT30.c: 58:             SensorAmbient.T.Val16 = 0xFFFF;
  4727     0BD6  30FF               	movlw	255
  4728     0BD7  00DB               	movwf	_SensorAmbient^(0+128)
  4729     0BD8  30FF               	movlw	255
  4730     0BD9  00DC               	movwf	(_SensorAmbient^(0+128)+1)
  4731                           
  4732                           ;I2C_SHT30.c: 59:             SensorAmbient.H.Val16 = 0xFFFF;
  4733     0BDA  30FF               	movlw	255
  4734     0BDB  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  4735     0BDC  30FF               	movlw	255
  4736     0BDD  00DE               	movwf	(_SensorAmbient^(0+128)+3)
  4737                           
  4738                           ;I2C_SHT30.c: 60:             f_Indicator = ERR_Sensor;
  4739     0BDE  3002               	movlw	2
  4740     0BDF  00E3               	movwf	_f_Indicator^(0+128)
  4741     0BE0                     l812:
  4742     0BE0  0008               	return
  4743     0BE1                     __end_of_Task_Sensor:
  4744                           
  4745                           	psect	text15
  4746     0840                     __ptext15:	
  4747 ;; *************** function _llabs *****************
  4748 ;; Defined at:
  4749 ;;		line 1 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\llabs.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  a               8    4[BANK0 ] long long 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  8    4[BANK0 ] long long 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4763 ;;      Params:         0       8       0       0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0
  4766 ;;      Totals:         0       8       0       0       0       0       0       0
  4767 ;;Total ram usage:        8 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 7
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_Task_Sensor
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777     0840                     _llabs:	
  4778                           ;psect for function _llabs
  4779                           
  4780     0840                     l4794:	
  4781                           ;incstack = 0
  4782                           ; Regs used in _llabs: [wreg+status,2+status,0]
  4783                           
  4784     0840  0020               	movlb	0	; select bank0
  4785     0841  1BAB               	btfsc	llabs@a+7,7
  4786     0842  285E               	goto	u4000
  4787     0843  082B               	movf	llabs@a+7,w
  4788     0844  1D03               	btfss	3,2
  4789     0845  285D               	goto	u4001
  4790     0846  082A               	movf	llabs@a+6,w
  4791     0847  1D03               	btfss	3,2
  4792     0848  285D               	goto	u4001
  4793     0849  0829               	movf	llabs@a+5,w
  4794     084A  1D03               	btfss	3,2
  4795     084B  285D               	goto	u4001
  4796     084C  0828               	movf	llabs@a+4,w
  4797     084D  1D03               	btfss	3,2
  4798     084E  285D               	goto	u4001
  4799     084F  0827               	movf	llabs@a+3,w
  4800     0850  1D03               	btfss	3,2
  4801     0851  285D               	goto	u4001
  4802     0852  0826               	movf	llabs@a+2,w
  4803     0853  1D03               	btfss	3,2
  4804     0854  285D               	goto	u4001
  4805     0855  0825               	movf	llabs@a+1,w
  4806     0856  1D03               	btfss	3,2
  4807     0857  285D               	goto	u4001
  4808     0858  3001               	movlw	1
  4809     0859  0224               	subwf	llabs@a,w
  4810     085A  1803               	btfsc	3,0
  4811     085B  285D               	goto	u4001
  4812     085C  285E               	goto	u4000
  4813     085D                     u4001:
  4814     085D  2886               	goto	l1609
  4815     085E                     u4000:
  4816     085E                     l4796:
  4817     085E  0020               	movlb	0	; select bank0
  4818     085F  0924               	comf	llabs@a,w
  4819     0860  00A4               	movwf	?_llabs
  4820     0861  0925               	comf	llabs@a+1,w
  4821     0862  00A5               	movwf	?_llabs+1
  4822     0863  0926               	comf	llabs@a+2,w
  4823     0864  00A6               	movwf	?_llabs+2
  4824     0865  0927               	comf	llabs@a+3,w
  4825     0866  00A7               	movwf	?_llabs+3
  4826     0867  0928               	comf	llabs@a+4,w
  4827     0868  00A8               	movwf	?_llabs+4
  4828     0869  0929               	comf	llabs@a+5,w
  4829     086A  00A9               	movwf	?_llabs+5
  4830     086B  092A               	comf	llabs@a+6,w
  4831     086C  00AA               	movwf	?_llabs+6
  4832     086D  092B               	comf	llabs@a+7,w
  4833     086E  00AB               	movwf	?_llabs+7
  4834     086F  0AA4               	incf	?_llabs,f
  4835     0870  1D03               	skipz
  4836     0871  2885               	goto	u401lld
  4837     0872  0AA5               	incf	?_llabs+1,f
  4838     0873  1D03               	skipz
  4839     0874  2885               	goto	u401lld
  4840     0875  0AA6               	incf	?_llabs+2,f
  4841     0876  1D03               	skipz
  4842     0877  2885               	goto	u401lld
  4843     0878  0AA7               	incf	?_llabs+3,f
  4844     0879  1D03               	skipz
  4845     087A  2885               	goto	u401lld
  4846     087B  0AA8               	incf	?_llabs+4,f
  4847     087C  1D03               	skipz
  4848     087D  2885               	goto	u401lld
  4849     087E  0AA9               	incf	?_llabs+5,f
  4850     087F  1D03               	skipz
  4851     0880  2885               	goto	u401lld
  4852     0881  0AAA               	incf	?_llabs+6,f
  4853     0882  1D03               	skipz
  4854     0883  2885               	goto	u401lld
  4855     0884  0AAB               	incf	?_llabs+7,f
  4856     0885                     u401lld:
  4857     0885  2886               	goto	l1612
  4858     0886                     l1609:
  4859     0886                     l1612:
  4860     0886  0008               	return
  4861     0887                     __end_of_llabs:
  4862                           
  4863                           	psect	text16
  4864     02D1                     __ptext16:	
  4865 ;; *************** function _ReadData *****************
  4866 ;; Defined at:
  4867 ;;		line 26 in file "I2C_SHT30.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  aData           6   21[BANK1 ] unsigned char [6]
  4872 ;;  humidity        4   31[BANK1 ] unsigned char [6]
  4873 ;;  ctemp           4   27[BANK1 ] unsigned char [6]
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4883 ;;      Params:         0       0       0       0       0       0       0       0
  4884 ;;      Locals:         0       0      22       0       0       0       0       0
  4885 ;;      Temps:          0       0       8       0       0       0       0       0
  4886 ;;      Totals:         0       0      30       0       0       0       0       0
  4887 ;;Total ram usage:       30 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 11
  4890 ;; This function calls:
  4891 ;;		_I2C_ReadNBytes
  4892 ;;		_I2C_WriteNBytes
  4893 ;;		___fladd
  4894 ;;		___fldiv
  4895 ;;		___flmul
  4896 ;;		___fltol
  4897 ;;		___xxtofl
  4898 ;; This function is called by:
  4899 ;;		_Task_Sensor
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903     02D1                     _ReadData:	
  4904                           ;psect for function _ReadData
  4905                           
  4906     02D1                     l4772:	
  4907                           ;incstack = 0
  4908                           ; Regs used in _ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4909                           
  4910                           
  4911                           ;I2C_SHT30.c: 27:     uint8_t aData[6];;I2C_SHT30.c: 29:     SensorAmbient.T.Val16 = 0;
  4912     02D1  0021               	movlb	1	; select bank1
  4913     02D2  01DB               	clrf	_SensorAmbient^(0+128)
  4914     02D3  01DC               	clrf	(_SensorAmbient+1)^(0+128)
  4915                           
  4916                           ;I2C_SHT30.c: 30:     SensorAmbient.H.Val16 = 0;
  4917     02D4  01DD               	clrf	(_SensorAmbient^(0+128)+2)
  4918     02D5  01DE               	clrf	((_SensorAmbient+1)^(0+128)+2)
  4919     02D6                     l4774:
  4920                           
  4921                           ;I2C_SHT30.c: 31:     I2C_WriteNBytes(0x44, SHT30_CMD_MEASURE_H_Enable, 2);
  4922     02D6  30EE               	movlw	(low (_SHT30_CMD_MEASURE_H_Enable| 0))& (0+255)
  4923     02D7  0020               	movlb	0	; select bank0
  4924     02D8  00A8               	movwf	I2C_WriteNBytes@data
  4925     02D9  3002               	movlw	2
  4926     02DA  00A9               	movwf	I2C_WriteNBytes@len
  4927     02DB  3000               	movlw	0
  4928     02DC  00AA               	movwf	I2C_WriteNBytes@len+1
  4929     02DD  3044               	movlw	68
  4930     02DE  3196  26C9  3182   	fcall	_I2C_WriteNBytes
  4931     02E1                     l4776:
  4932                           
  4933                           ;I2C_SHT30.c: 35:     I2C_ReadNBytes(0x44, aData, 6);
  4934     02E1  30B5               	movlw	(low (ReadData@aData| 0))& (0+255)
  4935     02E2  0020               	movlb	0	; select bank0
  4936     02E3  00A4               	movwf	I2C_ReadNBytes@data
  4937     02E4  3006               	movlw	6
  4938     02E5  00A5               	movwf	I2C_ReadNBytes@len
  4939     02E6  3000               	movlw	0
  4940     02E7  00A6               	movwf	I2C_ReadNBytes@len+1
  4941     02E8  3044               	movlw	68
  4942     02E9  3195  2541  3182   	fcall	_I2C_ReadNBytes
  4943     02EC                     l4778:
  4944                           
  4945                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  4946     02EC  0021               	movlb	1	; select bank1
  4947     02ED  0836               	movf	(ReadData@aData^(0+128)+1),w
  4948     02EE  00AD               	movwf	??_ReadData^(0+128)
  4949     02EF  01AE               	clrf	(??_ReadData^(0+128)+1)
  4950     02F0  01AF               	clrf	(??_ReadData^(0+128)+2)
  4951     02F1  01B0               	clrf	(??_ReadData^(0+128)+3)
  4952     02F2  0830               	movf	(??_ReadData+3)^(0+128),w
  4953     02F3  0020               	movlb	0	; select bank0
  4954     02F4  00A3               	movwf	___xxtofl@val+3
  4955     02F5  0021               	movlb	1	; select bank1
  4956     02F6  082F               	movf	(??_ReadData+2)^(0+128),w
  4957     02F7  0020               	movlb	0	; select bank0
  4958     02F8  00A2               	movwf	___xxtofl@val+2
  4959     02F9  0021               	movlb	1	; select bank1
  4960     02FA  082E               	movf	(??_ReadData+1)^(0+128),w
  4961     02FB  0020               	movlb	0	; select bank0
  4962     02FC  00A1               	movwf	___xxtofl@val+1
  4963     02FD  0021               	movlb	1	; select bank1
  4964     02FE  082D               	movf	??_ReadData^(0+128),w
  4965     02FF  0020               	movlb	0	; select bank0
  4966     0300  00A0               	movwf	___xxtofl@val
  4967     0301  3001               	movlw	1
  4968     0302  318C  2485  3182   	fcall	___xxtofl
  4969     0305  0020               	movlb	0	; select bank0
  4970     0306  0823               	movf	?___xxtofl+3,w
  4971     0307  00CB               	movwf	___fladd@b+3
  4972     0308  0822               	movf	?___xxtofl+2,w
  4973     0309  00CA               	movwf	___fladd@b+2
  4974     030A  0821               	movf	?___xxtofl+1,w
  4975     030B  00C9               	movwf	___fladd@b+1
  4976     030C  0820               	movf	?___xxtofl,w
  4977     030D  00C8               	movwf	___fladd@b
  4978     030E  3043               	movlw	67
  4979     030F  00B1               	movwf	___flmul@b+3
  4980     0310  3080               	movlw	128
  4981     0311  00B0               	movwf	___flmul@b+2
  4982     0312  3000               	movlw	0
  4983     0313  00AF               	movwf	___flmul@b+1
  4984     0314  3000               	movlw	0
  4985     0315  00AE               	movwf	___flmul@b
  4986     0316  0021               	movlb	1	; select bank1
  4987     0317  0835               	movf	ReadData@aData^(0+128),w
  4988     0318  00B1               	movwf	(??_ReadData+4)^(0+128)
  4989     0319  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  4990     031A  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  4991     031B  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  4992     031C  0834               	movf	(??_ReadData+7)^(0+128),w
  4993     031D  0020               	movlb	0	; select bank0
  4994     031E  00A3               	movwf	___xxtofl@val+3
  4995     031F  0021               	movlb	1	; select bank1
  4996     0320  0833               	movf	(??_ReadData+6)^(0+128),w
  4997     0321  0020               	movlb	0	; select bank0
  4998     0322  00A2               	movwf	___xxtofl@val+2
  4999     0323  0021               	movlb	1	; select bank1
  5000     0324  0832               	movf	(??_ReadData+5)^(0+128),w
  5001     0325  0020               	movlb	0	; select bank0
  5002     0326  00A1               	movwf	___xxtofl@val+1
  5003     0327  0021               	movlb	1	; select bank1
  5004     0328  0831               	movf	(??_ReadData+4)^(0+128),w
  5005     0329  0020               	movlb	0	; select bank0
  5006     032A  00A0               	movwf	___xxtofl@val
  5007     032B  3001               	movlw	1
  5008     032C  318C  2485  3182   	fcall	___xxtofl
  5009     032F  0020               	movlb	0	; select bank0
  5010     0330  0823               	movf	?___xxtofl+3,w
  5011     0331  00B5               	movwf	___flmul@a+3
  5012     0332  0822               	movf	?___xxtofl+2,w
  5013     0333  00B4               	movwf	___flmul@a+2
  5014     0334  0821               	movf	?___xxtofl+1,w
  5015     0335  00B3               	movwf	___flmul@a+1
  5016     0336  0820               	movf	?___xxtofl,w
  5017     0337  00B2               	movwf	___flmul@a
  5018     0338  3180  2096  3182   	fcall	___flmul
  5019     033B  0020               	movlb	0	; select bank0
  5020     033C  0831               	movf	?___flmul+3,w
  5021     033D  00CF               	movwf	___fladd@a+3
  5022     033E  0830               	movf	?___flmul+2,w
  5023     033F  00CE               	movwf	___fladd@a+2
  5024     0340  082F               	movf	?___flmul+1,w
  5025     0341  00CD               	movwf	___fladd@a+1
  5026     0342  082E               	movf	?___flmul,w
  5027     0343  00CC               	movwf	___fladd@a
  5028     0344  3184  24E2  3182   	fcall	___fladd
  5029     0347  0020               	movlb	0	; select bank0
  5030     0348  084B               	movf	?___fladd+3,w
  5031     0349  0021               	movlb	1	; select bank1
  5032     034A  00C6               	movwf	(_ReadData$2360+3)^(0+128)
  5033     034B  0020               	movlb	0	; select bank0
  5034     034C  084A               	movf	?___fladd+2,w
  5035     034D  0021               	movlb	1	; select bank1
  5036     034E  00C5               	movwf	(_ReadData$2360+2)^(0+128)
  5037     034F  0020               	movlb	0	; select bank0
  5038     0350  0849               	movf	?___fladd+1,w
  5039     0351  0021               	movlb	1	; select bank1
  5040     0352  00C4               	movwf	(_ReadData$2360+1)^(0+128)
  5041     0353  0020               	movlb	0	; select bank0
  5042     0354  0848               	movf	?___fladd,w
  5043     0355  0021               	movlb	1	; select bank1
  5044     0356  00C3               	movwf	_ReadData$2360^(0+128)
  5045     0357                     l4780:
  5046                           
  5047                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5048     0357  30C2               	movlw	194
  5049     0358  0020               	movlb	0	; select bank0
  5050     0359  00CB               	movwf	___fladd@b+3
  5051     035A  3034               	movlw	52
  5052     035B  00CA               	movwf	___fladd@b+2
  5053     035C  3000               	movlw	0
  5054     035D  00C9               	movwf	___fladd@b+1
  5055     035E  3000               	movlw	0
  5056     035F  00C8               	movwf	___fladd@b
  5057     0360  3047               	movlw	71
  5058     0361  00DF               	movwf	___fldiv@a+3
  5059     0362  307F               	movlw	127
  5060     0363  00DE               	movwf	___fldiv@a+2
  5061     0364  30FF               	movlw	255
  5062     0365  00DD               	movwf	___fldiv@a+1
  5063     0366  3000               	movlw	0
  5064     0367  00DC               	movwf	___fldiv@a
  5065     0368  3043               	movlw	67
  5066     0369  00B1               	movwf	___flmul@b+3
  5067     036A  302F               	movlw	47
  5068     036B  00B0               	movwf	___flmul@b+2
  5069     036C  3000               	movlw	0
  5070     036D  00AF               	movwf	___flmul@b+1
  5071     036E  3000               	movlw	0
  5072     036F  00AE               	movwf	___flmul@b
  5073     0370  0021               	movlb	1	; select bank1
  5074     0371  0846               	movf	(_ReadData$2360+3)^(0+128),w
  5075     0372  0020               	movlb	0	; select bank0
  5076     0373  00B5               	movwf	___flmul@a+3
  5077     0374  0021               	movlb	1	; select bank1
  5078     0375  0845               	movf	(_ReadData$2360+2)^(0+128),w
  5079     0376  0020               	movlb	0	; select bank0
  5080     0377  00B4               	movwf	___flmul@a+2
  5081     0378  0021               	movlb	1	; select bank1
  5082     0379  0844               	movf	(_ReadData$2360+1)^(0+128),w
  5083     037A  0020               	movlb	0	; select bank0
  5084     037B  00B3               	movwf	___flmul@a+1
  5085     037C  0021               	movlb	1	; select bank1
  5086     037D  0843               	movf	_ReadData$2360^(0+128),w
  5087     037E  0020               	movlb	0	; select bank0
  5088     037F  00B2               	movwf	___flmul@a
  5089     0380  3180  2096  3182   	fcall	___flmul
  5090     0383  0020               	movlb	0	; select bank0
  5091     0384  0831               	movf	?___flmul+3,w
  5092     0385  00E3               	movwf	___fldiv@b+3
  5093     0386  0830               	movf	?___flmul+2,w
  5094     0387  00E2               	movwf	___fldiv@b+2
  5095     0388  082F               	movf	?___flmul+1,w
  5096     0389  00E1               	movwf	___fldiv@b+1
  5097     038A  082E               	movf	?___flmul,w
  5098     038B  00E0               	movwf	___fldiv@b
  5099     038C  318D  25FC  3182   	fcall	___fldiv
  5100     038F  0020               	movlb	0	; select bank0
  5101     0390  085F               	movf	?___fldiv+3,w
  5102     0391  00CF               	movwf	___fladd@a+3
  5103     0392  085E               	movf	?___fldiv+2,w
  5104     0393  00CE               	movwf	___fladd@a+2
  5105     0394  085D               	movf	?___fldiv+1,w
  5106     0395  00CD               	movwf	___fladd@a+1
  5107     0396  085C               	movf	?___fldiv,w
  5108     0397  00CC               	movwf	___fladd@a
  5109     0398  3184  24E2  3182   	fcall	___fladd
  5110     039B  0020               	movlb	0	; select bank0
  5111     039C  084B               	movf	?___fladd+3,w
  5112     039D  0021               	movlb	1	; select bank1
  5113     039E  00CA               	movwf	(_ReadData$2361+3)^(0+128)
  5114     039F  0020               	movlb	0	; select bank0
  5115     03A0  084A               	movf	?___fladd+2,w
  5116     03A1  0021               	movlb	1	; select bank1
  5117     03A2  00C9               	movwf	(_ReadData$2361+2)^(0+128)
  5118     03A3  0020               	movlb	0	; select bank0
  5119     03A4  0849               	movf	?___fladd+1,w
  5120     03A5  0021               	movlb	1	; select bank1
  5121     03A6  00C8               	movwf	(_ReadData$2361+1)^(0+128)
  5122     03A7  0020               	movlb	0	; select bank0
  5123     03A8  0848               	movf	?___fladd,w
  5124     03A9  0021               	movlb	1	; select bank1
  5125     03AA  00C7               	movwf	_ReadData$2361^(0+128)
  5126     03AB                     l4782:
  5127                           
  5128                           ;I2C_SHT30.c: 39:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5129     03AB  3041               	movlw	65
  5130     03AC  0020               	movlb	0	; select bank0
  5131     03AD  00B1               	movwf	___flmul@b+3
  5132     03AE  3020               	movlw	32
  5133     03AF  00B0               	movwf	___flmul@b+2
  5134     03B0  3000               	movlw	0
  5135     03B1  00AF               	movwf	___flmul@b+1
  5136     03B2  3000               	movlw	0
  5137     03B3  00AE               	movwf	___flmul@b
  5138     03B4  0021               	movlb	1	; select bank1
  5139     03B5  084A               	movf	(_ReadData$2361+3)^(0+128),w
  5140     03B6  0020               	movlb	0	; select bank0
  5141     03B7  00B5               	movwf	___flmul@a+3
  5142     03B8  0021               	movlb	1	; select bank1
  5143     03B9  0849               	movf	(_ReadData$2361+2)^(0+128),w
  5144     03BA  0020               	movlb	0	; select bank0
  5145     03BB  00B4               	movwf	___flmul@a+2
  5146     03BC  0021               	movlb	1	; select bank1
  5147     03BD  0848               	movf	(_ReadData$2361+1)^(0+128),w
  5148     03BE  0020               	movlb	0	; select bank0
  5149     03BF  00B3               	movwf	___flmul@a+1
  5150     03C0  0021               	movlb	1	; select bank1
  5151     03C1  0847               	movf	_ReadData$2361^(0+128),w
  5152     03C2  0020               	movlb	0	; select bank0
  5153     03C3  00B2               	movwf	___flmul@a
  5154     03C4  3180  2096  3182   	fcall	___flmul
  5155     03C7  0020               	movlb	0	; select bank0
  5156     03C8  0831               	movf	?___flmul+3,w
  5157     03C9  0021               	movlb	1	; select bank1
  5158     03CA  00BE               	movwf	(ReadData@ctemp+3)^(0+128)
  5159     03CB  0020               	movlb	0	; select bank0
  5160     03CC  0830               	movf	?___flmul+2,w
  5161     03CD  0021               	movlb	1	; select bank1
  5162     03CE  00BD               	movwf	(ReadData@ctemp+2)^(0+128)
  5163     03CF  0020               	movlb	0	; select bank0
  5164     03D0  082F               	movf	?___flmul+1,w
  5165     03D1  0021               	movlb	1	; select bank1
  5166     03D2  00BC               	movwf	(ReadData@ctemp+1)^(0+128)
  5167     03D3  0020               	movlb	0	; select bank0
  5168     03D4  082E               	movf	?___flmul,w
  5169     03D5  0021               	movlb	1	; select bank1
  5170     03D6  00BB               	movwf	ReadData@ctemp^(0+128)
  5171     03D7                     l4784:
  5172                           
  5173                           ;I2C_SHT30.c: 40:     SensorAmbient.T.Val16 = (uint16_t) ctemp;
  5174     03D7  083E               	movf	(ReadData@ctemp+3)^(0+128),w
  5175     03D8  0020               	movlb	0	; select bank0
  5176     03D9  00A3               	movwf	___fltol@f1+3
  5177     03DA  0021               	movlb	1	; select bank1
  5178     03DB  083D               	movf	(ReadData@ctemp+2)^(0+128),w
  5179     03DC  0020               	movlb	0	; select bank0
  5180     03DD  00A2               	movwf	___fltol@f1+2
  5181     03DE  0021               	movlb	1	; select bank1
  5182     03DF  083C               	movf	(ReadData@ctemp+1)^(0+128),w
  5183     03E0  0020               	movlb	0	; select bank0
  5184     03E1  00A1               	movwf	___fltol@f1+1
  5185     03E2  0021               	movlb	1	; select bank1
  5186     03E3  083B               	movf	ReadData@ctemp^(0+128),w
  5187     03E4  0020               	movlb	0	; select bank0
  5188     03E5  00A0               	movwf	___fltol@f1
  5189     03E6  318A  2254  3182   	fcall	___fltol
  5190     03E9  0020               	movlb	0	; select bank0
  5191     03EA  0821               	movf	?___fltol+1,w
  5192     03EB  0021               	movlb	1	; select bank1
  5193     03EC  00DC               	movwf	(_SensorAmbient+1)^(0+128)
  5194     03ED  0020               	movlb	0	; select bank0
  5195     03EE  0820               	movf	?___fltol,w
  5196     03EF  0021               	movlb	1	; select bank1
  5197     03F0  00DB               	movwf	_SensorAmbient^(0+128)
  5198     03F1                     l4786:
  5199                           
  5200                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5201     03F1  0839               	movf	(ReadData@aData^(0+128)+4),w
  5202     03F2  00AD               	movwf	??_ReadData^(0+128)
  5203     03F3  01AE               	clrf	(??_ReadData^(0+128)+1)
  5204     03F4  01AF               	clrf	(??_ReadData^(0+128)+2)
  5205     03F5  01B0               	clrf	(??_ReadData^(0+128)+3)
  5206     03F6  0830               	movf	(??_ReadData+3)^(0+128),w
  5207     03F7  0020               	movlb	0	; select bank0
  5208     03F8  00A3               	movwf	___xxtofl@val+3
  5209     03F9  0021               	movlb	1	; select bank1
  5210     03FA  082F               	movf	(??_ReadData+2)^(0+128),w
  5211     03FB  0020               	movlb	0	; select bank0
  5212     03FC  00A2               	movwf	___xxtofl@val+2
  5213     03FD  0021               	movlb	1	; select bank1
  5214     03FE  082E               	movf	(??_ReadData+1)^(0+128),w
  5215     03FF  0020               	movlb	0	; select bank0
  5216     0400  00A1               	movwf	___xxtofl@val+1
  5217     0401  0021               	movlb	1	; select bank1
  5218     0402  082D               	movf	??_ReadData^(0+128),w
  5219     0403  0020               	movlb	0	; select bank0
  5220     0404  00A0               	movwf	___xxtofl@val
  5221     0405  3001               	movlw	1
  5222     0406  318C  2485  3182   	fcall	___xxtofl
  5223     0409  0020               	movlb	0	; select bank0
  5224     040A  0823               	movf	?___xxtofl+3,w
  5225     040B  00CB               	movwf	___fladd@b+3
  5226     040C  0822               	movf	?___xxtofl+2,w
  5227     040D  00CA               	movwf	___fladd@b+2
  5228     040E  0821               	movf	?___xxtofl+1,w
  5229     040F  00C9               	movwf	___fladd@b+1
  5230     0410  0820               	movf	?___xxtofl,w
  5231     0411  00C8               	movwf	___fladd@b
  5232     0412  3043               	movlw	67
  5233     0413  00B1               	movwf	___flmul@b+3
  5234     0414  3080               	movlw	128
  5235     0415  00B0               	movwf	___flmul@b+2
  5236     0416  3000               	movlw	0
  5237     0417  00AF               	movwf	___flmul@b+1
  5238     0418  3000               	movlw	0
  5239     0419  00AE               	movwf	___flmul@b
  5240     041A  0021               	movlb	1	; select bank1
  5241     041B  0838               	movf	(ReadData@aData^(0+128)+3),w
  5242     041C  00B1               	movwf	(??_ReadData+4)^(0+128)
  5243     041D  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5244     041E  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5245     041F  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5246     0420  0834               	movf	(??_ReadData+7)^(0+128),w
  5247     0421  0020               	movlb	0	; select bank0
  5248     0422  00A3               	movwf	___xxtofl@val+3
  5249     0423  0021               	movlb	1	; select bank1
  5250     0424  0833               	movf	(??_ReadData+6)^(0+128),w
  5251     0425  0020               	movlb	0	; select bank0
  5252     0426  00A2               	movwf	___xxtofl@val+2
  5253     0427  0021               	movlb	1	; select bank1
  5254     0428  0832               	movf	(??_ReadData+5)^(0+128),w
  5255     0429  0020               	movlb	0	; select bank0
  5256     042A  00A1               	movwf	___xxtofl@val+1
  5257     042B  0021               	movlb	1	; select bank1
  5258     042C  0831               	movf	(??_ReadData+4)^(0+128),w
  5259     042D  0020               	movlb	0	; select bank0
  5260     042E  00A0               	movwf	___xxtofl@val
  5261     042F  3001               	movlw	1
  5262     0430  318C  2485  3182   	fcall	___xxtofl
  5263     0433  0020               	movlb	0	; select bank0
  5264     0434  0823               	movf	?___xxtofl+3,w
  5265     0435  00B5               	movwf	___flmul@a+3
  5266     0436  0822               	movf	?___xxtofl+2,w
  5267     0437  00B4               	movwf	___flmul@a+2
  5268     0438  0821               	movf	?___xxtofl+1,w
  5269     0439  00B3               	movwf	___flmul@a+1
  5270     043A  0820               	movf	?___xxtofl,w
  5271     043B  00B2               	movwf	___flmul@a
  5272     043C  3180  2096  3182   	fcall	___flmul
  5273     043F  0020               	movlb	0	; select bank0
  5274     0440  0831               	movf	?___flmul+3,w
  5275     0441  00CF               	movwf	___fladd@a+3
  5276     0442  0830               	movf	?___flmul+2,w
  5277     0443  00CE               	movwf	___fladd@a+2
  5278     0444  082F               	movf	?___flmul+1,w
  5279     0445  00CD               	movwf	___fladd@a+1
  5280     0446  082E               	movf	?___flmul,w
  5281     0447  00CC               	movwf	___fladd@a
  5282     0448  3184  24E2  3182   	fcall	___fladd
  5283     044B  0020               	movlb	0	; select bank0
  5284     044C  084B               	movf	?___fladd+3,w
  5285     044D  0021               	movlb	1	; select bank1
  5286     044E  00C6               	movwf	(_ReadData$2360+3)^(0+128)
  5287     044F  0020               	movlb	0	; select bank0
  5288     0450  084A               	movf	?___fladd+2,w
  5289     0451  0021               	movlb	1	; select bank1
  5290     0452  00C5               	movwf	(_ReadData$2360+2)^(0+128)
  5291     0453  0020               	movlb	0	; select bank0
  5292     0454  0849               	movf	?___fladd+1,w
  5293     0455  0021               	movlb	1	; select bank1
  5294     0456  00C4               	movwf	(_ReadData$2360+1)^(0+128)
  5295     0457  0020               	movlb	0	; select bank0
  5296     0458  0848               	movf	?___fladd,w
  5297     0459  0021               	movlb	1	; select bank1
  5298     045A  00C3               	movwf	_ReadData$2360^(0+128)
  5299     045B                     l4788:
  5300                           
  5301                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5302     045B  3047               	movlw	71
  5303     045C  0020               	movlb	0	; select bank0
  5304     045D  00DF               	movwf	___fldiv@a+3
  5305     045E  307F               	movlw	127
  5306     045F  00DE               	movwf	___fldiv@a+2
  5307     0460  30FF               	movlw	255
  5308     0461  00DD               	movwf	___fldiv@a+1
  5309     0462  3000               	movlw	0
  5310     0463  00DC               	movwf	___fldiv@a
  5311     0464  3042               	movlw	66
  5312     0465  00B1               	movwf	___flmul@b+3
  5313     0466  30C8               	movlw	200
  5314     0467  00B0               	movwf	___flmul@b+2
  5315     0468  3000               	movlw	0
  5316     0469  00AF               	movwf	___flmul@b+1
  5317     046A  3000               	movlw	0
  5318     046B  00AE               	movwf	___flmul@b
  5319     046C  0021               	movlb	1	; select bank1
  5320     046D  0846               	movf	(_ReadData$2360+3)^(0+128),w
  5321     046E  0020               	movlb	0	; select bank0
  5322     046F  00B5               	movwf	___flmul@a+3
  5323     0470  0021               	movlb	1	; select bank1
  5324     0471  0845               	movf	(_ReadData$2360+2)^(0+128),w
  5325     0472  0020               	movlb	0	; select bank0
  5326     0473  00B4               	movwf	___flmul@a+2
  5327     0474  0021               	movlb	1	; select bank1
  5328     0475  0844               	movf	(_ReadData$2360+1)^(0+128),w
  5329     0476  0020               	movlb	0	; select bank0
  5330     0477  00B3               	movwf	___flmul@a+1
  5331     0478  0021               	movlb	1	; select bank1
  5332     0479  0843               	movf	_ReadData$2360^(0+128),w
  5333     047A  0020               	movlb	0	; select bank0
  5334     047B  00B2               	movwf	___flmul@a
  5335     047C  3180  2096  3182   	fcall	___flmul
  5336     047F  0020               	movlb	0	; select bank0
  5337     0480  0831               	movf	?___flmul+3,w
  5338     0481  00E3               	movwf	___fldiv@b+3
  5339     0482  0830               	movf	?___flmul+2,w
  5340     0483  00E2               	movwf	___fldiv@b+2
  5341     0484  082F               	movf	?___flmul+1,w
  5342     0485  00E1               	movwf	___fldiv@b+1
  5343     0486  082E               	movf	?___flmul,w
  5344     0487  00E0               	movwf	___fldiv@b
  5345     0488  318D  25FC  3182   	fcall	___fldiv
  5346     048B  0020               	movlb	0	; select bank0
  5347     048C  085F               	movf	?___fldiv+3,w
  5348     048D  0021               	movlb	1	; select bank1
  5349     048E  00CA               	movwf	(_ReadData$2361+3)^(0+128)
  5350     048F  0020               	movlb	0	; select bank0
  5351     0490  085E               	movf	?___fldiv+2,w
  5352     0491  0021               	movlb	1	; select bank1
  5353     0492  00C9               	movwf	(_ReadData$2361+2)^(0+128)
  5354     0493  0020               	movlb	0	; select bank0
  5355     0494  085D               	movf	?___fldiv+1,w
  5356     0495  0021               	movlb	1	; select bank1
  5357     0496  00C8               	movwf	(_ReadData$2361+1)^(0+128)
  5358     0497  0020               	movlb	0	; select bank0
  5359     0498  085C               	movf	?___fldiv,w
  5360     0499  0021               	movlb	1	; select bank1
  5361     049A  00C7               	movwf	_ReadData$2361^(0+128)
  5362     049B                     l4790:
  5363                           
  5364                           ;I2C_SHT30.c: 44:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5365     049B  3041               	movlw	65
  5366     049C  0020               	movlb	0	; select bank0
  5367     049D  00B1               	movwf	___flmul@b+3
  5368     049E  3020               	movlw	32
  5369     049F  00B0               	movwf	___flmul@b+2
  5370     04A0  3000               	movlw	0
  5371     04A1  00AF               	movwf	___flmul@b+1
  5372     04A2  3000               	movlw	0
  5373     04A3  00AE               	movwf	___flmul@b
  5374     04A4  0021               	movlb	1	; select bank1
  5375     04A5  084A               	movf	(_ReadData$2361+3)^(0+128),w
  5376     04A6  0020               	movlb	0	; select bank0
  5377     04A7  00B5               	movwf	___flmul@a+3
  5378     04A8  0021               	movlb	1	; select bank1
  5379     04A9  0849               	movf	(_ReadData$2361+2)^(0+128),w
  5380     04AA  0020               	movlb	0	; select bank0
  5381     04AB  00B4               	movwf	___flmul@a+2
  5382     04AC  0021               	movlb	1	; select bank1
  5383     04AD  0848               	movf	(_ReadData$2361+1)^(0+128),w
  5384     04AE  0020               	movlb	0	; select bank0
  5385     04AF  00B3               	movwf	___flmul@a+1
  5386     04B0  0021               	movlb	1	; select bank1
  5387     04B1  0847               	movf	_ReadData$2361^(0+128),w
  5388     04B2  0020               	movlb	0	; select bank0
  5389     04B3  00B2               	movwf	___flmul@a
  5390     04B4  3180  2096  3182   	fcall	___flmul
  5391     04B7  0020               	movlb	0	; select bank0
  5392     04B8  0831               	movf	?___flmul+3,w
  5393     04B9  0021               	movlb	1	; select bank1
  5394     04BA  00C2               	movwf	(ReadData@humidity+3)^(0+128)
  5395     04BB  0020               	movlb	0	; select bank0
  5396     04BC  0830               	movf	?___flmul+2,w
  5397     04BD  0021               	movlb	1	; select bank1
  5398     04BE  00C1               	movwf	(ReadData@humidity+2)^(0+128)
  5399     04BF  0020               	movlb	0	; select bank0
  5400     04C0  082F               	movf	?___flmul+1,w
  5401     04C1  0021               	movlb	1	; select bank1
  5402     04C2  00C0               	movwf	(ReadData@humidity+1)^(0+128)
  5403     04C3  0020               	movlb	0	; select bank0
  5404     04C4  082E               	movf	?___flmul,w
  5405     04C5  0021               	movlb	1	; select bank1
  5406     04C6  00BF               	movwf	ReadData@humidity^(0+128)
  5407     04C7                     l4792:
  5408                           
  5409                           ;I2C_SHT30.c: 45:     SensorAmbient.H.Val16 = (uint16_t) humidity;
  5410     04C7  0842               	movf	(ReadData@humidity+3)^(0+128),w
  5411     04C8  0020               	movlb	0	; select bank0
  5412     04C9  00A3               	movwf	___fltol@f1+3
  5413     04CA  0021               	movlb	1	; select bank1
  5414     04CB  0841               	movf	(ReadData@humidity+2)^(0+128),w
  5415     04CC  0020               	movlb	0	; select bank0
  5416     04CD  00A2               	movwf	___fltol@f1+2
  5417     04CE  0021               	movlb	1	; select bank1
  5418     04CF  0840               	movf	(ReadData@humidity+1)^(0+128),w
  5419     04D0  0020               	movlb	0	; select bank0
  5420     04D1  00A1               	movwf	___fltol@f1+1
  5421     04D2  0021               	movlb	1	; select bank1
  5422     04D3  083F               	movf	ReadData@humidity^(0+128),w
  5423     04D4  0020               	movlb	0	; select bank0
  5424     04D5  00A0               	movwf	___fltol@f1
  5425     04D6  318A  2254  3182   	fcall	___fltol
  5426     04D9  0020               	movlb	0	; select bank0
  5427     04DA  0821               	movf	?___fltol+1,w
  5428     04DB  0021               	movlb	1	; select bank1
  5429     04DC  00DE               	movwf	((_SensorAmbient+1)^(0+128)+2)
  5430     04DD  0020               	movlb	0	; select bank0
  5431     04DE  0820               	movf	?___fltol,w
  5432     04DF  0021               	movlb	1	; select bank1
  5433     04E0  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  5434     04E1                     l803:
  5435     04E1  0008               	return
  5436     04E2                     __end_of_ReadData:
  5437                           
  5438                           	psect	text17
  5439     0C85                     __ptext17:	
  5440 ;; *************** function ___xxtofl *****************
  5441 ;; Defined at:
  5442 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\xxtofl.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  sign            1    wreg     unsigned char 
  5445 ;;  val             4    0[BANK0 ] long 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  sign            1    8[BANK0 ] unsigned char 
  5448 ;;  arg             4   10[BANK0 ] unsigned long 
  5449 ;;  exp             1    9[BANK0 ] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  4    0[BANK0 ] unsigned char 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5459 ;;      Params:         0       4       0       0       0       0       0       0
  5460 ;;      Locals:         0       6       0       0       0       0       0       0
  5461 ;;      Temps:          0       4       0       0       0       0       0       0
  5462 ;;      Totals:         0      14       0       0       0       0       0       0
  5463 ;;Total ram usage:       14 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 7
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_ReadData
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473     0C85                     ___xxtofl:	
  5474                           ;psect for function ___xxtofl
  5475                           
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5479                           ;___xxtofl@sign stored from wreg
  5480     0C85  0020               	movlb	0	; select bank0
  5481     0C86  00A8               	movwf	___xxtofl@sign
  5482     0C87                     l4546:
  5483     0C87  0828               	movf	___xxtofl@sign,w
  5484     0C88  1903               	btfsc	3,2
  5485     0C89  2C8B               	goto	u3821
  5486     0C8A  2C8C               	goto	u3820
  5487     0C8B                     u3821:
  5488     0C8B  2CA0               	goto	l4552
  5489     0C8C                     u3820:
  5490     0C8C                     l4548:
  5491     0C8C  1FA3               	btfss	___xxtofl@val+3,7
  5492     0C8D  2C8F               	goto	u3831
  5493     0C8E  2C90               	goto	u3830
  5494     0C8F                     u3831:
  5495     0C8F  2CA0               	goto	l4552
  5496     0C90                     u3830:
  5497     0C90                     l4550:
  5498     0C90  0920               	comf	___xxtofl@val,w
  5499     0C91  00AA               	movwf	___xxtofl@arg
  5500     0C92  0921               	comf	___xxtofl@val+1,w
  5501     0C93  00AB               	movwf	___xxtofl@arg+1
  5502     0C94  0922               	comf	___xxtofl@val+2,w
  5503     0C95  00AC               	movwf	___xxtofl@arg+2
  5504     0C96  0923               	comf	___xxtofl@val+3,w
  5505     0C97  00AD               	movwf	___xxtofl@arg+3
  5506     0C98  0AAA               	incf	___xxtofl@arg,f
  5507     0C99  1903               	skipnz
  5508     0C9A  0AAB               	incf	___xxtofl@arg+1,f
  5509     0C9B  1903               	skipnz
  5510     0C9C  0AAC               	incf	___xxtofl@arg+2,f
  5511     0C9D  1903               	skipnz
  5512     0C9E  0AAD               	incf	___xxtofl@arg+3,f
  5513     0C9F  2CA8               	goto	l1590
  5514     0CA0                     l4552:
  5515     0CA0  0823               	movf	___xxtofl@val+3,w
  5516     0CA1  00AD               	movwf	___xxtofl@arg+3
  5517     0CA2  0822               	movf	___xxtofl@val+2,w
  5518     0CA3  00AC               	movwf	___xxtofl@arg+2
  5519     0CA4  0821               	movf	___xxtofl@val+1,w
  5520     0CA5  00AB               	movwf	___xxtofl@arg+1
  5521     0CA6  0820               	movf	___xxtofl@val,w
  5522     0CA7  00AA               	movwf	___xxtofl@arg
  5523     0CA8                     l1590:
  5524     0CA8  0823               	movf	___xxtofl@val+3,w
  5525     0CA9  0422               	iorwf	___xxtofl@val+2,w
  5526     0CAA  0421               	iorwf	___xxtofl@val+1,w
  5527     0CAB  0420               	iorwf	___xxtofl@val,w
  5528     0CAC  1D03               	skipz
  5529     0CAD  2CAF               	goto	u3841
  5530     0CAE  2CB0               	goto	u3840
  5531     0CAF                     u3841:
  5532     0CAF  2CB9               	goto	l4558
  5533     0CB0                     u3840:
  5534     0CB0                     l4554:
  5535     0CB0  3000               	movlw	0
  5536     0CB1  00A3               	movwf	?___xxtofl+3
  5537     0CB2  3000               	movlw	0
  5538     0CB3  00A2               	movwf	?___xxtofl+2
  5539     0CB4  3000               	movlw	0
  5540     0CB5  00A1               	movwf	?___xxtofl+1
  5541     0CB6  3000               	movlw	0
  5542     0CB7  00A0               	movwf	?___xxtofl
  5543     0CB8  2D2F               	goto	l1592
  5544     0CB9                     l4558:
  5545     0CB9  3096               	movlw	150
  5546     0CBA  00A9               	movwf	___xxtofl@exp
  5547     0CBB  2CC7               	goto	l4562
  5548     0CBC                     l4560:
  5549     0CBC  3001               	movlw	1
  5550     0CBD  00A4               	movwf	??___xxtofl
  5551     0CBE  0824               	movf	??___xxtofl,w
  5552     0CBF  07A9               	addwf	___xxtofl@exp,f
  5553     0CC0  3001               	movlw	1
  5554     0CC1                     u3855:
  5555     0CC1  36AD               	lsrf	___xxtofl@arg+3,f
  5556     0CC2  0CAC               	rrf	___xxtofl@arg+2,f
  5557     0CC3  0CAB               	rrf	___xxtofl@arg+1,f
  5558     0CC4  0CAA               	rrf	___xxtofl@arg,f
  5559     0CC5  0B89               	decfsz	9,f
  5560     0CC6  2CC1               	goto	u3855
  5561     0CC7                     l4562:
  5562     0CC7  30FE               	movlw	254
  5563     0CC8  052D               	andwf	___xxtofl@arg+3,w
  5564     0CC9  1D03               	btfss	3,2
  5565     0CCA  2CCC               	goto	u3861
  5566     0CCB  2CCD               	goto	u3860
  5567     0CCC                     u3861:
  5568     0CCC  2CBC               	goto	l4560
  5569     0CCD                     u3860:
  5570     0CCD  2CE1               	goto	l1596
  5571     0CCE                     l4564:
  5572     0CCE  3001               	movlw	1
  5573     0CCF  00A4               	movwf	??___xxtofl
  5574     0CD0  0824               	movf	??___xxtofl,w
  5575     0CD1  07A9               	addwf	___xxtofl@exp,f
  5576     0CD2                     l4566:
  5577     0CD2  3001               	movlw	1
  5578     0CD3  07AA               	addwf	___xxtofl@arg,f
  5579     0CD4  3000               	movlw	0
  5580     0CD5  3DAB               	addwfc	___xxtofl@arg+1,f
  5581     0CD6  3000               	movlw	0
  5582     0CD7  3DAC               	addwfc	___xxtofl@arg+2,f
  5583     0CD8  3000               	movlw	0
  5584     0CD9  3DAD               	addwfc	___xxtofl@arg+3,f
  5585     0CDA                     l4568:
  5586     0CDA  3001               	movlw	1
  5587     0CDB                     u3875:
  5588     0CDB  36AD               	lsrf	___xxtofl@arg+3,f
  5589     0CDC  0CAC               	rrf	___xxtofl@arg+2,f
  5590     0CDD  0CAB               	rrf	___xxtofl@arg+1,f
  5591     0CDE  0CAA               	rrf	___xxtofl@arg,f
  5592     0CDF  0B89               	decfsz	9,f
  5593     0CE0  2CDB               	goto	u3875
  5594     0CE1                     l1596:
  5595     0CE1  30FF               	movlw	255
  5596     0CE2  052D               	andwf	___xxtofl@arg+3,w
  5597     0CE3  1D03               	btfss	3,2
  5598     0CE4  2CE6               	goto	u3881
  5599     0CE5  2CE7               	goto	u3880
  5600     0CE6                     u3881:
  5601     0CE6  2CCE               	goto	l4564
  5602     0CE7                     u3880:
  5603     0CE7  2CF1               	goto	l4572
  5604     0CE8                     l4570:
  5605     0CE8  3001               	movlw	1
  5606     0CE9  02A9               	subwf	___xxtofl@exp,f
  5607     0CEA  3001               	movlw	1
  5608     0CEB                     u3895:
  5609     0CEB  35AA               	lslf	___xxtofl@arg,f
  5610     0CEC  0DAB               	rlf	___xxtofl@arg+1,f
  5611     0CED  0DAC               	rlf	___xxtofl@arg+2,f
  5612     0CEE  0DAD               	rlf	___xxtofl@arg+3,f
  5613     0CEF  0B89               	decfsz	9,f
  5614     0CF0  2CEB               	goto	u3895
  5615     0CF1                     l4572:
  5616     0CF1  1BAC               	btfsc	___xxtofl@arg+2,7
  5617     0CF2  2CF4               	goto	u3901
  5618     0CF3  2CF5               	goto	u3900
  5619     0CF4                     u3901:
  5620     0CF4  2CFB               	goto	l1603
  5621     0CF5                     u3900:
  5622     0CF5                     l4574:
  5623     0CF5  3002               	movlw	2
  5624     0CF6  0229               	subwf	___xxtofl@exp,w
  5625     0CF7  1803               	skipnc
  5626     0CF8  2CFA               	goto	u3911
  5627     0CF9  2CFB               	goto	u3910
  5628     0CFA                     u3911:
  5629     0CFA  2CE8               	goto	l4570
  5630     0CFB                     u3910:
  5631     0CFB                     l1603:
  5632     0CFB  1829               	btfsc	___xxtofl@exp,0
  5633     0CFC  2CFE               	goto	u3921
  5634     0CFD  2CFF               	goto	u3920
  5635     0CFE                     u3921:
  5636     0CFE  2D07               	goto	l1604
  5637     0CFF                     u3920:
  5638     0CFF                     l4576:
  5639     0CFF  30FF               	movlw	255
  5640     0D00  05AA               	andwf	___xxtofl@arg,f
  5641     0D01  30FF               	movlw	255
  5642     0D02  05AB               	andwf	___xxtofl@arg+1,f
  5643     0D03  307F               	movlw	127
  5644     0D04  05AC               	andwf	___xxtofl@arg+2,f
  5645     0D05  30FF               	movlw	255
  5646     0D06  05AD               	andwf	___xxtofl@arg+3,f
  5647     0D07                     l1604:
  5648     0D07  1003               	clrc
  5649     0D08  0CA9               	rrf	___xxtofl@exp,f
  5650     0D09                     l4578:
  5651     0D09  0829               	movf	___xxtofl@exp,w
  5652     0D0A  00A4               	movwf	??___xxtofl
  5653     0D0B  01A5               	clrf	??___xxtofl+1
  5654     0D0C  01A6               	clrf	??___xxtofl+2
  5655     0D0D  01A7               	clrf	??___xxtofl+3
  5656     0D0E  3018               	movlw	24
  5657     0D0F                     u3935:
  5658     0D0F  35A4               	lslf	??___xxtofl,f
  5659     0D10  0DA5               	rlf	??___xxtofl+1,f
  5660     0D11  0DA6               	rlf	??___xxtofl+2,f
  5661     0D12  0DA7               	rlf	??___xxtofl+3,f
  5662     0D13                     u3930:
  5663     0D13  0B89               	decfsz	9,f
  5664     0D14  2D0F               	goto	u3935
  5665     0D15  0824               	movf	??___xxtofl,w
  5666     0D16  04AA               	iorwf	___xxtofl@arg,f
  5667     0D17  0825               	movf	??___xxtofl+1,w
  5668     0D18  04AB               	iorwf	___xxtofl@arg+1,f
  5669     0D19  0826               	movf	??___xxtofl+2,w
  5670     0D1A  04AC               	iorwf	___xxtofl@arg+2,f
  5671     0D1B  0827               	movf	??___xxtofl+3,w
  5672     0D1C  04AD               	iorwf	___xxtofl@arg+3,f
  5673     0D1D                     l4580:
  5674     0D1D  0828               	movf	___xxtofl@sign,w
  5675     0D1E  1903               	btfsc	3,2
  5676     0D1F  2D21               	goto	u3941
  5677     0D20  2D22               	goto	u3940
  5678     0D21                     u3941:
  5679     0D21  2D27               	goto	l4586
  5680     0D22                     u3940:
  5681     0D22                     l4582:
  5682     0D22  1FA3               	btfss	___xxtofl@val+3,7
  5683     0D23  2D25               	goto	u3951
  5684     0D24  2D26               	goto	u3950
  5685     0D25                     u3951:
  5686     0D25  2D27               	goto	l4586
  5687     0D26                     u3950:
  5688     0D26                     l4584:
  5689     0D26  17AD               	bsf	___xxtofl@arg+3,7
  5690     0D27                     l4586:
  5691     0D27  082D               	movf	___xxtofl@arg+3,w
  5692     0D28  00A3               	movwf	?___xxtofl+3
  5693     0D29  082C               	movf	___xxtofl@arg+2,w
  5694     0D2A  00A2               	movwf	?___xxtofl+2
  5695     0D2B  082B               	movf	___xxtofl@arg+1,w
  5696     0D2C  00A1               	movwf	?___xxtofl+1
  5697     0D2D  082A               	movf	___xxtofl@arg,w
  5698     0D2E  00A0               	movwf	?___xxtofl
  5699     0D2F                     l1592:
  5700     0D2F  0008               	return
  5701     0D30                     __end_of___xxtofl:
  5702                           
  5703                           	psect	text18
  5704     0A54                     __ptext18:	
  5705 ;; *************** function ___fltol *****************
  5706 ;; Defined at:
  5707 ;;		line 43 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\fltol.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  f1              4    0[BANK0 ] unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  exp1            1    9[BANK0 ] unsigned char 
  5712 ;;  sign1           1    8[BANK0 ] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  4    0[BANK0 ] long 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5722 ;;      Params:         0       4       0       0       0       0       0       0
  5723 ;;      Locals:         0       2       0       0       0       0       0       0
  5724 ;;      Temps:          0       4       0       0       0       0       0       0
  5725 ;;      Totals:         0      10       0       0       0       0       0       0
  5726 ;;Total ram usage:       10 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; Hardware stack levels required when called: 7
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_ReadData
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736     0A54                     ___fltol:	
  5737                           ;psect for function ___fltol
  5738                           
  5739     0A54                     l4036:	
  5740                           ;incstack = 0
  5741                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5742                           
  5743     0A54  1003               	clrc
  5744     0A55  0020               	movlb	0	; select bank0
  5745     0A56  0D22               	rlf	___fltol@f1+2,w
  5746     0A57  0D23               	rlf	___fltol@f1+3,w
  5747     0A58  00A9               	movwf	___fltol@exp1
  5748     0A59  0829               	movf	___fltol@exp1,w
  5749     0A5A  1D03               	btfss	3,2
  5750     0A5B  2A5D               	goto	u2741
  5751     0A5C  2A5E               	goto	u2740
  5752     0A5D                     u2741:
  5753     0A5D  2A67               	goto	l4042
  5754     0A5E                     u2740:
  5755     0A5E                     l4038:
  5756     0A5E  3000               	movlw	0
  5757     0A5F  00A3               	movwf	?___fltol+3
  5758     0A60  3000               	movlw	0
  5759     0A61  00A2               	movwf	?___fltol+2
  5760     0A62  3000               	movlw	0
  5761     0A63  00A1               	movwf	?___fltol+1
  5762     0A64  3000               	movlw	0
  5763     0A65  00A0               	movwf	?___fltol
  5764     0A66  2AC4               	goto	l1343
  5765     0A67                     l4042:
  5766     0A67  0820               	movf	___fltol@f1,w
  5767     0A68  00A4               	movwf	??___fltol
  5768     0A69  0821               	movf	___fltol@f1+1,w
  5769     0A6A  00A5               	movwf	??___fltol+1
  5770     0A6B  0822               	movf	___fltol@f1+2,w
  5771     0A6C  00A6               	movwf	??___fltol+2
  5772     0A6D  0823               	movf	___fltol@f1+3,w
  5773     0A6E  00A7               	movwf	??___fltol+3
  5774     0A6F  301F               	movlw	31
  5775     0A70                     u2755:
  5776     0A70  36A7               	lsrf	??___fltol+3,f
  5777     0A71  0CA6               	rrf	??___fltol+2,f
  5778     0A72  0CA5               	rrf	??___fltol+1,f
  5779     0A73  0CA4               	rrf	??___fltol,f
  5780     0A74                     u2750:
  5781     0A74  0B89               	decfsz	9,f
  5782     0A75  2A70               	goto	u2755
  5783     0A76  0824               	movf	??___fltol,w
  5784     0A77  00A8               	movwf	___fltol@sign1
  5785     0A78                     l4044:
  5786     0A78  17A2               	bsf	___fltol@f1+2,7
  5787     0A79                     l4046:
  5788     0A79  30FF               	movlw	255
  5789     0A7A  05A0               	andwf	___fltol@f1,f
  5790     0A7B  30FF               	movlw	255
  5791     0A7C  05A1               	andwf	___fltol@f1+1,f
  5792     0A7D  30FF               	movlw	255
  5793     0A7E  05A2               	andwf	___fltol@f1+2,f
  5794     0A7F  3000               	movlw	0
  5795     0A80  05A3               	andwf	___fltol@f1+3,f
  5796     0A81                     l4048:
  5797     0A81  3096               	movlw	150
  5798     0A82  02A9               	subwf	___fltol@exp1,f
  5799     0A83                     l4050:
  5800     0A83  1FA9               	btfss	___fltol@exp1,7
  5801     0A84  2A86               	goto	u2761
  5802     0A85  2A87               	goto	u2760
  5803     0A86                     u2761:
  5804     0A86  2A9F               	goto	l4060
  5805     0A87                     u2760:
  5806     0A87                     l4052:
  5807     0A87  0829               	movf	___fltol@exp1,w
  5808     0A88  3A80               	xorlw	128
  5809     0A89  3E97               	addlw	151
  5810     0A8A  1803               	skipnc
  5811     0A8B  2A8D               	goto	u2771
  5812     0A8C  2A8E               	goto	u2770
  5813     0A8D                     u2771:
  5814     0A8D  2A8F               	goto	l4058
  5815     0A8E                     u2770:
  5816     0A8E  2A5E               	goto	l4038
  5817     0A8F                     l4058:
  5818     0A8F  3001               	movlw	1
  5819     0A90                     u2785:
  5820     0A90  36A3               	lsrf	___fltol@f1+3,f
  5821     0A91  0CA2               	rrf	___fltol@f1+2,f
  5822     0A92  0CA1               	rrf	___fltol@f1+1,f
  5823     0A93  0CA0               	rrf	___fltol@f1,f
  5824     0A94  0B89               	decfsz	9,f
  5825     0A95  2A90               	goto	u2785
  5826     0A96  3001               	movlw	1
  5827     0A97  00A4               	movwf	??___fltol
  5828     0A98  0824               	movf	??___fltol,w
  5829     0A99  07A9               	addwf	___fltol@exp1,f
  5830     0A9A  1D03               	btfss	3,2
  5831     0A9B  2A9D               	goto	u2791
  5832     0A9C  2A9E               	goto	u2790
  5833     0A9D                     u2791:
  5834     0A9D  2A8F               	goto	l4058
  5835     0A9E                     u2790:
  5836     0A9E  2AB4               	goto	l4068
  5837     0A9F                     l4060:
  5838     0A9F  3020               	movlw	32
  5839     0AA0  0229               	subwf	___fltol@exp1,w
  5840     0AA1  1C03               	skipc
  5841     0AA2  2AA4               	goto	u2801
  5842     0AA3  2AA5               	goto	u2800
  5843     0AA4                     u2801:
  5844     0AA4  2AAF               	goto	l1350
  5845     0AA5                     u2800:
  5846     0AA5  2A5E               	goto	l4038
  5847     0AA6                     l4066:
  5848     0AA6  3001               	movlw	1
  5849     0AA7                     u2815:
  5850     0AA7  35A0               	lslf	___fltol@f1,f
  5851     0AA8  0DA1               	rlf	___fltol@f1+1,f
  5852     0AA9  0DA2               	rlf	___fltol@f1+2,f
  5853     0AAA  0DA3               	rlf	___fltol@f1+3,f
  5854     0AAB  0B89               	decfsz	9,f
  5855     0AAC  2AA7               	goto	u2815
  5856     0AAD  3001               	movlw	1
  5857     0AAE  02A9               	subwf	___fltol@exp1,f
  5858     0AAF                     l1350:
  5859     0AAF  0829               	movf	___fltol@exp1,w
  5860     0AB0  1D03               	btfss	3,2
  5861     0AB1  2AB3               	goto	u2821
  5862     0AB2  2AB4               	goto	u2820
  5863     0AB3                     u2821:
  5864     0AB3  2AA6               	goto	l4066
  5865     0AB4                     u2820:
  5866     0AB4                     l4068:
  5867     0AB4  0828               	movf	___fltol@sign1,w
  5868     0AB5  1903               	btfsc	3,2
  5869     0AB6  2AB8               	goto	u2831
  5870     0AB7  2AB9               	goto	u2830
  5871     0AB8                     u2831:
  5872     0AB8  2AC4               	goto	l1353
  5873     0AB9                     u2830:
  5874     0AB9                     l4070:
  5875     0AB9  09A0               	comf	___fltol@f1,f
  5876     0ABA  09A1               	comf	___fltol@f1+1,f
  5877     0ABB  09A2               	comf	___fltol@f1+2,f
  5878     0ABC  09A3               	comf	___fltol@f1+3,f
  5879     0ABD  0AA0               	incf	___fltol@f1,f
  5880     0ABE  1903               	skipnz
  5881     0ABF  0AA1               	incf	___fltol@f1+1,f
  5882     0AC0  1903               	skipnz
  5883     0AC1  0AA2               	incf	___fltol@f1+2,f
  5884     0AC2  1903               	skipnz
  5885     0AC3  0AA3               	incf	___fltol@f1+3,f
  5886     0AC4                     l1353:
  5887     0AC4                     l1343:
  5888     0AC4  0008               	return
  5889     0AC5                     __end_of___fltol:
  5890                           
  5891                           	psect	text19
  5892     0096                     __ptext19:	
  5893 ;; *************** function ___flmul *****************
  5894 ;; Defined at:
  5895 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcmul.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  b               4   14[BANK0 ] long 
  5898 ;;  a               4   18[BANK0 ] long 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  prod            4   34[BANK0 ] struct .
  5901 ;;  grs             4   28[BANK0 ] unsigned long 
  5902 ;;  temp            2   38[BANK0 ] struct .
  5903 ;;  bexp            1   33[BANK0 ] unsigned char 
  5904 ;;  aexp            1   32[BANK0 ] unsigned char 
  5905 ;;  sign            1   27[BANK0 ] unsigned char 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  4   14[BANK0 ] unsigned char 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0, pclath, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5915 ;;      Params:         0       8       0       0       0       0       0       0
  5916 ;;      Locals:         0      13       0       0       0       0       0       0
  5917 ;;      Temps:          0       5       0       0       0       0       0       0
  5918 ;;      Totals:         0      26       0       0       0       0       0       0
  5919 ;;Total ram usage:       26 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; Hardware stack levels required when called: 8
  5922 ;; This function calls:
  5923 ;;		__Umul8_16
  5924 ;; This function is called by:
  5925 ;;		_ReadData
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929     0096                     ___flmul:	
  5930                           ;psect for function ___flmul
  5931                           
  5932     0096                     l4406:	
  5933                           ;incstack = 0
  5934                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5935                           
  5936     0096  0020               	movlb	0	; select bank0
  5937     0097  0831               	movf	___flmul@b+3,w
  5938     0098  3980               	andlw	128
  5939     0099  00BB               	movwf	___flmul@sign
  5940     009A                     l4408:
  5941     009A  3531               	lslf	___flmul@b+3,w
  5942     009B  00C1               	movwf	___flmul@bexp
  5943     009C                     l4410:
  5944     009C  1FB0               	btfss	___flmul@b+2,7
  5945     009D  289F               	goto	u3561
  5946     009E  28A0               	goto	u3560
  5947     009F                     u3561:
  5948     009F  28A1               	goto	l4414
  5949     00A0                     u3560:
  5950     00A0                     l4412:
  5951     00A0  1441               	bsf	___flmul@bexp,0
  5952     00A1                     l4414:
  5953     00A1  0841               	movf	___flmul@bexp,w
  5954     00A2  1903               	btfsc	3,2
  5955     00A3  28A5               	goto	u3571
  5956     00A4  28A6               	goto	u3570
  5957     00A5                     u3571:
  5958     00A5  28B5               	goto	l4422
  5959     00A6                     u3570:
  5960     00A6                     l4416:
  5961     00A6  0A41               	incf	___flmul@bexp,w
  5962     00A7  1D03               	btfss	3,2
  5963     00A8  28AA               	goto	u3581
  5964     00A9  28AB               	goto	u3580
  5965     00AA                     u3581:
  5966     00AA  28B3               	goto	l4420
  5967     00AB                     u3580:
  5968     00AB                     l4418:
  5969     00AB  3000               	movlw	0
  5970     00AC  00B1               	movwf	___flmul@b+3
  5971     00AD  3000               	movlw	0
  5972     00AE  00B0               	movwf	___flmul@b+2
  5973     00AF  3000               	movlw	0
  5974     00B0  00AF               	movwf	___flmul@b+1
  5975     00B1  3000               	movlw	0
  5976     00B2  00AE               	movwf	___flmul@b
  5977     00B3                     l4420:
  5978     00B3  17B0               	bsf	___flmul@b+2,7
  5979     00B4  28BD               	goto	l4424
  5980     00B5                     l4422:
  5981     00B5  3000               	movlw	0
  5982     00B6  00B1               	movwf	___flmul@b+3
  5983     00B7  3000               	movlw	0
  5984     00B8  00B0               	movwf	___flmul@b+2
  5985     00B9  3000               	movlw	0
  5986     00BA  00AF               	movwf	___flmul@b+1
  5987     00BB  3000               	movlw	0
  5988     00BC  00AE               	movwf	___flmul@b
  5989     00BD                     l4424:
  5990     00BD  0835               	movf	___flmul@a+3,w
  5991     00BE  3980               	andlw	128
  5992     00BF  00B6               	movwf	??___flmul
  5993     00C0  0836               	movf	??___flmul,w
  5994     00C1  06BB               	xorwf	___flmul@sign,f
  5995     00C2                     l4426:
  5996     00C2  3535               	lslf	___flmul@a+3,w
  5997     00C3  00C0               	movwf	___flmul@aexp
  5998     00C4                     l4428:
  5999     00C4  1FB4               	btfss	___flmul@a+2,7
  6000     00C5  28C7               	goto	u3591
  6001     00C6  28C8               	goto	u3590
  6002     00C7                     u3591:
  6003     00C7  28C9               	goto	l4432
  6004     00C8                     u3590:
  6005     00C8                     l4430:
  6006     00C8  1440               	bsf	___flmul@aexp,0
  6007     00C9                     l4432:
  6008     00C9  0840               	movf	___flmul@aexp,w
  6009     00CA  1903               	btfsc	3,2
  6010     00CB  28CD               	goto	u3601
  6011     00CC  28CE               	goto	u3600
  6012     00CD                     u3601:
  6013     00CD  28DD               	goto	l4440
  6014     00CE                     u3600:
  6015     00CE                     l4434:
  6016     00CE  0A40               	incf	___flmul@aexp,w
  6017     00CF  1D03               	btfss	3,2
  6018     00D0  28D2               	goto	u3611
  6019     00D1  28D3               	goto	u3610
  6020     00D2                     u3611:
  6021     00D2  28DB               	goto	l4438
  6022     00D3                     u3610:
  6023     00D3                     l4436:
  6024     00D3  3000               	movlw	0
  6025     00D4  00B5               	movwf	___flmul@a+3
  6026     00D5  3000               	movlw	0
  6027     00D6  00B4               	movwf	___flmul@a+2
  6028     00D7  3000               	movlw	0
  6029     00D8  00B3               	movwf	___flmul@a+1
  6030     00D9  3000               	movlw	0
  6031     00DA  00B2               	movwf	___flmul@a
  6032     00DB                     l4438:
  6033     00DB  17B4               	bsf	___flmul@a+2,7
  6034     00DC  28E5               	goto	l4442
  6035     00DD                     l4440:
  6036     00DD  3000               	movlw	0
  6037     00DE  00B5               	movwf	___flmul@a+3
  6038     00DF  3000               	movlw	0
  6039     00E0  00B4               	movwf	___flmul@a+2
  6040     00E1  3000               	movlw	0
  6041     00E2  00B3               	movwf	___flmul@a+1
  6042     00E3  3000               	movlw	0
  6043     00E4  00B2               	movwf	___flmul@a
  6044     00E5                     l4442:
  6045     00E5  0840               	movf	___flmul@aexp,w
  6046     00E6  1903               	btfsc	3,2
  6047     00E7  28E9               	goto	u3621
  6048     00E8  28EA               	goto	u3620
  6049     00E9                     u3621:
  6050     00E9  28EF               	goto	l4446
  6051     00EA                     u3620:
  6052     00EA                     l4444:
  6053     00EA  0841               	movf	___flmul@bexp,w
  6054     00EB  1D03               	btfss	3,2
  6055     00EC  28EE               	goto	u3631
  6056     00ED  28EF               	goto	u3630
  6057     00EE                     u3631:
  6058     00EE  28F8               	goto	l4450
  6059     00EF                     u3630:
  6060     00EF                     l4446:
  6061     00EF  3000               	movlw	0
  6062     00F0  00B1               	movwf	?___flmul+3
  6063     00F1  3000               	movlw	0
  6064     00F2  00B0               	movwf	?___flmul+2
  6065     00F3  3000               	movlw	0
  6066     00F4  00AF               	movwf	?___flmul+1
  6067     00F5  3000               	movlw	0
  6068     00F6  00AE               	movwf	?___flmul
  6069     00F7  2AD0               	goto	l1546
  6070     00F8                     l4450:
  6071     00F8  082E               	movf	___flmul@b,w
  6072     00F9  00A0               	movwf	__Umul8_16@multiplicand
  6073     00FA  0834               	movf	___flmul@a+2,w
  6074     00FB  3195  2585  3180   	fcall	__Umul8_16
  6075     00FE  0020               	movlb	0	; select bank0
  6076     00FF  0821               	movf	?__Umul8_16+1,w
  6077     0100  00C7               	movwf	___flmul@temp+1
  6078     0101  0820               	movf	?__Umul8_16,w
  6079     0102  00C6               	movwf	___flmul@temp
  6080     0103                     l4452:
  6081     0103  0846               	movf	___flmul@temp,w
  6082     0104  00B6               	movwf	??___flmul
  6083     0105  01B7               	clrf	??___flmul+1
  6084     0106  01B8               	clrf	??___flmul+2
  6085     0107  01B9               	clrf	??___flmul+3
  6086     0108  0839               	movf	??___flmul+3,w
  6087     0109  00BF               	movwf	___flmul@grs+3
  6088     010A  0838               	movf	??___flmul+2,w
  6089     010B  00BE               	movwf	___flmul@grs+2
  6090     010C  0837               	movf	??___flmul+1,w
  6091     010D  00BD               	movwf	___flmul@grs+1
  6092     010E  0836               	movf	??___flmul,w
  6093     010F  00BC               	movwf	___flmul@grs
  6094     0110                     l4454:
  6095     0110  0847               	movf	___flmul@temp+1,w
  6096     0111  00B6               	movwf	??___flmul
  6097     0112  01B7               	clrf	??___flmul+1
  6098     0113  01B8               	clrf	??___flmul+2
  6099     0114  01B9               	clrf	??___flmul+3
  6100     0115  0839               	movf	??___flmul+3,w
  6101     0116  00C5               	movwf	___flmul@prod+3
  6102     0117  0838               	movf	??___flmul+2,w
  6103     0118  00C4               	movwf	___flmul@prod+2
  6104     0119  0837               	movf	??___flmul+1,w
  6105     011A  00C3               	movwf	___flmul@prod+1
  6106     011B  0836               	movf	??___flmul,w
  6107     011C  00C2               	movwf	___flmul@prod
  6108     011D  082F               	movf	___flmul@b+1,w
  6109     011E  00A0               	movwf	__Umul8_16@multiplicand
  6110     011F  0833               	movf	___flmul@a+1,w
  6111     0120  3195  2585  3180   	fcall	__Umul8_16
  6112     0123  0020               	movlb	0	; select bank0
  6113     0124  0821               	movf	?__Umul8_16+1,w
  6114     0125  00C7               	movwf	___flmul@temp+1
  6115     0126  0820               	movf	?__Umul8_16,w
  6116     0127  00C6               	movwf	___flmul@temp
  6117     0128                     l4456:
  6118     0128  0846               	movf	___flmul@temp,w
  6119     0129  00B6               	movwf	??___flmul
  6120     012A  01B7               	clrf	??___flmul+1
  6121     012B  01B8               	clrf	??___flmul+2
  6122     012C  01B9               	clrf	??___flmul+3
  6123     012D  0836               	movf	??___flmul,w
  6124     012E  07BC               	addwf	___flmul@grs,f
  6125     012F  0837               	movf	??___flmul+1,w
  6126     0130  3DBD               	addwfc	___flmul@grs+1,f
  6127     0131  0838               	movf	??___flmul+2,w
  6128     0132  3DBE               	addwfc	___flmul@grs+2,f
  6129     0133  0839               	movf	??___flmul+3,w
  6130     0134  3DBF               	addwfc	___flmul@grs+3,f
  6131     0135                     l4458:
  6132     0135  0847               	movf	___flmul@temp+1,w
  6133     0136  00B6               	movwf	??___flmul
  6134     0137  01B7               	clrf	??___flmul+1
  6135     0138  01B8               	clrf	??___flmul+2
  6136     0139  01B9               	clrf	??___flmul+3
  6137     013A  0836               	movf	??___flmul,w
  6138     013B  07C2               	addwf	___flmul@prod,f
  6139     013C  0837               	movf	??___flmul+1,w
  6140     013D  3DC3               	addwfc	___flmul@prod+1,f
  6141     013E  0838               	movf	??___flmul+2,w
  6142     013F  3DC4               	addwfc	___flmul@prod+2,f
  6143     0140  0839               	movf	??___flmul+3,w
  6144     0141  3DC5               	addwfc	___flmul@prod+3,f
  6145     0142  0830               	movf	___flmul@b+2,w
  6146     0143  00A0               	movwf	__Umul8_16@multiplicand
  6147     0144  0832               	movf	___flmul@a,w
  6148     0145  3195  2585  3180   	fcall	__Umul8_16
  6149     0148  0020               	movlb	0	; select bank0
  6150     0149  0821               	movf	?__Umul8_16+1,w
  6151     014A  00C7               	movwf	___flmul@temp+1
  6152     014B  0820               	movf	?__Umul8_16,w
  6153     014C  00C6               	movwf	___flmul@temp
  6154     014D                     l4460:
  6155     014D  0846               	movf	___flmul@temp,w
  6156     014E  00B6               	movwf	??___flmul
  6157     014F  01B7               	clrf	??___flmul+1
  6158     0150  01B8               	clrf	??___flmul+2
  6159     0151  01B9               	clrf	??___flmul+3
  6160     0152  0836               	movf	??___flmul,w
  6161     0153  07BC               	addwf	___flmul@grs,f
  6162     0154  0837               	movf	??___flmul+1,w
  6163     0155  3DBD               	addwfc	___flmul@grs+1,f
  6164     0156  0838               	movf	??___flmul+2,w
  6165     0157  3DBE               	addwfc	___flmul@grs+2,f
  6166     0158  0839               	movf	??___flmul+3,w
  6167     0159  3DBF               	addwfc	___flmul@grs+3,f
  6168     015A                     l4462:
  6169     015A  0847               	movf	___flmul@temp+1,w
  6170     015B  00B6               	movwf	??___flmul
  6171     015C  01B7               	clrf	??___flmul+1
  6172     015D  01B8               	clrf	??___flmul+2
  6173     015E  01B9               	clrf	??___flmul+3
  6174     015F  0836               	movf	??___flmul,w
  6175     0160  07C2               	addwf	___flmul@prod,f
  6176     0161  0837               	movf	??___flmul+1,w
  6177     0162  3DC3               	addwfc	___flmul@prod+1,f
  6178     0163  0838               	movf	??___flmul+2,w
  6179     0164  3DC4               	addwfc	___flmul@prod+2,f
  6180     0165  0839               	movf	??___flmul+3,w
  6181     0166  3DC5               	addwfc	___flmul@prod+3,f
  6182     0167                     l4464:
  6183     0167  3008               	movlw	8
  6184     0168                     u3645:
  6185     0168  35BC               	lslf	___flmul@grs,f
  6186     0169  0DBD               	rlf	___flmul@grs+1,f
  6187     016A  0DBE               	rlf	___flmul@grs+2,f
  6188     016B  0DBF               	rlf	___flmul@grs+3,f
  6189     016C  0B89               	decfsz	9,f
  6190     016D  2968               	goto	u3645
  6191     016E                     l4466:
  6192     016E  082F               	movf	___flmul@b+1,w
  6193     016F  00A0               	movwf	__Umul8_16@multiplicand
  6194     0170  0832               	movf	___flmul@a,w
  6195     0171  3195  2585  3180   	fcall	__Umul8_16
  6196     0174  0020               	movlb	0	; select bank0
  6197     0175  0821               	movf	?__Umul8_16+1,w
  6198     0176  00C7               	movwf	___flmul@temp+1
  6199     0177  0820               	movf	?__Umul8_16,w
  6200     0178  00C6               	movwf	___flmul@temp
  6201     0179                     l4468:
  6202     0179  0846               	movf	___flmul@temp,w
  6203     017A  07BC               	addwf	___flmul@grs,f
  6204     017B  0847               	movf	___flmul@temp+1,w
  6205     017C  3DBD               	addwfc	___flmul@grs+1,f
  6206     017D  3000               	movlw	0
  6207     017E  3DBE               	addwfc	___flmul@grs+2,f
  6208     017F  3DBF               	addwfc	___flmul@grs+3,f
  6209     0180                     l4470:
  6210     0180  082E               	movf	___flmul@b,w
  6211     0181  00A0               	movwf	__Umul8_16@multiplicand
  6212     0182  0833               	movf	___flmul@a+1,w
  6213     0183  3195  2585  3180   	fcall	__Umul8_16
  6214     0186  0020               	movlb	0	; select bank0
  6215     0187  0821               	movf	?__Umul8_16+1,w
  6216     0188  00C7               	movwf	___flmul@temp+1
  6217     0189  0820               	movf	?__Umul8_16,w
  6218     018A  00C6               	movwf	___flmul@temp
  6219     018B                     l4472:
  6220     018B  0846               	movf	___flmul@temp,w
  6221     018C  07BC               	addwf	___flmul@grs,f
  6222     018D  0847               	movf	___flmul@temp+1,w
  6223     018E  3DBD               	addwfc	___flmul@grs+1,f
  6224     018F  3000               	movlw	0
  6225     0190  3DBE               	addwfc	___flmul@grs+2,f
  6226     0191  3DBF               	addwfc	___flmul@grs+3,f
  6227     0192                     l4474:
  6228     0192  3008               	movlw	8
  6229     0193                     u3655:
  6230     0193  35BC               	lslf	___flmul@grs,f
  6231     0194  0DBD               	rlf	___flmul@grs+1,f
  6232     0195  0DBE               	rlf	___flmul@grs+2,f
  6233     0196  0DBF               	rlf	___flmul@grs+3,f
  6234     0197  0B89               	decfsz	9,f
  6235     0198  2993               	goto	u3655
  6236     0199  082E               	movf	___flmul@b,w
  6237     019A  00A0               	movwf	__Umul8_16@multiplicand
  6238     019B  0832               	movf	___flmul@a,w
  6239     019C  3195  2585  3180   	fcall	__Umul8_16
  6240     019F  0020               	movlb	0	; select bank0
  6241     01A0  0821               	movf	?__Umul8_16+1,w
  6242     01A1  00C7               	movwf	___flmul@temp+1
  6243     01A2  0820               	movf	?__Umul8_16,w
  6244     01A3  00C6               	movwf	___flmul@temp
  6245     01A4                     l4476:
  6246     01A4  0846               	movf	___flmul@temp,w
  6247     01A5  07BC               	addwf	___flmul@grs,f
  6248     01A6  0847               	movf	___flmul@temp+1,w
  6249     01A7  3DBD               	addwfc	___flmul@grs+1,f
  6250     01A8  3000               	movlw	0
  6251     01A9  3DBE               	addwfc	___flmul@grs+2,f
  6252     01AA  3DBF               	addwfc	___flmul@grs+3,f
  6253     01AB                     l4478:
  6254     01AB  082F               	movf	___flmul@b+1,w
  6255     01AC  00A0               	movwf	__Umul8_16@multiplicand
  6256     01AD  0834               	movf	___flmul@a+2,w
  6257     01AE  3195  2585  3180   	fcall	__Umul8_16
  6258     01B1  0020               	movlb	0	; select bank0
  6259     01B2  0821               	movf	?__Umul8_16+1,w
  6260     01B3  00C7               	movwf	___flmul@temp+1
  6261     01B4  0820               	movf	?__Umul8_16,w
  6262     01B5  00C6               	movwf	___flmul@temp
  6263     01B6  0846               	movf	___flmul@temp,w
  6264     01B7  07C2               	addwf	___flmul@prod,f
  6265     01B8  0847               	movf	___flmul@temp+1,w
  6266     01B9  3DC3               	addwfc	___flmul@prod+1,f
  6267     01BA  3000               	movlw	0
  6268     01BB  3DC4               	addwfc	___flmul@prod+2,f
  6269     01BC  3DC5               	addwfc	___flmul@prod+3,f
  6270     01BD                     l4480:
  6271     01BD  0830               	movf	___flmul@b+2,w
  6272     01BE  00A0               	movwf	__Umul8_16@multiplicand
  6273     01BF  0833               	movf	___flmul@a+1,w
  6274     01C0  3195  2585  3180   	fcall	__Umul8_16
  6275     01C3  0020               	movlb	0	; select bank0
  6276     01C4  0821               	movf	?__Umul8_16+1,w
  6277     01C5  00C7               	movwf	___flmul@temp+1
  6278     01C6  0820               	movf	?__Umul8_16,w
  6279     01C7  00C6               	movwf	___flmul@temp
  6280     01C8                     l4482:
  6281     01C8  0846               	movf	___flmul@temp,w
  6282     01C9  07C2               	addwf	___flmul@prod,f
  6283     01CA  0847               	movf	___flmul@temp+1,w
  6284     01CB  3DC3               	addwfc	___flmul@prod+1,f
  6285     01CC  3000               	movlw	0
  6286     01CD  3DC4               	addwfc	___flmul@prod+2,f
  6287     01CE  3DC5               	addwfc	___flmul@prod+3,f
  6288     01CF  0830               	movf	___flmul@b+2,w
  6289     01D0  00A0               	movwf	__Umul8_16@multiplicand
  6290     01D1  0834               	movf	___flmul@a+2,w
  6291     01D2  3195  2585  3180   	fcall	__Umul8_16
  6292     01D5  0020               	movlb	0	; select bank0
  6293     01D6  0821               	movf	?__Umul8_16+1,w
  6294     01D7  00C7               	movwf	___flmul@temp+1
  6295     01D8  0820               	movf	?__Umul8_16,w
  6296     01D9  00C6               	movwf	___flmul@temp
  6297     01DA                     l4484:
  6298     01DA  0846               	movf	___flmul@temp,w
  6299     01DB  00B6               	movwf	??___flmul
  6300     01DC  0847               	movf	___flmul@temp+1,w
  6301     01DD  00B7               	movwf	??___flmul+1
  6302     01DE  01B8               	clrf	??___flmul+2
  6303     01DF  01B9               	clrf	??___flmul+3
  6304     01E0  3008               	movlw	8
  6305     01E1                     u3665:
  6306     01E1  35B6               	lslf	??___flmul,f
  6307     01E2  0DB7               	rlf	??___flmul+1,f
  6308     01E3  0DB8               	rlf	??___flmul+2,f
  6309     01E4  0DB9               	rlf	??___flmul+3,f
  6310     01E5                     u3660:
  6311     01E5  0B89               	decfsz	9,f
  6312     01E6  29E1               	goto	u3665
  6313     01E7  0836               	movf	??___flmul,w
  6314     01E8  07C2               	addwf	___flmul@prod,f
  6315     01E9  0837               	movf	??___flmul+1,w
  6316     01EA  3DC3               	addwfc	___flmul@prod+1,f
  6317     01EB  0838               	movf	??___flmul+2,w
  6318     01EC  3DC4               	addwfc	___flmul@prod+2,f
  6319     01ED  0839               	movf	??___flmul+3,w
  6320     01EE  3DC5               	addwfc	___flmul@prod+3,f
  6321     01EF                     l4486:
  6322     01EF  083C               	movf	___flmul@grs,w
  6323     01F0  00B6               	movwf	??___flmul
  6324     01F1  083D               	movf	___flmul@grs+1,w
  6325     01F2  00B7               	movwf	??___flmul+1
  6326     01F3  083E               	movf	___flmul@grs+2,w
  6327     01F4  00B8               	movwf	??___flmul+2
  6328     01F5  083F               	movf	___flmul@grs+3,w
  6329     01F6  00B9               	movwf	??___flmul+3
  6330     01F7  3018               	movlw	24
  6331     01F8                     u3675:
  6332     01F8  36B9               	lsrf	??___flmul+3,f
  6333     01F9  0CB8               	rrf	??___flmul+2,f
  6334     01FA  0CB7               	rrf	??___flmul+1,f
  6335     01FB  0CB6               	rrf	??___flmul,f
  6336     01FC                     u3670:
  6337     01FC  0B89               	decfsz	9,f
  6338     01FD  29F8               	goto	u3675
  6339     01FE  0836               	movf	??___flmul,w
  6340     01FF  07C2               	addwf	___flmul@prod,f
  6341     0200  0837               	movf	??___flmul+1,w
  6342     0201  3DC3               	addwfc	___flmul@prod+1,f
  6343     0202  0838               	movf	??___flmul+2,w
  6344     0203  3DC4               	addwfc	___flmul@prod+2,f
  6345     0204  0839               	movf	??___flmul+3,w
  6346     0205  3DC5               	addwfc	___flmul@prod+3,f
  6347     0206                     l4488:
  6348     0206  3008               	movlw	8
  6349     0207                     u3685:
  6350     0207  35BC               	lslf	___flmul@grs,f
  6351     0208  0DBD               	rlf	___flmul@grs+1,f
  6352     0209  0DBE               	rlf	___flmul@grs+2,f
  6353     020A  0DBF               	rlf	___flmul@grs+3,f
  6354     020B  0B89               	decfsz	9,f
  6355     020C  2A07               	goto	u3685
  6356     020D                     l4490:
  6357     020D  0841               	movf	___flmul@bexp,w
  6358     020E  0740               	addwf	___flmul@aexp,w
  6359     020F  00B6               	movwf	??___flmul
  6360     0210  01B7               	clrf	??___flmul+1
  6361     0211  0DB7               	rlf	??___flmul+1,f
  6362     0212  0836               	movf	??___flmul,w
  6363     0213  3E82               	addlw	130
  6364     0214  00C6               	movwf	___flmul@temp
  6365     0215  30FF               	movlw	255
  6366     0216  3D37               	addwfc	??___flmul+1,w
  6367     0217  00C7               	movwf	___flmul@temp+1
  6368     0218  2A30               	goto	l4502
  6369     0219                     l4492:
  6370     0219  3001               	movlw	1
  6371     021A                     u3695:
  6372     021A  35C2               	lslf	___flmul@prod,f
  6373     021B  0DC3               	rlf	___flmul@prod+1,f
  6374     021C  0DC4               	rlf	___flmul@prod+2,f
  6375     021D  0DC5               	rlf	___flmul@prod+3,f
  6376     021E  0B89               	decfsz	9,f
  6377     021F  2A1A               	goto	u3695
  6378     0220                     l4494:
  6379     0220  1FBF               	btfss	___flmul@grs+3,7
  6380     0221  2A23               	goto	u3701
  6381     0222  2A24               	goto	u3700
  6382     0223                     u3701:
  6383     0223  2A25               	goto	l4498
  6384     0224                     u3700:
  6385     0224                     l4496:
  6386     0224  1442               	bsf	___flmul@prod,0
  6387     0225                     l4498:
  6388     0225  3001               	movlw	1
  6389     0226                     u3715:
  6390     0226  35BC               	lslf	___flmul@grs,f
  6391     0227  0DBD               	rlf	___flmul@grs+1,f
  6392     0228  0DBE               	rlf	___flmul@grs+2,f
  6393     0229  0DBF               	rlf	___flmul@grs+3,f
  6394     022A  0B89               	decfsz	9,f
  6395     022B  2A26               	goto	u3715
  6396     022C                     l4500:
  6397     022C  30FF               	movlw	255
  6398     022D  07C6               	addwf	___flmul@temp,f
  6399     022E  30FF               	movlw	255
  6400     022F  3DC7               	addwfc	___flmul@temp+1,f
  6401     0230                     l4502:
  6402     0230  1FC4               	btfss	___flmul@prod+2,7
  6403     0231  2A33               	goto	u3721
  6404     0232  2A34               	goto	u3720
  6405     0233                     u3721:
  6406     0233  2A19               	goto	l4492
  6407     0234                     u3720:
  6408     0234                     l4504:
  6409     0234  01C0               	clrf	___flmul@aexp
  6410     0235                     l4506:
  6411     0235  1FBF               	btfss	___flmul@grs+3,7
  6412     0236  2A38               	goto	u3731
  6413     0237  2A39               	goto	u3730
  6414     0238                     u3731:
  6415     0238  2A55               	goto	l4514
  6416     0239                     u3730:
  6417     0239                     l4508:
  6418     0239  30FF               	movlw	255
  6419     023A  053C               	andwf	___flmul@grs,w
  6420     023B  00B6               	movwf	??___flmul
  6421     023C  30FF               	movlw	255
  6422     023D  053D               	andwf	___flmul@grs+1,w
  6423     023E  00B7               	movwf	??___flmul+1
  6424     023F  30FF               	movlw	255
  6425     0240  053E               	andwf	___flmul@grs+2,w
  6426     0241  00B8               	movwf	??___flmul+2
  6427     0242  307F               	movlw	127
  6428     0243  053F               	andwf	___flmul@grs+3,w
  6429     0244  00B9               	movwf	??___flmul+3
  6430     0245  0839               	movf	??___flmul+3,w
  6431     0246  0438               	iorwf	??___flmul+2,w
  6432     0247  0437               	iorwf	??___flmul+1,w
  6433     0248  0436               	iorwf	??___flmul,w
  6434     0249  1903               	skipnz
  6435     024A  2A4C               	goto	u3741
  6436     024B  2A4D               	goto	u3740
  6437     024C                     u3741:
  6438     024C  2A50               	goto	l1552
  6439     024D                     u3740:
  6440     024D                     l4510:
  6441     024D  01C0               	clrf	___flmul@aexp
  6442     024E  0AC0               	incf	___flmul@aexp,f
  6443     024F  2A55               	goto	l4514
  6444     0250                     l1552:
  6445     0250  1C42               	btfss	___flmul@prod,0
  6446     0251  2A53               	goto	u3751
  6447     0252  2A54               	goto	u3750
  6448     0253                     u3751:
  6449     0253  2A55               	goto	l4514
  6450     0254                     u3750:
  6451     0254  2A4D               	goto	l4510
  6452     0255                     l4514:
  6453     0255  0840               	movf	___flmul@aexp,w
  6454     0256  1903               	btfsc	3,2
  6455     0257  2A59               	goto	u3761
  6456     0258  2A5A               	goto	u3760
  6457     0259                     u3761:
  6458     0259  2A82               	goto	l4524
  6459     025A                     u3760:
  6460     025A                     l4516:
  6461     025A  3001               	movlw	1
  6462     025B  07C2               	addwf	___flmul@prod,f
  6463     025C  3000               	movlw	0
  6464     025D  3DC3               	addwfc	___flmul@prod+1,f
  6465     025E  3000               	movlw	0
  6466     025F  3DC4               	addwfc	___flmul@prod+2,f
  6467     0260  3000               	movlw	0
  6468     0261  3DC5               	addwfc	___flmul@prod+3,f
  6469     0262                     l4518:
  6470     0262  1C45               	btfss	___flmul@prod+3,0
  6471     0263  2A65               	goto	u3771
  6472     0264  2A66               	goto	u3770
  6473     0265                     u3771:
  6474     0265  2A82               	goto	l4524
  6475     0266                     u3770:
  6476     0266                     l4520:
  6477     0266  0842               	movf	___flmul@prod,w
  6478     0267  00B6               	movwf	??___flmul
  6479     0268  0843               	movf	___flmul@prod+1,w
  6480     0269  00B7               	movwf	??___flmul+1
  6481     026A  0844               	movf	___flmul@prod+2,w
  6482     026B  00B8               	movwf	??___flmul+2
  6483     026C  0845               	movf	___flmul@prod+3,w
  6484     026D  00B9               	movwf	??___flmul+3
  6485     026E  3001               	movlw	1
  6486     026F  00BA               	movwf	??___flmul+4
  6487     0270                     u3785:
  6488     0270  37B9               	asrf	??___flmul+3,f
  6489     0271  0CB8               	rrf	??___flmul+2,f
  6490     0272  0CB7               	rrf	??___flmul+1,f
  6491     0273  0CB6               	rrf	??___flmul,f
  6492     0274                     u3780:
  6493     0274  0BBA               	decfsz	??___flmul+4,f
  6494     0275  2A70               	goto	u3785
  6495     0276  0839               	movf	??___flmul+3,w
  6496     0277  00C5               	movwf	___flmul@prod+3
  6497     0278  0838               	movf	??___flmul+2,w
  6498     0279  00C4               	movwf	___flmul@prod+2
  6499     027A  0837               	movf	??___flmul+1,w
  6500     027B  00C3               	movwf	___flmul@prod+1
  6501     027C  0836               	movf	??___flmul,w
  6502     027D  00C2               	movwf	___flmul@prod
  6503     027E                     l4522:
  6504     027E  3001               	movlw	1
  6505     027F  07C6               	addwf	___flmul@temp,f
  6506     0280  3000               	movlw	0
  6507     0281  3DC7               	addwfc	___flmul@temp+1,f
  6508     0282                     l4524:
  6509     0282  0847               	movf	___flmul@temp+1,w
  6510     0283  3A80               	xorlw	128
  6511     0284  00B6               	movwf	??___flmul
  6512     0285  3080               	movlw	128
  6513     0286  0236               	subwf	??___flmul,w
  6514     0287  1D03               	skipz
  6515     0288  2A8B               	goto	u3795
  6516     0289  30FF               	movlw	255
  6517     028A  0246               	subwf	___flmul@temp,w
  6518     028B                     u3795:
  6519     028B  1C03               	skipc
  6520     028C  2A8E               	goto	u3791
  6521     028D  2A8F               	goto	u3790
  6522     028E                     u3791:
  6523     028E  2A99               	goto	l4528
  6524     028F                     u3790:
  6525     028F                     l4526:
  6526     028F  307F               	movlw	127
  6527     0290  0020               	movlb	0	; select bank0
  6528     0291  00C5               	movwf	___flmul@prod+3
  6529     0292  3080               	movlw	128
  6530     0293  00C4               	movwf	___flmul@prod+2
  6531     0294  3000               	movlw	0
  6532     0295  00C3               	movwf	___flmul@prod+1
  6533     0296  3000               	movlw	0
  6534     0297  00C2               	movwf	___flmul@prod
  6535     0298  2AC4               	goto	l1558
  6536     0299                     l4528:
  6537     0299  0020               	movlb	0	; select bank0
  6538     029A  0847               	movf	___flmul@temp+1,w
  6539     029B  3A80               	xorlw	128
  6540     029C  00B6               	movwf	??___flmul
  6541     029D  3080               	movlw	128
  6542     029E  0236               	subwf	??___flmul,w
  6543     029F  1D03               	skipz
  6544     02A0  2AA3               	goto	u3805
  6545     02A1  3001               	movlw	1
  6546     02A2  0246               	subwf	___flmul@temp,w
  6547     02A3                     u3805:
  6548     02A3  1803               	skipnc
  6549     02A4  2AA6               	goto	u3801
  6550     02A5  2AA7               	goto	u3800
  6551     02A6                     u3801:
  6552     02A6  2AB2               	goto	l4534
  6553     02A7                     u3800:
  6554     02A7                     l4530:
  6555     02A7  3000               	movlw	0
  6556     02A8  0020               	movlb	0	; select bank0
  6557     02A9  00C5               	movwf	___flmul@prod+3
  6558     02AA  3000               	movlw	0
  6559     02AB  00C4               	movwf	___flmul@prod+2
  6560     02AC  3000               	movlw	0
  6561     02AD  00C3               	movwf	___flmul@prod+1
  6562     02AE  3000               	movlw	0
  6563     02AF  00C2               	movwf	___flmul@prod
  6564     02B0                     l4532:
  6565     02B0  01BB               	clrf	___flmul@sign
  6566     02B1  2AC4               	goto	l1558
  6567     02B2                     l4534:
  6568     02B2  0020               	movlb	0	; select bank0
  6569     02B3  0846               	movf	___flmul@temp,w
  6570     02B4  00C1               	movwf	___flmul@bexp
  6571     02B5  30FF               	movlw	255
  6572     02B6  05C2               	andwf	___flmul@prod,f
  6573     02B7  30FF               	movlw	255
  6574     02B8  05C3               	andwf	___flmul@prod+1,f
  6575     02B9  307F               	movlw	127
  6576     02BA  05C4               	andwf	___flmul@prod+2,f
  6577     02BB  3000               	movlw	0
  6578     02BC  05C5               	andwf	___flmul@prod+3,f
  6579     02BD                     l4536:
  6580     02BD  1C41               	btfss	___flmul@bexp,0
  6581     02BE  2AC0               	goto	u3811
  6582     02BF  2AC1               	goto	u3810
  6583     02C0                     u3811:
  6584     02C0  2AC2               	goto	l4540
  6585     02C1                     u3810:
  6586     02C1                     l4538:
  6587     02C1  17C4               	bsf	___flmul@prod+2,7
  6588     02C2                     l4540:
  6589     02C2  3641               	lsrf	___flmul@bexp,w
  6590     02C3  00C5               	movwf	___flmul@prod+3
  6591     02C4                     l1558:
  6592     02C4  083B               	movf	___flmul@sign,w
  6593     02C5  00B6               	movwf	??___flmul
  6594     02C6  0836               	movf	??___flmul,w
  6595     02C7  04C5               	iorwf	___flmul@prod+3,f
  6596     02C8                     l4542:
  6597     02C8  0845               	movf	___flmul@prod+3,w
  6598     02C9  00B1               	movwf	?___flmul+3
  6599     02CA  0844               	movf	___flmul@prod+2,w
  6600     02CB  00B0               	movwf	?___flmul+2
  6601     02CC  0843               	movf	___flmul@prod+1,w
  6602     02CD  00AF               	movwf	?___flmul+1
  6603     02CE  0842               	movf	___flmul@prod,w
  6604     02CF  00AE               	movwf	?___flmul
  6605     02D0                     l1546:
  6606     02D0  0008               	return
  6607     02D1                     __end_of___flmul:
  6608                           
  6609                           	psect	text20
  6610     1585                     __ptext20:	
  6611 ;; *************** function __Umul8_16 *****************
  6612 ;; Defined at:
  6613 ;;		line 4 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\Umul8_16.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  multiplier      1    wreg     unsigned char 
  6616 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6619 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6620 ;;  product         2    4[BANK0 ] unsigned int 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  2    0[BANK0 ] unsigned int 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6630 ;;      Params:         0       2       0       0       0       0       0       0
  6631 ;;      Locals:         0       5       0       0       0       0       0       0
  6632 ;;      Temps:          0       2       0       0       0       0       0       0
  6633 ;;      Totals:         0       9       0       0       0       0       0       0
  6634 ;;Total ram usage:        9 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 7
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		___flmul
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644     1585                     __Umul8_16:	
  6645                           ;psect for function __Umul8_16
  6646                           
  6647                           
  6648                           ;incstack = 0
  6649                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6650                           ;__Umul8_16@multiplier stored from wreg
  6651     1585  0020               	movlb	0	; select bank0
  6652     1586  00A8               	movwf	__Umul8_16@multiplier
  6653     1587                     l3830:
  6654     1587  01A4               	clrf	__Umul8_16@product
  6655     1588  01A5               	clrf	__Umul8_16@product+1
  6656     1589                     l3832:
  6657     1589  0820               	movf	__Umul8_16@multiplicand,w
  6658     158A  00A2               	movwf	??__Umul8_16
  6659     158B  01A3               	clrf	??__Umul8_16+1
  6660     158C  0822               	movf	??__Umul8_16,w
  6661     158D  00A6               	movwf	__Umul8_16@word_mpld
  6662     158E  0823               	movf	??__Umul8_16+1,w
  6663     158F  00A7               	movwf	__Umul8_16@word_mpld+1
  6664     1590                     l3834:
  6665     1590  1C28               	btfss	__Umul8_16@multiplier,0
  6666     1591  2D93               	goto	u2591
  6667     1592  2D94               	goto	u2590
  6668     1593                     u2591:
  6669     1593  2D98               	goto	l1565
  6670     1594                     u2590:
  6671     1594                     l3836:
  6672     1594  0826               	movf	__Umul8_16@word_mpld,w
  6673     1595  07A4               	addwf	__Umul8_16@product,f
  6674     1596  0827               	movf	__Umul8_16@word_mpld+1,w
  6675     1597  3DA5               	addwfc	__Umul8_16@product+1,f
  6676     1598                     l1565:
  6677     1598  3001               	movlw	1
  6678     1599                     u2605:
  6679     1599  35A6               	lslf	__Umul8_16@word_mpld,f
  6680     159A  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6681     159B  0B89               	decfsz	9,f
  6682     159C  2D99               	goto	u2605
  6683     159D  1003               	clrc
  6684     159E  0CA8               	rrf	__Umul8_16@multiplier,f
  6685     159F                     l3838:
  6686     159F  0828               	movf	__Umul8_16@multiplier,w
  6687     15A0  1D03               	btfss	3,2
  6688     15A1  2DA3               	goto	u2611
  6689     15A2  2DA4               	goto	u2610
  6690     15A3                     u2611:
  6691     15A3  2D90               	goto	l3834
  6692     15A4                     u2610:
  6693     15A4                     l3840:
  6694     15A4  0825               	movf	__Umul8_16@product+1,w
  6695     15A5  00A1               	movwf	?__Umul8_16+1
  6696     15A6  0824               	movf	__Umul8_16@product,w
  6697     15A7  00A0               	movwf	?__Umul8_16
  6698     15A8                     l1567:
  6699     15A8  0008               	return
  6700     15A9                     __end_of__Umul8_16:
  6701                           
  6702                           	psect	text21
  6703     0DFC                     __ptext21:	
  6704 ;; *************** function ___fldiv *****************
  6705 ;; Defined at:
  6706 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcdiv.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  a               4   60[BANK0 ] unsigned int 
  6709 ;;  b               4   64[BANK0 ] unsigned int 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  grs             4    7[BANK1 ] unsigned long 
  6712 ;;  rem             4    0[BANK1 ] unsigned long 
  6713 ;;  new_exp         2    5[BANK1 ] int 
  6714 ;;  aexp            1   12[BANK1 ] unsigned char 
  6715 ;;  bexp            1   11[BANK1 ] unsigned char 
  6716 ;;  sign            1    4[BANK1 ] unsigned char 
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  4   60[BANK0 ] unsigned char 
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6726 ;;      Params:         0       8       0       0       0       0       0       0
  6727 ;;      Locals:         0       0      13       0       0       0       0       0
  6728 ;;      Temps:          0       5       0       0       0       0       0       0
  6729 ;;      Totals:         0      13      13       0       0       0       0       0
  6730 ;;Total ram usage:       26 bytes
  6731 ;; Hardware stack levels used: 1
  6732 ;; Hardware stack levels required when called: 7
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_ReadData
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740     0DFC                     ___fldiv:	
  6741                           ;psect for function ___fldiv
  6742                           
  6743     0DFC                     l4266:	
  6744                           ;incstack = 0
  6745                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6746                           
  6747     0DFC  0020               	movlb	0	; select bank0
  6748     0DFD  0863               	movf	___fldiv@b+3,w
  6749     0DFE  3980               	andlw	128
  6750     0DFF  0021               	movlb	1	; select bank1
  6751     0E00  00A4               	movwf	___fldiv@sign^(0+128)
  6752     0E01                     l4268:
  6753     0E01  0020               	movlb	0	; select bank0
  6754     0E02  3563               	lslf	___fldiv@b+3,w
  6755     0E03  0021               	movlb	1	; select bank1
  6756     0E04  00AB               	movwf	___fldiv@bexp^(0+128)
  6757     0E05                     l4270:
  6758     0E05  0020               	movlb	0	; select bank0
  6759     0E06  1FE2               	btfss	___fldiv@b+2,7
  6760     0E07  2E09               	goto	u3271
  6761     0E08  2E0A               	goto	u3270
  6762     0E09                     u3271:
  6763     0E09  2E0C               	goto	l4274
  6764     0E0A                     u3270:
  6765     0E0A                     l4272:
  6766     0E0A  0021               	movlb	1	; select bank1
  6767     0E0B  142B               	bsf	___fldiv@bexp^(0+128),0
  6768     0E0C                     l4274:
  6769     0E0C  0021               	movlb	1	; select bank1
  6770     0E0D  082B               	movf	___fldiv@bexp^(0+128),w
  6771     0E0E  1903               	btfsc	3,2
  6772     0E0F  2E11               	goto	u3281
  6773     0E10  2E12               	goto	u3280
  6774     0E11                     u3281:
  6775     0E11  2E24               	goto	l4284
  6776     0E12                     u3280:
  6777     0E12                     l4276:
  6778     0E12  0A2B               	incf	___fldiv@bexp^(0+128),w
  6779     0E13  1D03               	btfss	3,2
  6780     0E14  2E16               	goto	u3291
  6781     0E15  2E17               	goto	u3290
  6782     0E16                     u3291:
  6783     0E16  2E20               	goto	l4280
  6784     0E17                     u3290:
  6785     0E17                     l4278:
  6786     0E17  3000               	movlw	0
  6787     0E18  0020               	movlb	0	; select bank0
  6788     0E19  00E3               	movwf	___fldiv@b+3
  6789     0E1A  3000               	movlw	0
  6790     0E1B  00E2               	movwf	___fldiv@b+2
  6791     0E1C  3000               	movlw	0
  6792     0E1D  00E1               	movwf	___fldiv@b+1
  6793     0E1E  3000               	movlw	0
  6794     0E1F  00E0               	movwf	___fldiv@b
  6795     0E20                     l4280:
  6796     0E20  0020               	movlb	0	; select bank0
  6797     0E21  17E2               	bsf	___fldiv@b+2,7
  6798     0E22                     l4282:
  6799     0E22  01E3               	clrf	___fldiv@b+3
  6800     0E23  2E2D               	goto	l4286
  6801     0E24                     l4284:
  6802     0E24  3000               	movlw	0
  6803     0E25  0020               	movlb	0	; select bank0
  6804     0E26  00E3               	movwf	___fldiv@b+3
  6805     0E27  3000               	movlw	0
  6806     0E28  00E2               	movwf	___fldiv@b+2
  6807     0E29  3000               	movlw	0
  6808     0E2A  00E1               	movwf	___fldiv@b+1
  6809     0E2B  3000               	movlw	0
  6810     0E2C  00E0               	movwf	___fldiv@b
  6811     0E2D                     l4286:
  6812     0E2D  085F               	movf	___fldiv@a+3,w
  6813     0E2E  3980               	andlw	128
  6814     0E2F  00E4               	movwf	??___fldiv
  6815     0E30  0864               	movf	??___fldiv,w
  6816     0E31  0021               	movlb	1	; select bank1
  6817     0E32  06A4               	xorwf	___fldiv@sign^(0+128),f
  6818     0E33                     l4288:
  6819     0E33  0020               	movlb	0	; select bank0
  6820     0E34  355F               	lslf	___fldiv@a+3,w
  6821     0E35  0021               	movlb	1	; select bank1
  6822     0E36  00AC               	movwf	___fldiv@aexp^(0+128)
  6823     0E37                     l4290:
  6824     0E37  0020               	movlb	0	; select bank0
  6825     0E38  1FDE               	btfss	___fldiv@a+2,7
  6826     0E39  2E3B               	goto	u3301
  6827     0E3A  2E3C               	goto	u3300
  6828     0E3B                     u3301:
  6829     0E3B  2E3E               	goto	l4294
  6830     0E3C                     u3300:
  6831     0E3C                     l4292:
  6832     0E3C  0021               	movlb	1	; select bank1
  6833     0E3D  142C               	bsf	___fldiv@aexp^(0+128),0
  6834     0E3E                     l4294:
  6835     0E3E  0021               	movlb	1	; select bank1
  6836     0E3F  082C               	movf	___fldiv@aexp^(0+128),w
  6837     0E40  1903               	btfsc	3,2
  6838     0E41  2E43               	goto	u3311
  6839     0E42  2E44               	goto	u3310
  6840     0E43                     u3311:
  6841     0E43  2E56               	goto	l4304
  6842     0E44                     u3310:
  6843     0E44                     l4296:
  6844     0E44  0A2C               	incf	___fldiv@aexp^(0+128),w
  6845     0E45  1D03               	btfss	3,2
  6846     0E46  2E48               	goto	u3321
  6847     0E47  2E49               	goto	u3320
  6848     0E48                     u3321:
  6849     0E48  2E52               	goto	l4300
  6850     0E49                     u3320:
  6851     0E49                     l4298:
  6852     0E49  3000               	movlw	0
  6853     0E4A  0020               	movlb	0	; select bank0
  6854     0E4B  00DF               	movwf	___fldiv@a+3
  6855     0E4C  3000               	movlw	0
  6856     0E4D  00DE               	movwf	___fldiv@a+2
  6857     0E4E  3000               	movlw	0
  6858     0E4F  00DD               	movwf	___fldiv@a+1
  6859     0E50  3000               	movlw	0
  6860     0E51  00DC               	movwf	___fldiv@a
  6861     0E52                     l4300:
  6862     0E52  0020               	movlb	0	; select bank0
  6863     0E53  17DE               	bsf	___fldiv@a+2,7
  6864     0E54                     l4302:
  6865     0E54  01DF               	clrf	___fldiv@a+3
  6866     0E55  2E5F               	goto	l1506
  6867     0E56                     l4304:
  6868     0E56  3000               	movlw	0
  6869     0E57  0020               	movlb	0	; select bank0
  6870     0E58  00DF               	movwf	___fldiv@a+3
  6871     0E59  3000               	movlw	0
  6872     0E5A  00DE               	movwf	___fldiv@a+2
  6873     0E5B  3000               	movlw	0
  6874     0E5C  00DD               	movwf	___fldiv@a+1
  6875     0E5D  3000               	movlw	0
  6876     0E5E  00DC               	movwf	___fldiv@a
  6877     0E5F                     l1506:
  6878     0E5F  085F               	movf	___fldiv@a+3,w
  6879     0E60  045E               	iorwf	___fldiv@a+2,w
  6880     0E61  045D               	iorwf	___fldiv@a+1,w
  6881     0E62  045C               	iorwf	___fldiv@a,w
  6882     0E63  1D03               	skipz
  6883     0E64  2E66               	goto	u3331
  6884     0E65  2E67               	goto	u3330
  6885     0E66                     u3331:
  6886     0E66  2E82               	goto	l4314
  6887     0E67                     u3330:
  6888     0E67                     l4306:
  6889     0E67  3000               	movlw	0
  6890     0E68  00E3               	movwf	___fldiv@b+3
  6891     0E69  3000               	movlw	0
  6892     0E6A  00E2               	movwf	___fldiv@b+2
  6893     0E6B  3000               	movlw	0
  6894     0E6C  00E1               	movwf	___fldiv@b+1
  6895     0E6D  3000               	movlw	0
  6896     0E6E  00E0               	movwf	___fldiv@b
  6897     0E6F  3080               	movlw	128
  6898     0E70  04E2               	iorwf	___fldiv@b+2,f
  6899     0E71  307F               	movlw	127
  6900     0E72  04E3               	iorwf	___fldiv@b+3,f
  6901     0E73                     l4308:
  6902     0E73  0021               	movlb	1	; select bank1
  6903     0E74  0824               	movf	___fldiv@sign^(0+128),w
  6904     0E75  0020               	movlb	0	; select bank0
  6905     0E76  00E4               	movwf	??___fldiv
  6906     0E77  0864               	movf	??___fldiv,w
  6907     0E78  04E3               	iorwf	___fldiv@b+3,f
  6908     0E79                     l4310:
  6909     0E79  0863               	movf	___fldiv@b+3,w
  6910     0E7A  00DF               	movwf	?___fldiv+3
  6911     0E7B  0862               	movf	___fldiv@b+2,w
  6912     0E7C  00DE               	movwf	?___fldiv+2
  6913     0E7D  0861               	movf	___fldiv@b+1,w
  6914     0E7E  00DD               	movwf	?___fldiv+1
  6915     0E7F  0860               	movf	___fldiv@b,w
  6916     0E80  00DC               	movwf	?___fldiv
  6917     0E81  2FFF               	goto	l1508
  6918     0E82                     l4314:
  6919     0E82  0021               	movlb	1	; select bank1
  6920     0E83  082B               	movf	___fldiv@bexp^(0+128),w
  6921     0E84  1D03               	btfss	3,2
  6922     0E85  2E87               	goto	u3341
  6923     0E86  2E88               	goto	u3340
  6924     0E87                     u3341:
  6925     0E87  2E92               	goto	l4320
  6926     0E88                     u3340:
  6927     0E88                     l4316:
  6928     0E88  3000               	movlw	0
  6929     0E89  0020               	movlb	0	; select bank0
  6930     0E8A  00DF               	movwf	?___fldiv+3
  6931     0E8B  3000               	movlw	0
  6932     0E8C  00DE               	movwf	?___fldiv+2
  6933     0E8D  3000               	movlw	0
  6934     0E8E  00DD               	movwf	?___fldiv+1
  6935     0E8F  3000               	movlw	0
  6936     0E90  00DC               	movwf	?___fldiv
  6937     0E91  2FFF               	goto	l1508
  6938     0E92                     l4320:
  6939     0E92  082B               	movf	___fldiv@bexp^(0+128),w
  6940     0E93  0020               	movlb	0	; select bank0
  6941     0E94  00E4               	movwf	??___fldiv
  6942     0E95  01E5               	clrf	??___fldiv+1
  6943     0E96  0865               	movf	??___fldiv+1,w
  6944     0E97  00E7               	movwf	??___fldiv+3
  6945     0E98  0021               	movlb	1	; select bank1
  6946     0E99  082C               	movf	___fldiv@aexp^(0+128),w
  6947     0E9A  0020               	movlb	0	; select bank0
  6948     0E9B  0264               	subwf	??___fldiv,w
  6949     0E9C  00E6               	movwf	??___fldiv+2
  6950     0E9D  1C03               	skipc
  6951     0E9E  03E7               	decf	??___fldiv+3,f
  6952     0E9F  0866               	movf	??___fldiv+2,w
  6953     0EA0  3E7F               	addlw	127
  6954     0EA1  0021               	movlb	1	; select bank1
  6955     0EA2  00A5               	movwf	___fldiv@new_exp^(0+128)
  6956     0EA3  3000               	movlw	0
  6957     0EA4  0020               	movlb	0	; select bank0
  6958     0EA5  3D67               	addwfc	??___fldiv+3,w
  6959     0EA6  0021               	movlb	1	; select bank1
  6960     0EA7  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  6961     0EA8                     l4322:
  6962     0EA8  0020               	movlb	0	; select bank0
  6963     0EA9  0863               	movf	___fldiv@b+3,w
  6964     0EAA  0021               	movlb	1	; select bank1
  6965     0EAB  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  6966     0EAC  0020               	movlb	0	; select bank0
  6967     0EAD  0862               	movf	___fldiv@b+2,w
  6968     0EAE  0021               	movlb	1	; select bank1
  6969     0EAF  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  6970     0EB0  0020               	movlb	0	; select bank0
  6971     0EB1  0861               	movf	___fldiv@b+1,w
  6972     0EB2  0021               	movlb	1	; select bank1
  6973     0EB3  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  6974     0EB4  0020               	movlb	0	; select bank0
  6975     0EB5  0860               	movf	___fldiv@b,w
  6976     0EB6  0021               	movlb	1	; select bank1
  6977     0EB7  00A0               	movwf	___fldiv@rem^(0+128)
  6978     0EB8                     l4324:
  6979     0EB8  3000               	movlw	0
  6980     0EB9  0020               	movlb	0	; select bank0
  6981     0EBA  00E3               	movwf	___fldiv@b+3
  6982     0EBB  3000               	movlw	0
  6983     0EBC  00E2               	movwf	___fldiv@b+2
  6984     0EBD  3000               	movlw	0
  6985     0EBE  00E1               	movwf	___fldiv@b+1
  6986     0EBF  3000               	movlw	0
  6987     0EC0  00E0               	movwf	___fldiv@b
  6988     0EC1                     l4326:
  6989     0EC1  3000               	movlw	0
  6990     0EC2  0021               	movlb	1	; select bank1
  6991     0EC3  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  6992     0EC4  3000               	movlw	0
  6993     0EC5  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  6994     0EC6  3000               	movlw	0
  6995     0EC7  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  6996     0EC8  3000               	movlw	0
  6997     0EC9  00A7               	movwf	___fldiv@grs^(0+128)
  6998     0ECA                     l4328:
  6999     0ECA  01AC               	clrf	___fldiv@aexp^(0+128)
  7000     0ECB  2F20               	goto	l4348
  7001     0ECC                     l4330:
  7002     0ECC  082C               	movf	___fldiv@aexp^(0+128),w
  7003     0ECD  1903               	btfsc	3,2
  7004     0ECE  2ED0               	goto	u3351
  7005     0ECF  2ED1               	goto	u3350
  7006     0ED0                     u3351:
  7007     0ED0  2EEF               	goto	l4340
  7008     0ED1                     u3350:
  7009     0ED1                     l4332:
  7010     0ED1  3001               	movlw	1
  7011     0ED2                     u3365:
  7012     0ED2  35A0               	lslf	___fldiv@rem^(0+128),f
  7013     0ED3  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  7014     0ED4  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  7015     0ED5  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  7016     0ED6  0B89               	decfsz	9,f
  7017     0ED7  2ED2               	goto	u3365
  7018     0ED8  3001               	movlw	1
  7019     0ED9                     u3375:
  7020     0ED9  0020               	movlb	0	; select bank0
  7021     0EDA  35E0               	lslf	___fldiv@b,f
  7022     0EDB  0DE1               	rlf	___fldiv@b+1,f
  7023     0EDC  0DE2               	rlf	___fldiv@b+2,f
  7024     0EDD  0DE3               	rlf	___fldiv@b+3,f
  7025     0EDE  0B89               	decfsz	9,f
  7026     0EDF  2ED9               	goto	u3375
  7027     0EE0                     l4334:
  7028     0EE0  0021               	movlb	1	; select bank1
  7029     0EE1  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7030     0EE2  2EE4               	goto	u3381
  7031     0EE3  2EE5               	goto	u3380
  7032     0EE4                     u3381:
  7033     0EE4  2EE7               	goto	l4338
  7034     0EE5                     u3380:
  7035     0EE5                     l4336:
  7036     0EE5  0020               	movlb	0	; select bank0
  7037     0EE6  1460               	bsf	___fldiv@b,0
  7038     0EE7                     l4338:
  7039     0EE7  3001               	movlw	1
  7040     0EE8                     u3395:
  7041     0EE8  0021               	movlb	1	; select bank1
  7042     0EE9  35A7               	lslf	___fldiv@grs^(0+128),f
  7043     0EEA  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7044     0EEB  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7045     0EEC  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7046     0EED  0B89               	decfsz	9,f
  7047     0EEE  2EE8               	goto	u3395
  7048     0EEF                     l4340:
  7049     0EEF  0020               	movlb	0	; select bank0
  7050     0EF0  085F               	movf	___fldiv@a+3,w
  7051     0EF1  0021               	movlb	1	; select bank1
  7052     0EF2  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  7053     0EF3  1D03               	skipz
  7054     0EF4  2F05               	goto	u3405
  7055     0EF5  0020               	movlb	0	; select bank0
  7056     0EF6  085E               	movf	___fldiv@a+2,w
  7057     0EF7  0021               	movlb	1	; select bank1
  7058     0EF8  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  7059     0EF9  1D03               	skipz
  7060     0EFA  2F05               	goto	u3405
  7061     0EFB  0020               	movlb	0	; select bank0
  7062     0EFC  085D               	movf	___fldiv@a+1,w
  7063     0EFD  0021               	movlb	1	; select bank1
  7064     0EFE  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  7065     0EFF  1D03               	skipz
  7066     0F00  2F05               	goto	u3405
  7067     0F01  0020               	movlb	0	; select bank0
  7068     0F02  085C               	movf	___fldiv@a,w
  7069     0F03  0021               	movlb	1	; select bank1
  7070     0F04  0220               	subwf	___fldiv@rem^(0+128),w
  7071     0F05                     u3405:
  7072     0F05  1C03               	skipc
  7073     0F06  2F08               	goto	u3401
  7074     0F07  2F09               	goto	u3400
  7075     0F08                     u3401:
  7076     0F08  2F1A               	goto	l4346
  7077     0F09                     u3400:
  7078     0F09                     l4342:
  7079     0F09  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  7080     0F0A                     l4344:
  7081     0F0A  0020               	movlb	0	; select bank0
  7082     0F0B  085C               	movf	___fldiv@a,w
  7083     0F0C  0021               	movlb	1	; select bank1
  7084     0F0D  02A0               	subwf	___fldiv@rem^(0+128),f
  7085     0F0E  0020               	movlb	0	; select bank0
  7086     0F0F  085D               	movf	___fldiv@a+1,w
  7087     0F10  0021               	movlb	1	; select bank1
  7088     0F11  3BA1               	subwfb	(___fldiv@rem+1)^(0+128),f
  7089     0F12  0020               	movlb	0	; select bank0
  7090     0F13  085E               	movf	___fldiv@a+2,w
  7091     0F14  0021               	movlb	1	; select bank1
  7092     0F15  3BA2               	subwfb	(___fldiv@rem+2)^(0+128),f
  7093     0F16  0020               	movlb	0	; select bank0
  7094     0F17  085F               	movf	___fldiv@a+3,w
  7095     0F18  0021               	movlb	1	; select bank1
  7096     0F19  3BA3               	subwfb	(___fldiv@rem+3)^(0+128),f
  7097     0F1A                     l4346:
  7098     0F1A  3001               	movlw	1
  7099     0F1B  0020               	movlb	0	; select bank0
  7100     0F1C  00E4               	movwf	??___fldiv
  7101     0F1D  0864               	movf	??___fldiv,w
  7102     0F1E  0021               	movlb	1	; select bank1
  7103     0F1F  07AC               	addwf	___fldiv@aexp^(0+128),f
  7104     0F20                     l4348:
  7105     0F20  301A               	movlw	26
  7106     0F21  022C               	subwf	___fldiv@aexp^(0+128),w
  7107     0F22  1C03               	skipc
  7108     0F23  2F25               	goto	u3411
  7109     0F24  2F26               	goto	u3410
  7110     0F25                     u3411:
  7111     0F25  2ECC               	goto	l4330
  7112     0F26                     u3410:
  7113     0F26                     l4350:
  7114     0F26  0823               	movf	(___fldiv@rem+3)^(0+128),w
  7115     0F27  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  7116     0F28  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  7117     0F29  0420               	iorwf	___fldiv@rem^(0+128),w
  7118     0F2A  1903               	skipnz
  7119     0F2B  2F2D               	goto	u3421
  7120     0F2C  2F2E               	goto	u3420
  7121     0F2D                     u3421:
  7122     0F2D  2F4A               	goto	l4364
  7123     0F2E                     u3420:
  7124     0F2E                     l4352:
  7125     0F2E  1427               	bsf	___fldiv@grs^(0+128),0
  7126     0F2F  2F4A               	goto	l4364
  7127     0F30                     l4354:
  7128     0F30  3001               	movlw	1
  7129     0F31                     u3435:
  7130     0F31  35E0               	lslf	___fldiv@b,f
  7131     0F32  0DE1               	rlf	___fldiv@b+1,f
  7132     0F33  0DE2               	rlf	___fldiv@b+2,f
  7133     0F34  0DE3               	rlf	___fldiv@b+3,f
  7134     0F35  0B89               	decfsz	9,f
  7135     0F36  2F31               	goto	u3435
  7136     0F37                     l4356:
  7137     0F37  0021               	movlb	1	; select bank1
  7138     0F38  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7139     0F39  2F3B               	goto	u3441
  7140     0F3A  2F3C               	goto	u3440
  7141     0F3B                     u3441:
  7142     0F3B  2F3E               	goto	l4360
  7143     0F3C                     u3440:
  7144     0F3C                     l4358:
  7145     0F3C  0020               	movlb	0	; select bank0
  7146     0F3D  1460               	bsf	___fldiv@b,0
  7147     0F3E                     l4360:
  7148     0F3E  3001               	movlw	1
  7149     0F3F                     u3455:
  7150     0F3F  0021               	movlb	1	; select bank1
  7151     0F40  35A7               	lslf	___fldiv@grs^(0+128),f
  7152     0F41  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7153     0F42  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7154     0F43  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7155     0F44  0B89               	decfsz	9,f
  7156     0F45  2F3F               	goto	u3455
  7157     0F46                     l4362:
  7158     0F46  30FF               	movlw	255
  7159     0F47  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7160     0F48  30FF               	movlw	255
  7161     0F49  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7162     0F4A                     l4364:
  7163     0F4A  0020               	movlb	0	; select bank0
  7164     0F4B  1FE2               	btfss	___fldiv@b+2,7
  7165     0F4C  2F4E               	goto	u3461
  7166     0F4D  2F4F               	goto	u3460
  7167     0F4E                     u3461:
  7168     0F4E  2F30               	goto	l4354
  7169     0F4F                     u3460:
  7170     0F4F                     l4366:
  7171     0F4F  0021               	movlb	1	; select bank1
  7172     0F50  01AC               	clrf	___fldiv@aexp^(0+128)
  7173     0F51                     l4368:
  7174     0F51  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7175     0F52  2F54               	goto	u3471
  7176     0F53  2F55               	goto	u3470
  7177     0F54                     u3471:
  7178     0F54  2F79               	goto	l4376
  7179     0F55                     u3470:
  7180     0F55                     l4370:
  7181     0F55  30FF               	movlw	255
  7182     0F56  0527               	andwf	___fldiv@grs^(0+128),w
  7183     0F57  0020               	movlb	0	; select bank0
  7184     0F58  00E4               	movwf	??___fldiv
  7185     0F59  30FF               	movlw	255
  7186     0F5A  0021               	movlb	1	; select bank1
  7187     0F5B  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  7188     0F5C  0020               	movlb	0	; select bank0
  7189     0F5D  00E5               	movwf	??___fldiv+1
  7190     0F5E  30FF               	movlw	255
  7191     0F5F  0021               	movlb	1	; select bank1
  7192     0F60  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  7193     0F61  0020               	movlb	0	; select bank0
  7194     0F62  00E6               	movwf	??___fldiv+2
  7195     0F63  307F               	movlw	127
  7196     0F64  0021               	movlb	1	; select bank1
  7197     0F65  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  7198     0F66  0020               	movlb	0	; select bank0
  7199     0F67  00E7               	movwf	??___fldiv+3
  7200     0F68  0867               	movf	??___fldiv+3,w
  7201     0F69  0466               	iorwf	??___fldiv+2,w
  7202     0F6A  0465               	iorwf	??___fldiv+1,w
  7203     0F6B  0464               	iorwf	??___fldiv,w
  7204     0F6C  1903               	skipnz
  7205     0F6D  2F6F               	goto	u3481
  7206     0F6E  2F70               	goto	u3480
  7207     0F6F                     u3481:
  7208     0F6F  2F74               	goto	l1522
  7209     0F70                     u3480:
  7210     0F70                     l4372:
  7211     0F70  0021               	movlb	1	; select bank1
  7212     0F71  01AC               	clrf	___fldiv@aexp^(0+128)
  7213     0F72  0AAC               	incf	___fldiv@aexp^(0+128),f
  7214     0F73  2F79               	goto	l4376
  7215     0F74                     l1522:
  7216     0F74  1C60               	btfss	___fldiv@b,0
  7217     0F75  2F77               	goto	u3491
  7218     0F76  2F78               	goto	u3490
  7219     0F77                     u3491:
  7220     0F77  2F79               	goto	l4376
  7221     0F78                     u3490:
  7222     0F78  2F70               	goto	l4372
  7223     0F79                     l4376:
  7224     0F79  0021               	movlb	1	; select bank1
  7225     0F7A  082C               	movf	___fldiv@aexp^(0+128),w
  7226     0F7B  1903               	btfsc	3,2
  7227     0F7C  2F7E               	goto	u3501
  7228     0F7D  2F7F               	goto	u3500
  7229     0F7E                     u3501:
  7230     0F7E  2FA9               	goto	l4386
  7231     0F7F                     u3500:
  7232     0F7F                     l4378:
  7233     0F7F  3001               	movlw	1
  7234     0F80  0020               	movlb	0	; select bank0
  7235     0F81  07E0               	addwf	___fldiv@b,f
  7236     0F82  3000               	movlw	0
  7237     0F83  3DE1               	addwfc	___fldiv@b+1,f
  7238     0F84  3000               	movlw	0
  7239     0F85  3DE2               	addwfc	___fldiv@b+2,f
  7240     0F86  3000               	movlw	0
  7241     0F87  3DE3               	addwfc	___fldiv@b+3,f
  7242     0F88                     l4380:
  7243     0F88  1C63               	btfss	___fldiv@b+3,0
  7244     0F89  2F8B               	goto	u3511
  7245     0F8A  2F8C               	goto	u3510
  7246     0F8B                     u3511:
  7247     0F8B  2FA9               	goto	l4386
  7248     0F8C                     u3510:
  7249     0F8C                     l4382:
  7250     0F8C  0860               	movf	___fldiv@b,w
  7251     0F8D  00E4               	movwf	??___fldiv
  7252     0F8E  0861               	movf	___fldiv@b+1,w
  7253     0F8F  00E5               	movwf	??___fldiv+1
  7254     0F90  0862               	movf	___fldiv@b+2,w
  7255     0F91  00E6               	movwf	??___fldiv+2
  7256     0F92  0863               	movf	___fldiv@b+3,w
  7257     0F93  00E7               	movwf	??___fldiv+3
  7258     0F94  3001               	movlw	1
  7259     0F95  00E8               	movwf	??___fldiv+4
  7260     0F96                     u3525:
  7261     0F96  37E7               	asrf	??___fldiv+3,f
  7262     0F97  0CE6               	rrf	??___fldiv+2,f
  7263     0F98  0CE5               	rrf	??___fldiv+1,f
  7264     0F99  0CE4               	rrf	??___fldiv,f
  7265     0F9A                     u3520:
  7266     0F9A  0BE8               	decfsz	??___fldiv+4,f
  7267     0F9B  2F96               	goto	u3525
  7268     0F9C  0867               	movf	??___fldiv+3,w
  7269     0F9D  00E3               	movwf	___fldiv@b+3
  7270     0F9E  0866               	movf	??___fldiv+2,w
  7271     0F9F  00E2               	movwf	___fldiv@b+2
  7272     0FA0  0865               	movf	??___fldiv+1,w
  7273     0FA1  00E1               	movwf	___fldiv@b+1
  7274     0FA2  0864               	movf	??___fldiv,w
  7275     0FA3  00E0               	movwf	___fldiv@b
  7276     0FA4                     l4384:
  7277     0FA4  3001               	movlw	1
  7278     0FA5  0021               	movlb	1	; select bank1
  7279     0FA6  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7280     0FA7  3000               	movlw	0
  7281     0FA8  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7282     0FA9                     l4386:
  7283     0FA9  0021               	movlb	1	; select bank1
  7284     0FAA  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7285     0FAB  3A80               	xorlw	128
  7286     0FAC  0020               	movlb	0	; select bank0
  7287     0FAD  00E4               	movwf	??___fldiv
  7288     0FAE  3080               	movlw	128
  7289     0FAF  0264               	subwf	??___fldiv,w
  7290     0FB0  1D03               	skipz
  7291     0FB1  2FB5               	goto	u3535
  7292     0FB2  30FF               	movlw	255
  7293     0FB3  0021               	movlb	1	; select bank1
  7294     0FB4  0225               	subwf	___fldiv@new_exp^(0+128),w
  7295     0FB5                     u3535:
  7296     0FB5  1C03               	skipc
  7297     0FB6  2FB8               	goto	u3531
  7298     0FB7  2FB9               	goto	u3530
  7299     0FB8                     u3531:
  7300     0FB8  2FC7               	goto	l1527
  7301     0FB9                     u3530:
  7302     0FB9                     l4388:
  7303     0FB9  30FF               	movlw	255
  7304     0FBA  0021               	movlb	1	; select bank1
  7305     0FBB  00A5               	movwf	___fldiv@new_exp^(0+128)
  7306     0FBC  3000               	movlw	0
  7307     0FBD  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  7308     0FBE  3000               	movlw	0
  7309     0FBF  0020               	movlb	0	; select bank0
  7310     0FC0  00E3               	movwf	___fldiv@b+3
  7311     0FC1  3000               	movlw	0
  7312     0FC2  00E2               	movwf	___fldiv@b+2
  7313     0FC3  3000               	movlw	0
  7314     0FC4  00E1               	movwf	___fldiv@b+1
  7315     0FC5  3000               	movlw	0
  7316     0FC6  00E0               	movwf	___fldiv@b
  7317     0FC7                     l1527:
  7318     0FC7  0021               	movlb	1	; select bank1
  7319     0FC8  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7320     0FC9  3A80               	xorlw	128
  7321     0FCA  0020               	movlb	0	; select bank0
  7322     0FCB  00E4               	movwf	??___fldiv
  7323     0FCC  3080               	movlw	128
  7324     0FCD  0264               	subwf	??___fldiv,w
  7325     0FCE  1D03               	skipz
  7326     0FCF  2FD3               	goto	u3545
  7327     0FD0  3001               	movlw	1
  7328     0FD1  0021               	movlb	1	; select bank1
  7329     0FD2  0225               	subwf	___fldiv@new_exp^(0+128),w
  7330     0FD3                     u3545:
  7331     0FD3  1803               	skipnc
  7332     0FD4  2FD6               	goto	u3541
  7333     0FD5  2FD7               	goto	u3540
  7334     0FD6                     u3541:
  7335     0FD6  2FE5               	goto	l1528
  7336     0FD7                     u3540:
  7337     0FD7                     l4390:
  7338     0FD7  0021               	movlb	1	; select bank1
  7339     0FD8  01A5               	clrf	___fldiv@new_exp^(0+128)
  7340     0FD9  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  7341     0FDA                     l4392:
  7342     0FDA  3000               	movlw	0
  7343     0FDB  0020               	movlb	0	; select bank0
  7344     0FDC  00E3               	movwf	___fldiv@b+3
  7345     0FDD  3000               	movlw	0
  7346     0FDE  00E2               	movwf	___fldiv@b+2
  7347     0FDF  3000               	movlw	0
  7348     0FE0  00E1               	movwf	___fldiv@b+1
  7349     0FE1  3000               	movlw	0
  7350     0FE2  00E0               	movwf	___fldiv@b
  7351     0FE3                     l4394:
  7352     0FE3  0021               	movlb	1	; select bank1
  7353     0FE4  01A4               	clrf	___fldiv@sign^(0+128)
  7354     0FE5                     l1528:
  7355     0FE5  0021               	movlb	1	; select bank1
  7356     0FE6  0825               	movf	___fldiv@new_exp^(0+128),w
  7357     0FE7  00AB               	movwf	___fldiv@bexp^(0+128)
  7358     0FE8                     l4396:
  7359     0FE8  1C2B               	btfss	___fldiv@bexp^(0+128),0
  7360     0FE9  2FEB               	goto	u3551
  7361     0FEA  2FEC               	goto	u3550
  7362     0FEB                     u3551:
  7363     0FEB  2FEF               	goto	l4400
  7364     0FEC                     u3550:
  7365     0FEC                     l4398:
  7366     0FEC  0020               	movlb	0	; select bank0
  7367     0FED  17E2               	bsf	___fldiv@b+2,7
  7368     0FEE  2FF4               	goto	l1530
  7369     0FEF                     l4400:
  7370     0FEF  307F               	movlw	127
  7371     0FF0  0020               	movlb	0	; select bank0
  7372     0FF1  00E4               	movwf	??___fldiv
  7373     0FF2  0864               	movf	??___fldiv,w
  7374     0FF3  05E2               	andwf	___fldiv@b+2,f
  7375     0FF4                     l1530:
  7376     0FF4  0021               	movlb	1	; select bank1
  7377     0FF5  362B               	lsrf	___fldiv@bexp^(0+128),w
  7378     0FF6  0020               	movlb	0	; select bank0
  7379     0FF7  00E3               	movwf	___fldiv@b+3
  7380     0FF8  0021               	movlb	1	; select bank1
  7381     0FF9  0824               	movf	___fldiv@sign^(0+128),w
  7382     0FFA  0020               	movlb	0	; select bank0
  7383     0FFB  00E4               	movwf	??___fldiv
  7384     0FFC  0864               	movf	??___fldiv,w
  7385     0FFD  04E3               	iorwf	___fldiv@b+3,f
  7386     0FFE  2E79               	goto	l4310
  7387     0FFF                     l1508:
  7388     0FFF  0008               	return
  7389     1000                     __end_of___fldiv:
  7390                           
  7391                           	psect	text22
  7392     04E2                     __ptext22:	
  7393 ;; *************** function ___fladd *****************
  7394 ;; Defined at:
  7395 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcadd.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;  b               4   40[BANK0 ] unsigned char 
  7398 ;;  a               4   44[BANK0 ] unsigned char 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  grs             1   59[BANK0 ] unsigned char 
  7401 ;;  bexp            1   58[BANK0 ] unsigned char 
  7402 ;;  aexp            1   57[BANK0 ] unsigned char 
  7403 ;;  signs           1   56[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  4   40[BANK0 ] unsigned char 
  7406 ;; Registers used:
  7407 ;;		wreg, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7413 ;;      Params:         0       8       0       0       0       0       0       0
  7414 ;;      Locals:         0       4       0       0       0       0       0       0
  7415 ;;      Temps:          0       8       0       0       0       0       0       0
  7416 ;;      Totals:         0      20       0       0       0       0       0       0
  7417 ;;Total ram usage:       20 bytes
  7418 ;; Hardware stack levels used: 1
  7419 ;; Hardware stack levels required when called: 7
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_ReadData
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427     04E2                     ___fladd:	
  7428                           ;psect for function ___fladd
  7429                           
  7430     04E2                     l4072:	
  7431                           ;incstack = 0
  7432                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7433                           
  7434     04E2  0020               	movlb	0	; select bank0
  7435     04E3  084B               	movf	___fladd@b+3,w
  7436     04E4  3980               	andlw	128
  7437     04E5  00D8               	movwf	___fladd@signs
  7438     04E6                     l4074:
  7439     04E6  354B               	lslf	___fladd@b+3,w
  7440     04E7  00DA               	movwf	___fladd@bexp
  7441     04E8                     l4076:
  7442     04E8  1FCA               	btfss	___fladd@b+2,7
  7443     04E9  2CEB               	goto	u2841
  7444     04EA  2CEC               	goto	u2840
  7445     04EB                     u2841:
  7446     04EB  2CED               	goto	l4080
  7447     04EC                     u2840:
  7448     04EC                     l4078:
  7449     04EC  145A               	bsf	___fladd@bexp,0
  7450     04ED                     l4080:
  7451     04ED  085A               	movf	___fladd@bexp,w
  7452     04EE  1903               	btfsc	3,2
  7453     04EF  2CF1               	goto	u2851
  7454     04F0  2CF2               	goto	u2850
  7455     04F1                     u2851:
  7456     04F1  2D02               	goto	l4090
  7457     04F2                     u2850:
  7458     04F2                     l4082:
  7459     04F2  0A5A               	incf	___fladd@bexp,w
  7460     04F3  1D03               	btfss	3,2
  7461     04F4  2CF6               	goto	u2861
  7462     04F5  2CF7               	goto	u2860
  7463     04F6                     u2861:
  7464     04F6  2CFF               	goto	l4086
  7465     04F7                     u2860:
  7466     04F7                     l4084:
  7467     04F7  3000               	movlw	0
  7468     04F8  00CB               	movwf	___fladd@b+3
  7469     04F9  3000               	movlw	0
  7470     04FA  00CA               	movwf	___fladd@b+2
  7471     04FB  3000               	movlw	0
  7472     04FC  00C9               	movwf	___fladd@b+1
  7473     04FD  3000               	movlw	0
  7474     04FE  00C8               	movwf	___fladd@b
  7475     04FF                     l4086:
  7476     04FF  17CA               	bsf	___fladd@b+2,7
  7477     0500                     l4088:
  7478     0500  01CB               	clrf	___fladd@b+3
  7479     0501  2D0A               	goto	l4092
  7480     0502                     l4090:
  7481     0502  3000               	movlw	0
  7482     0503  00CB               	movwf	___fladd@b+3
  7483     0504  3000               	movlw	0
  7484     0505  00CA               	movwf	___fladd@b+2
  7485     0506  3000               	movlw	0
  7486     0507  00C9               	movwf	___fladd@b+1
  7487     0508  3000               	movlw	0
  7488     0509  00C8               	movwf	___fladd@b
  7489     050A                     l4092:
  7490     050A  084F               	movf	___fladd@a+3,w
  7491     050B  3980               	andlw	128
  7492     050C  00D9               	movwf	___fladd@aexp
  7493     050D                     l4094:
  7494     050D  0859               	movf	___fladd@aexp,w
  7495     050E  0658               	xorwf	___fladd@signs,w
  7496     050F  1903               	skipnz
  7497     0510  2D12               	goto	u2871
  7498     0511  2D13               	goto	u2870
  7499     0512                     u2871:
  7500     0512  2D14               	goto	l4098
  7501     0513                     u2870:
  7502     0513                     l4096:
  7503     0513  1758               	bsf	___fladd@signs,6
  7504     0514                     l4098:
  7505     0514  354F               	lslf	___fladd@a+3,w
  7506     0515  00D9               	movwf	___fladd@aexp
  7507     0516                     l4100:
  7508     0516  1FCE               	btfss	___fladd@a+2,7
  7509     0517  2D19               	goto	u2881
  7510     0518  2D1A               	goto	u2880
  7511     0519                     u2881:
  7512     0519  2D1B               	goto	l4104
  7513     051A                     u2880:
  7514     051A                     l4102:
  7515     051A  1459               	bsf	___fladd@aexp,0
  7516     051B                     l4104:
  7517     051B  0859               	movf	___fladd@aexp,w
  7518     051C  1903               	btfsc	3,2
  7519     051D  2D1F               	goto	u2891
  7520     051E  2D20               	goto	u2890
  7521     051F                     u2891:
  7522     051F  2D30               	goto	l4114
  7523     0520                     u2890:
  7524     0520                     l4106:
  7525     0520  0A59               	incf	___fladd@aexp,w
  7526     0521  1D03               	btfss	3,2
  7527     0522  2D24               	goto	u2901
  7528     0523  2D25               	goto	u2900
  7529     0524                     u2901:
  7530     0524  2D2D               	goto	l4110
  7531     0525                     u2900:
  7532     0525                     l4108:
  7533     0525  3000               	movlw	0
  7534     0526  00CF               	movwf	___fladd@a+3
  7535     0527  3000               	movlw	0
  7536     0528  00CE               	movwf	___fladd@a+2
  7537     0529  3000               	movlw	0
  7538     052A  00CD               	movwf	___fladd@a+1
  7539     052B  3000               	movlw	0
  7540     052C  00CC               	movwf	___fladd@a
  7541     052D                     l4110:
  7542     052D  17CE               	bsf	___fladd@a+2,7
  7543     052E                     l4112:
  7544     052E  01CF               	clrf	___fladd@a+3
  7545     052F  2D38               	goto	l1450
  7546     0530                     l4114:
  7547     0530  3000               	movlw	0
  7548     0531  00CF               	movwf	___fladd@a+3
  7549     0532  3000               	movlw	0
  7550     0533  00CE               	movwf	___fladd@a+2
  7551     0534  3000               	movlw	0
  7552     0535  00CD               	movwf	___fladd@a+1
  7553     0536  3000               	movlw	0
  7554     0537  00CC               	movwf	___fladd@a
  7555     0538                     l1450:
  7556     0538  085A               	movf	___fladd@bexp,w
  7557     0539  0259               	subwf	___fladd@aexp,w
  7558     053A  1803               	skipnc
  7559     053B  2D3D               	goto	u2911
  7560     053C  2D3E               	goto	u2910
  7561     053D                     u2911:
  7562     053D  2D64               	goto	l4150
  7563     053E                     u2910:
  7564     053E                     l4116:
  7565     053E  1F58               	btfss	___fladd@signs,6
  7566     053F  2D41               	goto	u2921
  7567     0540  2D42               	goto	u2920
  7568     0541                     u2921:
  7569     0541  2D46               	goto	l4120
  7570     0542                     u2920:
  7571     0542                     l4118:
  7572     0542  3080               	movlw	128
  7573     0543  00D0               	movwf	??___fladd
  7574     0544  0850               	movf	??___fladd,w
  7575     0545  06D8               	xorwf	___fladd@signs,f
  7576     0546                     l4120:
  7577     0546  085A               	movf	___fladd@bexp,w
  7578     0547  00DB               	movwf	___fladd@grs
  7579     0548                     l4122:
  7580     0548  0859               	movf	___fladd@aexp,w
  7581     0549  00DA               	movwf	___fladd@bexp
  7582     054A                     l4124:
  7583     054A  085B               	movf	___fladd@grs,w
  7584     054B  00D9               	movwf	___fladd@aexp
  7585     054C                     l4126:
  7586     054C  0848               	movf	___fladd@b,w
  7587     054D  00DB               	movwf	___fladd@grs
  7588     054E                     l4128:
  7589     054E  084C               	movf	___fladd@a,w
  7590     054F  00C8               	movwf	___fladd@b
  7591     0550                     l4130:
  7592     0550  085B               	movf	___fladd@grs,w
  7593     0551  00CC               	movwf	___fladd@a
  7594     0552                     l4132:
  7595     0552  0849               	movf	___fladd@b+1,w
  7596     0553  00DB               	movwf	___fladd@grs
  7597     0554                     l4134:
  7598     0554  084D               	movf	___fladd@a+1,w
  7599     0555  00C9               	movwf	___fladd@b+1
  7600     0556                     l4136:
  7601     0556  085B               	movf	___fladd@grs,w
  7602     0557  00CD               	movwf	___fladd@a+1
  7603     0558                     l4138:
  7604     0558  084A               	movf	___fladd@b+2,w
  7605     0559  00DB               	movwf	___fladd@grs
  7606     055A                     l4140:
  7607     055A  084E               	movf	___fladd@a+2,w
  7608     055B  00CA               	movwf	___fladd@b+2
  7609     055C                     l4142:
  7610     055C  085B               	movf	___fladd@grs,w
  7611     055D  00CE               	movwf	___fladd@a+2
  7612     055E                     l4144:
  7613     055E  084B               	movf	___fladd@b+3,w
  7614     055F  00DB               	movwf	___fladd@grs
  7615     0560                     l4146:
  7616     0560  084F               	movf	___fladd@a+3,w
  7617     0561  00CB               	movwf	___fladd@b+3
  7618     0562                     l4148:
  7619     0562  085B               	movf	___fladd@grs,w
  7620     0563  00CF               	movwf	___fladd@a+3
  7621     0564                     l4150:
  7622     0564  01DB               	clrf	___fladd@grs
  7623     0565                     l4152:
  7624     0565  0859               	movf	___fladd@aexp,w
  7625     0566  00D0               	movwf	??___fladd
  7626     0567  01D1               	clrf	??___fladd+1
  7627     0568  0851               	movf	??___fladd+1,w
  7628     0569  00D3               	movwf	??___fladd+3
  7629     056A  085A               	movf	___fladd@bexp,w
  7630     056B  0250               	subwf	??___fladd,w
  7631     056C  00D2               	movwf	??___fladd+2
  7632     056D  1C03               	skipc
  7633     056E  03D3               	decf	??___fladd+3,f
  7634     056F  0853               	movf	??___fladd+3,w
  7635     0570  3A80               	xorlw	128
  7636     0571  00D4               	movwf	??___fladd+4
  7637     0572  3080               	movlw	128
  7638     0573  0254               	subwf	??___fladd+4,w
  7639     0574  1D03               	skipz
  7640     0575  2D78               	goto	u2935
  7641     0576  301A               	movlw	26
  7642     0577  0252               	subwf	??___fladd+2,w
  7643     0578                     u2935:
  7644     0578  1C03               	skipc
  7645     0579  2D7B               	goto	u2931
  7646     057A  2D7C               	goto	u2930
  7647     057B                     u2931:
  7648     057B  2DAE               	goto	l4168
  7649     057C                     u2930:
  7650     057C                     l4154:
  7651     057C  0020               	movlb	0	; select bank0
  7652     057D  084B               	movf	___fladd@b+3,w
  7653     057E  044A               	iorwf	___fladd@b+2,w
  7654     057F  0449               	iorwf	___fladd@b+1,w
  7655     0580  0448               	iorwf	___fladd@b,w
  7656     0581  1D03               	skipz
  7657     0582  2D84               	goto	u2941
  7658     0583  2D86               	goto	u2940
  7659     0584                     u2941:
  7660     0584  3001               	movlw	1
  7661     0585  2D87               	goto	u2950
  7662     0586                     u2940:
  7663     0586  3000               	movlw	0
  7664     0587                     u2950:
  7665     0587  00DB               	movwf	___fladd@grs
  7666     0588  3000               	movlw	0
  7667     0589  00CB               	movwf	___fladd@b+3
  7668     058A  3000               	movlw	0
  7669     058B  00CA               	movwf	___fladd@b+2
  7670     058C  3000               	movlw	0
  7671     058D  00C9               	movwf	___fladd@b+1
  7672     058E  3000               	movlw	0
  7673     058F  00C8               	movwf	___fladd@b
  7674     0590  0859               	movf	___fladd@aexp,w
  7675     0591  00DA               	movwf	___fladd@bexp
  7676     0592  2DB5               	goto	l1454
  7677     0593                     l1456:
  7678     0593  1C5B               	btfss	___fladd@grs,0
  7679     0594  2D96               	goto	u2961
  7680     0595  2D97               	goto	u2960
  7681     0596                     u2961:
  7682     0596  2D9B               	goto	l4158
  7683     0597                     u2960:
  7684     0597                     l4156:
  7685     0597  365B               	lsrf	___fladd@grs,w
  7686     0598  3801               	iorlw	1
  7687     0599  00DB               	movwf	___fladd@grs
  7688     059A  2D9D               	goto	l4160
  7689     059B                     l4158:
  7690     059B  1003               	clrc
  7691     059C  0CDB               	rrf	___fladd@grs,f
  7692     059D                     l4160:
  7693     059D  1C48               	btfss	___fladd@b,0
  7694     059E  2DA0               	goto	u2971
  7695     059F  2DA1               	goto	u2970
  7696     05A0                     u2971:
  7697     05A0  2DA2               	goto	l4164
  7698     05A1                     u2970:
  7699     05A1                     l4162:
  7700     05A1  17DB               	bsf	___fladd@grs,7
  7701     05A2                     l4164:
  7702     05A2  3001               	movlw	1
  7703     05A3  00D0               	movwf	??___fladd
  7704     05A4                     u2985:
  7705     05A4  37CB               	asrf	___fladd@b+3,f
  7706     05A5  0CCA               	rrf	___fladd@b+2,f
  7707     05A6  0CC9               	rrf	___fladd@b+1,f
  7708     05A7  0CC8               	rrf	___fladd@b,f
  7709     05A8  0BD0               	decfsz	??___fladd& (0+127),f
  7710     05A9  2DA4               	goto	u2985
  7711     05AA                     l4166:
  7712     05AA  3001               	movlw	1
  7713     05AB  00D0               	movwf	??___fladd
  7714     05AC  0850               	movf	??___fladd,w
  7715     05AD  07DA               	addwf	___fladd@bexp,f
  7716     05AE                     l4168:
  7717     05AE  0020               	movlb	0	; select bank0
  7718     05AF  0859               	movf	___fladd@aexp,w
  7719     05B0  025A               	subwf	___fladd@bexp,w
  7720     05B1  1C03               	skipc
  7721     05B2  2DB4               	goto	u2991
  7722     05B3  2DB5               	goto	u2990
  7723     05B4                     u2991:
  7724     05B4  2D93               	goto	l1456
  7725     05B5                     u2990:
  7726     05B5                     l1454:
  7727     05B5  1B58               	btfsc	___fladd@signs,6
  7728     05B6  2DB8               	goto	u3001
  7729     05B7  2DB9               	goto	u3000
  7730     05B8                     u3001:
  7731     05B8  2DEF               	goto	l4194
  7732     05B9                     u3000:
  7733     05B9                     l4170:
  7734     05B9  085A               	movf	___fladd@bexp,w
  7735     05BA  1D03               	btfss	3,2
  7736     05BB  2DBD               	goto	u3011
  7737     05BC  2DBE               	goto	u3010
  7738     05BD                     u3011:
  7739     05BD  2DC7               	goto	l4176
  7740     05BE                     u3010:
  7741     05BE                     l4172:
  7742     05BE  3000               	movlw	0
  7743     05BF  00CB               	movwf	?___fladd+3
  7744     05C0  3000               	movlw	0
  7745     05C1  00CA               	movwf	?___fladd+2
  7746     05C2  3000               	movlw	0
  7747     05C3  00C9               	movwf	?___fladd+1
  7748     05C4  3000               	movlw	0
  7749     05C5  00C8               	movwf	?___fladd
  7750     05C6  2EE9               	goto	l1463
  7751     05C7                     l4176:
  7752     05C7  084C               	movf	___fladd@a,w
  7753     05C8  07C8               	addwf	___fladd@b,f
  7754     05C9  084D               	movf	___fladd@a+1,w
  7755     05CA  3DC9               	addwfc	___fladd@b+1,f
  7756     05CB  084E               	movf	___fladd@a+2,w
  7757     05CC  3DCA               	addwfc	___fladd@b+2,f
  7758     05CD  084F               	movf	___fladd@a+3,w
  7759     05CE  3DCB               	addwfc	___fladd@b+3,f
  7760     05CF                     l4178:
  7761     05CF  1C4B               	btfss	___fladd@b+3,0
  7762     05D0  2DD2               	goto	u3021
  7763     05D1  2DD3               	goto	u3020
  7764     05D2                     u3021:
  7765     05D2  2E7B               	goto	l4228
  7766     05D3                     u3020:
  7767     05D3                     l4180:
  7768     05D3  1C5B               	btfss	___fladd@grs,0
  7769     05D4  2DD6               	goto	u3031
  7770     05D5  2DD7               	goto	u3030
  7771     05D6                     u3031:
  7772     05D6  2DDB               	goto	l4184
  7773     05D7                     u3030:
  7774     05D7                     l4182:
  7775     05D7  365B               	lsrf	___fladd@grs,w
  7776     05D8  3801               	iorlw	1
  7777     05D9  00DB               	movwf	___fladd@grs
  7778     05DA  2DDD               	goto	l4186
  7779     05DB                     l4184:
  7780     05DB  1003               	clrc
  7781     05DC  0CDB               	rrf	___fladd@grs,f
  7782     05DD                     l4186:
  7783     05DD  1C48               	btfss	___fladd@b,0
  7784     05DE  2DE0               	goto	u3041
  7785     05DF  2DE1               	goto	u3040
  7786     05E0                     u3041:
  7787     05E0  2DE2               	goto	l4190
  7788     05E1                     u3040:
  7789     05E1                     l4188:
  7790     05E1  17DB               	bsf	___fladd@grs,7
  7791     05E2                     l4190:
  7792     05E2  3001               	movlw	1
  7793     05E3  00D0               	movwf	??___fladd
  7794     05E4                     u3055:
  7795     05E4  37CB               	asrf	___fladd@b+3,f
  7796     05E5  0CCA               	rrf	___fladd@b+2,f
  7797     05E6  0CC9               	rrf	___fladd@b+1,f
  7798     05E7  0CC8               	rrf	___fladd@b,f
  7799     05E8  0BD0               	decfsz	??___fladd& (0+127),f
  7800     05E9  2DE4               	goto	u3055
  7801     05EA                     l4192:
  7802     05EA  3001               	movlw	1
  7803     05EB  00D0               	movwf	??___fladd
  7804     05EC  0850               	movf	??___fladd,w
  7805     05ED  07DA               	addwf	___fladd@bexp,f
  7806     05EE  2E7B               	goto	l4228
  7807     05EF                     l4194:
  7808     05EF  084B               	movf	___fladd@b+3,w
  7809     05F0  3A80               	xorlw	128
  7810     05F1  00D0               	movwf	??___fladd
  7811     05F2  084F               	movf	___fladd@a+3,w
  7812     05F3  3A80               	xorlw	128
  7813     05F4  0250               	subwf	??___fladd,w
  7814     05F5  1D03               	skipz
  7815     05F6  2E01               	goto	u3063
  7816     05F7  084E               	movf	___fladd@a+2,w
  7817     05F8  024A               	subwf	___fladd@b+2,w
  7818     05F9  1D03               	skipz
  7819     05FA  2E01               	goto	u3063
  7820     05FB  084D               	movf	___fladd@a+1,w
  7821     05FC  0249               	subwf	___fladd@b+1,w
  7822     05FD  1D03               	skipz
  7823     05FE  2E01               	goto	u3063
  7824     05FF  084C               	movf	___fladd@a,w
  7825     0600  0248               	subwf	___fladd@b,w
  7826     0601                     u3063:
  7827     0601  1803               	skipnc
  7828     0602  2E04               	goto	u3061
  7829     0603  2E05               	goto	u3060
  7830     0604                     u3061:
  7831     0604  2E3D               	goto	l4204
  7832     0605                     u3060:
  7833     0605                     l4196:
  7834     0605  30FF               	movlw	255
  7835     0606  00D0               	movwf	??___fladd
  7836     0607  30FF               	movlw	255
  7837     0608  00D1               	movwf	??___fladd+1
  7838     0609  30FF               	movlw	255
  7839     060A  00D2               	movwf	??___fladd+2
  7840     060B  30FF               	movlw	255
  7841     060C  00D3               	movwf	??___fladd+3
  7842     060D  0848               	movf	___fladd@b,w
  7843     060E  024C               	subwf	___fladd@a,w
  7844     060F  00D4               	movwf	??___fladd+4
  7845     0610  0849               	movf	___fladd@b+1,w
  7846     0611  3B4D               	subwfb	___fladd@a+1,w
  7847     0612  00D5               	movwf	??___fladd+5
  7848     0613  084A               	movf	___fladd@b+2,w
  7849     0614  3B4E               	subwfb	___fladd@a+2,w
  7850     0615  00D6               	movwf	??___fladd+6
  7851     0616  084B               	movf	___fladd@b+3,w
  7852     0617  3B4F               	subwfb	___fladd@a+3,w
  7853     0618  00D7               	movwf	??___fladd+7
  7854     0619  0854               	movf	??___fladd+4,w
  7855     061A  07D0               	addwf	??___fladd,f
  7856     061B  0855               	movf	??___fladd+5,w
  7857     061C  3DD1               	addwfc	??___fladd+1,f
  7858     061D  0856               	movf	??___fladd+6,w
  7859     061E  3DD2               	addwfc	??___fladd+2,f
  7860     061F  0857               	movf	??___fladd+7,w
  7861     0620  3DD3               	addwfc	??___fladd+3,f
  7862     0621  0853               	movf	??___fladd+3,w
  7863     0622  00CB               	movwf	___fladd@b+3
  7864     0623  0852               	movf	??___fladd+2,w
  7865     0624  00CA               	movwf	___fladd@b+2
  7866     0625  0851               	movf	??___fladd+1,w
  7867     0626  00C9               	movwf	___fladd@b+1
  7868     0627  0850               	movf	??___fladd,w
  7869     0628  00C8               	movwf	___fladd@b
  7870     0629                     l4198:
  7871     0629  3080               	movlw	128
  7872     062A  00D0               	movwf	??___fladd
  7873     062B  0850               	movf	??___fladd,w
  7874     062C  06D8               	xorwf	___fladd@signs,f
  7875     062D  09DB               	comf	___fladd@grs,f
  7876     062E  0ADB               	incf	___fladd@grs,f
  7877     062F                     l4200:
  7878     062F  085B               	movf	___fladd@grs,w
  7879     0630  1D03               	btfss	3,2
  7880     0631  2E33               	goto	u3071
  7881     0632  2E34               	goto	u3070
  7882     0633                     u3071:
  7883     0633  2E45               	goto	l1471
  7884     0634                     u3070:
  7885     0634                     l4202:
  7886     0634  3001               	movlw	1
  7887     0635  07C8               	addwf	___fladd@b,f
  7888     0636  3000               	movlw	0
  7889     0637  3DC9               	addwfc	___fladd@b+1,f
  7890     0638  3000               	movlw	0
  7891     0639  3DCA               	addwfc	___fladd@b+2,f
  7892     063A  3000               	movlw	0
  7893     063B  3DCB               	addwfc	___fladd@b+3,f
  7894     063C  2E45               	goto	l1471
  7895     063D                     l4204:
  7896     063D  084C               	movf	___fladd@a,w
  7897     063E  02C8               	subwf	___fladd@b,f
  7898     063F  084D               	movf	___fladd@a+1,w
  7899     0640  3BC9               	subwfb	___fladd@b+1,f
  7900     0641  084E               	movf	___fladd@a+2,w
  7901     0642  3BCA               	subwfb	___fladd@b+2,f
  7902     0643  084F               	movf	___fladd@a+3,w
  7903     0644  3BCB               	subwfb	___fladd@b+3,f
  7904     0645                     l1471:
  7905     0645  084B               	movf	___fladd@b+3,w
  7906     0646  044A               	iorwf	___fladd@b+2,w
  7907     0647  0449               	iorwf	___fladd@b+1,w
  7908     0648  0448               	iorwf	___fladd@b,w
  7909     0649  1D03               	skipz
  7910     064A  2E4C               	goto	u3081
  7911     064B  2E4D               	goto	u3080
  7912     064C                     u3081:
  7913     064C  2E77               	goto	l4226
  7914     064D                     u3080:
  7915     064D                     l4206:
  7916     064D  085B               	movf	___fladd@grs,w
  7917     064E  1D03               	btfss	3,2
  7918     064F  2E51               	goto	u3091
  7919     0650  2E52               	goto	u3090
  7920     0651                     u3091:
  7921     0651  2E77               	goto	l4226
  7922     0652                     u3090:
  7923     0652                     l4208:
  7924     0652  3000               	movlw	0
  7925     0653  00CB               	movwf	?___fladd+3
  7926     0654  3000               	movlw	0
  7927     0655  00CA               	movwf	?___fladd+2
  7928     0656  3000               	movlw	0
  7929     0657  00C9               	movwf	?___fladd+1
  7930     0658  3000               	movlw	0
  7931     0659  00C8               	movwf	?___fladd
  7932     065A  2EE9               	goto	l1463
  7933     065B                     l4212:
  7934     065B  3001               	movlw	1
  7935     065C                     u3105:
  7936     065C  35C8               	lslf	___fladd@b,f
  7937     065D  0DC9               	rlf	___fladd@b+1,f
  7938     065E  0DCA               	rlf	___fladd@b+2,f
  7939     065F  0DCB               	rlf	___fladd@b+3,f
  7940     0660  0B89               	decfsz	9,f
  7941     0661  2E5C               	goto	u3105
  7942     0662                     l4214:
  7943     0662  1FDB               	btfss	___fladd@grs,7
  7944     0663  2E65               	goto	u3111
  7945     0664  2E66               	goto	u3110
  7946     0665                     u3111:
  7947     0665  2E67               	goto	l1475
  7948     0666                     u3110:
  7949     0666                     l4216:
  7950     0666  1448               	bsf	___fladd@b,0
  7951     0667                     l1475:
  7952     0667  1C5B               	btfss	___fladd@grs,0
  7953     0668  2E6A               	goto	u3121
  7954     0669  2E6B               	goto	u3120
  7955     066A                     u3121:
  7956     066A  2E6E               	goto	l4220
  7957     066B                     u3120:
  7958     066B                     l4218:
  7959     066B  1403               	setc
  7960     066C  0DDB               	rlf	___fladd@grs,f
  7961     066D  2E70               	goto	l4222
  7962     066E                     l4220:
  7963     066E  1003               	clrc
  7964     066F  0DDB               	rlf	___fladd@grs,f
  7965     0670                     l4222:
  7966     0670  085A               	movf	___fladd@bexp,w
  7967     0671  1903               	btfsc	3,2
  7968     0672  2E74               	goto	u3131
  7969     0673  2E75               	goto	u3130
  7970     0674                     u3131:
  7971     0674  2E77               	goto	l4226
  7972     0675                     u3130:
  7973     0675                     l4224:
  7974     0675  3001               	movlw	1
  7975     0676  02DA               	subwf	___fladd@bexp,f
  7976     0677                     l4226:
  7977     0677  1FCA               	btfss	___fladd@b+2,7
  7978     0678  2E7A               	goto	u3141
  7979     0679  2E7B               	goto	u3140
  7980     067A                     u3141:
  7981     067A  2E5B               	goto	l4212
  7982     067B                     u3140:
  7983     067B                     l4228:
  7984     067B  01D9               	clrf	___fladd@aexp
  7985     067C                     l4230:
  7986     067C  1FDB               	btfss	___fladd@grs,7
  7987     067D  2E7F               	goto	u3151
  7988     067E  2E80               	goto	u3150
  7989     067F                     u3151:
  7990     067F  2E8E               	goto	l4238
  7991     0680                     u3150:
  7992     0680                     l4232:
  7993     0680  085B               	movf	___fladd@grs,w
  7994     0681  397F               	andlw	127
  7995     0682  1903               	btfsc	3,2
  7996     0683  2E85               	goto	u3161
  7997     0684  2E86               	goto	u3160
  7998     0685                     u3161:
  7999     0685  2E89               	goto	l1481
  8000     0686                     u3160:
  8001     0686                     l4234:
  8002     0686  01D9               	clrf	___fladd@aexp
  8003     0687  0AD9               	incf	___fladd@aexp,f
  8004     0688  2E8E               	goto	l4238
  8005     0689                     l1481:
  8006     0689  1C48               	btfss	___fladd@b,0
  8007     068A  2E8C               	goto	u3171
  8008     068B  2E8D               	goto	u3170
  8009     068C                     u3171:
  8010     068C  2E8E               	goto	l4238
  8011     068D                     u3170:
  8012     068D  2E86               	goto	l4234
  8013     068E                     l4238:
  8014     068E  0859               	movf	___fladd@aexp,w
  8015     068F  1903               	btfsc	3,2
  8016     0690  2E92               	goto	u3181
  8017     0691  2E93               	goto	u3180
  8018     0692                     u3181:
  8019     0692  2EC0               	goto	l1484
  8020     0693                     u3180:
  8021     0693                     l4240:
  8022     0693  3001               	movlw	1
  8023     0694  07C8               	addwf	___fladd@b,f
  8024     0695  3000               	movlw	0
  8025     0696  3DC9               	addwfc	___fladd@b+1,f
  8026     0697  3000               	movlw	0
  8027     0698  3DCA               	addwfc	___fladd@b+2,f
  8028     0699  3000               	movlw	0
  8029     069A  3DCB               	addwfc	___fladd@b+3,f
  8030     069B                     l4242:
  8031     069B  1C4B               	btfss	___fladd@b+3,0
  8032     069C  2E9E               	goto	u3191
  8033     069D  2E9F               	goto	u3190
  8034     069E                     u3191:
  8035     069E  2EC0               	goto	l1484
  8036     069F                     u3190:
  8037     069F                     l4244:
  8038     069F  0848               	movf	___fladd@b,w
  8039     06A0  00D0               	movwf	??___fladd
  8040     06A1  0849               	movf	___fladd@b+1,w
  8041     06A2  00D1               	movwf	??___fladd+1
  8042     06A3  084A               	movf	___fladd@b+2,w
  8043     06A4  00D2               	movwf	??___fladd+2
  8044     06A5  084B               	movf	___fladd@b+3,w
  8045     06A6  00D3               	movwf	??___fladd+3
  8046     06A7  3001               	movlw	1
  8047     06A8  00D4               	movwf	??___fladd+4
  8048     06A9                     u3205:
  8049     06A9  37D3               	asrf	??___fladd+3,f
  8050     06AA  0CD2               	rrf	??___fladd+2,f
  8051     06AB  0CD1               	rrf	??___fladd+1,f
  8052     06AC  0CD0               	rrf	??___fladd,f
  8053     06AD                     u3200:
  8054     06AD  0BD4               	decfsz	??___fladd+4,f
  8055     06AE  2EA9               	goto	u3205
  8056     06AF  0853               	movf	??___fladd+3,w
  8057     06B0  00CB               	movwf	___fladd@b+3
  8058     06B1  0852               	movf	??___fladd+2,w
  8059     06B2  00CA               	movwf	___fladd@b+2
  8060     06B3  0851               	movf	??___fladd+1,w
  8061     06B4  00C9               	movwf	___fladd@b+1
  8062     06B5  0850               	movf	??___fladd,w
  8063     06B6  00C8               	movwf	___fladd@b
  8064     06B7  0A5A               	incf	___fladd@bexp,w
  8065     06B8  1903               	btfsc	3,2
  8066     06B9  2EBB               	goto	u3211
  8067     06BA  2EBC               	goto	u3210
  8068     06BB                     u3211:
  8069     06BB  2EC0               	goto	l1484
  8070     06BC                     u3210:
  8071     06BC                     l4246:
  8072     06BC  3001               	movlw	1
  8073     06BD  00D0               	movwf	??___fladd
  8074     06BE  0850               	movf	??___fladd,w
  8075     06BF  07DA               	addwf	___fladd@bexp,f
  8076     06C0                     l1484:
  8077     06C0  0A5A               	incf	___fladd@bexp,w
  8078     06C1  1903               	btfsc	3,2
  8079     06C2  2EC4               	goto	u3221
  8080     06C3  2EC5               	goto	u3220
  8081     06C4                     u3221:
  8082     06C4  2ECA               	goto	l4250
  8083     06C5                     u3220:
  8084     06C5                     l4248:
  8085     06C5  085A               	movf	___fladd@bexp,w
  8086     06C6  1D03               	btfss	3,2
  8087     06C7  2EC9               	goto	u3231
  8088     06C8  2ECA               	goto	u3230
  8089     06C9                     u3231:
  8090     06C9  2ED8               	goto	l4256
  8091     06CA                     u3230:
  8092     06CA                     l4250:
  8093     06CA  3000               	movlw	0
  8094     06CB  00CB               	movwf	___fladd@b+3
  8095     06CC  3000               	movlw	0
  8096     06CD  00CA               	movwf	___fladd@b+2
  8097     06CE  3000               	movlw	0
  8098     06CF  00C9               	movwf	___fladd@b+1
  8099     06D0  3000               	movlw	0
  8100     06D1  00C8               	movwf	___fladd@b
  8101     06D2                     l4252:
  8102     06D2  085A               	movf	___fladd@bexp,w
  8103     06D3  1D03               	btfss	3,2
  8104     06D4  2ED6               	goto	u3241
  8105     06D5  2ED7               	goto	u3240
  8106     06D6                     u3241:
  8107     06D6  2ED8               	goto	l4256
  8108     06D7                     u3240:
  8109     06D7                     l4254:
  8110     06D7  01D8               	clrf	___fladd@signs
  8111     06D8                     l4256:
  8112     06D8  1C5A               	btfss	___fladd@bexp,0
  8113     06D9  2EDB               	goto	u3251
  8114     06DA  2EDC               	goto	u3250
  8115     06DB                     u3251:
  8116     06DB  2EDE               	goto	l4260
  8117     06DC                     u3250:
  8118     06DC                     l4258:
  8119     06DC  17CA               	bsf	___fladd@b+2,7
  8120     06DD  2EE2               	goto	l1492
  8121     06DE                     l4260:
  8122     06DE  307F               	movlw	127
  8123     06DF  00D0               	movwf	??___fladd
  8124     06E0  0850               	movf	??___fladd,w
  8125     06E1  05CA               	andwf	___fladd@b+2,f
  8126     06E2                     l1492:
  8127     06E2  365A               	lsrf	___fladd@bexp,w
  8128     06E3  00CB               	movwf	___fladd@b+3
  8129     06E4                     l4262:
  8130     06E4  1FD8               	btfss	___fladd@signs,7
  8131     06E5  2EE7               	goto	u3261
  8132     06E6  2EE8               	goto	u3260
  8133     06E7                     u3261:
  8134     06E7  2EE9               	goto	l1493
  8135     06E8                     u3260:
  8136     06E8                     l4264:
  8137     06E8  17CB               	bsf	___fladd@b+3,7
  8138     06E9                     l1493:
  8139     06E9                     l1463:
  8140     06E9  0008               	return
  8141     06EA                     __end_of___fladd:
  8142                           
  8143                           	psect	text23
  8144     16C9                     __ptext23:	
  8145 ;; *************** function _I2C_WriteNBytes *****************
  8146 ;; Defined at:
  8147 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  address         1    wreg     unsigned char 
  8150 ;;  data            1    8[BANK0 ] PTR unsigned char 
  8151 ;;		 -> SHT30_CMD_MEASURE_H_Enable(2), 
  8152 ;;  len             2    9[BANK0 ] unsigned int 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  address         1   11[BANK0 ] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8164 ;;      Params:         0       3       0       0       0       0       0       0
  8165 ;;      Locals:         0       1       0       0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0
  8167 ;;      Totals:         0       4       0       0       0       0       0       0
  8168 ;;Total ram usage:        4 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 10
  8171 ;; This function calls:
  8172 ;;		_I2C_Close
  8173 ;;		_I2C_MasterWrite
  8174 ;;		_I2C_Open
  8175 ;;		_I2C_SetAddressNackCallback
  8176 ;;		_I2C_SetBuffer
  8177 ;; This function is called by:
  8178 ;;		_ReadData
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182     16C9                     _I2C_WriteNBytes:	
  8183                           ;psect for function _I2C_WriteNBytes
  8184                           
  8185                           
  8186                           ;incstack = 0
  8187                           ; Regs used in _I2C_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8188                           ;I2C_WriteNBytes@address stored from wreg
  8189     16C9  0020               	movlb	0	; select bank0
  8190     16CA  00AB               	movwf	I2C_WriteNBytes@address
  8191     16CB                     l3850:
  8192     16CB                     l3852:	
  8193                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  8194                           
  8195     16CB  0020               	movlb	0	; select bank0
  8196     16CC  082B               	movf	I2C_WriteNBytes@address,w
  8197     16CD  3197  27BA  3196   	fcall	_I2C_Open
  8198     16D0  3A00               	xorlw	0
  8199     16D1  1903               	skipnz
  8200     16D2  2ED4               	goto	u2631
  8201     16D3  2ED5               	goto	u2630
  8202     16D4                     u2631:
  8203     16D4  2ECB               	goto	l3852
  8204     16D5                     u2630:
  8205     16D5                     l3854:
  8206                           
  8207                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8208     16D5  0020               	movlb	0	; select bank0
  8209     16D6  082A               	movf	I2C_WriteNBytes@len+1,w
  8210     16D7  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8211     16D8  0829               	movf	I2C_WriteNBytes@len,w
  8212     16D9  00A0               	movwf	I2C_SetBuffer@bufferSize
  8213     16DA  0828               	movf	I2C_WriteNBytes@data,w
  8214     16DB  3194  2470  3196   	fcall	_I2C_SetBuffer
  8215     16DE                     l3856:
  8216                           
  8217                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8218     16DE  3000               	movlw	0
  8219     16DF  0020               	movlb	0	; select bank0
  8220     16E0  00A4               	movwf	I2C_SetAddressNackCallback@cb
  8221     16E1  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
  8222     16E2  3000               	movlw	0
  8223     16E3  00A6               	movwf	I2C_SetAddressNackCallback@ptr
  8224     16E4  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
  8225     16E5  3193  2373  3196   	fcall	_I2C_SetAddressNackCallback
  8226     16E8                     l3858:
  8227                           
  8228                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8229     16E8  3192  22D8  3196   	fcall	_I2C_MasterWrite
  8230     16EB                     l3860:	
  8231                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  8232                           
  8233     16EB  3194  24D1  3196   	fcall	_I2C_Close
  8234     16EE  3A01               	xorlw	1
  8235     16EF  1903               	skipnz
  8236     16F0  2EF2               	goto	u2641
  8237     16F1  2EF3               	goto	u2640
  8238     16F2                     u2641:
  8239     16F2  2EEB               	goto	l3860
  8240     16F3                     u2640:
  8241     16F3                     l71:
  8242     16F3  0008               	return
  8243     16F4                     __end_of_I2C_WriteNBytes:
  8244                           
  8245                           	psect	text24
  8246     1373                     __ptext24:	
  8247 ;; *************** function _I2C_SetAddressNackCallback *****************
  8248 ;; Defined at:
  8249 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  8252 ;;		 -> NULL(1), 
  8253 ;;  ptr             2    6[BANK0 ] PTR void 
  8254 ;;		 -> NULL(0), 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8266 ;;      Params:         0       4       0       0       0       0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0
  8269 ;;      Totals:         0       4       0       0       0       0       0       0
  8270 ;;Total ram usage:        4 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 8
  8273 ;; This function calls:
  8274 ;;		_I2C_SetCallback
  8275 ;; This function is called by:
  8276 ;;		_I2C_WriteNBytes
  8277 ;;		_I2C_Read1ByteRegister
  8278 ;;		_I2C_Read2ByteRegister
  8279 ;;		_I2C_Write1ByteRegister
  8280 ;;		_I2C_Write2ByteRegister
  8281 ;;		_I2C_ReadDataBlock
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285     1373                     _I2C_SetAddressNackCallback:	
  8286                           ;psect for function _I2C_SetAddressNackCallback
  8287                           
  8288     1373                     l3694:	
  8289                           ;incstack = 0
  8290                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8291                           
  8292                           
  8293                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8294     1373  0020               	movlb	0	; select bank0
  8295     1374  0825               	movf	I2C_SetAddressNackCallback@cb+1,w
  8296     1375  00A1               	movwf	I2C_SetCallback@cb+1
  8297     1376  0824               	movf	I2C_SetAddressNackCallback@cb,w
  8298     1377  00A0               	movwf	I2C_SetCallback@cb
  8299     1378  0826               	movf	I2C_SetAddressNackCallback@ptr,w
  8300     1379  00A2               	movwf	I2C_SetCallback@ptr
  8301     137A  3002               	movlw	2
  8302     137B  3196  264B  3193   	fcall	_I2C_SetCallback
  8303     137E                     l550:
  8304     137E  0008               	return
  8305     137F                     __end_of_I2C_SetAddressNackCallback:
  8306                           
  8307                           	psect	text25
  8308     164B                     __ptext25:	
  8309 ;; *************** function _I2C_SetCallback *****************
  8310 ;; Defined at:
  8311 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  idx             1    wreg     enum E3130
  8314 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8315 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8316 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8317 ;;  ptr             1    2[BANK0 ] PTR void 
  8318 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8319 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  idx             1    3[BANK0 ] enum E3130
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      void 
  8324 ;; Registers used:
  8325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8331 ;;      Params:         0       3       0       0       0       0       0       0
  8332 ;;      Locals:         0       1       0       0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0
  8334 ;;      Totals:         0       4       0       0       0       0       0       0
  8335 ;;Total ram usage:        4 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 7
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_I2C_SetAddressNackCallback
  8342 ;;		_I2C_SetWriteCollisionCallback
  8343 ;;		_I2C_SetDataNackCallback
  8344 ;;		_I2C_SetTimeoutCallback
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348     164B                     _I2C_SetCallback:	
  8349                           ;psect for function _I2C_SetCallback
  8350                           
  8351                           
  8352                           ;incstack = 0
  8353                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8354                           ;I2C_SetCallback@idx stored from wreg
  8355     164B  0020               	movlb	0	; select bank0
  8356     164C  00A3               	movwf	I2C_SetCallback@idx
  8357     164D                     l3602:
  8358                           
  8359                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8360     164D  0820               	movf	I2C_SetCallback@cb,w
  8361     164E  0421               	iorwf	I2C_SetCallback@cb+1,w
  8362     164F  1903               	btfsc	3,2
  8363     1650  2E52               	goto	u2411
  8364     1651  2E53               	goto	u2410
  8365     1652                     u2411:
  8366     1652  2E64               	goto	l3606
  8367     1653                     u2410:
  8368     1653                     l3604:
  8369                           
  8370                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8371     1653  3523               	lslf	I2C_SetCallback@idx,w
  8372     1654  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8373     1655  0086               	movwf	6
  8374     1656  3001               	movlw	1	; select bank2/3
  8375     1657  0087               	movwf	7
  8376     1658  0820               	movf	I2C_SetCallback@cb,w
  8377     1659  3FC0               	movwi [0]fsr1
  8378     165A  0821               	movf	I2C_SetCallback@cb+1,w
  8379     165B  3FC1               	movwi [1]fsr1
  8380                           
  8381                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8382     165C  0823               	movf	I2C_SetCallback@idx,w
  8383     165D  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8384     165E  0086               	movwf	6
  8385     165F  3001               	movlw	1	; select bank2/3
  8386     1660  0087               	movwf	7
  8387     1661  0822               	movf	I2C_SetCallback@ptr,w
  8388     1662  0081               	movwf	1
  8389                           
  8390                           ;mcc_generated_files/i2c_master.c: 310:     }
  8391     1663  2E73               	goto	l564
  8392     1664                     l3606:
  8393                           
  8394                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8395     1664  3523               	lslf	I2C_SetCallback@idx,w
  8396     1665  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8397     1666  0086               	movwf	6
  8398     1667  3001               	movlw	1	; select bank2/3
  8399     1668  0087               	movwf	7
  8400     1669  3063               	movlw	low _I2C_CallbackReturnStop
  8401     166A  3FC0               	movwi [0]fsr1
  8402     166B  3012               	movlw	high _I2C_CallbackReturnStop
  8403     166C  3FC1               	movwi [1]fsr1
  8404                           
  8405                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8406     166D  0823               	movf	I2C_SetCallback@idx,w
  8407     166E  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8408     166F  0086               	movwf	6
  8409     1670  3001               	movlw	1	; select bank2/3
  8410     1671  0087               	movwf	7
  8411     1672  0181               	clrf	1
  8412     1673                     l564:
  8413     1673  0008               	return
  8414     1674                     __end_of_I2C_SetCallback:
  8415                           
  8416                           	psect	text26
  8417     12D8                     __ptext26:	
  8418 ;; *************** function _I2C_MasterWrite *****************
  8419 ;; Defined at:
  8420 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;		None
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      enum E358
  8427 ;; Registers used:
  8428 ;;		wreg, status,2, status,0, pclath, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8434 ;;      Params:         0       0       0       0       0       0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0
  8436 ;;      Temps:          0       0       0       0       0       0       0       0
  8437 ;;      Totals:         0       0       0       0       0       0       0       0
  8438 ;;Total ram usage:        0 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 9
  8441 ;; This function calls:
  8442 ;;		_I2C_MasterOperation
  8443 ;; This function is called by:
  8444 ;;		_I2C_WriteNBytes
  8445 ;;		_I2C_Read1ByteRegister
  8446 ;;		_I2C_Read2ByteRegister
  8447 ;;		_I2C_Write1ByteRegister
  8448 ;;		_I2C_Write2ByteRegister
  8449 ;;		_I2C_ReadDataBlock
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           
  8453     12D8                     _I2C_MasterWrite:	
  8454                           ;psect for function _I2C_MasterWrite
  8455                           
  8456     12D8                     l3696:	
  8457                           ;incstack = 0
  8458                           ; Regs used in _I2C_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  8459                           
  8460                           
  8461                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8462     12D8  3000               	movlw	0
  8463     12D9  3195  2523  3192   	fcall	_I2C_MasterOperation
  8464     12DC                     l534:
  8465     12DC  0008               	return
  8466     12DD                     __end_of_I2C_MasterWrite:
  8467                           
  8468                           	psect	text27
  8469     1541                     __ptext27:	
  8470 ;; *************** function _I2C_ReadNBytes *****************
  8471 ;; Defined at:
  8472 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  address         1    wreg     unsigned char 
  8475 ;;  data            1    4[BANK0 ] PTR unsigned char 
  8476 ;;		 -> ReadData@aData(6), 
  8477 ;;  len             2    5[BANK0 ] unsigned int 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  address         1    7[BANK0 ] unsigned char 
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8489 ;;      Params:         0       3       0       0       0       0       0       0
  8490 ;;      Locals:         0       1       0       0       0       0       0       0
  8491 ;;      Temps:          0       0       0       0       0       0       0       0
  8492 ;;      Totals:         0       4       0       0       0       0       0       0
  8493 ;;Total ram usage:        4 bytes
  8494 ;; Hardware stack levels used: 1
  8495 ;; Hardware stack levels required when called: 10
  8496 ;; This function calls:
  8497 ;;		_I2C_Close
  8498 ;;		_I2C_MasterRead
  8499 ;;		_I2C_Open
  8500 ;;		_I2C_SetBuffer
  8501 ;; This function is called by:
  8502 ;;		_ReadData
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506     1541                     _I2C_ReadNBytes:	
  8507                           ;psect for function _I2C_ReadNBytes
  8508                           
  8509                           
  8510                           ;incstack = 0
  8511                           ; Regs used in _I2C_ReadNBytes: [wreg+status,2+status,0+pclath+cstack]
  8512                           ;I2C_ReadNBytes@address stored from wreg
  8513     1541  0020               	movlb	0	; select bank0
  8514     1542  00A7               	movwf	I2C_ReadNBytes@address
  8515     1543                     l3862:
  8516     1543                     l3864:	
  8517                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  8518                           
  8519     1543  0020               	movlb	0	; select bank0
  8520     1544  0827               	movf	I2C_ReadNBytes@address,w
  8521     1545  3197  27BA  3195   	fcall	_I2C_Open
  8522     1548  3A00               	xorlw	0
  8523     1549  1903               	skipnz
  8524     154A  2D4C               	goto	u2651
  8525     154B  2D4D               	goto	u2650
  8526     154C                     u2651:
  8527     154C  2D43               	goto	l3864
  8528     154D                     u2650:
  8529     154D                     l3866:
  8530                           
  8531                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  8532     154D  0020               	movlb	0	; select bank0
  8533     154E  0826               	movf	I2C_ReadNBytes@len+1,w
  8534     154F  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8535     1550  0825               	movf	I2C_ReadNBytes@len,w
  8536     1551  00A0               	movwf	I2C_SetBuffer@bufferSize
  8537     1552  0824               	movf	I2C_ReadNBytes@data,w
  8538     1553  3194  2470  3195   	fcall	_I2C_SetBuffer
  8539                           
  8540                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  8541     1556  3192  22D3  3195   	fcall	_I2C_MasterRead
  8542     1559                     l3868:	
  8543                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  8544                           
  8545     1559  3194  24D1  3195   	fcall	_I2C_Close
  8546     155C  3A01               	xorlw	1
  8547     155D  1903               	skipnz
  8548     155E  2D60               	goto	u2661
  8549     155F  2D61               	goto	u2660
  8550     1560                     u2661:
  8551     1560  2D59               	goto	l3868
  8552     1561                     u2660:
  8553     1561                     l80:
  8554     1561  0008               	return
  8555     1562                     __end_of_I2C_ReadNBytes:
  8556                           
  8557                           	psect	text28
  8558     1470                     __ptext28:	
  8559 ;; *************** function _I2C_SetBuffer *****************
  8560 ;; Defined at:
  8561 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;  buffer          1    wreg     PTR void 
  8564 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8565 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8566 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8567 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8568 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;  buffer          1    2[BANK0 ] PTR void 
  8571 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8572 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8573 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8574 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8584 ;;      Params:         0       2       0       0       0       0       0       0
  8585 ;;      Locals:         0       1       0       0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0
  8587 ;;      Totals:         0       3       0       0       0       0       0       0
  8588 ;;Total ram usage:        3 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 7
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_I2C_WriteNBytes
  8595 ;;		_I2C_ReadNBytes
  8596 ;;		_I2C_Read1ByteRegister
  8597 ;;		_I2C_Read2ByteRegister
  8598 ;;		_I2C_Write1ByteRegister
  8599 ;;		_I2C_Write2ByteRegister
  8600 ;;		_I2C_ReadDataBlock
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604     1470                     _I2C_SetBuffer:	
  8605                           ;psect for function _I2C_SetBuffer
  8606                           
  8607                           
  8608                           ;incstack = 0
  8609                           ; Regs used in _I2C_SetBuffer: [wreg]
  8610                           ;I2C_SetBuffer@buffer stored from wreg
  8611     1470  0020               	movlb	0	; select bank0
  8612     1471  00A2               	movwf	I2C_SetBuffer@buffer
  8613     1472                     l3688:
  8614                           
  8615                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8616     1472  0022               	movlb	2	; select bank2
  8617     1473  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
  8618     1474  2C76               	goto	u2491
  8619     1475  2C77               	goto	u2490
  8620     1476                     u2491:
  8621     1476  2C84               	goto	l541
  8622     1477                     u2490:
  8623     1477                     l3690:
  8624                           
  8625                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8626     1477  0020               	movlb	0	; select bank0
  8627     1478  0822               	movf	I2C_SetBuffer@buffer,w
  8628     1479  0022               	movlb	2	; select bank2
  8629     147A  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
  8630                           
  8631                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8632     147B  0020               	movlb	0	; select bank0
  8633     147C  0821               	movf	I2C_SetBuffer@bufferSize+1,w
  8634     147D  0022               	movlb	2	; select bank2
  8635     147E  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
  8636     147F  0020               	movlb	0	; select bank0
  8637     1480  0820               	movf	I2C_SetBuffer@bufferSize,w
  8638     1481  0022               	movlb	2	; select bank2
  8639     1482  00B8               	movwf	(_I2C_Status^(0+256)+24)
  8640     1483                     l3692:
  8641                           
  8642                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8643     1483  11BC               	bcf	(_I2C_Status^(0+256)+28),3
  8644     1484                     l541:
  8645     1484  0008               	return
  8646     1485                     __end_of_I2C_SetBuffer:
  8647                           
  8648                           	psect	text29
  8649     17BA                     __ptext29:	
  8650 ;; *************** function _I2C_Open *****************
  8651 ;; Defined at:
  8652 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  address         1    wreg     unsigned char 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  address         1    2[BANK0 ] unsigned char 
  8657 ;;  returnValue     1    3[BANK0 ] enum E358
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      enum E358
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, pclath, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8667 ;;      Params:         0       0       0       0       0       0       0       0
  8668 ;;      Locals:         0       2       0       0       0       0       0       0
  8669 ;;      Temps:          0       0       0       0       0       0       0       0
  8670 ;;      Totals:         0       2       0       0       0       0       0       0
  8671 ;;Total ram usage:        2 bytes
  8672 ;; Hardware stack levels used: 1
  8673 ;; Hardware stack levels required when called: 8
  8674 ;; This function calls:
  8675 ;;		_I2C_MasterClearIrq
  8676 ;;		_I2C_MasterEnableIrq
  8677 ;;		_I2C_MasterOpen
  8678 ;;		_I2C_SetInterruptHandler
  8679 ;; This function is called by:
  8680 ;;		_I2C_WriteNBytes
  8681 ;;		_I2C_ReadNBytes
  8682 ;;		_I2C_Read1ByteRegister
  8683 ;;		_I2C_Read2ByteRegister
  8684 ;;		_I2C_Write1ByteRegister
  8685 ;;		_I2C_Write2ByteRegister
  8686 ;;		_I2C_ReadDataBlock
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690     17BA                     _I2C_Open:	
  8691                           ;psect for function _I2C_Open
  8692                           
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  8696                           ;I2C_Open@address stored from wreg
  8697     17BA  0020               	movlb	0	; select bank0
  8698     17BB  00A2               	movwf	I2C_Open@address
  8699     17BC                     l3650:
  8700                           
  8701                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8702     17BC  01A3               	clrf	I2C_Open@returnValue
  8703     17BD  0AA3               	incf	I2C_Open@returnValue,f
  8704                           
  8705                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8706     17BE  0022               	movlb	2	; select bank2
  8707     17BF  193C               	btfsc	(_I2C_Status^(0+256)+28),2
  8708     17C0  2FC2               	goto	u2481
  8709     17C1  2FC3               	goto	u2480
  8710     17C2                     u2481:
  8711     17C2  2FFD               	goto	l3682
  8712     17C3                     u2480:
  8713     17C3                     l3652:
  8714                           
  8715                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8716     17C3  0020               	movlb	0	; select bank0
  8717     17C4  0822               	movf	I2C_Open@address,w
  8718     17C5  0022               	movlb	2	; select bank2
  8719     17C6  00B6               	movwf	(_I2C_Status^(0+256)+22)
  8720     17C7                     l3654:
  8721                           
  8722                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8723     17C7  10BC               	bcf	(_I2C_Status^(0+256)+28),1
  8724     17C8                     l3656:
  8725                           
  8726                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8727     17C8  153C               	bsf	(_I2C_Status^(0+256)+28),2
  8728     17C9                     l3658:
  8729                           
  8730                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8731     17C9  103C               	bcf	(_I2C_Status^(0+256)+28),0
  8732                           
  8733                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8734     17CA  300E               	movlw	14
  8735     17CB  00BA               	movwf	(_I2C_Status^(0+256)+26)
  8736                           
  8737                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8738     17CC  30F4               	movlw	244
  8739     17CD  00B4               	movwf	(_I2C_Status^(0+256)+20)
  8740     17CE  3001               	movlw	1
  8741     17CF  00B5               	movwf	(_I2C_Status^(0+256)+21)
  8742     17D0                     l3660:
  8743                           
  8744                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8745     17D0  15BC               	bsf	(_I2C_Status^(0+256)+28),3
  8746                           
  8747                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8748     17D1  3063               	movlw	low _I2C_CallbackReturnStop
  8749     17D2  00A0               	movwf	_I2C_Status^(0+256)
  8750     17D3  3012               	movlw	high _I2C_CallbackReturnStop
  8751     17D4  00A1               	movwf	(_I2C_Status^(0+256)+1)
  8752     17D5                     l3662:
  8753                           
  8754                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8755     17D5  01AC               	clrf	(low ((_I2C_Status| (0+256)+12)))^0
  8756     17D6                     l3664:
  8757                           
  8758                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8759     17D6  3063               	movlw	low _I2C_CallbackReturnStop
  8760     17D7  00A2               	movwf	(low ((_I2C_Status| (0+256)+2)))^0
  8761     17D8  3012               	movlw	high _I2C_CallbackReturnStop
  8762     17D9  00A3               	movwf	((low ((_I2C_Status| (0+256)+2)))^0+1)
  8763                           
  8764                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8765     17DA  01AD               	clrf	(low ((_I2C_Status| (0+256)+13)))^0
  8766     17DB                     l3666:
  8767                           
  8768                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8769     17DB  3063               	movlw	low _I2C_CallbackReturnStop
  8770     17DC  00A4               	movwf	(low ((_I2C_Status| (0+256)+4)))^0
  8771     17DD  3012               	movlw	high _I2C_CallbackReturnStop
  8772     17DE  00A5               	movwf	((low ((_I2C_Status| (0+256)+4)))^0+1)
  8773     17DF                     l3668:
  8774                           
  8775                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8776     17DF  01AE               	clrf	(low ((_I2C_Status| (0+256)+14)))^0
  8777                           
  8778                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8779     17E0  3063               	movlw	low _I2C_CallbackReturnStop
  8780     17E1  00A6               	movwf	(low ((_I2C_Status| (0+256)+6)))^0
  8781     17E2  3012               	movlw	high _I2C_CallbackReturnStop
  8782     17E3  00A7               	movwf	((low ((_I2C_Status| (0+256)+6)))^0+1)
  8783     17E4                     l3670:
  8784                           
  8785                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8786     17E4  01AF               	clrf	(low ((_I2C_Status| (0+256)+15)))^0
  8787     17E5                     l3672:
  8788                           
  8789                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8790     17E5  3002               	movlw	low _I2C_CallbackReturnReset
  8791     17E6  00A8               	movwf	(low ((_I2C_Status| (0+256)+8)))^0
  8792     17E7  3000               	movlw	high _I2C_CallbackReturnReset
  8793     17E8  00A9               	movwf	((low ((_I2C_Status| (0+256)+8)))^0+1)
  8794                           
  8795                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8796     17E9  01B0               	clrf	(low ((_I2C_Status| (0+256)+16)))^0
  8797     17EA                     l3674:
  8798                           
  8799                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  8800     17EA  3099               	movlw	low _I2C_MasterIsr
  8801     17EB  0020               	movlb	0	; select bank0
  8802     17EC  00A0               	movwf	I2C_SetInterruptHandler@InterruptHandler
  8803     17ED  3012               	movlw	high _I2C_MasterIsr
  8804     17EE  00A1               	movwf	I2C_SetInterruptHandler@InterruptHandler+1
  8805     17EF  3193  230B  3197   	fcall	_I2C_SetInterruptHandler
  8806     17F2                     l3676:
  8807                           
  8808                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  8809     17F2  3192  227A  3197   	fcall	_I2C_MasterClearIrq
  8810     17F5                     l3678:
  8811                           
  8812                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  8813     17F5  3193  23B0  3197   	fcall	_I2C_MasterOpen
  8814     17F8                     l3680:
  8815                           
  8816                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  8817     17F8  3192  2286  3197   	fcall	_I2C_MasterEnableIrq
  8818                           
  8819                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  8820     17FB  0020               	movlb	0	; select bank0
  8821     17FC  01A3               	clrf	I2C_Open@returnValue
  8822     17FD                     l3682:
  8823                           
  8824                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  8825     17FD  0020               	movlb	0	; select bank0
  8826     17FE  0823               	movf	I2C_Open@returnValue,w
  8827     17FF                     l518:
  8828     17FF  0008               	return
  8829     1800                     __end_of_I2C_Open:
  8830                           
  8831                           	psect	text30
  8832     130B                     __ptext30:	
  8833 ;; *************** function _I2C_SetInterruptHandler *****************
  8834 ;; Defined at:
  8835 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8838 ;;		 -> I2C_MasterIsr(1), 
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  1    wreg      void 
  8843 ;; Registers used:
  8844 ;;		wreg
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8850 ;;      Params:         0       2       0       0       0       0       0       0
  8851 ;;      Locals:         0       0       0       0       0       0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0
  8853 ;;      Totals:         0       2       0       0       0       0       0       0
  8854 ;;Total ram usage:        2 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 7
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_I2C_Open
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864     130B                     _I2C_SetInterruptHandler:	
  8865                           ;psect for function _I2C_SetInterruptHandler
  8866                           
  8867     130B                     l3562:	
  8868                           ;incstack = 0
  8869                           ; Regs used in _I2C_SetInterruptHandler: [wreg]
  8870                           
  8871                           
  8872                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  8873     130B  0020               	movlb	0	; select bank0
  8874     130C  0821               	movf	I2C_SetInterruptHandler@InterruptHandler+1,w
  8875     130D  0021               	movlb	1	; select bank1
  8876     130E  00E2               	movwf	(_MSSP_InterruptHandler+1)^(0+128)
  8877     130F  0020               	movlb	0	; select bank0
  8878     1310  0820               	movf	I2C_SetInterruptHandler@InterruptHandler,w
  8879     1311  0021               	movlb	1	; select bank1
  8880     1312  00E1               	movwf	_MSSP_InterruptHandler^(0+128)
  8881     1313                     l559:
  8882     1313  0008               	return
  8883     1314                     __end_of_I2C_SetInterruptHandler:
  8884                           
  8885                           	psect	text31
  8886     13B0                     __ptext31:	
  8887 ;; *************** function _I2C_MasterOpen *****************
  8888 ;; Defined at:
  8889 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;		None
  8892 ;; Auto vars:     Size  Location     Type
  8893 ;;		None
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  1    wreg      _Bool 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8903 ;;      Params:         0       0       0       0       0       0       0       0
  8904 ;;      Locals:         0       0       0       0       0       0       0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0
  8906 ;;      Totals:         0       0       0       0       0       0       0       0
  8907 ;;Total ram usage:        0 bytes
  8908 ;; Hardware stack levels used: 1
  8909 ;; Hardware stack levels required when called: 7
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_I2C_Open
  8914 ;; This function uses a non-reentrant model
  8915 ;;
  8916                           
  8917     13B0                     _I2C_MasterOpen:	
  8918                           ;psect for function _I2C_MasterOpen
  8919                           
  8920     13B0                     l3566:	
  8921                           ;incstack = 0
  8922                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  8923                           
  8924                           
  8925                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  8926     13B0  0024               	movlb	4	; select bank4
  8927     13B1  1A95               	btfsc	21,5	;volatile
  8928     13B2  2BB4               	goto	u2381
  8929     13B3  2BB5               	goto	u2380
  8930     13B4                     u2381:
  8931     13B4  2BBC               	goto	l683
  8932     13B5                     u2380:
  8933     13B5                     l3568:
  8934                           
  8935                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  8936     13B5  0194               	clrf	20	;volatile
  8937     13B6                     l3570:
  8938                           
  8939                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  8940     13B6  3008               	movlw	8
  8941     13B7  0095               	movwf	21	;volatile
  8942     13B8                     l3572:
  8943                           
  8944                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  8945     13B8  0196               	clrf	22	;volatile
  8946                           
  8947                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x13;
  8948     13B9  3013               	movlw	19
  8949     13BA  0092               	movwf	18	;volatile
  8950     13BB                     l3574:
  8951                           
  8952                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  8953     13BB  1695               	bsf	21,5	;volatile
  8954     13BC                     l683:
  8955     13BC  0008               	return
  8956     13BD                     __end_of_I2C_MasterOpen:
  8957                           
  8958                           	psect	text32
  8959     1286                     __ptext32:	
  8960 ;; *************** function _I2C_MasterEnableIrq *****************
  8961 ;; Defined at:
  8962 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		None
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8976 ;;      Params:         0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 7
  8983 ;; This function calls:
  8984 ;;		Nothing
  8985 ;; This function is called by:
  8986 ;;		_I2C_Open
  8987 ;;		_I2C_SetTimeOut
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991     1286                     _I2C_MasterEnableIrq:	
  8992                           ;psect for function _I2C_MasterEnableIrq
  8993                           
  8994     1286                     l3578:	
  8995                           ;incstack = 0
  8996                           ; Regs used in _I2C_MasterEnableIrq: []
  8997                           
  8998                           
  8999                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  9000     1286  0021               	movlb	1	; select bank1
  9001     1287  1591               	bsf	17,3	;volatile
  9002     1288                     l725:
  9003     1288  0008               	return
  9004     1289                     __end_of_I2C_MasterEnableIrq:
  9005                           
  9006                           	psect	text33
  9007     12D3                     __ptext33:	
  9008 ;; *************** function _I2C_MasterRead *****************
  9009 ;; Defined at:
  9010 ;;		line 247 in file "mcc_generated_files/i2c_master.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;		None
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      enum E358
  9017 ;; Registers used:
  9018 ;;		wreg, status,2, status,0, pclath, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9024 ;;      Params:         0       0       0       0       0       0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0
  9027 ;;      Totals:         0       0       0       0       0       0       0       0
  9028 ;;Total ram usage:        0 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 9
  9031 ;; This function calls:
  9032 ;;		_I2C_MasterOperation
  9033 ;; This function is called by:
  9034 ;;		_I2C_ReadNBytes
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038     12D3                     _I2C_MasterRead:	
  9039                           ;psect for function _I2C_MasterRead
  9040                           
  9041     12D3                     l3718:	
  9042                           ;incstack = 0
  9043                           ; Regs used in _I2C_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  9044                           
  9045                           
  9046                           ;mcc_generated_files/i2c_master.c: 249:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9047     12D3  3001               	movlw	1
  9048     12D4  3195  2523  3192   	fcall	_I2C_MasterOperation
  9049     12D7                     l531:
  9050     12D7  0008               	return
  9051     12D8                     __end_of_I2C_MasterRead:
  9052                           
  9053                           	psect	text34
  9054     1523                     __ptext34:	
  9055 ;; *************** function _I2C_MasterOperation *****************
  9056 ;; Defined at:
  9057 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  read            1    wreg     _Bool 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  read            1    0[BANK0 ] _Bool 
  9062 ;;  returnValue     1    1[BANK0 ] enum E358
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      enum E358
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0, pclath, cstack
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9072 ;;      Params:         0       0       0       0       0       0       0       0
  9073 ;;      Locals:         0       2       0       0       0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0
  9075 ;;      Totals:         0       2       0       0       0       0       0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used: 1
  9078 ;; Hardware stack levels required when called: 8
  9079 ;; This function calls:
  9080 ;;		_I2C_MasterStart
  9081 ;; This function is called by:
  9082 ;;		_I2C_MasterRead
  9083 ;;		_I2C_MasterWrite
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087     1523                     _I2C_MasterOperation:	
  9088                           ;psect for function _I2C_MasterOperation
  9089                           
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _I2C_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
  9093                           ;I2C_MasterOperation@read stored from wreg
  9094     1523  0020               	movlb	0	; select bank0
  9095     1524  00A0               	movwf	I2C_MasterOperation@read
  9096     1525                     l3584:
  9097                           
  9098                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9099     1525  01A1               	clrf	I2C_MasterOperation@returnValue
  9100     1526  0AA1               	incf	I2C_MasterOperation@returnValue,f
  9101                           
  9102                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  9103     1527  0022               	movlb	2	; select bank2
  9104     1528  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9105     1529  2D2B               	goto	u2391
  9106     152A  2D2C               	goto	u2390
  9107     152B                     u2391:
  9108     152B  2D3E               	goto	l3598
  9109     152C                     u2390:
  9110     152C                     l3586:
  9111                           
  9112                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  9113     152C  14BC               	bsf	(_I2C_Status^(0+256)+28),1
  9114     152D                     l3588:
  9115                           
  9116                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  9117     152D  0020               	movlb	0	; select bank0
  9118     152E  01A1               	clrf	I2C_MasterOperation@returnValue
  9119     152F                     l3590:
  9120                           
  9121                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  9122     152F  0820               	movf	I2C_MasterOperation@read,w
  9123     1530  1903               	btfsc	3,2
  9124     1531  2D33               	goto	u2401
  9125     1532  2D34               	goto	u2400
  9126     1533                     u2401:
  9127     1533  2D38               	goto	l3594
  9128     1534                     u2400:
  9129     1534                     l3592:
  9130                           
  9131                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9132     1534  0022               	movlb	2	; select bank2
  9133     1535  01BA               	clrf	(_I2C_Status^(0+256)+26)
  9134     1536  0ABA               	incf	(_I2C_Status^(0+256)+26),f
  9135                           
  9136                           ;mcc_generated_files/i2c_master.c: 237:         }
  9137     1537  2D3B               	goto	l3596
  9138     1538                     l3594:
  9139                           
  9140                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9141     1538  3002               	movlw	2
  9142     1539  0022               	movlb	2	; select bank2
  9143     153A  00BA               	movwf	(_I2C_Status^(0+256)+26)
  9144     153B                     l3596:
  9145                           
  9146                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  9147     153B  3192  2283  3195   	fcall	_I2C_MasterStart
  9148     153E                     l3598:
  9149                           
  9150                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  9151     153E  0020               	movlb	0	; select bank0
  9152     153F  0821               	movf	I2C_MasterOperation@returnValue,w
  9153     1540                     l528:
  9154     1540  0008               	return
  9155     1541                     __end_of_I2C_MasterOperation:
  9156                           
  9157                           	psect	text35
  9158     1283                     __ptext35:	
  9159 ;; *************** function _I2C_MasterStart *****************
  9160 ;; Defined at:
  9161 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;		None
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		None
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9175 ;;      Params:         0       0       0       0       0       0       0       0
  9176 ;;      Locals:         0       0       0       0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0
  9178 ;;      Totals:         0       0       0       0       0       0       0       0
  9179 ;;Total ram usage:        0 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; Hardware stack levels required when called: 7
  9182 ;; This function calls:
  9183 ;;		Nothing
  9184 ;; This function is called by:
  9185 ;;		_I2C_MasterOperation
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189     1283                     _I2C_MasterStart:	
  9190                           ;psect for function _I2C_MasterStart
  9191                           
  9192     1283                     l3496:	
  9193                           ;incstack = 0
  9194                           ; Regs used in _I2C_MasterStart: []
  9195                           
  9196                           
  9197                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  9198     1283  0024               	movlb	4	; select bank4
  9199     1284  1416               	bsf	22,0	;volatile
  9200     1285                     l704:
  9201     1285  0008               	return
  9202     1286                     __end_of_I2C_MasterStart:
  9203                           
  9204                           	psect	text36
  9205     14D1                     __ptext36:	
  9206 ;; *************** function _I2C_Close *****************
  9207 ;; Defined at:
  9208 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;		None
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  returnValue     1    0[BANK0 ] enum E358
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  1    wreg      enum E358
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0, pclath, cstack
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9222 ;;      Params:         0       0       0       0       0       0       0       0
  9223 ;;      Locals:         0       1       0       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0
  9225 ;;      Totals:         0       1       0       0       0       0       0       0
  9226 ;;Total ram usage:        1 bytes
  9227 ;; Hardware stack levels used: 1
  9228 ;; Hardware stack levels required when called: 8
  9229 ;; This function calls:
  9230 ;;		_I2C_MasterClearIrq
  9231 ;;		_I2C_MasterClose
  9232 ;;		_I2C_MasterDisableIrq
  9233 ;; This function is called by:
  9234 ;;		_I2C_WriteNBytes
  9235 ;;		_I2C_ReadNBytes
  9236 ;;		_I2C_Read1ByteRegister
  9237 ;;		_I2C_Read2ByteRegister
  9238 ;;		_I2C_Write1ByteRegister
  9239 ;;		_I2C_Write2ByteRegister
  9240 ;;		_I2C_ReadDataBlock
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244     14D1                     _I2C_Close:	
  9245                           ;psect for function _I2C_Close
  9246                           
  9247     14D1                     l3700:	
  9248                           ;incstack = 0
  9249                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  9250                           
  9251                           
  9252                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  9253     14D1  0020               	movlb	0	; select bank0
  9254     14D2  01A0               	clrf	I2C_Close@returnValue
  9255     14D3  0AA0               	incf	I2C_Close@returnValue,f
  9256                           
  9257                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  9258     14D4  0022               	movlb	2	; select bank2
  9259     14D5  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9260     14D6  2CD8               	goto	u2501
  9261     14D7  2CD9               	goto	u2500
  9262     14D8                     u2501:
  9263     14D8  2CE9               	goto	l3714
  9264     14D9                     u2500:
  9265     14D9                     l3702:
  9266                           
  9267                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  9268     14D9  113C               	bcf	(_I2C_Status^(0+256)+28),2
  9269     14DA                     l3704:
  9270                           
  9271                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  9272     14DA  30FF               	movlw	255
  9273     14DB  00B6               	movwf	(_I2C_Status^(0+256)+22)
  9274     14DC                     l3706:
  9275                           
  9276                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  9277     14DC  3192  227A  3194   	fcall	_I2C_MasterClearIrq
  9278     14DF                     l3708:
  9279                           
  9280                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  9281     14DF  3192  2280  3194   	fcall	_I2C_MasterDisableIrq
  9282     14E2                     l3710:
  9283                           
  9284                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  9285     14E2  3192  227D  3194   	fcall	_I2C_MasterClose
  9286     14E5                     l3712:
  9287                           
  9288                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  9289     14E5  0022               	movlb	2	; select bank2
  9290     14E6  083B               	movf	(_I2C_Status^(0+256)+27),w
  9291     14E7  0020               	movlb	0	; select bank0
  9292     14E8  00A0               	movwf	I2C_Close@returnValue
  9293     14E9                     l3714:
  9294                           
  9295                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  9296     14E9  0020               	movlb	0	; select bank0
  9297     14EA  0820               	movf	I2C_Close@returnValue,w
  9298     14EB                     l522:
  9299     14EB  0008               	return
  9300     14EC                     __end_of_I2C_Close:
  9301                           
  9302                           	psect	text37
  9303     1280                     __ptext37:	
  9304 ;; *************** function _I2C_MasterDisableIrq *****************
  9305 ;; Defined at:
  9306 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		None
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9320 ;;      Params:         0       0       0       0       0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0
  9323 ;;      Totals:         0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; Hardware stack levels required when called: 7
  9327 ;; This function calls:
  9328 ;;		Nothing
  9329 ;; This function is called by:
  9330 ;;		_I2C_Close
  9331 ;;		_I2C_SetTimeOut
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335     1280                     _I2C_MasterDisableIrq:	
  9336                           ;psect for function _I2C_MasterDisableIrq
  9337                           
  9338     1280                     l3580:	
  9339                           ;incstack = 0
  9340                           ; Regs used in _I2C_MasterDisableIrq: []
  9341                           
  9342                           
  9343                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  9344     1280  0021               	movlb	1	; select bank1
  9345     1281  1191               	bcf	17,3	;volatile
  9346     1282                     l731:
  9347     1282  0008               	return
  9348     1283                     __end_of_I2C_MasterDisableIrq:
  9349                           
  9350                           	psect	text38
  9351     127D                     __ptext38:	
  9352 ;; *************** function _I2C_MasterClose *****************
  9353 ;; Defined at:
  9354 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;		None
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;		None
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      void 
  9361 ;; Registers used:
  9362 ;;		None
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9368 ;;      Params:         0       0       0       0       0       0       0       0
  9369 ;;      Locals:         0       0       0       0       0       0       0       0
  9370 ;;      Temps:          0       0       0       0       0       0       0       0
  9371 ;;      Totals:         0       0       0       0       0       0       0       0
  9372 ;;Total ram usage:        0 bytes
  9373 ;; Hardware stack levels used: 1
  9374 ;; Hardware stack levels required when called: 7
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_I2C_Close
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382     127D                     _I2C_MasterClose:	
  9383                           ;psect for function _I2C_MasterClose
  9384                           
  9385     127D                     l3582:	
  9386                           ;incstack = 0
  9387                           ; Regs used in _I2C_MasterClose: []
  9388                           
  9389                           
  9390                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  9391     127D  0024               	movlb	4	; select bank4
  9392     127E  1295               	bcf	21,5	;volatile
  9393     127F                     l686:
  9394     127F  0008               	return
  9395     1280                     __end_of_I2C_MasterClose:
  9396                           
  9397                           	psect	text39
  9398     127A                     __ptext39:	
  9399 ;; *************** function _I2C_MasterClearIrq *****************
  9400 ;; Defined at:
  9401 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      void 
  9408 ;; Registers used:
  9409 ;;		None
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9415 ;;      Params:         0       0       0       0       0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0
  9418 ;;      Totals:         0       0       0       0       0       0       0       0
  9419 ;;Total ram usage:        0 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; Hardware stack levels required when called: 7
  9422 ;; This function calls:
  9423 ;;		Nothing
  9424 ;; This function is called by:
  9425 ;;		_I2C_Open
  9426 ;;		_I2C_Close
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430     127A                     _I2C_MasterClearIrq:	
  9431                           ;psect for function _I2C_MasterClearIrq
  9432                           
  9433     127A                     l3564:	
  9434                           ;incstack = 0
  9435                           ; Regs used in _I2C_MasterClearIrq: []
  9436                           
  9437                           
  9438                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9439     127A  0020               	movlb	0	; select bank0
  9440     127B  1191               	bcf	17,3	;volatile
  9441     127C                     l734:
  9442     127C  0008               	return
  9443     127D                     __end_of_I2C_MasterClearIrq:
  9444                           
  9445                           	psect	text40
  9446     144D                     __ptext40:	
  9447 ;; *************** function _Task_MB *****************
  9448 ;; Defined at:
  9449 ;;		line 256 in file "Mobbus_Slave.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9463 ;;      Params:         0       0       0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used: 1
  9469 ;; Hardware stack levels required when called: 12
  9470 ;; This function calls:
  9471 ;;		_ModbusSlave_Init
  9472 ;;		_ModbusSlave_Process
  9473 ;; This function is called by:
  9474 ;;		_App_Process
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478     144D                     _Task_MB:	
  9479                           ;psect for function _Task_MB
  9480                           
  9481     144D                     l5014:	
  9482                           ;incstack = 0
  9483                           ; Regs used in _Task_MB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9484                           
  9485                           
  9486                           ;Mobbus_Slave.c: 257:     static _Bool f_Modbus_Init = 0;;Mobbus_Slave.c: 258:     if (!
      +                          f_Modbus_Init) {
  9487     144D  087C               	movf	Task_MB@f_Modbus_Init,w
  9488     144E  1D03               	btfss	3,2
  9489     144F  2C51               	goto	u4281
  9490     1450  2C52               	goto	u4280
  9491     1451                     u4281:
  9492     1451  2C5A               	goto	l5020
  9493     1452                     u4280:
  9494     1452                     l5016:
  9495                           
  9496                           ;Mobbus_Slave.c: 259:         ModbusSlave_Init(SW_Ad);
  9497     1452  0020               	movlb	0	; select bank0
  9498     1453  0869               	movf	_SW_Ad,w
  9499     1454  3188  2087  3194   	fcall	_ModbusSlave_Init
  9500     1457                     l5018:
  9501                           
  9502                           ;Mobbus_Slave.c: 260:         f_Modbus_Init = 1;
  9503     1457  01FC               	clrf	Task_MB@f_Modbus_Init
  9504     1458  0AFC               	incf	Task_MB@f_Modbus_Init,f
  9505                           
  9506                           ;Mobbus_Slave.c: 261:     } else {
  9507     1459  2C5D               	goto	l982
  9508     145A                     l5020:
  9509                           
  9510                           ;Mobbus_Slave.c: 262:         ModbusSlave_Process();
  9511     145A  3194  24B7  3194   	fcall	_ModbusSlave_Process
  9512     145D                     l982:
  9513     145D  0008               	return
  9514     145E                     __end_of_Task_MB:
  9515                           
  9516                           	psect	text41
  9517     14B7                     __ptext41:	
  9518 ;; *************** function _ModbusSlave_Process *****************
  9519 ;; Defined at:
  9520 ;;		line 247 in file "Mobbus_Slave.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;		None
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  state           1    0        unsigned char 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      void 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9534 ;;      Params:         0       0       0       0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0       0
  9537 ;;      Totals:         0       0       0       0       0       0       0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used: 1
  9540 ;; Hardware stack levels required when called: 11
  9541 ;; This function calls:
  9542 ;;		_ModbusRTU_Slave_Poll
  9543 ;; This function is called by:
  9544 ;;		_Task_MB
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548     14B7                     _ModbusSlave_Process:	
  9549                           ;psect for function _ModbusSlave_Process
  9550                           
  9551     14B7                     l4806:	
  9552                           ;incstack = 0
  9553                           ; Regs used in _ModbusSlave_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9554                           
  9555     14B7                     l4808:
  9556                           
  9557                           ;Mobbus_Slave.c: 250:     MB_Register[0] = SensorAmbient.T.Val16;
  9558     14B7  0021               	movlb	1	; select bank1
  9559     14B8  085C               	movf	(_SensorAmbient+1)^(0+128),w
  9560     14B9  0022               	movlb	2	; select bank2
  9561     14BA  00DA               	movwf	(_MB_Register+1)^(0+256)
  9562     14BB  0021               	movlb	1	; select bank1
  9563     14BC  085B               	movf	_SensorAmbient^(0+128),w
  9564     14BD  0022               	movlb	2	; select bank2
  9565     14BE  00D9               	movwf	_MB_Register^(0+256)
  9566     14BF                     l4810:
  9567                           
  9568                           ;Mobbus_Slave.c: 251:     MB_Register[1] = SensorAmbient.H.Val16;
  9569     14BF  0021               	movlb	1	; select bank1
  9570     14C0  085E               	movf	((_SensorAmbient+1)^(0+128)+2),w
  9571     14C1  0022               	movlb	2	; select bank2
  9572     14C2  00DC               	movwf	((_MB_Register+1)^(0+256)+2)
  9573     14C3  0021               	movlb	1	; select bank1
  9574     14C4  085D               	movf	(_SensorAmbient^(0+128)+2),w
  9575     14C5  0022               	movlb	2	; select bank2
  9576     14C6  00DB               	movwf	(_MB_Register^(0+256)+2)
  9577     14C7                     l4812:
  9578     14C7  3002               	movlw	2
  9579     14C8  0020               	movlb	0	; select bank0
  9580     14C9  00D4               	movwf	ModbusRTU_Slave_Poll@size
  9581     14CA  3000               	movlw	0
  9582     14CB  00D5               	movwf	ModbusRTU_Slave_Poll@size+1
  9583     14CC  3059               	movlw	(low (_MB_Register| (0+256)))& (0+255)
  9584     14CD  318D  2530  3194   	fcall	_ModbusRTU_Slave_Poll
  9585     14D0                     l975:
  9586     14D0  0008               	return
  9587     14D1                     __end_of_ModbusSlave_Process:
  9588                           
  9589                           	psect	text42
  9590     0D30                     __ptext42:	
  9591 ;; *************** function _ModbusRTU_Slave_Poll *****************
  9592 ;; Defined at:
  9593 ;;		line 125 in file "Mobbus_Slave.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  reg             1    wreg     PTR unsigned short 
  9596 ;;		 -> MB_Register(4), 
  9597 ;;  size            2   52[BANK0 ] unsigned short 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  reg             1   62[BANK0 ] PTR unsigned short 
  9600 ;;		 -> MB_Register(4), 
  9601 ;;  u8exception     1   65[BANK0 ] unsigned char 
  9602 ;;  i8state         1   64[BANK0 ] unsigned char 
  9603 ;;  u8Current       1   63[BANK0 ] unsigned char 
  9604 ;; Return value:  Size  Location     Type
  9605 ;;                  1    wreg      unsigned char 
  9606 ;; Registers used:
  9607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9608 ;; Tracked objects:
  9609 ;;		On entry : 0/0
  9610 ;;		On exit  : 0/0
  9611 ;;		Unchanged: 0/0
  9612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9613 ;;      Params:         0       2       0       0       0       0       0       0
  9614 ;;      Locals:         0       4       0       0       0       0       0       0
  9615 ;;      Temps:          0       8       0       0       0       0       0       0
  9616 ;;      Totals:         0      14       0       0       0       0       0       0
  9617 ;;Total ram usage:       14 bytes
  9618 ;; Hardware stack levels used: 1
  9619 ;; Hardware stack levels required when called: 10
  9620 ;; This function calls:
  9621 ;;		_Get_millis
  9622 ;;		_ModbusSlaveF04
  9623 ;;		_Modbus_getRxBuff
  9624 ;;		_Modbus_sendTxBuff
  9625 ;;		_buildException
  9626 ;;		_validateRequest
  9627 ;; This function is called by:
  9628 ;;		_ModbusSlave_Process
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632     0D30                     _ModbusRTU_Slave_Poll:	
  9633                           ;psect for function _ModbusRTU_Slave_Poll
  9634                           
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _ModbusRTU_Slave_Poll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9638                           ;ModbusRTU_Slave_Poll@reg stored from wreg
  9639     0D30  0020               	movlb	0	; select bank0
  9640     0D31  00DE               	movwf	ModbusRTU_Slave_Poll@reg
  9641     0D32                     l3968:
  9642                           
  9643                           ;Mobbus_Slave.c: 127:     SES_Modbus.u8regsize = size;
  9644     0D32  30EA               	movlw	234
  9645     0D33  0086               	movwf	6
  9646     0D34  3021               	movlw	33
  9647     0D35  0087               	movwf	7
  9648     0D36  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9649     0D37  3FC0               	movwi [0]fsr1
  9650     0D38  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9651     0D39  3FC1               	movwi [1]fsr1
  9652     0D3A                     l3970:
  9653                           
  9654                           ;Mobbus_Slave.c: 128:     uint8_t u8Current;;Mobbus_Slave.c: 130:     u8Current = eusart
      +                          RxCount;
  9655     0D3A  086A               	movf	_eusartRxCount,w	;volatile
  9656     0D3B  00DF               	movwf	ModbusRTU_Slave_Poll@u8Current
  9657     0D3C                     l3972:
  9658                           
  9659                           ;Mobbus_Slave.c: 132:     if (u8Current == 0) return 0;
  9660     0D3C  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9661     0D3D  1D03               	btfss	3,2
  9662     0D3E  2D40               	goto	u2671
  9663     0D3F  2D41               	goto	u2670
  9664     0D40                     u2671:
  9665     0D40  2D43               	goto	l3978
  9666     0D41                     u2670:
  9667     0D41                     l3974:
  9668     0D41  3000               	movlw	0
  9669     0D42  2DFB               	goto	l930
  9670     0D43                     l3978:
  9671                           
  9672                           ;Mobbus_Slave.c: 135:     if (u8Current != SES_Modbus.u8lastRec) {
  9673     0D43  30D3               	movlw	211
  9674     0D44  0086               	movwf	6
  9675     0D45  3021               	movlw	33
  9676     0D46  0087               	movwf	7
  9677     0D47  0801               	movf	1,w
  9678     0D48  065F               	xorwf	ModbusRTU_Slave_Poll@u8Current,w
  9679     0D49  1903               	skipnz
  9680     0D4A  2D4C               	goto	u2681
  9681     0D4B  2D4D               	goto	u2680
  9682     0D4C                     u2681:
  9683     0D4C  2D64               	goto	l3988
  9684     0D4D                     u2680:
  9685     0D4D                     l3980:
  9686                           
  9687                           ;Mobbus_Slave.c: 136:         SES_Modbus.u8lastRec = u8Current;
  9688     0D4D  30D3               	movlw	211
  9689     0D4E  0086               	movwf	6
  9690     0D4F  3021               	movlw	33
  9691     0D50  0087               	movwf	7
  9692     0D51  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9693     0D52  0081               	movwf	1
  9694     0D53                     l3982:
  9695                           
  9696                           ;Mobbus_Slave.c: 137:         SES_Modbus.u32time = Get_millis();
  9697     0D53  3194  243C  318D   	fcall	_Get_millis
  9698     0D56  30DE               	movlw	222
  9699     0D57  0086               	movwf	6
  9700     0D58  3021               	movlw	33
  9701     0D59  0087               	movwf	7
  9702     0D5A  0020               	movlb	0	; select bank0
  9703     0D5B  0820               	movf	?_Get_millis,w
  9704     0D5C  3FC0               	movwi [0]fsr1
  9705     0D5D  0821               	movf	?_Get_millis+1,w
  9706     0D5E  3FC1               	movwi [1]fsr1
  9707     0D5F  0822               	movf	?_Get_millis+2,w
  9708     0D60  3FC2               	movwi [2]fsr1
  9709     0D61  0823               	movf	?_Get_millis+3,w
  9710     0D62  3FC3               	movwi [3]fsr1
  9711     0D63  2D41               	goto	l3974
  9712     0D64                     l3988:
  9713                           
  9714                           ;Mobbus_Slave.c: 140:     if ((unsigned long) (Get_millis() - SES_Modbus.u32time) < (uns
      +                          igned long) 4) return 0;
  9715     0D64  30DE               	movlw	222
  9716     0D65  0086               	movwf	6
  9717     0D66  3021               	movlw	33
  9718     0D67  0087               	movwf	7
  9719     0D68  3F40               	moviw [0]fsr1
  9720     0D69  00D6               	movwf	??_ModbusRTU_Slave_Poll
  9721     0D6A  3F41               	moviw [1]fsr1
  9722     0D6B  00D7               	movwf	??_ModbusRTU_Slave_Poll+1
  9723     0D6C  3F42               	moviw [2]fsr1
  9724     0D6D  00D8               	movwf	??_ModbusRTU_Slave_Poll+2
  9725     0D6E  3F43               	moviw [3]fsr1
  9726     0D6F  00D9               	movwf	??_ModbusRTU_Slave_Poll+3
  9727     0D70  3194  243C  318D   	fcall	_Get_millis
  9728     0D73  0020               	movlb	0	; select bank0
  9729     0D74  0820               	movf	?_Get_millis,w
  9730     0D75  00DA               	movwf	??_ModbusRTU_Slave_Poll+4
  9731     0D76  0821               	movf	?_Get_millis+1,w
  9732     0D77  00DB               	movwf	??_ModbusRTU_Slave_Poll+5
  9733     0D78  0822               	movf	?_Get_millis+2,w
  9734     0D79  00DC               	movwf	??_ModbusRTU_Slave_Poll+6
  9735     0D7A  0823               	movf	?_Get_millis+3,w
  9736     0D7B  00DD               	movwf	??_ModbusRTU_Slave_Poll+7
  9737     0D7C  0856               	movf	??_ModbusRTU_Slave_Poll,w
  9738     0D7D  02DA               	subwf	??_ModbusRTU_Slave_Poll+4,f
  9739     0D7E  0857               	movf	??_ModbusRTU_Slave_Poll+1,w
  9740     0D7F  3BDB               	subwfb	??_ModbusRTU_Slave_Poll+5,f
  9741     0D80  0858               	movf	??_ModbusRTU_Slave_Poll+2,w
  9742     0D81  3BDC               	subwfb	??_ModbusRTU_Slave_Poll+6,f
  9743     0D82  0859               	movf	??_ModbusRTU_Slave_Poll+3,w
  9744     0D83  3BDD               	subwfb	??_ModbusRTU_Slave_Poll+7,f
  9745     0D84  085D               	movf	??_ModbusRTU_Slave_Poll+7,w
  9746     0D85  1D03               	btfss	3,2
  9747     0D86  2D92               	goto	u2691
  9748     0D87  085C               	movf	??_ModbusRTU_Slave_Poll+6,w
  9749     0D88  1D03               	btfss	3,2
  9750     0D89  2D92               	goto	u2691
  9751     0D8A  085B               	movf	??_ModbusRTU_Slave_Poll+5,w
  9752     0D8B  1D03               	btfss	3,2
  9753     0D8C  2D92               	goto	u2691
  9754     0D8D  3004               	movlw	4
  9755     0D8E  025A               	subwf	??_ModbusRTU_Slave_Poll+4,w
  9756     0D8F  1803               	btfsc	3,0
  9757     0D90  2D92               	goto	u2691
  9758     0D91  2D93               	goto	u2690
  9759     0D92                     u2691:
  9760     0D92  2D94               	goto	l3994
  9761     0D93                     u2690:
  9762     0D93  2D41               	goto	l3974
  9763     0D94                     l3994:
  9764                           
  9765                           ;Mobbus_Slave.c: 142:     SES_Modbus.u8lastRec = 0;
  9766     0D94  30D3               	movlw	211
  9767     0D95  0086               	movwf	6
  9768     0D96  3021               	movlw	33
  9769     0D97  0087               	movwf	7
  9770     0D98  0181               	clrf	1
  9771     0D99                     l3996:
  9772                           
  9773                           ;Mobbus_Slave.c: 143:     uint8_t i8state = Modbus_getRxBuff();
  9774     0D99  3189  212B  318D   	fcall	_Modbus_getRxBuff
  9775     0D9C  0020               	movlb	0	; select bank0
  9776     0D9D  00E0               	movwf	ModbusRTU_Slave_Poll@i8state
  9777     0D9E                     l3998:
  9778                           
  9779                           ;Mobbus_Slave.c: 144:     SES_Modbus.u8lastError = i8state;
  9780     0D9E  303B               	movlw	59
  9781     0D9F  0086               	movwf	6
  9782     0DA0  3021               	movlw	33
  9783     0DA1  0087               	movwf	7
  9784     0DA2  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9785     0DA3  0081               	movwf	1
  9786     0DA4                     l4000:
  9787                           
  9788                           ;Mobbus_Slave.c: 145:     if (i8state < 7) return i8state;
  9789     0DA4  3007               	movlw	7
  9790     0DA5  0260               	subwf	ModbusRTU_Slave_Poll@i8state,w
  9791     0DA6  1803               	skipnc
  9792     0DA7  2DA9               	goto	u2701
  9793     0DA8  2DAA               	goto	u2700
  9794     0DA9                     u2701:
  9795     0DA9  2DAD               	goto	l4006
  9796     0DAA                     u2700:
  9797     0DAA                     l4002:
  9798     0DAA  0020               	movlb	0	; select bank0
  9799     0DAB  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9800     0DAC  2DFB               	goto	l930
  9801     0DAD                     l4006:
  9802                           
  9803                           ;Mobbus_Slave.c: 148:     if (SES_Modbus.au8Buffer[ ID ] != SES_Modbus.u8id) return 0;
  9804     0DAD  3038               	movlw	56
  9805     0DAE  0086               	movwf	6
  9806     0DAF  3021               	movlw	33
  9807     0DB0  0087               	movwf	7
  9808     0DB1  3038               	movlw	56
  9809     0DB2  0084               	movwf	4
  9810     0DB3  3021               	movlw	33
  9811     0DB4  0085               	movwf	5
  9812     0DB5  3104               	addfsr 0,4
  9813     0DB6  0800               	movf	0,w
  9814     0DB7  0601               	xorwf	1,w
  9815     0DB8  1903               	skipnz
  9816     0DB9  2DBB               	goto	u2711
  9817     0DBA  2DBC               	goto	u2710
  9818     0DBB                     u2711:
  9819     0DBB  2DBD               	goto	l4012
  9820     0DBC                     u2710:
  9821     0DBC  2D41               	goto	l3974
  9822     0DBD                     l4012:
  9823                           
  9824                           ;Mobbus_Slave.c: 151:     uint8_t u8exception = validateRequest();
  9825     0DBD  318A  22C5  318D   	fcall	_validateRequest
  9826     0DC0  0020               	movlb	0	; select bank0
  9827     0DC1  00E1               	movwf	ModbusRTU_Slave_Poll@u8exception
  9828     0DC2                     l4014:
  9829                           
  9830                           ;Mobbus_Slave.c: 152:     if (u8exception > 0) {
  9831     0DC2  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9832     0DC3  1903               	btfsc	3,2
  9833     0DC4  2DC6               	goto	u2721
  9834     0DC5  2DC7               	goto	u2720
  9835     0DC6                     u2721:
  9836     0DC6  2DDC               	goto	l4026
  9837     0DC7                     u2720:
  9838     0DC7                     l4016:
  9839                           
  9840                           ;Mobbus_Slave.c: 153:         if (u8exception != NO_REPLY) {
  9841     0DC7  0A61               	incf	ModbusRTU_Slave_Poll@u8exception,w
  9842     0DC8  1903               	btfsc	3,2
  9843     0DC9  2DCB               	goto	u2731
  9844     0DCA  2DCC               	goto	u2730
  9845     0DCB                     u2731:
  9846     0DCB  2DD3               	goto	l4020
  9847     0DCC                     u2730:
  9848     0DCC                     l4018:
  9849                           
  9850                           ;Mobbus_Slave.c: 154:             buildException(u8exception);
  9851     0DCC  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9852     0DCD  3196  269E  318D   	fcall	_buildException
  9853                           
  9854                           ;Mobbus_Slave.c: 155:             Modbus_sendTxBuff();
  9855     0DD0  3186  26EA  318D   	fcall	_Modbus_sendTxBuff
  9856     0DD3                     l4020:
  9857                           
  9858                           ;Mobbus_Slave.c: 157:         SES_Modbus.u8lastError = u8exception;
  9859     0DD3  303B               	movlw	59
  9860     0DD4  0086               	movwf	6
  9861     0DD5  3021               	movlw	33
  9862     0DD6  0087               	movwf	7
  9863     0DD7  0020               	movlb	0	; select bank0
  9864     0DD8  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9865     0DD9  0081               	movwf	1
  9866     0DDA                     l4022:
  9867                           
  9868                           ;Mobbus_Slave.c: 158:         return u8exception;
  9869     0DDA  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9870     0DDB  2DFB               	goto	l930
  9871     0DDC                     l4026:
  9872                           
  9873                           ;Mobbus_Slave.c: 161:     SES_Modbus.u32timeOut = Get_millis();
  9874     0DDC  3194  243C  318D   	fcall	_Get_millis
  9875     0DDF  30E2               	movlw	226
  9876     0DE0  0086               	movwf	6
  9877     0DE1  3021               	movlw	33
  9878     0DE2  0087               	movwf	7
  9879     0DE3  0020               	movlb	0	; select bank0
  9880     0DE4  0820               	movf	?_Get_millis,w
  9881     0DE5  3FC0               	movwi [0]fsr1
  9882     0DE6  0821               	movf	?_Get_millis+1,w
  9883     0DE7  3FC1               	movwi [1]fsr1
  9884     0DE8  0822               	movf	?_Get_millis+2,w
  9885     0DE9  3FC2               	movwi [2]fsr1
  9886     0DEA  0823               	movf	?_Get_millis+3,w
  9887     0DEB  3FC3               	movwi [3]fsr1
  9888     0DEC                     l4028:
  9889                           
  9890                           ;Mobbus_Slave.c: 162:     SES_Modbus.u8lastError = 0;
  9891     0DEC  3038               	movlw	56
  9892     0DED  0086               	movwf	6
  9893     0DEE  3021               	movlw	33
  9894     0DEF  0087               	movwf	7
  9895     0DF0  3143               	addfsr 1,3
  9896     0DF1  0181               	clrf	1
  9897     0DF2                     l4030:
  9898                           
  9899                           ;Mobbus_Slave.c: 164:     ModbusSlaveF04(reg, size);
  9900     0DF2  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9901     0DF3  00BF               	movwf	ModbusSlaveF04@size+1
  9902     0DF4  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9903     0DF5  00BE               	movwf	ModbusSlaveF04@size
  9904     0DF6  085E               	movf	ModbusRTU_Slave_Poll@reg,w
  9905     0DF7  318B  23E1  318D   	fcall	_ModbusSlaveF04
  9906     0DFA  2DAA               	goto	l4002
  9907     0DFB                     l930:
  9908     0DFB  0008               	return
  9909     0DFC                     __end_of_ModbusRTU_Slave_Poll:
  9910                           
  9911                           	psect	text43
  9912     0AC5                     __ptext43:	
  9913 ;; *************** function _validateRequest *****************
  9914 ;; Defined at:
  9915 ;;		line 98 in file "Mobbus_Slave.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  u16MsgCRC       2   28[BANK0 ] unsigned short 
  9920 ;;  i               1   31[BANK0 ] unsigned char 
  9921 ;;  isSupported     1   30[BANK0 ] _Bool 
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      unsigned char 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9931 ;;      Params:         0       0       0       0       0       0       0       0
  9932 ;;      Locals:         0       4       0       0       0       0       0       0
  9933 ;;      Temps:          0      13       0       0       0       0       0       0
  9934 ;;      Totals:         0      17       0       0       0       0       0       0
  9935 ;;Total ram usage:       17 bytes
  9936 ;; Hardware stack levels used: 1
  9937 ;; Hardware stack levels required when called: 8
  9938 ;; This function calls:
  9939 ;;		_Modbus_calcCRC
  9940 ;; This function is called by:
  9941 ;;		_ModbusRTU_Slave_Poll
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945     0AC5                     _validateRequest:	
  9946                           ;psect for function _validateRequest
  9947                           
  9948     0AC5                     l3794:	
  9949                           ;incstack = 0
  9950                           ; Regs used in _validateRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9951                           
  9952                           
  9953                           ;Mobbus_Slave.c: 100:     uint16_t u16MsgCRC = (uint16_t)
  9954     0AC5  30D2               	movlw	210
  9955     0AC6  0086               	movwf	6
  9956     0AC7  3021               	movlw	33
  9957     0AC8  0087               	movwf	7
  9958     0AC9  0801               	movf	1,w
  9959     0ACA  0020               	movlb	0	; select bank0
  9960     0ACB  00AF               	movwf	??_validateRequest
  9961     0ACC  01B0               	clrf	??_validateRequest+1
  9962     0ACD  303B               	movlw	59
  9963     0ACE  00B1               	movwf	??_validateRequest+2
  9964     0ACF  3021               	movlw	33
  9965     0AD0  00B2               	movwf	??_validateRequest+3
  9966     0AD1  082F               	movf	??_validateRequest,w
  9967     0AD2  0731               	addwf	??_validateRequest+2,w
  9968     0AD3  0086               	movwf	6
  9969     0AD4  0830               	movf	??_validateRequest+1,w
  9970     0AD5  3D32               	addwfc	??_validateRequest+3,w
  9971     0AD6  0087               	movwf	7
  9972     0AD7  0801               	movf	1,w
  9973     0AD8  00B3               	movwf	??_validateRequest+4
  9974     0AD9  01B4               	clrf	??_validateRequest+5
  9975     0ADA  30D2               	movlw	210
  9976     0ADB  0086               	movwf	6
  9977     0ADC  3021               	movlw	33
  9978     0ADD  0087               	movwf	7
  9979     0ADE  0801               	movf	1,w
  9980     0ADF  00B5               	movwf	??_validateRequest+6
  9981     0AE0  01B6               	clrf	??_validateRequest+7
  9982     0AE1  303A               	movlw	58
  9983     0AE2  00B7               	movwf	??_validateRequest+8
  9984     0AE3  3021               	movlw	33
  9985     0AE4  00B8               	movwf	??_validateRequest+9
  9986     0AE5  0835               	movf	??_validateRequest+6,w
  9987     0AE6  0737               	addwf	??_validateRequest+8,w
  9988     0AE7  0086               	movwf	6
  9989     0AE8  0836               	movf	??_validateRequest+7,w
  9990     0AE9  3D38               	addwfc	??_validateRequest+9,w
  9991     0AEA  0087               	movwf	7
  9992     0AEB  0801               	movf	1,w
  9993     0AEC  00B9               	movwf	??_validateRequest+10
  9994     0AED  01BA               	clrf	??_validateRequest+11
  9995     0AEE  0839               	movf	??_validateRequest+10,w
  9996     0AEF  00BA               	movwf	??_validateRequest+11
  9997     0AF0  01B9               	clrf	??_validateRequest+10
  9998     0AF1  0833               	movf	??_validateRequest+4,w
  9999     0AF2  0439               	iorwf	??_validateRequest+10,w
 10000     0AF3  00BC               	movwf	validateRequest@u16MsgCRC
 10001     0AF4  0834               	movf	??_validateRequest+5,w
 10002     0AF5  043A               	iorwf	??_validateRequest+11,w
 10003     0AF6  00BD               	movwf	validateRequest@u16MsgCRC+1
 10004     0AF7                     l3796:
 10005                           
 10006                           ;Mobbus_Slave.c: 103:     if (Modbus_calcCRC(SES_Modbus.u8BufferSize - 2) != u16MsgCRC) 
      +                          {
 10007     0AF7  30D2               	movlw	210
 10008     0AF8  0086               	movwf	6
 10009     0AF9  3021               	movlw	33
 10010     0AFA  0087               	movwf	7
 10011     0AFB  0801               	movf	1,w
 10012     0AFC  3EFE               	addlw	254
 10013     0AFD  3189  2187  318A   	fcall	_Modbus_calcCRC
 10014     0B00  0020               	movlb	0	; select bank0
 10015     0B01  083D               	movf	validateRequest@u16MsgCRC+1,w
 10016     0B02  0621               	xorwf	?_Modbus_calcCRC+1,w
 10017     0B03  1D03               	skipz
 10018     0B04  2B07               	goto	u2555
 10019     0B05  083C               	movf	validateRequest@u16MsgCRC,w
 10020     0B06  0620               	xorwf	?_Modbus_calcCRC,w
 10021     0B07                     u2555:
 10022     0B07  1903               	skipnz
 10023     0B08  2B0A               	goto	u2551
 10024     0B09  2B0B               	goto	u2550
 10025     0B0A                     u2551:
 10026     0B0A  2B16               	goto	l3804
 10027     0B0B                     u2550:
 10028     0B0B                     l3798:
 10029                           
 10030                           ;Mobbus_Slave.c: 104:         SES_Modbus.u16errCnt++;
 10031     0B0B  30DA               	movlw	218
 10032     0B0C  0086               	movwf	6
 10033     0B0D  3021               	movlw	33
 10034     0B0E  0087               	movwf	7
 10035     0B0F  3001               	movlw	1
 10036     0B10  0781               	addwf	1,f
 10037     0B11  3141               	addfsr 1,1
 10038     0B12  1803               	skipnc
 10039     0B13  0A81               	incf	1,f
 10040     0B14                     l3800:
 10041                           
 10042                           ;Mobbus_Slave.c: 105:         return NO_REPLY;
 10043     0B14  30FF               	movlw	255
 10044     0B15  2B49               	goto	l922
 10045     0B16                     l3804:
 10046                           
 10047                           ;Mobbus_Slave.c: 109:     _Bool isSupported = 0;
 10048     0B16  01BE               	clrf	validateRequest@isSupported
 10049                           
 10050                           ;Mobbus_Slave.c: 110:     uint8_t i = 0;
 10051     0B17  01BF               	clrf	validateRequest@i
 10052                           
 10053                           ;Mobbus_Slave.c: 111:     for (i = 0; i< sizeof ( fctsupported); i++) {
 10054     0B18  01BF               	clrf	validateRequest@i
 10055     0B19                     l3810:
 10056                           
 10057                           ;Mobbus_Slave.c: 112:         if (fctsupported[i] == SES_Modbus.au8Buffer[FUNC]) {
 10058     0B19  3038               	movlw	56
 10059     0B1A  0086               	movwf	6
 10060     0B1B  3021               	movlw	33
 10061     0B1C  0087               	movwf	7
 10062     0B1D  3145               	addfsr 1,5
 10063     0B1E  083F               	movf	validateRequest@i,w
 10064     0B1F  3E20               	addlw	low (_fctsupported| (0+32768))
 10065     0B20  0084               	movwf	4
 10066     0B21  3098               	movlw	high (_fctsupported| (0+32768))
 10067     0B22  1803               	skipnc
 10068     0B23  3E01               	addlw	1
 10069     0B24  0085               	movwf	5
 10070     0B25  0800               	movf	0,w	;code access
 10071     0B26  0601               	xorwf	1,w
 10072     0B27  1D03               	skipz
 10073     0B28  2B2A               	goto	u2561
 10074     0B29  2B2B               	goto	u2560
 10075     0B2A                     u2561:
 10076     0B2A  2B2E               	goto	l3814
 10077     0B2B                     u2560:
 10078     0B2B                     l3812:
 10079                           
 10080                           ;Mobbus_Slave.c: 113:             isSupported = 1;
 10081     0B2B  01BE               	clrf	validateRequest@isSupported
 10082     0B2C  0ABE               	incf	validateRequest@isSupported,f
 10083                           
 10084                           ;Mobbus_Slave.c: 114:             break;
 10085     0B2D  2B38               	goto	l3818
 10086     0B2E                     l3814:
 10087                           
 10088                           ;Mobbus_Slave.c: 116:     }
 10089     0B2E  3001               	movlw	1
 10090     0B2F  00AF               	movwf	??_validateRequest
 10091     0B30  082F               	movf	??_validateRequest,w
 10092     0B31  07BF               	addwf	validateRequest@i,f
 10093     0B32                     l3816:
 10094     0B32  3008               	movlw	8
 10095     0B33  023F               	subwf	validateRequest@i,w
 10096     0B34  1C03               	skipc
 10097     0B35  2B37               	goto	u2571
 10098     0B36  2B38               	goto	u2570
 10099     0B37                     u2571:
 10100     0B37  2B19               	goto	l3810
 10101     0B38                     u2570:
 10102     0B38                     l3818:
 10103                           
 10104                           ;Mobbus_Slave.c: 117:     if (!isSupported) {
 10105     0B38  083E               	movf	validateRequest@isSupported,w
 10106     0B39  1D03               	btfss	3,2
 10107     0B3A  2B3C               	goto	u2581
 10108     0B3B  2B3D               	goto	u2580
 10109     0B3C                     u2581:
 10110     0B3C  2B48               	goto	l3826
 10111     0B3D                     u2580:
 10112     0B3D                     l3820:
 10113                           
 10114                           ;Mobbus_Slave.c: 118:         SES_Modbus.u16errCnt++;
 10115     0B3D  30DA               	movlw	218
 10116     0B3E  0086               	movwf	6
 10117     0B3F  3021               	movlw	33
 10118     0B40  0087               	movwf	7
 10119     0B41  3001               	movlw	1
 10120     0B42  0781               	addwf	1,f
 10121     0B43  3141               	addfsr 1,1
 10122     0B44  1803               	skipnc
 10123     0B45  0A81               	incf	1,f
 10124     0B46                     l3822:
 10125                           
 10126                           ;Mobbus_Slave.c: 119:         return EXC_FUNC_CODE;
 10127     0B46  3001               	movlw	1
 10128     0B47  2B49               	goto	l922
 10129     0B48                     l3826:
 10130                           
 10131                           ;Mobbus_Slave.c: 122:     return 0;
 10132     0B48  3000               	movlw	0
 10133     0B49                     l922:
 10134     0B49  0008               	return
 10135     0B4A                     __end_of_validateRequest:
 10136                           
 10137                           	psect	text44
 10138     169E                     __ptext44:	
 10139 ;; *************** function _buildException *****************
 10140 ;; Defined at:
 10141 ;;		line 64 in file "Mobbus_Slave.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  exception       1    wreg     unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  exception       1    1[BANK0 ] unsigned char 
 10146 ;;  u8func          1    2[BANK0 ] unsigned char 
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10156 ;;      Params:         0       0       0       0       0       0       0       0
 10157 ;;      Locals:         0       2       0       0       0       0       0       0
 10158 ;;      Temps:          0       1       0       0       0       0       0       0
 10159 ;;      Totals:         0       3       0       0       0       0       0       0
 10160 ;;Total ram usage:        3 bytes
 10161 ;; Hardware stack levels used: 1
 10162 ;; Hardware stack levels required when called: 7
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_ModbusRTU_Slave_Poll
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170     169E                     _buildException:	
 10171                           ;psect for function _buildException
 10172                           
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _buildException: [wreg+fsr1l+fsr1h+status,2+status,0]
 10176                           ;buildException@exception stored from wreg
 10177     169E  0020               	movlb	0	; select bank0
 10178     169F  00A1               	movwf	buildException@exception
 10179     16A0                     l3756:
 10180                           
 10181                           ;Mobbus_Slave.c: 66:     uint8_t u8func = SES_Modbus.au8Buffer[ FUNC ];
 10182     16A0  3038               	movlw	56
 10183     16A1  0086               	movwf	6
 10184     16A2  3021               	movlw	33
 10185     16A3  0087               	movwf	7
 10186     16A4  3145               	addfsr 1,5
 10187     16A5  0801               	movf	1,w
 10188     16A6  00A2               	movwf	buildException@u8func
 10189                           
 10190                           ;Mobbus_Slave.c: 68:     SES_Modbus.au8Buffer[ ID ] = SES_Modbus.u8id;
 10191     16A7  3038               	movlw	56
 10192     16A8  0086               	movwf	6
 10193     16A9  3021               	movlw	33
 10194     16AA  0087               	movwf	7
 10195     16AB  0801               	movf	1,w
 10196     16AC  00A0               	movwf	??_buildException
 10197     16AD  303C               	movlw	60
 10198     16AE  0086               	movwf	6
 10199     16AF  3021               	movlw	33
 10200     16B0  0087               	movwf	7
 10201     16B1  0820               	movf	??_buildException,w
 10202     16B2  0081               	movwf	1
 10203     16B3                     l3758:
 10204                           
 10205                           ;Mobbus_Slave.c: 69:     SES_Modbus.au8Buffer[ FUNC ] = u8func + 0x80;
 10206     16B3  0822               	movf	buildException@u8func,w
 10207     16B4  3E80               	addlw	128
 10208     16B5  00A0               	movwf	??_buildException
 10209     16B6  303D               	movlw	61
 10210     16B7  0086               	movwf	6
 10211     16B8  3021               	movlw	33
 10212     16B9  0087               	movwf	7
 10213     16BA  0820               	movf	??_buildException,w
 10214     16BB  0081               	movwf	1
 10215     16BC                     l3760:
 10216                           
 10217                           ;Mobbus_Slave.c: 70:     SES_Modbus.au8Buffer[ 2 ] = exception;
 10218     16BC  303E               	movlw	62
 10219     16BD  0086               	movwf	6
 10220     16BE  3021               	movlw	33
 10221     16BF  0087               	movwf	7
 10222     16C0  0821               	movf	buildException@exception,w
 10223     16C1  0081               	movwf	1
 10224     16C2                     l3762:
 10225                           
 10226                           ;Mobbus_Slave.c: 71:     SES_Modbus.u8BufferSize = EXCEPTION_SIZE;
 10227     16C2  30D2               	movlw	210
 10228     16C3  0086               	movwf	6
 10229     16C4  3021               	movlw	33
 10230     16C5  0087               	movwf	7
 10231     16C6  3003               	movlw	3
 10232     16C7  0081               	movwf	1
 10233     16C8                     l909:
 10234     16C8  0008               	return
 10235     16C9                     __end_of_buildException:
 10236                           
 10237                           	psect	text45
 10238     092B                     __ptext45:	
 10239 ;; *************** function _Modbus_getRxBuff *****************
 10240 ;; Defined at:
 10241 ;;		line 74 in file "Mobbus_Slave.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;  bBuffOverflo    1    9[BANK0 ] _Bool 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      unsigned char 
 10248 ;; Registers used:
 10249 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10255 ;;      Params:         0       0       0       0       0       0       0       0
 10256 ;;      Locals:         0       1       0       0       0       0       0       0
 10257 ;;      Temps:          0       7       0       0       0       0       0       0
 10258 ;;      Totals:         0       8       0       0       0       0       0       0
 10259 ;;Total ram usage:        8 bytes
 10260 ;; Hardware stack levels used: 1
 10261 ;; Hardware stack levels required when called: 8
 10262 ;; This function calls:
 10263 ;;		_EUSART_Read
 10264 ;; This function is called by:
 10265 ;;		_ModbusRTU_Slave_Poll
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269     092B                     _Modbus_getRxBuff:	
 10270                           ;psect for function _Modbus_getRxBuff
 10271                           
 10272     092B                     l3764:	
 10273                           ;incstack = 0
 10274                           ; Regs used in _Modbus_getRxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10275                           
 10276                           
 10277                           ;Mobbus_Slave.c: 75:     _Bool bBuffOverflow = 0;
 10278     092B  0020               	movlb	0	; select bank0
 10279     092C  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10280     092D                     l3768:
 10281                           
 10282                           ;Mobbus_Slave.c: 81:     SES_Modbus.u8BufferSize = 0;
 10283     092D  30D2               	movlw	210
 10284     092E  0086               	movwf	6
 10285     092F  3021               	movlw	33
 10286     0930  0087               	movwf	7
 10287     0931  0181               	clrf	1
 10288                           
 10289                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10290     0932  2963               	goto	l3778
 10291     0933                     l3770:
 10292                           
 10293                           ;Mobbus_Slave.c: 83:         SES_Modbus.au8Buffer [SES_Modbus.u8BufferSize] = EUSART_Rea
      +                          d();
 10294     0933  3196  2622  3189   	fcall	_EUSART_Read
 10295     0936  0020               	movlb	0	; select bank0
 10296     0937  00A2               	movwf	??_Modbus_getRxBuff
 10297     0938  30D2               	movlw	210
 10298     0939  0086               	movwf	6
 10299     093A  3021               	movlw	33
 10300     093B  0087               	movwf	7
 10301     093C  0801               	movf	1,w
 10302     093D  00A3               	movwf	??_Modbus_getRxBuff+1
 10303     093E  01A4               	clrf	??_Modbus_getRxBuff+2
 10304     093F  303C               	movlw	60
 10305     0940  00A5               	movwf	??_Modbus_getRxBuff+3
 10306     0941  3021               	movlw	33
 10307     0942  00A6               	movwf	??_Modbus_getRxBuff+4
 10308     0943  0823               	movf	??_Modbus_getRxBuff+1,w
 10309     0944  0725               	addwf	??_Modbus_getRxBuff+3,w
 10310     0945  00A7               	movwf	??_Modbus_getRxBuff+5
 10311     0946  0824               	movf	??_Modbus_getRxBuff+2,w
 10312     0947  3D26               	addwfc	??_Modbus_getRxBuff+4,w
 10313     0948  00A8               	movwf	??_Modbus_getRxBuff+6
 10314     0949  0827               	movf	??_Modbus_getRxBuff+5,w
 10315     094A  0086               	movwf	6
 10316     094B  0828               	movf	??_Modbus_getRxBuff+6,w
 10317     094C  0087               	movwf	7
 10318     094D  0822               	movf	??_Modbus_getRxBuff,w
 10319     094E  0081               	movwf	1
 10320     094F                     l3772:
 10321                           
 10322                           ;Mobbus_Slave.c: 84:         SES_Modbus.u8BufferSize++;
 10323     094F  3001               	movlw	1
 10324     0950  00A2               	movwf	??_Modbus_getRxBuff
 10325     0951  30D2               	movlw	210
 10326     0952  0086               	movwf	6
 10327     0953  3021               	movlw	33
 10328     0954  0087               	movwf	7
 10329     0955  0822               	movf	??_Modbus_getRxBuff,w
 10330     0956  0781               	addwf	1,f
 10331     0957                     l3774:
 10332                           
 10333                           ;Mobbus_Slave.c: 86:         if (SES_Modbus.u8BufferSize >= 150) bBuffOverflow = 1;
 10334     0957  30D2               	movlw	210
 10335     0958  0086               	movwf	6
 10336     0959  3021               	movlw	33
 10337     095A  0087               	movwf	7
 10338     095B  3096               	movlw	150
 10339     095C  0201               	subwf	1,w
 10340     095D  1C03               	skipc
 10341     095E  2960               	goto	u2521
 10342     095F  2961               	goto	u2520
 10343     0960                     u2521:
 10344     0960  2963               	goto	l3778
 10345     0961                     u2520:
 10346     0961                     l3776:
 10347     0961  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10348     0962  0AA9               	incf	Modbus_getRxBuff@bBuffOverflow,f
 10349     0963                     l3778:
 10350                           
 10351                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10352     0963  086A               	movf	_eusartRxCount,w	;volatile
 10353     0964  1D03               	btfss	3,2
 10354     0965  2967               	goto	u2531
 10355     0966  2968               	goto	u2530
 10356     0967                     u2531:
 10357     0967  2933               	goto	l3770
 10358     0968                     u2530:
 10359     0968                     l3780:
 10360                           
 10361                           ;Mobbus_Slave.c: 88:     SES_Modbus.u16InCnt++;
 10362     0968  30D6               	movlw	214
 10363     0969  0086               	movwf	6
 10364     096A  3021               	movlw	33
 10365     096B  0087               	movwf	7
 10366     096C  3001               	movlw	1
 10367     096D  0781               	addwf	1,f
 10368     096E  3141               	addfsr 1,1
 10369     096F  1803               	skipnc
 10370     0970  0A81               	incf	1,f
 10371     0971                     l3782:
 10372                           
 10373                           ;Mobbus_Slave.c: 90:     if (bBuffOverflow) {
 10374     0971  0829               	movf	Modbus_getRxBuff@bBuffOverflow,w
 10375     0972  1903               	btfsc	3,2
 10376     0973  2975               	goto	u2541
 10377     0974  2976               	goto	u2540
 10378     0975                     u2541:
 10379     0975  2981               	goto	l3790
 10380     0976                     u2540:
 10381     0976                     l3784:
 10382                           
 10383                           ;Mobbus_Slave.c: 91:         SES_Modbus.u16errCnt++;
 10384     0976  30DA               	movlw	218
 10385     0977  0086               	movwf	6
 10386     0978  3021               	movlw	33
 10387     0979  0087               	movwf	7
 10388     097A  3001               	movlw	1
 10389     097B  0781               	addwf	1,f
 10390     097C  3141               	addfsr 1,1
 10391     097D  1803               	skipnc
 10392     097E  0A81               	incf	1,f
 10393     097F                     l3786:
 10394                           
 10395                           ;Mobbus_Slave.c: 92:         return (uint8_t) ERR_BUFF_OVERFLOW;
 10396     097F  30FD               	movlw	253
 10397     0980  2986               	goto	l918
 10398     0981                     l3790:
 10399                           
 10400                           ;Mobbus_Slave.c: 95:     return SES_Modbus.u8BufferSize;
 10401     0981  30D2               	movlw	210
 10402     0982  0086               	movwf	6
 10403     0983  3021               	movlw	33
 10404     0984  0087               	movwf	7
 10405     0985  0801               	movf	1,w
 10406     0986                     l918:
 10407     0986  0008               	return
 10408     0987                     __end_of_Modbus_getRxBuff:
 10409                           
 10410                           	psect	text46
 10411     1622                     __ptext46:	
 10412 ;; *************** function _EUSART_Read *****************
 10413 ;; Defined at:
 10414 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;  readValue       1    1[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10428 ;;      Params:         0       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       1       0       0       0       0       0       0
 10430 ;;      Temps:          0       1       0       0       0       0       0       0
 10431 ;;      Totals:         0       2       0       0       0       0       0       0
 10432 ;;Total ram usage:        2 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; Hardware stack levels required when called: 7
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_Modbus_getRxBuff
 10439 ;;		_getch
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443     1622                     _EUSART_Read:	
 10444                           ;psect for function _EUSART_Read
 10445                           
 10446     1622                     l3540:	
 10447                           ;incstack = 0
 10448                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10449                           
 10450     1622                     l3542:	
 10451                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10452                           
 10453                           
 10454                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10455     1622  0020               	movlb	0	; select bank0
 10456     1623  086A               	movf	_eusartRxCount,w	;volatile
 10457     1624  1903               	btfsc	3,2
 10458     1625  2E27               	goto	u2361
 10459     1626  2E28               	goto	u2360
 10460     1627                     u2361:
 10461     1627  2E22               	goto	l3542
 10462     1628                     u2360:
 10463     1628                     l3544:
 10464                           
 10465                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10466     1628  086B               	movf	_eusartRxTail,w	;volatile
 10467     1629  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10468     162A  0086               	movwf	6
 10469     162B  3001               	movlw	1	; select bank2/3
 10470     162C  0087               	movwf	7
 10471     162D  0801               	movf	1,w
 10472     162E  00FD               	movwf	_eusartRxLastError	;volatile
 10473                           
 10474                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10475     162F  086B               	movf	_eusartRxTail,w
 10476     1630  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10477     1631  0086               	movwf	6
 10478     1632  3001               	movlw	1	; select bank2/3
 10479     1633  0087               	movwf	7
 10480     1634  0801               	movf	1,w
 10481     1635  00A1               	movwf	EUSART_Read@readValue
 10482     1636                     l3546:
 10483     1636  3001               	movlw	1
 10484     1637  00A0               	movwf	??_EUSART_Read
 10485     1638  0820               	movf	??_EUSART_Read,w
 10486     1639  07EB               	addwf	_eusartRxTail,f	;volatile
 10487     163A                     l3548:
 10488                           
 10489                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10490     163A  3008               	movlw	8
 10491     163B  026B               	subwf	_eusartRxTail,w	;volatile
 10492     163C  1C03               	skipc
 10493     163D  2E3F               	goto	u2371
 10494     163E  2E40               	goto	u2370
 10495     163F                     u2371:
 10496     163F  2E41               	goto	l3552
 10497     1640                     u2370:
 10498     1640                     l3550:
 10499                           
 10500                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10501     1640  01EB               	clrf	_eusartRxTail	;volatile
 10502     1641                     l3552:
 10503                           
 10504                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10505     1641  0021               	movlb	1	; select bank1
 10506     1642  1291               	bcf	17,5	;volatile
 10507     1643                     l3554:
 10508                           
 10509                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10510     1643  3001               	movlw	1
 10511     1644  0020               	movlb	0	; select bank0
 10512     1645  02EA               	subwf	_eusartRxCount,f	;volatile
 10513     1646                     l3556:
 10514                           
 10515                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10516     1646  0021               	movlb	1	; select bank1
 10517     1647  1691               	bsf	17,5	;volatile
 10518     1648                     l3558:
 10519                           
 10520                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10521     1648  0020               	movlb	0	; select bank0
 10522     1649  0821               	movf	EUSART_Read@readValue,w
 10523     164A                     l298:
 10524     164A  0008               	return
 10525     164B                     __end_of_EUSART_Read:
 10526                           
 10527                           	psect	text47
 10528     0BE1                     __ptext47:	
 10529 ;; *************** function _ModbusSlaveF04 *****************
 10530 ;; Defined at:
 10531 ;;		line 36 in file "Mobbus_Slave.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  reg             1    wreg     PTR unsigned short 
 10534 ;;		 -> MB_Register(4), 
 10535 ;;  size            2   30[BANK0 ] unsigned short 
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;  reg             1   45[BANK0 ] PTR unsigned short 
 10538 ;;		 -> MB_Register(4), 
 10539 ;;  i               2   50[BANK0 ] unsigned short 
 10540 ;;  valueRegsno     2   48[BANK0 ] struct .
 10541 ;;  valueAdd        2   46[BANK0 ] struct .
 10542 ;;  u8StartAdd      2   42[BANK0 ] unsigned short 
 10543 ;;  u8regsno        1   44[BANK0 ] unsigned char 
 10544 ;;  u8CopyBuffer    1    0        unsigned char 
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  1    wreg      unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10554 ;;      Params:         0       2       0       0       0       0       0       0
 10555 ;;      Locals:         0      10       0       0       0       0       0       0
 10556 ;;      Temps:          0      10       0       0       0       0       0       0
 10557 ;;      Totals:         0      22       0       0       0       0       0       0
 10558 ;;Total ram usage:       22 bytes
 10559 ;; Hardware stack levels used: 1
 10560 ;; Hardware stack levels required when called: 9
 10561 ;; This function calls:
 10562 ;;		_Modbus_sendTxBuff
 10563 ;; This function is called by:
 10564 ;;		_ModbusRTU_Slave_Poll
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568     0BE1                     _ModbusSlaveF04:	
 10569                           ;psect for function _ModbusSlaveF04
 10570                           
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _ModbusSlaveF04: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10574                           ;ModbusSlaveF04@reg stored from wreg
 10575     0BE1  0020               	movlb	0	; select bank0
 10576     0BE2  00CD               	movwf	ModbusSlaveF04@reg
 10577     0BE3                     l3728:
 10578                           
 10579                           ;Mobbus_Slave.c: 37:     VALUE16 valueAdd, valueRegsno;;Mobbus_Slave.c: 38:     valueAdd
      +                          ._Byte[1] = SES_Modbus.au8Buffer[ADD_HI];
 10580     0BE3  3038               	movlw	56
 10581     0BE4  0086               	movwf	6
 10582     0BE5  3021               	movlw	33
 10583     0BE6  0087               	movwf	7
 10584     0BE7  3146               	addfsr 1,6
 10585     0BE8  0801               	movf	1,w
 10586     0BE9  00CF               	movwf	ModbusSlaveF04@valueAdd+1
 10587                           
 10588                           ;Mobbus_Slave.c: 39:     valueAdd._Byte[0] = SES_Modbus.au8Buffer[ADD_LO];
 10589     0BEA  3038               	movlw	56
 10590     0BEB  0086               	movwf	6
 10591     0BEC  3021               	movlw	33
 10592     0BED  0087               	movwf	7
 10593     0BEE  3147               	addfsr 1,7
 10594     0BEF  0801               	movf	1,w
 10595     0BF0  00CE               	movwf	ModbusSlaveF04@valueAdd
 10596     0BF1                     l3730:
 10597                           
 10598                           ;Mobbus_Slave.c: 40:     uint16_t u8StartAdd = (uint16_t) valueAdd.Val16;
 10599     0BF1  084F               	movf	ModbusSlaveF04@valueAdd+1,w
 10600     0BF2  00CB               	movwf	ModbusSlaveF04@u8StartAdd+1
 10601     0BF3  084E               	movf	ModbusSlaveF04@valueAdd,w
 10602     0BF4  00CA               	movwf	ModbusSlaveF04@u8StartAdd
 10603     0BF5                     l3732:
 10604                           
 10605                           ;Mobbus_Slave.c: 42:     valueRegsno._Byte[1] = SES_Modbus.au8Buffer[ NB_HI];
 10606     0BF5  3038               	movlw	56
 10607     0BF6  0086               	movwf	6
 10608     0BF7  3021               	movlw	33
 10609     0BF8  0087               	movwf	7
 10610     0BF9  3148               	addfsr 1,8
 10611     0BFA  0801               	movf	1,w
 10612     0BFB  00D1               	movwf	ModbusSlaveF04@valueRegsno+1
 10613     0BFC                     l3734:
 10614                           
 10615                           ;Mobbus_Slave.c: 43:     valueRegsno._Byte[0] = SES_Modbus.au8Buffer[ NB_LO];
 10616     0BFC  3038               	movlw	56
 10617     0BFD  0086               	movwf	6
 10618     0BFE  3021               	movlw	33
 10619     0BFF  0087               	movwf	7
 10620     0C00  3149               	addfsr 1,9
 10621     0C01  0801               	movf	1,w
 10622     0C02  00D0               	movwf	ModbusSlaveF04@valueRegsno
 10623     0C03                     l3736:
 10624                           
 10625                           ;Mobbus_Slave.c: 44:     uint8_t u8regsno = (uint8_t) valueRegsno.Val16;
 10626     0C03  0850               	movf	ModbusSlaveF04@valueRegsno,w
 10627     0C04  00CC               	movwf	ModbusSlaveF04@u8regsno
 10628     0C05                     l3738:
 10629                           
 10630                           ;Mobbus_Slave.c: 46:     uint8_t u8CopyBufferSize;;Mobbus_Slave.c: 47:     uint16_t i;;M
      +                          obbus_Slave.c: 49:     SES_Modbus.au8Buffer[ 2 ] = u8regsno * 2;
 10631     0C05  354C               	lslf	ModbusSlaveF04@u8regsno,w
 10632     0C06  00C0               	movwf	??_ModbusSlaveF04
 10633     0C07  303E               	movlw	62
 10634     0C08  0086               	movwf	6
 10635     0C09  3021               	movlw	33
 10636     0C0A  0087               	movwf	7
 10637     0C0B  0840               	movf	??_ModbusSlaveF04,w
 10638     0C0C  0081               	movwf	1
 10639     0C0D                     l3740:
 10640                           
 10641                           ;Mobbus_Slave.c: 50:     SES_Modbus.u8BufferSize = 3;
 10642     0C0D  30D2               	movlw	210
 10643     0C0E  0086               	movwf	6
 10644     0C0F  3021               	movlw	33
 10645     0C10  0087               	movwf	7
 10646     0C11  3003               	movlw	3
 10647     0C12  0081               	movwf	1
 10648     0C13                     l3742:
 10649                           
 10650                           ;Mobbus_Slave.c: 52:     for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++) {
 10651     0C13  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10652     0C14  00D3               	movwf	ModbusSlaveF04@i+1
 10653     0C15  084A               	movf	ModbusSlaveF04@u8StartAdd,w
 10654     0C16  00D2               	movwf	ModbusSlaveF04@i
 10655     0C17  2C70               	goto	l3748
 10656     0C18                     l3744:
 10657                           
 10658                           ;Mobbus_Slave.c: 53:         SES_Modbus.au8Buffer[SES_Modbus.u8BufferSize ] = ((uint8_t)
      +                           ((reg[i]) >> 8));
 10659     0C18  3552               	lslf	ModbusSlaveF04@i,w
 10660     0C19  074D               	addwf	ModbusSlaveF04@reg,w
 10661     0C1A  00C0               	movwf	??_ModbusSlaveF04
 10662     0C1B  0840               	movf	??_ModbusSlaveF04,w
 10663     0C1C  0086               	movwf	6
 10664     0C1D  3001               	movlw	1	; select bank2/3
 10665     0C1E  0087               	movwf	7
 10666     0C1F  3F40               	moviw [0]fsr1
 10667     0C20  00C1               	movwf	??_ModbusSlaveF04+1
 10668     0C21  3F41               	moviw [1]fsr1
 10669     0C22  00C2               	movwf	??_ModbusSlaveF04+2
 10670     0C23  0842               	movf	??_ModbusSlaveF04+2,w
 10671     0C24  00C3               	movwf	??_ModbusSlaveF04+3
 10672     0C25  30D2               	movlw	210
 10673     0C26  0086               	movwf	6
 10674     0C27  3021               	movlw	33
 10675     0C28  0087               	movwf	7
 10676     0C29  0801               	movf	1,w
 10677     0C2A  00C4               	movwf	??_ModbusSlaveF04+4
 10678     0C2B  01C5               	clrf	??_ModbusSlaveF04+5
 10679     0C2C  303C               	movlw	60
 10680     0C2D  00C6               	movwf	??_ModbusSlaveF04+6
 10681     0C2E  3021               	movlw	33
 10682     0C2F  00C7               	movwf	??_ModbusSlaveF04+7
 10683     0C30  0844               	movf	??_ModbusSlaveF04+4,w
 10684     0C31  0746               	addwf	??_ModbusSlaveF04+6,w
 10685     0C32  00C8               	movwf	??_ModbusSlaveF04+8
 10686     0C33  0845               	movf	??_ModbusSlaveF04+5,w
 10687     0C34  3D47               	addwfc	??_ModbusSlaveF04+7,w
 10688     0C35  00C9               	movwf	??_ModbusSlaveF04+9
 10689     0C36  0848               	movf	??_ModbusSlaveF04+8,w
 10690     0C37  0086               	movwf	6
 10691     0C38  0849               	movf	??_ModbusSlaveF04+9,w
 10692     0C39  0087               	movwf	7
 10693     0C3A  0843               	movf	??_ModbusSlaveF04+3,w
 10694     0C3B  0081               	movwf	1
 10695                           
 10696                           ;Mobbus_Slave.c: 54:         SES_Modbus.u8BufferSize++;
 10697     0C3C  3001               	movlw	1
 10698     0C3D  00C0               	movwf	??_ModbusSlaveF04
 10699     0C3E  30D2               	movlw	210
 10700     0C3F  0086               	movwf	6
 10701     0C40  3021               	movlw	33
 10702     0C41  0087               	movwf	7
 10703     0C42  0840               	movf	??_ModbusSlaveF04,w
 10704     0C43  0781               	addwf	1,f
 10705                           
 10706                           ;Mobbus_Slave.c: 55:         SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = ((uint8_t
      +                          ) ((reg[i]) & 0xff));
 10707     0C44  3552               	lslf	ModbusSlaveF04@i,w
 10708     0C45  074D               	addwf	ModbusSlaveF04@reg,w
 10709     0C46  00C0               	movwf	??_ModbusSlaveF04
 10710     0C47  0840               	movf	??_ModbusSlaveF04,w
 10711     0C48  0086               	movwf	6
 10712     0C49  3001               	movlw	1	; select bank2/3
 10713     0C4A  0087               	movwf	7
 10714     0C4B  0801               	movf	1,w
 10715     0C4C  00C1               	movwf	??_ModbusSlaveF04+1
 10716     0C4D  30D2               	movlw	210
 10717     0C4E  0086               	movwf	6
 10718     0C4F  3021               	movlw	33
 10719     0C50  0087               	movwf	7
 10720     0C51  0801               	movf	1,w
 10721     0C52  00C2               	movwf	??_ModbusSlaveF04+2
 10722     0C53  01C3               	clrf	??_ModbusSlaveF04+3
 10723     0C54  303C               	movlw	60
 10724     0C55  00C4               	movwf	??_ModbusSlaveF04+4
 10725     0C56  3021               	movlw	33
 10726     0C57  00C5               	movwf	??_ModbusSlaveF04+5
 10727     0C58  0842               	movf	??_ModbusSlaveF04+2,w
 10728     0C59  0744               	addwf	??_ModbusSlaveF04+4,w
 10729     0C5A  00C6               	movwf	??_ModbusSlaveF04+6
 10730     0C5B  0843               	movf	??_ModbusSlaveF04+3,w
 10731     0C5C  3D45               	addwfc	??_ModbusSlaveF04+5,w
 10732     0C5D  00C7               	movwf	??_ModbusSlaveF04+7
 10733     0C5E  0846               	movf	??_ModbusSlaveF04+6,w
 10734     0C5F  0086               	movwf	6
 10735     0C60  0847               	movf	??_ModbusSlaveF04+7,w
 10736     0C61  0087               	movwf	7
 10737     0C62  0841               	movf	??_ModbusSlaveF04+1,w
 10738     0C63  0081               	movwf	1
 10739                           
 10740                           ;Mobbus_Slave.c: 56:         SES_Modbus.u8BufferSize++;
 10741     0C64  3001               	movlw	1
 10742     0C65  00C0               	movwf	??_ModbusSlaveF04
 10743     0C66  30D2               	movlw	210
 10744     0C67  0086               	movwf	6
 10745     0C68  3021               	movlw	33
 10746     0C69  0087               	movwf	7
 10747     0C6A  0840               	movf	??_ModbusSlaveF04,w
 10748     0C6B  0781               	addwf	1,f
 10749     0C6C                     l3746:
 10750                           
 10751                           ;Mobbus_Slave.c: 57:     }
 10752     0C6C  3001               	movlw	1
 10753     0C6D  07D2               	addwf	ModbusSlaveF04@i,f
 10754     0C6E  3000               	movlw	0
 10755     0C6F  3DD3               	addwfc	ModbusSlaveF04@i+1,f
 10756     0C70                     l3748:
 10757     0C70  084C               	movf	ModbusSlaveF04@u8regsno,w
 10758     0C71  074A               	addwf	ModbusSlaveF04@u8StartAdd,w
 10759     0C72  00C0               	movwf	??_ModbusSlaveF04
 10760     0C73  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10761     0C74  1803               	skipnc
 10762     0C75  0A4B               	incf	ModbusSlaveF04@u8StartAdd+1,w
 10763     0C76  00C1               	movwf	??_ModbusSlaveF04+1
 10764     0C77  0841               	movf	??_ModbusSlaveF04+1,w
 10765     0C78  0253               	subwf	ModbusSlaveF04@i+1,w
 10766     0C79  1D03               	skipz
 10767     0C7A  2C7D               	goto	u2515
 10768     0C7B  0840               	movf	??_ModbusSlaveF04,w
 10769     0C7C  0252               	subwf	ModbusSlaveF04@i,w
 10770     0C7D                     u2515:
 10771     0C7D  1C03               	skipc
 10772     0C7E  2C80               	goto	u2511
 10773     0C7F  2C81               	goto	u2510
 10774     0C80                     u2511:
 10775     0C80  2C18               	goto	l3744
 10776     0C81                     u2510:
 10777     0C81                     l3750:
 10778     0C81                     l3752:
 10779                           
 10780                           ;Mobbus_Slave.c: 59:     Modbus_sendTxBuff();
 10781     0C81  3186  26EA  318B   	fcall	_Modbus_sendTxBuff
 10782     0C84                     l906:
 10783     0C84  0008               	return
 10784     0C85                     __end_of_ModbusSlaveF04:
 10785                           
 10786                           	psect	text48
 10787     06EA                     __ptext48:	
 10788 ;; *************** function _Modbus_sendTxBuff *****************
 10789 ;; Defined at:
 10790 ;;		line 169 in file "Mobbus_Slave.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  u32overTimec    4   26[BANK0 ] volatile unsigned long 
 10795 ;;  index           2   24[BANK0 ] int 
 10796 ;;  u16crc          2   22[BANK0 ] unsigned short 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      void 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10806 ;;      Params:         0       0       0       0       0       0       0       0
 10807 ;;      Locals:         0       8       0       0       0       0       0       0
 10808 ;;      Temps:          0       7       0       0       0       0       0       0
 10809 ;;      Totals:         0      15       0       0       0       0       0       0
 10810 ;;Total ram usage:       15 bytes
 10811 ;; Hardware stack levels used: 1
 10812 ;; Hardware stack levels required when called: 8
 10813 ;; This function calls:
 10814 ;;		_EUSART_Write
 10815 ;;		_EUSART_is_tx_done
 10816 ;;		_Get_millis
 10817 ;;		_Modbus_calcCRC
 10818 ;; This function is called by:
 10819 ;;		_ModbusSlaveF04
 10820 ;;		_ModbusRTU_Slave_Poll
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824     06EA                     _Modbus_sendTxBuff:	
 10825                           ;psect for function _Modbus_sendTxBuff
 10826                           
 10827     06EA                     l3608:	
 10828                           ;incstack = 0
 10829                           ; Regs used in _Modbus_sendTxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10830                           
 10831                           
 10832                           ;Mobbus_Slave.c: 170:     uint16_t u16crc = Modbus_calcCRC(SES_Modbus.u8BufferSize);
 10833     06EA  30D2               	movlw	210
 10834     06EB  0086               	movwf	6
 10835     06EC  3021               	movlw	33
 10836     06ED  0087               	movwf	7
 10837     06EE  0801               	movf	1,w
 10838     06EF  3189  2187  3186   	fcall	_Modbus_calcCRC
 10839     06F2  0020               	movlb	0	; select bank0
 10840     06F3  0821               	movf	?_Modbus_calcCRC+1,w
 10841     06F4  00B7               	movwf	Modbus_sendTxBuff@u16crc+1
 10842     06F5  0820               	movf	?_Modbus_calcCRC,w
 10843     06F6  00B6               	movwf	Modbus_sendTxBuff@u16crc
 10844     06F7                     l3610:
 10845                           
 10846                           ;Mobbus_Slave.c: 171:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc >> 8;
 10847     06F7  0837               	movf	Modbus_sendTxBuff@u16crc+1,w
 10848     06F8  00AF               	movwf	??_Modbus_sendTxBuff
 10849     06F9  30D2               	movlw	210
 10850     06FA  0086               	movwf	6
 10851     06FB  3021               	movlw	33
 10852     06FC  0087               	movwf	7
 10853     06FD  0801               	movf	1,w
 10854     06FE  00B0               	movwf	??_Modbus_sendTxBuff+1
 10855     06FF  01B1               	clrf	??_Modbus_sendTxBuff+2
 10856     0700  303C               	movlw	60
 10857     0701  00B2               	movwf	??_Modbus_sendTxBuff+3
 10858     0702  3021               	movlw	33
 10859     0703  00B3               	movwf	??_Modbus_sendTxBuff+4
 10860     0704  0830               	movf	??_Modbus_sendTxBuff+1,w
 10861     0705  0732               	addwf	??_Modbus_sendTxBuff+3,w
 10862     0706  00B4               	movwf	??_Modbus_sendTxBuff+5
 10863     0707  0831               	movf	??_Modbus_sendTxBuff+2,w
 10864     0708  3D33               	addwfc	??_Modbus_sendTxBuff+4,w
 10865     0709  00B5               	movwf	??_Modbus_sendTxBuff+6
 10866     070A  0834               	movf	??_Modbus_sendTxBuff+5,w
 10867     070B  0086               	movwf	6
 10868     070C  0835               	movf	??_Modbus_sendTxBuff+6,w
 10869     070D  0087               	movwf	7
 10870     070E  082F               	movf	??_Modbus_sendTxBuff,w
 10871     070F  0081               	movwf	1
 10872     0710                     l3612:
 10873                           
 10874                           ;Mobbus_Slave.c: 172:     SES_Modbus.u8BufferSize++;
 10875     0710  3001               	movlw	1
 10876     0711  00AF               	movwf	??_Modbus_sendTxBuff
 10877     0712  30D2               	movlw	210
 10878     0713  0086               	movwf	6
 10879     0714  3021               	movlw	33
 10880     0715  0087               	movwf	7
 10881     0716  082F               	movf	??_Modbus_sendTxBuff,w
 10882     0717  0781               	addwf	1,f
 10883     0718                     l3614:
 10884                           
 10885                           ;Mobbus_Slave.c: 173:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc & 0x0
      +                          0ff;
 10886     0718  30D2               	movlw	210
 10887     0719  0086               	movwf	6
 10888     071A  3021               	movlw	33
 10889     071B  0087               	movwf	7
 10890     071C  0801               	movf	1,w
 10891     071D  00AF               	movwf	??_Modbus_sendTxBuff
 10892     071E  01B0               	clrf	??_Modbus_sendTxBuff+1
 10893     071F  303C               	movlw	60
 10894     0720  00B1               	movwf	??_Modbus_sendTxBuff+2
 10895     0721  3021               	movlw	33
 10896     0722  00B2               	movwf	??_Modbus_sendTxBuff+3
 10897     0723  082F               	movf	??_Modbus_sendTxBuff,w
 10898     0724  0731               	addwf	??_Modbus_sendTxBuff+2,w
 10899     0725  00B3               	movwf	??_Modbus_sendTxBuff+4
 10900     0726  0830               	movf	??_Modbus_sendTxBuff+1,w
 10901     0727  3D32               	addwfc	??_Modbus_sendTxBuff+3,w
 10902     0728  00B4               	movwf	??_Modbus_sendTxBuff+5
 10903     0729  0833               	movf	??_Modbus_sendTxBuff+4,w
 10904     072A  0086               	movwf	6
 10905     072B  0834               	movf	??_Modbus_sendTxBuff+5,w
 10906     072C  0087               	movwf	7
 10907     072D  0836               	movf	Modbus_sendTxBuff@u16crc,w
 10908     072E  0081               	movwf	1
 10909     072F                     l3616:
 10910                           
 10911                           ;Mobbus_Slave.c: 174:     SES_Modbus.u8BufferSize++;
 10912     072F  3001               	movlw	1
 10913     0730  00AF               	movwf	??_Modbus_sendTxBuff
 10914     0731  30D2               	movlw	210
 10915     0732  0086               	movwf	6
 10916     0733  3021               	movlw	33
 10917     0734  0087               	movwf	7
 10918     0735  082F               	movf	??_Modbus_sendTxBuff,w
 10919     0736  0781               	addwf	1,f
 10920     0737                     l3618:
 10921                           
 10922                           ;Mobbus_Slave.c: 177:     if (SES_Modbus.u8txenpin > 1) {
 10923     0737  3038               	movlw	56
 10924     0738  0086               	movwf	6
 10925     0739  3021               	movlw	33
 10926     073A  0087               	movwf	7
 10927     073B  3141               	addfsr 1,1
 10928     073C  3002               	movlw	2
 10929     073D  0201               	subwf	1,w
 10930     073E  1C03               	skipc
 10931     073F  2F41               	goto	u2421
 10932     0740  2F42               	goto	u2420
 10933     0741                     u2421:
 10934     0741  2F44               	goto	l3620
 10935     0742                     u2420:
 10936     0742                     l940:	
 10937                           ;Mobbus_Slave.c: 178:         do { LATCbits.LATC5 = 1; } while(0);
 10938                           
 10939     0742  0022               	movlb	2	; select bank2
 10940     0743  168E               	bsf	14,5	;volatile
 10941     0744                     l3620:
 10942                           
 10943                           ;Mobbus_Slave.c: 184:     for (int index = 0; index < SES_Modbus.u8BufferSize; index++) 
      +                          {
 10944     0744  0020               	movlb	0	; select bank0
 10945     0745  01B8               	clrf	Modbus_sendTxBuff@index
 10946     0746  01B9               	clrf	Modbus_sendTxBuff@index+1
 10947     0747  2F5C               	goto	l3626
 10948     0748                     l3622:
 10949                           
 10950                           ;Mobbus_Slave.c: 185:         EUSART_Write(SES_Modbus.au8Buffer[index]);
 10951     0748  303C               	movlw	60
 10952     0749  0020               	movlb	0	; select bank0
 10953     074A  00AF               	movwf	??_Modbus_sendTxBuff
 10954     074B  3021               	movlw	33
 10955     074C  00B0               	movwf	??_Modbus_sendTxBuff+1
 10956     074D  0838               	movf	Modbus_sendTxBuff@index,w
 10957     074E  072F               	addwf	??_Modbus_sendTxBuff,w
 10958     074F  0086               	movwf	6
 10959     0750  0839               	movf	Modbus_sendTxBuff@index+1,w
 10960     0751  3D30               	addwfc	??_Modbus_sendTxBuff+1,w
 10961     0752  0087               	movwf	7
 10962     0753  0801               	movf	1,w
 10963     0754  3196  2674  3186   	fcall	_EUSART_Write
 10964     0757                     l3624:
 10965                           
 10966                           ;Mobbus_Slave.c: 186:     }
 10967     0757  3001               	movlw	1
 10968     0758  0020               	movlb	0	; select bank0
 10969     0759  07B8               	addwf	Modbus_sendTxBuff@index,f
 10970     075A  3000               	movlw	0
 10971     075B  3DB9               	addwfc	Modbus_sendTxBuff@index+1,f
 10972     075C                     l3626:
 10973     075C  30D2               	movlw	210
 10974     075D  0086               	movwf	6
 10975     075E  3021               	movlw	33
 10976     075F  0087               	movwf	7
 10977     0760  0839               	movf	Modbus_sendTxBuff@index+1,w
 10978     0761  3A80               	xorlw	128
 10979     0762  00AF               	movwf	??_Modbus_sendTxBuff
 10980     0763  3080               	movlw	128
 10981     0764  022F               	subwf	??_Modbus_sendTxBuff,w
 10982     0765  1D03               	skipz
 10983     0766  2F69               	goto	u2435
 10984     0767  0801               	movf	1,w
 10985     0768  0238               	subwf	Modbus_sendTxBuff@index,w
 10986     0769                     u2435:
 10987     0769  1C03               	skipc
 10988     076A  2F6C               	goto	u2431
 10989     076B  2F6D               	goto	u2430
 10990     076C                     u2431:
 10991     076C  2F48               	goto	l3622
 10992     076D                     u2430:
 10993     076D                     l3628:
 10994                           
 10995                           ;Mobbus_Slave.c: 188:     if (SES_Modbus.u8txenpin > 1) {
 10996     076D  3038               	movlw	56
 10997     076E  0086               	movwf	6
 10998     076F  3021               	movlw	33
 10999     0770  0087               	movwf	7
 11000     0771  3141               	addfsr 1,1
 11001     0772  3002               	movlw	2
 11002     0773  0201               	subwf	1,w
 11003     0774  1C03               	skipc
 11004     0775  2F77               	goto	u2441
 11005     0776  2F78               	goto	u2440
 11006     0777                     u2441:
 11007     0777  2FAE               	goto	l3638
 11008     0778                     u2440:
 11009     0778                     l3632:
 11010     0778  3192  229D  3186   	fcall	_EUSART_is_tx_done
 11011     077B  3A00               	xorlw	0
 11012     077C  1903               	skipnz
 11013     077D  2F7F               	goto	u2451
 11014     077E  2F80               	goto	u2450
 11015     077F                     u2451:
 11016     077F  2F78               	goto	l3632
 11017     0780                     u2450:
 11018     0780                     l3634:
 11019                           
 11020                           ;Mobbus_Slave.c: 196:         volatile uint32_t u32overTimecountDown = SES_Modbus.u32ove
      +                          rTime;
 11021     0780  30E6               	movlw	230
 11022     0781  0086               	movwf	6
 11023     0782  3021               	movlw	33
 11024     0783  0087               	movwf	7
 11025     0784  3F40               	moviw [0]fsr1
 11026     0785  0020               	movlb	0	; select bank0
 11027     0786  00BA               	movwf	Modbus_sendTxBuff@u32overTimecountDown	;volatile
 11028     0787  3F41               	moviw [1]fsr1
 11029     0788  00BB               	movwf	Modbus_sendTxBuff@u32overTimecountDown+1	;volatile
 11030     0789  3F42               	moviw [2]fsr1
 11031     078A  00BC               	movwf	Modbus_sendTxBuff@u32overTimecountDown+2	;volatile
 11032     078B  3F43               	moviw [3]fsr1
 11033     078C  00BD               	movwf	Modbus_sendTxBuff@u32overTimecountDown+3	;volatile
 11034     078D                     l3636:	
 11035                           ;Mobbus_Slave.c: 198:         while (u32overTimecountDown-- > 0);
 11036                           
 11037     078D  3001               	movlw	1
 11038     078E  0020               	movlb	0	; select bank0
 11039     078F  00AF               	movwf	??_Modbus_sendTxBuff
 11040     0790  3000               	movlw	0
 11041     0791  00B0               	movwf	??_Modbus_sendTxBuff+1
 11042     0792  3000               	movlw	0
 11043     0793  00B1               	movwf	??_Modbus_sendTxBuff+2
 11044     0794  3000               	movlw	0
 11045     0795  00B2               	movwf	??_Modbus_sendTxBuff+3
 11046     0796  082F               	movf	??_Modbus_sendTxBuff,w
 11047     0797  02BA               	subwf	Modbus_sendTxBuff@u32overTimecountDown,f	;volatile
 11048     0798  0830               	movf	??_Modbus_sendTxBuff+1,w
 11049     0799  3BBB               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+1,f	;volatile
 11050     079A  0831               	movf	??_Modbus_sendTxBuff+2,w
 11051     079B  3BBC               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+2,f	;volatile
 11052     079C  0832               	movf	??_Modbus_sendTxBuff+3,w
 11053     079D  3BBD               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+3,f	;volatile
 11054     079E  0A3A               	incf	Modbus_sendTxBuff@u32overTimecountDown,w	;volatile
 11055     079F  1D03               	skipz
 11056     07A0  2FAB               	goto	u2461
 11057     07A1  0A3B               	incf	Modbus_sendTxBuff@u32overTimecountDown+1,w	;volatile
 11058     07A2  1D03               	skipz
 11059     07A3  2FAB               	goto	u2461
 11060     07A4  0A3C               	incf	Modbus_sendTxBuff@u32overTimecountDown+2,w	;volatile
 11061     07A5  1D03               	skipz
 11062     07A6  2FAB               	goto	u2461
 11063     07A7  0A3D               	incf	Modbus_sendTxBuff@u32overTimecountDown+3,w	;volatile
 11064     07A8  1D03               	btfss	3,2
 11065     07A9  2FAB               	goto	u2461
 11066     07AA  2FAC               	goto	u2460
 11067     07AB                     u2461:
 11068     07AB  2F8D               	goto	l3636
 11069     07AC                     u2460:
 11070     07AC                     l952:	
 11071                           ;Mobbus_Slave.c: 199:         do { LATCbits.LATC5 = 0; } while(0);
 11072                           
 11073     07AC  0022               	movlb	2	; select bank2
 11074     07AD  128E               	bcf	14,5	;volatile
 11075     07AE                     l3638:
 11076                           
 11077                           ;Mobbus_Slave.c: 202:     SES_Modbus.u8BufferSize = 0;
 11078     07AE  30D2               	movlw	210
 11079     07AF  0086               	movwf	6
 11080     07B0  3021               	movlw	33
 11081     07B1  0087               	movwf	7
 11082     07B2  0181               	clrf	1
 11083     07B3                     l3640:
 11084                           
 11085                           ;Mobbus_Slave.c: 205:     SES_Modbus.u32timeOut = Get_millis();
 11086     07B3  3194  243C  3186   	fcall	_Get_millis
 11087     07B6  30E2               	movlw	226
 11088     07B7  0086               	movwf	6
 11089     07B8  3021               	movlw	33
 11090     07B9  0087               	movwf	7
 11091     07BA  0020               	movlb	0	; select bank0
 11092     07BB  0820               	movf	?_Get_millis,w
 11093     07BC  3FC0               	movwi [0]fsr1
 11094     07BD  0821               	movf	?_Get_millis+1,w
 11095     07BE  3FC1               	movwi [1]fsr1
 11096     07BF  0822               	movf	?_Get_millis+2,w
 11097     07C0  3FC2               	movwi [2]fsr1
 11098     07C1  0823               	movf	?_Get_millis+3,w
 11099     07C2  3FC3               	movwi [3]fsr1
 11100     07C3                     l3642:
 11101                           
 11102                           ;Mobbus_Slave.c: 208:     SES_Modbus.u16OutCnt++;
 11103     07C3  30D8               	movlw	216
 11104     07C4  0086               	movwf	6
 11105     07C5  3021               	movlw	33
 11106     07C6  0087               	movwf	7
 11107     07C7  3001               	movlw	1
 11108     07C8  0781               	addwf	1,f
 11109     07C9  3141               	addfsr 1,1
 11110     07CA  1803               	skipnc
 11111     07CB  0A81               	incf	1,f
 11112     07CC                     l954:
 11113     07CC  0008               	return
 11114     07CD                     __end_of_Modbus_sendTxBuff:
 11115                           
 11116                           	psect	text49
 11117     0987                     __ptext49:	
 11118 ;; *************** function _Modbus_calcCRC *****************
 11119 ;; Defined at:
 11120 ;;		line 211 in file "Mobbus_Slave.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  len             1    wreg     unsigned char 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  len             1   10[BANK0 ] unsigned char 
 11125 ;;  j               1   12[BANK0 ] unsigned char 
 11126 ;;  temp            2   13[BANK0 ] unsigned int 
 11127 ;;  flag            2    8[BANK0 ] unsigned int 
 11128 ;;  temp2           2    6[BANK0 ] unsigned int 
 11129 ;;  i               1   11[BANK0 ] unsigned char 
 11130 ;; Return value:  Size  Location     Type
 11131 ;;                  2    0[BANK0 ] unsigned short 
 11132 ;; Registers used:
 11133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11134 ;; Tracked objects:
 11135 ;;		On entry : 0/0
 11136 ;;		On exit  : 0/0
 11137 ;;		Unchanged: 0/0
 11138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11139 ;;      Params:         0       2       0       0       0       0       0       0
 11140 ;;      Locals:         0       9       0       0       0       0       0       0
 11141 ;;      Temps:          0       4       0       0       0       0       0       0
 11142 ;;      Totals:         0      15       0       0       0       0       0       0
 11143 ;;Total ram usage:       15 bytes
 11144 ;; Hardware stack levels used: 1
 11145 ;; Hardware stack levels required when called: 7
 11146 ;; This function calls:
 11147 ;;		Nothing
 11148 ;; This function is called by:
 11149 ;;		_validateRequest
 11150 ;;		_Modbus_sendTxBuff
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154     0987                     _Modbus_calcCRC:	
 11155                           ;psect for function _Modbus_calcCRC
 11156                           
 11157                           
 11158                           ;incstack = 0
 11159                           ; Regs used in _Modbus_calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 11160                           ;Modbus_calcCRC@len stored from wreg
 11161     0987  0020               	movlb	0	; select bank0
 11162     0988  00AA               	movwf	Modbus_calcCRC@len
 11163     0989                     l3502:
 11164                           
 11165                           ;Mobbus_Slave.c: 212:     unsigned int temp, temp2, flag;;Mobbus_Slave.c: 213:     temp 
      +                          = 0xFFFF;
 11166     0989  30FF               	movlw	255
 11167     098A  00AD               	movwf	Modbus_calcCRC@temp
 11168     098B  30FF               	movlw	255
 11169     098C  00AE               	movwf	Modbus_calcCRC@temp+1
 11170     098D                     l3504:
 11171                           
 11172                           ;Mobbus_Slave.c: 214:     unsigned char i = 0;
 11173     098D  01AB               	clrf	Modbus_calcCRC@i
 11174                           
 11175                           ;Mobbus_Slave.c: 215:     for (i = 0; i < len; i++) {
 11176     098E  01AB               	clrf	Modbus_calcCRC@i
 11177     098F  29C7               	goto	l3530
 11178     0990                     l3506:
 11179                           
 11180                           ;Mobbus_Slave.c: 216:         temp = temp ^ SES_Modbus.au8Buffer[i];
 11181     0990  082B               	movf	Modbus_calcCRC@i,w
 11182     0991  00A2               	movwf	??_Modbus_calcCRC
 11183     0992  01A3               	clrf	??_Modbus_calcCRC+1
 11184     0993  303C               	movlw	60
 11185     0994  00A4               	movwf	??_Modbus_calcCRC+2
 11186     0995  3021               	movlw	33
 11187     0996  00A5               	movwf	??_Modbus_calcCRC+3
 11188     0997  0822               	movf	??_Modbus_calcCRC,w
 11189     0998  0724               	addwf	??_Modbus_calcCRC+2,w
 11190     0999  0086               	movwf	6
 11191     099A  0823               	movf	??_Modbus_calcCRC+1,w
 11192     099B  3D25               	addwfc	??_Modbus_calcCRC+3,w
 11193     099C  0087               	movwf	7
 11194     099D  082D               	movf	Modbus_calcCRC@temp,w
 11195     099E  0601               	xorwf	1,w
 11196     099F  00AD               	movwf	Modbus_calcCRC@temp
 11197     09A0  082E               	movf	Modbus_calcCRC@temp+1,w
 11198     09A1  00AE               	movwf	Modbus_calcCRC@temp+1
 11199     09A2                     l3508:
 11200     09A2                     l3510:
 11201                           
 11202                           ;Mobbus_Slave.c: 218:         for (j = 1; j <= 8; j++) {
 11203     09A2  01AC               	clrf	Modbus_calcCRC@j
 11204     09A3  0AAC               	incf	Modbus_calcCRC@j,f
 11205     09A4                     l3516:
 11206                           
 11207                           ;Mobbus_Slave.c: 219:             flag = temp & 0x0001;
 11208     09A4  3001               	movlw	1
 11209     09A5  052D               	andwf	Modbus_calcCRC@temp,w
 11210     09A6  00A8               	movwf	Modbus_calcCRC@flag
 11211     09A7  3000               	movlw	0
 11212     09A8  052E               	andwf	Modbus_calcCRC@temp+1,w
 11213     09A9  00A9               	movwf	Modbus_calcCRC@flag+1
 11214     09AA                     l3518:
 11215                           
 11216                           ;Mobbus_Slave.c: 220:             temp >>= 1;
 11217     09AA  3001               	movlw	1
 11218     09AB                     u2325:
 11219     09AB  36AE               	lsrf	Modbus_calcCRC@temp+1,f
 11220     09AC  0CAD               	rrf	Modbus_calcCRC@temp,f
 11221     09AD  0B89               	decfsz	9,f
 11222     09AE  29AB               	goto	u2325
 11223     09AF                     l3520:
 11224                           
 11225                           ;Mobbus_Slave.c: 221:             if (flag)
 11226     09AF  0828               	movf	Modbus_calcCRC@flag,w
 11227     09B0  0429               	iorwf	Modbus_calcCRC@flag+1,w
 11228     09B1  1903               	btfsc	3,2
 11229     09B2  29B4               	goto	u2331
 11230     09B3  29B5               	goto	u2330
 11231     09B4                     u2331:
 11232     09B4  29B9               	goto	l3524
 11233     09B5                     u2330:
 11234     09B5                     l3522:
 11235                           
 11236                           ;Mobbus_Slave.c: 222:                 temp ^= 0xA001;
 11237     09B5  3001               	movlw	1
 11238     09B6  06AD               	xorwf	Modbus_calcCRC@temp,f
 11239     09B7  30A0               	movlw	160
 11240     09B8  06AE               	xorwf	Modbus_calcCRC@temp+1,f
 11241     09B9                     l3524:
 11242                           
 11243                           ;Mobbus_Slave.c: 223:         }
 11244     09B9  3001               	movlw	1
 11245     09BA  00A2               	movwf	??_Modbus_calcCRC
 11246     09BB  0822               	movf	??_Modbus_calcCRC,w
 11247     09BC  07AC               	addwf	Modbus_calcCRC@j,f
 11248     09BD                     l3526:
 11249     09BD  3009               	movlw	9
 11250     09BE  022C               	subwf	Modbus_calcCRC@j,w
 11251     09BF  1C03               	skipc
 11252     09C0  29C2               	goto	u2341
 11253     09C1  29C3               	goto	u2340
 11254     09C2                     u2341:
 11255     09C2  29A4               	goto	l3516
 11256     09C3                     u2340:
 11257     09C3                     l3528:
 11258                           
 11259                           ;Mobbus_Slave.c: 224:     }
 11260     09C3  3001               	movlw	1
 11261     09C4  00A2               	movwf	??_Modbus_calcCRC
 11262     09C5  0822               	movf	??_Modbus_calcCRC,w
 11263     09C6  07AB               	addwf	Modbus_calcCRC@i,f
 11264     09C7                     l3530:
 11265     09C7  082A               	movf	Modbus_calcCRC@len,w
 11266     09C8  022B               	subwf	Modbus_calcCRC@i,w
 11267     09C9  1C03               	skipc
 11268     09CA  29CC               	goto	u2351
 11269     09CB  29CD               	goto	u2350
 11270     09CC                     u2351:
 11271     09CC  2990               	goto	l3506
 11272     09CD                     u2350:
 11273     09CD                     l3532:
 11274                           
 11275                           ;Mobbus_Slave.c: 226:     temp2 = temp >> 8;
 11276     09CD  082E               	movf	Modbus_calcCRC@temp+1,w
 11277     09CE  00A3               	movwf	??_Modbus_calcCRC+1
 11278     09CF  082D               	movf	Modbus_calcCRC@temp,w
 11279     09D0  00A2               	movwf	??_Modbus_calcCRC
 11280     09D1  0823               	movf	??_Modbus_calcCRC+1,w
 11281     09D2  00A2               	movwf	??_Modbus_calcCRC
 11282     09D3  01A3               	clrf	??_Modbus_calcCRC+1
 11283     09D4  0822               	movf	??_Modbus_calcCRC,w
 11284     09D5  00A6               	movwf	Modbus_calcCRC@temp2
 11285     09D6  0823               	movf	??_Modbus_calcCRC+1,w
 11286     09D7  00A7               	movwf	Modbus_calcCRC@temp2+1
 11287     09D8                     l3534:
 11288                           
 11289                           ;Mobbus_Slave.c: 227:     temp = (temp << 8) | temp2;
 11290     09D8  082D               	movf	Modbus_calcCRC@temp,w
 11291     09D9  00A3               	movwf	??_Modbus_calcCRC+1
 11292     09DA  01A2               	clrf	??_Modbus_calcCRC
 11293     09DB  0826               	movf	Modbus_calcCRC@temp2,w
 11294     09DC  0422               	iorwf	??_Modbus_calcCRC,w
 11295     09DD  00AD               	movwf	Modbus_calcCRC@temp
 11296     09DE  0827               	movf	Modbus_calcCRC@temp2+1,w
 11297     09DF  0423               	iorwf	??_Modbus_calcCRC+1,w
 11298     09E0  00AE               	movwf	Modbus_calcCRC@temp+1
 11299     09E1                     l3536:
 11300                           
 11301                           ;Mobbus_Slave.c: 231:     return temp;
 11302     09E1  082E               	movf	Modbus_calcCRC@temp+1,w
 11303     09E2  00A1               	movwf	?_Modbus_calcCRC+1
 11304     09E3  082D               	movf	Modbus_calcCRC@temp,w
 11305     09E4  00A0               	movwf	?_Modbus_calcCRC
 11306     09E5                     l963:
 11307     09E5  0008               	return
 11308     09E6                     __end_of_Modbus_calcCRC:
 11309                           
 11310                           	psect	text50
 11311     143C                     __ptext50:	
 11312 ;; *************** function _Get_millis *****************
 11313 ;; Defined at:
 11314 ;;		line 15 in file "tick.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;		None
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  4    0[BANK0 ] unsigned long 
 11321 ;; Registers used:
 11322 ;;		wreg
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11328 ;;      Params:         0       4       0       0       0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0       0
 11331 ;;      Totals:         0       4       0       0       0       0       0       0
 11332 ;;Total ram usage:        4 bytes
 11333 ;; Hardware stack levels used: 1
 11334 ;; Hardware stack levels required when called: 7
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_Task_Sensor
 11339 ;;		_ModbusRTU_Slave_Poll
 11340 ;;		_Modbus_sendTxBuff
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344     143C                     _Get_millis:	
 11345                           ;psect for function _Get_millis
 11346                           
 11347     143C                     l3498:	
 11348                           ;incstack = 0
 11349                           ; Regs used in _Get_millis: [wreg]
 11350                           
 11351                           
 11352                           ;tick.c: 16:     return device_time;
 11353     143C  0021               	movlb	1	; select bank1
 11354     143D  085A               	movf	(_device_time+3)^(0+128),w	;volatile
 11355     143E  0020               	movlb	0	; select bank0
 11356     143F  00A3               	movwf	?_Get_millis+3
 11357     1440  0021               	movlb	1	; select bank1
 11358     1441  0859               	movf	(_device_time+2)^(0+128),w	;volatile
 11359     1442  0020               	movlb	0	; select bank0
 11360     1443  00A2               	movwf	?_Get_millis+2
 11361     1444  0021               	movlb	1	; select bank1
 11362     1445  0858               	movf	(_device_time+1)^(0+128),w	;volatile
 11363     1446  0020               	movlb	0	; select bank0
 11364     1447  00A1               	movwf	?_Get_millis+1
 11365     1448  0021               	movlb	1	; select bank1
 11366     1449  0857               	movf	_device_time^(0+128),w	;volatile
 11367     144A  0020               	movlb	0	; select bank0
 11368     144B  00A0               	movwf	?_Get_millis
 11369     144C                     l999:
 11370     144C  0008               	return
 11371     144D                     __end_of_Get_millis:
 11372                           
 11373                           	psect	text51
 11374     129D                     __ptext51:	
 11375 ;; *************** function _EUSART_is_tx_done *****************
 11376 ;; Defined at:
 11377 ;;		line 142 in file "mcc_generated_files/eusart.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;		None
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      _Bool 
 11384 ;; Registers used:
 11385 ;;		wreg, status,2, status,0
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11391 ;;      Params:         0       0       0       0       0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0
 11394 ;;      Totals:         0       0       0       0       0       0       0       0
 11395 ;;Total ram usage:        0 bytes
 11396 ;; Hardware stack levels used: 1
 11397 ;; Hardware stack levels required when called: 7
 11398 ;; This function calls:
 11399 ;;		Nothing
 11400 ;; This function is called by:
 11401 ;;		_Modbus_sendTxBuff
 11402 ;; This function uses a non-reentrant model
 11403 ;;
 11404                           
 11405     129D                     _EUSART_is_tx_done:	
 11406                           ;psect for function _EUSART_is_tx_done
 11407                           
 11408     129D                     l3474:	
 11409                           ;incstack = 0
 11410                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
 11411                           
 11412                           
 11413                           ;mcc_generated_files/eusart.c: 144:     return TXSTAbits.TRMT;
 11414     129D  0023               	movlb	3	; select bank3
 11415     129E  0C1E               	rrf	30,w	;volatile
 11416     129F  3901               	andlw	1
 11417     12A0                     l288:
 11418     12A0  0008               	return
 11419     12A1                     __end_of_EUSART_is_tx_done:
 11420                           
 11421                           	psect	text52
 11422     1674                     __ptext52:	
 11423 ;; *************** function _EUSART_Write *****************
 11424 ;; Defined at:
 11425 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;  txData          1    wreg     unsigned char 
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;  txData          1    1[BANK0 ] unsigned char 
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      void 
 11432 ;; Registers used:
 11433 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11439 ;;      Params:         0       0       0       0       0       0       0       0
 11440 ;;      Locals:         0       1       0       0       0       0       0       0
 11441 ;;      Temps:          0       1       0       0       0       0       0       0
 11442 ;;      Totals:         0       2       0       0       0       0       0       0
 11443 ;;Total ram usage:        2 bytes
 11444 ;; Hardware stack levels used: 1
 11445 ;; Hardware stack levels required when called: 7
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_Modbus_sendTxBuff
 11450 ;;		_putch
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454     1674                     _EUSART_Write:	
 11455                           ;psect for function _EUSART_Write
 11456                           
 11457                           
 11458                           ;incstack = 0
 11459                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11460                           ;EUSART_Write@txData stored from wreg
 11461     1674  0020               	movlb	0	; select bank0
 11462     1675  00A1               	movwf	EUSART_Write@txData
 11463     1676                     l3478:
 11464     1676                     l3480:	
 11465                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11466                           
 11467                           
 11468                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11469     1676  086D               	movf	_eusartTxBufferRemaining,w	;volatile
 11470     1677  1903               	btfsc	3,2
 11471     1678  2E7A               	goto	u2291
 11472     1679  2E7B               	goto	u2290
 11473     167A                     u2291:
 11474     167A  2E76               	goto	l3480
 11475     167B                     u2290:
 11476     167B                     l303:
 11477                           
 11478                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 11479     167B  0021               	movlb	1	; select bank1
 11480     167C  1A11               	btfsc	17,4	;volatile
 11481     167D  2E7F               	goto	u2301
 11482     167E  2E80               	goto	u2300
 11483     167F                     u2301:
 11484     167F  2E85               	goto	l304
 11485     1680                     u2300:
 11486     1680                     l3482:
 11487                           
 11488                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
 11489     1680  0020               	movlb	0	; select bank0
 11490     1681  0821               	movf	EUSART_Write@txData,w
 11491     1682  0023               	movlb	3	; select bank3
 11492     1683  009A               	movwf	26	;volatile
 11493                           
 11494                           ;mcc_generated_files/eusart.c: 182:     }
 11495     1684  2E9B               	goto	l3494
 11496     1685                     l304:	
 11497                           ;mcc_generated_files/eusart.c: 183:     else
 11498                           
 11499                           
 11500                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 11501     1685  1211               	bcf	17,4	;volatile
 11502     1686                     l3484:
 11503                           
 11504                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11505     1686  0020               	movlb	0	; select bank0
 11506     1687  086F               	movf	_eusartTxHead,w
 11507     1688  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11508     1689  0086               	movwf	6
 11509     168A  3001               	movlw	1	; select bank2/3
 11510     168B  0087               	movwf	7
 11511     168C  0821               	movf	EUSART_Write@txData,w
 11512     168D  0081               	movwf	1
 11513     168E                     l3486:
 11514     168E  3001               	movlw	1
 11515     168F  00A0               	movwf	??_EUSART_Write
 11516     1690  0820               	movf	??_EUSART_Write,w
 11517     1691  07EF               	addwf	_eusartTxHead,f	;volatile
 11518     1692                     l3488:
 11519                           
 11520                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11521     1692  3008               	movlw	8
 11522     1693  026F               	subwf	_eusartTxHead,w	;volatile
 11523     1694  1C03               	skipc
 11524     1695  2E97               	goto	u2311
 11525     1696  2E98               	goto	u2310
 11526     1697                     u2311:
 11527     1697  2E99               	goto	l3492
 11528     1698                     u2310:
 11529     1698                     l3490:
 11530                           
 11531                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11532     1698  01EF               	clrf	_eusartTxHead	;volatile
 11533     1699                     l3492:
 11534                           
 11535                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11536     1699  3001               	movlw	1
 11537     169A  02ED               	subwf	_eusartTxBufferRemaining,f	;volatile
 11538     169B                     l3494:
 11539                           
 11540                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 11541     169B  0021               	movlb	1	; select bank1
 11542     169C  1611               	bsf	17,4	;volatile
 11543     169D                     l307:
 11544     169D  0008               	return
 11545     169E                     __end_of_EUSART_Write:
 11546                           
 11547                           	psect	text53
 11548     0887                     __ptext53:	
 11549 ;; *************** function _ModbusSlave_Init *****************
 11550 ;; Defined at:
 11551 ;;		line 234 in file "Mobbus_Slave.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;  _SW_Ad          1    wreg     unsigned char 
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;  _SW_Ad          1    0[BANK0 ] unsigned char 
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  1    wreg      void 
 11558 ;; Registers used:
 11559 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11565 ;;      Params:         0       0       0       0       0       0       0       0
 11566 ;;      Locals:         0       1       0       0       0       0       0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0
 11568 ;;      Totals:         0       1       0       0       0       0       0       0
 11569 ;;Total ram usage:        1 bytes
 11570 ;; Hardware stack levels used: 1
 11571 ;; Hardware stack levels required when called: 7
 11572 ;; This function calls:
 11573 ;;		Nothing
 11574 ;; This function is called by:
 11575 ;;		_Task_MB
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579     0887                     _ModbusSlave_Init:	
 11580                           ;psect for function _ModbusSlave_Init
 11581                           
 11582                           
 11583                           ;incstack = 0
 11584                           ; Regs used in _ModbusSlave_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11585                           ;ModbusSlave_Init@_SW_Ad stored from wreg
 11586     0887  0020               	movlb	0	; select bank0
 11587     0888  00A0               	movwf	ModbusSlave_Init@_SW_Ad
 11588     0889                     l4798:
 11589                           
 11590                           ;Mobbus_Slave.c: 235:     SES_Modbus.u8id = (uint8_t) _SW_Ad;
 11591     0889  3038               	movlw	56
 11592     088A  0086               	movwf	6
 11593     088B  3021               	movlw	33
 11594     088C  0087               	movwf	7
 11595     088D  0820               	movf	ModbusSlave_Init@_SW_Ad,w
 11596     088E  3FC0               	movwi [0]fsr1
 11597                           
 11598                           ;Mobbus_Slave.c: 236:     SES_Modbus.u8txenpin = RS485;
 11599     088F  3039               	movlw	57
 11600     0890  0086               	movwf	6
 11601     0891  3021               	movlw	33
 11602     0892  0087               	movwf	7
 11603     0893  3002               	movlw	2
 11604     0894  0081               	movwf	1
 11605     0895                     l4800:
 11606                           
 11607                           ;Mobbus_Slave.c: 237:     SES_Modbus.u16timeOut = 1000;
 11608     0895  30DC               	movlw	220
 11609     0896  0086               	movwf	6
 11610     0897  3021               	movlw	33
 11611     0898  0087               	movwf	7
 11612     0899  30E8               	movlw	232
 11613     089A  3FC0               	movwi [0]fsr1
 11614     089B  3003               	movlw	3
 11615     089C  3FC1               	movwi [1]fsr1
 11616     089D                     l4802:
 11617                           
 11618                           ;Mobbus_Slave.c: 238:     SES_Modbus.u32overTime = 0;
 11619     089D  30E6               	movlw	230
 11620     089E  0086               	movwf	6
 11621     089F  3021               	movlw	33
 11622     08A0  0087               	movwf	7
 11623     08A1  3000               	movlw	0
 11624     08A2  3FC0               	movwi [0]fsr1
 11625     08A3  3FC1               	movwi [1]fsr1
 11626     08A4  3FC2               	movwi [2]fsr1
 11627     08A5  3FC3               	movwi [3]fsr1
 11628                           
 11629                           ;Mobbus_Slave.c: 240:     if (SES_Modbus.u8txenpin > 1) do { LATCbits.LATC5 = 0; } while
      +                          (0);
 11630     08A6  3038               	movlw	56
 11631     08A7  0086               	movwf	6
 11632     08A8  3021               	movlw	33
 11633     08A9  0087               	movwf	7
 11634     08AA  3141               	addfsr 1,1
 11635     08AB  3002               	movlw	2
 11636     08AC  0201               	subwf	1,w
 11637     08AD  1C03               	skipc
 11638     08AE  28B0               	goto	u4021
 11639     08AF  28B1               	goto	u4020
 11640     08B0                     u4021:
 11641     08B0  28B4               	goto	l970
 11642     08B1                     u4020:
 11643     08B1                     l967:
 11644     08B1  0022               	movlb	2	; select bank2
 11645     08B2  128E               	bcf	14,5	;volatile
 11646     08B3  28B6               	goto	l4804
 11647     08B4                     l970:
 11648     08B4  0022               	movlb	2	; select bank2
 11649     08B5  168E               	bsf	14,5	;volatile
 11650     08B6                     l4804:
 11651                           
 11652                           ;Mobbus_Slave.c: 243:     SES_Modbus.u8lastRec = SES_Modbus.u8BufferSize = 0;
 11653     08B6  30D2               	movlw	210
 11654     08B7  0086               	movwf	6
 11655     08B8  3021               	movlw	33
 11656     08B9  0087               	movwf	7
 11657     08BA  0181               	clrf	1
 11658     08BB  30D3               	movlw	211
 11659     08BC  0086               	movwf	6
 11660     08BD  3021               	movlw	33
 11661     08BE  0087               	movwf	7
 11662     08BF  0181               	clrf	1
 11663                           
 11664                           ;Mobbus_Slave.c: 244:     SES_Modbus.u16InCnt = SES_Modbus.u16OutCnt = SES_Modbus.u16err
      +                          Cnt = 0;
 11665     08C0  30DA               	movlw	218
 11666     08C1  0086               	movwf	6
 11667     08C2  3021               	movlw	33
 11668     08C3  0087               	movwf	7
 11669     08C4  3000               	movlw	0
 11670     08C5  3FC0               	movwi [0]fsr1
 11671     08C6  3FC1               	movwi [1]fsr1
 11672     08C7  30D8               	movlw	216
 11673     08C8  0086               	movwf	6
 11674     08C9  3021               	movlw	33
 11675     08CA  0087               	movwf	7
 11676     08CB  3000               	movlw	0
 11677     08CC  3FC0               	movwi [0]fsr1
 11678     08CD  3FC1               	movwi [1]fsr1
 11679     08CE  30D6               	movlw	214
 11680     08CF  0086               	movwf	6
 11681     08D0  3021               	movlw	33
 11682     08D1  0087               	movwf	7
 11683     08D2  3000               	movlw	0
 11684     08D3  3FC0               	movwi [0]fsr1
 11685     08D4  3FC1               	movwi [1]fsr1
 11686     08D5                     l972:
 11687     08D5  0008               	return
 11688     08D6                     __end_of_ModbusSlave_Init:
 11689                           
 11690                           	psect	text54
 11691     07CD                     __ptext54:	
 11692 ;; *************** function _Task_Indicator *****************
 11693 ;; Defined at:
 11694 ;;		line 7 in file "MCU.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;		None
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11708 ;;      Params:         0       0       0       0       0       0       0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       2       0       0       0       0       0       0
 11711 ;;      Totals:         0       2       0       0       0       0       0       0
 11712 ;;Total ram usage:        2 bytes
 11713 ;; Hardware stack levels used: 1
 11714 ;; Hardware stack levels required when called: 7
 11715 ;; This function calls:
 11716 ;;		Nothing
 11717 ;; This function is called by:
 11718 ;;		_App_Process
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722     07CD                     _Task_Indicator:	
 11723                           ;psect for function _Task_Indicator
 11724                           
 11725     07CD                     l4954:	
 11726                           ;incstack = 0
 11727                           ; Regs used in _Task_Indicator: [wreg-fsr0h+status,2+status,0]
 11728                           
 11729                           
 11730                           ;MCU.c: 8:     switch (f_Indicator) {
 11731     07CD  2FE4               	goto	l4962
 11732     07CE                     l839:	
 11733                           ;MCU.c: 10:         {;MCU.c: 11:             do { LATCbits.LATC1 = 1; } while(0);
 11734                           
 11735     07CE  0022               	movlb	2	; select bank2
 11736     07CF  148E               	bsf	14,1	;volatile
 11737     07D0                     l841:	
 11738                           ;MCU.c: 12:             do { LATCbits.LATC0 = 1; } while(0);
 11739                           
 11740     07D0  140E               	bsf	14,0	;volatile
 11741     07D1  2FFB               	goto	l854
 11742     07D2                     l4956:
 11743     07D2  1003               	clrc
 11744     07D3  0022               	movlb	2	; select bank2
 11745     07D4  1C8E               	btfss	14,1	;volatile
 11746     07D5  1403               	setc
 11747     07D6  1803               	btfsc	3,0
 11748     07D7  2FD9               	goto	u4101
 11749     07D8  2FDC               	goto	u4100
 11750     07D9                     u4101:
 11751     07D9  0022               	movlb	2	; select bank2
 11752     07DA  148E               	bsf	14,1	;volatile
 11753     07DB  2FDE               	goto	u4114
 11754     07DC                     u4100:
 11755     07DC  0022               	movlb	2	; select bank2
 11756     07DD  108E               	bcf	14,1	;volatile
 11757     07DE                     u4114:
 11758     07DE                     l4958:
 11759     07DE  140E               	bsf	14,0	;volatile
 11760     07DF  2FFB               	goto	l854
 11761     07E0                     l850:	
 11762                           ;MCU.c: 22:         {;MCU.c: 23:             do { LATCbits.LATC1 = 1; } while(0);
 11763                           
 11764     07E0  0022               	movlb	2	; select bank2
 11765     07E1  148E               	bsf	14,1	;volatile
 11766     07E2                     l852:	
 11767                           ;MCU.c: 24:             do { LATCbits.LATC0 = 0; } while(0);
 11768                           
 11769     07E2  100E               	bcf	14,0	;volatile
 11770     07E3  2FFB               	goto	l854
 11771     07E4                     l4962:
 11772     07E4  0021               	movlb	1	; select bank1
 11773     07E5  0863               	movf	_f_Indicator^(0+128),w
 11774     07E6  0020               	movlb	0	; select bank0
 11775     07E7  00A0               	movwf	??_Task_Indicator
 11776     07E8  01A1               	clrf	??_Task_Indicator+1
 11777     07E9  1BA0               	btfsc	??_Task_Indicator,7
 11778     07EA  03A1               	decf	??_Task_Indicator+1,f
 11779                           
 11780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11781                           ; Switch size 1, requested type "simple"
 11782                           ; Number of cases is 1, Range of values is 0 to 0
 11783                           ; switch strategies available:
 11784                           ; Name         Instructions Cycles
 11785                           ; simple_byte            4     3 (average)
 11786                           ; direct_byte            8     6 (fixed)
 11787                           ; jumptable            260     6 (fixed)
 11788                           ;	Chosen strategy is simple_byte
 11789     07EB  0821               	movf	??_Task_Indicator+1,w
 11790     07EC  3A00               	xorlw	0	; case 0
 11791     07ED  1903               	skipnz
 11792     07EE  2FF0               	goto	l5348
 11793     07EF  2FFB               	goto	l854
 11794     07F0                     l5348:
 11795                           
 11796                           ; Switch size 1, requested type "simple"
 11797                           ; Number of cases is 3, Range of values is 0 to 2
 11798                           ; switch strategies available:
 11799                           ; Name         Instructions Cycles
 11800                           ; simple_byte           10     6 (average)
 11801                           ; direct_byte           12     6 (fixed)
 11802                           ; jumptable            260     6 (fixed)
 11803                           ;	Chosen strategy is simple_byte
 11804     07F0  0820               	movf	??_Task_Indicator,w
 11805     07F1  3A00               	xorlw	0	; case 0
 11806     07F2  1903               	skipnz
 11807     07F3  2FCE               	goto	l839
 11808     07F4  3A01               	xorlw	1	; case 1
 11809     07F5  1903               	skipnz
 11810     07F6  2FD2               	goto	l4956
 11811     07F7  3A03               	xorlw	3	; case 2
 11812     07F8  1903               	skipnz
 11813     07F9  2FE0               	goto	l850
 11814     07FA  2FFB               	goto	l854
 11815     07FB                     l854:
 11816     07FB  0008               	return
 11817     07FC                     __end_of_Task_Indicator:
 11818                           
 11819                           	psect	text55
 11820     1354                     __ptext55:	
 11821 ;; *************** function _App_Init *****************
 11822 ;; Defined at:
 11823 ;;		line 54 in file "MCU.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;		None
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;		None
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, status,2, status,0, pclath, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11837 ;;      Params:         0       0       0       0       0       0       0       0
 11838 ;;      Locals:         0       0       0       0       0       0       0       0
 11839 ;;      Temps:          0       0       0       0       0       0       0       0
 11840 ;;      Totals:         0       0       0       0       0       0       0       0
 11841 ;;Total ram usage:        0 bytes
 11842 ;; Hardware stack levels used: 1
 11843 ;; Hardware stack levels required when called: 9
 11844 ;; This function calls:
 11845 ;;		_Device_Init
 11846 ;;		_TMR1_StartTimer
 11847 ;;		_Tick_Init_SES
 11848 ;; This function is called by:
 11849 ;;		_main
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853     1354                     _App_Init:	
 11854                           ;psect for function _App_Init
 11855                           
 11856     1354                     l5062:	
 11857                           ;incstack = 0
 11858                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
 11859                           
 11860                           
 11861                           ;MCU.c: 55:     Device_Init();
 11862     1354  3189  21E6  3193   	fcall	_Device_Init
 11863     1357                     l5064:
 11864                           
 11865                           ;MCU.c: 56:     TMR1_StartTimer();
 11866     1357  3192  2277  3193   	fcall	_TMR1_StartTimer
 11867     135A                     l5066:
 11868                           
 11869                           ;MCU.c: 57:     Tick_Init_SES();
 11870     135A  3194  245E  3193   	fcall	_Tick_Init_SES
 11871     135D                     l867:
 11872     135D  0008               	return
 11873     135E                     __end_of_App_Init:
 11874                           
 11875                           	psect	text56
 11876     145E                     __ptext56:	
 11877 ;; *************** function _Tick_Init_SES *****************
 11878 ;; Defined at:
 11879 ;;		line 6 in file "tick.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;		None
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0, pclath, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11893 ;;      Params:         0       0       0       0       0       0       0       0
 11894 ;;      Locals:         0       0       0       0       0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0
 11896 ;;      Totals:         0       0       0       0       0       0       0       0
 11897 ;;Total ram usage:        0 bytes
 11898 ;; Hardware stack levels used: 1
 11899 ;; Hardware stack levels required when called: 8
 11900 ;; This function calls:
 11901 ;;		_TMR1_SetInterruptHandler
 11902 ;; This function is called by:
 11903 ;;		_App_Init
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907     145E                     _Tick_Init_SES:	
 11908                           ;psect for function _Tick_Init_SES
 11909                           
 11910     145E                     l5010:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _Tick_Init_SES: [wreg+status,2+status,0+pclath+cstack]
 11913                           
 11914                           
 11915                           ;tick.c: 7:     device_time = 0;
 11916     145E  3000               	movlw	0
 11917     145F  0021               	movlb	1	; select bank1
 11918     1460  00DA               	movwf	(_device_time+3)^(0+128)	;volatile
 11919     1461  3000               	movlw	0
 11920     1462  00D9               	movwf	(_device_time+2)^(0+128)	;volatile
 11921     1463  3000               	movlw	0
 11922     1464  00D8               	movwf	(_device_time+1)^(0+128)	;volatile
 11923     1465  3000               	movlw	0
 11924     1466  00D7               	movwf	_device_time^(0+128)	;volatile
 11925     1467                     l5012:
 11926                           
 11927                           ;tick.c: 8:     TMR1_SetInterruptHandler(rtcc_handle);
 11928     1467  304A               	movlw	low _rtcc_handle
 11929     1468  0020               	movlb	0	; select bank0
 11930     1469  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11931     146A  3013               	movlw	high _rtcc_handle
 11932     146B  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11933     146C  3193  2302  3194   	fcall	_TMR1_SetInterruptHandler
 11934     146F                     l993:
 11935     146F  0008               	return
 11936     1470                     __end_of_Tick_Init_SES:
 11937                           
 11938                           	psect	text57
 11939     1302                     __ptext57:	
 11940 ;; *************** function _TMR1_SetInterruptHandler *****************
 11941 ;; Defined at:
 11942 ;;		line 188 in file "mcc_generated_files/tmr1.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11945 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      void 
 11950 ;; Registers used:
 11951 ;;		wreg
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11957 ;;      Params:         0       2       0       0       0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0       0
 11960 ;;      Totals:         0       2       0       0       0       0       0       0
 11961 ;;Total ram usage:        2 bytes
 11962 ;; Hardware stack levels used: 1
 11963 ;; Hardware stack levels required when called: 7
 11964 ;; This function calls:
 11965 ;;		Nothing
 11966 ;; This function is called by:
 11967 ;;		_TMR1_Initialize
 11968 ;;		_Tick_Init_SES
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972     1302                     _TMR1_SetInterruptHandler:	
 11973                           ;psect for function _TMR1_SetInterruptHandler
 11974                           
 11975     1302                     l4610:	
 11976                           ;incstack = 0
 11977                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11978                           
 11979                           
 11980                           ;mcc_generated_files/tmr1.c: 189:     TMR1_InterruptHandler = InterruptHandler;
 11981     1302  0020               	movlb	0	; select bank0
 11982     1303  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 11983     1304  0022               	movlb	2	; select bank2
 11984     1305  00DE               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 11985     1306  0020               	movlb	0	; select bank0
 11986     1307  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 11987     1308  0022               	movlb	2	; select bank2
 11988     1309  00DD               	movwf	_TMR1_InterruptHandler^(0+256)
 11989     130A                     l402:
 11990     130A  0008               	return
 11991     130B                     __end_of_TMR1_SetInterruptHandler:
 11992                           
 11993                           	psect	text58
 11994     1277                     __ptext58:	
 11995 ;; *************** function _TMR1_StartTimer *****************
 11996 ;; Defined at:
 11997 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;		None
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;		None
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  1    wreg      void 
 12004 ;; Registers used:
 12005 ;;		None
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12011 ;;      Params:         0       0       0       0       0       0       0       0
 12012 ;;      Locals:         0       0       0       0       0       0       0       0
 12013 ;;      Temps:          0       0       0       0       0       0       0       0
 12014 ;;      Totals:         0       0       0       0       0       0       0       0
 12015 ;;Total ram usage:        0 bytes
 12016 ;; Hardware stack levels used: 1
 12017 ;; Hardware stack levels required when called: 7
 12018 ;; This function calls:
 12019 ;;		Nothing
 12020 ;; This function is called by:
 12021 ;;		_App_Init
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025     1277                     _TMR1_StartTimer:	
 12026                           ;psect for function _TMR1_StartTimer
 12027                           
 12028     1277                     l4910:	
 12029                           ;incstack = 0
 12030                           ; Regs used in _TMR1_StartTimer: []
 12031                           
 12032                           
 12033                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 12034     1277  0020               	movlb	0	; select bank0
 12035     1278  1418               	bsf	24,0	;volatile
 12036     1279                     l384:
 12037     1279  0008               	return
 12038     127A                     __end_of_TMR1_StartTimer:
 12039                           
 12040                           	psect	text59
 12041     09E6                     __ptext59:	
 12042 ;; *************** function _Device_Init *****************
 12043 ;; Defined at:
 12044 ;;		line 30 in file "MCU.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;		None
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  value_SW4       1    3[BANK0 ] char 
 12049 ;;  value_SW3       1    2[BANK0 ] char 
 12050 ;;  value_SW2       1    1[BANK0 ] char 
 12051 ;;  value_SW1       1    0[BANK0 ] char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, status,2, status,0
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12061 ;;      Params:         0       0       0       0       0       0       0       0
 12062 ;;      Locals:         0       4       0       0       0       0       0       0
 12063 ;;      Temps:          0       0       0       0       0       0       0       0
 12064 ;;      Totals:         0       4       0       0       0       0       0       0
 12065 ;;Total ram usage:        4 bytes
 12066 ;; Hardware stack levels used: 1
 12067 ;; Hardware stack levels required when called: 7
 12068 ;; This function calls:
 12069 ;;		Nothing
 12070 ;; This function is called by:
 12071 ;;		_App_Init
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075     09E6                     _Device_Init:	
 12076                           ;psect for function _Device_Init
 12077                           
 12078     09E6                     l4968:	
 12079                           ;incstack = 0
 12080                           ; Regs used in _Device_Init: [wreg+status,2+status,0]
 12081                           
 12082                           
 12083                           ;MCU.c: 31:     int8_t value_SW1, value_SW2, value_SW3, value_SW4;;MCU.c: 33:     value_
      +                          SW1 = PORTAbits.RA0;
 12084     09E6  3000               	movlw	0
 12085     09E7  0020               	movlb	0	; select bank0
 12086     09E8  180C               	btfsc	12,0	;volatile
 12087     09E9  3001               	movlw	1
 12088     09EA  00A0               	movwf	Device_Init@value_SW1
 12089                           
 12090                           ;MCU.c: 34:     value_SW2 = PORTAbits.RA1;
 12091     09EB  3000               	movlw	0
 12092     09EC  188C               	btfsc	12,1	;volatile
 12093     09ED  3001               	movlw	1
 12094     09EE  00A1               	movwf	Device_Init@value_SW2
 12095                           
 12096                           ;MCU.c: 35:     value_SW3 = PORTAbits.RA2;
 12097     09EF  3000               	movlw	0
 12098     09F0  190C               	btfsc	12,2	;volatile
 12099     09F1  3001               	movlw	1
 12100     09F2  00A2               	movwf	Device_Init@value_SW3
 12101                           
 12102                           ;MCU.c: 36:     value_SW4 = PORTAbits.RA3;
 12103     09F3  3000               	movlw	0
 12104     09F4  198C               	btfsc	12,3	;volatile
 12105     09F5  3001               	movlw	1
 12106     09F6  00A3               	movwf	Device_Init@value_SW4
 12107     09F7                     l4970:
 12108                           
 12109                           ;MCU.c: 39:     if ((value_SW1 == 1) && (value_SW2 == 0) && (value_SW3 == 0) && (value_S
      +                          W4 == 0))
 12110     09F7  0320               	decf	Device_Init@value_SW1,w
 12111     09F8  1D03               	btfss	3,2
 12112     09F9  29FB               	goto	u4121
 12113     09FA  29FC               	goto	u4120
 12114     09FB                     u4121:
 12115     09FB  2A0E               	goto	l4980
 12116     09FC                     u4120:
 12117     09FC                     l4972:
 12118     09FC  0821               	movf	Device_Init@value_SW2,w
 12119     09FD  1D03               	btfss	3,2
 12120     09FE  2A00               	goto	u4131
 12121     09FF  2A01               	goto	u4130
 12122     0A00                     u4131:
 12123     0A00  2A0E               	goto	l4980
 12124     0A01                     u4130:
 12125     0A01                     l4974:
 12126     0A01  0822               	movf	Device_Init@value_SW3,w
 12127     0A02  1D03               	btfss	3,2
 12128     0A03  2A05               	goto	u4141
 12129     0A04  2A06               	goto	u4140
 12130     0A05                     u4141:
 12131     0A05  2A0E               	goto	l4980
 12132     0A06                     u4140:
 12133     0A06                     l4976:
 12134     0A06  0823               	movf	Device_Init@value_SW4,w
 12135     0A07  1D03               	btfss	3,2
 12136     0A08  2A0A               	goto	u4151
 12137     0A09  2A0B               	goto	u4150
 12138     0A0A                     u4151:
 12139     0A0A  2A0E               	goto	l4980
 12140     0A0B                     u4150:
 12141     0A0B                     l4978:
 12142                           
 12143                           ;MCU.c: 40:     {;MCU.c: 41:         SW_Ad = 0x01;
 12144     0A0B  01E9               	clrf	_SW_Ad
 12145     0A0C  0AE9               	incf	_SW_Ad,f
 12146                           
 12147                           ;MCU.c: 42:     } else if ((value_SW1 == 0) && (value_SW2 == 1) && (value_SW3 == 0) && (
      +                          value_SW4 == 0))
 12148     0A0D  2A53               	goto	l864
 12149     0A0E                     l4980:
 12150     0A0E  0820               	movf	Device_Init@value_SW1,w
 12151     0A0F  1D03               	btfss	3,2
 12152     0A10  2A12               	goto	u4161
 12153     0A11  2A13               	goto	u4160
 12154     0A12                     u4161:
 12155     0A12  2A25               	goto	l4990
 12156     0A13                     u4160:
 12157     0A13                     l4982:
 12158     0A13  0321               	decf	Device_Init@value_SW2,w
 12159     0A14  1D03               	btfss	3,2
 12160     0A15  2A17               	goto	u4171
 12161     0A16  2A18               	goto	u4170
 12162     0A17                     u4171:
 12163     0A17  2A25               	goto	l4990
 12164     0A18                     u4170:
 12165     0A18                     l4984:
 12166     0A18  0822               	movf	Device_Init@value_SW3,w
 12167     0A19  1D03               	btfss	3,2
 12168     0A1A  2A1C               	goto	u4181
 12169     0A1B  2A1D               	goto	u4180
 12170     0A1C                     u4181:
 12171     0A1C  2A25               	goto	l4990
 12172     0A1D                     u4180:
 12173     0A1D                     l4986:
 12174     0A1D  0823               	movf	Device_Init@value_SW4,w
 12175     0A1E  1D03               	btfss	3,2
 12176     0A1F  2A21               	goto	u4191
 12177     0A20  2A22               	goto	u4190
 12178     0A21                     u4191:
 12179     0A21  2A25               	goto	l4990
 12180     0A22                     u4190:
 12181     0A22                     l4988:
 12182                           
 12183                           ;MCU.c: 43:     {;MCU.c: 44:         SW_Ad = 0x02;
 12184     0A22  3002               	movlw	2
 12185     0A23  00E9               	movwf	_SW_Ad
 12186                           
 12187                           ;MCU.c: 45:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 1) && (
      +                          value_SW4 == 0))
 12188     0A24  2A53               	goto	l864
 12189     0A25                     l4990:
 12190     0A25  0820               	movf	Device_Init@value_SW1,w
 12191     0A26  1D03               	btfss	3,2
 12192     0A27  2A29               	goto	u4201
 12193     0A28  2A2A               	goto	u4200
 12194     0A29                     u4201:
 12195     0A29  2A3C               	goto	l5000
 12196     0A2A                     u4200:
 12197     0A2A                     l4992:
 12198     0A2A  0821               	movf	Device_Init@value_SW2,w
 12199     0A2B  1D03               	btfss	3,2
 12200     0A2C  2A2E               	goto	u4211
 12201     0A2D  2A2F               	goto	u4210
 12202     0A2E                     u4211:
 12203     0A2E  2A3C               	goto	l5000
 12204     0A2F                     u4210:
 12205     0A2F                     l4994:
 12206     0A2F  0322               	decf	Device_Init@value_SW3,w
 12207     0A30  1D03               	btfss	3,2
 12208     0A31  2A33               	goto	u4221
 12209     0A32  2A34               	goto	u4220
 12210     0A33                     u4221:
 12211     0A33  2A3C               	goto	l5000
 12212     0A34                     u4220:
 12213     0A34                     l4996:
 12214     0A34  0823               	movf	Device_Init@value_SW4,w
 12215     0A35  1D03               	btfss	3,2
 12216     0A36  2A38               	goto	u4231
 12217     0A37  2A39               	goto	u4230
 12218     0A38                     u4231:
 12219     0A38  2A3C               	goto	l5000
 12220     0A39                     u4230:
 12221     0A39                     l4998:
 12222                           
 12223                           ;MCU.c: 46:     {;MCU.c: 47:         SW_Ad = 0x04;
 12224     0A39  3004               	movlw	4
 12225     0A3A  00E9               	movwf	_SW_Ad
 12226                           
 12227                           ;MCU.c: 48:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 0) && (
      +                          value_SW4 == 1))
 12228     0A3B  2A53               	goto	l864
 12229     0A3C                     l5000:
 12230     0A3C  0820               	movf	Device_Init@value_SW1,w
 12231     0A3D  1D03               	btfss	3,2
 12232     0A3E  2A40               	goto	u4241
 12233     0A3F  2A41               	goto	u4240
 12234     0A40                     u4241:
 12235     0A40  2A53               	goto	l860
 12236     0A41                     u4240:
 12237     0A41                     l5002:
 12238     0A41  0821               	movf	Device_Init@value_SW2,w
 12239     0A42  1D03               	btfss	3,2
 12240     0A43  2A45               	goto	u4251
 12241     0A44  2A46               	goto	u4250
 12242     0A45                     u4251:
 12243     0A45  2A53               	goto	l860
 12244     0A46                     u4250:
 12245     0A46                     l5004:
 12246     0A46  0822               	movf	Device_Init@value_SW3,w
 12247     0A47  1D03               	btfss	3,2
 12248     0A48  2A4A               	goto	u4261
 12249     0A49  2A4B               	goto	u4260
 12250     0A4A                     u4261:
 12251     0A4A  2A53               	goto	l860
 12252     0A4B                     u4260:
 12253     0A4B                     l5006:
 12254     0A4B  0323               	decf	Device_Init@value_SW4,w
 12255     0A4C  1D03               	btfss	3,2
 12256     0A4D  2A4F               	goto	u4271
 12257     0A4E  2A50               	goto	u4270
 12258     0A4F                     u4271:
 12259     0A4F  2A53               	goto	l860
 12260     0A50                     u4270:
 12261     0A50                     l5008:
 12262                           
 12263                           ;MCU.c: 49:     {;MCU.c: 50:         SW_Ad = 0x08;
 12264     0A50  3008               	movlw	8
 12265     0A51  00E9               	movwf	_SW_Ad
 12266     0A52  2A53               	goto	l864
 12267     0A53                     l860:
 12268     0A53                     l864:
 12269     0A53  0008               	return
 12270     0A54                     __end_of_Device_Init:
 12271                           
 12272                           	psect	intentry
 12273     0004                     __pintentry:	
 12274 ;; *************** function _INTERRUPT_InterruptManager *****************
 12275 ;; Defined at:
 12276 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12277 ;; Parameters:    Size  Location     Type
 12278 ;;		None
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1    wreg      void 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 0/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12290 ;;      Params:         0       0       0       0       0       0       0       0
 12291 ;;      Locals:         0       0       0       0       0       0       0       0
 12292 ;;      Temps:          0       0       0       0       0       0       0       0
 12293 ;;      Totals:         0       0       0       0       0       0       0       0
 12294 ;;Total ram usage:        0 bytes
 12295 ;; Hardware stack levels used: 1
 12296 ;; Hardware stack levels required when called: 6
 12297 ;; This function calls:
 12298 ;;		NULL
 12299 ;;		_EUSART_Receive_ISR
 12300 ;;		_EUSART_Transmit_ISR
 12301 ;;		_I2C_MasterIsr
 12302 ;;		_TMR1_ISR
 12303 ;; This function is called by:
 12304 ;;		Interrupt level 1
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308     0004                     _INTERRUPT_InterruptManager:
 12309                           
 12310                           ;incstack = 0
 12311     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12312                           
 12313                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12314     0005  3180               	pagesel	$
 12315     0006                     i1l5134:
 12316                           
 12317                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12318     0006  1F0B               	btfss	11,6	;volatile
 12319     0007  2809               	goto	u444_21
 12320     0008  280A               	goto	u444_20
 12321     0009                     u444_21:
 12322     0009  2856               	goto	i1l204
 12323     000A                     u444_20:
 12324     000A                     i1l5136:
 12325                           
 12326                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 12327     000A  0021               	movlb	1	; select bank1
 12328     000B  1E11               	btfss	17,4	;volatile
 12329     000C  280E               	goto	u445_21
 12330     000D  280F               	goto	u445_20
 12331     000E                     u445_21:
 12332     000E  281B               	goto	i1l193
 12333     000F                     u445_20:
 12334     000F                     i1l5138:
 12335     000F  0020               	movlb	0	; select bank0
 12336     0010  1E11               	btfss	17,4	;volatile
 12337     0011  2813               	goto	u446_21
 12338     0012  2814               	goto	u446_20
 12339     0013                     u446_21:
 12340     0013  281B               	goto	i1l193
 12341     0014                     u446_20:
 12342     0014                     i1l5140:
 12343                           
 12344                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 12345     0014  0022               	movlb	2	; select bank2
 12346     0015  0868               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 12347     0016  008A               	movwf	10
 12348     0017  0867               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 12349     0018  000A               	callw
 12350     0019  3180               	pagesel	$
 12351                           
 12352                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12353     001A  2856               	goto	i1l204
 12354     001B                     i1l193:	
 12355                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 12356                           
 12357     001B  0021               	movlb	1	; select bank1
 12358     001C  1E91               	btfss	17,5	;volatile
 12359     001D  281F               	goto	u447_21
 12360     001E  2820               	goto	u447_20
 12361     001F                     u447_21:
 12362     001F  282C               	goto	i1l195
 12363     0020                     u447_20:
 12364     0020                     i1l5142:
 12365     0020  0020               	movlb	0	; select bank0
 12366     0021  1E91               	btfss	17,5	;volatile
 12367     0022  2824               	goto	u448_21
 12368     0023  2825               	goto	u448_20
 12369     0024                     u448_21:
 12370     0024  282C               	goto	i1l195
 12371     0025                     u448_20:
 12372     0025                     i1l5144:
 12373                           
 12374                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 12375     0025  0022               	movlb	2	; select bank2
 12376     0026  0866               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 12377     0027  008A               	movwf	10
 12378     0028  0865               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 12379     0029  000A               	callw
 12380     002A  3180               	pagesel	$
 12381                           
 12382                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12383     002B  2856               	goto	i1l204
 12384     002C                     i1l195:	
 12385                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
 12386                           
 12387     002C  0021               	movlb	1	; select bank1
 12388     002D  1D92               	btfss	18,3	;volatile
 12389     002E  2830               	goto	u449_21
 12390     002F  2831               	goto	u449_20
 12391     0030                     u449_21:
 12392     0030  283D               	goto	i1l197
 12393     0031                     u449_20:
 12394     0031                     i1l5146:
 12395     0031  0020               	movlb	0	; select bank0
 12396     0032  1D92               	btfss	18,3	;volatile
 12397     0033  2835               	goto	u450_21
 12398     0034  2836               	goto	u450_20
 12399     0035                     u450_21:
 12400     0035  283D               	goto	i1l197
 12401     0036                     u450_20:
 12402     0036                     i1l5148:
 12403                           
 12404                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
 12405     0036  0021               	movlb	1	; select bank1
 12406     0037  0862               	movf	(_MSSP_InterruptHandler+1)^(0+128),w
 12407     0038  008A               	movwf	10
 12408     0039  0861               	movf	_MSSP_InterruptHandler^(0+128),w
 12409     003A  000A               	callw
 12410     003B  3180               	pagesel	$
 12411                           
 12412                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12413     003C  2856               	goto	i1l204
 12414     003D                     i1l197:	
 12415                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 12416                           
 12417     003D  0021               	movlb	1	; select bank1
 12418     003E  1D91               	btfss	17,3	;volatile
 12419     003F  2841               	goto	u451_21
 12420     0040  2842               	goto	u451_20
 12421     0041                     u451_21:
 12422     0041  2848               	goto	i1l199
 12423     0042                     u451_20:
 12424     0042                     i1l5150:
 12425     0042  0020               	movlb	0	; select bank0
 12426     0043  1D91               	btfss	17,3	;volatile
 12427     0044  2846               	goto	u452_21
 12428     0045  2847               	goto	u452_20
 12429     0046                     u452_21:
 12430     0046  2848               	goto	i1l199
 12431     0047                     u452_20:
 12432     0047  2836               	goto	i1l5148
 12433     0048                     i1l199:	
 12434                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 12435                           
 12436     0048  0021               	movlb	1	; select bank1
 12437     0049  1C11               	btfss	17,0	;volatile
 12438     004A  284C               	goto	u453_21
 12439     004B  284D               	goto	u453_20
 12440     004C                     u453_21:
 12441     004C  2856               	goto	i1l198
 12442     004D                     u453_20:
 12443     004D                     i1l5154:
 12444     004D  0020               	movlb	0	; select bank0
 12445     004E  1C11               	btfss	17,0	;volatile
 12446     004F  2851               	goto	u454_21
 12447     0050  2852               	goto	u454_20
 12448     0051                     u454_21:
 12449     0051  2856               	goto	i1l198
 12450     0052                     u454_20:
 12451     0052                     i1l5156:
 12452                           
 12453                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 12454     0052  3193  23CB  3180   	fcall	_TMR1_ISR
 12455                           
 12456                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12457     0055  2856               	goto	i1l204
 12458     0056                     i1l198:
 12459     0056                     i1l204:
 12460     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12461     0057  0009               	retfie
 12462     0058                     __end_of_INTERRUPT_InterruptManager:
 12463                           
 12464                           	psect	text61
 12465     13CB                     __ptext61:	
 12466 ;; *************** function _TMR1_ISR *****************
 12467 ;; Defined at:
 12468 ;;		line 167 in file "mcc_generated_files/tmr1.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;		None
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;		None
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0, pclath, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12482 ;;      Params:         0       0       0       0       0       0       0       0
 12483 ;;      Locals:         0       0       0       0       0       0       0       0
 12484 ;;      Temps:          0       0       0       0       0       0       0       0
 12485 ;;      Totals:         0       0       0       0       0       0       0       0
 12486 ;;Total ram usage:        0 bytes
 12487 ;; Hardware stack levels used: 1
 12488 ;; Hardware stack levels required when called: 2
 12489 ;; This function calls:
 12490 ;;		_TMR1_CallBack
 12491 ;;		_TMR1_WriteTimer
 12492 ;; This function is called by:
 12493 ;;		_INTERRUPT_InterruptManager
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           
 12497     13CB                     _TMR1_ISR:	
 12498                           ;psect for function _TMR1_ISR
 12499                           
 12500     13CB                     i1l5024:	
 12501                           ;incstack = 0
 12502                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12503                           
 12504                           
 12505                           ;mcc_generated_files/tmr1.c: 171:     PIR1bits.TMR1IF = 0;
 12506     13CB  0020               	movlb	0	; select bank0
 12507     13CC  1011               	bcf	17,0	;volatile
 12508     13CD                     i1l5026:
 12509                           
 12510                           ;mcc_generated_files/tmr1.c: 172:     TMR1_WriteTimer(timer1ReloadVal);
 12511     13CD  0021               	movlb	1	; select bank1
 12512     13CE  0860               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 12513     13CF  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12514     13D0  085F               	movf	_timer1ReloadVal^(0+128),w	;volatile
 12515     13D1  00F0               	movwf	TMR1_WriteTimer@timerVal
 12516     13D2  3194  242B  3193   	fcall	_TMR1_WriteTimer
 12517                           
 12518                           ;mcc_generated_files/tmr1.c: 176:     TMR1_CallBack();
 12519     13D5  3193  23A3  3193   	fcall	_TMR1_CallBack
 12520     13D8                     i1l395:
 12521     13D8  0008               	return
 12522     13D9                     __end_of_TMR1_ISR:
 12523                           
 12524                           	psect	text62
 12525     142B                     __ptext62:	
 12526 ;; *************** function _TMR1_WriteTimer *****************
 12527 ;; Defined at:
 12528 ;;		line 133 in file "mcc_generated_files/tmr1.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  timerVal        2    0[COMMON] unsigned short 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;		None
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      void 
 12535 ;; Registers used:
 12536 ;;		wreg, status,2
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12542 ;;      Params:         2       0       0       0       0       0       0       0
 12543 ;;      Locals:         0       0       0       0       0       0       0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0
 12545 ;;      Totals:         2       0       0       0       0       0       0       0
 12546 ;;Total ram usage:        2 bytes
 12547 ;; Hardware stack levels used: 1
 12548 ;; This function calls:
 12549 ;;		Nothing
 12550 ;; This function is called by:
 12551 ;;		_TMR1_ISR
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555     142B                     _TMR1_WriteTimer:	
 12556                           ;psect for function _TMR1_WriteTimer
 12557                           
 12558     142B                     i1l4912:	
 12559                           ;incstack = 0
 12560                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12561                           
 12562                           
 12563                           ;mcc_generated_files/tmr1.c: 133: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 134: {;mcc_generated_files/tmr1.c: 135:     if (T1CONbits.nT1SYNC == 1)
 12564     142B  0020               	movlb	0	; select bank0
 12565     142C  1D18               	btfss	24,2	;volatile
 12566     142D  2C2F               	goto	u403_21
 12567     142E  2C30               	goto	u403_20
 12568     142F                     u403_21:
 12569     142F  2C37               	goto	i1l4922
 12570     1430                     u403_20:
 12571     1430                     i1l4914:
 12572                           
 12573                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         T1CONbi
      +                          ts.TMR1ON = 0;
 12574     1430  1018               	bcf	24,0	;volatile
 12575     1431                     i1l4916:
 12576                           
 12577                           ;mcc_generated_files/tmr1.c: 141:         TMR1H = (uint8_t)(timerVal >> 8);
 12578     1431  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12579     1432  0097               	movwf	23	;volatile
 12580     1433                     i1l4918:
 12581                           
 12582                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
 12583     1433  0870               	movf	TMR1_WriteTimer@timerVal,w
 12584     1434  0096               	movwf	22	;volatile
 12585     1435                     i1l4920:
 12586                           
 12587                           ;mcc_generated_files/tmr1.c: 145:         T1CONbits.TMR1ON =1;
 12588     1435  1418               	bsf	24,0	;volatile
 12589                           
 12590                           ;mcc_generated_files/tmr1.c: 146:     }
 12591     1436  2C3B               	goto	i1l392
 12592     1437                     i1l4922:
 12593                           
 12594                           ;mcc_generated_files/tmr1.c: 148:     {;mcc_generated_files/tmr1.c: 150:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12595     1437  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12596     1438  0097               	movwf	23	;volatile
 12597     1439                     i1l4924:
 12598                           
 12599                           ;mcc_generated_files/tmr1.c: 151:         TMR1L = (uint8_t)timerVal;
 12600     1439  0870               	movf	TMR1_WriteTimer@timerVal,w
 12601     143A  0096               	movwf	22	;volatile
 12602     143B                     i1l392:
 12603     143B  0008               	return
 12604     143C                     __end_of_TMR1_WriteTimer:
 12605                           
 12606                           	psect	text63
 12607     13A3                     __ptext63:	
 12608 ;; *************** function _TMR1_CallBack *****************
 12609 ;; Defined at:
 12610 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;		None
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0, pclath, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12624 ;;      Params:         0       0       0       0       0       0       0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0
 12627 ;;      Totals:         0       0       0       0       0       0       0       0
 12628 ;;Total ram usage:        0 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; Hardware stack levels required when called: 1
 12631 ;; This function calls:
 12632 ;;		NULL
 12633 ;;		_TMR1_DefaultInterruptHandler
 12634 ;;		_rtcc_handle
 12635 ;; This function is called by:
 12636 ;;		_TMR1_ISR
 12637 ;; This function uses a non-reentrant model
 12638 ;;
 12639                           
 12640     13A3                     _TMR1_CallBack:	
 12641                           ;psect for function _TMR1_CallBack
 12642                           
 12643     13A3                     i1l4926:	
 12644                           ;incstack = 0
 12645                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12646                           
 12647                           
 12648                           ;mcc_generated_files/tmr1.c: 182:     if(TMR1_InterruptHandler)
 12649     13A3  0022               	movlb	2	; select bank2
 12650     13A4  085D               	movf	_TMR1_InterruptHandler^(0+256),w
 12651     13A5  045E               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 12652     13A6  1903               	btfsc	3,2
 12653     13A7  2BA9               	goto	u404_21
 12654     13A8  2BAA               	goto	u404_20
 12655     13A9                     u404_21:
 12656     13A9  2BAF               	goto	i1l399
 12657     13AA                     u404_20:
 12658     13AA                     i1l4928:
 12659                           
 12660                           ;mcc_generated_files/tmr1.c: 183:     {;mcc_generated_files/tmr1.c: 184:         TMR1_In
      +                          terruptHandler();
 12661     13AA  085E               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 12662     13AB  008A               	movwf	10
 12663     13AC  085D               	movf	_TMR1_InterruptHandler^(0+256),w
 12664     13AD  000A               	callw
 12665     13AE  3193               	pagesel	$
 12666     13AF                     i1l399:
 12667     13AF  0008               	return
 12668     13B0                     __end_of_TMR1_CallBack:
 12669                           
 12670                           	psect	text64
 12671     1262                     __ptext64:	
 12672 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12673 ;; Defined at:
 12674 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      void 
 12681 ;; Registers used:
 12682 ;;		None
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12688 ;;      Params:         0       0       0       0       0       0       0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0
 12691 ;;      Totals:         0       0       0       0       0       0       0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used: 1
 12694 ;; This function calls:
 12695 ;;		Nothing
 12696 ;; This function is called by:
 12697 ;;		_TMR1_Initialize
 12698 ;;		_TMR1_CallBack
 12699 ;; This function uses a non-reentrant model
 12700 ;;
 12701                           
 12702     1262                     _TMR1_DefaultInterruptHandler:	
 12703                           ;psect for function _TMR1_DefaultInterruptHandler
 12704                           
 12705     1262                     i1l405:	
 12706                           ;incstack = 0
 12707                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 12708                           
 12709     1262  0008               	return
 12710     1263                     __end_of_TMR1_DefaultInterruptHandler:
 12711                           
 12712                           	psect	text65
 12713     134A                     __ptext65:	
 12714 ;; *************** function _rtcc_handle *****************
 12715 ;; Defined at:
 12716 ;;		line 11 in file "tick.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12730 ;;      Params:         0       0       0       0       0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0
 12733 ;;      Totals:         0       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        0 bytes
 12735 ;; Hardware stack levels used: 1
 12736 ;; This function calls:
 12737 ;;		Nothing
 12738 ;; This function is called by:
 12739 ;;		_Tick_Init_SES
 12740 ;;		_TMR1_CallBack
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744     134A                     _rtcc_handle:	
 12745                           ;psect for function _rtcc_handle
 12746                           
 12747     134A                     i1l4814:	
 12748                           ;incstack = 0
 12749                           ; Regs used in _rtcc_handle: [wreg]
 12750                           
 12751                           
 12752                           ;tick.c: 12:     device_time++;
 12753     134A  3001               	movlw	1
 12754     134B  0021               	movlb	1	; select bank1
 12755     134C  07D7               	addwf	_device_time^(0+128),f	;volatile
 12756     134D  3000               	movlw	0
 12757     134E  3DD8               	addwfc	(_device_time+1)^(0+128),f	;volatile
 12758     134F  3000               	movlw	0
 12759     1350  3DD9               	addwfc	(_device_time+2)^(0+128),f	;volatile
 12760     1351  3000               	movlw	0
 12761     1352  3DDA               	addwfc	(_device_time+3)^(0+128),f	;volatile
 12762     1353                     i1l996:
 12763     1353  0008               	return
 12764     1354                     __end_of_rtcc_handle:
 12765                           
 12766                           	psect	text66
 12767     1299                     __ptext66:	
 12768 ;; *************** function _I2C_MasterIsr *****************
 12769 ;; Defined at:
 12770 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 12771 ;; Parameters:    Size  Location     Type
 12772 ;;		None
 12773 ;; Auto vars:     Size  Location     Type
 12774 ;;		None
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  1    wreg      void 
 12777 ;; Registers used:
 12778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12779 ;; Tracked objects:
 12780 ;;		On entry : 0/0
 12781 ;;		On exit  : 0/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12784 ;;      Params:         0       0       0       0       0       0       0       0
 12785 ;;      Locals:         0       0       0       0       0       0       0       0
 12786 ;;      Temps:          0       0       0       0       0       0       0       0
 12787 ;;      Totals:         0       0       0       0       0       0       0       0
 12788 ;;Total ram usage:        0 bytes
 12789 ;; Hardware stack levels used: 1
 12790 ;; Hardware stack levels required when called: 5
 12791 ;; This function calls:
 12792 ;;		_I2C_MasterFsm
 12793 ;; This function is called by:
 12794 ;;		_I2C_Open
 12795 ;;		_INTERRUPT_InterruptManager
 12796 ;; This function uses a non-reentrant model
 12797 ;;
 12798                           
 12799     1299                     _I2C_MasterIsr:	
 12800                           ;psect for function _I2C_MasterIsr
 12801                           
 12802     1299                     i1l5060:	
 12803                           ;incstack = 0
 12804                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12805                           
 12806                           
 12807                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
 12808     1299  3195  25D1  3192   	fcall	_I2C_MasterFsm
 12809     129C                     i1l567:
 12810     129C  0008               	return
 12811     129D                     __end_of_I2C_MasterIsr:
 12812                           
 12813                           	psect	text67
 12814     15D1                     __ptext67:	
 12815 ;; *************** function _I2C_MasterFsm *****************
 12816 ;; Defined at:
 12817 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;		None
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;		None
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  1    wreg      void 
 12824 ;; Registers used:
 12825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12831 ;;      Params:         0       0       0       0       0       0       0       0
 12832 ;;      Locals:         0       0       0       0       0       0       0       0
 12833 ;;      Temps:          2       0       0       0       0       0       0       0
 12834 ;;      Totals:         2       0       0       0       0       0       0       0
 12835 ;;Total ram usage:        2 bytes
 12836 ;; Hardware stack levels used: 1
 12837 ;; Hardware stack levels required when called: 4
 12838 ;; This function calls:
 12839 ;;		_I2C_DO_ADDRESS_NACK
 12840 ;;		_I2C_DO_IDLE
 12841 ;;		_I2C_DO_RCEN
 12842 ;;		_I2C_DO_RESET
 12843 ;;		_I2C_DO_RX
 12844 ;;		_I2C_DO_RX_ACK
 12845 ;;		_I2C_DO_RX_NACK_RESTART
 12846 ;;		_I2C_DO_RX_NACK_STOP
 12847 ;;		_I2C_DO_SEND_ADR_READ
 12848 ;;		_I2C_DO_SEND_ADR_WRITE
 12849 ;;		_I2C_DO_SEND_RESTART
 12850 ;;		_I2C_DO_SEND_RESTART_READ
 12851 ;;		_I2C_DO_SEND_RESTART_WRITE
 12852 ;;		_I2C_DO_SEND_STOP
 12853 ;;		_I2C_DO_TX
 12854 ;;		_I2C_DO_TX_EMPTY
 12855 ;;		_I2C_MasterIsNack
 12856 ;;		i1_I2C_MasterClearIrq
 12857 ;; This function is called by:
 12858 ;;		_I2C_MasterIsr
 12859 ;; This function uses a non-reentrant model
 12860 ;;
 12861                           
 12862     15D1                     _I2C_MasterFsm:	
 12863                           ;psect for function _I2C_MasterFsm
 12864                           
 12865     15D1                     i1l4930:	
 12866                           ;incstack = 0
 12867                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12868                           
 12869                           
 12870                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
 12871     15D1  3192  2274  3195   	fcall	i1_I2C_MasterClearIrq
 12872     15D4                     i1l4932:
 12873                           
 12874                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12875     15D4  0022               	movlb	2	; select bank2
 12876     15D5  1C3C               	btfss	(_I2C_Status^(0+256)+28),0
 12877     15D6  2DD8               	goto	u405_21
 12878     15D7  2DD9               	goto	u405_20
 12879     15D8                     u405_21:
 12880     15D8  2DE4               	goto	i1l4938
 12881     15D9                     u405_20:
 12882     15D9                     i1l4934:
 12883     15D9  3192  22DD  3195   	fcall	_I2C_MasterIsNack
 12884     15DC  3A00               	xorlw	0
 12885     15DD  1903               	skipnz
 12886     15DE  2DE0               	goto	u406_21
 12887     15DF  2DE1               	goto	u406_20
 12888     15E0                     u406_21:
 12889     15E0  2DE4               	goto	i1l4938
 12890     15E1                     u406_20:
 12891     15E1                     i1l4936:
 12892                           
 12893                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12894     15E1  300F               	movlw	15
 12895     15E2  0022               	movlb	2	; select bank2
 12896     15E3  00BA               	movwf	(_I2C_Status^(0+256)+26)
 12897     15E4                     i1l4938:
 12898                           
 12899                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12900     15E4  0022               	movlb	2	; select bank2
 12901     15E5  083A               	movf	(_I2C_Status^(0+256)+26),w
 12902     15E6  00FA               	movwf	??_I2C_MasterFsm
 12903     15E7  01FB               	clrf	??_I2C_MasterFsm+1
 12904     15E8  35FA               	lslf	??_I2C_MasterFsm,f
 12905     15E9  0DFB               	rlf	??_I2C_MasterFsm+1,f
 12906     15EA  3000               	movlw	low _i2c_fsmStateTable
 12907     15EB  077A               	addwf	??_I2C_MasterFsm,w
 12908     15EC  0084               	movwf	4
 12909     15ED  3018               	movlw	high _i2c_fsmStateTable
 12910     15EE  3D7B               	addwfc	??_I2C_MasterFsm+1,w
 12911     15EF  3880               	iorlw	128
 12912     15F0  0085               	movwf	5
 12913     15F1  3F01               	moviw [1]fsr0
 12914     15F2  008A               	movwf	10
 12915     15F3  3F00               	moviw [0]fsr0
 12916     15F4  000A               	callw
 12917     15F5  3195               	pagesel	$
 12918     15F6  0022               	movlb	2	; select bank2
 12919     15F7  00BA               	movwf	(_I2C_Status^(0+256)+26)
 12920     15F8                     i1l571:
 12921     15F8  0008               	return
 12922     15F9                     __end_of_I2C_MasterFsm:
 12923                           
 12924                           	psect	text68
 12925     1274                     __ptext68:	
 12926 ;; *************** function i1_I2C_MasterClearIrq *****************
 12927 ;; Defined at:
 12928 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		None
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12942 ;;      Params:         0       0       0       0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_I2C_MasterFsm
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955     1274                     i1_I2C_MasterClearIrq:	
 12956                           ;psect for function i1_I2C_MasterClearIrq
 12957                           
 12958     1274                     i1l4816:	
 12959                           ;incstack = 0
 12960                           ; Regs used in i1_I2C_MasterClearIrq: []
 12961                           
 12962                           
 12963                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 12964     1274  0020               	movlb	0	; select bank0
 12965     1275  1191               	bcf	17,3	;volatile
 12966     1276                     i1l734:
 12967     1276  0008               	return
 12968     1277                     __end_ofi1_I2C_MasterClearIrq:
 12969                           
 12970                           	psect	text69
 12971     15F9                     __ptext69:	
 12972 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 12973 ;; Defined at:
 12974 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;		None
 12977 ;; Auto vars:     Size  Location     Type
 12978 ;;		None
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  1    wreg      enum E3112
 12981 ;; Registers used:
 12982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12988 ;;      Params:         0       0       0       0       0       0       0       0
 12989 ;;      Locals:         0       0       0       0       0       0       0       0
 12990 ;;      Temps:          2       0       0       0       0       0       0       0
 12991 ;;      Totals:         2       0       0       0       0       0       0       0
 12992 ;;Total ram usage:        2 bytes
 12993 ;; Hardware stack levels used: 1
 12994 ;; Hardware stack levels required when called: 3
 12995 ;; This function calls:
 12996 ;;		NULL
 12997 ;;		_I2C_CallbackReturnReset
 12998 ;;		_I2C_CallbackReturnStop
 12999 ;;		_I2C_DO_SEND_RESTART
 13000 ;;		_I2C_DO_SEND_STOP
 13001 ;;		_rd1RegCompleteHandler
 13002 ;;		_rd2RegCompleteHandler
 13003 ;;		_rdBlkRegCompleteHandler
 13004 ;;		_wr1RegCompleteHandler
 13005 ;;		_wr2RegCompleteHandler
 13006 ;; This function is called by:
 13007 ;;		_I2C_MasterFsm
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011     15F9                     _I2C_DO_ADDRESS_NACK:	
 13012                           ;psect for function _I2C_DO_ADDRESS_NACK
 13013                           
 13014     15F9                     i1l4750:	
 13015                           ;incstack = 0
 13016                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13017                           
 13018                           
 13019                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 13020     15F9  0022               	movlb	2	; select bank2
 13021     15FA  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13022     15FB                     i1l4752:
 13023                           
 13024                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 13025     15FB  3002               	movlw	2
 13026     15FC  00BB               	movwf	(_I2C_Status^(0+256)+27)
 13027                           
 13028                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 13029     15FD  2E06               	goto	i1l4764
 13030     15FE                     i1l4754:
 13031                           
 13032                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 13033     15FE  3192  22B5  3195   	fcall	_I2C_DO_SEND_RESTART
 13034     1601  2E21               	goto	i1l662
 13035     1602                     i1l4758:
 13036                           
 13037                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 13038     1602  3192  22BA  3195   	fcall	_I2C_DO_SEND_STOP
 13039     1605  2E21               	goto	i1l662
 13040     1606                     i1l4764:
 13041     1606  082E               	movf	(low ((_I2C_Status| (0+256)+14)))^0,w
 13042     1607  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13043     1608  3004               	movlw	4
 13044     1609  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13045     160A  0086               	movwf	6
 13046     160B  3001               	movlw	1	; select bank2/3
 13047     160C  0087               	movwf	7
 13048     160D  3F41               	moviw [1]fsr1
 13049     160E  008A               	movwf	10
 13050     160F  3F40               	moviw [0]fsr1
 13051     1610  000A               	callw
 13052     1611  3195               	pagesel	$
 13053     1612  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
 13054     1613  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
 13055                           
 13056                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13057                           ; Switch size 1, requested type "simple"
 13058                           ; Number of cases is 1, Range of values is 0 to 0
 13059                           ; switch strategies available:
 13060                           ; Name         Instructions Cycles
 13061                           ; simple_byte            4     3 (average)
 13062                           ; direct_byte            8     6 (fixed)
 13063                           ; jumptable            260     6 (fixed)
 13064                           ;	Chosen strategy is simple_byte
 13065     1614  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 13066     1615  3A00               	xorlw	0	; case 0
 13067     1616  1903               	skipnz
 13068     1617  2E19               	goto	i1l5350
 13069     1618  2E02               	goto	i1l4758
 13070     1619                     i1l5350:
 13071                           
 13072                           ; Switch size 1, requested type "simple"
 13073                           ; Number of cases is 2, Range of values is 2 to 3
 13074                           ; switch strategies available:
 13075                           ; Name         Instructions Cycles
 13076                           ; simple_byte            7     4 (average)
 13077                           ; direct_byte           13     9 (fixed)
 13078                           ; jumptable            263     9 (fixed)
 13079                           ;	Chosen strategy is simple_byte
 13080     1619  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
 13081     161A  3A02               	xorlw	2	; case 2
 13082     161B  1903               	skipnz
 13083     161C  2DFE               	goto	i1l4754
 13084     161D  3A01               	xorlw	1	; case 3
 13085     161E  1903               	skipnz
 13086     161F  2DFE               	goto	i1l4754
 13087     1620  2E02               	goto	i1l4758
 13088     1621                     i1l662:
 13089     1621  0008               	return
 13090     1622                     __end_of_I2C_DO_ADDRESS_NACK:
 13091                           
 13092                           	psect	text70
 13093     12CE                     __ptext70:	
 13094 ;; *************** function _I2C_DO_RESET *****************
 13095 ;; Defined at:
 13096 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      enum E3112
 13103 ;; Registers used:
 13104 ;;		wreg, status,2
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13110 ;;      Params:         0       0       0       0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used: 1
 13116 ;; This function calls:
 13117 ;;		Nothing
 13118 ;; This function is called by:
 13119 ;;		_I2C_MasterFsm
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123     12CE                     _I2C_DO_RESET:	
 13124                           ;psect for function _I2C_DO_RESET
 13125                           
 13126     12CE                     i1l4742:	
 13127                           ;incstack = 0
 13128                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 13129                           
 13130                           
 13131                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 13132     12CE  0022               	movlb	2	; select bank2
 13133     12CF  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 13134     12D0                     i1l4744:
 13135                           
 13136                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 13137     12D0  01BB               	clrf	(_I2C_Status^(0+256)+27)
 13138     12D1                     i1l4746:
 13139                           
 13140                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 13141     12D1  300E               	movlw	14
 13142     12D2                     i1l656:
 13143     12D2  0008               	return
 13144     12D3                     __end_of_I2C_DO_RESET:
 13145                           
 13146                           	psect	text71
 13147     12C9                     __ptext71:	
 13148 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13149 ;; Defined at:
 13150 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      enum E3112
 13157 ;; Registers used:
 13158 ;;		wreg, status,2, status,0, pclath, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13164 ;;      Params:         0       0       0       0       0       0       0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0
 13167 ;;      Totals:         0       0       0       0       0       0       0       0
 13168 ;;Total ram usage:        0 bytes
 13169 ;; Hardware stack levels used: 1
 13170 ;; Hardware stack levels required when called: 1
 13171 ;; This function calls:
 13172 ;;		_I2C_MasterSendNack
 13173 ;; This function is called by:
 13174 ;;		_I2C_DO_RX
 13175 ;;		_I2C_MasterFsm
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179     12C9                     _I2C_DO_RX_NACK_RESTART:	
 13180                           ;psect for function _I2C_DO_RX_NACK_RESTART
 13181                           
 13182     12C9                     i1l3938:	
 13183                           ;incstack = 0
 13184                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13185                           
 13186                           
 13187                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 13188     12C9  3192  2291  3192   	fcall	_I2C_MasterSendNack
 13189     12CC                     i1l3940:
 13190                           
 13191                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 13192     12CC  3009               	movlw	9
 13193     12CD                     i1l653:
 13194     12CD  0008               	return
 13195     12CE                     __end_of_I2C_DO_RX_NACK_RESTART:
 13196                           
 13197                           	psect	text72
 13198     12C4                     __ptext72:	
 13199 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13200 ;; Defined at:
 13201 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      enum E3112
 13208 ;; Registers used:
 13209 ;;		wreg, status,2, status,0, pclath, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13215 ;;      Params:         0       0       0       0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used: 1
 13221 ;; Hardware stack levels required when called: 1
 13222 ;; This function calls:
 13223 ;;		_I2C_MasterSendNack
 13224 ;; This function is called by:
 13225 ;;		_I2C_DO_RX
 13226 ;;		_I2C_MasterFsm
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230     12C4                     _I2C_DO_RX_NACK_STOP:	
 13231                           ;psect for function _I2C_DO_RX_NACK_STOP
 13232                           
 13233     12C4                     i1l3944:	
 13234                           ;incstack = 0
 13235                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13236                           
 13237                           
 13238                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 13239     12C4  3192  2291  3192   	fcall	_I2C_MasterSendNack
 13240     12C7                     i1l3946:
 13241                           
 13242                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 13243     12C7  300A               	movlw	10
 13244     12C8                     i1l650:
 13245     12C8  0008               	return
 13246     12C9                     __end_of_I2C_DO_RX_NACK_STOP:
 13247                           
 13248                           	psect	text73
 13249     12BF                     __ptext73:	
 13250 ;; *************** function _I2C_DO_RX_ACK *****************
 13251 ;; Defined at:
 13252 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;		None
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      enum E3112
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0, pclath, cstack
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13266 ;;      Params:         0       0       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used: 1
 13272 ;; Hardware stack levels required when called: 1
 13273 ;; This function calls:
 13274 ;;		_I2C_MasterSendAck
 13275 ;; This function is called by:
 13276 ;;		_I2C_MasterFsm
 13277 ;; This function uses a non-reentrant model
 13278 ;;
 13279                           
 13280     12BF                     _I2C_DO_RX_ACK:	
 13281                           ;psect for function _I2C_DO_RX_ACK
 13282                           
 13283     12BF                     i1l4736:	
 13284                           ;incstack = 0
 13285                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13286                           
 13287                           
 13288                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 13289     12BF  3192  2295  3192   	fcall	_I2C_MasterSendAck
 13290     12C2                     i1l4738:
 13291                           
 13292                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 13293     12C2  3005               	movlw	5
 13294     12C3                     i1l647:
 13295     12C3  0008               	return
 13296     12C4                     __end_of_I2C_DO_RX_ACK:
 13297                           
 13298                           	psect	text74
 13299     12BA                     __ptext74:	
 13300 ;; *************** function _I2C_DO_SEND_STOP *****************
 13301 ;; Defined at:
 13302 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;		None
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      enum E3112
 13309 ;; Registers used:
 13310 ;;		wreg, status,2, status,0, pclath, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13316 ;;      Params:         0       0       0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0
 13319 ;;      Totals:         0       0       0       0       0       0       0       0
 13320 ;;Total ram usage:        0 bytes
 13321 ;; Hardware stack levels used: 1
 13322 ;; Hardware stack levels required when called: 1
 13323 ;; This function calls:
 13324 ;;		_I2C_MasterStop
 13325 ;; This function is called by:
 13326 ;;		_I2C_DO_TX
 13327 ;;		_I2C_DO_TX_EMPTY
 13328 ;;		_I2C_DO_ADDRESS_NACK
 13329 ;;		_I2C_MasterFsm
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333     12BA                     _I2C_DO_SEND_STOP:	
 13334                           ;psect for function _I2C_DO_SEND_STOP
 13335                           
 13336     12BA                     i1l3926:	
 13337                           ;incstack = 0
 13338                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13339                           
 13340                           
 13341                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 13342     12BA  3192  2268  3192   	fcall	_I2C_MasterStop
 13343     12BD                     i1l3928:
 13344                           
 13345                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 13346     12BD  3000               	movlw	0
 13347     12BE                     i1l644:
 13348     12BE  0008               	return
 13349     12BF                     __end_of_I2C_DO_SEND_STOP:
 13350                           
 13351                           	psect	text75
 13352     12B5                     __ptext75:	
 13353 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13354 ;; Defined at:
 13355 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;		None
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;		None
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  1    wreg      enum E3112
 13362 ;; Registers used:
 13363 ;;		wreg, status,2, status,0, pclath, cstack
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13369 ;;      Params:         0       0       0       0       0       0       0       0
 13370 ;;      Locals:         0       0       0       0       0       0       0       0
 13371 ;;      Temps:          0       0       0       0       0       0       0       0
 13372 ;;      Totals:         0       0       0       0       0       0       0       0
 13373 ;;Total ram usage:        0 bytes
 13374 ;; Hardware stack levels used: 1
 13375 ;; Hardware stack levels required when called: 1
 13376 ;; This function calls:
 13377 ;;		_I2C_MasterEnableRestart
 13378 ;; This function is called by:
 13379 ;;		_I2C_DO_TX_EMPTY
 13380 ;;		_I2C_DO_ADDRESS_NACK
 13381 ;;		_I2C_MasterFsm
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385     12B5                     _I2C_DO_SEND_RESTART:	
 13386                           ;psect for function _I2C_DO_SEND_RESTART
 13387                           
 13388     12B5                     i1l3952:	
 13389                           ;incstack = 0
 13390                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13391                           
 13392                           
 13393                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 13394     12B5  3192  2265  3192   	fcall	_I2C_MasterEnableRestart
 13395     12B8                     i1l3954:
 13396                           
 13397                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 13398     12B8  3001               	movlw	1
 13399     12B9                     i1l641:
 13400     12B9  0008               	return
 13401     12BA                     __end_of_I2C_DO_SEND_RESTART:
 13402                           
 13403                           	psect	text76
 13404     12B0                     __ptext76:	
 13405 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13406 ;; Defined at:
 13407 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;		None
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      enum E3112
 13414 ;; Registers used:
 13415 ;;		wreg, status,2, status,0, pclath, cstack
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13421 ;;      Params:         0       0       0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used: 1
 13427 ;; Hardware stack levels required when called: 1
 13428 ;; This function calls:
 13429 ;;		_I2C_MasterEnableRestart
 13430 ;; This function is called by:
 13431 ;;		_I2C_DO_TX
 13432 ;;		_I2C_MasterFsm
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436     12B0                     _I2C_DO_SEND_RESTART_WRITE:	
 13437                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 13438                           
 13439     12B0                     i1l3920:	
 13440                           ;incstack = 0
 13441                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13442                           
 13443                           
 13444                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 13445     12B0  3192  2265  3192   	fcall	_I2C_MasterEnableRestart
 13446     12B3                     i1l3922:
 13447                           
 13448                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 13449     12B3  3002               	movlw	2
 13450     12B4                     i1l638:
 13451     12B4  0008               	return
 13452     12B5                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13453                           
 13454                           	psect	text77
 13455     12AB                     __ptext77:	
 13456 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13457 ;; Defined at:
 13458 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;		None
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      enum E3112
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0, pclath, cstack
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13472 ;;      Params:         0       0       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0       0
 13475 ;;      Totals:         0       0       0       0       0       0       0       0
 13476 ;;Total ram usage:        0 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 1
 13479 ;; This function calls:
 13480 ;;		_I2C_MasterEnableRestart
 13481 ;; This function is called by:
 13482 ;;		_I2C_DO_TX
 13483 ;;		_I2C_MasterFsm
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487     12AB                     _I2C_DO_SEND_RESTART_READ:	
 13488                           ;psect for function _I2C_DO_SEND_RESTART_READ
 13489                           
 13490     12AB                     i1l3914:	
 13491                           ;incstack = 0
 13492                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13493                           
 13494                           
 13495                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 13496     12AB  3192  2265  3192   	fcall	_I2C_MasterEnableRestart
 13497     12AE                     i1l3916:
 13498                           
 13499                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 13500     12AE  3001               	movlw	1
 13501     12AF                     i1l635:
 13502     12AF  0008               	return
 13503     12B0                     __end_of_I2C_DO_SEND_RESTART_READ:
 13504                           
 13505                           	psect	text78
 13506     12E3                     __ptext78:	
 13507 ;; *************** function _I2C_DO_RCEN *****************
 13508 ;; Defined at:
 13509 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      enum E3112
 13516 ;; Registers used:
 13517 ;;		wreg, status,2, status,0, pclath, cstack
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13523 ;;      Params:         0       0       0       0       0       0       0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0
 13526 ;;      Totals:         0       0       0       0       0       0       0       0
 13527 ;;Total ram usage:        0 bytes
 13528 ;; Hardware stack levels used: 1
 13529 ;; Hardware stack levels required when called: 1
 13530 ;; This function calls:
 13531 ;;		_I2C_MasterStartRx
 13532 ;; This function is called by:
 13533 ;;		_I2C_MasterFsm
 13534 ;; This function uses a non-reentrant model
 13535 ;;
 13536                           
 13537     12E3                     _I2C_DO_RCEN:	
 13538                           ;psect for function _I2C_DO_RCEN
 13539                           
 13540     12E3                     i1l4702:	
 13541                           ;incstack = 0
 13542                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13543                           
 13544                           
 13545                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 13546     12E3  0022               	movlb	2	; select bank2
 13547     12E4  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13548     12E5                     i1l4704:
 13549                           
 13550                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 13551     12E5  3192  226B  3192   	fcall	_I2C_MasterStartRx
 13552     12E8                     i1l4706:
 13553                           
 13554                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 13555     12E8  3004               	movlw	4
 13556     12E9                     i1l611:
 13557     12E9  0008               	return
 13558     12EA                     __end_of_I2C_DO_RCEN:
 13559                           
 13560                           	psect	text79
 13561     1777                     __ptext79:	
 13562 ;; *************** function _I2C_DO_RX *****************
 13563 ;; Defined at:
 13564 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;		None
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;		None
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      enum E3112
 13571 ;; Registers used:
 13572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13578 ;;      Params:         0       0       0       0       0       0       0       0
 13579 ;;      Locals:         0       0       0       0       0       0       0       0
 13580 ;;      Temps:          2       0       0       0       0       0       0       0
 13581 ;;      Totals:         2       0       0       0       0       0       0       0
 13582 ;;Total ram usage:        2 bytes
 13583 ;; Hardware stack levels used: 1
 13584 ;; Hardware stack levels required when called: 3
 13585 ;; This function calls:
 13586 ;;		NULL
 13587 ;;		_I2C_CallbackReturnReset
 13588 ;;		_I2C_CallbackReturnStop
 13589 ;;		_I2C_DO_RX_NACK_RESTART
 13590 ;;		_I2C_DO_RX_NACK_STOP
 13591 ;;		_I2C_MasterGetRxData
 13592 ;;		_I2C_MasterSendAck
 13593 ;;		_rd1RegCompleteHandler
 13594 ;;		_rd2RegCompleteHandler
 13595 ;;		_rdBlkRegCompleteHandler
 13596 ;;		_wr1RegCompleteHandler
 13597 ;;		_wr2RegCompleteHandler
 13598 ;; This function is called by:
 13599 ;;		_I2C_MasterFsm
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603     1777                     _I2C_DO_RX:	
 13604                           ;psect for function _I2C_DO_RX
 13605                           
 13606     1777                     i1l4670:	
 13607                           ;incstack = 0
 13608                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13609                           
 13610                           
 13611                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13612     1777  0022               	movlb	2	; select bank2
 13613     1778  0837               	movf	(low ((_I2C_Status| (0+256)+23)))^0,w
 13614     1779  0086               	movwf	6
 13615     177A  0187               	clrf	7
 13616     177B  3192  226E  3197   	fcall	_I2C_MasterGetRxData
 13617     177E  0081               	movwf	1
 13618     177F                     i1l4672:
 13619     177F  3001               	movlw	1
 13620     1780  00F8               	movwf	??_I2C_DO_RX
 13621     1781  0878               	movf	??_I2C_DO_RX,w
 13622     1782  0022               	movlb	2	; select bank2
 13623     1783  07B7               	addwf	(low ((_I2C_Status| (0+256)+23)))^0,f
 13624     1784                     i1l4674:
 13625                           
 13626                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 13627     1784  3001               	movlw	1
 13628     1785  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13629     1786  3000               	movlw	0
 13630     1787  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13631     1788  0838               	movf	(_I2C_Status^(0+256)+24),w
 13632     1789  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13633     178A  1903               	btfsc	3,2
 13634     178B  2F8D               	goto	u399_21
 13635     178C  2F8E               	goto	u399_20
 13636     178D                     u399_21:
 13637     178D  2F93               	goto	i1l599
 13638     178E                     u399_20:
 13639     178E                     i1l4676:
 13640                           
 13641                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 13642     178E  3192  2295  3197   	fcall	_I2C_MasterSendAck
 13643     1791                     i1l4678:
 13644                           
 13645                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 13646     1791  3005               	movlw	5
 13647     1792  2FB9               	goto	i1l600
 13648     1793                     i1l599:	
 13649                           ;mcc_generated_files/i2c_master.c: 388:     else
 13650                           
 13651                           
 13652                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 13653     1793  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 13654                           
 13655                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13656     1794  2F9D               	goto	i1l4694
 13657     1795                     i1l4684:
 13658                           
 13659                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 13660     1795  3192  22C9  3197   	fcall	_I2C_DO_RX_NACK_RESTART
 13661     1798  2FB9               	goto	i1l600
 13662     1799                     i1l4688:
 13663                           
 13664                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 13665     1799  3192  22C4  3197   	fcall	_I2C_DO_RX_NACK_STOP
 13666     179C  2FB9               	goto	i1l600
 13667     179D                     i1l4694:
 13668     179D  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 13669     179E  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13670     179F  0821               	movf	(_I2C_Status+1)^(0+256),w
 13671     17A0  008A               	movwf	10
 13672     17A1  0820               	movf	_I2C_Status^(0+256),w
 13673     17A2  000A               	callw
 13674     17A3  3197               	pagesel	$
 13675     17A4  00F8               	movwf	??_I2C_DO_RX
 13676     17A5  01F9               	clrf	??_I2C_DO_RX+1
 13677                           
 13678                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13679                           ; Switch size 1, requested type "simple"
 13680                           ; Number of cases is 1, Range of values is 0 to 0
 13681                           ; switch strategies available:
 13682                           ; Name         Instructions Cycles
 13683                           ; simple_byte            4     3 (average)
 13684                           ; direct_byte            8     6 (fixed)
 13685                           ; jumptable            260     6 (fixed)
 13686                           ;	Chosen strategy is simple_byte
 13687     17A6  0879               	movf	??_I2C_DO_RX+1,w
 13688     17A7  3A00               	xorlw	0	; case 0
 13689     17A8  1903               	skipnz
 13690     17A9  2FAB               	goto	i1l5352
 13691     17AA  2F99               	goto	i1l4688
 13692     17AB                     i1l5352:
 13693                           
 13694                           ; Switch size 1, requested type "simple"
 13695                           ; Number of cases is 4, Range of values is 1 to 4
 13696                           ; switch strategies available:
 13697                           ; Name         Instructions Cycles
 13698                           ; simple_byte           13     7 (average)
 13699                           ; direct_byte           17     9 (fixed)
 13700                           ; jumptable            263     9 (fixed)
 13701                           ;	Chosen strategy is simple_byte
 13702     17AB  0878               	movf	??_I2C_DO_RX,w
 13703     17AC  3A01               	xorlw	1	; case 1
 13704     17AD  1903               	skipnz
 13705     17AE  2F99               	goto	i1l4688
 13706     17AF  3A03               	xorlw	3	; case 2
 13707     17B0  1903               	skipnz
 13708     17B1  2F95               	goto	i1l4684
 13709     17B2  3A01               	xorlw	1	; case 3
 13710     17B3  1903               	skipnz
 13711     17B4  2F95               	goto	i1l4684
 13712     17B5  3A07               	xorlw	7	; case 4
 13713     17B6  1903               	skipnz
 13714     17B7  2F99               	goto	i1l4688
 13715     17B8  2F99               	goto	i1l4688
 13716     17B9                     i1l600:
 13717     17B9  0008               	return
 13718     17BA                     __end_of_I2C_DO_RX:
 13719                           
 13720                           	psect	text80
 13721     08D6                     __ptext80:	
 13722 ;; *************** function _I2C_DO_TX *****************
 13723 ;; Defined at:
 13724 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;		None
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  1    wreg      enum E3112
 13731 ;; Registers used:
 13732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13738 ;;      Params:         0       0       0       0       0       0       0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0
 13740 ;;      Temps:          2       0       0       0       0       0       0       0
 13741 ;;      Totals:         2       0       0       0       0       0       0       0
 13742 ;;Total ram usage:        2 bytes
 13743 ;; Hardware stack levels used: 1
 13744 ;; Hardware stack levels required when called: 3
 13745 ;; This function calls:
 13746 ;;		NULL
 13747 ;;		_I2C_CallbackReturnReset
 13748 ;;		_I2C_CallbackReturnStop
 13749 ;;		_I2C_DO_SEND_RESTART_READ
 13750 ;;		_I2C_DO_SEND_RESTART_WRITE
 13751 ;;		_I2C_DO_SEND_STOP
 13752 ;;		_I2C_MasterIsNack
 13753 ;;		_I2C_MasterSendTxData
 13754 ;;		_rd1RegCompleteHandler
 13755 ;;		_rd2RegCompleteHandler
 13756 ;;		_rdBlkRegCompleteHandler
 13757 ;;		_wr1RegCompleteHandler
 13758 ;;		_wr2RegCompleteHandler
 13759 ;; This function is called by:
 13760 ;;		_I2C_MasterFsm
 13761 ;; This function uses a non-reentrant model
 13762 ;;
 13763                           
 13764     08D6                     _I2C_DO_TX:	
 13765                           ;psect for function _I2C_DO_TX
 13766                           
 13767     08D6                     i1l4636:	
 13768                           ;incstack = 0
 13769                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13770                           
 13771                           
 13772                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 13773     08D6  3192  22DD  3188   	fcall	_I2C_MasterIsNack
 13774     08D9  3A00               	xorlw	0
 13775     08DA  1903               	skipnz
 13776     08DB  28DD               	goto	u397_21
 13777     08DC  28DE               	goto	u397_20
 13778     08DD                     u397_21:
 13779     08DD  290D               	goto	i1l583
 13780     08DE                     u397_20:
 13781     08DE  28EB               	goto	i1l4654
 13782     08DF                     i1l4640:
 13783                           
 13784                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13785     08DF  3192  22AB  3188   	fcall	_I2C_DO_SEND_RESTART_READ
 13786     08E2  292A               	goto	i1l586
 13787     08E3                     i1l4644:
 13788                           
 13789                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13790     08E3  3192  22B0  3188   	fcall	_I2C_DO_SEND_RESTART_WRITE
 13791     08E6  292A               	goto	i1l586
 13792     08E7                     i1l4648:
 13793                           
 13794                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 13795     08E7  3192  22BA  3188   	fcall	_I2C_DO_SEND_STOP
 13796     08EA  292A               	goto	i1l586
 13797     08EB                     i1l4654:
 13798     08EB  0022               	movlb	2	; select bank2
 13799     08EC  082F               	movf	(low ((_I2C_Status| (0+256)+15)))^0,w
 13800     08ED  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13801     08EE  3006               	movlw	6
 13802     08EF  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13803     08F0  0086               	movwf	6
 13804     08F1  3001               	movlw	1	; select bank2/3
 13805     08F2  0087               	movwf	7
 13806     08F3  3F41               	moviw [1]fsr1
 13807     08F4  008A               	movwf	10
 13808     08F5  3F40               	moviw [0]fsr1
 13809     08F6  000A               	callw
 13810     08F7  3188               	pagesel	$
 13811     08F8  00F8               	movwf	??_I2C_DO_TX
 13812     08F9  01F9               	clrf	??_I2C_DO_TX+1
 13813                           
 13814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13815                           ; Switch size 1, requested type "simple"
 13816                           ; Number of cases is 1, Range of values is 0 to 0
 13817                           ; switch strategies available:
 13818                           ; Name         Instructions Cycles
 13819                           ; simple_byte            4     3 (average)
 13820                           ; direct_byte            8     6 (fixed)
 13821                           ; jumptable            260     6 (fixed)
 13822                           ;	Chosen strategy is simple_byte
 13823     08FA  0879               	movf	??_I2C_DO_TX+1,w
 13824     08FB  3A00               	xorlw	0	; case 0
 13825     08FC  1903               	skipnz
 13826     08FD  28FF               	goto	i1l5354
 13827     08FE  28E7               	goto	i1l4648
 13828     08FF                     i1l5354:
 13829                           
 13830                           ; Switch size 1, requested type "simple"
 13831                           ; Number of cases is 4, Range of values is 1 to 4
 13832                           ; switch strategies available:
 13833                           ; Name         Instructions Cycles
 13834                           ; simple_byte           13     7 (average)
 13835                           ; direct_byte           17     9 (fixed)
 13836                           ; jumptable            263     9 (fixed)
 13837                           ;	Chosen strategy is simple_byte
 13838     08FF  0878               	movf	??_I2C_DO_TX,w
 13839     0900  3A01               	xorlw	1	; case 1
 13840     0901  1903               	skipnz
 13841     0902  28E7               	goto	i1l4648
 13842     0903  3A03               	xorlw	3	; case 2
 13843     0904  1903               	skipnz
 13844     0905  28DF               	goto	i1l4640
 13845     0906  3A01               	xorlw	1	; case 3
 13846     0907  1903               	skipnz
 13847     0908  28E3               	goto	i1l4644
 13848     0909  3A07               	xorlw	7	; case 4
 13849     090A  1903               	skipnz
 13850     090B  28E7               	goto	i1l4648
 13851     090C  28E7               	goto	i1l4648
 13852     090D                     i1l583:	
 13853                           ;mcc_generated_files/i2c_master.c: 372:     else
 13854                           
 13855                           
 13856                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 13857     090D  0022               	movlb	2	; select bank2
 13858     090E  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13859     090F                     i1l4656:
 13860                           
 13861                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13862     090F  3017               	movlw	23
 13863     0910  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13864     0911  0086               	movwf	6
 13865     0912  3001               	movlw	1	; select bank2/3
 13866     0913  0087               	movwf	7
 13867     0914  3F40               	moviw [0]fsr1
 13868     0915  0084               	movwf	4
 13869     0916  0185               	clrf	5
 13870     0917  0A81               	incf	1,f
 13871     0918  0800               	movf	0,w
 13872     0919  3192  22A1  3188   	fcall	_I2C_MasterSendTxData
 13873     091C                     i1l4658:
 13874                           
 13875                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13876     091C  3001               	movlw	1
 13877     091D  0022               	movlb	2	; select bank2
 13878     091E  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13879     091F  3000               	movlw	0
 13880     0920  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13881     0921  0838               	movf	(_I2C_Status^(0+256)+24),w
 13882     0922  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13883     0923  1D03               	btfss	3,2
 13884     0924  2926               	goto	u398_21
 13885     0925  2927               	goto	u398_20
 13886     0926                     u398_21:
 13887     0926  2929               	goto	i1l4662
 13888     0927                     u398_20:
 13889     0927                     i1l4660:
 13890     0927  3006               	movlw	6
 13891     0928  292A               	goto	i1l586
 13892     0929                     i1l4662:
 13893     0929  3003               	movlw	3
 13894     092A                     i1l586:
 13895     092A  0008               	return
 13896     092B                     __end_of_I2C_DO_TX:
 13897                           
 13898                           	psect	text81
 13899     12F1                     __ptext81:	
 13900 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13901 ;; Defined at:
 13902 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 13903 ;; Parameters:    Size  Location     Type
 13904 ;;		None
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;		None
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  1    wreg      enum E3112
 13909 ;; Registers used:
 13910 ;;		wreg, status,2, status,0, pclath, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13916 ;;      Params:         0       0       0       0       0       0       0       0
 13917 ;;      Locals:         0       0       0       0       0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0
 13919 ;;      Totals:         0       0       0       0       0       0       0       0
 13920 ;;Total ram usage:        0 bytes
 13921 ;; Hardware stack levels used: 1
 13922 ;; Hardware stack levels required when called: 1
 13923 ;; This function calls:
 13924 ;;		_I2C_MasterSendTxData
 13925 ;; This function is called by:
 13926 ;;		_I2C_MasterFsm
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930     12F1                     _I2C_DO_SEND_ADR_WRITE:	
 13931                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 13932                           
 13933     12F1                     i1l4628:	
 13934                           ;incstack = 0
 13935                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13936                           
 13937                           
 13938                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 13939     12F1  0022               	movlb	2	; select bank2
 13940     12F2  143C               	bsf	(_I2C_Status^(0+256)+28),0
 13941     12F3                     i1l4630:
 13942                           
 13943                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 13944     12F3  3536               	lslf	(_I2C_Status^(0+256)+22),w
 13945     12F4  3192  22A1  3192   	fcall	_I2C_MasterSendTxData
 13946     12F7                     i1l4632:
 13947                           
 13948                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 13949     12F7  3003               	movlw	3
 13950     12F8                     i1l580:
 13951     12F8  0008               	return
 13952     12F9                     __end_of_I2C_DO_SEND_ADR_WRITE:
 13953                           
 13954                           	psect	text82
 13955     12F9                     __ptext82:	
 13956 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 13957 ;; Defined at:
 13958 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      enum E3112
 13965 ;; Registers used:
 13966 ;;		wreg, status,2, status,0, pclath, cstack
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13972 ;;      Params:         0       0       0       0       0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0
 13974 ;;      Temps:          0       0       0       0       0       0       0       0
 13975 ;;      Totals:         0       0       0       0       0       0       0       0
 13976 ;;Total ram usage:        0 bytes
 13977 ;; Hardware stack levels used: 1
 13978 ;; Hardware stack levels required when called: 1
 13979 ;; This function calls:
 13980 ;;		_I2C_MasterSendTxData
 13981 ;; This function is called by:
 13982 ;;		_I2C_MasterFsm
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986     12F9                     _I2C_DO_SEND_ADR_READ:	
 13987                           ;psect for function _I2C_DO_SEND_ADR_READ
 13988                           
 13989     12F9                     i1l4620:	
 13990                           ;incstack = 0
 13991                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 13992                           
 13993                           
 13994                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 13995     12F9  0022               	movlb	2	; select bank2
 13996     12FA  143C               	bsf	(_I2C_Status^(0+256)+28),0
 13997     12FB                     i1l4622:
 13998                           
 13999                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 14000     12FB  1403               	setc
 14001     12FC  0D36               	rlf	(_I2C_Status^(0+256)+22),w
 14002     12FD  3192  22A1  3192   	fcall	_I2C_MasterSendTxData
 14003     1300                     i1l4624:
 14004                           
 14005                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 14006     1300  3005               	movlw	5
 14007     1301                     i1l577:
 14008     1301  0008               	return
 14009     1302                     __end_of_I2C_DO_SEND_ADR_READ:
 14010                           
 14011                           	psect	text83
 14012     12A6                     __ptext83:	
 14013 ;; *************** function _I2C_DO_IDLE *****************
 14014 ;; Defined at:
 14015 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;                  1    wreg      enum E3112
 14022 ;; Registers used:
 14023 ;;		wreg, status,2
 14024 ;; Tracked objects:
 14025 ;;		On entry : 0/0
 14026 ;;		On exit  : 0/0
 14027 ;;		Unchanged: 0/0
 14028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14029 ;;      Params:         0       0       0       0       0       0       0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0       0
 14032 ;;      Totals:         0       0       0       0       0       0       0       0
 14033 ;;Total ram usage:        0 bytes
 14034 ;; Hardware stack levels used: 1
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_I2C_MasterFsm
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042     12A6                     _I2C_DO_IDLE:	
 14043                           ;psect for function _I2C_DO_IDLE
 14044                           
 14045     12A6                     i1l4612:	
 14046                           ;incstack = 0
 14047                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 14048                           
 14049                           
 14050                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 14051     12A6  0022               	movlb	2	; select bank2
 14052     12A7  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 14053     12A8                     i1l4614:
 14054                           
 14055                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 14056     12A8  01BB               	clrf	(_I2C_Status^(0+256)+27)
 14057     12A9                     i1l4616:
 14058                           
 14059                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 14060     12A9  300E               	movlw	14
 14061     12AA                     i1l574:
 14062     12AA  0008               	return
 14063     12AB                     __end_of_I2C_DO_IDLE:
 14064                           
 14065                           	psect	text84
 14066     0813                     __ptext84:	
 14067 ;; *************** function _I2C_DO_TX_EMPTY *****************
 14068 ;; Defined at:
 14069 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;		None
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  1    wreg      enum E3112
 14076 ;; Registers used:
 14077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14083 ;;      Params:         0       0       0       0       0       0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0       0
 14085 ;;      Temps:          2       0       0       0       0       0       0       0
 14086 ;;      Totals:         2       0       0       0       0       0       0       0
 14087 ;;Total ram usage:        2 bytes
 14088 ;; Hardware stack levels used: 1
 14089 ;; Hardware stack levels required when called: 3
 14090 ;; This function calls:
 14091 ;;		NULL
 14092 ;;		_I2C_CallbackReturnReset
 14093 ;;		_I2C_CallbackReturnStop
 14094 ;;		_I2C_DO_SEND_RESTART
 14095 ;;		_I2C_DO_SEND_STOP
 14096 ;;		_I2C_MasterSetIrq
 14097 ;;		_rd1RegCompleteHandler
 14098 ;;		_rd2RegCompleteHandler
 14099 ;;		_rdBlkRegCompleteHandler
 14100 ;;		_wr1RegCompleteHandler
 14101 ;;		_wr2RegCompleteHandler
 14102 ;; This function is called by:
 14103 ;;		_I2C_MasterFsm
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107     0813                     _I2C_DO_TX_EMPTY:	
 14108                           ;psect for function _I2C_DO_TX_EMPTY
 14109                           
 14110     0813                     i1l4710:	
 14111                           ;incstack = 0
 14112                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14113                           
 14114                           
 14115                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 14116     0813  0022               	movlb	2	; select bank2
 14117     0814  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 14118                           
 14119                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14120     0815  2823               	goto	i1l4728
 14121     0816                     i1l4712:
 14122                           
 14123                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 14124     0816  3192  22B5  3188   	fcall	_I2C_DO_SEND_RESTART
 14125     0819  283F               	goto	i1l617
 14126     081A                     i1l4716:
 14127                           
 14128                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 14129     081A  3192  2271  3188   	fcall	_I2C_MasterSetIrq
 14130     081D                     i1l4718:
 14131                           
 14132                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 14133     081D  3003               	movlw	3
 14134     081E  283F               	goto	i1l617
 14135     081F                     i1l4722:
 14136                           
 14137                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 14138     081F  3192  22BA  3188   	fcall	_I2C_DO_SEND_STOP
 14139     0822  283F               	goto	i1l617
 14140     0823                     i1l4728:
 14141     0823  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 14142     0824  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 14143     0825  0821               	movf	(_I2C_Status+1)^(0+256),w
 14144     0826  008A               	movwf	10
 14145     0827  0820               	movf	_I2C_Status^(0+256),w
 14146     0828  000A               	callw
 14147     0829  3188               	pagesel	$
 14148     082A  00F8               	movwf	??_I2C_DO_TX_EMPTY
 14149     082B  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
 14150                           
 14151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14152                           ; Switch size 1, requested type "simple"
 14153                           ; Number of cases is 1, Range of values is 0 to 0
 14154                           ; switch strategies available:
 14155                           ; Name         Instructions Cycles
 14156                           ; simple_byte            4     3 (average)
 14157                           ; direct_byte            8     6 (fixed)
 14158                           ; jumptable            260     6 (fixed)
 14159                           ;	Chosen strategy is simple_byte
 14160     082C  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
 14161     082D  3A00               	xorlw	0	; case 0
 14162     082E  1903               	skipnz
 14163     082F  2831               	goto	i1l5356
 14164     0830  281F               	goto	i1l4722
 14165     0831                     i1l5356:
 14166                           
 14167                           ; Switch size 1, requested type "simple"
 14168                           ; Number of cases is 4, Range of values is 1 to 4
 14169                           ; switch strategies available:
 14170                           ; Name         Instructions Cycles
 14171                           ; simple_byte           13     7 (average)
 14172                           ; direct_byte           17     9 (fixed)
 14173                           ; jumptable            263     9 (fixed)
 14174                           ;	Chosen strategy is simple_byte
 14175     0831  0878               	movf	??_I2C_DO_TX_EMPTY,w
 14176     0832  3A01               	xorlw	1	; case 1
 14177     0833  1903               	skipnz
 14178     0834  281F               	goto	i1l4722
 14179     0835  3A03               	xorlw	3	; case 2
 14180     0836  1903               	skipnz
 14181     0837  2816               	goto	i1l4712
 14182     0838  3A01               	xorlw	1	; case 3
 14183     0839  1903               	skipnz
 14184     083A  2816               	goto	i1l4712
 14185     083B  3A07               	xorlw	7	; case 4
 14186     083C  1903               	skipnz
 14187     083D  281A               	goto	i1l4716
 14188     083E  281F               	goto	i1l4722
 14189     083F                     i1l617:
 14190     083F  0008               	return
 14191     0840                     __end_of_I2C_DO_TX_EMPTY:
 14192                           
 14193                           	psect	text85
 14194     1271                     __ptext85:	
 14195 ;; *************** function _I2C_MasterSetIrq *****************
 14196 ;; Defined at:
 14197 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;		None
 14200 ;; Auto vars:     Size  Location     Type
 14201 ;;		None
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  1    wreg      void 
 14204 ;; Registers used:
 14205 ;;		None
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14211 ;;      Params:         0       0       0       0       0       0       0       0
 14212 ;;      Locals:         0       0       0       0       0       0       0       0
 14213 ;;      Temps:          0       0       0       0       0       0       0       0
 14214 ;;      Totals:         0       0       0       0       0       0       0       0
 14215 ;;Total ram usage:        0 bytes
 14216 ;; Hardware stack levels used: 1
 14217 ;; This function calls:
 14218 ;;		Nothing
 14219 ;; This function is called by:
 14220 ;;		_I2C_DO_TX_EMPTY
 14221 ;; This function uses a non-reentrant model
 14222 ;;
 14223                           
 14224     1271                     _I2C_MasterSetIrq:	
 14225                           ;psect for function _I2C_MasterSetIrq
 14226                           
 14227     1271                     i1l3958:	
 14228                           ;incstack = 0
 14229                           ; Regs used in _I2C_MasterSetIrq: []
 14230                           
 14231                           
 14232                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 14233     1271  0020               	movlb	0	; select bank0
 14234     1272  1591               	bsf	17,3	;volatile
 14235     1273                     i1l737:
 14236     1273  0008               	return
 14237     1274                     __end_of_I2C_MasterSetIrq:
 14238                           
 14239                           	psect	text86
 14240     12DD                     __ptext86:	
 14241 ;; *************** function _I2C_MasterIsNack *****************
 14242 ;; Defined at:
 14243 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 14244 ;; Parameters:    Size  Location     Type
 14245 ;;		None
 14246 ;; Auto vars:     Size  Location     Type
 14247 ;;		None
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  1    wreg      _Bool 
 14250 ;; Registers used:
 14251 ;;		wreg, status,2, status,0
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14257 ;;      Params:         0       0       0       0       0       0       0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0
 14261 ;;Total ram usage:        0 bytes
 14262 ;; Hardware stack levels used: 1
 14263 ;; This function calls:
 14264 ;;		Nothing
 14265 ;; This function is called by:
 14266 ;;		_I2C_MasterFsm
 14267 ;;		_I2C_DO_TX
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271     12DD                     _I2C_MasterIsNack:	
 14272                           ;psect for function _I2C_MasterIsNack
 14273                           
 14274     12DD                     i1l3908:	
 14275                           ;incstack = 0
 14276                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 14277                           
 14278                           
 14279                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 14280     12DD  0024               	movlb	4	; select bank4
 14281     12DE  0E16               	swapf	22,w	;volatile
 14282     12DF  0C89               	rrf	9,f
 14283     12E0  0C89               	rrf	9,f
 14284     12E1  3901               	andlw	1
 14285     12E2                     i1l710:
 14286     12E2  0008               	return
 14287     12E3                     __end_of_I2C_MasterIsNack:
 14288                           
 14289                           	psect	text87
 14290     12A1                     __ptext87:	
 14291 ;; *************** function _I2C_MasterSendTxData *****************
 14292 ;; Defined at:
 14293 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;  data            1    wreg     unsigned char 
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;  data            1    0[COMMON] unsigned char 
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      void 
 14300 ;; Registers used:
 14301 ;;		wreg
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14307 ;;      Params:         0       0       0       0       0       0       0       0
 14308 ;;      Locals:         1       0       0       0       0       0       0       0
 14309 ;;      Temps:          0       0       0       0       0       0       0       0
 14310 ;;      Totals:         1       0       0       0       0       0       0       0
 14311 ;;Total ram usage:        1 bytes
 14312 ;; Hardware stack levels used: 1
 14313 ;; This function calls:
 14314 ;;		Nothing
 14315 ;; This function is called by:
 14316 ;;		_I2C_DO_SEND_ADR_READ
 14317 ;;		_I2C_DO_SEND_ADR_WRITE
 14318 ;;		_I2C_DO_TX
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322     12A1                     _I2C_MasterSendTxData:	
 14323                           ;psect for function _I2C_MasterSendTxData
 14324                           
 14325                           
 14326                           ;incstack = 0
 14327                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 14328                           ;I2C_MasterSendTxData@data stored from wreg
 14329     12A1  00F0               	movwf	I2C_MasterSendTxData@data
 14330     12A2                     i1l3912:
 14331                           
 14332                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 14333     12A2  0870               	movf	I2C_MasterSendTxData@data,w
 14334     12A3  0024               	movlb	4	; select bank4
 14335     12A4  0091               	movwf	17	;volatile
 14336     12A5                     i1l692:
 14337     12A5  0008               	return
 14338     12A6                     __end_of_I2C_MasterSendTxData:
 14339                           
 14340                           	psect	text88
 14341     1295                     __ptext88:	
 14342 ;; *************** function _I2C_MasterSendAck *****************
 14343 ;; Defined at:
 14344 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		None
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14358 ;;      Params:         0       0       0       0       0       0       0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0
 14361 ;;      Totals:         0       0       0       0       0       0       0       0
 14362 ;;Total ram usage:        0 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_I2C_DO_RX
 14368 ;;		_I2C_DO_RX_ACK
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372     1295                     _I2C_MasterSendAck:	
 14373                           ;psect for function _I2C_MasterSendAck
 14374                           
 14375     1295                     i1l3936:	
 14376                           ;incstack = 0
 14377                           ; Regs used in _I2C_MasterSendAck: []
 14378                           
 14379                           
 14380                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 14381     1295  0024               	movlb	4	; select bank4
 14382     1296  1296               	bcf	22,5	;volatile
 14383                           
 14384                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 14385     1297  1616               	bsf	22,4	;volatile
 14386     1298                     i1l713:
 14387     1298  0008               	return
 14388     1299                     __end_of_I2C_MasterSendAck:
 14389                           
 14390                           	psect	text89
 14391     126E                     __ptext89:	
 14392 ;; *************** function _I2C_MasterGetRxData *****************
 14393 ;; Defined at:
 14394 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;		None
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;		None
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      unsigned char 
 14401 ;; Registers used:
 14402 ;;		wreg
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14408 ;;      Params:         0       0       0       0       0       0       0       0
 14409 ;;      Locals:         0       0       0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0       0
 14411 ;;      Totals:         0       0       0       0       0       0       0       0
 14412 ;;Total ram usage:        0 bytes
 14413 ;; Hardware stack levels used: 1
 14414 ;; This function calls:
 14415 ;;		Nothing
 14416 ;; This function is called by:
 14417 ;;		_I2C_DO_RX
 14418 ;; This function uses a non-reentrant model
 14419 ;;
 14420                           
 14421     126E                     _I2C_MasterGetRxData:	
 14422                           ;psect for function _I2C_MasterGetRxData
 14423                           
 14424     126E                     i1l3932:	
 14425                           ;incstack = 0
 14426                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 14427                           
 14428                           
 14429                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 14430     126E  0024               	movlb	4	; select bank4
 14431     126F  0811               	movf	17,w	;volatile
 14432     1270                     i1l689:
 14433     1270  0008               	return
 14434     1271                     __end_of_I2C_MasterGetRxData:
 14435                           
 14436                           	psect	text90
 14437     1291                     __ptext90:	
 14438 ;; *************** function _I2C_MasterSendNack *****************
 14439 ;; Defined at:
 14440 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		None
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14454 ;;      Params:         0       0       0       0       0       0       0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used: 1
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_I2C_DO_RX_NACK_STOP
 14464 ;;		_I2C_DO_RX_NACK_RESTART
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468     1291                     _I2C_MasterSendNack:	
 14469                           ;psect for function _I2C_MasterSendNack
 14470                           
 14471     1291                     i1l3726:	
 14472                           ;incstack = 0
 14473                           ; Regs used in _I2C_MasterSendNack: []
 14474                           
 14475                           
 14476                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 14477     1291  0024               	movlb	4	; select bank4
 14478     1292  1696               	bsf	22,5	;volatile
 14479                           
 14480                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 14481     1293  1616               	bsf	22,4	;volatile
 14482     1294                     i1l716:
 14483     1294  0008               	return
 14484     1295                     __end_of_I2C_MasterSendNack:
 14485                           
 14486                           	psect	text91
 14487     126B                     __ptext91:	
 14488 ;; *************** function _I2C_MasterStartRx *****************
 14489 ;; Defined at:
 14490 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;		None
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1    wreg      void 
 14497 ;; Registers used:
 14498 ;;		None
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14504 ;;      Params:         0       0       0       0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0
 14507 ;;      Totals:         0       0       0       0       0       0       0       0
 14508 ;;Total ram usage:        0 bytes
 14509 ;; Hardware stack levels used: 1
 14510 ;; This function calls:
 14511 ;;		Nothing
 14512 ;; This function is called by:
 14513 ;;		_I2C_DO_RCEN
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517     126B                     _I2C_MasterStartRx:	
 14518                           ;psect for function _I2C_MasterStartRx
 14519                           
 14520     126B                     i1l3950:	
 14521                           ;incstack = 0
 14522                           ; Regs used in _I2C_MasterStartRx: []
 14523                           
 14524                           
 14525                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 14526     126B  0024               	movlb	4	; select bank4
 14527     126C  1596               	bsf	22,3	;volatile
 14528     126D                     i1l701:
 14529     126D  0008               	return
 14530     126E                     __end_of_I2C_MasterStartRx:
 14531                           
 14532                           	psect	text92
 14533     0002                     __ptext92:	
 14534 ;; *************** function _I2C_CallbackReturnReset *****************
 14535 ;; Defined at:
 14536 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 14537 ;; Parameters:    Size  Location     Type
 14538 ;;  funPtr          1    7[COMMON] PTR void 
 14539 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14540 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;		None
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  1    wreg      enum E363
 14545 ;; Registers used:
 14546 ;;		wreg
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14552 ;;      Params:         1       0       0       0       0       0       0       0
 14553 ;;      Locals:         0       0       0       0       0       0       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0
 14555 ;;      Totals:         1       0       0       0       0       0       0       0
 14556 ;;Total ram usage:        1 bytes
 14557 ;; Hardware stack levels used: 1
 14558 ;; This function calls:
 14559 ;;		Nothing
 14560 ;; This function is called by:
 14561 ;;		_I2C_Open
 14562 ;;		_I2C_DO_TX
 14563 ;;		_I2C_DO_RX
 14564 ;;		_I2C_DO_TX_EMPTY
 14565 ;;		_I2C_DO_ADDRESS_NACK
 14566 ;;		_I2C_DO_RX_EMPTY
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570     0002                     _I2C_CallbackReturnReset:	
 14571                           ;psect for function _I2C_CallbackReturnReset
 14572                           
 14573     0002                     i1l3964:	
 14574                           ;incstack = 0
 14575                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 14576                           
 14577                           
 14578                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 14579     0002  3005               	movlw	5
 14580     0003                     i1l673:
 14581     0003  0008               	return
 14582     0004                     __end_of_I2C_CallbackReturnReset:
 14583                           
 14584                           	psect	text93
 14585     1263                     __ptext93:	
 14586 ;; *************** function _I2C_CallbackReturnStop *****************
 14587 ;; Defined at:
 14588 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;  funPtr          1    7[COMMON] PTR void 
 14591 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14592 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1    wreg      enum E363
 14597 ;; Registers used:
 14598 ;;		wreg
 14599 ;; Tracked objects:
 14600 ;;		On entry : 0/0
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14604 ;;      Params:         1       0       0       0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0
 14607 ;;      Totals:         1       0       0       0       0       0       0       0
 14608 ;;Total ram usage:        1 bytes
 14609 ;; Hardware stack levels used: 1
 14610 ;; This function calls:
 14611 ;;		Nothing
 14612 ;; This function is called by:
 14613 ;;		_I2C_Open
 14614 ;;		_I2C_SetCallback
 14615 ;;		i1_I2C_SetCallback
 14616 ;;		_I2C_DO_TX
 14617 ;;		_I2C_DO_RX
 14618 ;;		_I2C_DO_TX_EMPTY
 14619 ;;		_I2C_DO_ADDRESS_NACK
 14620 ;;		_I2C_DO_RX_EMPTY
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624     1263                     _I2C_CallbackReturnStop:	
 14625                           ;psect for function _I2C_CallbackReturnStop
 14626                           
 14627     1263                     i1l3960:	
 14628                           ;incstack = 0
 14629                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 14630                           
 14631                           
 14632                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 14633     1263  3001               	movlw	1
 14634     1264                     i1l670:
 14635     1264  0008               	return
 14636     1265                     __end_of_I2C_CallbackReturnStop:
 14637                           
 14638                           	psect	text94
 14639     1485                     __ptext94:	
 14640 ;; *************** function _rdBlkRegCompleteHandler *****************
 14641 ;; Defined at:
 14642 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;  ptr             1    7[COMMON] PTR void 
 14645 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14646 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;		None
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  1    wreg      enum E363
 14651 ;; Registers used:
 14652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14658 ;;      Params:         1       0       0       0       0       0       0       0
 14659 ;;      Locals:         0       0       0       0       0       0       0       0
 14660 ;;      Temps:          0       0       0       0       0       0       0       0
 14661 ;;      Totals:         1       0       0       0       0       0       0       0
 14662 ;;Total ram usage:        1 bytes
 14663 ;; Hardware stack levels used: 1
 14664 ;; Hardware stack levels required when called: 2
 14665 ;; This function calls:
 14666 ;;		_I2C_SetDataCompleteCallback
 14667 ;;		i1_I2C_SetBuffer
 14668 ;; This function is called by:
 14669 ;;		_I2C_ReadDataBlock
 14670 ;;		_I2C_DO_TX
 14671 ;;		_I2C_DO_RX
 14672 ;;		_I2C_DO_TX_EMPTY
 14673 ;;		_I2C_DO_ADDRESS_NACK
 14674 ;;		_I2C_DO_RX_EMPTY
 14675 ;; This function uses a non-reentrant model
 14676 ;;
 14677                           
 14678     1485                     _rdBlkRegCompleteHandler:	
 14679                           ;psect for function _rdBlkRegCompleteHandler
 14680                           
 14681     1485                     i1l3902:	
 14682                           ;incstack = 0
 14683                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14684                           
 14685                           
 14686                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14687     1485  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14688     1486  0086               	movwf	6
 14689     1487  0187               	clrf	7
 14690     1488  3F40               	moviw [0]fsr1
 14691     1489  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14692     148A  3F41               	moviw [1]fsr1
 14693     148B  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14694     148C  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14695     148D  3E02               	addlw	2
 14696     148E  0086               	movwf	6
 14697     148F  0187               	clrf	7
 14698     1490  0801               	movf	1,w
 14699     1491  3193  23BD  3194   	fcall	i1_I2C_SetBuffer
 14700                           
 14701                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14702     1494  3000               	movlw	0
 14703     1495  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14704     1496  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14705     1497  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14706     1498  3193  2368  3194   	fcall	_I2C_SetDataCompleteCallback
 14707     149B                     i1l3904:
 14708                           
 14709                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14710     149B  3002               	movlw	2
 14711     149C                     i1l104:
 14712     149C  0008               	return
 14713     149D                     __end_of_rdBlkRegCompleteHandler:
 14714                           
 14715                           	psect	text95
 14716     141A                     __ptext95:	
 14717 ;; *************** function _wr1RegCompleteHandler *****************
 14718 ;; Defined at:
 14719 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;  ptr             1    7[COMMON] PTR void 
 14722 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14723 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      enum E363
 14728 ;; Registers used:
 14729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14735 ;;      Params:         1       0       0       0       0       0       0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0
 14738 ;;      Totals:         1       0       0       0       0       0       0       0
 14739 ;;Total ram usage:        1 bytes
 14740 ;; Hardware stack levels used: 1
 14741 ;; Hardware stack levels required when called: 2
 14742 ;; This function calls:
 14743 ;;		_I2C_SetDataCompleteCallback
 14744 ;;		i1_I2C_SetBuffer
 14745 ;; This function is called by:
 14746 ;;		_I2C_Write1ByteRegister
 14747 ;;		_I2C_DO_TX
 14748 ;;		_I2C_DO_RX
 14749 ;;		_I2C_DO_TX_EMPTY
 14750 ;;		_I2C_DO_ADDRESS_NACK
 14751 ;;		_I2C_DO_RX_EMPTY
 14752 ;; This function uses a non-reentrant model
 14753 ;;
 14754                           
 14755     141A                     _wr1RegCompleteHandler:	
 14756                           ;psect for function _wr1RegCompleteHandler
 14757                           
 14758     141A                     i1l3886:	
 14759                           ;incstack = 0
 14760                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14761                           
 14762                           
 14763                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14764     141A  3001               	movlw	1
 14765     141B  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14766     141C  3000               	movlw	0
 14767     141D  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14768     141E  0877               	movf	wr1RegCompleteHandler@ptr,w
 14769     141F  3193  23BD  3194   	fcall	i1_I2C_SetBuffer
 14770     1422                     i1l3888:
 14771                           
 14772                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14773     1422  3000               	movlw	0
 14774     1423  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14775     1424  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14776     1425  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14777     1426  3193  2368  3194   	fcall	_I2C_SetDataCompleteCallback
 14778     1429                     i1l3890:
 14779                           
 14780                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14781     1429  3004               	movlw	4
 14782     142A                     i1l98:
 14783     142A  0008               	return
 14784     142B                     __end_of_wr1RegCompleteHandler:
 14785                           
 14786                           	psect	text96
 14787     1409                     __ptext96:	
 14788 ;; *************** function _rd2RegCompleteHandler *****************
 14789 ;; Defined at:
 14790 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14791 ;; Parameters:    Size  Location     Type
 14792 ;;  ptr             1    7[COMMON] PTR void 
 14793 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14794 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;                  1    wreg      enum E363
 14799 ;; Registers used:
 14800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14806 ;;      Params:         1       0       0       0       0       0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0
 14808 ;;      Temps:          0       0       0       0       0       0       0       0
 14809 ;;      Totals:         1       0       0       0       0       0       0       0
 14810 ;;Total ram usage:        1 bytes
 14811 ;; Hardware stack levels used: 1
 14812 ;; Hardware stack levels required when called: 2
 14813 ;; This function calls:
 14814 ;;		_I2C_SetDataCompleteCallback
 14815 ;;		i1_I2C_SetBuffer
 14816 ;; This function is called by:
 14817 ;;		_I2C_Read2ByteRegister
 14818 ;;		_I2C_DO_TX
 14819 ;;		_I2C_DO_RX
 14820 ;;		_I2C_DO_TX_EMPTY
 14821 ;;		_I2C_DO_ADDRESS_NACK
 14822 ;;		_I2C_DO_RX_EMPTY
 14823 ;; This function uses a non-reentrant model
 14824 ;;
 14825                           
 14826     1409                     _rd2RegCompleteHandler:	
 14827                           ;psect for function _rd2RegCompleteHandler
 14828                           
 14829     1409                     i1l3878:	
 14830                           ;incstack = 0
 14831                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14832                           
 14833                           
 14834                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14835     1409  3002               	movlw	2
 14836     140A  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14837     140B  3000               	movlw	0
 14838     140C  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14839     140D  0877               	movf	rd2RegCompleteHandler@ptr,w
 14840     140E  3193  23BD  3194   	fcall	i1_I2C_SetBuffer
 14841     1411                     i1l3880:
 14842                           
 14843                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14844     1411  3000               	movlw	0
 14845     1412  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14846     1413  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14847     1414  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14848     1415  3193  2368  3194   	fcall	_I2C_SetDataCompleteCallback
 14849     1418                     i1l3882:
 14850                           
 14851                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14852     1418  3002               	movlw	2
 14853     1419                     i1l95:
 14854     1419  0008               	return
 14855     141A                     __end_of_rd2RegCompleteHandler:
 14856                           
 14857                           	psect	text97
 14858     13F8                     __ptext97:	
 14859 ;; *************** function _rd1RegCompleteHandler *****************
 14860 ;; Defined at:
 14861 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;  ptr             1    7[COMMON] PTR void 
 14864 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14865 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;		None
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  1    wreg      enum E363
 14870 ;; Registers used:
 14871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14877 ;;      Params:         1       0       0       0       0       0       0       0
 14878 ;;      Locals:         0       0       0       0       0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0
 14880 ;;      Totals:         1       0       0       0       0       0       0       0
 14881 ;;Total ram usage:        1 bytes
 14882 ;; Hardware stack levels used: 1
 14883 ;; Hardware stack levels required when called: 2
 14884 ;; This function calls:
 14885 ;;		_I2C_SetDataCompleteCallback
 14886 ;;		i1_I2C_SetBuffer
 14887 ;; This function is called by:
 14888 ;;		_I2C_Read1ByteRegister
 14889 ;;		_I2C_DO_TX
 14890 ;;		_I2C_DO_RX
 14891 ;;		_I2C_DO_TX_EMPTY
 14892 ;;		_I2C_DO_ADDRESS_NACK
 14893 ;;		_I2C_DO_RX_EMPTY
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897     13F8                     _rd1RegCompleteHandler:	
 14898                           ;psect for function _rd1RegCompleteHandler
 14899                           
 14900     13F8                     i1l3870:	
 14901                           ;incstack = 0
 14902                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14903                           
 14904                           
 14905                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14906     13F8  3001               	movlw	1
 14907     13F9  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14908     13FA  3000               	movlw	0
 14909     13FB  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14910     13FC  0877               	movf	rd1RegCompleteHandler@ptr,w
 14911     13FD  3193  23BD  3193   	fcall	i1_I2C_SetBuffer
 14912     1400                     i1l3872:
 14913                           
 14914                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14915     1400  3000               	movlw	0
 14916     1401  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14917     1402  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14918     1403  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14919     1404  3193  2368  3193   	fcall	_I2C_SetDataCompleteCallback
 14920     1407                     i1l3874:
 14921                           
 14922                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14923     1407  3002               	movlw	2
 14924     1408                     i1l92:
 14925     1408  0008               	return
 14926     1409                     __end_of_rd1RegCompleteHandler:
 14927                           
 14928                           	psect	text98
 14929     13E7                     __ptext98:	
 14930 ;; *************** function _wr2RegCompleteHandler *****************
 14931 ;; Defined at:
 14932 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14933 ;; Parameters:    Size  Location     Type
 14934 ;;  ptr             1    7[COMMON] PTR void 
 14935 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14936 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14937 ;; Auto vars:     Size  Location     Type
 14938 ;;		None
 14939 ;; Return value:  Size  Location     Type
 14940 ;;                  1    wreg      enum E363
 14941 ;; Registers used:
 14942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14943 ;; Tracked objects:
 14944 ;;		On entry : 0/0
 14945 ;;		On exit  : 0/0
 14946 ;;		Unchanged: 0/0
 14947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14948 ;;      Params:         1       0       0       0       0       0       0       0
 14949 ;;      Locals:         0       0       0       0       0       0       0       0
 14950 ;;      Temps:          0       0       0       0       0       0       0       0
 14951 ;;      Totals:         1       0       0       0       0       0       0       0
 14952 ;;Total ram usage:        1 bytes
 14953 ;; Hardware stack levels used: 1
 14954 ;; Hardware stack levels required when called: 2
 14955 ;; This function calls:
 14956 ;;		_I2C_SetDataCompleteCallback
 14957 ;;		i1_I2C_SetBuffer
 14958 ;; This function is called by:
 14959 ;;		_I2C_Write2ByteRegister
 14960 ;;		_I2C_DO_TX
 14961 ;;		_I2C_DO_RX
 14962 ;;		_I2C_DO_TX_EMPTY
 14963 ;;		_I2C_DO_ADDRESS_NACK
 14964 ;;		_I2C_DO_RX_EMPTY
 14965 ;; This function uses a non-reentrant model
 14966 ;;
 14967                           
 14968     13E7                     _wr2RegCompleteHandler:	
 14969                           ;psect for function _wr2RegCompleteHandler
 14970                           
 14971     13E7                     i1l3894:	
 14972                           ;incstack = 0
 14973                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14974                           
 14975                           
 14976                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 14977     13E7  3002               	movlw	2
 14978     13E8  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14979     13E9  3000               	movlw	0
 14980     13EA  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14981     13EB  0877               	movf	wr2RegCompleteHandler@ptr,w
 14982     13EC  3193  23BD  3193   	fcall	i1_I2C_SetBuffer
 14983     13EF                     i1l3896:
 14984                           
 14985                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14986     13EF  3000               	movlw	0
 14987     13F0  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14988     13F1  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14989     13F2  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14990     13F3  3193  2368  3193   	fcall	_I2C_SetDataCompleteCallback
 14991     13F6                     i1l3898:
 14992                           
 14993                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 14994     13F6  3004               	movlw	4
 14995     13F7                     i1l101:
 14996     13F7  0008               	return
 14997     13F8                     __end_of_wr2RegCompleteHandler:
 14998                           
 14999                           	psect	text99
 15000     13BD                     __ptext99:	
 15001 ;; *************** function i1_I2C_SetBuffer *****************
 15002 ;; Defined at:
 15003 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 15004 ;; Parameters:    Size  Location     Type
 15005 ;;  buffer          1    wreg     PTR void 
 15006 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15007 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15008 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15009 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15010 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15011 ;;  bufferSize      2    0[COMMON] unsigned int 
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;  buffer          1    2[COMMON] PTR void 
 15014 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15015 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15016 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15017 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15018 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15019 ;; Return value:  Size  Location     Type
 15020 ;;                  1    wreg      void 
 15021 ;; Registers used:
 15022 ;;		wreg
 15023 ;; Tracked objects:
 15024 ;;		On entry : 0/0
 15025 ;;		On exit  : 0/0
 15026 ;;		Unchanged: 0/0
 15027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15028 ;;      Params:         2       0       0       0       0       0       0       0
 15029 ;;      Locals:         1       0       0       0       0       0       0       0
 15030 ;;      Temps:          0       0       0       0       0       0       0       0
 15031 ;;      Totals:         3       0       0       0       0       0       0       0
 15032 ;;Total ram usage:        3 bytes
 15033 ;; Hardware stack levels used: 1
 15034 ;; This function calls:
 15035 ;;		Nothing
 15036 ;; This function is called by:
 15037 ;;		_rd1RegCompleteHandler
 15038 ;;		_rd2RegCompleteHandler
 15039 ;;		_wr1RegCompleteHandler
 15040 ;;		_wr2RegCompleteHandler
 15041 ;;		_rdBlkRegCompleteHandler
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045     13BD                     i1_I2C_SetBuffer:	
 15046                           ;psect for function i1_I2C_SetBuffer
 15047                           
 15048                           
 15049                           ;incstack = 0
 15050                           ; Regs used in i1_I2C_SetBuffer: [wreg]
 15051                           ;i1I2C_SetBuffer@buffer stored from wreg
 15052     13BD  00F2               	movwf	i1I2C_SetBuffer@buffer
 15053     13BE                     i1l3844:
 15054                           
 15055                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 15056     13BE  0022               	movlb	2	; select bank2
 15057     13BF  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
 15058     13C0  2BC2               	goto	u262_21
 15059     13C1  2BC3               	goto	u262_20
 15060     13C2                     u262_21:
 15061     13C2  2BCA               	goto	i1l541
 15062     13C3                     u262_20:
 15063     13C3                     i1l3846:
 15064                           
 15065                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 15066     13C3  0872               	movf	i1I2C_SetBuffer@buffer,w
 15067     13C4  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
 15068                           
 15069                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 15070     13C5  0871               	movf	i1I2C_SetBuffer@bufferSize+1,w
 15071     13C6  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
 15072     13C7  0870               	movf	i1I2C_SetBuffer@bufferSize,w
 15073     13C8  00B8               	movwf	(_I2C_Status^(0+256)+24)
 15074     13C9                     i1l3848:
 15075                           
 15076                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 15077     13C9  11BC               	bcf	(_I2C_Status^(0+256)+28),3
 15078     13CA                     i1l541:
 15079     13CA  0008               	return
 15080     13CB                     __end_ofi1_I2C_SetBuffer:
 15081                           
 15082                           	psect	text100
 15083     1368                     __ptext100:	
 15084 ;; *************** function _I2C_SetDataCompleteCallback *****************
 15085 ;; Defined at:
 15086 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 15089 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15090 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15091 ;;  ptr             1    6[COMMON] PTR void 
 15092 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15093 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15094 ;; Auto vars:     Size  Location     Type
 15095 ;;		None
 15096 ;; Return value:  Size  Location     Type
 15097 ;;                  1    wreg      void 
 15098 ;; Registers used:
 15099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15100 ;; Tracked objects:
 15101 ;;		On entry : 0/0
 15102 ;;		On exit  : 0/0
 15103 ;;		Unchanged: 0/0
 15104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15105 ;;      Params:         3       0       0       0       0       0       0       0
 15106 ;;      Locals:         0       0       0       0       0       0       0       0
 15107 ;;      Temps:          0       0       0       0       0       0       0       0
 15108 ;;      Totals:         3       0       0       0       0       0       0       0
 15109 ;;Total ram usage:        3 bytes
 15110 ;; Hardware stack levels used: 1
 15111 ;; Hardware stack levels required when called: 1
 15112 ;; This function calls:
 15113 ;;		i1_I2C_SetCallback
 15114 ;; This function is called by:
 15115 ;;		_rd1RegCompleteHandler
 15116 ;;		_rd2RegCompleteHandler
 15117 ;;		_wr1RegCompleteHandler
 15118 ;;		_wr2RegCompleteHandler
 15119 ;;		_rdBlkRegCompleteHandler
 15120 ;;		_I2C_Read1ByteRegister
 15121 ;;		_I2C_Read2ByteRegister
 15122 ;;		_I2C_Write1ByteRegister
 15123 ;;		_I2C_Write2ByteRegister
 15124 ;;		_I2C_ReadDataBlock
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128     1368                     _I2C_SetDataCompleteCallback:	
 15129                           ;psect for function _I2C_SetDataCompleteCallback
 15130                           
 15131     1368                     i1l3686:	
 15132                           ;incstack = 0
 15133                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15134                           
 15135                           
 15136                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15137     1368  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
 15138     1369  00F1               	movwf	i1I2C_SetCallback@cb+1
 15139     136A  0874               	movf	I2C_SetDataCompleteCallback@cb,w
 15140     136B  00F0               	movwf	i1I2C_SetCallback@cb
 15141     136C  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
 15142     136D  00F2               	movwf	i1I2C_SetCallback@ptr
 15143     136E  3000               	movlw	0
 15144     136F  3195  25A9  3193   	fcall	i1_I2C_SetCallback
 15145     1372                     i1l544:
 15146     1372  0008               	return
 15147     1373                     __end_of_I2C_SetDataCompleteCallback:
 15148                           
 15149                           	psect	text101
 15150     15A9                     __ptext101:	
 15151 ;; *************** function i1_I2C_SetCallback *****************
 15152 ;; Defined at:
 15153 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;  idx             1    wreg     enum E3130
 15156 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 15157 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15158 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15159 ;;  ptr             1    2[COMMON] PTR void 
 15160 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15161 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;  idx             1    3[COMMON] enum E3130
 15164 ;; Return value:  Size  Location     Type
 15165 ;;                  1    wreg      void 
 15166 ;; Registers used:
 15167 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15173 ;;      Params:         3       0       0       0       0       0       0       0
 15174 ;;      Locals:         1       0       0       0       0       0       0       0
 15175 ;;      Temps:          0       0       0       0       0       0       0       0
 15176 ;;      Totals:         4       0       0       0       0       0       0       0
 15177 ;;Total ram usage:        4 bytes
 15178 ;; Hardware stack levels used: 1
 15179 ;; This function calls:
 15180 ;;		Nothing
 15181 ;; This function is called by:
 15182 ;;		_I2C_SetDataCompleteCallback
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186     15A9                     i1_I2C_SetCallback:	
 15187                           ;psect for function i1_I2C_SetCallback
 15188                           
 15189                           
 15190                           ;incstack = 0
 15191                           ; Regs used in i1_I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15192                           ;i1I2C_SetCallback@idx stored from wreg
 15193     15A9  00F3               	movwf	i1I2C_SetCallback@idx
 15194     15AA                     i1l3644:
 15195                           
 15196                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 15197     15AA  0870               	movf	i1I2C_SetCallback@cb,w
 15198     15AB  0471               	iorwf	i1I2C_SetCallback@cb+1,w
 15199     15AC  1903               	btfsc	3,2
 15200     15AD  2DAF               	goto	u247_21
 15201     15AE  2DB0               	goto	u247_20
 15202     15AF                     u247_21:
 15203     15AF  2DC1               	goto	i1l3648
 15204     15B0                     u247_20:
 15205     15B0                     i1l3646:
 15206                           
 15207                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15208     15B0  3573               	lslf	i1I2C_SetCallback@idx,w
 15209     15B1  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15210     15B2  0086               	movwf	6
 15211     15B3  3001               	movlw	1	; select bank2/3
 15212     15B4  0087               	movwf	7
 15213     15B5  0870               	movf	i1I2C_SetCallback@cb,w
 15214     15B6  3FC0               	movwi [0]fsr1
 15215     15B7  0871               	movf	i1I2C_SetCallback@cb+1,w
 15216     15B8  3FC1               	movwi [1]fsr1
 15217                           
 15218                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 15219     15B9  0873               	movf	i1I2C_SetCallback@idx,w
 15220     15BA  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15221     15BB  0086               	movwf	6
 15222     15BC  3001               	movlw	1	; select bank2/3
 15223     15BD  0087               	movwf	7
 15224     15BE  0872               	movf	i1I2C_SetCallback@ptr,w
 15225     15BF  0081               	movwf	1
 15226                           
 15227                           ;mcc_generated_files/i2c_master.c: 310:     }
 15228     15C0  2DD0               	goto	i1l564
 15229     15C1                     i1l3648:
 15230                           
 15231                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15232     15C1  3573               	lslf	i1I2C_SetCallback@idx,w
 15233     15C2  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15234     15C3  0086               	movwf	6
 15235     15C4  3001               	movlw	1	; select bank2/3
 15236     15C5  0087               	movwf	7
 15237     15C6  3063               	movlw	low _I2C_CallbackReturnStop
 15238     15C7  3FC0               	movwi [0]fsr1
 15239     15C8  3012               	movlw	high _I2C_CallbackReturnStop
 15240     15C9  3FC1               	movwi [1]fsr1
 15241                           
 15242                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15243     15CA  0873               	movf	i1I2C_SetCallback@idx,w
 15244     15CB  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15245     15CC  0086               	movwf	6
 15246     15CD  3001               	movlw	1	; select bank2/3
 15247     15CE  0087               	movwf	7
 15248     15CF  0181               	clrf	1
 15249     15D0                     i1l564:
 15250     15D0  0008               	return
 15251     15D1                     __end_ofi1_I2C_SetCallback:
 15252                           
 15253                           	psect	text102
 15254     1268                     __ptext102:	
 15255 ;; *************** function _I2C_MasterStop *****************
 15256 ;; Defined at:
 15257 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;		None
 15260 ;; Auto vars:     Size  Location     Type
 15261 ;;		None
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  1    wreg      void 
 15264 ;; Registers used:
 15265 ;;		None
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15271 ;;      Params:         0       0       0       0       0       0       0       0
 15272 ;;      Locals:         0       0       0       0       0       0       0       0
 15273 ;;      Temps:          0       0       0       0       0       0       0       0
 15274 ;;      Totals:         0       0       0       0       0       0       0       0
 15275 ;;Total ram usage:        0 bytes
 15276 ;; Hardware stack levels used: 1
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_I2C_DO_SEND_STOP
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284     1268                     _I2C_MasterStop:	
 15285                           ;psect for function _I2C_MasterStop
 15286                           
 15287     1268                     i1l3724:	
 15288                           ;incstack = 0
 15289                           ; Regs used in _I2C_MasterStop: []
 15290                           
 15291                           
 15292                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 15293     1268  0024               	movlb	4	; select bank4
 15294     1269  1516               	bsf	22,2	;volatile
 15295     126A                     i1l707:
 15296     126A  0008               	return
 15297     126B                     __end_of_I2C_MasterStop:
 15298                           
 15299                           	psect	text103
 15300     1265                     __ptext103:	
 15301 ;; *************** function _I2C_MasterEnableRestart *****************
 15302 ;; Defined at:
 15303 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		None
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15317 ;;      Params:         0       0       0       0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0
 15320 ;;      Totals:         0       0       0       0       0       0       0       0
 15321 ;;Total ram usage:        0 bytes
 15322 ;; Hardware stack levels used: 1
 15323 ;; This function calls:
 15324 ;;		Nothing
 15325 ;; This function is called by:
 15326 ;;		_I2C_DO_SEND_RESTART_READ
 15327 ;;		_I2C_DO_SEND_RESTART_WRITE
 15328 ;;		_I2C_DO_SEND_RESTART
 15329 ;;		_I2C_DO_RX_EMPTY
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333     1265                     _I2C_MasterEnableRestart:	
 15334                           ;psect for function _I2C_MasterEnableRestart
 15335                           
 15336     1265                     i1l3722:	
 15337                           ;incstack = 0
 15338                           ; Regs used in _I2C_MasterEnableRestart: []
 15339                           
 15340                           
 15341                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 15342     1265  0024               	movlb	4	; select bank4
 15343     1266  1496               	bsf	22,1	;volatile
 15344     1267                     i1l695:
 15345     1267  0008               	return
 15346     1268                     __end_of_I2C_MasterEnableRestart:
 15347                           
 15348                           	psect	text104
 15349     1562                     __ptext104:	
 15350 ;; *************** function _EUSART_Transmit_ISR *****************
 15351 ;; Defined at:
 15352 ;;		line 206 in file "mcc_generated_files/eusart.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;		None
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;		None
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  1    wreg      void 
 15359 ;; Registers used:
 15360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15366 ;;      Params:         0       0       0       0       0       0       0       0
 15367 ;;      Locals:         0       0       0       0       0       0       0       0
 15368 ;;      Temps:          1       0       0       0       0       0       0       0
 15369 ;;      Totals:         1       0       0       0       0       0       0       0
 15370 ;;Total ram usage:        1 bytes
 15371 ;; Hardware stack levels used: 1
 15372 ;; This function calls:
 15373 ;;		Nothing
 15374 ;; This function is called by:
 15375 ;;		_EUSART_Initialize
 15376 ;;		_INTERRUPT_InterruptManager
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380     1562                     _EUSART_Transmit_ISR:	
 15381                           ;psect for function _EUSART_Transmit_ISR
 15382                           
 15383     1562                     i1l5028:	
 15384                           ;incstack = 0
 15385                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15386                           
 15387                           
 15388                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15389     1562  3008               	movlw	8
 15390     1563  0020               	movlb	0	; select bank0
 15391     1564  026D               	subwf	_eusartTxBufferRemaining,w	;volatile
 15392     1565  1803               	skipnc
 15393     1566  2D68               	goto	u429_21
 15394     1567  2D69               	goto	u429_20
 15395     1568                     u429_21:
 15396     1568  2D82               	goto	i1l316
 15397     1569                     u429_20:
 15398     1569                     i1l5030:
 15399                           
 15400                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 15401     1569  086E               	movf	_eusartTxTail,w
 15402     156A  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15403     156B  0086               	movwf	6
 15404     156C  3001               	movlw	1	; select bank2/3
 15405     156D  0087               	movwf	7
 15406     156E  0801               	movf	1,w
 15407     156F  0023               	movlb	3	; select bank3
 15408     1570  009A               	movwf	26	;volatile
 15409     1571                     i1l5032:
 15410     1571  3001               	movlw	1
 15411     1572  00F0               	movwf	??_EUSART_Transmit_ISR
 15412     1573  0870               	movf	??_EUSART_Transmit_ISR,w
 15413     1574  0020               	movlb	0	; select bank0
 15414     1575  07EE               	addwf	_eusartTxTail,f	;volatile
 15415     1576                     i1l5034:
 15416                           
 15417                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15418     1576  3008               	movlw	8
 15419     1577  026E               	subwf	_eusartTxTail,w	;volatile
 15420     1578  1C03               	skipc
 15421     1579  2D7B               	goto	u430_21
 15422     157A  2D7C               	goto	u430_20
 15423     157B                     u430_21:
 15424     157B  2D7D               	goto	i1l5038
 15425     157C                     u430_20:
 15426     157C                     i1l5036:
 15427                           
 15428                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 15429     157C  01EE               	clrf	_eusartTxTail	;volatile
 15430     157D                     i1l5038:
 15431                           
 15432                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 15433     157D  3001               	movlw	1
 15434     157E  00F0               	movwf	??_EUSART_Transmit_ISR
 15435     157F  0870               	movf	??_EUSART_Transmit_ISR,w
 15436     1580  07ED               	addwf	_eusartTxBufferRemaining,f	;volatile
 15437                           
 15438                           ;mcc_generated_files/eusart.c: 218:     }
 15439     1581  2D84               	goto	i1l319
 15440     1582                     i1l316:	
 15441                           ;mcc_generated_files/eusart.c: 219:     else
 15442                           
 15443                           
 15444                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 15445     1582  0021               	movlb	1	; select bank1
 15446     1583  1211               	bcf	17,4	;volatile
 15447     1584                     i1l319:
 15448     1584  0008               	return
 15449     1585                     __end_of_EUSART_Transmit_ISR:
 15450                           
 15451                           	psect	text105
 15452     16F4                     __ptext105:	
 15453 ;; *************** function _EUSART_Receive_ISR *****************
 15454 ;; Defined at:
 15455 ;;		line 225 in file "mcc_generated_files/eusart.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;		None
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;		None
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  1    wreg      void 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15469 ;;      Params:         0       0       0       0       0       0       0       0
 15470 ;;      Locals:         0       0       0       0       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0
 15472 ;;      Totals:         0       0       0       0       0       0       0       0
 15473 ;;Total ram usage:        0 bytes
 15474 ;; Hardware stack levels used: 1
 15475 ;; Hardware stack levels required when called: 2
 15476 ;; This function calls:
 15477 ;;		NULL
 15478 ;;		_EUSART_DefaultErrorHandler
 15479 ;;		_EUSART_DefaultFramingErrorHandler
 15480 ;;		_EUSART_DefaultOverrunErrorHandler
 15481 ;;		_EUSART_RxDataHandler
 15482 ;; This function is called by:
 15483 ;;		_EUSART_Initialize
 15484 ;;		_INTERRUPT_InterruptManager
 15485 ;; This function uses a non-reentrant model
 15486 ;;
 15487                           
 15488     16F4                     _EUSART_Receive_ISR:	
 15489                           ;psect for function _EUSART_Receive_ISR
 15490                           
 15491     16F4                     i1l5040:	
 15492                           ;incstack = 0
 15493                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15494                           
 15495                           
 15496                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15497     16F4  0020               	movlb	0	; select bank0
 15498     16F5  086C               	movf	_eusartRxHead,w	;volatile
 15499     16F6  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15500     16F7  0086               	movwf	6
 15501     16F8  3001               	movlw	1	; select bank2/3
 15502     16F9  0087               	movwf	7
 15503     16FA  0181               	clrf	1
 15504     16FB                     i1l5042:
 15505                           
 15506                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 15507     16FB  0023               	movlb	3	; select bank3
 15508     16FC  1D1D               	btfss	29,2	;volatile
 15509     16FD  2EFF               	goto	u431_21
 15510     16FE  2F00               	goto	u431_20
 15511     16FF                     u431_21:
 15512     16FF  2F0D               	goto	i1l5048
 15513     1700                     u431_20:
 15514     1700                     i1l5044:
 15515                           
 15516                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15517     1700  0020               	movlb	0	; select bank0
 15518     1701  086C               	movf	_eusartRxHead,w	;volatile
 15519     1702  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15520     1703  0086               	movwf	6
 15521     1704  3001               	movlw	1	; select bank2/3
 15522     1705  0087               	movwf	7
 15523     1706  1481               	bsf	1,1
 15524     1707                     i1l5046:
 15525                           
 15526                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 15527     1707  0022               	movlb	2	; select bank2
 15528     1708  0864               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 15529     1709  008A               	movwf	10
 15530     170A  0863               	movf	_EUSART_FramingErrorHandler^(0+256),w
 15531     170B  000A               	callw
 15532     170C  3196               	pagesel	$
 15533     170D                     i1l5048:
 15534                           
 15535                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 15536     170D  0023               	movlb	3	; select bank3
 15537     170E  1C9D               	btfss	29,1	;volatile
 15538     170F  2F11               	goto	u432_21
 15539     1710  2F12               	goto	u432_20
 15540     1711                     u432_21:
 15541     1711  2F1F               	goto	i1l5054
 15542     1712                     u432_20:
 15543     1712                     i1l5050:
 15544                           
 15545                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15546     1712  0020               	movlb	0	; select bank0
 15547     1713  086C               	movf	_eusartRxHead,w	;volatile
 15548     1714  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15549     1715  0086               	movwf	6
 15550     1716  3001               	movlw	1	; select bank2/3
 15551     1717  0087               	movwf	7
 15552     1718  1501               	bsf	1,2
 15553     1719                     i1l5052:
 15554                           
 15555                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 15556     1719  0022               	movlb	2	; select bank2
 15557     171A  0862               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 15558     171B  008A               	movwf	10
 15559     171C  0861               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 15560     171D  000A               	callw
 15561     171E  3196               	pagesel	$
 15562     171F                     i1l5054:
 15563                           
 15564                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15565     171F  0020               	movlb	0	; select bank0
 15566     1720  086C               	movf	_eusartRxHead,w	;volatile
 15567     1721  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15568     1722  0086               	movwf	6
 15569     1723  3001               	movlw	1	; select bank2/3
 15570     1724  0087               	movwf	7
 15571     1725  0801               	movf	1,w
 15572     1726  1903               	btfsc	3,2
 15573     1727  2F29               	goto	u433_21
 15574     1728  2F2A               	goto	u433_20
 15575     1729                     u433_21:
 15576     1729  2F31               	goto	i1l5058
 15577     172A                     u433_20:
 15578     172A                     i1l5056:
 15579                           
 15580                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 15581     172A  0022               	movlb	2	; select bank2
 15582     172B  0860               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 15583     172C  008A               	movwf	10
 15584     172D  085F               	movf	_EUSART_ErrorHandler^(0+256),w
 15585     172E  000A               	callw
 15586     172F  3196               	pagesel	$
 15587                           
 15588                           ;mcc_generated_files/eusart.c: 242:     } else {
 15589     1730  2F34               	goto	i1l326
 15590     1731                     i1l5058:
 15591                           
 15592                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 15593     1731  3194  249D  3196   	fcall	_EUSART_RxDataHandler
 15594     1734                     i1l326:
 15595     1734  0008               	return
 15596     1735                     __end_of_EUSART_Receive_ISR:
 15597                           
 15598                           	psect	text106
 15599     128D                     __ptext106:	
 15600 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15601 ;; Defined at:
 15602 ;;		line 261 in file "mcc_generated_files/eusart.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;		None
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;		None
 15607 ;; Return value:  Size  Location     Type
 15608 ;;                  1    wreg      void 
 15609 ;; Registers used:
 15610 ;;		None
 15611 ;; Tracked objects:
 15612 ;;		On entry : 0/0
 15613 ;;		On exit  : 0/0
 15614 ;;		Unchanged: 0/0
 15615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15616 ;;      Params:         0       0       0       0       0       0       0       0
 15617 ;;      Locals:         0       0       0       0       0       0       0       0
 15618 ;;      Temps:          0       0       0       0       0       0       0       0
 15619 ;;      Totals:         0       0       0       0       0       0       0       0
 15620 ;;Total ram usage:        0 bytes
 15621 ;; Hardware stack levels used: 1
 15622 ;; This function calls:
 15623 ;;		Nothing
 15624 ;; This function is called by:
 15625 ;;		_EUSART_Initialize
 15626 ;;		_EUSART_Receive_ISR
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630     128D                     _EUSART_DefaultOverrunErrorHandler:	
 15631                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15632                           
 15633     128D                     i1l4906:	
 15634                           ;incstack = 0
 15635                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15636                           
 15637                           
 15638                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 15639     128D  0023               	movlb	3	; select bank3
 15640     128E  121D               	bcf	29,4	;volatile
 15641                           
 15642                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 15643     128F  161D               	bsf	29,4	;volatile
 15644     1290                     i1l336:
 15645     1290  0008               	return
 15646     1291                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15647                           
 15648                           	psect	text107
 15649     1261                     __ptext107:	
 15650 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15651 ;; Defined at:
 15652 ;;		line 259 in file "mcc_generated_files/eusart.c"
 15653 ;; Parameters:    Size  Location     Type
 15654 ;;		None
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;		None
 15657 ;; Return value:  Size  Location     Type
 15658 ;;                  1    wreg      void 
 15659 ;; Registers used:
 15660 ;;		None
 15661 ;; Tracked objects:
 15662 ;;		On entry : 0/0
 15663 ;;		On exit  : 0/0
 15664 ;;		Unchanged: 0/0
 15665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15666 ;;      Params:         0       0       0       0       0       0       0       0
 15667 ;;      Locals:         0       0       0       0       0       0       0       0
 15668 ;;      Temps:          0       0       0       0       0       0       0       0
 15669 ;;      Totals:         0       0       0       0       0       0       0       0
 15670 ;;Total ram usage:        0 bytes
 15671 ;; Hardware stack levels used: 1
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_EUSART_Initialize
 15676 ;;		_EUSART_Receive_ISR
 15677 ;; This function uses a non-reentrant model
 15678 ;;
 15679                           
 15680     1261                     _EUSART_DefaultFramingErrorHandler:	
 15681                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15682                           
 15683     1261                     i1l333:	
 15684                           ;incstack = 0
 15685                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15686                           
 15687     1261  0008               	return
 15688     1262                     __end_of_EUSART_DefaultFramingErrorHandler:
 15689                           
 15690                           	psect	text108
 15691     1289                     __ptext108:	
 15692 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15693 ;; Defined at:
 15694 ;;		line 269 in file "mcc_generated_files/eusart.c"
 15695 ;; Parameters:    Size  Location     Type
 15696 ;;		None
 15697 ;; Auto vars:     Size  Location     Type
 15698 ;;		None
 15699 ;; Return value:  Size  Location     Type
 15700 ;;                  1    wreg      void 
 15701 ;; Registers used:
 15702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15703 ;; Tracked objects:
 15704 ;;		On entry : 0/0
 15705 ;;		On exit  : 0/0
 15706 ;;		Unchanged: 0/0
 15707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15708 ;;      Params:         0       0       0       0       0       0       0       0
 15709 ;;      Locals:         0       0       0       0       0       0       0       0
 15710 ;;      Temps:          0       0       0       0       0       0       0       0
 15711 ;;      Totals:         0       0       0       0       0       0       0       0
 15712 ;;Total ram usage:        0 bytes
 15713 ;; Hardware stack levels used: 1
 15714 ;; Hardware stack levels required when called: 1
 15715 ;; This function calls:
 15716 ;;		_EUSART_RxDataHandler
 15717 ;; This function is called by:
 15718 ;;		_EUSART_Initialize
 15719 ;;		_EUSART_Receive_ISR
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723     1289                     _EUSART_DefaultErrorHandler:	
 15724                           ;psect for function _EUSART_DefaultErrorHandler
 15725                           
 15726     1289                     i1l4908:	
 15727                           ;incstack = 0
 15728                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15729                           
 15730                           
 15731                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 15732     1289  3194  249D  3192   	fcall	_EUSART_RxDataHandler
 15733     128C                     i1l339:
 15734     128C  0008               	return
 15735     128D                     __end_of_EUSART_DefaultErrorHandler:
 15736                           
 15737                           	psect	text109
 15738     149D                     __ptext109:	
 15739 ;; *************** function _EUSART_RxDataHandler *****************
 15740 ;; Defined at:
 15741 ;;		line 249 in file "mcc_generated_files/eusart.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15755 ;;      Params:         0       0       0       0       0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0
 15757 ;;      Temps:          1       0       0       0       0       0       0       0
 15758 ;;      Totals:         1       0       0       0       0       0       0       0
 15759 ;;Total ram usage:        1 bytes
 15760 ;; Hardware stack levels used: 1
 15761 ;; This function calls:
 15762 ;;		Nothing
 15763 ;; This function is called by:
 15764 ;;		_EUSART_Receive_ISR
 15765 ;;		_EUSART_DefaultErrorHandler
 15766 ;; This function uses a non-reentrant model
 15767 ;;
 15768                           
 15769     149D                     _EUSART_RxDataHandler:	
 15770                           ;psect for function _EUSART_RxDataHandler
 15771                           
 15772     149D                     i1l4600:	
 15773                           ;incstack = 0
 15774                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15775                           
 15776                           
 15777                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 15778     149D  0020               	movlb	0	; select bank0
 15779     149E  086C               	movf	_eusartRxHead,w
 15780     149F  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15781     14A0  0086               	movwf	6
 15782     14A1  3001               	movlw	1	; select bank2/3
 15783     14A2  0087               	movwf	7
 15784     14A3  0023               	movlb	3	; select bank3
 15785     14A4  0819               	movf	25,w	;volatile
 15786     14A5  0081               	movwf	1
 15787     14A6                     i1l4602:
 15788     14A6  3001               	movlw	1
 15789     14A7  00F0               	movwf	??_EUSART_RxDataHandler
 15790     14A8  0870               	movf	??_EUSART_RxDataHandler,w
 15791     14A9  0020               	movlb	0	; select bank0
 15792     14AA  07EC               	addwf	_eusartRxHead,f	;volatile
 15793     14AB                     i1l4604:
 15794                           
 15795                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15796     14AB  3008               	movlw	8
 15797     14AC  026C               	subwf	_eusartRxHead,w	;volatile
 15798     14AD  1C03               	skipc
 15799     14AE  2CB0               	goto	u396_21
 15800     14AF  2CB1               	goto	u396_20
 15801     14B0                     u396_21:
 15802     14B0  2CB2               	goto	i1l4608
 15803     14B1                     u396_20:
 15804     14B1                     i1l4606:
 15805                           
 15806                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 15807     14B1  01EC               	clrf	_eusartRxHead	;volatile
 15808     14B2                     i1l4608:
 15809                           
 15810                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 15811     14B2  3001               	movlw	1
 15812     14B3  00F0               	movwf	??_EUSART_RxDataHandler
 15813     14B4  0870               	movf	??_EUSART_RxDataHandler,w
 15814     14B5  07EA               	addwf	_eusartRxCount,f	;volatile
 15815     14B6                     i1l330:
 15816     14B6  0008               	return
 15817     14B7                     __end_of_EUSART_RxDataHandler:
 15818     007E                     btemp	set	126	;btemp
 15819     007E                     int$flags	set	126
 15820     007E                     wtemp0	set	126
 15821     2138                     
 15822                           	psect	idloc
 15823                           
 15824                           ;Config register IDLOC0 @ 0x8000
 15825                           ;	unspecified, using default values
 15826     8000                     	org	32768
 15827     8000  3FFF               	dw	16383
 15828                           
 15829                           ;Config register IDLOC1 @ 0x8001
 15830                           ;	unspecified, using default values
 15831     8001                     	org	32769
 15832     8001  3FFF               	dw	16383
 15833                           
 15834                           ;Config register IDLOC2 @ 0x8002
 15835                           ;	unspecified, using default values
 15836     8002                     	org	32770
 15837     8002  3FFF               	dw	16383
 15838                           
 15839                           ;Config register IDLOC3 @ 0x8003
 15840                           ;	unspecified, using default values
 15841     8003                     	org	32771
 15842     8003  3FFF               	dw	16383
 15843                           
 15844                           	psect	config
 15845                           
 15846                           ;Config register CONFIG1 @ 0x8007
 15847                           ;	Oscillator Selection
 15848                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15849                           ;	Watchdog Timer Enable
 15850                           ;	WDTE = ON, WDT enabled
 15851                           ;	Power-up Timer Enable
 15852                           ;	PWRTE = OFF, PWRT disabled
 15853                           ;	MCLR Pin Function Select
 15854                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15855                           ;	Flash Program Memory Code Protection
 15856                           ;	CP = OFF, Program memory code protection is disabled
 15857                           ;	Data Memory Code Protection
 15858                           ;	CPD = OFF, Data memory code protection is disabled
 15859                           ;	Brown-out Reset Enable
 15860                           ;	BOREN = ON, Brown-out Reset enabled
 15861                           ;	Clock Out Enable
 15862                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15863                           ;	Internal/External Switchover
 15864                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15865                           ;	Fail-Safe Clock Monitor Enable
 15866                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15867     8007                     	org	32775
 15868     8007  3FFC               	dw	16380
 15869                           
 15870                           ;Config register CONFIG2 @ 0x8008
 15871                           ;	Flash Memory Self-Write Protection
 15872                           ;	WRT = OFF, Write protection off
 15873                           ;	Voltage Regulator Capacitor Enable
 15874                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
 15875                           ;	PLL Enable
 15876                           ;	PLLEN = OFF, 4x PLL disabled
 15877                           ;	Stack Overflow/Underflow Reset Enable
 15878                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15879                           ;	Brown-out Reset Voltage Selection
 15880                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15881                           ;	Low-Voltage Programming Enable
 15882                           ;	LVP = ON, Low-voltage programming enabled
 15883     8008                     	org	32776
 15884     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         83
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     73      80
    BANK1            80     55      80
    BANK2            80      0      73
    BANK3            72      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2363$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2368	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2363	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2362	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ModbusRTU_Slave_Poll@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    ModbusSlaveF04@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    S1478$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1478$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1478$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), NULL(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Transmit_ISR(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> SHT30_CMD_MEASURE_H_Enable(BANK1[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->i1_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _llabs->_Get_millis
    _ReadData->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _I2C_WriteNBytes->_I2C_SetAddressNackCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_ReadNBytes->_I2C_Open
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterRead->_I2C_MasterOperation
    _ModbusSlave_Process->_ModbusRTU_Slave_Poll
    _ModbusRTU_Slave_Poll->_ModbusSlaveF04
    _validateRequest->_Modbus_calcCRC
    _Modbus_getRxBuff->_EUSART_Read
    _ModbusSlaveF04->_Modbus_sendTxBuff
    _Modbus_sendTxBuff->_Modbus_calcCRC
    _App_Init->_Device_Init
    _Tick_Init_SES->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _App_Process->_Task_Sensor
    _Task_Sensor->_ReadData
    _ReadData->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17125
                           _App_Init
                        _App_Process
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _App_Process                                          0     0      0   15931
                     _Task_Indicator
                            _Task_MB
                        _Task_Sensor
 ---------------------------------------------------------------------------------
 (2) _Task_Sensor                                         12    12      0   13697
                                             43 BANK1     12    12      0
                         _Get_millis
                           _ReadData
                              _llabs
 ---------------------------------------------------------------------------------
 (3) _llabs                                                8     0      8     142
                                              4 BANK0      8     0      8
                         _Get_millis (ARG)
 ---------------------------------------------------------------------------------
 (3) _ReadData                                            30    30      0   13555
                                             13 BANK1     30    30      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3177
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2566
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      4     1      3    3472
                                              8 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1818
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      4     1      3     862
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadNBytes                                       4     1      3    1654
                                              4 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        3     1      2    1222
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     144
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterRead                                       0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      46
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Task_MB                                              0     0      0    2234
                   _ModbusSlave_Init
                _ModbusSlave_Process
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Process                                  1     1      0    2212
               _ModbusRTU_Slave_Poll
 ---------------------------------------------------------------------------------
 (4) _ModbusRTU_Slave_Poll                                14    12      2    2210
                                             52 BANK0     14    12      2
                         _Get_millis
                     _ModbusSlaveF04
                   _Modbus_getRxBuff
                  _Modbus_sendTxBuff
                     _buildException
                    _validateRequest
 ---------------------------------------------------------------------------------
 (5) _validateRequest                                     17    17      0     393
                                             15 BANK0     17    17      0
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (5) _buildException                                       3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _Modbus_getRxBuff                                     8     8      0      48
                                              2 BANK0      8     8      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ModbusSlaveF04                                      23    21      2     847
                                             30 BANK0     22    20      2
                  _Modbus_sendTxBuff
 ---------------------------------------------------------------------------------
 (5) _Modbus_sendTxBuff                                   15    15      0     435
                                             15 BANK0     15    15      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                         _Get_millis
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (6) _Modbus_calcCRC                                      15    13      2     277
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (3) _Get_millis                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Init                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Task_Indicator                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     530
                        _Device_Init
                    _TMR1_StartTimer
                      _Tick_Init_SES
 ---------------------------------------------------------------------------------
 (2) _Tick_Init_SES                                        0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Device_Init                                          4     4      0     356
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   40698
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     164
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (11) _rtcc_handle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   40534
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       2     2      0   40534
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i1_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i1_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0   10139
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             1     0      1    1988
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (13) i1_I2C_SetBuffer                                     3     1      2     174
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (13) _I2C_SetDataCompleteCallback                         3     0      3    1770
                                              4 COMMON     3     0      3
                  i1_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetCallback                                   4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Device_Init
     _TMR1_StartTimer
     _Tick_Init_SES
       _TMR1_SetInterruptHandler
   _App_Process
     _Task_Indicator
     _Task_MB
       _ModbusSlave_Init
       _ModbusSlave_Process
         _ModbusRTU_Slave_Poll
           _Get_millis
           _ModbusSlaveF04
             _Modbus_sendTxBuff
               _EUSART_Write
               _EUSART_is_tx_done
               _Get_millis
               _Modbus_calcCRC
           _Modbus_getRxBuff
             _EUSART_Read
           _Modbus_sendTxBuff
           _buildException
           _validateRequest
             _Modbus_calcCRC
     _Task_Sensor
       _Get_millis
       _ReadData
         _I2C_ReadNBytes
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterRead
             _I2C_MasterOperation
               _I2C_MasterStart
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterEnableIrq
             _I2C_MasterOpen
             _I2C_SetInterruptHandler
           _I2C_SetBuffer
         _I2C_WriteNBytes
           _I2C_Close
           _I2C_MasterWrite
             _I2C_MasterOperation
           _I2C_Open
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___fltol
         ___xxtofl
       _llabs
         _Get_millis (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
             i1_I2C_SetCallback
           i1_I2C_SetBuffer
         _rd2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _rdBlkRegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i1_I2C_MasterClearIrq *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      F7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     37      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      49      10       91.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               48      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      F7      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Apr 28 15:10:20 2023

                            _Modbus_sendTxBuff 06EA                           ?_ModbusSlave_Process 0070  
                ?_EUSART_SetRxInterruptHandler 0020                         ??_I2C_DO_SEND_ADR_READ 0070  
                                 ___fldiv@aexp 00AC                                   ___fldiv@bexp 00AB  
                                 ___fldiv@sign 00A4                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                             ?_Modbus_sendTxBuff 0070  
                                           l71 16F3                                             l80 1561  
                      buildException@exception 0021                                  _ReadData$2360 00C3  
                                _ReadData$2361 00C7                          ??_I2C_DO_SEND_RESTART 0070  
                          __Umul8_16@word_mpld 0026                                            l303 167B  
                                          l135 1522                                            l304 1685  
                                          l402 130A                                            l307 169D  
                                          l163 0812                                            l342 1325  
                                          l166 12F0                                            l351 1340  
                                          l345 132E                                            l169 07FF  
                                          l522 14EB                                            l354 1337  
                                          l514 1349                                            l531 12D7  
                                          l348 131C                                            l541 1484  
                                          l381 1506                                            l518 17FF  
                                          l534 12DC                                            l550 137E  
                                          l279 1776                                            l384 1279  
                                          l288 12A0                                            l704 1285  
                                          l528 1540                                            l298 164A  
                                          l731 1282                                            l803 04E1  
                                          l564 1673                                            l812 0BE0  
                                          l725 1288                                            l734 127C  
                                          l559 1313                                            l841 07D0  
                                          l850 07E0                                            l906 0C84  
                                          l922 0B49                                            l930 0DFB  
                                          l683 13BC                                            l860 0A53  
                                          l852 07E2                                            l940 0742  
                                          l909 16C8                                            l854 07FB  
                                          l918 0986                                            l686 127F  
                                          l870 1367                                            l839 07CE  
                                          l864 0A53                                            l952 07AC  
                                          l970 08B4                                            l954 07CC  
                                          l867 135D                                            l963 09E5  
                                          l972 08D5                                            l982 145D  
                                          l967 08B1                                            l975 14D0  
                                          l993 146F                                            l999 144C  
                          __end_of_App_Process 1368                                _timer1ReloadVal 00DF  
                       ??_EUSART_RxDataHandler 0070                            ??_Modbus_sendTxBuff 002F  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                 ___flmul@aexp 0040                                   ___flmul@bexp 0041  
                          __end_of_Device_Init 0A54                   ??_I2C_SetAddressNackCallback 0028  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 12CE  
                                 ___fltol@exp1 0029                                ?_buildException 0070  
                      ??_rd2RegCompleteHandler 0078                                           l1350 0AAF  
                                         l1343 0AC4                                           l4000 0DA4  
                                         l1353 0AC4                                           l4002 0DAA  
                                         l1450 0538                                           l1530 0FF4  
                                         l1522 0F74                                           l1506 0E5F  
                                         l1603 0CFB                                           l4020 0DD3  
                                         l4012 0DBD                                           l4100 0516  
                                         l1508 0FFF                                           l1604 0D07  
                                         l1612 0886                                           l4030 0DF2  
                                         l4022 0DDA                                           l4014 0DC2  
                                         l4006 0DAD                                           l1454 05B5  
                                         l4110 052D                                           l4102 051A  
                                         l1471 0645                                           l1463 06E9  
                                         l1527 0FC7                                           l5000 0A3C  
                                         l4016 0DC7                                           l4200 062F  
                                         l1456 0593                                           l4120 0546  
                                         l4112 052E                                           l4104 051B  
                                         l1528 0FE5                                           l1552 0250  
                                         l1481 0689                                           l1609 0886  
                                         l5002 0A41                                           l5010 145E  
                                         l4018 0DCC                                           l4026 0DDC  
                                         l4202 0634                                           l4130 0550  
                                         l4122 0548                                           l4106 0520  
                                         l4114 0530                                           l1546 02D0  
                                         l4050 0A83                                           l4042 0A67  
                                         l1475 0667                                           l5004 0A46  
                                         l5012 1467                                           l4028 0DEC  
                                         l5020 145A                                           l1492 06E2  
                                         l1484 06C0                                           l4220 066E  
                                         l4212 065B                                           l4204 063D  
                                         l4140 055A                                           l4132 0552  
                                         l4124 054A                                           l4116 053E  
                                         l4108 0525                                           l4300 0E52  
                                         l4052 0A87                                           l4060 0A9F  
                                         l4044 0A78                                           l4036 0A54  
                                         l1493 06E9                                           l1565 1598  
                                         l5006 0A4B                                           l3510 09A2  
                                         l3502 0989                                           l5014 144D  
                                         l4230 067C                                           l4222 0670  
                                         l4214 0662                                           l4206 064D  
                                         l4142 055C                                           l4134 0554  
                                         l4126 054C                                           l4118 0542  
                                         l4150 0564                                           l4310 0E79  
                                         l4302 0E54                                           l1558 02C4  
                                         l4070 0AB9                                           l4046 0A79  
                                         l4038 0A5E                                           l1590 0CA8  
                                         l5022 0800                                           l1567 15A8  
                                         l5008 0A50                                           l3520 09AF  
                                         l3504 098D                                           l5016 1452  
                                         l4240 0693                                           l4232 0680  
                                         l4224 0675                                           l4216 0666  
                                         l4208 0652                                           l4160 059D  
                                         l4152 0565                                           l4144 055E  
                                         l4136 0556                                           l4128 054E  
                                         l4080 04ED                                           l4072 04E2  
                                         l4400 0FEF                                           l4320 0E92  
                                         l4304 0E56                                           l4048 0A81  
                                         l1592 0D2F                                           l3522 09B5  
                                         l3506 0990                                           l3530 09C7  
                                         l3610 06F7                                           l5018 1457  
                                         l3602 164D                                           l4250 06CA  
                                         l4242 069B                                           l4234 0686  
                                         l4218 066B                                           l4226 0677  
                                         l4170 05B9                                           l4162 05A1  
                                         l4154 057C                                           l4146 0560  
                                         l4138 0558                                           l4082 04F2  
                                         l4090 0502                                           l4074 04E6  
                                         l4330 0ECC                                           l4322 0EA8  
                                         l4306 0E67                                           l4314 0E82  
                                         l4410 009C                                           l4066 0AA6  
                                         l4058 0A8F                                           l5210 13D9  
                                         l3532 09CD                                           l3524 09B9  
                                         l3516 09A4                                           l3508 09A2  
                                         l3620 0744                                           l3612 0710  
                                         l3540 1622                                           l3700 14D1  
                                         l3604 1653                                           l4260 06DE  
                                         l4252 06D2                                           l4244 069F  
                                         l4180 05D3                                           l4228 067B  
                                         l4172 05BE                                           l4164 05A2  
                                         l4156 0597                                           l4148 0562  
                                         l4092 050A                                           l4084 04F7  
                                         l4076 04E8                                           l4332 0ED1  
                                         l4340 0EEF                                           l4324 0EB8  
                                         l4316 0E88                                           l4308 0E73  
                                         l4500 022C                                           l4420 00B3  
                                         l4412 00A0                                           l4068 0AB4  
                                         l1596 0CE1                                           l5212 13DF  
                                         l5062 1354                                           l3534 09D8  
                                         l3526 09BD                                           l3518 09AA  
                                         l3622 0748                                           l3614 0718  
                                         l3550 1640                                           l3542 1622  
                                         l3710 14E2                                           l3702 14D9  
                                         l3606 1664                                           l4262 06E4  
                                         l4254 06D7                                           l4246 06BC  
                                         l4238 068E                                           l4190 05E2  
                                         l4182 05D7                                           l4166 05AA  
                                         l4158 059B                                           l4094 050D  
                                         l4086 04FF                                           l4078 04EC  
                                         l4350 0F26                                           l4342 0F09  
                                         l4334 0EE0                                           l4326 0EC1  
                                         l4270 0E05                                           l4510 024D  
                                         l4502 0230                                           l4430 00C8  
                                         l4422 00B5                                           l4414 00A1  
                                         l4406 0096                                           l5070 1361  
                                         l5214 13E0                                           l5064 1357  
                                         l3480 1676                                           l3536 09E1  
                                         l3528 09C3                                           l3640 07B3  
                                         l3632 0778                                           l3624 0757  
                                         l3616 072F                                           l3608 06EA  
                                         l3552 1641                                           l3544 1628  
                                         l3800 0B14                                           l3712 14E5  
                                         l3704 14DA                                           l4264 06E8  
                                         l4256 06D8                                           l4248 06C5  
                                         l4192 05EA                                           l4184 05DB  
                                         l4176 05C7                                           l4168 05AE  
                                         l4096 0513                                           l4088 0500  
                                         l4360 0F3E                                           l4352 0F2E  
                                         l4344 0F0A                                           l4336 0EE5  
                                         l4328 0ECA                                           l4280 0E20  
                                         l4272 0E0A                                           l4520 0266  
                                         l4504 0234                                           l4440 00DD  
                                         l4432 00C9                                           l4424 00BD  
                                         l4416 00A6                                           l4408 009A  
                                         l5072 1364                                           l5216 13E1  
                                         l4610 1302                                           l5066 135A  
                                         l3490 1698                                           l3482 1680  
                                         l3474 129D                                           l3642 07C3  
                                         l3634 0780                                           l3626 075C  
                                         l3618 0737                                           l3730 0BF1  
                                         l3554 1643                                           l3546 1636  
                                         l3810 0B19                                           l3706 14DC  
                                         l3714 14E9                                           l3570 13B6  
                                         l3562 130B                                           l3650 17BC  
                                         l4258 06DC                                           l4186 05DD  
                                         l4178 05CF                                           l4194 05EF  
                                         l4098 0514                                           l4370 0F55  
                                         l4362 0F46                                           l4354 0F30  
                                         l4346 0F1A                                           l4338 0EE7  
                                         l4290 0E37                                           l4282 0E22  
                                         l4274 0E0C                                           l4266 0DFC  
                                         l4530 02A7                                           l4522 027E  
                                         l4514 0255                                           l4506 0235  
                                         l4450 00F8                                           l4442 00E5  
                                         l4434 00CE                                           l4426 00C2  
                                         l4418 00AB                                           l3492 1699  
                                         l3484 1686                                           l3636 078D  
                                         l3628 076D                                           l3740 0C0D  
                                         l3732 0BF5                                           l3556 1646  
                                         l3548 163A                                           l3820 0B3D  
                                         l3812 0B2B                                           l3804 0B16  
                                         l3564 127A                                           l3580 1280  
                                         l3708 14DF                                           l3572 13B8  
                                         l3660 17D0                                           l3652 17C3  
                                         l4196 0605                                           l4188 05E1  
                                         l4380 0F88                                           l4372 0F70  
                                         l4356 0F37                                           l4364 0F4A  
                                         l4348 0F20                                           l4292 0E3C  
                                         l4276 0E12                                           l4284 0E24  
                                         l4268 0E01                                           l4540 02C2  
                                         l4532 02B0                                           l4516 025A  
                                         l4524 0282                                           l4508 0239  
                                         l4460 014D                                           l4452 0103  
                                         l4444 00EA                                           l4436 00D3  
                                         l4428 00C4                                           l5068 135E  
                                         l3486 168E                                           l3494 169B  
                                         l3478 1676                                           l3638 07AE  
                                         l3750 0C81                                           l3742 0C13  
                                         l3734 0BFC                                           l3558 1648  
                                         l3822 0B46                                           l3814 0B2E  
                                         l3582 127D                                           l3590 152F  
                                         l3718 12D3                                           l3574 13BB  
                                         l3566 13B0                                           l3670 17E4  
                                         l3662 17D5                                           l3654 17C7  
                                         l4198 0629                                           l4390 0FD7  
                                         l4382 0F8C                                           l4366 0F4F  
                                         l4358 0F3C                                           l4294 0E3E  
                                         l4286 0E2D                                           l4278 0E17  
                                         l3830 1587                                           l4542 02C8  
                                         l4534 02B2                                           l4526 028F  
                                         l4518 0262                                           l4470 0180  
                                         l4462 015A                                           l4454 0110  
                                         l4446 00EF                                           l4438 00DB  
                                         l4550 0C90                                           l4800 0895  
                                         l3488 1692                                           l3752 0C81  
                                         l3744 0C18                                           l3736 0C03  
                                         l3728 0BE3                                           l3760 16BC  
                                         l3816 0B32                                           l3496 1283  
                                         l3592 1534                                           l3584 1525  
                                         l3568 13B5                                           l3680 17F8  
                                         l3672 17E5                                           l3664 17D6  
                                         l3656 17C8                                           l4392 0FDA  
                                         l4384 0FA4                                           l4376 0F79  
                                         l4368 0F51                                           l4296 0E44  
                                         l4288 0E33                                           l3840 15A4  
                                         l3832 1589                                           l4536 02BD  
                                         l4528 0299                                           l4480 01BD  
                                         l4472 018B                                           l4464 0167  
                                         l4456 0128                                           l4560 0CBC  
                                         l4552 0CA0                                           l4802 089D  
                                         l3498 143C                                           l3746 0C6C  
                                         l3738 0C05                                           l3770 0933  
                                         l3762 16C2                                           l3826 0B48  
                                         l3818 0B38                                           l4810 14BF  
                                         l3594 1538                                           l3586 152C  
                                         l3578 1286                                           l3674 17EA  
                                         l3666 17DB                                           l3658 17C9  
                                         l3682 17FD                                           l3690 1477  
                                         l3850 16CB                                           l4394 0FE3  
                                         l4378 0F7F                                           l4386 0FA9  
                                         l4298 0E49                                           l3834 1590  
                                         l4538 02C1                                           l4490 020D  
                                         l4482 01C8                                           l4474 0192  
                                         l4466 016E                                           l4458 0135  
                                         l4570 0CE8                                           l4562 0CC7  
                                         l4554 0CB0                                           l4546 0C87  
                                         l5348 07F0                                           l4804 08B6  
                                         l3748 0C70                                           l3780 0968  
                                         l3772 094F                                           l3764 092B  
                                         l3756 16A0                                           l4812 14C7  
                                         l3596 153B                                           l3588 152D  
                                         l3676 17F2                                           l3668 17DF  
                                         l3692 1483                                           l3860 16EB  
                                         l3852 16CB                                           l4396 0FE8  
                                         l4388 0FB9                                           l3836 1594  
                                         l4492 0219                                           l4484 01DA  
                                         l4476 01A4                                           l4468 0179  
                                         l4580 0D1D                                           l4572 0CF1  
                                         l4564 0CCE                                           l4548 0C8C  
                                         l4900 1772                                           l4820 150B  
                                         l4910 1277                                           l3790 0981  
                                         l3782 0971                                           l3774 0957  
                                         l3758 16B3                                           l4806 14B7  
                                         l3598 153E                                           l3678 17F5  
                                         l3862 1543                                           l3694 1373  
                                         l3854 16D5                                           l4398 0FEC  
                                         l3838 159F                                           l4494 0220  
                                         l4486 01EF                                           l4478 01AB  
                                         l4582 0D22                                           l4574 0CF5  
                                         l4566 0CD2                                           l4558 0CB9  
                                         l4590 132F                                           l4902 1773  
                                         l4830 1516                                           l4822 150D  
                                         l3784 0976                                           l3776 0961  
                                         l3768 092D                                           l4808 14B7  
                                         l3688 1472                                           l3864 1543  
                                         l3696 12D8                                           l3856 16DE  
                                         l4496 0224                                           l4488 0206  
                                         l4584 0D26                                           l4576 0CFF  
                                         l4568 0CDA                                           l4592 1338  
                                         l4904 1774                                           l4840 1520  
                                         l4832 1519                                           l4824 1510  
                                         l3786 097F                                           l3778 0963  
                                         l3794 0AC5                                           l3970 0D3A  
                                         l3866 154D                                           l3858 16E8  
                                         l4498 0225                                           l4586 0D27  
                                         l4578 0D09                                           l4594 131D  
                                         l4842 1341                                           l4850 12EA  
                                         l4834 151B                                           l4826 1512  
                                         l4818 1507                                           l3796 0AF7  
                                         l3980 0D4D                                           l3972 0D3C  
                                         l3868 1559                                           l4780 0357  
                                         l4772 02D1                                           l4940 0B4A  
                                         l4596 1326                                           l4844 1343  
                                         l4852 12ED                                           l4836 151D  
                                         l4828 1514                                           l4860 14EE  
                                         l3798 0B0B                                           l3982 0D53  
                                         l3974 0D41                                           l4790 049B  
                                         l4782 03AB                                           l4774 02D6  
                                         l4950 0BD0                                           l4942 0BB0  
                                         l4598 1314                                           l4846 1345  
                                         l4854 12EE                                           l4838 151E  
                                         l4870 14FB                                           l4862 14F0  
                                         l3968 0D32                                           l4792 04C7  
                                         l4784 03D7                                           l4776 02E1  
                                         l4952 0BD6                                           l4944 0BC3  
                                         l4880 1749                                           l4848 1348  
                                         l4872 1503                                           l4864 14F2  
                                         l4856 07FC                                           l4970 09F7  
                                         l4962 07E4                                           l4954 07CD  
                                         l3994 0D94                                           l3978 0D43  
                                         l4786 03F1                                           l4778 02EC  
                                         l4794 0840                                           l4946 0BC6  
                                         l4890 1753                                           l4882 174C  
                                         l4874 1735                                           l4866 14F3  
                                         l4858 14EC                                           l4972 09FC  
                                         l4980 0A0E                                           l4956 07D2  
                                         l3996 0D99                                           l3988 0D64  
                                         l4788 045B                                           l4796 085E  
                                         l4948 0BC9                                           l4892 175B  
                                         l4884 174E                                           l4876 1737  
                                         l4868 14FA                                           l4982 0A13  
                                         l4990 0A25                                           l4974 0A01  
                                         l4958 07DE                                           l4798 0889  
                                         l3998 0D9E                                           l4894 1763  
                                         l4886 1750                                           l4878 173F  
                                         l4992 0A2A                                           l4984 0A18  
                                         l4976 0A06                                           l4968 09E6  
                                         l4896 176F                                           l4888 1752  
                                         l4994 0A2F                                           l4986 0A1D  
                                         l4978 0A0B                                           l4898 1771  
                                         l4996 0A34                                           l4988 0A22  
                                         l4998 0A39                                           u3000 05B9  
                                         u3001 05B8                                           u3010 05BE  
                                         u3011 05BD                                           u2300 1680  
                                         u3020 05D3                                           u2301 167F  
                                         u3021 05D2                                           _LATA 010C  
                                         u2310 1698                                           u3110 0666  
                                         u3030 05D7                                           _LATB 010D  
                                         u2311 1697                                           u3111 0665  
                                         u3031 05D6                                           _LATC 010E  
                                         u2400 1534                                           u3200 06AD  
                                         u3120 066B                                           u3040 05E1  
                                         u4000 085E                                           u2401 1533  
                                         u3121 066A                                           u3105 065C  
                                         u3041 05E0                                           u4001 085D  
                                         _LATE 0110                                           u2330 09B5  
                                         u2410 1653                                           u3210 06BC  
                                         u3130 0675                                           u2331 09B4  
                                         u2411 1652                                           u3211 06BB  
                                         u3131 0674                                           u4100 07DC  
                                         u4020 08B1                                           u2340 09C3  
                                         u2420 0742                                           u2500 14D9  
                                         u3220 06C5                                           u3140 067B  
                                         u3060 0605                                           u3300 0E3C  
                                         u4101 07D9                                           u4021 08B0  
                                         u2341 09C2                                           u2325 09AB  
                                         u2421 0741                                           u2501 14D8  
                                         u3221 06C4                                           u3205 06A9  
                                         u3141 067A                                           u3061 0604  
                                         u3301 0E3B                                           u2350 09CD  
                                         u2430 076D                                           u2510 0C81  
                                         u3230 06CA                                           u3150 0680  
                                         u3070 0634                                           u3310 0E44  
                                         u2351 09CC                                           u2431 076C  
                                         u2511 0C80                                           u3231 06C9  
                                         u3151 067F                                           u3071 0633  
                                         u3063 0601                                           u3055 05E4  
                                         u3311 0E43                                           u4200 0A2A  
                                         u4120 09FC                                           u2440 0778  
                                         u2360 1628                                           u2520 0961  
                                         u3240 06D7                                           u3160 0686  
                                         u3080 064D                                           u3400 0F09  
                                         u3320 0E49                                           u4201 0A29  
                                         u4121 09FB                                           u2441 0777  
                                         u2361 1627                                           u2521 0960  
                                         u3241 06D6                                           u3161 0685  
                                         u3081 064C                                           u3401 0F08  
                                         u3321 0E48                                           u4210 0A2F  
                                         u4130 0A01                                           u4114 07DE  
                                         u2290 167B                                           u2450 0780  
                                         u2370 1640                                           u2530 0968  
                                         u3250 06DC                                           u3170 068D  
                                         u3090 0652                                           u3410 0F26  
                                         u3330 0E67                                           u2610 15A4  
                                         u4211 0A2E                                           u4131 0A00  
                                         u2291 167A                                           u2451 077F  
                                         u2435 0769                                           u2515 0C7D  
                                         u2371 163F                                           u2531 0967  
                                         u3251 06DB                                           u3171 068C  
                                         u3091 0651                                           u3411 0F25  
                                         u3331 0E66                                           u2611 15A3  
                                         u4220 0A34                                           u4140 0A06  
                                         u2460 07AC                                           u2540 0976  
                                         u2700 0DAA                                           u2380 13B5  
                                         u3260 06E8                                           u3180 0693  
                                         u3500 0F7F                                           u3420 0F2E  
                                         u3340 0E88                                           u4221 0A33  
                                         u4141 0A05                                           u2461 07AB  
                                         u2541 0975                                           u2701 0DA9  
                                         u2381 13B4                                           u3261 06E7  
                                         u3181 0692                                           u3501 0F7E  
                                         u3421 0F2D                                           u3405 0F05  
                                         u3341 0E87                                           u2605 1599  
                                         u4230 0A39                                           u4150 0A0B  
                                         u2550 0B0B                                           u2710 0DBC  
                                         u2390 152C                                           u2630 16D5  
                                         u3190 069F                                           u3510 0F8C  
                                         u3350 0ED1                                           u3270 0E0A  
                                         u4070 0BB0                                           u4231 0A38  
                                         u4151 0A0A                                           u2551 0B0A  
                                         u2711 0DBB                                           u2391 152B  
                                         u2631 16D4                                           u3191 069E  
                                         u3511 0F8B                                           u3351 0ED0  
                                         u3271 0E09                                           u4071 0BAF  
                                         u4240 0A41                                           u4160 0A13  
                                         u2560 0B2B                                           u2720 0DC7  
                                         u2480 17C3                                           u2640 16F3  
                                         u3520 0F9A                                           u3440 0F3C  
                                         u3280 0E12                                           u3600 00CE  
                                         u2800 0AA5                                           u4080 0BD0  
                                         u4241 0A40                                           u4161 0A12  
                                         u2561 0B2A                                           u2721 0DC6  
                                         u2481 17C2                                           u2641 16F2  
                                         u3441 0F3B                                           u3281 0E11  
                                         u3601 00CD                                           u2801 0AA4  
                                         u4081 0BCF                                           u4250 0A46  
                                         u4170 0A18                                           u2570 0B38  
                                         u2730 0DCC                                           u2490 1477  
                                         u2650 154D                                           u3530 0FB9  
                                         u3290 0E17                                           u3610 00D3  
                                         u4090 0BD6                                           u4251 0A45  
                                         u4171 0A17                                           u2571 0B37  
                                         u2555 0B07                                           u2731 0DCB  
                                         u2491 1476                                           u2651 154C  
                                         u3531 0FB8                                           u3435 0F31  
                                         u3291 0E16                                           u3611 00D2  
                                         u4091 0BD5                                           u4260 0A4B  
                                         u4180 0A1D                                           u2580 0B3D  
                                         u2660 1561                                           u2900 0525  
                                         u3540 0FD7                                           u3460 0F4F  
                                         u3380 0EE5                                           u3700 0224  
                                         u3620 00EA                                           u2820 0AB4  
                                         u2740 0A5E                                           u4261 0A4A  
                                         u4181 0A1C                                           u2581 0B3C  
                                         u2661 1560                                           u2901 0524  
                                         u3541 0FD6                                           u3525 0F96  
                                         u3461 0F4E                                           u3381 0EE4  
                                         u3365 0ED2                                           u3701 0223  
                                         u3621 00E9                                           u2821 0AB3  
                                         u2741 0A5D                                           u4270 0A50  
                                         u4190 0A22                                           u2670 0D41  
                                         u2910 053E                                           u3550 0FEC  
                                         u3470 0F55                                           u2590 1594  
                                         u3630 00EF                                           u2830 0AB9  
                                         u2750 0A74                                           u4271 0A4F  
                                         u4191 0A21                                           u2671 0D40  
                                         u2911 053D                                           u3551 0FEB  
                                         u3535 0FB5                                           u3471 0F54  
                                         u3455 0F3F                                           u3375 0ED9  
                                         u2591 1593                                           u3631 00EE  
                                         u2831 0AB8                                           u2815 0AA7  
                                         u2680 0D4D                                           u4280 1452  
                                         u2920 0542                                           u2840 04EC  
                                         u3480 0F70                                           u3800 02A7  
                                         u3720 0234                                           u3560 00A0  
                                         u2760 0A87                                           u2681 0D4C  
                                         u4281 1451                                           u2921 0541  
                                         u2841 04EB                                           u3545 0FD3  
                                         u3481 0F6F                                           u3801 02A6  
                                         u3721 0233                                           u3561 009F  
                                         u2761 0A86                                           u2690 0D93  
                                         u2930 057C                                           u2850 04F2  
                                         u3490 0F78                                           u3810 02C1  
                                         u3730 0239                                           u3570 00A6  
                                         u2770 0A8E                                           u2691 0D92  
                                         u2931 057B                                           u2851 04F1  
                                         u3491 0F77                                           u3395 0EE8  
                                         u3811 02C0                                           u3731 0238  
                                         u3715 0226                                           u3571 00A5  
                                         u2771 0A8D                                           u2755 0A70  
                                         u2940 0586                                           u2860 04F7  
                                         u3740 024D                                           u3660 01E5  
                                         u3580 00AB                                           u3900 0CF5  
                                         u3820 0C8C                                           u2941 0584  
                                         u2861 04F6                                           u3805 02A3  
                                         u3741 024C                                           u3645 0168  
                                         u3581 00AA                                           u3901 0CF4  
                                         u3821 0C8B                                           u2950 0587  
                                         u2870 0513                                           u3750 0254  
                                         u3670 01FC                                           u3590 00C8  
                                         u2790 0A9E                                           u3910 0CFB  
                                         u3830 0C90                                           u2935 0578  
                                         u2871 0512                                           u3751 0253  
                                         u3655 0193                                           u3591 00C7  
                                         u2791 0A9D                                           u3911 0CFA  
                                         u3831 0C8F                                           u2960 0597  
                                         u2880 051A                                           u3760 025A  
                                         u3920 0CFF                                           u3840 0CB0  
                                         u2961 0596                                           u2881 0519  
                                         u3761 0259                                           u3665 01E1  
                                         u2785 0A90                                           u3921 0CFE  
                                         u3841 0CAF                                           u2970 05A1  
                                         u2890 0520                                           u3770 0266  
                                         u3930 0D13                                           u2971 05A0  
                                         u2891 051F                                           u3771 0265  
                                         u3675 01F8                                           u3780 0274  
                                         u3940 0D22                                           u3860 0CCD  
                                         u3685 0207                                           u3941 0D21  
                                         u3861 0CCC                                           u2990 05B5  
                                         u3790 028F                                           u3950 0D26  
                                         u2991 05B4                                           u3791 028E  
                                         u3695 021A                                           u3951 0D25  
                                         u3935 0D0F                                           u3855 0CC1  
                                         u3880 0CE7                                           u2985 05A4  
                                         u3785 0270                                           u3881 0CE6  
                                         u3795 028B                                           u3875 0CDB  
                                         i1l92 1408                                           i1l95 1419  
                                         u3895 0CEB                                           i1l98 142A  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 0078                                           _main 13D9  
                     ?_I2C_CallbackReturnReset 0077                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                               __end_of_I2C_Open 1800  
                                         btemp 007E                                           start 0058  
                    __end_of_Modbus_sendTxBuff 07CD                        _I2C_SetInterruptHandler 130B  
                              ___fldiv@new_exp 00A5                                ?_Task_Indicator 0070  
                   ??_TMR1_SetInterruptHandler 0022                          ??_ModbusSlave_Process 0062  
                             ?_I2C_MasterClose 0070                                __end_of_Task_MB 145E  
                              _I2C_WriteNBytes 16C9                                  ?_EUSART_Write 0070  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 12BF  
                             ?_I2C_MasterWrite 0070                  __end_of_OSCILLATOR_Initialize 12F1  
                                ___fltol@sign1 0028                                __end_of___fladd 06EA  
                                        ?_main 0070                                __end_of___fldiv 1000  
                              __end_of___flmul 02D1                                __end_of___fltol 0AC5  
                              _TMR1_StartTimer 1277                                          _T1CON 0018  
                                        i1l101 13F7                                          i1l104 149C  
                                        i1l204 0056                                          i1l330 14B6  
                                        i1l316 1582                                          i1l333 1261  
                                        i1l405 1262                                          i1l326 1734  
                                        i1l319 1584                                          i1l336 1290  
                                        i1l600 17B9                                          i1l193 001B  
                                        i1l339 128C                                          i1l611 12E9  
                                        i1l195 002C                                          i1l541 13CA  
                                        i1l701 126D                                          i1l197 003D  
                                        i1l710 12E2                                          i1l198 0056  
                                        i1l199 0048                                          i1l544 1372  
                                        i1l392 143B                                          i1l713 1298  
                                        i1l617 083F                                          i1l641 12B9  
                                        i1l650 12C8                                          i1l707 126A  
                                        i1l635 12AF                                          i1l571 15F8  
                                        i1l395 13D8                                          i1l564 15D0  
                                        i1l716 1294                                          i1l580 12F8  
                                        i1l644 12BE                                          i1l653 12CD  
                                        i1l670 1264                                          i1l574 12AA  
                                        i1l638 12B4                                          i1l662 1621  
                                        i1l734 1276                                          i1l583 090D  
                                        i1l647 12C3                                          i1l567 129C  
                                        i1l399 13AF                                          i1l656 12D2  
                                        i1l673 0003                                          i1l737 1273  
                                        i1l577 1301                                          i1l586 092A  
                                        i1l692 12A5                                          i1l695 1267  
                                        i1l599 1793                                          i1l689 1270  
                                        i1l996 1353                                          _RCREG 0199  
                                        _RCSTA 019D                               ?_validateRequest 0070  
                                        _TMR1H 0017                                          _TMR1L 0016  
                            ??_I2C_DO_TX_EMPTY 0078                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                                          _SW_Ad 0069  
                                   _Get_millis 143C                               __end_of_TMR1_ISR 13D9  
                            __end_of_I2C_DO_RX 17BA                              __end_of_I2C_DO_TX 092B  
                               _WDT_Initialize 07FC                                          _llabs 0840  
                            __end_of_I2C_Close 14EC                 I2C_MasterOperation@returnValue 0021  
                      _I2C_MasterEnableRestart 1265                        __end_of_TMR1_Initialize 1507  
                                        pclath 000A                               ?_I2C_SetCallback 0020  
                 I2C_SetAddressNackCallback@cb 0024                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                            ??i1_I2C_SetBuffer 0072                                _TMR1_WriteTimer 142B  
                             __end_of_App_Init 135E                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 005A                                   __end_of_main 13E7  
                                  _App_Process 135E                      ?_I2C_DO_SEND_RESTART_READ 0070  
                             __end_of_ReadData 04E2                                 ??_EUSART_Write 0020  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
                 __end_of_ModbusRTU_Slave_Poll 0DFC                 ??_EUSART_SetRxInterruptHandler 0022  
                                  _Device_Init 09E6                                         ??_main 0069  
                 __end_ofi1_I2C_MasterClearIrq 1277                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                         i1I2C_SetCallback@idx 0073                           i1I2C_SetCallback@ptr 0072  
                       __end_of_WDT_Initialize 0800                             ??_I2C_MasterSetIrq 0070  
                                ??_Task_Sensor 00CB      __end_of_EUSART_DefaultFramingErrorHandler 1262  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 1261                     _EUSART_OverrunErrorHandler 0161  
                                       ?_llabs 0024                __end_of_I2C_CallbackReturnReset 0004  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l5030 1569  
                                       i1l5040 16F4                                         i1l5032 1571  
                                       i1l5024 13CB                                         i1l5050 1712  
                                       i1l5042 16FB                                         i1l5034 1576  
                                       i1l5026 13CD                                         i1l5052 1719  
                                       i1l5044 1700                                         i1l5036 157C  
                                       i1l5028 1562                                         i1l5060 1299  
                                       i1l5140 0014                                         i1l5054 171F  
                                       i1l5046 1707                                         i1l5038 157D  
                                       i1l5150 0042                                         i1l5142 0020  
                                       i1l5134 0006                                         i1l4600 149D  
                                       i1l5056 172A                                         i1l5048 170D  
                                       i1l5144 0025                                         i1l5136 000A  
                                       i1l4602 14A6                                         i1l5058 1731  
                                       i1l3722 1265                                         i1l5154 004D  
                                       i1l5146 0031                                         i1l5138 000F  
                                       i1l4604 14AB                                         i1l3724 1268  
                                       i1l3644 15AA                                         i1l4612 12A6  
                                       i1l4620 12F9                                         i1l5156 0052  
                                       i1l5148 0036                                         i1l4606 14B1  
                                       i1l3646 15B0                                         i1l3902 1485  
                                       i1l3726 1291                                         i1l4710 0813  
                                       i1l4614 12A8                                         i1l4622 12FB  
                                       i1l4630 12F3                                         i1l4702 12E3  
                                       i1l5350 1619                                         i1l4608 14B2  
                                       i1l3648 15C1                                         i1l3904 149B  
                                       i1l3912 12A2                                         i1l4712 0816  
                                       i1l4616 12A9                                         i1l4624 1300  
                                       i1l4632 12F7                                         i1l4640 08DF  
                                       i1l5352 17AB                                         i1l4704 12E5  
                                       i1l3920 12B0                                         i1l4722 081F  
                                       i1l5354 08FF                                         i1l4706 12E8  
                                       i1l3914 12AB                                         i1l3922 12B3  
                                       i1l3844 13BE                                         i1l3932 126E  
                                       i1l3908 12DD                                         i1l5356 0831  
                                       i1l4716 081A                                         i1l4628 12F1  
                                       i1l4660 0927                                         i1l4644 08E3  
                                       i1l4636 08D6                                         i1l3916 12AE  
                                       i1l3940 12CC                                         i1l3686 1368  
                                       i1l3846 13C3                                         i1l3870 13F8  
                                       i1l3950 126B                                         i1l4718 081D  
                                       i1l4662 0929                                         i1l4654 08EB  
                                       i1l4670 1777                                         i1l3926 12BA  
                                       i1l4742 12CE                                         i1l4750 15F9  
                                       i1l4814 134A                                         i1l3848 13C9  
                                       i1l3872 1400                                         i1l3880 1411  
                                       i1l3960 1263                                         i1l3936 1295  
                                       i1l4728 0823                                         i1l4656 090F  
                                       i1l4648 08E7                                         i1l4672 177F  
                                       i1l3952 12B5                                         i1l3928 12BD  
                                       i1l4736 12BF                                         i1l3944 12C4  
                                       i1l4744 12D0                                         i1l4752 15FB  
                                       i1l4816 1274                                         i1l4920 1435  
                                       i1l4912 142B                                         i1l4906 128D  
                                       i1l3874 1407                                         i1l3882 1418  
                                       i1l3890 1429                                         i1l4658 091C  
                                       i1l4674 1784                                         i1l3954 12B8  
                                       i1l4738 12C2                                         i1l3946 12C7  
                                       i1l3938 12C9                                         i1l4746 12D1  
                                       i1l4754 15FE                                         i1l4930 15D1  
                                       i1l4914 1430                                         i1l4922 1437  
                                       i1l4908 1289                                         i1l3964 0002  
                                       i1l4684 1795                                         i1l4676 178E  
                                       i1l4764 1606                                         i1l4932 15D4  
                                       i1l4924 1439                                         i1l4916 1431  
                                       i1l3894 13E7                                         i1l3878 1409  
                                       i1l3886 141A                                         i1l3958 1271  
                                       i1l4694 179D                                         i1l4678 1791  
                                       i1l4758 1602                                         i1l4934 15D9  
                                       i1l4926 13A3                                         i1l4918 1433  
                                       i1l3896 13EF                                         i1l3888 1422  
                                       i1l4688 1799                                         i1l4936 15E1  
                                       i1l4928 13AA                                         i1l3898 13F6  
                                       i1l4938 15E4                                         u403_20 1430  
                                       u403_21 142F                                         u404_20 13AA  
                                       u404_21 13A9                                         u405_20 15D9  
                                       u405_21 15D8                                         u430_20 157C  
                                       u262_20 13C3                                         u406_20 15E1  
                                       u430_21 157B                                         u262_21 13C2  
                                       u406_21 15E0                                         u431_20 1700  
                                       u247_20 15B0                                         u431_21 16FF  
                                       u247_21 15AF                                         u432_20 1712  
                                       u432_21 1711                                         u433_20 172A  
                                       u433_21 1729                                         u450_20 0036  
                                       u450_21 0035                                         u451_20 0042  
                                       u451_21 0041                                         u452_20 0047  
                                       u444_20 000A                                         u452_21 0046  
                                       u444_21 0009                                         u429_20 1569  
                                       u453_20 004D                                         u445_20 000F  
                                       u429_21 1568                                         u453_21 004C  
                                       u445_21 000E                                         u454_20 0052  
                                       u446_20 0014                                         u454_21 0051  
                                       u446_21 0013                                         u447_20 0020  
                                       u447_21 001F                                         u448_20 0025  
                                       u448_21 0024                                         u449_20 0031  
                                       u449_21 0030                                         _OSCCON 0099  
                                       u396_20 14B1                                         u396_21 14B0  
                                       u397_20 08DE                                         u397_21 08DD  
                                       u398_20 0927                                         u398_21 0926  
                                       u399_20 178E                                         u399_21 178D  
                                       u401lld 0885                      ??_I2C_SetInterruptHandler 0022  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _SSPBUF 0211                               __end_of___xxtofl 0D30  
                          _I2C_MasterEnableIrq 1286                            _I2C_MasterGetRxData 126E  
                      __end_of_I2C_WriteNBytes 16F4                                      ??_Task_MB 0062  
         __end_of_TMR1_DefaultInterruptHandler 1263                   _TMR1_DefaultInterruptHandler 1262  
                      __end_of_TMR1_StartTimer 127A                                      ??___fladd 0050  
                                    ??___fldiv 0064                                  _I2C_MasterFsm 15D1  
                                _I2C_MasterIsr 1299                                      ??___flmul 0036  
                                    ??___fltol 0024                            _EUSART_Transmit_ISR 1562  
                            I2C_SetCallback@cb 0020                                  _I2C_SetBuffer 1470  
                 __end_of_I2C_MasterDisableIrq 1283                                         llabs@a 0024  
                         ?_I2C_MasterEnableIrq 0070                            _I2C_DO_ADDRESS_NACK 15F9  
                         ?_I2C_MasterGetRxData 0070                                      ?_I2C_Open 0070  
           __end_of_I2C_SetAddressNackCallback 137F                     _I2C_SetAddressNackCallback 1373  
                                  ?_Get_millis 0020                                   ?_rtcc_handle 0070  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 0070  
      I2C_SetInterruptHandler@InterruptHandler 0020       TMR1_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 143C                           ?_EUSART_Transmit_ISR 0070  
                        __end_of_TMR1_CallBack 13B0                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 0800                                   ___xxtofl@val 0020  
                      __end_of__initialization 0092                            _I2C_MasterOperation 1523  
                          __end_of_Task_Sensor 0BE1                       validateRequest@u16MsgCRC 003C  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                                   ___fltol@f1 0020           __end_of_EUSART_SetTxInterruptHandler 1341  
                 _EUSART_SetTxInterruptHandler 1338                        _rdBlkRegCompleteHandler 1485  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                                 __pidataBANK1 1397                         _I2C_CallbackReturnStop 1263  
                          ??_SYSTEM_Initialize 0022                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  __end_of_llabs 0887  
                         __end_of_fctsupported 1828                                 ?_I2C_SetBuffer 0020  
                __end_of_I2C_DO_SEND_ADR_WRITE 12F9                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterEnableIrq 0020  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                             ??_buildException 0020                          I2C_ReadNBytes@address 0027  
                                   ??_I2C_Open 0022                           _eusartRxStatusBuffer 013D  
                                    ?_App_Init 0070                     __end_of_I2C_MasterClearIrq 127D  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_llabs 002C  
                    __end_of_SYSTEM_Initialize 0813                          ??_EUSART_Transmit_ISR 0070  
                            _I2C_MasterSendAck 1295                                     __pbssBANK0 0069  
                                   __pbssBANK1 00D7                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 169E                                  ??_I2C_DO_IDLE 0070  
                                    ?_ReadData 0070                                  ??_I2C_DO_RCEN 0070  
                             ??_Task_Indicator 0020                  __end_of_rd2RegCompleteHandler 141A  
                 __end_of_I2C_MasterSendTxData 12A6                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 126B                           _ModbusRTU_Slave_Poll 0D30  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 13F8  
                         Task_MB@f_Modbus_Init 007C                            _I2C_DO_RX_NACK_STOP 12C4  
                         i1_I2C_MasterClearIrq 1274                          _rd1RegCompleteHandler 13F8  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 1295  
                            __end_of__Umul8_16 15A9                               ?_I2C_WriteNBytes 0028  
                       I2C_WriteNBytes@address 002B                          _wr1RegCompleteHandler 141A  
                     ModbusRTU_Slave_Poll@size 0054                                     __pmaintext 13D9  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0077  
                                ReadData@aData 00B5                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 0167                    __end_of_I2C_DO_SEND_RESTART 12BA  
                              _I2C_DO_TX_EMPTY 0813                            I2C_SetBuffer@buffer 0022  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                                ReadData@ctemp 00BB                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0071                          ??_I2C_MasterOperation 0020  
               I2C_SetDataCompleteCallback@ptr 0076                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 12B5                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 006A                                      ?___xxtofl 0020  
                                   ??_App_Init 0024                                i1_I2C_SetBuffer 13BD  
                    __end_of_I2C_MasterSendAck 1299                                        _OSCTUNE 0098  
                             _ModbusSlave_Init 0887                                    _Task_Sensor 0B4A  
                     ??_EUSART_SetErrorHandler 0022                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                   validateRequest@isSupported 003E                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 126E                           I2C_Close@returnValue 0020  
                 ?_I2C_SetDataCompleteCallback 0074                                      _I2C_DO_RX 1777  
                                    _I2C_DO_TX 08D6               __end_of_I2C_DO_SEND_RESTART_READ 12B0  
                                   ??_ReadData 00AD                          ?_ModbusRTU_Slave_Poll 0054  
                  __end_of_ModbusSlave_Process 14D1                                      _I2C_Close 14D1  
                    ??_rdBlkRegCompleteHandler 0078                          ?i1_I2C_MasterClearIrq 0070  
                         _I2C_MasterDisableIrq 1280                                ??_I2C_MasterFsm 007A  
                              ??_I2C_MasterIsr 007C                                        _Task_MB 144D  
                               _I2C_ReadNBytes 1541                            __end_of_I2C_DO_IDLE 12AB  
                          __end_of_I2C_DO_RCEN 12EA                                        ___fladd 04E2  
                                 ?_App_Process 0070                                        ___fldiv 0DFC  
                                      ___flmul 0096                                        ___fltol 0A54  
                              ??_I2C_SetBuffer 0022                        I2C_SetBuffer@bufferSize 0020  
                           I2C_ReadNBytes@data 0024                                 _I2C_MasterRead 12D3  
                               _I2C_MasterOpen 13B0                                 _I2C_MasterStop 1268  
                               _I2C_Initialize 1341                                   ?_Device_Init 0070  
                                      __ptext1 0800                                        __ptext2 07FC  
                                      __ptext3 14EC                                        __ptext4 1507  
                                      __ptext5 12EA                                        __ptext6 1341  
                                      __ptext7 1735                                        __ptext8 1338  
                                      __ptext9 132F                          ??_I2C_DO_RX_NACK_STOP 0070  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 12EA                                     ??___xxtofl 0024  
                           I2C_SetCallback@idx 0023                       ??_PIN_MANAGER_Initialize 0020  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 0020  
                           I2C_SetCallback@ptr 0022                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 00EE                                ModbusSlaveF04@i 0052  
                    i1I2C_SetBuffer@bufferSize 0070                                        clrloop0 1380  
                   _SHT30_CMD_MEASURE_L_Enable 00EA                           end_of_initialization 0092  
                       Modbus_sendTxBuff@index 0038                     _SHT30_CMD_MEASURE_M_Enable 00EC  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 132F                  _EUSART_SetOverrunErrorHandler 1326  
                                      init_ram 138B                               _Modbus_getRxBuff 092B  
                                   ?_I2C_Close 0070                         ?_rd1RegCompleteHandler 0077  
                            i1_I2C_SetCallback 15A9                                        initloop 138C  
                      __end_of_I2C_DO_TX_EMPTY 0840                          ?_I2C_MasterDisableIrq 0070  
                       __end_of_I2C_ReadNBytes 1562                              _EUSART_Initialize 1735  
                  _SHT30_CMD_MEASURE_H_Disable 00E8                         ?_wr1RegCompleteHandler 0077  
                           ?i1_I2C_SetCallback 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                  _Tick_Init_SES 145E  
                       __end_of_I2C_MasterRead 12D8                         __end_of_I2C_MasterOpen 13BD  
                       __end_of_I2C_MasterStop 126B                         __end_of_I2C_Initialize 134A  
                  _SHT30_CMD_MEASURE_L_Disable 00E4                            ??i1_I2C_SetCallback 0073  
                  _SHT30_CMD_MEASURE_M_Disable 00E6                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                      ModbusSlaveF04@valueRegsno 0050  
                           ModbusSlaveF04@size 003E                 ??_EUSART_SetTxInterruptHandler 0022  
                      __end_ofi1_I2C_SetBuffer 13CB                                      _PORTAbits 000C  
              __end_of_rdBlkRegCompleteHandler 149D                           _I2C_MasterSendTxData 12A1  
                              Modbus_calcCRC@i 002B                                Modbus_calcCRC@j 002C  
                                  ___fladd@grs 005B                                   ??_Get_millis 0024  
                                ___xxtofl@sign 0028                    ?_I2C_SetAddressNackCallback 0024  
                                  ___fldiv@grs 00A7                                    _f_Indicator 00E3  
                                  ___fldiv@rem 00A0                         ??_ModbusRTU_Slave_Poll 0056  
                ModbusRTU_Slave_Poll@u8Current 005F                      __end_ofi1_I2C_SetCallback 15D1  
                                 _fctsupported 1820                         ??i1_I2C_MasterClearIrq 0070  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 1777  
                                  _I2C_DO_IDLE 12A6                                    _I2C_DO_RCEN 12E3  
                   rdBlkRegCompleteHandler@ptr 0077                               validateRequest@i 003F  
                                    _TXSTAbits 019E                                ?_I2C_ReadNBytes 0024  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 12AB  
                               ?_Tick_Init_SES 0070                             __end_of_Get_millis 144D  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 0002  
           __end_of_EUSART_DefaultErrorHandler 128D                     _EUSART_DefaultErrorHandler 1289  
                                 _EUSART_Write 1674                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 005A                                  ??_EUSART_Read 0020  
                                ?_I2C_DO_RESET 0070                       ?_I2C_SetInterruptHandler 0020  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  ??_I2C_DO_RX 0078                                    ??_I2C_DO_TX 0078  
                          i1I2C_SetCallback@cb 0070                              ??_I2C_MasterClose 0020  
                  ModbusRTU_Slave_Poll@i8state 0060                         ??_I2C_MasterDisableIrq 0020  
                                  ??_I2C_Close 0020                              ??_I2C_MasterStart 0020  
                            ??_I2C_MasterWrite 0022                 __end_of_I2C_CallbackReturnStop 1265  
                       _I2C_DO_RX_NACK_RESTART 12C9                                 _ModbusSlaveF04 0BE1  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 127A  
                            ??_validateRequest 002F                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 0163                                 _Modbus_calcCRC 0987  
                     __end_of_ModbusSlave_Init 08D6                         _EUSART_SetErrorHandler 1314  
                  __end_of_I2C_MasterEnableIrq 1289                            ?_I2C_MasterClearIrq 0070  
                                    __Umul8_16 1585                    __end_of_I2C_MasterGetRxData 1271  
                                  __pdataBANK1 00E4                          __end_of_I2C_DO_RX_ACK 12C4  
                       ModbusSlave_Init@_SW_Ad 0020                               _I2C_DO_SEND_STOP 12BA  
                            ??_I2C_SetCallback 0023                               ?i1_I2C_SetBuffer 0070  
                          I2C_Open@returnValue 0023                             _I2C_MasterSendNack 1291  
                     ?_I2C_MasterEnableRestart 0070                                      ___fladd@a 004C  
                                    ___fladd@b 0048                              _i2c_fsmStateTable 1800  
                                    ___fldiv@a 005C                                      ___fldiv@b 0060  
                                  __pbssBIGRAM 2138                    __end_of_EUSART_Transmit_ISR 1585  
                        _I2C_DO_SEND_ADR_WRITE 12F1                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                    __pbssCOMMON 007C  
                                    ___latbits 0002                                  _SensorAmbient 00DB  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                               ??_I2C_DO_RESET 0070                            ?_I2C_MasterSendNack 0070  
                                 ?_Task_Sensor 0070                   __end_of_I2C_DO_SEND_ADR_READ 1302  
                         ??_I2C_MasterClearIrq 0020                    __end_of_I2C_DO_ADDRESS_NACK 1622  
                       __end_of_ModbusSlaveF04 0C85                     __end_of_EUSART_Receive_ISR 1735  
                             _I2C_MasterIsNack 12DD                      _I2C_DO_SEND_RESTART_WRITE 12B0  
             _EUSART_RxDefaultInterruptHandler 0165                            __end_of_EUSART_Read 164B  
                             _I2C_MasterSetIrq 1271                                      __pnvBANK2 015D  
                        _rd2RegCompleteHandler 1409                                ??_Tick_Init_SES 0022  
                       __end_of_Modbus_calcCRC 09E6                   __end_of_EUSART_RxDataHandler 14B7  
                                     ?_Task_MB 0070                         _PIN_MANAGER_Initialize 1507  
                        _wr2RegCompleteHandler 13E7                      ??_I2C_CallbackReturnReset 0078  
                      ModbusRTU_Slave_Poll@reg 005E                           EUSART_Read@readValue 0021  
                  __end_of_I2C_MasterOperation 1541                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 130B  
                                     ?___fladd 0048                                       ?___fldiv 005C  
                                    __ptext100 1368                                      __ptext101 15A9  
                                    __ptext102 1268                                      __ptext103 1265  
                                    __ptext104 1562                                      __ptext105 16F4  
                                    __ptext106 128D                                      __ptext107 1261  
                                    __ptext108 1289                                      __ptext109 149D  
                                     ?___flmul 002E                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                   _eusartRxHead 006C  
                                 _eusartTxHead 006F                                   _eusartRxTail 006B  
                       ??_I2C_MasterSendTxData 0070                                   _eusartTxTail 006E  
                    __end_of_i2c_fsmStateTable 1820                   ??_INTERRUPT_InterruptManager 007C  
                     __end_of_Modbus_getRxBuff 0987                        _eusartTxBufferRemaining 006D  
              __end_of_I2C_SetInterruptHandler 1314                         ModbusSlaveF04@u8regsno 004C  
                      I2C_MasterOperation@read 0020                                       _I2C_Open 17BA  
                                  _device_time 00D7                              I2C_ReadNBytes@len 0025  
                      ??_rd1RegCompleteHandler 0078                                 _eusartRxBuffer 0145  
                              ?_ModbusSlaveF04 003E                        ??_wr1RegCompleteHandler 0078  
                     ModbusSlaveF04@u8StartAdd 004A                                  _TMR1_CallBack 13A3  
                               _eusartTxBuffer 014D         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATCbits 010E                                      clear_ram0 137F  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 007D                                ?_Modbus_calcCRC 0020  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR2bits 0012                         ModbusSlaveF04@valueAdd 004E  
                        __end_of_I2C_MasterFsm 15F9                          __end_of_I2C_MasterIsr 129D  
                            _EUSART_is_tx_done 129D                    __end_of_I2C_DO_RX_NACK_STOP 12C9  
    __end_of_EUSART_DefaultOverrunErrorHandler 1291            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 128D  
                                     _TMR1_ISR 13CB                              ModbusSlaveF04@reg 004D  
              __end_of_I2C_MasterEnableRestart 1268                             ?_EUSART_is_tx_done 0070  
                         buildException@u8func 0022                          __end_of_I2C_SetBuffer 1485  
                            ??_TMR1_Initialize 0022                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                            ??_EUSART_is_tx_done 0020  
                             ReadData@humidity 00BF                                  ??_rtcc_handle 0070  
                                     _App_Init 1354                       wr2RegCompleteHandler@ptr 0077  
                                  _EUSART_Read 1622                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0077                               ??_I2C_ReadNBytes 0027  
                               ?_TMR1_CallBack 0070          Modbus_sendTxBuff@u32overTimecountDown 003A  
                                   _I2C_Status 0120                                       _ReadData 02D1  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                               ??_I2C_MasterRead 0022  
                          I2C_WriteNBytes@data 0028                               ??_I2C_MasterOpen 0020  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0020                      __end_of_EUSART_is_tx_done 12A1  
                        i1I2C_SetBuffer@buffer 0072                           __end_of_I2C_DO_RESET 12D3  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                          _EUSART_ErrorHandler 015F                           _I2C_DO_SEND_ADR_READ 12F9  
                  ?_EUSART_DefaultErrorHandler 0070                       _TMR1_SetInterruptHandler 1302  
                        _TMR1_InterruptHandler 015D                                _I2C_MasterClose 127D  
                I2C_SetAddressNackCallback@ptr 0026                                I2C_Open@address 0022  
                                     ___xxtofl 0C85                                _I2C_MasterStart 1283  
                              _I2C_MasterWrite 12D8                           _EUSART_RxDataHandler 149D  
                            ??_I2C_WriteNBytes 002B                                       __ptext10 1326  
                                     __ptext11 131D                                       __ptext20 1585  
                                     __ptext12 1314                                       __ptext21 0DFC  
                                     __ptext13 135E                                       __ptext30 130B  
                                     __ptext22 04E2                                       __ptext14 0B4A  
                                     __ptext31 13B0                                       __ptext23 16C9  
                                     __ptext15 0840                                       __ptext40 144D  
                                     __ptext32 1286                                       __ptext24 1373  
                                     __ptext16 02D1                                       __ptext41 14B7  
                                     __ptext33 12D3                                       __ptext25 164B  
                                     __ptext17 0C85                                       __ptext50 143C  
                                     __ptext42 0D30                                       __ptext34 1523  
                                     __ptext26 12D8                                       __ptext18 0A54  
                                     __ptext51 129D                                       __ptext43 0AC5  
                                     __ptext35 1283                                       __ptext27 1541  
                                     __ptext19 0096                                       __ptext52 1674  
                                     __ptext44 169E                                       __ptext36 14D1  
                                     __ptext28 1470                                       __ptext61 13CB  
                                     __ptext53 0887                                       __ptext45 092B  
                                     __ptext37 1280                                       __ptext29 17BA  
                                     __ptext70 12CE                                       __ptext62 142B  
                                     __ptext54 07CD                                       __ptext46 1622  
                                     __ptext38 127D                                       __ptext71 12C9  
                                     __ptext63 13A3                                       __ptext55 1354  
                                     __ptext47 0BE1                                       __ptext39 127A  
                                     __ptext80 08D6                                       __ptext72 12C4  
                                     __ptext64 1262                                       __ptext56 145E  
                                     __ptext48 06EA                                       __ptext81 12F1  
                                     __ptext73 12BF                                       __ptext65 134A  
                                     __ptext57 1302                                       __ptext49 0987  
                                     __ptext90 1291                                       __ptext82 12F9  
                                     __ptext74 12BA                                       __ptext66 1299  
                                     __ptext58 1277                                       __ptext91 126B  
                                     __ptext83 12A6                                       __ptext75 12B5  
                                     __ptext67 15D1                                       __ptext59 09E6  
                                     __ptext92 0002                                       __ptext84 0813  
                                     __ptext76 12B0                                       __ptext68 1274  
                                     __ptext93 1263                                       __ptext85 1271  
                                     __ptext77 12AB                                       __ptext69 15F9  
                                     __ptext94 1485                                       __ptext86 12DD  
                                     __ptext78 12E3                                       __ptext95 141A  
                                     __ptext87 12A1                                       __ptext79 1777  
                                     __ptext96 1409                                       __ptext88 1295  
                                     __ptext97 13F8                                       __ptext89 126E  
                                     __ptext98 13E7                                       __ptext99 13BD  
                              _validateRequest 0AC5            __end_of_I2C_SetDataCompleteCallback 1373  
                  _I2C_SetDataCompleteCallback 1368                              ??_TMR1_StartTimer 0020  
                      ?_I2C_DO_RX_NACK_RESTART 0070                            __end_of_rtcc_handle 1354  
                     __end_of_I2C_DO_SEND_STOP 12BF                  Modbus_getRxBuff@bBuffOverflow 0029  
                      ?_EUSART_SetErrorHandler 0020                                _I2C_SetCallback 164B  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                          Modbus_calcCRC@temp2 0026                        Modbus_sendTxBuff@u16crc 0036  
                                  _MB_Register 0159                                       int$flags 007E  
                            ?_ModbusSlave_Init 0070                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0058                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 1326                  _EUSART_SetFramingErrorHandler 131D  
                            ??_TMR1_WriteTimer 0072                             ??_ModbusSlave_Init 0020  
                     __end_of_I2C_MasterIsNack 12E3                       __end_of_I2C_MasterSetIrq 1274  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 0029  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 12CE  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                               _buildException 169E                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 131D                            _I2C_DO_SEND_RESTART 12B5  
         __end_of_EUSART_SetRxInterruptHandler 1338                   _EUSART_SetRxInterruptHandler 132F  
                         Device_Init@value_SW1 0020                           Device_Init@value_SW2 0021  
                         Device_Init@value_SW3 0022                           Device_Init@value_SW4 0023  
                           Modbus_calcCRC@flag 0028                             Modbus_calcCRC@temp 002D  
                                ??_App_Process 0069                                 _Task_Indicator 07CD  
                           _EUSART_Receive_ISR 16F4  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                      __end_of_I2C_MasterClose 1280                        __end_of_I2C_MasterStart 1286  
              ModbusRTU_Slave_Poll@u8exception 0061                        __end_of_I2C_MasterWrite 12DD  
                                ??_Device_Init 0020                                  __pstringtext1 1800  
                                __pstringtext2 1820                         __Umul8_16@multiplicand 0020  
                         ?_I2C_DO_SEND_RESTART 0070                              ?_Modbus_getRxBuff 0070  
                          ?_EUSART_Receive_ISR 0070                        __end_of_validateRequest 0B4A  
                           ??_Modbus_getRxBuff 0022                                    _rtcc_handle 134A  
                             ??_ModbusSlaveF04 0040                              Modbus_calcCRC@len 002A  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                          _ModbusSlave_Process 14B7                         __end_of_buildException 16C9  
                                ___fladd@signs 0058                                     _SES_Modbus 2138  
                           EUSART_Write@txData 0021                        __end_of_I2C_SetCallback 1674  
               __end_of_PIN_MANAGER_Initialize 1523                               ??_Modbus_calcCRC 0022  
                __end_of_rd1RegCompleteHandler 1409                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0028                  __end_of_wr1RegCompleteHandler 142B  
                        _MSSP_InterruptHandler 00E1                                _TMR1_Initialize 14EC  
                           Task_Sensor@valTime 0155                         __end_of_Task_Indicator 07FC  
                            __Umul8_16@product 0024                          __end_of_Tick_Init_SES 1470  
