

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 10 09:37:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    69                           	dabs	1,0x7E,2
    70     0000                     
    71                           ; Version 2.40
    72                           ; Generated 17/11/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1936 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0015                     	;# 
   126     0016                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001B                     	;# 
   133     001C                     	;# 
   134     001E                     	;# 
   135     001F                     	;# 
   136     008C                     	;# 
   137     008D                     	;# 
   138     008E                     	;# 
   139     0090                     	;# 
   140     0091                     	;# 
   141     0092                     	;# 
   142     0093                     	;# 
   143     0095                     	;# 
   144     0096                     	;# 
   145     0097                     	;# 
   146     0098                     	;# 
   147     0099                     	;# 
   148     009A                     	;# 
   149     009B                     	;# 
   150     009B                     	;# 
   151     009C                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     0110                     	;# 
   158     0111                     	;# 
   159     0112                     	;# 
   160     0113                     	;# 
   161     0114                     	;# 
   162     0115                     	;# 
   163     0116                     	;# 
   164     0117                     	;# 
   165     0118                     	;# 
   166     0119                     	;# 
   167     011A                     	;# 
   168     011B                     	;# 
   169     011D                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0191                     	;# 
   173     0191                     	;# 
   174     0192                     	;# 
   175     0193                     	;# 
   176     0193                     	;# 
   177     0193                     	;# 
   178     0194                     	;# 
   179     0195                     	;# 
   180     0196                     	;# 
   181     0199                     	;# 
   182     019A                     	;# 
   183     019B                     	;# 
   184     019B                     	;# 
   185     019B                     	;# 
   186     019B                     	;# 
   187     019C                     	;# 
   188     019C                     	;# 
   189     019D                     	;# 
   190     019E                     	;# 
   191     019F                     	;# 
   192     020D                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0212                     	;# 
   196     0213                     	;# 
   197     0214                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0216                     	;# 
   201     0217                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0294                     	;# 
   207     0295                     	;# 
   208     0295                     	;# 
   209     0296                     	;# 
   210     0298                     	;# 
   211     0298                     	;# 
   212     0299                     	;# 
   213     029A                     	;# 
   214     029B                     	;# 
   215     029C                     	;# 
   216     029C                     	;# 
   217     029D                     	;# 
   218     029E                     	;# 
   219     029F                     	;# 
   220     0311                     	;# 
   221     0311                     	;# 
   222     0312                     	;# 
   223     0313                     	;# 
   224     0314                     	;# 
   225     0315                     	;# 
   226     0315                     	;# 
   227     0316                     	;# 
   228     0318                     	;# 
   229     0318                     	;# 
   230     0319                     	;# 
   231     031A                     	;# 
   232     031C                     	;# 
   233     031C                     	;# 
   234     031D                     	;# 
   235     031E                     	;# 
   236     0394                     	;# 
   237     0395                     	;# 
   238     0396                     	;# 
   239     0415                     	;# 
   240     0416                     	;# 
   241     0417                     	;# 
   242     041C                     	;# 
   243     041D                     	;# 
   244     041E                     	;# 
   245     0791                     	;# 
   246     0792                     	;# 
   247     0793                     	;# 
   248     0794                     	;# 
   249     0795                     	;# 
   250     0798                     	;# 
   251     0799                     	;# 
   252     07A0                     	;# 
   253     07A1                     	;# 
   254     07A3                     	;# 
   255     07A4                     	;# 
   256     07A6                     	;# 
   257     07A7                     	;# 
   258     07A9                     	;# 
   259     07AA                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     000E                     	;# 
   286     0010                     	;# 
   287     0011                     	;# 
   288     0012                     	;# 
   289     0013                     	;# 
   290     0015                     	;# 
   291     0016                     	;# 
   292     0016                     	;# 
   293     0017                     	;# 
   294     0018                     	;# 
   295     0019                     	;# 
   296     001A                     	;# 
   297     001B                     	;# 
   298     001C                     	;# 
   299     001E                     	;# 
   300     001F                     	;# 
   301     008C                     	;# 
   302     008D                     	;# 
   303     008E                     	;# 
   304     0090                     	;# 
   305     0091                     	;# 
   306     0092                     	;# 
   307     0093                     	;# 
   308     0095                     	;# 
   309     0096                     	;# 
   310     0097                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009A                     	;# 
   314     009B                     	;# 
   315     009B                     	;# 
   316     009C                     	;# 
   317     009D                     	;# 
   318     009E                     	;# 
   319     010C                     	;# 
   320     010D                     	;# 
   321     010E                     	;# 
   322     0110                     	;# 
   323     0111                     	;# 
   324     0112                     	;# 
   325     0113                     	;# 
   326     0114                     	;# 
   327     0115                     	;# 
   328     0116                     	;# 
   329     0117                     	;# 
   330     0118                     	;# 
   331     0119                     	;# 
   332     011A                     	;# 
   333     011B                     	;# 
   334     011D                     	;# 
   335     018C                     	;# 
   336     018D                     	;# 
   337     0191                     	;# 
   338     0191                     	;# 
   339     0192                     	;# 
   340     0193                     	;# 
   341     0193                     	;# 
   342     0193                     	;# 
   343     0194                     	;# 
   344     0195                     	;# 
   345     0196                     	;# 
   346     0199                     	;# 
   347     019A                     	;# 
   348     019B                     	;# 
   349     019B                     	;# 
   350     019B                     	;# 
   351     019B                     	;# 
   352     019C                     	;# 
   353     019C                     	;# 
   354     019D                     	;# 
   355     019E                     	;# 
   356     019F                     	;# 
   357     020D                     	;# 
   358     0210                     	;# 
   359     0211                     	;# 
   360     0212                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0215                     	;# 
   364     0215                     	;# 
   365     0216                     	;# 
   366     0217                     	;# 
   367     0291                     	;# 
   368     0291                     	;# 
   369     0292                     	;# 
   370     0293                     	;# 
   371     0294                     	;# 
   372     0295                     	;# 
   373     0295                     	;# 
   374     0296                     	;# 
   375     0298                     	;# 
   376     0298                     	;# 
   377     0299                     	;# 
   378     029A                     	;# 
   379     029B                     	;# 
   380     029C                     	;# 
   381     029C                     	;# 
   382     029D                     	;# 
   383     029E                     	;# 
   384     029F                     	;# 
   385     0311                     	;# 
   386     0311                     	;# 
   387     0312                     	;# 
   388     0313                     	;# 
   389     0314                     	;# 
   390     0315                     	;# 
   391     0315                     	;# 
   392     0316                     	;# 
   393     0318                     	;# 
   394     0318                     	;# 
   395     0319                     	;# 
   396     031A                     	;# 
   397     031C                     	;# 
   398     031C                     	;# 
   399     031D                     	;# 
   400     031E                     	;# 
   401     0394                     	;# 
   402     0395                     	;# 
   403     0396                     	;# 
   404     0415                     	;# 
   405     0416                     	;# 
   406     0417                     	;# 
   407     041C                     	;# 
   408     041D                     	;# 
   409     041E                     	;# 
   410     0791                     	;# 
   411     0792                     	;# 
   412     0793                     	;# 
   413     0794                     	;# 
   414     0795                     	;# 
   415     0798                     	;# 
   416     0799                     	;# 
   417     07A0                     	;# 
   418     07A1                     	;# 
   419     07A3                     	;# 
   420     07A4                     	;# 
   421     07A6                     	;# 
   422     07A7                     	;# 
   423     07A9                     	;# 
   424     07AA                     	;# 
   425     0FE4                     	;# 
   426     0FE5                     	;# 
   427     0FE6                     	;# 
   428     0FE7                     	;# 
   429     0FE8                     	;# 
   430     0FE9                     	;# 
   431     0FEA                     	;# 
   432     0FEB                     	;# 
   433     0FED                     	;# 
   434     0FEE                     	;# 
   435     0FEF                     	;# 
   436     0000                     	;# 
   437     0001                     	;# 
   438     0002                     	;# 
   439     0003                     	;# 
   440     0004                     	;# 
   441     0005                     	;# 
   442     0006                     	;# 
   443     0007                     	;# 
   444     0008                     	;# 
   445     0009                     	;# 
   446     000A                     	;# 
   447     000B                     	;# 
   448     000C                     	;# 
   449     000D                     	;# 
   450     000E                     	;# 
   451     0010                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0013                     	;# 
   455     0015                     	;# 
   456     0016                     	;# 
   457     0016                     	;# 
   458     0017                     	;# 
   459     0018                     	;# 
   460     0019                     	;# 
   461     001A                     	;# 
   462     001B                     	;# 
   463     001C                     	;# 
   464     001E                     	;# 
   465     001F                     	;# 
   466     008C                     	;# 
   467     008D                     	;# 
   468     008E                     	;# 
   469     0090                     	;# 
   470     0091                     	;# 
   471     0092                     	;# 
   472     0093                     	;# 
   473     0095                     	;# 
   474     0096                     	;# 
   475     0097                     	;# 
   476     0098                     	;# 
   477     0099                     	;# 
   478     009A                     	;# 
   479     009B                     	;# 
   480     009B                     	;# 
   481     009C                     	;# 
   482     009D                     	;# 
   483     009E                     	;# 
   484     010C                     	;# 
   485     010D                     	;# 
   486     010E                     	;# 
   487     0110                     	;# 
   488     0111                     	;# 
   489     0112                     	;# 
   490     0113                     	;# 
   491     0114                     	;# 
   492     0115                     	;# 
   493     0116                     	;# 
   494     0117                     	;# 
   495     0118                     	;# 
   496     0119                     	;# 
   497     011A                     	;# 
   498     011B                     	;# 
   499     011D                     	;# 
   500     018C                     	;# 
   501     018D                     	;# 
   502     0191                     	;# 
   503     0191                     	;# 
   504     0192                     	;# 
   505     0193                     	;# 
   506     0193                     	;# 
   507     0193                     	;# 
   508     0194                     	;# 
   509     0195                     	;# 
   510     0196                     	;# 
   511     0199                     	;# 
   512     019A                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019B                     	;# 
   516     019B                     	;# 
   517     019C                     	;# 
   518     019C                     	;# 
   519     019D                     	;# 
   520     019E                     	;# 
   521     019F                     	;# 
   522     020D                     	;# 
   523     0210                     	;# 
   524     0211                     	;# 
   525     0212                     	;# 
   526     0213                     	;# 
   527     0214                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0217                     	;# 
   532     0291                     	;# 
   533     0291                     	;# 
   534     0292                     	;# 
   535     0293                     	;# 
   536     0294                     	;# 
   537     0295                     	;# 
   538     0295                     	;# 
   539     0296                     	;# 
   540     0298                     	;# 
   541     0298                     	;# 
   542     0299                     	;# 
   543     029A                     	;# 
   544     029B                     	;# 
   545     029C                     	;# 
   546     029C                     	;# 
   547     029D                     	;# 
   548     029E                     	;# 
   549     029F                     	;# 
   550     0311                     	;# 
   551     0311                     	;# 
   552     0312                     	;# 
   553     0313                     	;# 
   554     0314                     	;# 
   555     0315                     	;# 
   556     0315                     	;# 
   557     0316                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     031C                     	;# 
   563     031C                     	;# 
   564     031D                     	;# 
   565     031E                     	;# 
   566     0394                     	;# 
   567     0395                     	;# 
   568     0396                     	;# 
   569     0415                     	;# 
   570     0416                     	;# 
   571     0417                     	;# 
   572     041C                     	;# 
   573     041D                     	;# 
   574     041E                     	;# 
   575     0791                     	;# 
   576     0792                     	;# 
   577     0793                     	;# 
   578     0794                     	;# 
   579     0795                     	;# 
   580     0798                     	;# 
   581     0799                     	;# 
   582     07A0                     	;# 
   583     07A1                     	;# 
   584     07A3                     	;# 
   585     07A4                     	;# 
   586     07A6                     	;# 
   587     07A7                     	;# 
   588     07A9                     	;# 
   589     07AA                     	;# 
   590     0FE4                     	;# 
   591     0FE5                     	;# 
   592     0FE6                     	;# 
   593     0FE7                     	;# 
   594     0FE8                     	;# 
   595     0FE9                     	;# 
   596     0FEA                     	;# 
   597     0FEB                     	;# 
   598     0FED                     	;# 
   599     0FEE                     	;# 
   600     0FEF                     	;# 
   601     0000                     	;# 
   602     0001                     	;# 
   603     0002                     	;# 
   604     0003                     	;# 
   605     0004                     	;# 
   606     0005                     	;# 
   607     0006                     	;# 
   608     0007                     	;# 
   609     0008                     	;# 
   610     0009                     	;# 
   611     000A                     	;# 
   612     000B                     	;# 
   613     000C                     	;# 
   614     000D                     	;# 
   615     000E                     	;# 
   616     0010                     	;# 
   617     0011                     	;# 
   618     0012                     	;# 
   619     0013                     	;# 
   620     0015                     	;# 
   621     0016                     	;# 
   622     0016                     	;# 
   623     0017                     	;# 
   624     0018                     	;# 
   625     0019                     	;# 
   626     001A                     	;# 
   627     001B                     	;# 
   628     001C                     	;# 
   629     001E                     	;# 
   630     001F                     	;# 
   631     008C                     	;# 
   632     008D                     	;# 
   633     008E                     	;# 
   634     0090                     	;# 
   635     0091                     	;# 
   636     0092                     	;# 
   637     0093                     	;# 
   638     0095                     	;# 
   639     0096                     	;# 
   640     0097                     	;# 
   641     0098                     	;# 
   642     0099                     	;# 
   643     009A                     	;# 
   644     009B                     	;# 
   645     009B                     	;# 
   646     009C                     	;# 
   647     009D                     	;# 
   648     009E                     	;# 
   649     010C                     	;# 
   650     010D                     	;# 
   651     010E                     	;# 
   652     0110                     	;# 
   653     0111                     	;# 
   654     0112                     	;# 
   655     0113                     	;# 
   656     0114                     	;# 
   657     0115                     	;# 
   658     0116                     	;# 
   659     0117                     	;# 
   660     0118                     	;# 
   661     0119                     	;# 
   662     011A                     	;# 
   663     011B                     	;# 
   664     011D                     	;# 
   665     018C                     	;# 
   666     018D                     	;# 
   667     0191                     	;# 
   668     0191                     	;# 
   669     0192                     	;# 
   670     0193                     	;# 
   671     0193                     	;# 
   672     0193                     	;# 
   673     0194                     	;# 
   674     0195                     	;# 
   675     0196                     	;# 
   676     0199                     	;# 
   677     019A                     	;# 
   678     019B                     	;# 
   679     019B                     	;# 
   680     019B                     	;# 
   681     019B                     	;# 
   682     019C                     	;# 
   683     019C                     	;# 
   684     019D                     	;# 
   685     019E                     	;# 
   686     019F                     	;# 
   687     020D                     	;# 
   688     0210                     	;# 
   689     0211                     	;# 
   690     0212                     	;# 
   691     0213                     	;# 
   692     0214                     	;# 
   693     0215                     	;# 
   694     0215                     	;# 
   695     0216                     	;# 
   696     0217                     	;# 
   697     0291                     	;# 
   698     0291                     	;# 
   699     0292                     	;# 
   700     0293                     	;# 
   701     0294                     	;# 
   702     0295                     	;# 
   703     0295                     	;# 
   704     0296                     	;# 
   705     0298                     	;# 
   706     0298                     	;# 
   707     0299                     	;# 
   708     029A                     	;# 
   709     029B                     	;# 
   710     029C                     	;# 
   711     029C                     	;# 
   712     029D                     	;# 
   713     029E                     	;# 
   714     029F                     	;# 
   715     0311                     	;# 
   716     0311                     	;# 
   717     0312                     	;# 
   718     0313                     	;# 
   719     0314                     	;# 
   720     0315                     	;# 
   721     0315                     	;# 
   722     0316                     	;# 
   723     0318                     	;# 
   724     0318                     	;# 
   725     0319                     	;# 
   726     031A                     	;# 
   727     031C                     	;# 
   728     031C                     	;# 
   729     031D                     	;# 
   730     031E                     	;# 
   731     0394                     	;# 
   732     0395                     	;# 
   733     0396                     	;# 
   734     0415                     	;# 
   735     0416                     	;# 
   736     0417                     	;# 
   737     041C                     	;# 
   738     041D                     	;# 
   739     041E                     	;# 
   740     0791                     	;# 
   741     0792                     	;# 
   742     0793                     	;# 
   743     0794                     	;# 
   744     0795                     	;# 
   745     0798                     	;# 
   746     0799                     	;# 
   747     07A0                     	;# 
   748     07A1                     	;# 
   749     07A3                     	;# 
   750     07A4                     	;# 
   751     07A6                     	;# 
   752     07A7                     	;# 
   753     07A9                     	;# 
   754     07AA                     	;# 
   755     0FE4                     	;# 
   756     0FE5                     	;# 
   757     0FE6                     	;# 
   758     0FE7                     	;# 
   759     0FE8                     	;# 
   760     0FE9                     	;# 
   761     0FEA                     	;# 
   762     0FEB                     	;# 
   763     0FED                     	;# 
   764     0FEE                     	;# 
   765     0FEF                     	;# 
   766     0000                     	;# 
   767     0001                     	;# 
   768     0002                     	;# 
   769     0003                     	;# 
   770     0004                     	;# 
   771     0005                     	;# 
   772     0006                     	;# 
   773     0007                     	;# 
   774     0008                     	;# 
   775     0009                     	;# 
   776     000A                     	;# 
   777     000B                     	;# 
   778     000C                     	;# 
   779     000D                     	;# 
   780     000E                     	;# 
   781     0010                     	;# 
   782     0011                     	;# 
   783     0012                     	;# 
   784     0013                     	;# 
   785     0015                     	;# 
   786     0016                     	;# 
   787     0016                     	;# 
   788     0017                     	;# 
   789     0018                     	;# 
   790     0019                     	;# 
   791     001A                     	;# 
   792     001B                     	;# 
   793     001C                     	;# 
   794     001E                     	;# 
   795     001F                     	;# 
   796     008C                     	;# 
   797     008D                     	;# 
   798     008E                     	;# 
   799     0090                     	;# 
   800     0091                     	;# 
   801     0092                     	;# 
   802     0093                     	;# 
   803     0095                     	;# 
   804     0096                     	;# 
   805     0097                     	;# 
   806     0098                     	;# 
   807     0099                     	;# 
   808     009A                     	;# 
   809     009B                     	;# 
   810     009B                     	;# 
   811     009C                     	;# 
   812     009D                     	;# 
   813     009E                     	;# 
   814     010C                     	;# 
   815     010D                     	;# 
   816     010E                     	;# 
   817     0110                     	;# 
   818     0111                     	;# 
   819     0112                     	;# 
   820     0113                     	;# 
   821     0114                     	;# 
   822     0115                     	;# 
   823     0116                     	;# 
   824     0117                     	;# 
   825     0118                     	;# 
   826     0119                     	;# 
   827     011A                     	;# 
   828     011B                     	;# 
   829     011D                     	;# 
   830     018C                     	;# 
   831     018D                     	;# 
   832     0191                     	;# 
   833     0191                     	;# 
   834     0192                     	;# 
   835     0193                     	;# 
   836     0193                     	;# 
   837     0193                     	;# 
   838     0194                     	;# 
   839     0195                     	;# 
   840     0196                     	;# 
   841     0199                     	;# 
   842     019A                     	;# 
   843     019B                     	;# 
   844     019B                     	;# 
   845     019B                     	;# 
   846     019B                     	;# 
   847     019C                     	;# 
   848     019C                     	;# 
   849     019D                     	;# 
   850     019E                     	;# 
   851     019F                     	;# 
   852     020D                     	;# 
   853     0210                     	;# 
   854     0211                     	;# 
   855     0212                     	;# 
   856     0213                     	;# 
   857     0214                     	;# 
   858     0215                     	;# 
   859     0215                     	;# 
   860     0216                     	;# 
   861     0217                     	;# 
   862     0291                     	;# 
   863     0291                     	;# 
   864     0292                     	;# 
   865     0293                     	;# 
   866     0294                     	;# 
   867     0295                     	;# 
   868     0295                     	;# 
   869     0296                     	;# 
   870     0298                     	;# 
   871     0298                     	;# 
   872     0299                     	;# 
   873     029A                     	;# 
   874     029B                     	;# 
   875     029C                     	;# 
   876     029C                     	;# 
   877     029D                     	;# 
   878     029E                     	;# 
   879     029F                     	;# 
   880     0311                     	;# 
   881     0311                     	;# 
   882     0312                     	;# 
   883     0313                     	;# 
   884     0314                     	;# 
   885     0315                     	;# 
   886     0315                     	;# 
   887     0316                     	;# 
   888     0318                     	;# 
   889     0318                     	;# 
   890     0319                     	;# 
   891     031A                     	;# 
   892     031C                     	;# 
   893     031C                     	;# 
   894     031D                     	;# 
   895     031E                     	;# 
   896     0394                     	;# 
   897     0395                     	;# 
   898     0396                     	;# 
   899     0415                     	;# 
   900     0416                     	;# 
   901     0417                     	;# 
   902     041C                     	;# 
   903     041D                     	;# 
   904     041E                     	;# 
   905     0791                     	;# 
   906     0792                     	;# 
   907     0793                     	;# 
   908     0794                     	;# 
   909     0795                     	;# 
   910     0798                     	;# 
   911     0799                     	;# 
   912     07A0                     	;# 
   913     07A1                     	;# 
   914     07A3                     	;# 
   915     07A4                     	;# 
   916     07A6                     	;# 
   917     07A7                     	;# 
   918     07A9                     	;# 
   919     07AA                     	;# 
   920     0FE4                     	;# 
   921     0FE5                     	;# 
   922     0FE6                     	;# 
   923     0FE7                     	;# 
   924     0FE8                     	;# 
   925     0FE9                     	;# 
   926     0FEA                     	;# 
   927     0FEB                     	;# 
   928     0FED                     	;# 
   929     0FEE                     	;# 
   930     0FEF                     	;# 
   931     0000                     	;# 
   932     0001                     	;# 
   933     0002                     	;# 
   934     0003                     	;# 
   935     0004                     	;# 
   936     0005                     	;# 
   937     0006                     	;# 
   938     0007                     	;# 
   939     0008                     	;# 
   940     0009                     	;# 
   941     000A                     	;# 
   942     000B                     	;# 
   943     000C                     	;# 
   944     000D                     	;# 
   945     000E                     	;# 
   946     0010                     	;# 
   947     0011                     	;# 
   948     0012                     	;# 
   949     0013                     	;# 
   950     0015                     	;# 
   951     0016                     	;# 
   952     0016                     	;# 
   953     0017                     	;# 
   954     0018                     	;# 
   955     0019                     	;# 
   956     001A                     	;# 
   957     001B                     	;# 
   958     001C                     	;# 
   959     001E                     	;# 
   960     001F                     	;# 
   961     008C                     	;# 
   962     008D                     	;# 
   963     008E                     	;# 
   964     0090                     	;# 
   965     0091                     	;# 
   966     0092                     	;# 
   967     0093                     	;# 
   968     0095                     	;# 
   969     0096                     	;# 
   970     0097                     	;# 
   971     0098                     	;# 
   972     0099                     	;# 
   973     009A                     	;# 
   974     009B                     	;# 
   975     009B                     	;# 
   976     009C                     	;# 
   977     009D                     	;# 
   978     009E                     	;# 
   979     010C                     	;# 
   980     010D                     	;# 
   981     010E                     	;# 
   982     0110                     	;# 
   983     0111                     	;# 
   984     0112                     	;# 
   985     0113                     	;# 
   986     0114                     	;# 
   987     0115                     	;# 
   988     0116                     	;# 
   989     0117                     	;# 
   990     0118                     	;# 
   991     0119                     	;# 
   992     011A                     	;# 
   993     011B                     	;# 
   994     011D                     	;# 
   995     018C                     	;# 
   996     018D                     	;# 
   997     0191                     	;# 
   998     0191                     	;# 
   999     0192                     	;# 
  1000     0193                     	;# 
  1001     0193                     	;# 
  1002     0193                     	;# 
  1003     0194                     	;# 
  1004     0195                     	;# 
  1005     0196                     	;# 
  1006     0199                     	;# 
  1007     019A                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019B                     	;# 
  1011     019B                     	;# 
  1012     019C                     	;# 
  1013     019C                     	;# 
  1014     019D                     	;# 
  1015     019E                     	;# 
  1016     019F                     	;# 
  1017     020D                     	;# 
  1018     0210                     	;# 
  1019     0211                     	;# 
  1020     0212                     	;# 
  1021     0213                     	;# 
  1022     0214                     	;# 
  1023     0215                     	;# 
  1024     0215                     	;# 
  1025     0216                     	;# 
  1026     0217                     	;# 
  1027     0291                     	;# 
  1028     0291                     	;# 
  1029     0292                     	;# 
  1030     0293                     	;# 
  1031     0294                     	;# 
  1032     0295                     	;# 
  1033     0295                     	;# 
  1034     0296                     	;# 
  1035     0298                     	;# 
  1036     0298                     	;# 
  1037     0299                     	;# 
  1038     029A                     	;# 
  1039     029B                     	;# 
  1040     029C                     	;# 
  1041     029C                     	;# 
  1042     029D                     	;# 
  1043     029E                     	;# 
  1044     029F                     	;# 
  1045     0311                     	;# 
  1046     0311                     	;# 
  1047     0312                     	;# 
  1048     0313                     	;# 
  1049     0314                     	;# 
  1050     0315                     	;# 
  1051     0315                     	;# 
  1052     0316                     	;# 
  1053     0318                     	;# 
  1054     0318                     	;# 
  1055     0319                     	;# 
  1056     031A                     	;# 
  1057     031C                     	;# 
  1058     031C                     	;# 
  1059     031D                     	;# 
  1060     031E                     	;# 
  1061     0394                     	;# 
  1062     0395                     	;# 
  1063     0396                     	;# 
  1064     0415                     	;# 
  1065     0416                     	;# 
  1066     0417                     	;# 
  1067     041C                     	;# 
  1068     041D                     	;# 
  1069     041E                     	;# 
  1070     0791                     	;# 
  1071     0792                     	;# 
  1072     0793                     	;# 
  1073     0794                     	;# 
  1074     0795                     	;# 
  1075     0798                     	;# 
  1076     0799                     	;# 
  1077     07A0                     	;# 
  1078     07A1                     	;# 
  1079     07A3                     	;# 
  1080     07A4                     	;# 
  1081     07A6                     	;# 
  1082     07A7                     	;# 
  1083     07A9                     	;# 
  1084     07AA                     	;# 
  1085     0FE4                     	;# 
  1086     0FE5                     	;# 
  1087     0FE6                     	;# 
  1088     0FE7                     	;# 
  1089     0FE8                     	;# 
  1090     0FE9                     	;# 
  1091     0FEA                     	;# 
  1092     0FEB                     	;# 
  1093     0FED                     	;# 
  1094     0FEE                     	;# 
  1095     0FEF                     	;# 
  1096     0000                     	;# 
  1097     0001                     	;# 
  1098     0002                     	;# 
  1099     0003                     	;# 
  1100     0004                     	;# 
  1101     0005                     	;# 
  1102     0006                     	;# 
  1103     0007                     	;# 
  1104     0008                     	;# 
  1105     0009                     	;# 
  1106     000A                     	;# 
  1107     000B                     	;# 
  1108     000C                     	;# 
  1109     000D                     	;# 
  1110     000E                     	;# 
  1111     0010                     	;# 
  1112     0011                     	;# 
  1113     0012                     	;# 
  1114     0013                     	;# 
  1115     0015                     	;# 
  1116     0016                     	;# 
  1117     0016                     	;# 
  1118     0017                     	;# 
  1119     0018                     	;# 
  1120     0019                     	;# 
  1121     001A                     	;# 
  1122     001B                     	;# 
  1123     001C                     	;# 
  1124     001E                     	;# 
  1125     001F                     	;# 
  1126     008C                     	;# 
  1127     008D                     	;# 
  1128     008E                     	;# 
  1129     0090                     	;# 
  1130     0091                     	;# 
  1131     0092                     	;# 
  1132     0093                     	;# 
  1133     0095                     	;# 
  1134     0096                     	;# 
  1135     0097                     	;# 
  1136     0098                     	;# 
  1137     0099                     	;# 
  1138     009A                     	;# 
  1139     009B                     	;# 
  1140     009B                     	;# 
  1141     009C                     	;# 
  1142     009D                     	;# 
  1143     009E                     	;# 
  1144     010C                     	;# 
  1145     010D                     	;# 
  1146     010E                     	;# 
  1147     0110                     	;# 
  1148     0111                     	;# 
  1149     0112                     	;# 
  1150     0113                     	;# 
  1151     0114                     	;# 
  1152     0115                     	;# 
  1153     0116                     	;# 
  1154     0117                     	;# 
  1155     0118                     	;# 
  1156     0119                     	;# 
  1157     011A                     	;# 
  1158     011B                     	;# 
  1159     011D                     	;# 
  1160     018C                     	;# 
  1161     018D                     	;# 
  1162     0191                     	;# 
  1163     0191                     	;# 
  1164     0192                     	;# 
  1165     0193                     	;# 
  1166     0193                     	;# 
  1167     0193                     	;# 
  1168     0194                     	;# 
  1169     0195                     	;# 
  1170     0196                     	;# 
  1171     0199                     	;# 
  1172     019A                     	;# 
  1173     019B                     	;# 
  1174     019B                     	;# 
  1175     019B                     	;# 
  1176     019B                     	;# 
  1177     019C                     	;# 
  1178     019C                     	;# 
  1179     019D                     	;# 
  1180     019E                     	;# 
  1181     019F                     	;# 
  1182     020D                     	;# 
  1183     0210                     	;# 
  1184     0211                     	;# 
  1185     0212                     	;# 
  1186     0213                     	;# 
  1187     0214                     	;# 
  1188     0215                     	;# 
  1189     0215                     	;# 
  1190     0216                     	;# 
  1191     0217                     	;# 
  1192     0291                     	;# 
  1193     0291                     	;# 
  1194     0292                     	;# 
  1195     0293                     	;# 
  1196     0294                     	;# 
  1197     0295                     	;# 
  1198     0295                     	;# 
  1199     0296                     	;# 
  1200     0298                     	;# 
  1201     0298                     	;# 
  1202     0299                     	;# 
  1203     029A                     	;# 
  1204     029B                     	;# 
  1205     029C                     	;# 
  1206     029C                     	;# 
  1207     029D                     	;# 
  1208     029E                     	;# 
  1209     029F                     	;# 
  1210     0311                     	;# 
  1211     0311                     	;# 
  1212     0312                     	;# 
  1213     0313                     	;# 
  1214     0314                     	;# 
  1215     0315                     	;# 
  1216     0315                     	;# 
  1217     0316                     	;# 
  1218     0318                     	;# 
  1219     0318                     	;# 
  1220     0319                     	;# 
  1221     031A                     	;# 
  1222     031C                     	;# 
  1223     031C                     	;# 
  1224     031D                     	;# 
  1225     031E                     	;# 
  1226     0394                     	;# 
  1227     0395                     	;# 
  1228     0396                     	;# 
  1229     0415                     	;# 
  1230     0416                     	;# 
  1231     0417                     	;# 
  1232     041C                     	;# 
  1233     041D                     	;# 
  1234     041E                     	;# 
  1235     0791                     	;# 
  1236     0792                     	;# 
  1237     0793                     	;# 
  1238     0794                     	;# 
  1239     0795                     	;# 
  1240     0798                     	;# 
  1241     0799                     	;# 
  1242     07A0                     	;# 
  1243     07A1                     	;# 
  1244     07A3                     	;# 
  1245     07A4                     	;# 
  1246     07A6                     	;# 
  1247     07A7                     	;# 
  1248     07A9                     	;# 
  1249     07AA                     	;# 
  1250     0FE4                     	;# 
  1251     0FE5                     	;# 
  1252     0FE6                     	;# 
  1253     0FE7                     	;# 
  1254     0FE8                     	;# 
  1255     0FE9                     	;# 
  1256     0FEA                     	;# 
  1257     0FEB                     	;# 
  1258     0FED                     	;# 
  1259     0FEE                     	;# 
  1260     0FEF                     	;# 
  1261     0000                     	;# 
  1262     0001                     	;# 
  1263     0002                     	;# 
  1264     0003                     	;# 
  1265     0004                     	;# 
  1266     0005                     	;# 
  1267     0006                     	;# 
  1268     0007                     	;# 
  1269     0008                     	;# 
  1270     0009                     	;# 
  1271     000A                     	;# 
  1272     000B                     	;# 
  1273     000C                     	;# 
  1274     000D                     	;# 
  1275     000E                     	;# 
  1276     0010                     	;# 
  1277     0011                     	;# 
  1278     0012                     	;# 
  1279     0013                     	;# 
  1280     0015                     	;# 
  1281     0016                     	;# 
  1282     0016                     	;# 
  1283     0017                     	;# 
  1284     0018                     	;# 
  1285     0019                     	;# 
  1286     001A                     	;# 
  1287     001B                     	;# 
  1288     001C                     	;# 
  1289     001E                     	;# 
  1290     001F                     	;# 
  1291     008C                     	;# 
  1292     008D                     	;# 
  1293     008E                     	;# 
  1294     0090                     	;# 
  1295     0091                     	;# 
  1296     0092                     	;# 
  1297     0093                     	;# 
  1298     0095                     	;# 
  1299     0096                     	;# 
  1300     0097                     	;# 
  1301     0098                     	;# 
  1302     0099                     	;# 
  1303     009A                     	;# 
  1304     009B                     	;# 
  1305     009B                     	;# 
  1306     009C                     	;# 
  1307     009D                     	;# 
  1308     009E                     	;# 
  1309     010C                     	;# 
  1310     010D                     	;# 
  1311     010E                     	;# 
  1312     0110                     	;# 
  1313     0111                     	;# 
  1314     0112                     	;# 
  1315     0113                     	;# 
  1316     0114                     	;# 
  1317     0115                     	;# 
  1318     0116                     	;# 
  1319     0117                     	;# 
  1320     0118                     	;# 
  1321     0119                     	;# 
  1322     011A                     	;# 
  1323     011B                     	;# 
  1324     011D                     	;# 
  1325     018C                     	;# 
  1326     018D                     	;# 
  1327     0191                     	;# 
  1328     0191                     	;# 
  1329     0192                     	;# 
  1330     0193                     	;# 
  1331     0193                     	;# 
  1332     0193                     	;# 
  1333     0194                     	;# 
  1334     0195                     	;# 
  1335     0196                     	;# 
  1336     0199                     	;# 
  1337     019A                     	;# 
  1338     019B                     	;# 
  1339     019B                     	;# 
  1340     019B                     	;# 
  1341     019B                     	;# 
  1342     019C                     	;# 
  1343     019C                     	;# 
  1344     019D                     	;# 
  1345     019E                     	;# 
  1346     019F                     	;# 
  1347     020D                     	;# 
  1348     0210                     	;# 
  1349     0211                     	;# 
  1350     0212                     	;# 
  1351     0213                     	;# 
  1352     0214                     	;# 
  1353     0215                     	;# 
  1354     0215                     	;# 
  1355     0216                     	;# 
  1356     0217                     	;# 
  1357     0291                     	;# 
  1358     0291                     	;# 
  1359     0292                     	;# 
  1360     0293                     	;# 
  1361     0294                     	;# 
  1362     0295                     	;# 
  1363     0295                     	;# 
  1364     0296                     	;# 
  1365     0298                     	;# 
  1366     0298                     	;# 
  1367     0299                     	;# 
  1368     029A                     	;# 
  1369     029B                     	;# 
  1370     029C                     	;# 
  1371     029C                     	;# 
  1372     029D                     	;# 
  1373     029E                     	;# 
  1374     029F                     	;# 
  1375     0311                     	;# 
  1376     0311                     	;# 
  1377     0312                     	;# 
  1378     0313                     	;# 
  1379     0314                     	;# 
  1380     0315                     	;# 
  1381     0315                     	;# 
  1382     0316                     	;# 
  1383     0318                     	;# 
  1384     0318                     	;# 
  1385     0319                     	;# 
  1386     031A                     	;# 
  1387     031C                     	;# 
  1388     031C                     	;# 
  1389     031D                     	;# 
  1390     031E                     	;# 
  1391     0394                     	;# 
  1392     0395                     	;# 
  1393     0396                     	;# 
  1394     0415                     	;# 
  1395     0416                     	;# 
  1396     0417                     	;# 
  1397     041C                     	;# 
  1398     041D                     	;# 
  1399     041E                     	;# 
  1400     0791                     	;# 
  1401     0792                     	;# 
  1402     0793                     	;# 
  1403     0794                     	;# 
  1404     0795                     	;# 
  1405     0798                     	;# 
  1406     0799                     	;# 
  1407     07A0                     	;# 
  1408     07A1                     	;# 
  1409     07A3                     	;# 
  1410     07A4                     	;# 
  1411     07A6                     	;# 
  1412     07A7                     	;# 
  1413     07A9                     	;# 
  1414     07AA                     	;# 
  1415     0FE4                     	;# 
  1416     0FE5                     	;# 
  1417     0FE6                     	;# 
  1418     0FE7                     	;# 
  1419     0FE8                     	;# 
  1420     0FE9                     	;# 
  1421     0FEA                     	;# 
  1422     0FEB                     	;# 
  1423     0FED                     	;# 
  1424     0FEE                     	;# 
  1425     0FEF                     	;# 
  1426                           
  1427                           	psect	idataBANK0
  1428     0290                     __pidataBANK0:
  1429                           
  1430                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  1431     0290  3416               	retlw	22
  1432     0291  3424               	retlw	36
  1433                           
  1434                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  1435     0292  340B               	retlw	11
  1436     0293  3424               	retlw	36
  1437                           
  1438                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  1439     0294  3400               	retlw	0
  1440     0295  3424               	retlw	36
  1441                           
  1442                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  1443     0296  3410               	retlw	16
  1444     0297  342C               	retlw	44
  1445                           
  1446                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  1447     0298  340D               	retlw	13
  1448     0299  342C               	retlw	44
  1449                           
  1450                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  1451     029A  3406               	retlw	6
  1452     029B  342C               	retlw	44
  1453                           
  1454                           	psect	stringtext1
  1455     020D                     __pstringtext1:
  1456     020D                     _i2c_fsmStateTable:
  1457     020D  3425               	retlw	low _I2C_DO_IDLE
  1458     020E  3403               	retlw	high _I2C_DO_IDLE
  1459     020F  34AE               	retlw	low _I2C_DO_SEND_ADR_READ
  1460     0210  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  1461     0211  34B7               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1462     0212  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1463     0213  3471               	retlw	low _I2C_DO_TX
  1464     0214  3400               	retlw	high _I2C_DO_TX
  1465     0215  34C9               	retlw	low _I2C_DO_RX
  1466     0216  3400               	retlw	high _I2C_DO_RX
  1467     0217  34C6               	retlw	low _I2C_DO_RCEN
  1468     0218  3402               	retlw	high _I2C_DO_RCEN
  1469     0219  348C               	retlw	low _I2C_DO_TX_EMPTY
  1470     021A  3401               	retlw	high _I2C_DO_TX_EMPTY
  1471     021B  3420               	retlw	low _I2C_DO_SEND_RESTART_READ
  1472     021C  3403               	retlw	high _I2C_DO_SEND_RESTART_READ
  1473     021D  341B               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1474     021E  3403               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1475     021F  3416               	retlw	low _I2C_DO_SEND_RESTART
  1476     0220  3403               	retlw	high _I2C_DO_SEND_RESTART
  1477     0221  3411               	retlw	low _I2C_DO_SEND_STOP
  1478     0222  3403               	retlw	high _I2C_DO_SEND_STOP
  1479     0223  340C               	retlw	low _I2C_DO_RX_ACK
  1480     0224  3403               	retlw	high _I2C_DO_RX_ACK
  1481     0225  3407               	retlw	low _I2C_DO_RX_NACK_STOP
  1482     0226  3403               	retlw	high _I2C_DO_RX_NACK_STOP
  1483     0227  3402               	retlw	low _I2C_DO_RX_NACK_RESTART
  1484     0228  3403               	retlw	high _I2C_DO_RX_NACK_RESTART
  1485     0229  34FD               	retlw	low _I2C_DO_RESET
  1486     022A  3402               	retlw	high _I2C_DO_RESET
  1487     022B  34BB               	retlw	low _I2C_DO_ADDRESS_NACK
  1488     022C  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1489     022D                     __end_of_i2c_fsmStateTable:
  1490                           
  1491                           	psect	nvBANK0
  1492     006E                     __pnvBANK0:
  1493     006E                     _EUSART_TxDefaultInterruptHandler:
  1494     006E                     	ds	2
  1495                           
  1496                           	psect	nvBANK1
  1497     00A0                     __pnvBANK1:
  1498     00A0                     _EUSART_ErrorHandler:
  1499     00A0                     	ds	2
  1500     00A2                     _EUSART_OverrunErrorHandler:
  1501     00A2                     	ds	2
  1502     00A4                     _EUSART_FramingErrorHandler:
  1503     00A4                     	ds	2
  1504     00A6                     _EUSART_RxDefaultInterruptHandler:
  1505     00A6                     	ds	2
  1506     000B                     _INTCONbits	set	11
  1507     0011                     _PIR1bits	set	17
  1508     0012                     _PIR2bits	set	18
  1509     0092                     _PIE2bits	set	146
  1510     0091                     _PIE1bits	set	145
  1511     0097                     _WDTCON	set	151
  1512     0098                     _OSCTUNE	set	152
  1513     0099                     _OSCCON	set	153
  1514     0095                     _OPTION_REGbits	set	149
  1515     008E                     _TRISC	set	142
  1516     008D                     _TRISB	set	141
  1517     008C                     _TRISA	set	140
  1518     0090                     _TRISE	set	144
  1519     0116                     _BORCON	set	278
  1520     011D                     _APFCON	set	285
  1521     010E                     _LATC	set	270
  1522     010D                     _LATB	set	269
  1523     010C                     _LATA	set	268
  1524     0110                     _LATE	set	272
  1525     0199                     _RCREG	set	409
  1526     019D                     _RCSTAbits	set	413
  1527     019A                     _TXREG	set	410
  1528     019E                     _TXSTAbits	set	414
  1529     019C                     _SPBRGH	set	412
  1530     019B                     _SPBRGL	set	411
  1531     019E                     _TXSTA	set	414
  1532     019D                     _RCSTA	set	413
  1533     019F                     _BAUDCON	set	415
  1534     018C                     _ANSELA	set	396
  1535     018D                     _ANSELB	set	397
  1536     0214                     _SSPSTATbits	set	532
  1537     0216                     _SSPCON2bits	set	534
  1538     0211                     _SSPBUF	set	529
  1539     0215                     _SSPCON1bits	set	533
  1540     0212                     _SSPADD	set	530
  1541     0216                     _SSPCON2	set	534
  1542     0215                     _SSPCON1	set	533
  1543     0214                     _SSPSTAT	set	532
  1544     020D                     _WPUB	set	525
  1545     0210                     _WPUE	set	528
  1546                           
  1547                           	psect	cinit
  1548     004A                     start_initialization:	
  1549                           ; #config settings
  1550                           
  1551     004A                     __initialization:
  1552                           
  1553                           ; Initialize objects allocated to BANK0
  1554     004A  3090               	movlw	low __pidataBANK0
  1555     004B  0084               	movwf	4
  1556     004C  3082               	movlw	(high __pidataBANK0)| (0+128)
  1557     004D  0085               	movwf	5
  1558     004E  3062               	movlw	low __pdataBANK0
  1559     004F  0086               	movwf	6
  1560     0050  3000               	movlw	high __pdataBANK0
  1561     0051  0087               	movwf	7
  1562     0052  300C               	movlw	12
  1563     0053  3182  22CD  3180   	fcall	init_ram
  1564                           
  1565                           ; Clear objects allocated to COMMON
  1566     0056  01F0               	clrf	__pbssCOMMON& (0+127)
  1567     0057  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1568     0058  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1569     0059  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1570     005A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1571     005B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1572     005C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1573                           
  1574                           ; Clear objects allocated to BANK0
  1575     005D  3020               	movlw	low __pbssBANK0
  1576     005E  0084               	movwf	4
  1577     005F  3000               	movlw	high __pbssBANK0
  1578     0060  0085               	movwf	5
  1579     0061  3042               	movlw	66
  1580     0062  3182  22D3  3180   	fcall	clear_ram0
  1581                           
  1582                           ; Clear objects allocated to BANK1
  1583     0065  30A8               	movlw	low __pbssBANK1
  1584     0066  0084               	movwf	4
  1585     0067  3000               	movlw	high __pbssBANK1
  1586     0068  0085               	movwf	5
  1587     0069  3008               	movlw	8
  1588     006A  3182  22D3  3180   	fcall	clear_ram0
  1589     006D                     end_of_initialization:	
  1590                           ;End of C runtime variable initialization code
  1591                           
  1592     006D                     __end_of__initialization:
  1593     006D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1594     006E  0020               	movlb	0
  1595     006F  3182  2AD9         	ljmp	_main	;jump to C main() function
  1596                           
  1597                           	psect	bssCOMMON
  1598     0070                     __pbssCOMMON:
  1599     0070                     _eusartRxLastError:
  1600     0070                     	ds	1
  1601     0071                     _eusartRxCount:
  1602     0071                     	ds	1
  1603     0072                     _eusartRxTail:
  1604     0072                     	ds	1
  1605     0073                     _eusartRxHead:
  1606     0073                     	ds	1
  1607     0074                     _eusartTxBufferRemaining:
  1608     0074                     	ds	1
  1609     0075                     _eusartTxTail:
  1610     0075                     	ds	1
  1611     0076                     _eusartTxHead:
  1612     0076                     	ds	1
  1613                           
  1614                           	psect	bssBANK0
  1615     0020                     __pbssBANK0:
  1616     0020                     _I2C_Status:
  1617     0020                     	ds	36
  1618     0044                     _eusartRxStatusBuffer:
  1619     0044                     	ds	8
  1620     004C                     _eusartTxBuffer:
  1621     004C                     	ds	8
  1622     0054                     _MB_Register:
  1623     0054                     	ds	4
  1624     0058                     _MSSP_InterruptHandler:
  1625     0058                     	ds	2
  1626     005A                     _MB_UID:
  1627     005A                     	ds	1
  1628     005B                     _f_Indicator:
  1629     005B                     	ds	1
  1630     005C                     _SW_Ad:
  1631     005C                     	ds	1
  1632     005D                     _LED_Statuc:
  1633     005D                     	ds	1
  1634     005E                     _Humidity:
  1635     005E                     	ds	2
  1636     0060                     _Temperature:
  1637     0060                     	ds	2
  1638                           
  1639                           	psect	dataBANK0
  1640     0062                     __pdataBANK0:
  1641     0062                     _SHT30_CMD_MEASURE_L_Disable:
  1642     0062                     	ds	2
  1643     0064                     _SHT30_CMD_MEASURE_M_Disable:
  1644     0064                     	ds	2
  1645     0066                     _SHT30_CMD_MEASURE_H_Disable:
  1646     0066                     	ds	2
  1647     0068                     _SHT30_CMD_MEASURE_L_Enable:
  1648     0068                     	ds	2
  1649     006A                     _SHT30_CMD_MEASURE_M_Enable:
  1650     006A                     	ds	2
  1651     006C                     _SHT30_CMD_MEASURE_H_Enable:
  1652     006C                     	ds	2
  1653                           
  1654                           	psect	bssBANK1
  1655     00A8                     __pbssBANK1:
  1656     00A8                     _eusartRxBuffer:
  1657     00A8                     	ds	8
  1658                           
  1659                           	psect	inittext
  1660     02CD                     init_ram:
  1661     02CD  00FE               	movwf	btemp
  1662     02CE                     initloop:
  1663     02CE  0012               	moviw fsr0++
  1664     02CF  001E               	movwi fsr1++
  1665     02D0  0BFE               	decfsz	btemp,f
  1666     02D1  2ACE               	goto	initloop
  1667     02D2  3400               	retlw	0
  1668                           
  1669                           	psect	clrtext
  1670     02D3                     clear_ram0:	
  1671                           ;	Called with FSR0 containing the base address, and
  1672                           ;	WREG with the size to clear
  1673                           
  1674     02D3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1675     02D4                     clrloop0:
  1676     02D4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1677     02D5  3101               	addfsr 0,1
  1678     02D6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1679     02D7  2AD4               	goto	clrloop0	;have we reached the end yet?
  1680     02D8  3400               	retlw	0	;all done for this memory range, return
  1681                           
  1682                           	psect	cstackBANK1
  1683     00B0                     __pcstackBANK1:
  1684     00B0                     ?_EUSART_SetRxInterruptHandler:
  1685     00B0                     ?_EUSART_SetTxInterruptHandler:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688     00B0                     ?_EUSART_SetFramingErrorHandler:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691     00B0                     ?_EUSART_SetOverrunErrorHandler:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694     00B0                     ?_EUSART_SetErrorHandler:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697     00B0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     00B0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1701                           ; 2 bytes @ 0x0
  1702                           
  1703     00B0                     EUSART_SetErrorHandler@interruptHandler:	
  1704                           ; 2 bytes @ 0x0
  1705                           
  1706     00B0                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1707                           ; 2 bytes @ 0x0
  1708                           
  1709     00B0                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1710                           ; 2 bytes @ 0x0
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0x0
  1714     00B0                     	ds	2
  1715                           
  1716                           	psect	cstackCOMMON
  1717     0077                     __pcstackCOMMON:
  1718     0077                     ?_I2C_Initialize:
  1719     0077                     ?_OSCILLATOR_Initialize:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722     0077                     ?_WDT_Initialize:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725     0077                     ?_EUSART_Initialize:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728     0077                     ?_I2C_DO_IDLE:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731     0077                     ??_I2C_DO_IDLE:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734     0077                     ?_I2C_DO_SEND_ADR_READ:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737     0077                     ??_I2C_DO_SEND_ADR_READ:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740     0077                     ?_I2C_DO_SEND_ADR_WRITE:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743     0077                     ?_I2C_DO_TX:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746     0077                     ?_I2C_DO_RX:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749     0077                     ??_I2C_DO_RX:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752     0077                     ?_I2C_DO_RCEN:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755     0077                     ??_I2C_DO_RCEN:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758     0077                     ?_I2C_DO_TX_EMPTY:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761     0077                     ??_I2C_DO_TX_EMPTY:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764     0077                     ?_I2C_DO_SEND_RESTART_READ:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767     0077                     ??_I2C_DO_SEND_RESTART_READ:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770     0077                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773     0077                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776     0077                     ?_I2C_DO_SEND_RESTART:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779     0077                     ??_I2C_DO_SEND_RESTART:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782     0077                     ?_I2C_DO_SEND_STOP:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785     0077                     ??_I2C_DO_SEND_STOP:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788     0077                     ?_I2C_DO_RX_ACK:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791     0077                     ??_I2C_DO_RX_ACK:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794     0077                     ?_I2C_DO_RX_NACK_STOP:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797     0077                     ??_I2C_DO_RX_NACK_STOP:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800     0077                     ?_I2C_DO_RX_NACK_RESTART:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803     0077                     ??_I2C_DO_RX_NACK_RESTART:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806     0077                     ?_I2C_DO_RESET:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809     0077                     ??_I2C_DO_RESET:	
  1810                           ; 1 bytes @ 0x0
  1811                           
  1812     0077                     ?_I2C_DO_ADDRESS_NACK:	
  1813                           ; 1 bytes @ 0x0
  1814                           
  1815     0077                     ??_I2C_DO_ADDRESS_NACK:	
  1816                           ; 1 bytes @ 0x0
  1817                           
  1818     0077                     ?_I2C_CallbackReturnStop:	
  1819                           ; 1 bytes @ 0x0
  1820                           
  1821     0077                     ?_I2C_CallbackReturnReset:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824     0077                     ?_I2C_MasterIsr:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827     0077                     ?_I2C_MasterClearIrq:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830     0077                     ??_I2C_MasterClearIrq:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833     0077                     ?_I2C_MasterFsm:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836     0077                     ?_I2C_MasterIsNack:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839     0077                     ??_I2C_MasterIsNack:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842     0077                     ?_I2C_MasterSendTxData:	
  1843                           ; 1 bytes @ 0x0
  1844                           
  1845     0077                     ??_I2C_MasterSendTxData:	
  1846                           ; 1 bytes @ 0x0
  1847                           
  1848     0077                     ?_I2C_MasterGetRxData:	
  1849                           ; 1 bytes @ 0x0
  1850                           
  1851     0077                     ??_I2C_MasterGetRxData:	
  1852                           ; 1 bytes @ 0x0
  1853                           
  1854     0077                     ?_I2C_MasterSendAck:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857     0077                     ??_I2C_MasterSendAck:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860     0077                     ?_I2C_MasterStartRx:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863     0077                     ??_I2C_MasterStartRx:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866     0077                     ?_I2C_MasterSetIrq:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869     0077                     ??_I2C_MasterSetIrq:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872     0077                     ?_I2C_MasterEnableRestart:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875     0077                     ??_I2C_MasterEnableRestart:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878     0077                     ?_I2C_MasterStop:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881     0077                     ??_I2C_MasterStop:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884     0077                     ?_I2C_MasterSendNack:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887     0077                     ??_I2C_MasterSendNack:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890     0077                     ?_EUSART_Receive_ISR:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893     0077                     ?_EUSART_Transmit_ISR:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     0077                     ??_EUSART_Transmit_ISR:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     0077                     ?_EUSART_DefaultFramingErrorHandler:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     0077                     ??_EUSART_DefaultFramingErrorHandler:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911     0077                     ?_EUSART_DefaultErrorHandler:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     0077                     ?_EUSART_RxDataHandler:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     0077                     ??_EUSART_RxDataHandler:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920     0077                     ?_PIN_MANAGER_Initialize:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923     0077                     ?_SYSTEM_Initialize:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926     0077                     ?_INTERRUPT_InterruptManager:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929     0077                     ?_main:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932     0077                     I2C_MasterSendTxData@data:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935     0077                     I2C_CallbackReturnStop@funPtr:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938     0077                     I2C_CallbackReturnReset@funPtr:	
  1939                           ; 2 bytes @ 0x0
  1940                           
  1941                           
  1942                           ; 2 bytes @ 0x0
  1943     0077                     	ds	1
  1944     0078                     ??_I2C_DO_SEND_ADR_WRITE:
  1945     0078                     ??_I2C_DO_TX:	
  1946                           ; 1 bytes @ 0x1
  1947                           
  1948     0078                     ??_EUSART_Receive_ISR:	
  1949                           ; 1 bytes @ 0x1
  1950                           
  1951     0078                     ??_EUSART_DefaultErrorHandler:	
  1952                           ; 1 bytes @ 0x1
  1953                           
  1954                           
  1955                           ; 1 bytes @ 0x1
  1956     0078                     	ds	1
  1957     0079                     ??_I2C_CallbackReturnStop:
  1958     0079                     ??_I2C_CallbackReturnReset:	
  1959                           ; 1 bytes @ 0x2
  1960                           
  1961                           
  1962                           ; 1 bytes @ 0x2
  1963     0079                     	ds	1
  1964     007A                     ??_I2C_MasterFsm:
  1965                           
  1966                           ; 1 bytes @ 0x3
  1967     007A                     	ds	2
  1968     007C                     ??_I2C_MasterIsr:
  1969     007C                     ??_INTERRUPT_InterruptManager:	
  1970                           ; 1 bytes @ 0x5
  1971                           
  1972                           
  1973                           	psect	cstackBANK0
  1974     0000                     __pcstackBANK0:	
  1975                           ; 1 bytes @ 0x5
  1976                           
  1977     0000                     ??_I2C_Initialize:
  1978     0000                     ??_OSCILLATOR_Initialize:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981     0000                     ??_WDT_Initialize:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984     0000                     ??_EUSART_Initialize:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987     0000                     ??_EUSART_SetRxInterruptHandler:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990     0000                     ??_EUSART_SetTxInterruptHandler:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0000                     ??_EUSART_SetFramingErrorHandler:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0000                     ??_EUSART_SetOverrunErrorHandler:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0000                     ??_EUSART_SetErrorHandler:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0000                     ??_PIN_MANAGER_Initialize:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005     0000                     ??_SYSTEM_Initialize:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008     0000                     ??_main:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011                           
  2012                           	psect	maintext
  2013     02D9                     __pmaintext:	
  2014                           ; 1 bytes @ 0x0
  2015 ;;
  2016 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2017 ;;
  2018 ;; *************** function _main *****************
  2019 ;; Defined at:
  2020 ;;		line 49 in file "main.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : B1F/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2034 ;;      Params:         0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels required when called: 9
  2040 ;; This function calls:
  2041 ;;		_SYSTEM_Initialize
  2042 ;; This function is called by:
  2043 ;;		Startup code after reset
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047     02D9                     _main:	
  2048                           ;psect for function _main
  2049                           
  2050     02D9                     l2899:	
  2051                           ;incstack = 0
  2052                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2053                           
  2054                           
  2055                           ;main.c: 52:     SYSTEM_Initialize();
  2056     02D9  3182  2280  3182   	fcall	_SYSTEM_Initialize
  2057     02DC                     l592:	
  2058                           ;main.c: 69:     while (1)
  2059                           
  2060     02DC                     l593:	
  2061                           ;main.c: 70:     {;main.c: 72:     }
  2062                           
  2063     02DC  2ADC               	goto	l592
  2064     02DD  3180  2848         	ljmp	start
  2065     02DF                     __end_of_main:
  2066                           
  2067                           	psect	text1
  2068     0280                     __ptext1:	
  2069 ;; *************** function _SYSTEM_Initialize *****************
  2070 ;; Defined at:
  2071 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2085 ;;      Params:         0       0       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 8
  2092 ;; This function calls:
  2093 ;;		_EUSART_Initialize
  2094 ;;		_I2C_Initialize
  2095 ;;		_OSCILLATOR_Initialize
  2096 ;;		_PIN_MANAGER_Initialize
  2097 ;;		_WDT_Initialize
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103     0280                     _SYSTEM_Initialize:	
  2104                           ;psect for function _SYSTEM_Initialize
  2105                           
  2106     0280                     l2897:	
  2107                           ;incstack = 0
  2108                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2109                           
  2110                           
  2111                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2112     0280  3182  229C  3182   	fcall	_I2C_Initialize
  2113                           
  2114                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2115     0283  3182  224D  3182   	fcall	_PIN_MANAGER_Initialize
  2116                           
  2117                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2118     0286  3182  22BF  3182   	fcall	_OSCILLATOR_Initialize
  2119                           
  2120                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2121     0289  3183  232F  3182   	fcall	_WDT_Initialize
  2122                           
  2123                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2124     028C  3181  2114  3182   	fcall	_EUSART_Initialize
  2125     028F                     l57:
  2126     028F  0008               	return
  2127     0290                     __end_of_SYSTEM_Initialize:
  2128                           
  2129                           	psect	text2
  2130     032F                     __ptext2:	
  2131 ;; *************** function _WDT_Initialize *****************
  2132 ;; Defined at:
  2133 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2147 ;;      Params:         0       0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 6
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_SYSTEM_Initialize
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161     032F                     _WDT_Initialize:	
  2162                           ;psect for function _WDT_Initialize
  2163                           
  2164     032F                     l2863:	
  2165                           ;incstack = 0
  2166                           ; Regs used in _WDT_Initialize: [wreg]
  2167                           
  2168                           
  2169                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  2170     032F  3016               	movlw	22
  2171     0330  0021               	movlb	1	; select bank1
  2172     0331  0097               	movwf	23	;volatile
  2173     0332                     l63:
  2174     0332  0008               	return
  2175     0333                     __end_of_WDT_Initialize:
  2176                           
  2177                           	psect	text3
  2178     024D                     __ptext3:	
  2179 ;; *************** function _PIN_MANAGER_Initialize *****************
  2180 ;; Defined at:
  2181 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2195 ;;      Params:         0       0       0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 6
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_SYSTEM_Initialize
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209     024D                     _PIN_MANAGER_Initialize:	
  2210                           ;psect for function _PIN_MANAGER_Initialize
  2211                           
  2212     024D                     l2825:	
  2213                           ;incstack = 0
  2214                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2215                           
  2216                           
  2217                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2218     024D  0022               	movlb	2	; select bank2
  2219     024E  0190               	clrf	16	;volatile
  2220                           
  2221                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2222     024F  018C               	clrf	12	;volatile
  2223                           
  2224                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2225     0250  018D               	clrf	13	;volatile
  2226     0251                     l2827:
  2227                           
  2228                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  2229     0251  3040               	movlw	64
  2230     0252  008E               	movwf	14	;volatile
  2231     0253                     l2829:
  2232                           
  2233                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2234     0253  3008               	movlw	8
  2235     0254  0021               	movlb	1	; select bank1
  2236     0255  0090               	movwf	16	;volatile
  2237     0256                     l2831:
  2238                           
  2239                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2240     0256  30FF               	movlw	255
  2241     0257  008C               	movwf	12	;volatile
  2242     0258                     l2833:
  2243                           
  2244                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  2245     0258  30FF               	movlw	255
  2246     0259  008D               	movwf	13	;volatile
  2247     025A                     l2835:
  2248                           
  2249                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  2250     025A  309C               	movlw	156
  2251     025B  008E               	movwf	14	;volatile
  2252     025C                     l2837:
  2253                           
  2254                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  2255     025C  303F               	movlw	63
  2256     025D  0023               	movlb	3	; select bank3
  2257     025E  008D               	movwf	13	;volatile
  2258     025F                     l2839:
  2259                           
  2260                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  2261     025F  3030               	movlw	48
  2262     0260  008C               	movwf	12	;volatile
  2263     0261                     l2841:
  2264                           
  2265                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2266     0261  0024               	movlb	4	; select bank4
  2267     0262  0190               	clrf	16	;volatile
  2268     0263                     l2843:
  2269                           
  2270                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2271     0263  018D               	clrf	13	;volatile
  2272     0264                     l2845:
  2273                           
  2274                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2275     0264  0021               	movlb	1	; select bank1
  2276     0265  1795               	bsf	21,7	;volatile
  2277     0266                     l2847:
  2278                           
  2279                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2280     0266  0022               	movlb	2	; select bank2
  2281     0267  019D               	clrf	29	;volatile
  2282     0268                     l31:
  2283     0268  0008               	return
  2284     0269                     __end_of_PIN_MANAGER_Initialize:
  2285                           
  2286                           	psect	text4
  2287     02BF                     __ptext4:	
  2288 ;; *************** function _OSCILLATOR_Initialize *****************
  2289 ;; Defined at:
  2290 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2304 ;;      Params:         0       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 6
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_SYSTEM_Initialize
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318     02BF                     _OSCILLATOR_Initialize:	
  2319                           ;psect for function _OSCILLATOR_Initialize
  2320                           
  2321     02BF                     l2857:	
  2322                           ;incstack = 0
  2323                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2324                           
  2325                           
  2326                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  2327     02BF  3070               	movlw	112
  2328     02C0  0021               	movlb	1	; select bank1
  2329     02C1  0099               	movwf	25	;volatile
  2330     02C2                     l2859:
  2331                           
  2332                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2333     02C2  0198               	clrf	24	;volatile
  2334     02C3                     l2861:
  2335                           
  2336                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2337     02C3  0022               	movlb	2	; select bank2
  2338     02C4  0196               	clrf	22	;volatile
  2339     02C5                     l60:
  2340     02C5  0008               	return
  2341     02C6                     __end_of_OSCILLATOR_Initialize:
  2342                           
  2343                           	psect	text5
  2344     029C                     __ptext5:	
  2345 ;; *************** function _I2C_Initialize *****************
  2346 ;; Defined at:
  2347 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2361 ;;      Params:         0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 6
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_SYSTEM_Initialize
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375     029C                     _I2C_Initialize:	
  2376                           ;psect for function _I2C_Initialize
  2377                           
  2378     029C                     l2849:	
  2379                           ;incstack = 0
  2380                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2381                           
  2382                           
  2383                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2384     029C  0024               	movlb	4	; select bank4
  2385     029D  0194               	clrf	20	;volatile
  2386     029E                     l2851:
  2387                           
  2388                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2389     029E  3008               	movlw	8
  2390     029F  0095               	movwf	21	;volatile
  2391     02A0                     l2853:
  2392                           
  2393                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2394     02A0  0196               	clrf	22	;volatile
  2395                           
  2396                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2397     02A1  3013               	movlw	19
  2398     02A2  0092               	movwf	18	;volatile
  2399     02A3                     l2855:
  2400                           
  2401                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2402     02A3  1295               	bcf	21,5	;volatile
  2403     02A4                     l172:
  2404     02A4  0008               	return
  2405     02A5                     __end_of_I2C_Initialize:
  2406                           
  2407                           	psect	text6
  2408     0114                     __ptext6:	
  2409 ;; *************** function _EUSART_Initialize *****************
  2410 ;; Defined at:
  2411 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2425 ;;      Params:         0       0       0       0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0
  2428 ;;      Totals:         0       0       0       0       0       0       0       0
  2429 ;;Total ram usage:        0 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 7
  2432 ;; This function calls:
  2433 ;;		_EUSART_SetErrorHandler
  2434 ;;		_EUSART_SetFramingErrorHandler
  2435 ;;		_EUSART_SetOverrunErrorHandler
  2436 ;;		_EUSART_SetRxInterruptHandler
  2437 ;;		_EUSART_SetTxInterruptHandler
  2438 ;; This function is called by:
  2439 ;;		_SYSTEM_Initialize
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443     0114                     _EUSART_Initialize:	
  2444                           ;psect for function _EUSART_Initialize
  2445                           
  2446     0114                     l2865:	
  2447                           ;incstack = 0
  2448                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2449                           
  2450                           
  2451                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2452     0114  0021               	movlb	1	; select bank1
  2453     0115  1291               	bcf	17,5	;volatile
  2454     0116                     l2867:
  2455                           
  2456                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2457     0116  3053               	movlw	low _EUSART_Receive_ISR
  2458     0117  00B0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  2459     0118  3001               	movlw	high _EUSART_Receive_ISR
  2460     0119  00B1               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  2461     011A  3182  22DF  3181   	fcall	_EUSART_SetRxInterruptHandler
  2462     011D                     l2869:
  2463                           
  2464                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2465     011D  0021               	movlb	1	; select bank1
  2466     011E  1211               	bcf	17,4	;volatile
  2467                           
  2468                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2469     011F  302D               	movlw	low _EUSART_Transmit_ISR
  2470     0120  00B0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  2471     0121  3002               	movlw	high _EUSART_Transmit_ISR
  2472     0122  00B1               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  2473     0123  3182  22A5  3181   	fcall	_EUSART_SetTxInterruptHandler
  2474     0126                     l2871:
  2475                           
  2476                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  2477     0126  3008               	movlw	8
  2478     0127  0023               	movlb	3	; select bank3
  2479     0128  009F               	movwf	31	;volatile
  2480     0129                     l2873:
  2481                           
  2482                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2483     0129  3090               	movlw	144
  2484     012A  009D               	movwf	29	;volatile
  2485     012B                     l2875:
  2486                           
  2487                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2488     012B  3024               	movlw	36
  2489     012C  009E               	movwf	30	;volatile
  2490     012D                     l2877:
  2491                           
  2492                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  2493     012D  30CF               	movlw	207
  2494     012E  009B               	movwf	27	;volatile
  2495     012F                     l2879:
  2496                           
  2497                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  2498     012F  019C               	clrf	28	;volatile
  2499     0130                     l2881:
  2500                           
  2501                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2502     0130  305D               	movlw	low _EUSART_DefaultFramingErrorHandler
  2503     0131  0021               	movlb	1	; select bank1
  2504     0132  00B0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  2505     0133  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  2506     0134  00B1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  2507     0135  3182  22EB  3181   	fcall	_EUSART_SetFramingErrorHandler
  2508     0138                     l2883:
  2509                           
  2510                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2511     0138  303F               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2512     0139  0021               	movlb	1	; select bank1
  2513     013A  00B0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  2514     013B  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2515     013C  00B1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  2516     013D  3182  22E5  3181   	fcall	_EUSART_SetOverrunErrorHandler
  2517     0140                     l2885:
  2518                           
  2519                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2520     0140  3043               	movlw	low _EUSART_DefaultErrorHandler
  2521     0141  0021               	movlb	1	; select bank1
  2522     0142  00B0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  2523     0143  3003               	movlw	high _EUSART_DefaultErrorHandler
  2524     0144  00B1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  2525     0145  3182  22F1  3181   	fcall	_EUSART_SetErrorHandler
  2526                           
  2527                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2528     0148  01F0               	clrf	_eusartRxLastError	;volatile
  2529                           
  2530                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2531     0149  01F6               	clrf	_eusartTxHead	;volatile
  2532                           
  2533                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2534     014A  01F5               	clrf	_eusartTxTail	;volatile
  2535     014B                     l2887:
  2536                           
  2537                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2538     014B  3008               	movlw	8
  2539     014C  00F4               	movwf	_eusartTxBufferRemaining	;volatile
  2540     014D                     l2889:
  2541                           
  2542                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2543     014D  01F3               	clrf	_eusartRxHead	;volatile
  2544     014E                     l2891:
  2545                           
  2546                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2547     014E  01F2               	clrf	_eusartRxTail	;volatile
  2548     014F                     l2893:
  2549                           
  2550                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2551     014F  01F1               	clrf	_eusartRxCount	;volatile
  2552     0150                     l2895:
  2553                           
  2554                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  2555     0150  0021               	movlb	1	; select bank1
  2556     0151  1691               	bsf	17,5	;volatile
  2557     0152                     l508:
  2558     0152  0008               	return
  2559     0153                     __end_of_EUSART_Initialize:
  2560                           
  2561                           	psect	text7
  2562     02A5                     __ptext7:	
  2563 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2564 ;; Defined at:
  2565 ;;		line 276 in file "mcc_generated_files/eusart.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2568 ;;		 -> EUSART_Transmit_ISR(1), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2580 ;;      Params:         0       0       2       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0
  2583 ;;      Totals:         0       0       2       0       0       0       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 6
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_EUSART_Initialize
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594     02A5                     _EUSART_SetTxInterruptHandler:	
  2595                           ;psect for function _EUSART_SetTxInterruptHandler
  2596                           
  2597     02A5                     l2817:	
  2598                           ;incstack = 0
  2599                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2600                           
  2601                           
  2602                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2603     02A5  0021               	movlb	1	; select bank1
  2604     02A6  0831               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  2605     02A7  0020               	movlb	0	; select bank0
  2606     02A8  00EF               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2607     02A9  0021               	movlb	1	; select bank1
  2608     02AA  0830               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  2609     02AB  0020               	movlb	0	; select bank0
  2610     02AC  00EE               	movwf	_EUSART_TxDefaultInterruptHandler
  2611     02AD                     l574:
  2612     02AD  0008               	return
  2613     02AE                     __end_of_EUSART_SetTxInterruptHandler:
  2614                           
  2615                           	psect	text8
  2616     02DF                     __ptext8:	
  2617 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2618 ;; Defined at:
  2619 ;;		line 280 in file "mcc_generated_files/eusart.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2622 ;;		 -> EUSART_Receive_ISR(1), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2634 ;;      Params:         0       0       2       0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0
  2637 ;;      Totals:         0       0       2       0       0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 6
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_EUSART_Initialize
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648     02DF                     _EUSART_SetRxInterruptHandler:	
  2649                           ;psect for function _EUSART_SetRxInterruptHandler
  2650                           
  2651     02DF                     l2815:	
  2652                           ;incstack = 0
  2653                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2654                           
  2655                           
  2656                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2657     02DF  0021               	movlb	1	; select bank1
  2658     02E0  0831               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  2659     02E1  00A7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  2660     02E2  0830               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  2661     02E3  00A6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  2662     02E4                     l577:
  2663     02E4  0008               	return
  2664     02E5                     __end_of_EUSART_SetRxInterruptHandler:
  2665                           
  2666                           	psect	text9
  2667     02E5                     __ptext9:	
  2668 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2669 ;; Defined at:
  2670 ;;		line 268 in file "mcc_generated_files/eusart.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2673 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2685 ;;      Params:         0       0       2       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0
  2688 ;;      Totals:         0       0       2       0       0       0       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 6
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_EUSART_Initialize
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699     02E5                     _EUSART_SetOverrunErrorHandler:	
  2700                           ;psect for function _EUSART_SetOverrunErrorHandler
  2701                           
  2702     02E5                     l2821:	
  2703                           ;incstack = 0
  2704                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2705                           
  2706                           
  2707                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  2708     02E5  0021               	movlb	1	; select bank1
  2709     02E6  0831               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  2710     02E7  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2711     02E8  0830               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  2712     02E9  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2713     02EA                     l568:
  2714     02EA  0008               	return
  2715     02EB                     __end_of_EUSART_SetOverrunErrorHandler:
  2716                           
  2717                           	psect	text10
  2718     02EB                     __ptext10:	
  2719 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2720 ;; Defined at:
  2721 ;;		line 264 in file "mcc_generated_files/eusart.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2724 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2736 ;;      Params:         0       0       2       0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0
  2739 ;;      Totals:         0       0       2       0       0       0       0       0
  2740 ;;Total ram usage:        2 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 6
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_EUSART_Initialize
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750     02EB                     _EUSART_SetFramingErrorHandler:	
  2751                           ;psect for function _EUSART_SetFramingErrorHandler
  2752                           
  2753     02EB                     l2819:	
  2754                           ;incstack = 0
  2755                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2756                           
  2757                           
  2758                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  2759     02EB  0021               	movlb	1	; select bank1
  2760     02EC  0831               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  2761     02ED  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2762     02EE  0830               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  2763     02EF  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2764     02F0                     l565:
  2765     02F0  0008               	return
  2766     02F1                     __end_of_EUSART_SetFramingErrorHandler:
  2767                           
  2768                           	psect	text11
  2769     02F1                     __ptext11:	
  2770 ;; *************** function _EUSART_SetErrorHandler *****************
  2771 ;; Defined at:
  2772 ;;		line 272 in file "mcc_generated_files/eusart.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2775 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2787 ;;      Params:         0       0       2       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0
  2790 ;;      Totals:         0       0       2       0       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 6
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_EUSART_Initialize
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801     02F1                     _EUSART_SetErrorHandler:	
  2802                           ;psect for function _EUSART_SetErrorHandler
  2803                           
  2804     02F1                     l2823:	
  2805                           ;incstack = 0
  2806                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2807                           
  2808                           
  2809                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  2810     02F1  0021               	movlb	1	; select bank1
  2811     02F2  0831               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  2812     02F3  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2813     02F4  0830               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  2814     02F5  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  2815     02F6                     l571:
  2816     02F6  0008               	return
  2817     02F7                     __end_of_EUSART_SetErrorHandler:
  2818                           
  2819                           	psect	intentry
  2820     0004                     __pintentry:	
  2821 ;; *************** function _INTERRUPT_InterruptManager *****************
  2822 ;; Defined at:
  2823 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2837 ;;      Params:         0       0       0       0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 5
  2844 ;; This function calls:
  2845 ;;		NULL
  2846 ;;		_EUSART_Receive_ISR
  2847 ;;		_EUSART_Transmit_ISR
  2848 ;;		_I2C_MasterIsr
  2849 ;; This function is called by:
  2850 ;;		Interrupt level 1
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854     0004                     _INTERRUPT_InterruptManager:
  2855                           
  2856                           ;incstack = 0
  2857     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2858                           
  2859                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2860     0005  3180               	pagesel	$
  2861     0006                     i1l2671:
  2862                           
  2863                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2864     0006  1F0B               	btfss	11,6	;volatile
  2865     0007  2809               	goto	u63_21
  2866     0008  280A               	goto	u63_20
  2867     0009                     u63_21:
  2868     0009  2846               	goto	i1l433
  2869     000A                     u63_20:
  2870     000A                     i1l2673:
  2871                           
  2872                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  2873     000A  0021               	movlb	1	; select bank1
  2874     000B  1E11               	btfss	17,4	;volatile
  2875     000C  280E               	goto	u64_21
  2876     000D  280F               	goto	u64_20
  2877     000E                     u64_21:
  2878     000E  281A               	goto	i1l424
  2879     000F                     u64_20:
  2880     000F                     i1l2675:
  2881     000F  0020               	movlb	0	; select bank0
  2882     0010  1E11               	btfss	17,4	;volatile
  2883     0011  2813               	goto	u65_21
  2884     0012  2814               	goto	u65_20
  2885     0013                     u65_21:
  2886     0013  281A               	goto	i1l424
  2887     0014                     u65_20:
  2888     0014                     i1l2677:
  2889                           
  2890                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  2891     0014  086F               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2892     0015  008A               	movwf	10
  2893     0016  086E               	movf	_EUSART_TxDefaultInterruptHandler,w
  2894     0017  000A               	callw
  2895     0018  3180               	pagesel	$
  2896                           
  2897                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2898     0019  2846               	goto	i1l433
  2899     001A                     i1l424:	
  2900                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  2901                           
  2902     001A  0021               	movlb	1	; select bank1
  2903     001B  1E91               	btfss	17,5	;volatile
  2904     001C  281E               	goto	u66_21
  2905     001D  281F               	goto	u66_20
  2906     001E                     u66_21:
  2907     001E  282B               	goto	i1l426
  2908     001F                     u66_20:
  2909     001F                     i1l2679:
  2910     001F  0020               	movlb	0	; select bank0
  2911     0020  1E91               	btfss	17,5	;volatile
  2912     0021  2823               	goto	u67_21
  2913     0022  2824               	goto	u67_20
  2914     0023                     u67_21:
  2915     0023  282B               	goto	i1l426
  2916     0024                     u67_20:
  2917     0024                     i1l2681:
  2918                           
  2919                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  2920     0024  0021               	movlb	1	; select bank1
  2921     0025  0827               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  2922     0026  008A               	movwf	10
  2923     0027  0826               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  2924     0028  000A               	callw
  2925     0029  3180               	pagesel	$
  2926                           
  2927                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2928     002A  2846               	goto	i1l433
  2929     002B                     i1l426:	
  2930                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  2931                           
  2932     002B  0021               	movlb	1	; select bank1
  2933     002C  1D92               	btfss	18,3	;volatile
  2934     002D  282F               	goto	u68_21
  2935     002E  2830               	goto	u68_20
  2936     002F                     u68_21:
  2937     002F  283B               	goto	i1l428
  2938     0030                     u68_20:
  2939     0030                     i1l2683:
  2940     0030  0020               	movlb	0	; select bank0
  2941     0031  1D92               	btfss	18,3	;volatile
  2942     0032  2834               	goto	u69_21
  2943     0033  2835               	goto	u69_20
  2944     0034                     u69_21:
  2945     0034  283B               	goto	i1l428
  2946     0035                     u69_20:
  2947     0035                     i1l2685:
  2948                           
  2949                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  2950     0035  0859               	movf	_MSSP_InterruptHandler+1,w
  2951     0036  008A               	movwf	10
  2952     0037  0858               	movf	_MSSP_InterruptHandler,w
  2953     0038  000A               	callw
  2954     0039  3180               	pagesel	$
  2955                           
  2956                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  2957     003A  2846               	goto	i1l433
  2958     003B                     i1l428:	
  2959                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  2960                           
  2961     003B  0021               	movlb	1	; select bank1
  2962     003C  1D91               	btfss	17,3	;volatile
  2963     003D  283F               	goto	u70_21
  2964     003E  2840               	goto	u70_20
  2965     003F                     u70_21:
  2966     003F  2846               	goto	i1l427
  2967     0040                     u70_20:
  2968     0040                     i1l2687:
  2969     0040  0020               	movlb	0	; select bank0
  2970     0041  1D91               	btfss	17,3	;volatile
  2971     0042  2844               	goto	u71_21
  2972     0043  2845               	goto	u71_20
  2973     0044                     u71_21:
  2974     0044  2846               	goto	i1l427
  2975     0045                     u71_20:
  2976     0045  2835               	goto	i1l2685
  2977     0046                     i1l427:
  2978     0046                     i1l433:
  2979     0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2980     0047  0009               	retfie
  2981     0048                     __end_of_INTERRUPT_InterruptManager:
  2982                           
  2983                           	psect	text13
  2984     0333                     __ptext13:	
  2985 ;; *************** function _I2C_MasterIsr *****************
  2986 ;; Defined at:
  2987 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3001 ;;      Params:         0       0       0       0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 4
  3008 ;; This function calls:
  3009 ;;		_I2C_MasterFsm
  3010 ;; This function is called by:
  3011 ;;		_I2C_Open
  3012 ;;		_INTERRUPT_InterruptManager
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016     0333                     _I2C_MasterIsr:	
  3017                           ;psect for function _I2C_MasterIsr
  3018                           
  3019     0333                     i1l2483:	
  3020                           ;incstack = 0
  3021                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3022                           
  3023                           
  3024                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  3025     0333  3181  21E5  3183   	fcall	_I2C_MasterFsm
  3026     0336                     i1l225:
  3027     0336  0008               	return
  3028     0337                     __end_of_I2C_MasterIsr:
  3029                           
  3030                           	psect	text14
  3031     01E5                     __ptext14:	
  3032 ;; *************** function _I2C_MasterFsm *****************
  3033 ;; Defined at:
  3034 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3048 ;;      Params:         0       0       0       0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0       0       0       0
  3050 ;;      Temps:          2       0       0       0       0       0       0       0
  3051 ;;      Totals:         2       0       0       0       0       0       0       0
  3052 ;;Total ram usage:        2 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 3
  3055 ;; This function calls:
  3056 ;;		_I2C_DO_ADDRESS_NACK
  3057 ;;		_I2C_DO_IDLE
  3058 ;;		_I2C_DO_RCEN
  3059 ;;		_I2C_DO_RESET
  3060 ;;		_I2C_DO_RX
  3061 ;;		_I2C_DO_RX_ACK
  3062 ;;		_I2C_DO_RX_NACK_RESTART
  3063 ;;		_I2C_DO_RX_NACK_STOP
  3064 ;;		_I2C_DO_SEND_ADR_READ
  3065 ;;		_I2C_DO_SEND_ADR_WRITE
  3066 ;;		_I2C_DO_SEND_RESTART
  3067 ;;		_I2C_DO_SEND_RESTART_READ
  3068 ;;		_I2C_DO_SEND_RESTART_WRITE
  3069 ;;		_I2C_DO_SEND_STOP
  3070 ;;		_I2C_DO_TX
  3071 ;;		_I2C_DO_TX_EMPTY
  3072 ;;		_I2C_MasterClearIrq
  3073 ;;		_I2C_MasterIsNack
  3074 ;; This function is called by:
  3075 ;;		_I2C_MasterIsr
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079     01E5                     _I2C_MasterFsm:	
  3080                           ;psect for function _I2C_MasterFsm
  3081                           
  3082     01E5                     i1l2439:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3085                           
  3086                           
  3087                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  3088     01E5  3183  2347  3181   	fcall	_I2C_MasterClearIrq
  3089     01E8                     i1l2441:
  3090                           
  3091                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  3092     01E8  0020               	movlb	0	; select bank0
  3093     01E9  1C43               	btfss	_I2C_Status+35,0
  3094     01EA  29EC               	goto	u46_21
  3095     01EB  29ED               	goto	u46_20
  3096     01EC                     u46_21:
  3097     01EC  29F8               	goto	i1l2447
  3098     01ED                     u46_20:
  3099     01ED                     i1l2443:
  3100     01ED  3182  22F7  3181   	fcall	_I2C_MasterIsNack
  3101     01F0  3A00               	xorlw	0
  3102     01F1  1903               	skipnz
  3103     01F2  29F4               	goto	u47_21
  3104     01F3  29F5               	goto	u47_20
  3105     01F4                     u47_21:
  3106     01F4  29F8               	goto	i1l2447
  3107     01F5                     u47_20:
  3108     01F5                     i1l2445:
  3109                           
  3110                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  3111     01F5  300F               	movlw	15
  3112     01F6  0020               	movlb	0	; select bank0
  3113     01F7  00C1               	movwf	_I2C_Status+33
  3114     01F8                     i1l2447:
  3115                           
  3116                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  3117     01F8  0020               	movlb	0	; select bank0
  3118     01F9  0841               	movf	_I2C_Status+33,w
  3119     01FA  00FA               	movwf	??_I2C_MasterFsm
  3120     01FB  01FB               	clrf	??_I2C_MasterFsm+1
  3121     01FC  35FA               	lslf	??_I2C_MasterFsm,f
  3122     01FD  0DFB               	rlf	??_I2C_MasterFsm+1,f
  3123     01FE  300D               	movlw	low _i2c_fsmStateTable
  3124     01FF  077A               	addwf	??_I2C_MasterFsm,w
  3125     0200  0084               	movwf	4
  3126     0201  3002               	movlw	high _i2c_fsmStateTable
  3127     0202  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  3128     0203  3880               	iorlw	128
  3129     0204  0085               	movwf	5
  3130     0205  3F01               	moviw [1]fsr0
  3131     0206  008A               	movwf	10
  3132     0207  3F00               	moviw [0]fsr0
  3133     0208  000A               	callw
  3134     0209  3181               	pagesel	$
  3135     020A  0020               	movlb	0	; select bank0
  3136     020B  00C1               	movwf	_I2C_Status+33
  3137     020C                     i1l229:
  3138     020C  0008               	return
  3139     020D                     __end_of_I2C_MasterFsm:
  3140                           
  3141                           	psect	text15
  3142     0347                     __ptext15:	
  3143 ;; *************** function _I2C_MasterClearIrq *****************
  3144 ;; Defined at:
  3145 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		None
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3159 ;;      Params:         0       0       0       0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_I2C_MasterFsm
  3169 ;;		_I2C_Open
  3170 ;;		_I2C_Close
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     0347                     _I2C_MasterClearIrq:	
  3175                           ;psect for function _I2C_MasterClearIrq
  3176                           
  3177     0347                     i1l2225:	
  3178                           ;incstack = 0
  3179                           ; Regs used in _I2C_MasterClearIrq: []
  3180                           
  3181                           
  3182                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  3183     0347  0020               	movlb	0	; select bank0
  3184     0348  1191               	bcf	17,3	;volatile
  3185     0349                     i1l392:
  3186     0349  0008               	return
  3187     034A                     __end_of_I2C_MasterClearIrq:
  3188                           
  3189                           	psect	text16
  3190     01BB                     __ptext16:	
  3191 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3192 ;; Defined at:
  3193 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      enum E3112
  3200 ;; Registers used:
  3201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3207 ;;      Params:         0       0       0       0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0
  3209 ;;      Temps:          2       0       0       0       0       0       0       0
  3210 ;;      Totals:         2       0       0       0       0       0       0       0
  3211 ;;Total ram usage:        2 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 2
  3214 ;; This function calls:
  3215 ;;		NULL
  3216 ;;		_I2C_CallbackReturnReset
  3217 ;;		_I2C_CallbackReturnStop
  3218 ;;		_I2C_DO_SEND_RESTART
  3219 ;;		_I2C_DO_SEND_STOP
  3220 ;; This function is called by:
  3221 ;;		_I2C_MasterFsm
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225     01BB                     _I2C_DO_ADDRESS_NACK:	
  3226                           ;psect for function _I2C_DO_ADDRESS_NACK
  3227                           
  3228     01BB                     i1l2361:	
  3229                           ;incstack = 0
  3230                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3231                           
  3232                           
  3233                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  3234     01BB  0020               	movlb	0	; select bank0
  3235     01BC  1043               	bcf	_I2C_Status+35,0
  3236     01BD                     i1l2363:
  3237                           
  3238                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  3239     01BD  3002               	movlw	2
  3240     01BE  00C2               	movwf	_I2C_Status+34
  3241                           
  3242                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  3243     01BF  29C8               	goto	i1l2375
  3244     01C0                     i1l2365:
  3245                           
  3246                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  3247     01C0  3183  2316  3181   	fcall	_I2C_DO_SEND_RESTART
  3248     01C3  29E4               	goto	i1l320
  3249     01C4                     i1l2369:
  3250                           
  3251                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  3252     01C4  3183  2311  3181   	fcall	_I2C_DO_SEND_STOP
  3253     01C7  29E4               	goto	i1l320
  3254     01C8                     i1l2375:
  3255     01C8  0831               	movf	(low ((_I2C_Status| 0+16))+1),w
  3256     01C9  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3257     01CA  0830               	movf	low ((_I2C_Status| 0+16)),w
  3258     01CB  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3259     01CC  3004               	movlw	4
  3260     01CD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3261     01CE  0086               	movwf	6
  3262     01CF  0187               	clrf	7
  3263     01D0  3F41               	moviw [1]fsr1
  3264     01D1  008A               	movwf	10
  3265     01D2  3F40               	moviw [0]fsr1
  3266     01D3  000A               	callw
  3267     01D4  3181               	pagesel	$
  3268     01D5  00F7               	movwf	??_I2C_DO_ADDRESS_NACK
  3269     01D6  01F8               	clrf	??_I2C_DO_ADDRESS_NACK+1
  3270                           
  3271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3272                           ; Switch size 1, requested type "simple"
  3273                           ; Number of cases is 1, Range of values is 0 to 0
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            4     3 (average)
  3277                           ; direct_byte            8     6 (fixed)
  3278                           ; jumptable            260     6 (fixed)
  3279                           ;	Chosen strategy is simple_byte
  3280     01D7  0878               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3281     01D8  3A00               	xorlw	0	; case 0
  3282     01D9  1903               	skipnz
  3283     01DA  29DC               	goto	i1l2981
  3284     01DB  29C4               	goto	i1l2369
  3285     01DC                     i1l2981:
  3286                           
  3287                           ; Switch size 1, requested type "simple"
  3288                           ; Number of cases is 2, Range of values is 2 to 3
  3289                           ; switch strategies available:
  3290                           ; Name         Instructions Cycles
  3291                           ; simple_byte            7     4 (average)
  3292                           ; direct_byte           13     9 (fixed)
  3293                           ; jumptable            263     9 (fixed)
  3294                           ;	Chosen strategy is simple_byte
  3295     01DC  0877               	movf	??_I2C_DO_ADDRESS_NACK,w
  3296     01DD  3A02               	xorlw	2	; case 2
  3297     01DE  1903               	skipnz
  3298     01DF  29C0               	goto	i1l2365
  3299     01E0  3A01               	xorlw	1	; case 3
  3300     01E1  1903               	skipnz
  3301     01E2  29C0               	goto	i1l2365
  3302     01E3  29C4               	goto	i1l2369
  3303     01E4                     i1l320:
  3304     01E4  0008               	return
  3305     01E5                     __end_of_I2C_DO_ADDRESS_NACK:
  3306                           
  3307                           	psect	text17
  3308     02FD                     __ptext17:	
  3309 ;; *************** function _I2C_DO_RESET *****************
  3310 ;; Defined at:
  3311 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      enum E3112
  3318 ;; Registers used:
  3319 ;;		wreg, status,2
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3325 ;;      Params:         0       0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_I2C_MasterFsm
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338     02FD                     _I2C_DO_RESET:	
  3339                           ;psect for function _I2C_DO_RESET
  3340                           
  3341     02FD                     i1l2353:	
  3342                           ;incstack = 0
  3343                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3344                           
  3345                           
  3346                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  3347     02FD  0020               	movlb	0	; select bank0
  3348     02FE  10C3               	bcf	_I2C_Status+35,1
  3349     02FF                     i1l2355:
  3350                           
  3351                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  3352     02FF  01C2               	clrf	_I2C_Status+34
  3353     0300                     i1l2357:
  3354                           
  3355                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  3356     0300  300E               	movlw	14
  3357     0301                     i1l314:
  3358     0301  0008               	return
  3359     0302                     __end_of_I2C_DO_RESET:
  3360                           
  3361                           	psect	text18
  3362     0302                     __ptext18:	
  3363 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3364 ;; Defined at:
  3365 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      enum E3112
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3379 ;;      Params:         0       0       0       0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 1
  3386 ;; This function calls:
  3387 ;;		_I2C_MasterSendNack
  3388 ;; This function is called by:
  3389 ;;		_I2C_DO_RX
  3390 ;;		_I2C_MasterFsm
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394     0302                     _I2C_DO_RX_NACK_RESTART:	
  3395                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3396                           
  3397     0302                     i1l2195:	
  3398                           ;incstack = 0
  3399                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3400                           
  3401                           
  3402                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  3403     0302  3183  233B  3183   	fcall	_I2C_MasterSendNack
  3404     0305                     i1l2197:
  3405                           
  3406                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  3407     0305  3009               	movlw	9
  3408     0306                     i1l311:
  3409     0306  0008               	return
  3410     0307                     __end_of_I2C_DO_RX_NACK_RESTART:
  3411                           
  3412                           	psect	text19
  3413     0307                     __ptext19:	
  3414 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3415 ;; Defined at:
  3416 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      enum E3112
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, pclath, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3430 ;;      Params:         0       0       0       0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 1
  3437 ;; This function calls:
  3438 ;;		_I2C_MasterSendNack
  3439 ;; This function is called by:
  3440 ;;		_I2C_DO_RX
  3441 ;;		_I2C_MasterFsm
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445     0307                     _I2C_DO_RX_NACK_STOP:	
  3446                           ;psect for function _I2C_DO_RX_NACK_STOP
  3447                           
  3448     0307                     i1l2201:	
  3449                           ;incstack = 0
  3450                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3451                           
  3452                           
  3453                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  3454     0307  3183  233B  3183   	fcall	_I2C_MasterSendNack
  3455     030A                     i1l2203:
  3456                           
  3457                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  3458     030A  300A               	movlw	10
  3459     030B                     i1l308:
  3460     030B  0008               	return
  3461     030C                     __end_of_I2C_DO_RX_NACK_STOP:
  3462                           
  3463                           	psect	text20
  3464     030C                     __ptext20:	
  3465 ;; *************** function _I2C_DO_RX_ACK *****************
  3466 ;; Defined at:
  3467 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      enum E3112
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3481 ;;      Params:         0       0       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 1
  3488 ;; This function calls:
  3489 ;;		_I2C_MasterSendAck
  3490 ;; This function is called by:
  3491 ;;		_I2C_MasterFsm
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495     030C                     _I2C_DO_RX_ACK:	
  3496                           ;psect for function _I2C_DO_RX_ACK
  3497                           
  3498     030C                     i1l2347:	
  3499                           ;incstack = 0
  3500                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3501                           
  3502                           
  3503                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  3504     030C  3183  2337  3183   	fcall	_I2C_MasterSendAck
  3505     030F                     i1l2349:
  3506                           
  3507                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  3508     030F  3005               	movlw	5
  3509     0310                     i1l305:
  3510     0310  0008               	return
  3511     0311                     __end_of_I2C_DO_RX_ACK:
  3512                           
  3513                           	psect	text21
  3514     0311                     __ptext21:	
  3515 ;; *************** function _I2C_DO_SEND_STOP *****************
  3516 ;; Defined at:
  3517 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;		None
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      enum E3112
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3531 ;;      Params:         0       0       0       0       0       0       0       0
  3532 ;;      Locals:         0       0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0
  3534 ;;      Totals:         0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        0 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 1
  3538 ;; This function calls:
  3539 ;;		_I2C_MasterStop
  3540 ;; This function is called by:
  3541 ;;		_I2C_DO_TX
  3542 ;;		_I2C_DO_TX_EMPTY
  3543 ;;		_I2C_DO_ADDRESS_NACK
  3544 ;;		_I2C_MasterFsm
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548     0311                     _I2C_DO_SEND_STOP:	
  3549                           ;psect for function _I2C_DO_SEND_STOP
  3550                           
  3551     0311                     i1l2183:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3554                           
  3555                           
  3556                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  3557     0311  3183  2353  3183   	fcall	_I2C_MasterStop
  3558     0314                     i1l2185:
  3559                           
  3560                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  3561     0314  3000               	movlw	0
  3562     0315                     i1l302:
  3563     0315  0008               	return
  3564     0316                     __end_of_I2C_DO_SEND_STOP:
  3565                           
  3566                           	psect	text22
  3567     0316                     __ptext22:	
  3568 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3569 ;; Defined at:
  3570 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      enum E3112
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, pclath, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3584 ;;      Params:         0       0       0       0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 1
  3591 ;; This function calls:
  3592 ;;		_I2C_MasterEnableRestart
  3593 ;; This function is called by:
  3594 ;;		_I2C_DO_TX_EMPTY
  3595 ;;		_I2C_DO_ADDRESS_NACK
  3596 ;;		_I2C_MasterFsm
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600     0316                     _I2C_DO_SEND_RESTART:	
  3601                           ;psect for function _I2C_DO_SEND_RESTART
  3602                           
  3603     0316                     i1l2209:	
  3604                           ;incstack = 0
  3605                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3606                           
  3607                           
  3608                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  3609     0316  3183  2356  3183   	fcall	_I2C_MasterEnableRestart
  3610     0319                     i1l2211:
  3611                           
  3612                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  3613     0319  3001               	movlw	1
  3614     031A                     i1l299:
  3615     031A  0008               	return
  3616     031B                     __end_of_I2C_DO_SEND_RESTART:
  3617                           
  3618                           	psect	text23
  3619     031B                     __ptext23:	
  3620 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3621 ;; Defined at:
  3622 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      enum E3112
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3636 ;;      Params:         0       0       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		_I2C_MasterEnableRestart
  3645 ;; This function is called by:
  3646 ;;		_I2C_DO_TX
  3647 ;;		_I2C_MasterFsm
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651     031B                     _I2C_DO_SEND_RESTART_WRITE:	
  3652                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3653                           
  3654     031B                     i1l2177:	
  3655                           ;incstack = 0
  3656                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3657                           
  3658                           
  3659                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  3660     031B  3183  2356  3183   	fcall	_I2C_MasterEnableRestart
  3661     031E                     i1l2179:
  3662                           
  3663                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  3664     031E  3002               	movlw	2
  3665     031F                     i1l296:
  3666     031F  0008               	return
  3667     0320                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3668                           
  3669                           	psect	text24
  3670     0320                     __ptext24:	
  3671 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3672 ;; Defined at:
  3673 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      enum E3112
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3687 ;;      Params:         0       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 1
  3694 ;; This function calls:
  3695 ;;		_I2C_MasterEnableRestart
  3696 ;; This function is called by:
  3697 ;;		_I2C_DO_TX
  3698 ;;		_I2C_MasterFsm
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702     0320                     _I2C_DO_SEND_RESTART_READ:	
  3703                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3704                           
  3705     0320                     i1l2171:	
  3706                           ;incstack = 0
  3707                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3708                           
  3709                           
  3710                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  3711     0320  3183  2356  3183   	fcall	_I2C_MasterEnableRestart
  3712     0323                     i1l2173:
  3713                           
  3714                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  3715     0323  3001               	movlw	1
  3716     0324                     i1l293:
  3717     0324  0008               	return
  3718     0325                     __end_of_I2C_DO_SEND_RESTART_READ:
  3719                           
  3720                           	psect	text25
  3721     02C6                     __ptext25:	
  3722 ;; *************** function _I2C_DO_RCEN *****************
  3723 ;; Defined at:
  3724 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      enum E3112
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3738 ;;      Params:         0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 1
  3745 ;; This function calls:
  3746 ;;		_I2C_MasterStartRx
  3747 ;; This function is called by:
  3748 ;;		_I2C_MasterFsm
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752     02C6                     _I2C_DO_RCEN:	
  3753                           ;psect for function _I2C_DO_RCEN
  3754                           
  3755     02C6                     i1l2315:	
  3756                           ;incstack = 0
  3757                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  3758                           
  3759                           
  3760                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  3761     02C6  0020               	movlb	0	; select bank0
  3762     02C7  1043               	bcf	_I2C_Status+35,0
  3763     02C8                     i1l2317:
  3764                           
  3765                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  3766     02C8  3183  2350  3182   	fcall	_I2C_MasterStartRx
  3767     02CB                     i1l2319:
  3768                           
  3769                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  3770     02CB  3004               	movlw	4
  3771     02CC                     i1l269:
  3772     02CC  0008               	return
  3773     02CD                     __end_of_I2C_DO_RCEN:
  3774                           
  3775                           	psect	text26
  3776     00C9                     __ptext26:	
  3777 ;; *************** function _I2C_DO_RX *****************
  3778 ;; Defined at:
  3779 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      enum E3112
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3793 ;;      Params:         0       0       0       0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0
  3795 ;;      Temps:          2       0       0       0       0       0       0       0
  3796 ;;      Totals:         2       0       0       0       0       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 2
  3800 ;; This function calls:
  3801 ;;		NULL
  3802 ;;		_I2C_CallbackReturnReset
  3803 ;;		_I2C_CallbackReturnStop
  3804 ;;		_I2C_DO_RX_NACK_RESTART
  3805 ;;		_I2C_DO_RX_NACK_STOP
  3806 ;;		_I2C_MasterGetRxData
  3807 ;;		_I2C_MasterSendAck
  3808 ;; This function is called by:
  3809 ;;		_I2C_MasterFsm
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813     00C9                     _I2C_DO_RX:	
  3814                           ;psect for function _I2C_DO_RX
  3815                           
  3816     00C9                     i1l2285:	
  3817                           ;incstack = 0
  3818                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3819                           
  3820                           
  3821                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  3822     00C9  3183  234D  3180   	fcall	_I2C_MasterGetRxData
  3823     00CC  00F7               	movwf	??_I2C_DO_RX
  3824     00CD  301D               	movlw	29
  3825     00CE  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3826     00CF  0086               	movwf	6
  3827     00D0  0187               	clrf	7
  3828     00D1  3F40               	moviw [0]fsr1
  3829     00D2  0084               	movwf	4
  3830     00D3  3F41               	moviw [1]fsr1
  3831     00D4  0085               	movwf	5
  3832     00D5  0877               	movf	??_I2C_DO_RX,w
  3833     00D6  0080               	movwf	0
  3834     00D7                     i1l2287:
  3835     00D7  3001               	movlw	1
  3836     00D8  0020               	movlb	0	; select bank0
  3837     00D9  07BD               	addwf	low ((_I2C_Status| 0+29)),f
  3838     00DA  3000               	movlw	0
  3839     00DB  3DBE               	addwfc	(low ((_I2C_Status| 0+29))+1),f
  3840     00DC                     i1l2289:
  3841                           
  3842                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  3843     00DC  3001               	movlw	1
  3844     00DD  02BF               	subwf	_I2C_Status+31,f
  3845     00DE  3000               	movlw	0
  3846     00DF  3BC0               	subwfb	_I2C_Status+32,f
  3847     00E0  083F               	movf	_I2C_Status+31,w
  3848     00E1  0440               	iorwf	_I2C_Status+32,w
  3849     00E2  1903               	btfsc	3,2
  3850     00E3  28E5               	goto	u44_21
  3851     00E4  28E6               	goto	u44_20
  3852     00E5                     u44_21:
  3853     00E5  28EB               	goto	i1l257
  3854     00E6                     u44_20:
  3855     00E6                     i1l2291:
  3856                           
  3857                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  3858     00E6  3183  2337  3180   	fcall	_I2C_MasterSendAck
  3859     00E9                     i1l2293:
  3860                           
  3861                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  3862     00E9  3005               	movlw	5
  3863     00EA  2913               	goto	i1l258
  3864     00EB                     i1l257:	
  3865                           ;mcc_generated_files/i2c_master.c: 388:     else
  3866                           
  3867                           
  3868                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  3869     00EB  15C3               	bsf	_I2C_Status+35,3
  3870                           
  3871                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3872     00EC  28F5               	goto	i1l2309
  3873     00ED                     i1l2299:
  3874                           
  3875                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  3876     00ED  3183  2302  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  3877     00F0  2913               	goto	i1l258
  3878     00F1                     i1l2303:
  3879                           
  3880                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  3881     00F1  3183  2307  3180   	fcall	_I2C_DO_RX_NACK_STOP
  3882     00F4  2913               	goto	i1l258
  3883     00F5                     i1l2309:
  3884     00F5  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  3885     00F6  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3886     00F7  082C               	movf	low ((_I2C_Status| 0+12)),w
  3887     00F8  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3888     00F9  0821               	movf	_I2C_Status+1,w
  3889     00FA  008A               	movwf	10
  3890     00FB  0820               	movf	_I2C_Status,w
  3891     00FC  000A               	callw
  3892     00FD  3180               	pagesel	$
  3893     00FE  00F7               	movwf	??_I2C_DO_RX
  3894     00FF  01F8               	clrf	??_I2C_DO_RX+1
  3895                           
  3896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 1, Range of values is 0 to 0
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            4     3 (average)
  3902                           ; direct_byte            8     6 (fixed)
  3903                           ; jumptable            260     6 (fixed)
  3904                           ;	Chosen strategy is simple_byte
  3905     0100  0878               	movf	??_I2C_DO_RX+1,w
  3906     0101  3A00               	xorlw	0	; case 0
  3907     0102  1903               	skipnz
  3908     0103  2905               	goto	i1l2983
  3909     0104  28F1               	goto	i1l2303
  3910     0105                     i1l2983:
  3911                           
  3912                           ; Switch size 1, requested type "simple"
  3913                           ; Number of cases is 4, Range of values is 1 to 4
  3914                           ; switch strategies available:
  3915                           ; Name         Instructions Cycles
  3916                           ; simple_byte           13     7 (average)
  3917                           ; direct_byte           17     9 (fixed)
  3918                           ; jumptable            263     9 (fixed)
  3919                           ;	Chosen strategy is simple_byte
  3920     0105  0877               	movf	??_I2C_DO_RX,w
  3921     0106  3A01               	xorlw	1	; case 1
  3922     0107  1903               	skipnz
  3923     0108  28F1               	goto	i1l2303
  3924     0109  3A03               	xorlw	3	; case 2
  3925     010A  1903               	skipnz
  3926     010B  28ED               	goto	i1l2299
  3927     010C  3A01               	xorlw	1	; case 3
  3928     010D  1903               	skipnz
  3929     010E  28ED               	goto	i1l2299
  3930     010F  3A07               	xorlw	7	; case 4
  3931     0110  1903               	skipnz
  3932     0111  28F1               	goto	i1l2303
  3933     0112  28F1               	goto	i1l2303
  3934     0113                     i1l258:
  3935     0113  0008               	return
  3936     0114                     __end_of_I2C_DO_RX:
  3937                           
  3938                           	psect	text27
  3939     0071                     __ptext27:	
  3940 ;; *************** function _I2C_DO_TX *****************
  3941 ;; Defined at:
  3942 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      enum E3112
  3949 ;; Registers used:
  3950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3956 ;;      Params:         0       0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0       0
  3958 ;;      Temps:          2       0       0       0       0       0       0       0
  3959 ;;      Totals:         2       0       0       0       0       0       0       0
  3960 ;;Total ram usage:        2 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 2
  3963 ;; This function calls:
  3964 ;;		NULL
  3965 ;;		_I2C_CallbackReturnReset
  3966 ;;		_I2C_CallbackReturnStop
  3967 ;;		_I2C_DO_SEND_RESTART_READ
  3968 ;;		_I2C_DO_SEND_RESTART_WRITE
  3969 ;;		_I2C_DO_SEND_STOP
  3970 ;;		_I2C_MasterIsNack
  3971 ;;		_I2C_MasterSendTxData
  3972 ;; This function is called by:
  3973 ;;		_I2C_MasterFsm
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977     0071                     _I2C_DO_TX:	
  3978                           ;psect for function _I2C_DO_TX
  3979                           
  3980     0071                     i1l2251:	
  3981                           ;incstack = 0
  3982                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3983                           
  3984                           
  3985                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  3986     0071  3182  22F7  3180   	fcall	_I2C_MasterIsNack
  3987     0074  3A00               	xorlw	0
  3988     0075  1903               	skipnz
  3989     0076  2878               	goto	u42_21
  3990     0077  2879               	goto	u42_20
  3991     0078                     u42_21:
  3992     0078  28A9               	goto	i1l241
  3993     0079                     u42_20:
  3994     0079  2886               	goto	i1l2269
  3995     007A                     i1l2255:
  3996                           
  3997                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  3998     007A  3183  2320  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  3999     007D  28C8               	goto	i1l244
  4000     007E                     i1l2259:
  4001                           
  4002                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  4003     007E  3183  231B  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  4004     0081  28C8               	goto	i1l244
  4005     0082                     i1l2263:
  4006                           
  4007                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  4008     0082  3183  2311  3180   	fcall	_I2C_DO_SEND_STOP
  4009     0085  28C8               	goto	i1l244
  4010     0086                     i1l2269:
  4011     0086  0020               	movlb	0	; select bank0
  4012     0087  0833               	movf	(low ((_I2C_Status| 0+18))+1),w
  4013     0088  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  4014     0089  0832               	movf	low ((_I2C_Status| 0+18)),w
  4015     008A  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4016     008B  3006               	movlw	6
  4017     008C  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4018     008D  0086               	movwf	6
  4019     008E  0187               	clrf	7
  4020     008F  3F41               	moviw [1]fsr1
  4021     0090  008A               	movwf	10
  4022     0091  3F40               	moviw [0]fsr1
  4023     0092  000A               	callw
  4024     0093  3180               	pagesel	$
  4025     0094  00F8               	movwf	??_I2C_DO_TX
  4026     0095  01F9               	clrf	??_I2C_DO_TX+1
  4027                           
  4028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4029                           ; Switch size 1, requested type "simple"
  4030                           ; Number of cases is 1, Range of values is 0 to 0
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte            4     3 (average)
  4034                           ; direct_byte            8     6 (fixed)
  4035                           ; jumptable            260     6 (fixed)
  4036                           ;	Chosen strategy is simple_byte
  4037     0096  0879               	movf	??_I2C_DO_TX+1,w
  4038     0097  3A00               	xorlw	0	; case 0
  4039     0098  1903               	skipnz
  4040     0099  289B               	goto	i1l2985
  4041     009A  2882               	goto	i1l2263
  4042     009B                     i1l2985:
  4043                           
  4044                           ; Switch size 1, requested type "simple"
  4045                           ; Number of cases is 4, Range of values is 1 to 4
  4046                           ; switch strategies available:
  4047                           ; Name         Instructions Cycles
  4048                           ; simple_byte           13     7 (average)
  4049                           ; direct_byte           17     9 (fixed)
  4050                           ; jumptable            263     9 (fixed)
  4051                           ;	Chosen strategy is simple_byte
  4052     009B  0878               	movf	??_I2C_DO_TX,w
  4053     009C  3A01               	xorlw	1	; case 1
  4054     009D  1903               	skipnz
  4055     009E  2882               	goto	i1l2263
  4056     009F  3A03               	xorlw	3	; case 2
  4057     00A0  1903               	skipnz
  4058     00A1  287A               	goto	i1l2255
  4059     00A2  3A01               	xorlw	1	; case 3
  4060     00A3  1903               	skipnz
  4061     00A4  287E               	goto	i1l2259
  4062     00A5  3A07               	xorlw	7	; case 4
  4063     00A6  1903               	skipnz
  4064     00A7  2882               	goto	i1l2263
  4065     00A8  2882               	goto	i1l2263
  4066     00A9                     i1l241:	
  4067                           ;mcc_generated_files/i2c_master.c: 372:     else
  4068                           
  4069                           
  4070                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  4071     00A9  0020               	movlb	0	; select bank0
  4072     00AA  1043               	bcf	_I2C_Status+35,0
  4073     00AB                     i1l2271:
  4074                           
  4075                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  4076     00AB  083E               	movf	(low ((_I2C_Status| 0+29))+1),w
  4077     00AC  00F9               	movwf	??_I2C_DO_TX+1
  4078     00AD  083D               	movf	low ((_I2C_Status| 0+29)),w
  4079     00AE  00F8               	movwf	??_I2C_DO_TX
  4080     00AF  0ABD               	incf	low ((_I2C_Status| 0+29)),f
  4081     00B0  1903               	skipnz
  4082     00B1  0ABE               	incf	(low ((_I2C_Status| 0+29))+1),f
  4083     00B2  0878               	movf	??_I2C_DO_TX,w
  4084     00B3  0086               	movwf	6
  4085     00B4  0879               	movf	??_I2C_DO_TX+1,w
  4086     00B5  0087               	movwf	7
  4087     00B6  0801               	movf	1,w
  4088     00B7  3183  232A  3180   	fcall	_I2C_MasterSendTxData
  4089     00BA                     i1l2273:
  4090                           
  4091                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  4092     00BA  3001               	movlw	1
  4093     00BB  0020               	movlb	0	; select bank0
  4094     00BC  02BF               	subwf	_I2C_Status+31,f
  4095     00BD  3000               	movlw	0
  4096     00BE  3BC0               	subwfb	_I2C_Status+32,f
  4097     00BF  083F               	movf	_I2C_Status+31,w
  4098     00C0  0440               	iorwf	_I2C_Status+32,w
  4099     00C1  1D03               	btfss	3,2
  4100     00C2  28C4               	goto	u43_21
  4101     00C3  28C5               	goto	u43_20
  4102     00C4                     u43_21:
  4103     00C4  28C7               	goto	i1l2277
  4104     00C5                     u43_20:
  4105     00C5                     i1l2275:
  4106     00C5  3006               	movlw	6
  4107     00C6  28C8               	goto	i1l244
  4108     00C7                     i1l2277:
  4109     00C7  3003               	movlw	3
  4110     00C8                     i1l244:
  4111     00C8  0008               	return
  4112     00C9                     __end_of_I2C_DO_TX:
  4113                           
  4114                           	psect	text28
  4115     02B7                     __ptext28:	
  4116 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4117 ;; Defined at:
  4118 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;		None
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      enum E3112
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, status,0, pclath, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4132 ;;      Params:         0       0       0       0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0
  4135 ;;      Totals:         0       0       0       0       0       0       0       0
  4136 ;;Total ram usage:        0 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; Hardware stack levels required when called: 1
  4139 ;; This function calls:
  4140 ;;		_I2C_MasterSendTxData
  4141 ;; This function is called by:
  4142 ;;		_I2C_MasterFsm
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146     02B7                     _I2C_DO_SEND_ADR_WRITE:	
  4147                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4148                           
  4149     02B7                     i1l2243:	
  4150                           ;incstack = 0
  4151                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4152                           
  4153                           
  4154                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  4155     02B7  0020               	movlb	0	; select bank0
  4156     02B8  1443               	bsf	_I2C_Status+35,0
  4157     02B9                     i1l2245:
  4158                           
  4159                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  4160     02B9  353C               	lslf	_I2C_Status+28,w
  4161     02BA  3183  232A  3182   	fcall	_I2C_MasterSendTxData
  4162     02BD                     i1l2247:
  4163                           
  4164                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  4165     02BD  3003               	movlw	3
  4166     02BE                     i1l238:
  4167     02BE  0008               	return
  4168     02BF                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4169                           
  4170                           	psect	text29
  4171     02AE                     __ptext29:	
  4172 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4173 ;; Defined at:
  4174 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;		None
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      enum E3112
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4188 ;;      Params:         0       0       0       0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0
  4191 ;;      Totals:         0       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        0 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 1
  4195 ;; This function calls:
  4196 ;;		_I2C_MasterSendTxData
  4197 ;; This function is called by:
  4198 ;;		_I2C_MasterFsm
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202     02AE                     _I2C_DO_SEND_ADR_READ:	
  4203                           ;psect for function _I2C_DO_SEND_ADR_READ
  4204                           
  4205     02AE                     i1l2235:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4208                           
  4209                           
  4210                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  4211     02AE  0020               	movlb	0	; select bank0
  4212     02AF  1443               	bsf	_I2C_Status+35,0
  4213     02B0                     i1l2237:
  4214                           
  4215                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  4216     02B0  1403               	setc
  4217     02B1  0D3C               	rlf	_I2C_Status+28,w
  4218     02B2  3183  232A  3182   	fcall	_I2C_MasterSendTxData
  4219     02B5                     i1l2239:
  4220                           
  4221                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  4222     02B5  3005               	movlw	5
  4223     02B6                     i1l235:
  4224     02B6  0008               	return
  4225     02B7                     __end_of_I2C_DO_SEND_ADR_READ:
  4226                           
  4227                           	psect	text30
  4228     0325                     __ptext30:	
  4229 ;; *************** function _I2C_DO_IDLE *****************
  4230 ;; Defined at:
  4231 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      enum E3112
  4238 ;; Registers used:
  4239 ;;		wreg, status,2
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4245 ;;      Params:         0       0       0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_I2C_MasterFsm
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258     0325                     _I2C_DO_IDLE:	
  4259                           ;psect for function _I2C_DO_IDLE
  4260                           
  4261     0325                     i1l2227:	
  4262                           ;incstack = 0
  4263                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4264                           
  4265                           
  4266                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  4267     0325  0020               	movlb	0	; select bank0
  4268     0326  10C3               	bcf	_I2C_Status+35,1
  4269     0327                     i1l2229:
  4270                           
  4271                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  4272     0327  01C2               	clrf	_I2C_Status+34
  4273     0328                     i1l2231:
  4274                           
  4275                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  4276     0328  300E               	movlw	14
  4277     0329                     i1l232:
  4278     0329  0008               	return
  4279     032A                     __end_of_I2C_DO_IDLE:
  4280                           
  4281                           	psect	text31
  4282     018C                     __ptext31:	
  4283 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4284 ;; Defined at:
  4285 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      enum E3112
  4292 ;; Registers used:
  4293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4299 ;;      Params:         0       0       0       0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0
  4301 ;;      Temps:          2       0       0       0       0       0       0       0
  4302 ;;      Totals:         2       0       0       0       0       0       0       0
  4303 ;;Total ram usage:        2 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 2
  4306 ;; This function calls:
  4307 ;;		NULL
  4308 ;;		_I2C_CallbackReturnReset
  4309 ;;		_I2C_CallbackReturnStop
  4310 ;;		_I2C_DO_SEND_RESTART
  4311 ;;		_I2C_DO_SEND_STOP
  4312 ;;		_I2C_MasterSetIrq
  4313 ;; This function is called by:
  4314 ;;		_I2C_MasterFsm
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318     018C                     _I2C_DO_TX_EMPTY:	
  4319                           ;psect for function _I2C_DO_TX_EMPTY
  4320                           
  4321     018C                     i1l2323:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4324                           
  4325                           
  4326                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  4327     018C  0020               	movlb	0	; select bank0
  4328     018D  15C3               	bsf	_I2C_Status+35,3
  4329                           
  4330                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4331     018E  299C               	goto	i1l2341
  4332     018F                     i1l2325:
  4333                           
  4334                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  4335     018F  3183  2316  3181   	fcall	_I2C_DO_SEND_RESTART
  4336     0192  29BA               	goto	i1l275
  4337     0193                     i1l2329:
  4338                           
  4339                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  4340     0193  3183  234A  3181   	fcall	_I2C_MasterSetIrq
  4341     0196                     i1l2331:
  4342                           
  4343                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  4344     0196  3003               	movlw	3
  4345     0197  29BA               	goto	i1l275
  4346     0198                     i1l2335:
  4347                           
  4348                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  4349     0198  3183  2311  3181   	fcall	_I2C_DO_SEND_STOP
  4350     019B  29BA               	goto	i1l275
  4351     019C                     i1l2341:
  4352     019C  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  4353     019D  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  4354     019E  082C               	movf	low ((_I2C_Status| 0+12)),w
  4355     019F  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4356     01A0  0821               	movf	_I2C_Status+1,w
  4357     01A1  008A               	movwf	10
  4358     01A2  0820               	movf	_I2C_Status,w
  4359     01A3  000A               	callw
  4360     01A4  3181               	pagesel	$
  4361     01A5  00F7               	movwf	??_I2C_DO_TX_EMPTY
  4362     01A6  01F8               	clrf	??_I2C_DO_TX_EMPTY+1
  4363                           
  4364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4365                           ; Switch size 1, requested type "simple"
  4366                           ; Number of cases is 1, Range of values is 0 to 0
  4367                           ; switch strategies available:
  4368                           ; Name         Instructions Cycles
  4369                           ; simple_byte            4     3 (average)
  4370                           ; direct_byte            8     6 (fixed)
  4371                           ; jumptable            260     6 (fixed)
  4372                           ;	Chosen strategy is simple_byte
  4373     01A7  0878               	movf	??_I2C_DO_TX_EMPTY+1,w
  4374     01A8  3A00               	xorlw	0	; case 0
  4375     01A9  1903               	skipnz
  4376     01AA  29AC               	goto	i1l2987
  4377     01AB  2998               	goto	i1l2335
  4378     01AC                     i1l2987:
  4379                           
  4380                           ; Switch size 1, requested type "simple"
  4381                           ; Number of cases is 4, Range of values is 1 to 4
  4382                           ; switch strategies available:
  4383                           ; Name         Instructions Cycles
  4384                           ; simple_byte           13     7 (average)
  4385                           ; direct_byte           17     9 (fixed)
  4386                           ; jumptable            263     9 (fixed)
  4387                           ;	Chosen strategy is simple_byte
  4388     01AC  0877               	movf	??_I2C_DO_TX_EMPTY,w
  4389     01AD  3A01               	xorlw	1	; case 1
  4390     01AE  1903               	skipnz
  4391     01AF  2998               	goto	i1l2335
  4392     01B0  3A03               	xorlw	3	; case 2
  4393     01B1  1903               	skipnz
  4394     01B2  298F               	goto	i1l2325
  4395     01B3  3A01               	xorlw	1	; case 3
  4396     01B4  1903               	skipnz
  4397     01B5  298F               	goto	i1l2325
  4398     01B6  3A07               	xorlw	7	; case 4
  4399     01B7  1903               	skipnz
  4400     01B8  2993               	goto	i1l2329
  4401     01B9  2998               	goto	i1l2335
  4402     01BA                     i1l275:
  4403     01BA  0008               	return
  4404     01BB                     __end_of_I2C_DO_TX_EMPTY:
  4405                           
  4406                           	psect	text32
  4407     034A                     __ptext32:	
  4408 ;; *************** function _I2C_MasterSetIrq *****************
  4409 ;; Defined at:
  4410 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		None
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4424 ;;      Params:         0       0       0       0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0
  4427 ;;      Totals:         0       0       0       0       0       0       0       0
  4428 ;;Total ram usage:        0 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_I2C_DO_TX_EMPTY
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437     034A                     _I2C_MasterSetIrq:	
  4438                           ;psect for function _I2C_MasterSetIrq
  4439                           
  4440     034A                     i1l2215:	
  4441                           ;incstack = 0
  4442                           ; Regs used in _I2C_MasterSetIrq: []
  4443                           
  4444                           
  4445                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  4446     034A  0020               	movlb	0	; select bank0
  4447     034B  1591               	bsf	17,3	;volatile
  4448     034C                     i1l395:
  4449     034C  0008               	return
  4450     034D                     __end_of_I2C_MasterSetIrq:
  4451                           
  4452                           	psect	text33
  4453     02F7                     __ptext33:	
  4454 ;; *************** function _I2C_MasterIsNack *****************
  4455 ;; Defined at:
  4456 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      _Bool 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4470 ;;      Params:         0       0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_I2C_MasterFsm
  4480 ;;		_I2C_DO_TX
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484     02F7                     _I2C_MasterIsNack:	
  4485                           ;psect for function _I2C_MasterIsNack
  4486                           
  4487     02F7                     i1l2165:	
  4488                           ;incstack = 0
  4489                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4490                           
  4491                           
  4492                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  4493     02F7  0024               	movlb	4	; select bank4
  4494     02F8  0E16               	swapf	22,w	;volatile
  4495     02F9  0C89               	rrf	9,f
  4496     02FA  0C89               	rrf	9,f
  4497     02FB  3901               	andlw	1
  4498     02FC                     i1l368:
  4499     02FC  0008               	return
  4500     02FD                     __end_of_I2C_MasterIsNack:
  4501                           
  4502                           	psect	text34
  4503     032A                     __ptext34:	
  4504 ;; *************** function _I2C_MasterSendTxData *****************
  4505 ;; Defined at:
  4506 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  data            1    wreg     unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  data            1    0[COMMON] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4520 ;;      Params:         0       0       0       0       0       0       0       0
  4521 ;;      Locals:         1       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0
  4523 ;;      Totals:         1       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        1 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_I2C_DO_SEND_ADR_READ
  4530 ;;		_I2C_DO_SEND_ADR_WRITE
  4531 ;;		_I2C_DO_TX
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535     032A                     _I2C_MasterSendTxData:	
  4536                           ;psect for function _I2C_MasterSendTxData
  4537                           
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4541                           ;I2C_MasterSendTxData@data stored from wreg
  4542     032A  00F7               	movwf	I2C_MasterSendTxData@data
  4543     032B                     i1l2169:
  4544                           
  4545                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  4546     032B  0877               	movf	I2C_MasterSendTxData@data,w
  4547     032C  0024               	movlb	4	; select bank4
  4548     032D  0091               	movwf	17	;volatile
  4549     032E                     i1l350:
  4550     032E  0008               	return
  4551     032F                     __end_of_I2C_MasterSendTxData:
  4552                           
  4553                           	psect	text35
  4554     0337                     __ptext35:	
  4555 ;; *************** function _I2C_MasterSendAck *****************
  4556 ;; Defined at:
  4557 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		None
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4571 ;;      Params:         0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_I2C_DO_RX
  4581 ;;		_I2C_DO_RX_ACK
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585     0337                     _I2C_MasterSendAck:	
  4586                           ;psect for function _I2C_MasterSendAck
  4587                           
  4588     0337                     i1l2193:	
  4589                           ;incstack = 0
  4590                           ; Regs used in _I2C_MasterSendAck: []
  4591                           
  4592                           
  4593                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  4594     0337  0024               	movlb	4	; select bank4
  4595     0338  1296               	bcf	22,5	;volatile
  4596                           
  4597                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  4598     0339  1616               	bsf	22,4	;volatile
  4599     033A                     i1l371:
  4600     033A  0008               	return
  4601     033B                     __end_of_I2C_MasterSendAck:
  4602                           
  4603                           	psect	text36
  4604     034D                     __ptext36:	
  4605 ;; *************** function _I2C_MasterGetRxData *****************
  4606 ;; Defined at:
  4607 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      unsigned char 
  4614 ;; Registers used:
  4615 ;;		wreg
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4621 ;;      Params:         0       0       0       0       0       0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0
  4624 ;;      Totals:         0       0       0       0       0       0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used: 1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_I2C_DO_RX
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     034D                     _I2C_MasterGetRxData:	
  4635                           ;psect for function _I2C_MasterGetRxData
  4636                           
  4637     034D                     i1l2189:	
  4638                           ;incstack = 0
  4639                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4640                           
  4641                           
  4642                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  4643     034D  0024               	movlb	4	; select bank4
  4644     034E  0811               	movf	17,w	;volatile
  4645     034F                     i1l347:
  4646     034F  0008               	return
  4647     0350                     __end_of_I2C_MasterGetRxData:
  4648                           
  4649                           	psect	text37
  4650     033B                     __ptext37:	
  4651 ;; *************** function _I2C_MasterSendNack *****************
  4652 ;; Defined at:
  4653 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		None
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4667 ;;      Params:         0       0       0       0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_I2C_DO_RX_NACK_STOP
  4677 ;;		_I2C_DO_RX_NACK_RESTART
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681     033B                     _I2C_MasterSendNack:	
  4682                           ;psect for function _I2C_MasterSendNack
  4683                           
  4684     033B                     i1l2163:	
  4685                           ;incstack = 0
  4686                           ; Regs used in _I2C_MasterSendNack: []
  4687                           
  4688                           
  4689                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  4690     033B  0024               	movlb	4	; select bank4
  4691     033C  1696               	bsf	22,5	;volatile
  4692                           
  4693                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  4694     033D  1616               	bsf	22,4	;volatile
  4695     033E                     i1l374:
  4696     033E  0008               	return
  4697     033F                     __end_of_I2C_MasterSendNack:
  4698                           
  4699                           	psect	text38
  4700     0350                     __ptext38:	
  4701 ;; *************** function _I2C_MasterStartRx *****************
  4702 ;; Defined at:
  4703 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		None
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4717 ;;      Params:         0       0       0       0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_I2C_DO_RCEN
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730     0350                     _I2C_MasterStartRx:	
  4731                           ;psect for function _I2C_MasterStartRx
  4732                           
  4733     0350                     i1l2207:	
  4734                           ;incstack = 0
  4735                           ; Regs used in _I2C_MasterStartRx: []
  4736                           
  4737                           
  4738                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  4739     0350  0024               	movlb	4	; select bank4
  4740     0351  1596               	bsf	22,3	;volatile
  4741     0352                     i1l359:
  4742     0352  0008               	return
  4743     0353                     __end_of_I2C_MasterStartRx:
  4744                           
  4745                           	psect	text39
  4746     0353                     __ptext39:	
  4747 ;; *************** function _I2C_MasterStop *****************
  4748 ;; Defined at:
  4749 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		None
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4763 ;;      Params:         0       0       0       0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_I2C_DO_SEND_STOP
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776     0353                     _I2C_MasterStop:	
  4777                           ;psect for function _I2C_MasterStop
  4778                           
  4779     0353                     i1l2161:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _I2C_MasterStop: []
  4782                           
  4783                           
  4784                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  4785     0353  0024               	movlb	4	; select bank4
  4786     0354  1516               	bsf	22,2	;volatile
  4787     0355                     i1l365:
  4788     0355  0008               	return
  4789     0356                     __end_of_I2C_MasterStop:
  4790                           
  4791                           	psect	text40
  4792     0356                     __ptext40:	
  4793 ;; *************** function _I2C_MasterEnableRestart *****************
  4794 ;; Defined at:
  4795 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;		None
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		None
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4809 ;;      Params:         0       0       0       0       0       0       0       0
  4810 ;;      Locals:         0       0       0       0       0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0       0       0       0
  4812 ;;      Totals:         0       0       0       0       0       0       0       0
  4813 ;;Total ram usage:        0 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_I2C_DO_SEND_RESTART_READ
  4819 ;;		_I2C_DO_SEND_RESTART_WRITE
  4820 ;;		_I2C_DO_SEND_RESTART
  4821 ;;		_I2C_DO_RX_EMPTY
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825     0356                     _I2C_MasterEnableRestart:	
  4826                           ;psect for function _I2C_MasterEnableRestart
  4827                           
  4828     0356                     i1l2159:	
  4829                           ;incstack = 0
  4830                           ; Regs used in _I2C_MasterEnableRestart: []
  4831                           
  4832                           
  4833                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  4834     0356  0024               	movlb	4	; select bank4
  4835     0357  1496               	bsf	22,1	;volatile
  4836     0358                     i1l353:
  4837     0358  0008               	return
  4838     0359                     __end_of_I2C_MasterEnableRestart:
  4839                           
  4840                           	psect	text41
  4841     0359                     __ptext41:	
  4842 ;; *************** function _I2C_CallbackReturnReset *****************
  4843 ;; Defined at:
  4844 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;  funPtr          2    0[COMMON] PTR void 
  4847 ;;		 -> NULL(0), 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      enum E363
  4852 ;; Registers used:
  4853 ;;		wreg
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4859 ;;      Params:         2       0       0       0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0
  4862 ;;      Totals:         2       0       0       0       0       0       0       0
  4863 ;;Total ram usage:        2 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_I2C_Open
  4869 ;;		_I2C_DO_TX
  4870 ;;		_I2C_DO_RX
  4871 ;;		_I2C_DO_TX_EMPTY
  4872 ;;		_I2C_DO_ADDRESS_NACK
  4873 ;;		_I2C_DO_RX_EMPTY
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877     0359                     _I2C_CallbackReturnReset:	
  4878                           ;psect for function _I2C_CallbackReturnReset
  4879                           
  4880     0359                     i1l2221:	
  4881                           ;incstack = 0
  4882                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  4883                           
  4884                           
  4885                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  4886     0359  3005               	movlw	5
  4887     035A                     i1l331:
  4888     035A  0008               	return
  4889     035B                     __end_of_I2C_CallbackReturnReset:
  4890                           
  4891                           	psect	text42
  4892     035B                     __ptext42:	
  4893 ;; *************** function _I2C_CallbackReturnStop *****************
  4894 ;; Defined at:
  4895 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  funPtr          2    0[COMMON] PTR void 
  4898 ;;		 -> NULL(0), 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      enum E363
  4903 ;; Registers used:
  4904 ;;		wreg
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4910 ;;      Params:         2       0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0
  4913 ;;      Totals:         2       0       0       0       0       0       0       0
  4914 ;;Total ram usage:        2 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_I2C_Open
  4920 ;;		_I2C_SetCallback
  4921 ;;		_I2C_DO_TX
  4922 ;;		_I2C_DO_RX
  4923 ;;		_I2C_DO_TX_EMPTY
  4924 ;;		_I2C_DO_ADDRESS_NACK
  4925 ;;		_I2C_DO_RX_EMPTY
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929     035B                     _I2C_CallbackReturnStop:	
  4930                           ;psect for function _I2C_CallbackReturnStop
  4931                           
  4932     035B                     i1l2217:	
  4933                           ;incstack = 0
  4934                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  4935                           
  4936                           
  4937                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  4938     035B  3001               	movlw	1
  4939     035C                     i1l328:
  4940     035C  0008               	return
  4941     035D                     __end_of_I2C_CallbackReturnStop:
  4942                           
  4943                           	psect	text43
  4944     022D                     __ptext43:	
  4945 ;; *************** function _EUSART_Transmit_ISR *****************
  4946 ;; Defined at:
  4947 ;;		line 197 in file "mcc_generated_files/eusart.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4961 ;;      Params:         0       0       0       0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0
  4963 ;;      Temps:          1       0       0       0       0       0       0       0
  4964 ;;      Totals:         1       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        1 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_EUSART_Initialize
  4971 ;;		_INTERRUPT_InterruptManager
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975     022D                     _EUSART_Transmit_ISR:	
  4976                           ;psect for function _EUSART_Transmit_ISR
  4977                           
  4978     022D                     i1l2485:	
  4979                           ;incstack = 0
  4980                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4981                           
  4982                           
  4983                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4984     022D  3008               	movlw	8
  4985     022E  0274               	subwf	_eusartTxBufferRemaining,w	;volatile
  4986     022F  1803               	skipnc
  4987     0230  2A32               	goto	u54_21
  4988     0231  2A33               	goto	u54_20
  4989     0232                     u54_21:
  4990     0232  2A4A               	goto	i1l539
  4991     0233                     u54_20:
  4992     0233                     i1l2487:
  4993                           
  4994                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  4995     0233  0875               	movf	_eusartTxTail,w
  4996     0234  3E4C               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4997     0235  0086               	movwf	6
  4998     0236  0187               	clrf	7
  4999     0237  0801               	movf	1,w
  5000     0238  0023               	movlb	3	; select bank3
  5001     0239  009A               	movwf	26	;volatile
  5002     023A                     i1l2489:
  5003     023A  3001               	movlw	1
  5004     023B  00F7               	movwf	??_EUSART_Transmit_ISR
  5005     023C  0877               	movf	??_EUSART_Transmit_ISR,w
  5006     023D  07F5               	addwf	_eusartTxTail,f	;volatile
  5007     023E                     i1l2491:
  5008                           
  5009                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5010     023E  3008               	movlw	8
  5011     023F  0275               	subwf	_eusartTxTail,w	;volatile
  5012     0240  1C03               	skipc
  5013     0241  2A43               	goto	u55_21
  5014     0242  2A44               	goto	u55_20
  5015     0243                     u55_21:
  5016     0243  2A45               	goto	i1l2495
  5017     0244                     u55_20:
  5018     0244                     i1l2493:
  5019                           
  5020                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  5021     0244  01F5               	clrf	_eusartTxTail	;volatile
  5022     0245                     i1l2495:
  5023                           
  5024                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  5025     0245  3001               	movlw	1
  5026     0246  00F7               	movwf	??_EUSART_Transmit_ISR
  5027     0247  0877               	movf	??_EUSART_Transmit_ISR,w
  5028     0248  07F4               	addwf	_eusartTxBufferRemaining,f	;volatile
  5029                           
  5030                           ;mcc_generated_files/eusart.c: 209:     }
  5031     0249  2A4C               	goto	i1l542
  5032     024A                     i1l539:	
  5033                           ;mcc_generated_files/eusart.c: 210:     else
  5034                           
  5035                           
  5036                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  5037     024A  0021               	movlb	1	; select bank1
  5038     024B  1211               	bcf	17,4	;volatile
  5039     024C                     i1l542:
  5040     024C  0008               	return
  5041     024D                     __end_of_EUSART_Transmit_ISR:
  5042                           
  5043                           	psect	text44
  5044     0153                     __ptext44:	
  5045 ;; *************** function _EUSART_Receive_ISR *****************
  5046 ;; Defined at:
  5047 ;;		line 216 in file "mcc_generated_files/eusart.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5061 ;;      Params:         0       0       0       0       0       0       0       0
  5062 ;;      Locals:         0       0       0       0       0       0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0
  5064 ;;      Totals:         0       0       0       0       0       0       0       0
  5065 ;;Total ram usage:        0 bytes
  5066 ;; Hardware stack levels used: 1
  5067 ;; Hardware stack levels required when called: 2
  5068 ;; This function calls:
  5069 ;;		NULL
  5070 ;;		_EUSART_DefaultErrorHandler
  5071 ;;		_EUSART_DefaultFramingErrorHandler
  5072 ;;		_EUSART_DefaultOverrunErrorHandler
  5073 ;;		_EUSART_RxDataHandler
  5074 ;; This function is called by:
  5075 ;;		_EUSART_Initialize
  5076 ;;		_INTERRUPT_InterruptManager
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080     0153                     _EUSART_Receive_ISR:	
  5081                           ;psect for function _EUSART_Receive_ISR
  5082                           
  5083     0153                     i1l2497:	
  5084                           ;incstack = 0
  5085                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5086                           
  5087                           
  5088                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5089     0153  0873               	movf	_eusartRxHead,w	;volatile
  5090     0154  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5091     0155  0086               	movwf	6
  5092     0156  0187               	clrf	7
  5093     0157  0181               	clrf	1
  5094     0158                     i1l2499:
  5095                           
  5096                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  5097     0158  0023               	movlb	3	; select bank3
  5098     0159  1D1D               	btfss	29,2	;volatile
  5099     015A  295C               	goto	u56_21
  5100     015B  295D               	goto	u56_20
  5101     015C                     u56_21:
  5102     015C  2968               	goto	i1l2505
  5103     015D                     u56_20:
  5104     015D                     i1l2501:
  5105                           
  5106                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5107     015D  0873               	movf	_eusartRxHead,w	;volatile
  5108     015E  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5109     015F  0086               	movwf	6
  5110     0160  0187               	clrf	7
  5111     0161  1481               	bsf	1,1
  5112     0162                     i1l2503:
  5113                           
  5114                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5115     0162  0021               	movlb	1	; select bank1
  5116     0163  0825               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  5117     0164  008A               	movwf	10
  5118     0165  0824               	movf	_EUSART_FramingErrorHandler^(0+128),w
  5119     0166  000A               	callw
  5120     0167  3181               	pagesel	$
  5121     0168                     i1l2505:
  5122                           
  5123                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5124     0168  0023               	movlb	3	; select bank3
  5125     0169  1C9D               	btfss	29,1	;volatile
  5126     016A  296C               	goto	u57_21
  5127     016B  296D               	goto	u57_20
  5128     016C                     u57_21:
  5129     016C  2978               	goto	i1l2511
  5130     016D                     u57_20:
  5131     016D                     i1l2507:
  5132                           
  5133                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5134     016D  0873               	movf	_eusartRxHead,w	;volatile
  5135     016E  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5136     016F  0086               	movwf	6
  5137     0170  0187               	clrf	7
  5138     0171  1501               	bsf	1,2
  5139     0172                     i1l2509:
  5140                           
  5141                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5142     0172  0021               	movlb	1	; select bank1
  5143     0173  0823               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  5144     0174  008A               	movwf	10
  5145     0175  0822               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  5146     0176  000A               	callw
  5147     0177  3181               	pagesel	$
  5148     0178                     i1l2511:
  5149                           
  5150                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5151     0178  0873               	movf	_eusartRxHead,w	;volatile
  5152     0179  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5153     017A  0086               	movwf	6
  5154     017B  0187               	clrf	7
  5155     017C  0801               	movf	1,w
  5156     017D  1903               	btfsc	3,2
  5157     017E  2980               	goto	u58_21
  5158     017F  2981               	goto	u58_20
  5159     0180                     u58_21:
  5160     0180  2988               	goto	i1l2515
  5161     0181                     u58_20:
  5162     0181                     i1l2513:
  5163                           
  5164                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5165     0181  0021               	movlb	1	; select bank1
  5166     0182  0821               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  5167     0183  008A               	movwf	10
  5168     0184  0820               	movf	_EUSART_ErrorHandler^(0+128),w
  5169     0185  000A               	callw
  5170     0186  3181               	pagesel	$
  5171                           
  5172                           ;mcc_generated_files/eusart.c: 233:     } else {
  5173     0187  298B               	goto	i1l549
  5174     0188                     i1l2515:
  5175                           
  5176                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5177     0188  3182  2269  3181   	fcall	_EUSART_RxDataHandler
  5178     018B                     i1l549:
  5179     018B  0008               	return
  5180     018C                     __end_of_EUSART_Receive_ISR:
  5181                           
  5182                           	psect	text45
  5183     033F                     __ptext45:	
  5184 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5185 ;; Defined at:
  5186 ;;		line 252 in file "mcc_generated_files/eusart.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		None
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5200 ;;      Params:         0       0       0       0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_EUSART_Initialize
  5210 ;;		_EUSART_Receive_ISR
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214     033F                     _EUSART_DefaultOverrunErrorHandler:	
  5215                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5216                           
  5217     033F                     i1l2449:	
  5218                           ;incstack = 0
  5219                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5220                           
  5221                           
  5222                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  5223     033F  0023               	movlb	3	; select bank3
  5224     0340  121D               	bcf	29,4	;volatile
  5225                           
  5226                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  5227     0341  161D               	bsf	29,4	;volatile
  5228     0342                     i1l559:
  5229     0342  0008               	return
  5230     0343                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5231                           
  5232                           	psect	text46
  5233     035D                     __ptext46:	
  5234 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5235 ;; Defined at:
  5236 ;;		line 250 in file "mcc_generated_files/eusart.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      void 
  5243 ;; Registers used:
  5244 ;;		None
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5250 ;;      Params:         0       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0
  5253 ;;      Totals:         0       0       0       0       0       0       0       0
  5254 ;;Total ram usage:        0 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_EUSART_Initialize
  5260 ;;		_EUSART_Receive_ISR
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264     035D                     _EUSART_DefaultFramingErrorHandler:	
  5265                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5266                           
  5267     035D                     i1l556:	
  5268                           ;incstack = 0
  5269                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5270                           
  5271     035D  0008               	return
  5272     035E                     __end_of_EUSART_DefaultFramingErrorHandler:
  5273                           
  5274                           	psect	text47
  5275     0343                     __ptext47:	
  5276 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5277 ;; Defined at:
  5278 ;;		line 260 in file "mcc_generated_files/eusart.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5292 ;;      Params:         0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 1
  5299 ;; This function calls:
  5300 ;;		_EUSART_RxDataHandler
  5301 ;; This function is called by:
  5302 ;;		_EUSART_Initialize
  5303 ;;		_EUSART_Receive_ISR
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307     0343                     _EUSART_DefaultErrorHandler:	
  5308                           ;psect for function _EUSART_DefaultErrorHandler
  5309                           
  5310     0343                     i1l2451:	
  5311                           ;incstack = 0
  5312                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5313                           
  5314                           
  5315                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  5316     0343  3182  2269  3183   	fcall	_EUSART_RxDataHandler
  5317     0346                     i1l562:
  5318     0346  0008               	return
  5319     0347                     __end_of_EUSART_DefaultErrorHandler:
  5320                           
  5321                           	psect	text48
  5322     0269                     __ptext48:	
  5323 ;; *************** function _EUSART_RxDataHandler *****************
  5324 ;; Defined at:
  5325 ;;		line 240 in file "mcc_generated_files/eusart.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5339 ;;      Params:         0       0       0       0       0       0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0
  5341 ;;      Temps:          1       0       0       0       0       0       0       0
  5342 ;;      Totals:         1       0       0       0       0       0       0       0
  5343 ;;Total ram usage:        1 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_EUSART_Receive_ISR
  5349 ;;		_EUSART_DefaultErrorHandler
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353     0269                     _EUSART_RxDataHandler:	
  5354                           ;psect for function _EUSART_RxDataHandler
  5355                           
  5356     0269                     i1l2391:	
  5357                           ;incstack = 0
  5358                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5359                           
  5360                           
  5361                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5362     0269  0873               	movf	_eusartRxHead,w
  5363     026A  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5364     026B  0086               	movwf	6
  5365     026C  0187               	clrf	7
  5366     026D  0023               	movlb	3	; select bank3
  5367     026E  0819               	movf	25,w	;volatile
  5368     026F  0081               	movwf	1
  5369     0270                     i1l2393:
  5370     0270  3001               	movlw	1
  5371     0271  00F7               	movwf	??_EUSART_RxDataHandler
  5372     0272  0877               	movf	??_EUSART_RxDataHandler,w
  5373     0273  07F3               	addwf	_eusartRxHead,f	;volatile
  5374     0274                     i1l2395:
  5375                           
  5376                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5377     0274  3008               	movlw	8
  5378     0275  0273               	subwf	_eusartRxHead,w	;volatile
  5379     0276  1C03               	skipc
  5380     0277  2A79               	goto	u45_21
  5381     0278  2A7A               	goto	u45_20
  5382     0279                     u45_21:
  5383     0279  2A7B               	goto	i1l2399
  5384     027A                     u45_20:
  5385     027A                     i1l2397:
  5386                           
  5387                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  5388     027A  01F3               	clrf	_eusartRxHead	;volatile
  5389     027B                     i1l2399:
  5390                           
  5391                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  5392     027B  3001               	movlw	1
  5393     027C  00F7               	movwf	??_EUSART_RxDataHandler
  5394     027D  0877               	movf	??_EUSART_RxDataHandler,w
  5395     027E  07F1               	addwf	_eusartRxCount,f	;volatile
  5396     027F                     i1l553:
  5397     027F  0008               	return
  5398     0280                     __end_of_EUSART_RxDataHandler:
  5399     007E                     btemp	set	126	;btemp
  5400     007E                     int$flags	set	126
  5401     007E                     wtemp0	set	126
  5402                           
  5403                           	psect	idloc
  5404                           
  5405                           ;Config register IDLOC0 @ 0x8000
  5406                           ;	unspecified, using default values
  5407     8000                     	org	32768
  5408     8000  3FFF               	dw	16383
  5409                           
  5410                           ;Config register IDLOC1 @ 0x8001
  5411                           ;	unspecified, using default values
  5412     8001                     	org	32769
  5413     8001  3FFF               	dw	16383
  5414                           
  5415                           ;Config register IDLOC2 @ 0x8002
  5416                           ;	unspecified, using default values
  5417     8002                     	org	32770
  5418     8002  3FFF               	dw	16383
  5419                           
  5420                           ;Config register IDLOC3 @ 0x8003
  5421                           ;	unspecified, using default values
  5422     8003                     	org	32771
  5423     8003  3FFF               	dw	16383
  5424                           
  5425                           	psect	config
  5426                           
  5427                           ;Config register CONFIG1 @ 0x8007
  5428                           ;	Oscillator Selection
  5429                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5430                           ;	Watchdog Timer Enable
  5431                           ;	WDTE = OFF, WDT disabled
  5432                           ;	Power-up Timer Enable
  5433                           ;	PWRTE = OFF, PWRT disabled
  5434                           ;	MCLR Pin Function Select
  5435                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5436                           ;	Flash Program Memory Code Protection
  5437                           ;	CP = OFF, Program memory code protection is disabled
  5438                           ;	Data Memory Code Protection
  5439                           ;	CPD = OFF, Data memory code protection is disabled
  5440                           ;	Brown-out Reset Enable
  5441                           ;	BOREN = ON, Brown-out Reset enabled
  5442                           ;	Clock Out Enable
  5443                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5444                           ;	Internal/External Switchover
  5445                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5446                           ;	Fail-Safe Clock Monitor Enable
  5447                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5448     8007                     	org	32775
  5449     8007  3FE4               	dw	16356
  5450                           
  5451                           ;Config register CONFIG2 @ 0x8008
  5452                           ;	Flash Memory Self-Write Protection
  5453                           ;	WRT = OFF, Write protection off
  5454                           ;	Voltage Regulator Capacitor Enable
  5455                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5456                           ;	PLL Enable
  5457                           ;	PLLEN = OFF, 4x PLL disabled
  5458                           ;	Stack Overflow/Underflow Reset Enable
  5459                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5460                           ;	Brown-out Reset Voltage Selection
  5461                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5462                           ;	Low-Voltage Programming Enable
  5463                           ;	LVP = ON, Low-voltage programming enabled
  5464     8008                     	org	32776
  5465     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    32
    Data        12
    BSS         81
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      80
    BANK1            80      2      18
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_MasterFsm$1912	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    NULL$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    S198$data_ptr	PTR unsigned char  size(2) Largest target is 0

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 0

    S198$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     605
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1126
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0    1126
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0    1126
                                              3 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0     287
                                              1 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      12       8       22.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      6E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 10 09:37:46 2023

                ?_EUSART_SetRxInterruptHandler 00B0                         ??_I2C_DO_SEND_ADR_READ 0077  
                      ??_I2C_DO_SEND_ADR_WRITE 0078                                    _SSPSTATbits 0214  
                                           l31 0268                                             l60 02C5  
                                           l63 0332                                             l57 028F  
                        ??_I2C_DO_SEND_RESTART 0077                                            l172 02A4  
                                          l508 0152                                            l571 02F6  
                                          l565 02F0                                            l574 02AD  
                                          l568 02EA                                            l592 02DC  
                                          l577 02E4                                            l593 02DC  
                       ??_EUSART_RxDataHandler 0077                 ?_EUSART_SetFramingErrorHandler 00B0  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 0079  
                                 _I2C_DO_RESET 02FD                                           l2821 02E5  
                                         l2823 02F1                                           l2815 02DF  
                                         l2831 0256                                           l2817 02A5  
                                         l2841 0261                                           l2833 0258  
                                         l2825 024D                                           l2819 02EB  
                                         l2851 029E                                           l2843 0263  
                                         l2835 025A                                           l2827 0251  
                                         l2853 02A0                                           l2861 02C3  
                                         l2845 0264                                           l2837 025C  
                                         l2829 0253                                           l2871 0126  
                                         l2855 02A3                                           l2847 0266  
                                         l2839 025F                                           l2863 032F  
                                         l2881 0130                                           l2873 0129  
                                         l2865 0114                                           l2849 029C  
                                         l2857 02BF                                           l2891 014E  
                                         l2883 0138                                           l2875 012B  
                                         l2867 0116                                           l2859 02C2  
                                         l2893 014F                                           l2885 0140  
                                         l2877 012D                                           l2869 011D  
                                         l2895 0150                                           l2887 014B  
                                         l2879 012F                                           l2889 014D  
                                         l2897 0280                                           l2899 02D9  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATE 0110  
                                         _WPUB 020D                                           _WPUE 0210  
                                         _main 02D9                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0048  
                                _I2C_DO_RX_ACK 030C                  __end_of_OSCILLATOR_Initialize 02C6  
                                        ?_main 0077                                          i1l302 0315  
                                        i1l311 0306                                          i1l232 0329  
                                        i1l320 01E4                                          i1l241 00A9  
                                        i1l305 0310                                          i1l225 0336  
                                        i1l314 0301                                          i1l331 035A  
                                        i1l235 02B6                                          i1l244 00C8  
                                        i1l308 030B                                          i1l229 020C  
                                        i1l350 032E                                          i1l238 02BE  
                                        i1l328 035C                                          i1l424 001A  
                                        i1l353 0358                                          i1l257 00EB  
                                        i1l433 0046                                          i1l258 0113  
                                        i1l426 002B                                          i1l347 034F  
                                        i1l371 033A                                          i1l275 01BA  
                                        i1l427 0046                                          i1l428 003B  
                                        i1l365 0355                                          i1l269 02CC  
                                        i1l293 0324                                          i1l542 024C  
                                        i1l374 033E                                          i1l359 0352  
                                        i1l368 02FC                                          i1l296 031F  
                                        i1l392 0349                                          i1l553 027F  
                                        i1l562 0346                                          i1l539 024A  
                                        i1l395 034C                                          i1l299 031A  
                                        i1l556 035D                                          i1l549 018B  
                                        i1l559 0342                                          _RCREG 0199  
                                        _RCSTA 019D                                          u42_20 0079  
                                        u42_21 0078                                          u43_20 00C5  
                                        u43_21 00C4                                          u44_20 00E6  
                                        u44_21 00E5                                          u45_20 027A  
                                        u45_21 0279                                          u54_20 0233  
                                        u46_20 01ED                                          u70_20 0040  
                                        u54_21 0232                                          u46_21 01EC  
                                        u70_21 003F                                          u55_20 0244  
                                        u47_20 01F5                                          u71_20 0045  
                                        u63_20 000A                                          u55_21 0243  
                                        u47_21 01F4                                          u71_21 0044  
                                        u63_21 0009                                          u56_20 015D  
                                        u64_20 000F                                          u56_21 015C  
                                        u64_21 000E                                          u57_20 016D  
                                        u65_20 0014                              ??_I2C_DO_TX_EMPTY 0077  
                                        u57_21 016C                                          u65_21 0013  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u58_20 0181                                          u66_20 001F  
                                        u58_21 0180                                          u66_21 001E  
                                        u67_20 0024                                          u67_21 0023  
                                        u68_20 0030                                          u68_21 002F  
                                        u69_20 0035                                          u69_21 0034  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _SW_Ad 005C                              __end_of_I2C_DO_RX 0114  
                            __end_of_I2C_DO_TX 00C9                                 _WDT_Initialize 032F  
                      _I2C_MasterEnableRestart 0356                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0077                             ??_I2C_DO_SEND_STOP 0077  
                              __initialization 004A                                   __end_of_main 02DF  
                    ?_I2C_DO_SEND_RESTART_READ 0077                                 ?_I2C_DO_RX_ACK 0077  
                  ?_INTERRUPT_InterruptManager 0077                 ??_EUSART_SetRxInterruptHandler 0000  
                                       ??_main 0000                              ?_I2C_MasterIsNack 0077  
                            ?_I2C_MasterSetIrq 0077                             ??_I2C_MasterIsNack 0077  
                       __end_of_WDT_Initialize 0333                             ??_I2C_MasterSetIrq 0077  
    __end_of_EUSART_DefaultFramingErrorHandler 035E            ??_EUSART_DefaultFramingErrorHandler 0077  
           ?_EUSART_DefaultFramingErrorHandler 0077              _EUSART_DefaultFramingErrorHandler 035D  
                   _EUSART_OverrunErrorHandler 00A2                __end_of_I2C_CallbackReturnReset 035B  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       i1l2201 0307                                         i1l2211 0319  
                                       i1l2203 030A                                         i1l2221 0359  
                                       i1l2207 0350                                         i1l2215 034A  
                                       i1l2231 0328                                         i1l2303 00F1  
                                       i1l2217 035B                                         i1l2161 0353  
                                       i1l2209 0316                                         i1l2225 0347  
                                       i1l2163 033B                                         i1l2331 0196  
                                       i1l2323 018C                                         i1l2227 0325  
                                       i1l2235 02AE                                         i1l2243 02B7  
                                       i1l2251 0071                                         i1l2315 02C6  
                                       i1l2171 0320                                         i1l2501 015D  
                                       i1l2165 02F7                                         i1l2325 018F  
                                       i1l2341 019C                                         i1l2229 0327  
                                       i1l2237 02B0                                         i1l2245 02B9  
                                       i1l2309 00F5                                         i1l2317 02C8  
                                       i1l2173 0323                                         i1l2511 0178  
                                       i1l2503 0162                                         i1l2159 0356  
                                       i1l2335 0198                                         i1l2239 02B5  
                                       i1l2247 02BD                                         i1l2271 00AB  
                                       i1l2263 0082                                         i1l2255 007A  
                                       i1l2319 02CB                                         i1l2183 0311  
                                       i1l2513 0181                                         i1l2505 0168  
                                       i1l2193 0337                                         i1l2169 032B  
                                       i1l2329 0193                                         i1l2273 00BA  
                                       i1l2177 031B                                         i1l2185 0314  
                                       i1l2353 02FD                                         i1l2361 01BB  
                                       i1l2441 01E8                                         i1l2451 0343  
                                       i1l2515 0188                                         i1l2507 016D  
                                       i1l2275 00C5                                         i1l2259 007E  
                                       i1l2291 00E6                                         i1l2179 031E  
                                       i1l2347 030C                                         i1l2195 0302  
                                       i1l2355 02FF                                         i1l2363 01BD  
                                       i1l2443 01ED                                         i1l2509 0172  
                                       i1l2189 034D                                         i1l2277 00C7  
                                       i1l2269 0086                                         i1l2293 00E9  
                                       i1l2285 00C9                                         i1l2349 030F  
                                       i1l2197 0305                                         i1l2357 0300  
                                       i1l2365 01C0                                         i1l2445 01F5  
                                       i1l2391 0269                                         i1l2287 00D7  
                                       i1l2375 01C8                                         i1l2447 01F8  
                                       i1l2439 01E5                                         i1l2393 0270  
                                       i1l2449 033F                                         i1l2289 00DC  
                                       i1l2369 01C4                                         i1l2395 0274  
                                       i1l2491 023E                                         i1l2299 00ED  
                                       i1l2483 0333                                         i1l2397 027A  
                                       i1l2493 0244                                         i1l2485 022D  
                                       i1l2399 027B                                         i1l2495 0245  
                                       i1l2487 0233                                         i1l2671 0006  
                                       i1l2497 0153                                         i1l2489 023A  
                                       i1l2681 0024                                         i1l2673 000A  
                                       i1l2499 0158                                         i1l2683 0030  
                                       i1l2675 000F                                         i1l2685 0035  
                                       i1l2677 0014                                         i1l2687 0040  
                                       i1l2679 001F                                         i1l2981 01DC  
                                       i1l2983 0105                                         i1l2985 009B  
                                       i1l2987 01AC                                         _MB_UID 005A  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 034D                                  _I2C_MasterFsm 01E5  
                                _I2C_MasterIsr 0333                            _EUSART_Transmit_ISR 022D  
                          _I2C_DO_ADDRESS_NACK 01BB                           ?_I2C_MasterGetRxData 0077  
                              ?_WDT_Initialize 0077                      ??_I2C_MasterEnableRestart 0077  
                         ?_EUSART_Transmit_ISR 0077                              _SYSTEM_Initialize 0280  
                      __end_of__initialization 006D                             ?_SYSTEM_Initialize 0077  
                         ?_I2C_DO_ADDRESS_NACK 0077           __end_of_EUSART_SetTxInterruptHandler 02AE  
                 _EUSART_SetTxInterruptHandler 02A5                                 __pcstackCOMMON 0077  
                               ?_I2C_MasterFsm 0077                                 ?_I2C_MasterIsr 0077  
                              ??_I2C_DO_RX_ACK 0077                                   __pidataBANK0 0290  
                       _I2C_CallbackReturnStop 035B                            ??_SYSTEM_Initialize 0000  
                __end_of_I2C_DO_SEND_ADR_WRITE 02BF                     ?_I2C_DO_SEND_RESTART_WRITE 0077  
                        ??_I2C_MasterGetRxData 0077                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0044                     __end_of_I2C_MasterClearIrq 034A  
              ??_EUSART_SetOverrunErrorHandler 0000                      __end_of_SYSTEM_Initialize 0290  
                        ??_EUSART_Transmit_ISR 0077                              _I2C_MasterSendAck 0337  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A8  
                                ??_I2C_DO_IDLE 0077                                  ??_I2C_DO_RCEN 0077  
                 __end_of_I2C_MasterSendTxData 032F                             ?_I2C_MasterSendAck 0077  
                            _I2C_MasterStartRx 0350                          ??_I2C_DO_ADDRESS_NACK 0077  
                          _I2C_DO_RX_NACK_STOP 0307                             ?_I2C_MasterStartRx 0077  
                   __end_of_I2C_MasterSendNack 033F                                     __pmaintext 02D9  
                          ??_I2C_MasterSendAck 0077                  ?_EUSART_SetTxInterruptHandler 00B0  
             _EUSART_TxDefaultInterruptHandler 006E                    __end_of_I2C_DO_SEND_RESTART 031B  
                              _I2C_DO_TX_EMPTY 018C                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0077                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0078                       ??_I2C_DO_RX_NACK_RESTART 0077  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0320                           ?_I2C_DO_RX_NACK_STOP 0077  
                                _eusartRxCount 0071                      __end_of_I2C_MasterSendAck 033B  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0000  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                      __end_of_I2C_MasterStartRx 0353  
                                    _I2C_DO_RX 00C9                                      _I2C_DO_TX 0071  
             __end_of_I2C_DO_SEND_RESTART_READ 0325                                ??_I2C_MasterFsm 007A  
                              ??_I2C_MasterIsr 007C                            __end_of_I2C_DO_IDLE 032A  
                          __end_of_I2C_DO_RCEN 02CD                                    _Temperature 0060  
                               _I2C_MasterStop 0353                                 _I2C_Initialize 029C  
                                      __ptext1 0280                                        __ptext2 032F  
                                      __ptext3 024D                                        __ptext4 02BF  
                                      __ptext5 029C                                        __ptext6 0114  
                                      __ptext7 02A5                                        __ptext8 02DF  
                                      __ptext9 02E5                          ??_I2C_DO_RX_NACK_STOP 0077  
                        _OSCILLATOR_Initialize 02BF                       ??_PIN_MANAGER_Initialize 0000  
                I2C_CallbackReturnReset@funPtr 0077                     _SHT30_CMD_MEASURE_H_Enable 006C  
                                      clrloop0 02D4                     _SHT30_CMD_MEASURE_L_Enable 0068  
                         end_of_initialization 006D                     _SHT30_CMD_MEASURE_M_Enable 006A  
                                   ?_I2C_DO_RX 0077                                     ?_I2C_DO_TX 0077  
        __end_of_EUSART_SetOverrunErrorHandler 02EB                  _EUSART_SetOverrunErrorHandler 02E5  
                                      init_ram 02CD                                        initloop 02CE  
                      __end_of_I2C_DO_TX_EMPTY 01BB                              _EUSART_Initialize 0114  
                  _SHT30_CMD_MEASURE_H_Disable 0066                             ?_EUSART_Initialize 0077  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 0356  
                       __end_of_I2C_Initialize 02A5                    _SHT30_CMD_MEASURE_L_Disable 0062  
                  _SHT30_CMD_MEASURE_M_Disable 0064                            ??_EUSART_Initialize 0000  
                             ??_WDT_Initialize 0000                 ??_EUSART_SetTxInterruptHandler 0000  
                         _I2C_MasterSendTxData 032A                                    _f_Indicator 005B  
                    __end_of_EUSART_Initialize 0153                                    _I2C_DO_IDLE 0325  
                                  _I2C_DO_RCEN 02C6                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 0320  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterStop 0077  
                              ?_I2C_Initialize 0077                        _I2C_CallbackReturnReset 0359  
           __end_of_EUSART_DefaultErrorHandler 0347                     _EUSART_DefaultErrorHandler 0343  
                        ?_I2C_MasterSendTxData 0077                         ?_OSCILLATOR_Initialize 0077  
                  ??_I2C_DO_SEND_RESTART_WRITE 0077                            start_initialization 004A  
                                ?_I2C_DO_RESET 0077   EUSART_SetRxInterruptHandler@interruptHandler 00B0  
 EUSART_SetTxInterruptHandler@interruptHandler 00B0                                    ??_I2C_DO_RX 0077  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 035D  
                       _I2C_DO_RX_NACK_RESTART 0302                               ?_I2C_DO_TX_EMPTY 0077  
                           _I2C_MasterClearIrq 0347                 ?_EUSART_SetOverrunErrorHandler 00B0  
                   _EUSART_FramingErrorHandler 00A4                         _EUSART_SetErrorHandler 02F1  
                          ?_I2C_MasterClearIrq 0077                    __end_of_I2C_MasterGetRxData 0350  
                                  __pdataBANK0 0062                          __end_of_I2C_DO_RX_ACK 0311  
                             _I2C_DO_SEND_STOP 0311                             _I2C_MasterSendNack 033B  
                     ?_I2C_MasterEnableRestart 0077                              _i2c_fsmStateTable 020D  
                  __end_of_EUSART_Transmit_ISR 024D                          _I2C_DO_SEND_ADR_WRITE 02B7  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 0000                                  __pcstackBANK1 00B0  
                               ??_I2C_DO_RESET 0077                            ?_I2C_MasterSendNack 0077  
                 __end_of_I2C_DO_SEND_ADR_READ 02B7                           ??_I2C_MasterClearIrq 0077  
                  __end_of_I2C_DO_ADDRESS_NACK 01E5                     __end_of_EUSART_Receive_ISR 018C  
                             _I2C_MasterIsNack 02F7                      _I2C_DO_SEND_RESTART_WRITE 031B  
             _EUSART_RxDefaultInterruptHandler 00A6                               _I2C_MasterSetIrq 034A  
                                    __pnvBANK0 006E                                      __pnvBANK1 00A0  
                 __end_of_EUSART_RxDataHandler 0280                         _PIN_MANAGER_Initialize 024D  
                    ??_I2C_CallbackReturnReset 0079                           ??_I2C_MasterSendNack 0077  
                                 _eusartRxHead 0073                                   _eusartTxHead 0076  
                                 _eusartRxTail 0072                         ??_I2C_MasterSendTxData 0077  
                                 _eusartTxTail 0075                      __end_of_i2c_fsmStateTable 022D  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0074  
                               _eusartRxBuffer 00A8                                 _eusartTxBuffer 004C  
       EUSART_SetErrorHandler@interruptHandler 00B0                                      clear_ram0 02D3  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0000                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 020D                          __end_of_I2C_MasterIsr 0337  
                  __end_of_I2C_DO_RX_NACK_STOP 030C      __end_of_EUSART_DefaultOverrunErrorHandler 0343  
          ??_EUSART_DefaultOverrunErrorHandler 0077             ?_EUSART_DefaultOverrunErrorHandler 0077  
            _EUSART_DefaultOverrunErrorHandler 033F                __end_of_I2C_MasterEnableRestart 0359  
                       ?_I2C_DO_SEND_ADR_WRITE 0077                       I2C_MasterSendTxData@data 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0077                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0077                                   ?_I2C_DO_RCEN 0077  
                                     _Humidity 005E                               ??_I2C_MasterStop 0077  
                             ??_I2C_Initialize 0000                           __end_of_I2C_DO_RESET 0302  
                      ??_OSCILLATOR_Initialize 0000                            _EUSART_ErrorHandler 00A0  
                         _I2C_DO_SEND_ADR_READ 02AE                    ?_EUSART_DefaultErrorHandler 0077  
                         _EUSART_RxDataHandler 0269                                       __ptext10 02EB  
                                     __ptext11 02F1                                       __ptext20 030C  
                                     __ptext21 0311                                       __ptext13 0333  
                                     __ptext30 0325                                       __ptext22 0316  
                                     __ptext14 01E5                                       __ptext31 018C  
                                     __ptext23 031B                                       __ptext15 0347  
                                     __ptext40 0356                                       __ptext32 034A  
                                     __ptext24 0320                                       __ptext16 01BB  
                                     __ptext41 0359                                       __ptext33 02F7  
                                     __ptext25 02C6                                       __ptext17 02FD  
                                     __ptext42 035B                                       __ptext34 032A  
                                     __ptext26 00C9                                       __ptext18 0302  
                                     __ptext43 022D                                       __ptext35 0337  
                                     __ptext27 0071                                       __ptext19 0307  
                                     __ptext44 0153                                       __ptext36 034D  
                                     __ptext28 02B7                                       __ptext45 033F  
                                     __ptext37 033B                                       __ptext29 02AE  
                                     __ptext46 035D                                       __ptext38 0350  
                                     __ptext47 0343                                       __ptext39 0353  
                                     __ptext48 0269                        ?_I2C_DO_RX_NACK_RESTART 0077  
                     __end_of_I2C_DO_SEND_STOP 0316                        ?_EUSART_SetErrorHandler 00B0  
EUSART_SetOverrunErrorHandler@interruptHandler 00B0                                    _MB_Register 0054  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0077  
           __end_of_INTERRUPT_InterruptManager 0048                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 02F1                  _EUSART_SetFramingErrorHandler 02EB  
                     __end_of_I2C_MasterIsNack 02FD                       __end_of_I2C_MasterSetIrq 034D  
                                   _LED_Statuc 005D                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0077                 __end_of_I2C_DO_RX_NACK_RESTART 0307  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 02F7                            _I2C_DO_SEND_RESTART 0316  
         __end_of_EUSART_SetRxInterruptHandler 02E5                   _EUSART_SetRxInterruptHandler 02DF  
                           _EUSART_Receive_ISR 0153  EUSART_SetFramingErrorHandler@interruptHandler 00B0  
                                __pstringtext1 020D                           ?_I2C_DO_SEND_RESTART 0077  
                          ?_EUSART_Receive_ISR 0077                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                 __end_of_PIN_MANAGER_Initialize 0269  
                         ??_EUSART_Receive_ISR 0078                          _MSSP_InterruptHandler 0058  
