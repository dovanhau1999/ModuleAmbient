

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 11 10:00:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    83                           	dabs	1,0x320,16
    84                           	dabs	1,0x2A0,80
    85                           	dabs	1,0x220,80
    86                           	dabs	1,0x1A0,80
    87                           	dabs	1,0x154,28
    88                           	dabs	1,0x20D4,0,_SES_Modbus
    89                           	dabs	1,0x7E,2
    90     0000                     
    91                           ; Version 2.40
    92                           ; Generated 17/11/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC16F1936 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0090                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0095                     	;# 
   164     0096                     	;# 
   165     0097                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009A                     	;# 
   169     009B                     	;# 
   170     009B                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     0110                     	;# 
   178     0111                     	;# 
   179     0112                     	;# 
   180     0113                     	;# 
   181     0114                     	;# 
   182     0115                     	;# 
   183     0116                     	;# 
   184     0117                     	;# 
   185     0118                     	;# 
   186     0119                     	;# 
   187     011A                     	;# 
   188     011B                     	;# 
   189     011D                     	;# 
   190     018C                     	;# 
   191     018D                     	;# 
   192     0191                     	;# 
   193     0191                     	;# 
   194     0192                     	;# 
   195     0193                     	;# 
   196     0193                     	;# 
   197     0193                     	;# 
   198     0194                     	;# 
   199     0195                     	;# 
   200     0196                     	;# 
   201     0199                     	;# 
   202     019A                     	;# 
   203     019B                     	;# 
   204     019B                     	;# 
   205     019B                     	;# 
   206     019B                     	;# 
   207     019C                     	;# 
   208     019C                     	;# 
   209     019D                     	;# 
   210     019E                     	;# 
   211     019F                     	;# 
   212     020D                     	;# 
   213     0210                     	;# 
   214     0211                     	;# 
   215     0212                     	;# 
   216     0213                     	;# 
   217     0214                     	;# 
   218     0215                     	;# 
   219     0215                     	;# 
   220     0216                     	;# 
   221     0217                     	;# 
   222     0291                     	;# 
   223     0291                     	;# 
   224     0292                     	;# 
   225     0293                     	;# 
   226     0294                     	;# 
   227     0295                     	;# 
   228     0295                     	;# 
   229     0296                     	;# 
   230     0298                     	;# 
   231     0298                     	;# 
   232     0299                     	;# 
   233     029A                     	;# 
   234     029B                     	;# 
   235     029C                     	;# 
   236     029C                     	;# 
   237     029D                     	;# 
   238     029E                     	;# 
   239     029F                     	;# 
   240     0311                     	;# 
   241     0311                     	;# 
   242     0312                     	;# 
   243     0313                     	;# 
   244     0314                     	;# 
   245     0315                     	;# 
   246     0315                     	;# 
   247     0316                     	;# 
   248     0318                     	;# 
   249     0318                     	;# 
   250     0319                     	;# 
   251     031A                     	;# 
   252     031C                     	;# 
   253     031C                     	;# 
   254     031D                     	;# 
   255     031E                     	;# 
   256     0394                     	;# 
   257     0395                     	;# 
   258     0396                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0791                     	;# 
   266     0792                     	;# 
   267     0793                     	;# 
   268     0794                     	;# 
   269     0795                     	;# 
   270     0798                     	;# 
   271     0799                     	;# 
   272     07A0                     	;# 
   273     07A1                     	;# 
   274     07A3                     	;# 
   275     07A4                     	;# 
   276     07A6                     	;# 
   277     07A7                     	;# 
   278     07A9                     	;# 
   279     07AA                     	;# 
   280     0FE4                     	;# 
   281     0FE5                     	;# 
   282     0FE6                     	;# 
   283     0FE7                     	;# 
   284     0FE8                     	;# 
   285     0FE9                     	;# 
   286     0FEA                     	;# 
   287     0FEB                     	;# 
   288     0FED                     	;# 
   289     0FEE                     	;# 
   290     0FEF                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0015                     	;# 
   311     0016                     	;# 
   312     0016                     	;# 
   313     0017                     	;# 
   314     0018                     	;# 
   315     0019                     	;# 
   316     001A                     	;# 
   317     001B                     	;# 
   318     001C                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     008C                     	;# 
   322     008D                     	;# 
   323     008E                     	;# 
   324     0090                     	;# 
   325     0091                     	;# 
   326     0092                     	;# 
   327     0093                     	;# 
   328     0095                     	;# 
   329     0096                     	;# 
   330     0097                     	;# 
   331     0098                     	;# 
   332     0099                     	;# 
   333     009A                     	;# 
   334     009B                     	;# 
   335     009B                     	;# 
   336     009C                     	;# 
   337     009D                     	;# 
   338     009E                     	;# 
   339     010C                     	;# 
   340     010D                     	;# 
   341     010E                     	;# 
   342     0110                     	;# 
   343     0111                     	;# 
   344     0112                     	;# 
   345     0113                     	;# 
   346     0114                     	;# 
   347     0115                     	;# 
   348     0116                     	;# 
   349     0117                     	;# 
   350     0118                     	;# 
   351     0119                     	;# 
   352     011A                     	;# 
   353     011B                     	;# 
   354     011D                     	;# 
   355     018C                     	;# 
   356     018D                     	;# 
   357     0191                     	;# 
   358     0191                     	;# 
   359     0192                     	;# 
   360     0193                     	;# 
   361     0193                     	;# 
   362     0193                     	;# 
   363     0194                     	;# 
   364     0195                     	;# 
   365     0196                     	;# 
   366     0199                     	;# 
   367     019A                     	;# 
   368     019B                     	;# 
   369     019B                     	;# 
   370     019B                     	;# 
   371     019B                     	;# 
   372     019C                     	;# 
   373     019C                     	;# 
   374     019D                     	;# 
   375     019E                     	;# 
   376     019F                     	;# 
   377     020D                     	;# 
   378     0210                     	;# 
   379     0211                     	;# 
   380     0212                     	;# 
   381     0213                     	;# 
   382     0214                     	;# 
   383     0215                     	;# 
   384     0215                     	;# 
   385     0216                     	;# 
   386     0217                     	;# 
   387     0291                     	;# 
   388     0291                     	;# 
   389     0292                     	;# 
   390     0293                     	;# 
   391     0294                     	;# 
   392     0295                     	;# 
   393     0295                     	;# 
   394     0296                     	;# 
   395     0298                     	;# 
   396     0298                     	;# 
   397     0299                     	;# 
   398     029A                     	;# 
   399     029B                     	;# 
   400     029C                     	;# 
   401     029C                     	;# 
   402     029D                     	;# 
   403     029E                     	;# 
   404     029F                     	;# 
   405     0311                     	;# 
   406     0311                     	;# 
   407     0312                     	;# 
   408     0313                     	;# 
   409     0314                     	;# 
   410     0315                     	;# 
   411     0315                     	;# 
   412     0316                     	;# 
   413     0318                     	;# 
   414     0318                     	;# 
   415     0319                     	;# 
   416     031A                     	;# 
   417     031C                     	;# 
   418     031C                     	;# 
   419     031D                     	;# 
   420     031E                     	;# 
   421     0394                     	;# 
   422     0395                     	;# 
   423     0396                     	;# 
   424     0415                     	;# 
   425     0416                     	;# 
   426     0417                     	;# 
   427     041C                     	;# 
   428     041D                     	;# 
   429     041E                     	;# 
   430     0791                     	;# 
   431     0792                     	;# 
   432     0793                     	;# 
   433     0794                     	;# 
   434     0795                     	;# 
   435     0798                     	;# 
   436     0799                     	;# 
   437     07A0                     	;# 
   438     07A1                     	;# 
   439     07A3                     	;# 
   440     07A4                     	;# 
   441     07A6                     	;# 
   442     07A7                     	;# 
   443     07A9                     	;# 
   444     07AA                     	;# 
   445     0FE4                     	;# 
   446     0FE5                     	;# 
   447     0FE6                     	;# 
   448     0FE7                     	;# 
   449     0FE8                     	;# 
   450     0FE9                     	;# 
   451     0FEA                     	;# 
   452     0FEB                     	;# 
   453     0FED                     	;# 
   454     0FEE                     	;# 
   455     0FEF                     	;# 
   456     0000                     	;# 
   457     0001                     	;# 
   458     0002                     	;# 
   459     0003                     	;# 
   460     0004                     	;# 
   461     0005                     	;# 
   462     0006                     	;# 
   463     0007                     	;# 
   464     0008                     	;# 
   465     0009                     	;# 
   466     000A                     	;# 
   467     000B                     	;# 
   468     000C                     	;# 
   469     000D                     	;# 
   470     000E                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0015                     	;# 
   476     0016                     	;# 
   477     0016                     	;# 
   478     0017                     	;# 
   479     0018                     	;# 
   480     0019                     	;# 
   481     001A                     	;# 
   482     001B                     	;# 
   483     001C                     	;# 
   484     001E                     	;# 
   485     001F                     	;# 
   486     008C                     	;# 
   487     008D                     	;# 
   488     008E                     	;# 
   489     0090                     	;# 
   490     0091                     	;# 
   491     0092                     	;# 
   492     0093                     	;# 
   493     0095                     	;# 
   494     0096                     	;# 
   495     0097                     	;# 
   496     0098                     	;# 
   497     0099                     	;# 
   498     009A                     	;# 
   499     009B                     	;# 
   500     009B                     	;# 
   501     009C                     	;# 
   502     009D                     	;# 
   503     009E                     	;# 
   504     010C                     	;# 
   505     010D                     	;# 
   506     010E                     	;# 
   507     0110                     	;# 
   508     0111                     	;# 
   509     0112                     	;# 
   510     0113                     	;# 
   511     0114                     	;# 
   512     0115                     	;# 
   513     0116                     	;# 
   514     0117                     	;# 
   515     0118                     	;# 
   516     0119                     	;# 
   517     011A                     	;# 
   518     011B                     	;# 
   519     011D                     	;# 
   520     018C                     	;# 
   521     018D                     	;# 
   522     0191                     	;# 
   523     0191                     	;# 
   524     0192                     	;# 
   525     0193                     	;# 
   526     0193                     	;# 
   527     0193                     	;# 
   528     0194                     	;# 
   529     0195                     	;# 
   530     0196                     	;# 
   531     0199                     	;# 
   532     019A                     	;# 
   533     019B                     	;# 
   534     019B                     	;# 
   535     019B                     	;# 
   536     019B                     	;# 
   537     019C                     	;# 
   538     019C                     	;# 
   539     019D                     	;# 
   540     019E                     	;# 
   541     019F                     	;# 
   542     020D                     	;# 
   543     0210                     	;# 
   544     0211                     	;# 
   545     0212                     	;# 
   546     0213                     	;# 
   547     0214                     	;# 
   548     0215                     	;# 
   549     0215                     	;# 
   550     0216                     	;# 
   551     0217                     	;# 
   552     0291                     	;# 
   553     0291                     	;# 
   554     0292                     	;# 
   555     0293                     	;# 
   556     0294                     	;# 
   557     0295                     	;# 
   558     0295                     	;# 
   559     0296                     	;# 
   560     0298                     	;# 
   561     0298                     	;# 
   562     0299                     	;# 
   563     029A                     	;# 
   564     029B                     	;# 
   565     029C                     	;# 
   566     029C                     	;# 
   567     029D                     	;# 
   568     029E                     	;# 
   569     029F                     	;# 
   570     0311                     	;# 
   571     0311                     	;# 
   572     0312                     	;# 
   573     0313                     	;# 
   574     0314                     	;# 
   575     0315                     	;# 
   576     0315                     	;# 
   577     0316                     	;# 
   578     0318                     	;# 
   579     0318                     	;# 
   580     0319                     	;# 
   581     031A                     	;# 
   582     031C                     	;# 
   583     031C                     	;# 
   584     031D                     	;# 
   585     031E                     	;# 
   586     0394                     	;# 
   587     0395                     	;# 
   588     0396                     	;# 
   589     0415                     	;# 
   590     0416                     	;# 
   591     0417                     	;# 
   592     041C                     	;# 
   593     041D                     	;# 
   594     041E                     	;# 
   595     0791                     	;# 
   596     0792                     	;# 
   597     0793                     	;# 
   598     0794                     	;# 
   599     0795                     	;# 
   600     0798                     	;# 
   601     0799                     	;# 
   602     07A0                     	;# 
   603     07A1                     	;# 
   604     07A3                     	;# 
   605     07A4                     	;# 
   606     07A6                     	;# 
   607     07A7                     	;# 
   608     07A9                     	;# 
   609     07AA                     	;# 
   610     0FE4                     	;# 
   611     0FE5                     	;# 
   612     0FE6                     	;# 
   613     0FE7                     	;# 
   614     0FE8                     	;# 
   615     0FE9                     	;# 
   616     0FEA                     	;# 
   617     0FEB                     	;# 
   618     0FED                     	;# 
   619     0FEE                     	;# 
   620     0FEF                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     0010                     	;# 
   637     0011                     	;# 
   638     0012                     	;# 
   639     0013                     	;# 
   640     0015                     	;# 
   641     0016                     	;# 
   642     0016                     	;# 
   643     0017                     	;# 
   644     0018                     	;# 
   645     0019                     	;# 
   646     001A                     	;# 
   647     001B                     	;# 
   648     001C                     	;# 
   649     001E                     	;# 
   650     001F                     	;# 
   651     008C                     	;# 
   652     008D                     	;# 
   653     008E                     	;# 
   654     0090                     	;# 
   655     0091                     	;# 
   656     0092                     	;# 
   657     0093                     	;# 
   658     0095                     	;# 
   659     0096                     	;# 
   660     0097                     	;# 
   661     0098                     	;# 
   662     0099                     	;# 
   663     009A                     	;# 
   664     009B                     	;# 
   665     009B                     	;# 
   666     009C                     	;# 
   667     009D                     	;# 
   668     009E                     	;# 
   669     010C                     	;# 
   670     010D                     	;# 
   671     010E                     	;# 
   672     0110                     	;# 
   673     0111                     	;# 
   674     0112                     	;# 
   675     0113                     	;# 
   676     0114                     	;# 
   677     0115                     	;# 
   678     0116                     	;# 
   679     0117                     	;# 
   680     0118                     	;# 
   681     0119                     	;# 
   682     011A                     	;# 
   683     011B                     	;# 
   684     011D                     	;# 
   685     018C                     	;# 
   686     018D                     	;# 
   687     0191                     	;# 
   688     0191                     	;# 
   689     0192                     	;# 
   690     0193                     	;# 
   691     0193                     	;# 
   692     0193                     	;# 
   693     0194                     	;# 
   694     0195                     	;# 
   695     0196                     	;# 
   696     0199                     	;# 
   697     019A                     	;# 
   698     019B                     	;# 
   699     019B                     	;# 
   700     019B                     	;# 
   701     019B                     	;# 
   702     019C                     	;# 
   703     019C                     	;# 
   704     019D                     	;# 
   705     019E                     	;# 
   706     019F                     	;# 
   707     020D                     	;# 
   708     0210                     	;# 
   709     0211                     	;# 
   710     0212                     	;# 
   711     0213                     	;# 
   712     0214                     	;# 
   713     0215                     	;# 
   714     0215                     	;# 
   715     0216                     	;# 
   716     0217                     	;# 
   717     0291                     	;# 
   718     0291                     	;# 
   719     0292                     	;# 
   720     0293                     	;# 
   721     0294                     	;# 
   722     0295                     	;# 
   723     0295                     	;# 
   724     0296                     	;# 
   725     0298                     	;# 
   726     0298                     	;# 
   727     0299                     	;# 
   728     029A                     	;# 
   729     029B                     	;# 
   730     029C                     	;# 
   731     029C                     	;# 
   732     029D                     	;# 
   733     029E                     	;# 
   734     029F                     	;# 
   735     0311                     	;# 
   736     0311                     	;# 
   737     0312                     	;# 
   738     0313                     	;# 
   739     0314                     	;# 
   740     0315                     	;# 
   741     0315                     	;# 
   742     0316                     	;# 
   743     0318                     	;# 
   744     0318                     	;# 
   745     0319                     	;# 
   746     031A                     	;# 
   747     031C                     	;# 
   748     031C                     	;# 
   749     031D                     	;# 
   750     031E                     	;# 
   751     0394                     	;# 
   752     0395                     	;# 
   753     0396                     	;# 
   754     0415                     	;# 
   755     0416                     	;# 
   756     0417                     	;# 
   757     041C                     	;# 
   758     041D                     	;# 
   759     041E                     	;# 
   760     0791                     	;# 
   761     0792                     	;# 
   762     0793                     	;# 
   763     0794                     	;# 
   764     0795                     	;# 
   765     0798                     	;# 
   766     0799                     	;# 
   767     07A0                     	;# 
   768     07A1                     	;# 
   769     07A3                     	;# 
   770     07A4                     	;# 
   771     07A6                     	;# 
   772     07A7                     	;# 
   773     07A9                     	;# 
   774     07AA                     	;# 
   775     0FE4                     	;# 
   776     0FE5                     	;# 
   777     0FE6                     	;# 
   778     0FE7                     	;# 
   779     0FE8                     	;# 
   780     0FE9                     	;# 
   781     0FEA                     	;# 
   782     0FEB                     	;# 
   783     0FED                     	;# 
   784     0FEE                     	;# 
   785     0FEF                     	;# 
   786     0000                     	;# 
   787     0001                     	;# 
   788     0002                     	;# 
   789     0003                     	;# 
   790     0004                     	;# 
   791     0005                     	;# 
   792     0006                     	;# 
   793     0007                     	;# 
   794     0008                     	;# 
   795     0009                     	;# 
   796     000A                     	;# 
   797     000B                     	;# 
   798     000C                     	;# 
   799     000D                     	;# 
   800     000E                     	;# 
   801     0010                     	;# 
   802     0011                     	;# 
   803     0012                     	;# 
   804     0013                     	;# 
   805     0015                     	;# 
   806     0016                     	;# 
   807     0016                     	;# 
   808     0017                     	;# 
   809     0018                     	;# 
   810     0019                     	;# 
   811     001A                     	;# 
   812     001B                     	;# 
   813     001C                     	;# 
   814     001E                     	;# 
   815     001F                     	;# 
   816     008C                     	;# 
   817     008D                     	;# 
   818     008E                     	;# 
   819     0090                     	;# 
   820     0091                     	;# 
   821     0092                     	;# 
   822     0093                     	;# 
   823     0095                     	;# 
   824     0096                     	;# 
   825     0097                     	;# 
   826     0098                     	;# 
   827     0099                     	;# 
   828     009A                     	;# 
   829     009B                     	;# 
   830     009B                     	;# 
   831     009C                     	;# 
   832     009D                     	;# 
   833     009E                     	;# 
   834     010C                     	;# 
   835     010D                     	;# 
   836     010E                     	;# 
   837     0110                     	;# 
   838     0111                     	;# 
   839     0112                     	;# 
   840     0113                     	;# 
   841     0114                     	;# 
   842     0115                     	;# 
   843     0116                     	;# 
   844     0117                     	;# 
   845     0118                     	;# 
   846     0119                     	;# 
   847     011A                     	;# 
   848     011B                     	;# 
   849     011D                     	;# 
   850     018C                     	;# 
   851     018D                     	;# 
   852     0191                     	;# 
   853     0191                     	;# 
   854     0192                     	;# 
   855     0193                     	;# 
   856     0193                     	;# 
   857     0193                     	;# 
   858     0194                     	;# 
   859     0195                     	;# 
   860     0196                     	;# 
   861     0199                     	;# 
   862     019A                     	;# 
   863     019B                     	;# 
   864     019B                     	;# 
   865     019B                     	;# 
   866     019B                     	;# 
   867     019C                     	;# 
   868     019C                     	;# 
   869     019D                     	;# 
   870     019E                     	;# 
   871     019F                     	;# 
   872     020D                     	;# 
   873     0210                     	;# 
   874     0211                     	;# 
   875     0212                     	;# 
   876     0213                     	;# 
   877     0214                     	;# 
   878     0215                     	;# 
   879     0215                     	;# 
   880     0216                     	;# 
   881     0217                     	;# 
   882     0291                     	;# 
   883     0291                     	;# 
   884     0292                     	;# 
   885     0293                     	;# 
   886     0294                     	;# 
   887     0295                     	;# 
   888     0295                     	;# 
   889     0296                     	;# 
   890     0298                     	;# 
   891     0298                     	;# 
   892     0299                     	;# 
   893     029A                     	;# 
   894     029B                     	;# 
   895     029C                     	;# 
   896     029C                     	;# 
   897     029D                     	;# 
   898     029E                     	;# 
   899     029F                     	;# 
   900     0311                     	;# 
   901     0311                     	;# 
   902     0312                     	;# 
   903     0313                     	;# 
   904     0314                     	;# 
   905     0315                     	;# 
   906     0315                     	;# 
   907     0316                     	;# 
   908     0318                     	;# 
   909     0318                     	;# 
   910     0319                     	;# 
   911     031A                     	;# 
   912     031C                     	;# 
   913     031C                     	;# 
   914     031D                     	;# 
   915     031E                     	;# 
   916     0394                     	;# 
   917     0395                     	;# 
   918     0396                     	;# 
   919     0415                     	;# 
   920     0416                     	;# 
   921     0417                     	;# 
   922     041C                     	;# 
   923     041D                     	;# 
   924     041E                     	;# 
   925     0791                     	;# 
   926     0792                     	;# 
   927     0793                     	;# 
   928     0794                     	;# 
   929     0795                     	;# 
   930     0798                     	;# 
   931     0799                     	;# 
   932     07A0                     	;# 
   933     07A1                     	;# 
   934     07A3                     	;# 
   935     07A4                     	;# 
   936     07A6                     	;# 
   937     07A7                     	;# 
   938     07A9                     	;# 
   939     07AA                     	;# 
   940     0FE4                     	;# 
   941     0FE5                     	;# 
   942     0FE6                     	;# 
   943     0FE7                     	;# 
   944     0FE8                     	;# 
   945     0FE9                     	;# 
   946     0FEA                     	;# 
   947     0FEB                     	;# 
   948     0FED                     	;# 
   949     0FEE                     	;# 
   950     0FEF                     	;# 
   951     0000                     	;# 
   952     0001                     	;# 
   953     0002                     	;# 
   954     0003                     	;# 
   955     0004                     	;# 
   956     0005                     	;# 
   957     0006                     	;# 
   958     0007                     	;# 
   959     0008                     	;# 
   960     0009                     	;# 
   961     000A                     	;# 
   962     000B                     	;# 
   963     000C                     	;# 
   964     000D                     	;# 
   965     000E                     	;# 
   966     0010                     	;# 
   967     0011                     	;# 
   968     0012                     	;# 
   969     0013                     	;# 
   970     0015                     	;# 
   971     0016                     	;# 
   972     0016                     	;# 
   973     0017                     	;# 
   974     0018                     	;# 
   975     0019                     	;# 
   976     001A                     	;# 
   977     001B                     	;# 
   978     001C                     	;# 
   979     001E                     	;# 
   980     001F                     	;# 
   981     008C                     	;# 
   982     008D                     	;# 
   983     008E                     	;# 
   984     0090                     	;# 
   985     0091                     	;# 
   986     0092                     	;# 
   987     0093                     	;# 
   988     0095                     	;# 
   989     0096                     	;# 
   990     0097                     	;# 
   991     0098                     	;# 
   992     0099                     	;# 
   993     009A                     	;# 
   994     009B                     	;# 
   995     009B                     	;# 
   996     009C                     	;# 
   997     009D                     	;# 
   998     009E                     	;# 
   999     010C                     	;# 
  1000     010D                     	;# 
  1001     010E                     	;# 
  1002     0110                     	;# 
  1003     0111                     	;# 
  1004     0112                     	;# 
  1005     0113                     	;# 
  1006     0114                     	;# 
  1007     0115                     	;# 
  1008     0116                     	;# 
  1009     0117                     	;# 
  1010     0118                     	;# 
  1011     0119                     	;# 
  1012     011A                     	;# 
  1013     011B                     	;# 
  1014     011D                     	;# 
  1015     018C                     	;# 
  1016     018D                     	;# 
  1017     0191                     	;# 
  1018     0191                     	;# 
  1019     0192                     	;# 
  1020     0193                     	;# 
  1021     0193                     	;# 
  1022     0193                     	;# 
  1023     0194                     	;# 
  1024     0195                     	;# 
  1025     0196                     	;# 
  1026     0199                     	;# 
  1027     019A                     	;# 
  1028     019B                     	;# 
  1029     019B                     	;# 
  1030     019B                     	;# 
  1031     019B                     	;# 
  1032     019C                     	;# 
  1033     019C                     	;# 
  1034     019D                     	;# 
  1035     019E                     	;# 
  1036     019F                     	;# 
  1037     020D                     	;# 
  1038     0210                     	;# 
  1039     0211                     	;# 
  1040     0212                     	;# 
  1041     0213                     	;# 
  1042     0214                     	;# 
  1043     0215                     	;# 
  1044     0215                     	;# 
  1045     0216                     	;# 
  1046     0217                     	;# 
  1047     0291                     	;# 
  1048     0291                     	;# 
  1049     0292                     	;# 
  1050     0293                     	;# 
  1051     0294                     	;# 
  1052     0295                     	;# 
  1053     0295                     	;# 
  1054     0296                     	;# 
  1055     0298                     	;# 
  1056     0298                     	;# 
  1057     0299                     	;# 
  1058     029A                     	;# 
  1059     029B                     	;# 
  1060     029C                     	;# 
  1061     029C                     	;# 
  1062     029D                     	;# 
  1063     029E                     	;# 
  1064     029F                     	;# 
  1065     0311                     	;# 
  1066     0311                     	;# 
  1067     0312                     	;# 
  1068     0313                     	;# 
  1069     0314                     	;# 
  1070     0315                     	;# 
  1071     0315                     	;# 
  1072     0316                     	;# 
  1073     0318                     	;# 
  1074     0318                     	;# 
  1075     0319                     	;# 
  1076     031A                     	;# 
  1077     031C                     	;# 
  1078     031C                     	;# 
  1079     031D                     	;# 
  1080     031E                     	;# 
  1081     0394                     	;# 
  1082     0395                     	;# 
  1083     0396                     	;# 
  1084     0415                     	;# 
  1085     0416                     	;# 
  1086     0417                     	;# 
  1087     041C                     	;# 
  1088     041D                     	;# 
  1089     041E                     	;# 
  1090     0791                     	;# 
  1091     0792                     	;# 
  1092     0793                     	;# 
  1093     0794                     	;# 
  1094     0795                     	;# 
  1095     0798                     	;# 
  1096     0799                     	;# 
  1097     07A0                     	;# 
  1098     07A1                     	;# 
  1099     07A3                     	;# 
  1100     07A4                     	;# 
  1101     07A6                     	;# 
  1102     07A7                     	;# 
  1103     07A9                     	;# 
  1104     07AA                     	;# 
  1105     0FE4                     	;# 
  1106     0FE5                     	;# 
  1107     0FE6                     	;# 
  1108     0FE7                     	;# 
  1109     0FE8                     	;# 
  1110     0FE9                     	;# 
  1111     0FEA                     	;# 
  1112     0FEB                     	;# 
  1113     0FED                     	;# 
  1114     0FEE                     	;# 
  1115     0FEF                     	;# 
  1116     0000                     	;# 
  1117     0001                     	;# 
  1118     0002                     	;# 
  1119     0003                     	;# 
  1120     0004                     	;# 
  1121     0005                     	;# 
  1122     0006                     	;# 
  1123     0007                     	;# 
  1124     0008                     	;# 
  1125     0009                     	;# 
  1126     000A                     	;# 
  1127     000B                     	;# 
  1128     000C                     	;# 
  1129     000D                     	;# 
  1130     000E                     	;# 
  1131     0010                     	;# 
  1132     0011                     	;# 
  1133     0012                     	;# 
  1134     0013                     	;# 
  1135     0015                     	;# 
  1136     0016                     	;# 
  1137     0016                     	;# 
  1138     0017                     	;# 
  1139     0018                     	;# 
  1140     0019                     	;# 
  1141     001A                     	;# 
  1142     001B                     	;# 
  1143     001C                     	;# 
  1144     001E                     	;# 
  1145     001F                     	;# 
  1146     008C                     	;# 
  1147     008D                     	;# 
  1148     008E                     	;# 
  1149     0090                     	;# 
  1150     0091                     	;# 
  1151     0092                     	;# 
  1152     0093                     	;# 
  1153     0095                     	;# 
  1154     0096                     	;# 
  1155     0097                     	;# 
  1156     0098                     	;# 
  1157     0099                     	;# 
  1158     009A                     	;# 
  1159     009B                     	;# 
  1160     009B                     	;# 
  1161     009C                     	;# 
  1162     009D                     	;# 
  1163     009E                     	;# 
  1164     010C                     	;# 
  1165     010D                     	;# 
  1166     010E                     	;# 
  1167     0110                     	;# 
  1168     0111                     	;# 
  1169     0112                     	;# 
  1170     0113                     	;# 
  1171     0114                     	;# 
  1172     0115                     	;# 
  1173     0116                     	;# 
  1174     0117                     	;# 
  1175     0118                     	;# 
  1176     0119                     	;# 
  1177     011A                     	;# 
  1178     011B                     	;# 
  1179     011D                     	;# 
  1180     018C                     	;# 
  1181     018D                     	;# 
  1182     0191                     	;# 
  1183     0191                     	;# 
  1184     0192                     	;# 
  1185     0193                     	;# 
  1186     0193                     	;# 
  1187     0193                     	;# 
  1188     0194                     	;# 
  1189     0195                     	;# 
  1190     0196                     	;# 
  1191     0199                     	;# 
  1192     019A                     	;# 
  1193     019B                     	;# 
  1194     019B                     	;# 
  1195     019B                     	;# 
  1196     019B                     	;# 
  1197     019C                     	;# 
  1198     019C                     	;# 
  1199     019D                     	;# 
  1200     019E                     	;# 
  1201     019F                     	;# 
  1202     020D                     	;# 
  1203     0210                     	;# 
  1204     0211                     	;# 
  1205     0212                     	;# 
  1206     0213                     	;# 
  1207     0214                     	;# 
  1208     0215                     	;# 
  1209     0215                     	;# 
  1210     0216                     	;# 
  1211     0217                     	;# 
  1212     0291                     	;# 
  1213     0291                     	;# 
  1214     0292                     	;# 
  1215     0293                     	;# 
  1216     0294                     	;# 
  1217     0295                     	;# 
  1218     0295                     	;# 
  1219     0296                     	;# 
  1220     0298                     	;# 
  1221     0298                     	;# 
  1222     0299                     	;# 
  1223     029A                     	;# 
  1224     029B                     	;# 
  1225     029C                     	;# 
  1226     029C                     	;# 
  1227     029D                     	;# 
  1228     029E                     	;# 
  1229     029F                     	;# 
  1230     0311                     	;# 
  1231     0311                     	;# 
  1232     0312                     	;# 
  1233     0313                     	;# 
  1234     0314                     	;# 
  1235     0315                     	;# 
  1236     0315                     	;# 
  1237     0316                     	;# 
  1238     0318                     	;# 
  1239     0318                     	;# 
  1240     0319                     	;# 
  1241     031A                     	;# 
  1242     031C                     	;# 
  1243     031C                     	;# 
  1244     031D                     	;# 
  1245     031E                     	;# 
  1246     0394                     	;# 
  1247     0395                     	;# 
  1248     0396                     	;# 
  1249     0415                     	;# 
  1250     0416                     	;# 
  1251     0417                     	;# 
  1252     041C                     	;# 
  1253     041D                     	;# 
  1254     041E                     	;# 
  1255     0791                     	;# 
  1256     0792                     	;# 
  1257     0793                     	;# 
  1258     0794                     	;# 
  1259     0795                     	;# 
  1260     0798                     	;# 
  1261     0799                     	;# 
  1262     07A0                     	;# 
  1263     07A1                     	;# 
  1264     07A3                     	;# 
  1265     07A4                     	;# 
  1266     07A6                     	;# 
  1267     07A7                     	;# 
  1268     07A9                     	;# 
  1269     07AA                     	;# 
  1270     0FE4                     	;# 
  1271     0FE5                     	;# 
  1272     0FE6                     	;# 
  1273     0FE7                     	;# 
  1274     0FE8                     	;# 
  1275     0FE9                     	;# 
  1276     0FEA                     	;# 
  1277     0FEB                     	;# 
  1278     0FED                     	;# 
  1279     0FEE                     	;# 
  1280     0FEF                     	;# 
  1281     0000                     	;# 
  1282     0001                     	;# 
  1283     0002                     	;# 
  1284     0003                     	;# 
  1285     0004                     	;# 
  1286     0005                     	;# 
  1287     0006                     	;# 
  1288     0007                     	;# 
  1289     0008                     	;# 
  1290     0009                     	;# 
  1291     000A                     	;# 
  1292     000B                     	;# 
  1293     000C                     	;# 
  1294     000D                     	;# 
  1295     000E                     	;# 
  1296     0010                     	;# 
  1297     0011                     	;# 
  1298     0012                     	;# 
  1299     0013                     	;# 
  1300     0015                     	;# 
  1301     0016                     	;# 
  1302     0016                     	;# 
  1303     0017                     	;# 
  1304     0018                     	;# 
  1305     0019                     	;# 
  1306     001A                     	;# 
  1307     001B                     	;# 
  1308     001C                     	;# 
  1309     001E                     	;# 
  1310     001F                     	;# 
  1311     008C                     	;# 
  1312     008D                     	;# 
  1313     008E                     	;# 
  1314     0090                     	;# 
  1315     0091                     	;# 
  1316     0092                     	;# 
  1317     0093                     	;# 
  1318     0095                     	;# 
  1319     0096                     	;# 
  1320     0097                     	;# 
  1321     0098                     	;# 
  1322     0099                     	;# 
  1323     009A                     	;# 
  1324     009B                     	;# 
  1325     009B                     	;# 
  1326     009C                     	;# 
  1327     009D                     	;# 
  1328     009E                     	;# 
  1329     010C                     	;# 
  1330     010D                     	;# 
  1331     010E                     	;# 
  1332     0110                     	;# 
  1333     0111                     	;# 
  1334     0112                     	;# 
  1335     0113                     	;# 
  1336     0114                     	;# 
  1337     0115                     	;# 
  1338     0116                     	;# 
  1339     0117                     	;# 
  1340     0118                     	;# 
  1341     0119                     	;# 
  1342     011A                     	;# 
  1343     011B                     	;# 
  1344     011D                     	;# 
  1345     018C                     	;# 
  1346     018D                     	;# 
  1347     0191                     	;# 
  1348     0191                     	;# 
  1349     0192                     	;# 
  1350     0193                     	;# 
  1351     0193                     	;# 
  1352     0193                     	;# 
  1353     0194                     	;# 
  1354     0195                     	;# 
  1355     0196                     	;# 
  1356     0199                     	;# 
  1357     019A                     	;# 
  1358     019B                     	;# 
  1359     019B                     	;# 
  1360     019B                     	;# 
  1361     019B                     	;# 
  1362     019C                     	;# 
  1363     019C                     	;# 
  1364     019D                     	;# 
  1365     019E                     	;# 
  1366     019F                     	;# 
  1367     020D                     	;# 
  1368     0210                     	;# 
  1369     0211                     	;# 
  1370     0212                     	;# 
  1371     0213                     	;# 
  1372     0214                     	;# 
  1373     0215                     	;# 
  1374     0215                     	;# 
  1375     0216                     	;# 
  1376     0217                     	;# 
  1377     0291                     	;# 
  1378     0291                     	;# 
  1379     0292                     	;# 
  1380     0293                     	;# 
  1381     0294                     	;# 
  1382     0295                     	;# 
  1383     0295                     	;# 
  1384     0296                     	;# 
  1385     0298                     	;# 
  1386     0298                     	;# 
  1387     0299                     	;# 
  1388     029A                     	;# 
  1389     029B                     	;# 
  1390     029C                     	;# 
  1391     029C                     	;# 
  1392     029D                     	;# 
  1393     029E                     	;# 
  1394     029F                     	;# 
  1395     0311                     	;# 
  1396     0311                     	;# 
  1397     0312                     	;# 
  1398     0313                     	;# 
  1399     0314                     	;# 
  1400     0315                     	;# 
  1401     0315                     	;# 
  1402     0316                     	;# 
  1403     0318                     	;# 
  1404     0318                     	;# 
  1405     0319                     	;# 
  1406     031A                     	;# 
  1407     031C                     	;# 
  1408     031C                     	;# 
  1409     031D                     	;# 
  1410     031E                     	;# 
  1411     0394                     	;# 
  1412     0395                     	;# 
  1413     0396                     	;# 
  1414     0415                     	;# 
  1415     0416                     	;# 
  1416     0417                     	;# 
  1417     041C                     	;# 
  1418     041D                     	;# 
  1419     041E                     	;# 
  1420     0791                     	;# 
  1421     0792                     	;# 
  1422     0793                     	;# 
  1423     0794                     	;# 
  1424     0795                     	;# 
  1425     0798                     	;# 
  1426     0799                     	;# 
  1427     07A0                     	;# 
  1428     07A1                     	;# 
  1429     07A3                     	;# 
  1430     07A4                     	;# 
  1431     07A6                     	;# 
  1432     07A7                     	;# 
  1433     07A9                     	;# 
  1434     07AA                     	;# 
  1435     0FE4                     	;# 
  1436     0FE5                     	;# 
  1437     0FE6                     	;# 
  1438     0FE7                     	;# 
  1439     0FE8                     	;# 
  1440     0FE9                     	;# 
  1441     0FEA                     	;# 
  1442     0FEB                     	;# 
  1443     0FED                     	;# 
  1444     0FEE                     	;# 
  1445     0FEF                     	;# 
  1446     0000                     	;# 
  1447     0001                     	;# 
  1448     0002                     	;# 
  1449     0003                     	;# 
  1450     0004                     	;# 
  1451     0005                     	;# 
  1452     0006                     	;# 
  1453     0007                     	;# 
  1454     0008                     	;# 
  1455     0009                     	;# 
  1456     000A                     	;# 
  1457     000B                     	;# 
  1458     000C                     	;# 
  1459     000D                     	;# 
  1460     000E                     	;# 
  1461     0010                     	;# 
  1462     0011                     	;# 
  1463     0012                     	;# 
  1464     0013                     	;# 
  1465     0015                     	;# 
  1466     0016                     	;# 
  1467     0016                     	;# 
  1468     0017                     	;# 
  1469     0018                     	;# 
  1470     0019                     	;# 
  1471     001A                     	;# 
  1472     001B                     	;# 
  1473     001C                     	;# 
  1474     001E                     	;# 
  1475     001F                     	;# 
  1476     008C                     	;# 
  1477     008D                     	;# 
  1478     008E                     	;# 
  1479     0090                     	;# 
  1480     0091                     	;# 
  1481     0092                     	;# 
  1482     0093                     	;# 
  1483     0095                     	;# 
  1484     0096                     	;# 
  1485     0097                     	;# 
  1486     0098                     	;# 
  1487     0099                     	;# 
  1488     009A                     	;# 
  1489     009B                     	;# 
  1490     009B                     	;# 
  1491     009C                     	;# 
  1492     009D                     	;# 
  1493     009E                     	;# 
  1494     010C                     	;# 
  1495     010D                     	;# 
  1496     010E                     	;# 
  1497     0110                     	;# 
  1498     0111                     	;# 
  1499     0112                     	;# 
  1500     0113                     	;# 
  1501     0114                     	;# 
  1502     0115                     	;# 
  1503     0116                     	;# 
  1504     0117                     	;# 
  1505     0118                     	;# 
  1506     0119                     	;# 
  1507     011A                     	;# 
  1508     011B                     	;# 
  1509     011D                     	;# 
  1510     018C                     	;# 
  1511     018D                     	;# 
  1512     0191                     	;# 
  1513     0191                     	;# 
  1514     0192                     	;# 
  1515     0193                     	;# 
  1516     0193                     	;# 
  1517     0193                     	;# 
  1518     0194                     	;# 
  1519     0195                     	;# 
  1520     0196                     	;# 
  1521     0199                     	;# 
  1522     019A                     	;# 
  1523     019B                     	;# 
  1524     019B                     	;# 
  1525     019B                     	;# 
  1526     019B                     	;# 
  1527     019C                     	;# 
  1528     019C                     	;# 
  1529     019D                     	;# 
  1530     019E                     	;# 
  1531     019F                     	;# 
  1532     020D                     	;# 
  1533     0210                     	;# 
  1534     0211                     	;# 
  1535     0212                     	;# 
  1536     0213                     	;# 
  1537     0214                     	;# 
  1538     0215                     	;# 
  1539     0215                     	;# 
  1540     0216                     	;# 
  1541     0217                     	;# 
  1542     0291                     	;# 
  1543     0291                     	;# 
  1544     0292                     	;# 
  1545     0293                     	;# 
  1546     0294                     	;# 
  1547     0295                     	;# 
  1548     0295                     	;# 
  1549     0296                     	;# 
  1550     0298                     	;# 
  1551     0298                     	;# 
  1552     0299                     	;# 
  1553     029A                     	;# 
  1554     029B                     	;# 
  1555     029C                     	;# 
  1556     029C                     	;# 
  1557     029D                     	;# 
  1558     029E                     	;# 
  1559     029F                     	;# 
  1560     0311                     	;# 
  1561     0311                     	;# 
  1562     0312                     	;# 
  1563     0313                     	;# 
  1564     0314                     	;# 
  1565     0315                     	;# 
  1566     0315                     	;# 
  1567     0316                     	;# 
  1568     0318                     	;# 
  1569     0318                     	;# 
  1570     0319                     	;# 
  1571     031A                     	;# 
  1572     031C                     	;# 
  1573     031C                     	;# 
  1574     031D                     	;# 
  1575     031E                     	;# 
  1576     0394                     	;# 
  1577     0395                     	;# 
  1578     0396                     	;# 
  1579     0415                     	;# 
  1580     0416                     	;# 
  1581     0417                     	;# 
  1582     041C                     	;# 
  1583     041D                     	;# 
  1584     041E                     	;# 
  1585     0791                     	;# 
  1586     0792                     	;# 
  1587     0793                     	;# 
  1588     0794                     	;# 
  1589     0795                     	;# 
  1590     0798                     	;# 
  1591     0799                     	;# 
  1592     07A0                     	;# 
  1593     07A1                     	;# 
  1594     07A3                     	;# 
  1595     07A4                     	;# 
  1596     07A6                     	;# 
  1597     07A7                     	;# 
  1598     07A9                     	;# 
  1599     07AA                     	;# 
  1600     0FE4                     	;# 
  1601     0FE5                     	;# 
  1602     0FE6                     	;# 
  1603     0FE7                     	;# 
  1604     0FE8                     	;# 
  1605     0FE9                     	;# 
  1606     0FEA                     	;# 
  1607     0FEB                     	;# 
  1608     0FED                     	;# 
  1609     0FEE                     	;# 
  1610     0FEF                     	;# 
  1611     0000                     	;# 
  1612     0001                     	;# 
  1613     0002                     	;# 
  1614     0003                     	;# 
  1615     0004                     	;# 
  1616     0005                     	;# 
  1617     0006                     	;# 
  1618     0007                     	;# 
  1619     0008                     	;# 
  1620     0009                     	;# 
  1621     000A                     	;# 
  1622     000B                     	;# 
  1623     000C                     	;# 
  1624     000D                     	;# 
  1625     000E                     	;# 
  1626     0010                     	;# 
  1627     0011                     	;# 
  1628     0012                     	;# 
  1629     0013                     	;# 
  1630     0015                     	;# 
  1631     0016                     	;# 
  1632     0016                     	;# 
  1633     0017                     	;# 
  1634     0018                     	;# 
  1635     0019                     	;# 
  1636     001A                     	;# 
  1637     001B                     	;# 
  1638     001C                     	;# 
  1639     001E                     	;# 
  1640     001F                     	;# 
  1641     008C                     	;# 
  1642     008D                     	;# 
  1643     008E                     	;# 
  1644     0090                     	;# 
  1645     0091                     	;# 
  1646     0092                     	;# 
  1647     0093                     	;# 
  1648     0095                     	;# 
  1649     0096                     	;# 
  1650     0097                     	;# 
  1651     0098                     	;# 
  1652     0099                     	;# 
  1653     009A                     	;# 
  1654     009B                     	;# 
  1655     009B                     	;# 
  1656     009C                     	;# 
  1657     009D                     	;# 
  1658     009E                     	;# 
  1659     010C                     	;# 
  1660     010D                     	;# 
  1661     010E                     	;# 
  1662     0110                     	;# 
  1663     0111                     	;# 
  1664     0112                     	;# 
  1665     0113                     	;# 
  1666     0114                     	;# 
  1667     0115                     	;# 
  1668     0116                     	;# 
  1669     0117                     	;# 
  1670     0118                     	;# 
  1671     0119                     	;# 
  1672     011A                     	;# 
  1673     011B                     	;# 
  1674     011D                     	;# 
  1675     018C                     	;# 
  1676     018D                     	;# 
  1677     0191                     	;# 
  1678     0191                     	;# 
  1679     0192                     	;# 
  1680     0193                     	;# 
  1681     0193                     	;# 
  1682     0193                     	;# 
  1683     0194                     	;# 
  1684     0195                     	;# 
  1685     0196                     	;# 
  1686     0199                     	;# 
  1687     019A                     	;# 
  1688     019B                     	;# 
  1689     019B                     	;# 
  1690     019B                     	;# 
  1691     019B                     	;# 
  1692     019C                     	;# 
  1693     019C                     	;# 
  1694     019D                     	;# 
  1695     019E                     	;# 
  1696     019F                     	;# 
  1697     020D                     	;# 
  1698     0210                     	;# 
  1699     0211                     	;# 
  1700     0212                     	;# 
  1701     0213                     	;# 
  1702     0214                     	;# 
  1703     0215                     	;# 
  1704     0215                     	;# 
  1705     0216                     	;# 
  1706     0217                     	;# 
  1707     0291                     	;# 
  1708     0291                     	;# 
  1709     0292                     	;# 
  1710     0293                     	;# 
  1711     0294                     	;# 
  1712     0295                     	;# 
  1713     0295                     	;# 
  1714     0296                     	;# 
  1715     0298                     	;# 
  1716     0298                     	;# 
  1717     0299                     	;# 
  1718     029A                     	;# 
  1719     029B                     	;# 
  1720     029C                     	;# 
  1721     029C                     	;# 
  1722     029D                     	;# 
  1723     029E                     	;# 
  1724     029F                     	;# 
  1725     0311                     	;# 
  1726     0311                     	;# 
  1727     0312                     	;# 
  1728     0313                     	;# 
  1729     0314                     	;# 
  1730     0315                     	;# 
  1731     0315                     	;# 
  1732     0316                     	;# 
  1733     0318                     	;# 
  1734     0318                     	;# 
  1735     0319                     	;# 
  1736     031A                     	;# 
  1737     031C                     	;# 
  1738     031C                     	;# 
  1739     031D                     	;# 
  1740     031E                     	;# 
  1741     0394                     	;# 
  1742     0395                     	;# 
  1743     0396                     	;# 
  1744     0415                     	;# 
  1745     0416                     	;# 
  1746     0417                     	;# 
  1747     041C                     	;# 
  1748     041D                     	;# 
  1749     041E                     	;# 
  1750     0791                     	;# 
  1751     0792                     	;# 
  1752     0793                     	;# 
  1753     0794                     	;# 
  1754     0795                     	;# 
  1755     0798                     	;# 
  1756     0799                     	;# 
  1757     07A0                     	;# 
  1758     07A1                     	;# 
  1759     07A3                     	;# 
  1760     07A4                     	;# 
  1761     07A6                     	;# 
  1762     07A7                     	;# 
  1763     07A9                     	;# 
  1764     07AA                     	;# 
  1765     0FE4                     	;# 
  1766     0FE5                     	;# 
  1767     0FE6                     	;# 
  1768     0FE7                     	;# 
  1769     0FE8                     	;# 
  1770     0FE9                     	;# 
  1771     0FEA                     	;# 
  1772     0FEB                     	;# 
  1773     0FED                     	;# 
  1774     0FEE                     	;# 
  1775     0FEF                     	;# 
  1776     0000                     	;# 
  1777     0001                     	;# 
  1778     0002                     	;# 
  1779     0003                     	;# 
  1780     0004                     	;# 
  1781     0005                     	;# 
  1782     0006                     	;# 
  1783     0007                     	;# 
  1784     0008                     	;# 
  1785     0009                     	;# 
  1786     000A                     	;# 
  1787     000B                     	;# 
  1788     000C                     	;# 
  1789     000D                     	;# 
  1790     000E                     	;# 
  1791     0010                     	;# 
  1792     0011                     	;# 
  1793     0012                     	;# 
  1794     0013                     	;# 
  1795     0015                     	;# 
  1796     0016                     	;# 
  1797     0016                     	;# 
  1798     0017                     	;# 
  1799     0018                     	;# 
  1800     0019                     	;# 
  1801     001A                     	;# 
  1802     001B                     	;# 
  1803     001C                     	;# 
  1804     001E                     	;# 
  1805     001F                     	;# 
  1806     008C                     	;# 
  1807     008D                     	;# 
  1808     008E                     	;# 
  1809     0090                     	;# 
  1810     0091                     	;# 
  1811     0092                     	;# 
  1812     0093                     	;# 
  1813     0095                     	;# 
  1814     0096                     	;# 
  1815     0097                     	;# 
  1816     0098                     	;# 
  1817     0099                     	;# 
  1818     009A                     	;# 
  1819     009B                     	;# 
  1820     009B                     	;# 
  1821     009C                     	;# 
  1822     009D                     	;# 
  1823     009E                     	;# 
  1824     010C                     	;# 
  1825     010D                     	;# 
  1826     010E                     	;# 
  1827     0110                     	;# 
  1828     0111                     	;# 
  1829     0112                     	;# 
  1830     0113                     	;# 
  1831     0114                     	;# 
  1832     0115                     	;# 
  1833     0116                     	;# 
  1834     0117                     	;# 
  1835     0118                     	;# 
  1836     0119                     	;# 
  1837     011A                     	;# 
  1838     011B                     	;# 
  1839     011D                     	;# 
  1840     018C                     	;# 
  1841     018D                     	;# 
  1842     0191                     	;# 
  1843     0191                     	;# 
  1844     0192                     	;# 
  1845     0193                     	;# 
  1846     0193                     	;# 
  1847     0193                     	;# 
  1848     0194                     	;# 
  1849     0195                     	;# 
  1850     0196                     	;# 
  1851     0199                     	;# 
  1852     019A                     	;# 
  1853     019B                     	;# 
  1854     019B                     	;# 
  1855     019B                     	;# 
  1856     019B                     	;# 
  1857     019C                     	;# 
  1858     019C                     	;# 
  1859     019D                     	;# 
  1860     019E                     	;# 
  1861     019F                     	;# 
  1862     020D                     	;# 
  1863     0210                     	;# 
  1864     0211                     	;# 
  1865     0212                     	;# 
  1866     0213                     	;# 
  1867     0214                     	;# 
  1868     0215                     	;# 
  1869     0215                     	;# 
  1870     0216                     	;# 
  1871     0217                     	;# 
  1872     0291                     	;# 
  1873     0291                     	;# 
  1874     0292                     	;# 
  1875     0293                     	;# 
  1876     0294                     	;# 
  1877     0295                     	;# 
  1878     0295                     	;# 
  1879     0296                     	;# 
  1880     0298                     	;# 
  1881     0298                     	;# 
  1882     0299                     	;# 
  1883     029A                     	;# 
  1884     029B                     	;# 
  1885     029C                     	;# 
  1886     029C                     	;# 
  1887     029D                     	;# 
  1888     029E                     	;# 
  1889     029F                     	;# 
  1890     0311                     	;# 
  1891     0311                     	;# 
  1892     0312                     	;# 
  1893     0313                     	;# 
  1894     0314                     	;# 
  1895     0315                     	;# 
  1896     0315                     	;# 
  1897     0316                     	;# 
  1898     0318                     	;# 
  1899     0318                     	;# 
  1900     0319                     	;# 
  1901     031A                     	;# 
  1902     031C                     	;# 
  1903     031C                     	;# 
  1904     031D                     	;# 
  1905     031E                     	;# 
  1906     0394                     	;# 
  1907     0395                     	;# 
  1908     0396                     	;# 
  1909     0415                     	;# 
  1910     0416                     	;# 
  1911     0417                     	;# 
  1912     041C                     	;# 
  1913     041D                     	;# 
  1914     041E                     	;# 
  1915     0791                     	;# 
  1916     0792                     	;# 
  1917     0793                     	;# 
  1918     0794                     	;# 
  1919     0795                     	;# 
  1920     0798                     	;# 
  1921     0799                     	;# 
  1922     07A0                     	;# 
  1923     07A1                     	;# 
  1924     07A3                     	;# 
  1925     07A4                     	;# 
  1926     07A6                     	;# 
  1927     07A7                     	;# 
  1928     07A9                     	;# 
  1929     07AA                     	;# 
  1930     0FE4                     	;# 
  1931     0FE5                     	;# 
  1932     0FE6                     	;# 
  1933     0FE7                     	;# 
  1934     0FE8                     	;# 
  1935     0FE9                     	;# 
  1936     0FEA                     	;# 
  1937     0FEB                     	;# 
  1938     0FED                     	;# 
  1939     0FEE                     	;# 
  1940     0FEF                     	;# 
  1941     0000                     	;# 
  1942     0001                     	;# 
  1943     0002                     	;# 
  1944     0003                     	;# 
  1945     0004                     	;# 
  1946     0005                     	;# 
  1947     0006                     	;# 
  1948     0007                     	;# 
  1949     0008                     	;# 
  1950     0009                     	;# 
  1951     000A                     	;# 
  1952     000B                     	;# 
  1953     000C                     	;# 
  1954     000D                     	;# 
  1955     000E                     	;# 
  1956     0010                     	;# 
  1957     0011                     	;# 
  1958     0012                     	;# 
  1959     0013                     	;# 
  1960     0015                     	;# 
  1961     0016                     	;# 
  1962     0016                     	;# 
  1963     0017                     	;# 
  1964     0018                     	;# 
  1965     0019                     	;# 
  1966     001A                     	;# 
  1967     001B                     	;# 
  1968     001C                     	;# 
  1969     001E                     	;# 
  1970     001F                     	;# 
  1971     008C                     	;# 
  1972     008D                     	;# 
  1973     008E                     	;# 
  1974     0090                     	;# 
  1975     0091                     	;# 
  1976     0092                     	;# 
  1977     0093                     	;# 
  1978     0095                     	;# 
  1979     0096                     	;# 
  1980     0097                     	;# 
  1981     0098                     	;# 
  1982     0099                     	;# 
  1983     009A                     	;# 
  1984     009B                     	;# 
  1985     009B                     	;# 
  1986     009C                     	;# 
  1987     009D                     	;# 
  1988     009E                     	;# 
  1989     010C                     	;# 
  1990     010D                     	;# 
  1991     010E                     	;# 
  1992     0110                     	;# 
  1993     0111                     	;# 
  1994     0112                     	;# 
  1995     0113                     	;# 
  1996     0114                     	;# 
  1997     0115                     	;# 
  1998     0116                     	;# 
  1999     0117                     	;# 
  2000     0118                     	;# 
  2001     0119                     	;# 
  2002     011A                     	;# 
  2003     011B                     	;# 
  2004     011D                     	;# 
  2005     018C                     	;# 
  2006     018D                     	;# 
  2007     0191                     	;# 
  2008     0191                     	;# 
  2009     0192                     	;# 
  2010     0193                     	;# 
  2011     0193                     	;# 
  2012     0193                     	;# 
  2013     0194                     	;# 
  2014     0195                     	;# 
  2015     0196                     	;# 
  2016     0199                     	;# 
  2017     019A                     	;# 
  2018     019B                     	;# 
  2019     019B                     	;# 
  2020     019B                     	;# 
  2021     019B                     	;# 
  2022     019C                     	;# 
  2023     019C                     	;# 
  2024     019D                     	;# 
  2025     019E                     	;# 
  2026     019F                     	;# 
  2027     020D                     	;# 
  2028     0210                     	;# 
  2029     0211                     	;# 
  2030     0212                     	;# 
  2031     0213                     	;# 
  2032     0214                     	;# 
  2033     0215                     	;# 
  2034     0215                     	;# 
  2035     0216                     	;# 
  2036     0217                     	;# 
  2037     0291                     	;# 
  2038     0291                     	;# 
  2039     0292                     	;# 
  2040     0293                     	;# 
  2041     0294                     	;# 
  2042     0295                     	;# 
  2043     0295                     	;# 
  2044     0296                     	;# 
  2045     0298                     	;# 
  2046     0298                     	;# 
  2047     0299                     	;# 
  2048     029A                     	;# 
  2049     029B                     	;# 
  2050     029C                     	;# 
  2051     029C                     	;# 
  2052     029D                     	;# 
  2053     029E                     	;# 
  2054     029F                     	;# 
  2055     0311                     	;# 
  2056     0311                     	;# 
  2057     0312                     	;# 
  2058     0313                     	;# 
  2059     0314                     	;# 
  2060     0315                     	;# 
  2061     0315                     	;# 
  2062     0316                     	;# 
  2063     0318                     	;# 
  2064     0318                     	;# 
  2065     0319                     	;# 
  2066     031A                     	;# 
  2067     031C                     	;# 
  2068     031C                     	;# 
  2069     031D                     	;# 
  2070     031E                     	;# 
  2071     0394                     	;# 
  2072     0395                     	;# 
  2073     0396                     	;# 
  2074     0415                     	;# 
  2075     0416                     	;# 
  2076     0417                     	;# 
  2077     041C                     	;# 
  2078     041D                     	;# 
  2079     041E                     	;# 
  2080     0791                     	;# 
  2081     0792                     	;# 
  2082     0793                     	;# 
  2083     0794                     	;# 
  2084     0795                     	;# 
  2085     0798                     	;# 
  2086     0799                     	;# 
  2087     07A0                     	;# 
  2088     07A1                     	;# 
  2089     07A3                     	;# 
  2090     07A4                     	;# 
  2091     07A6                     	;# 
  2092     07A7                     	;# 
  2093     07A9                     	;# 
  2094     07AA                     	;# 
  2095     0FE4                     	;# 
  2096     0FE5                     	;# 
  2097     0FE6                     	;# 
  2098     0FE7                     	;# 
  2099     0FE8                     	;# 
  2100     0FE9                     	;# 
  2101     0FEA                     	;# 
  2102     0FEB                     	;# 
  2103     0FED                     	;# 
  2104     0FEE                     	;# 
  2105     0FEF                     	;_SES_Modbus
  2106                           
  2107                           	psect	idataBANK0
  2108     037B                     __pidataBANK0:
  2109                           
  2110                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2111     037B  3416               	retlw	22
  2112     037C  3424               	retlw	36
  2113                           
  2114                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2115     037D  340B               	retlw	11
  2116     037E  3424               	retlw	36
  2117                           
  2118                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2119     037F  3400               	retlw	0
  2120     0380  3424               	retlw	36
  2121                           
  2122                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2123     0381  3410               	retlw	16
  2124     0382  342C               	retlw	44
  2125                           
  2126                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2127     0383  340D               	retlw	13
  2128     0384  342C               	retlw	44
  2129                           
  2130                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2131     0385  3406               	retlw	6
  2132     0386  342C               	retlw	44
  2133                           
  2134                           	psect	stringtext1
  2135     0242                     __pstringtext1:
  2136     0242                     _i2c_fsmStateTable:
  2137     0242  343C               	retlw	low _I2C_DO_IDLE
  2138     0243  3404               	retlw	high _I2C_DO_IDLE
  2139     0244  34BD               	retlw	low _I2C_DO_SEND_ADR_READ
  2140     0245  3403               	retlw	high _I2C_DO_SEND_ADR_READ
  2141     0246  34CE               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2142     0247  3403               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2143     0248  3491               	retlw	low _I2C_DO_TX
  2144     0249  3400               	retlw	high _I2C_DO_TX
  2145     024A  34E4               	retlw	low _I2C_DO_RX
  2146     024B  3400               	retlw	high _I2C_DO_RX
  2147     024C  34DD               	retlw	low _I2C_DO_RCEN
  2148     024D  3403               	retlw	high _I2C_DO_RCEN
  2149     024E  34A1               	retlw	low _I2C_DO_TX_EMPTY
  2150     024F  3401               	retlw	high _I2C_DO_TX_EMPTY
  2151     0250  3437               	retlw	low _I2C_DO_SEND_RESTART_READ
  2152     0251  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  2153     0252  3432               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2154     0253  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2155     0254  342D               	retlw	low _I2C_DO_SEND_RESTART
  2156     0255  3404               	retlw	high _I2C_DO_SEND_RESTART
  2157     0256  3428               	retlw	low _I2C_DO_SEND_STOP
  2158     0257  3404               	retlw	high _I2C_DO_SEND_STOP
  2159     0258  3423               	retlw	low _I2C_DO_RX_ACK
  2160     0259  3404               	retlw	high _I2C_DO_RX_ACK
  2161     025A  341E               	retlw	low _I2C_DO_RX_NACK_STOP
  2162     025B  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  2163     025C  3419               	retlw	low _I2C_DO_RX_NACK_RESTART
  2164     025D  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  2165     025E  3414               	retlw	low _I2C_DO_RESET
  2166     025F  3404               	retlw	high _I2C_DO_RESET
  2167     0260  34F6               	retlw	low _I2C_DO_ADDRESS_NACK
  2168     0261  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  2169     0262                     __end_of_i2c_fsmStateTable:
  2170                           
  2171                           	psect	stringtext2
  2172     03C6                     __pstringtext2:
  2173     03C6                     _fctsupported:
  2174     03C6  3401               	retlw	1
  2175     03C7  3402               	retlw	2
  2176     03C8  3403               	retlw	3
  2177     03C9  3404               	retlw	4
  2178     03CA  3405               	retlw	5
  2179     03CB  3406               	retlw	6
  2180     03CC  340F               	retlw	15
  2181     03CD  3410               	retlw	16
  2182     03CE                     __end_of_fctsupported:
  2183                           
  2184                           	psect	nvBANK0
  2185     0051                     __pnvBANK0:
  2186     0051                     _TMR1_InterruptHandler:
  2187     0051                     	ds	2
  2188     0053                     _EUSART_ErrorHandler:
  2189     0053                     	ds	2
  2190     0055                     _EUSART_OverrunErrorHandler:
  2191     0055                     	ds	2
  2192     0057                     _EUSART_FramingErrorHandler:
  2193     0057                     	ds	2
  2194     0059                     _EUSART_RxDefaultInterruptHandler:
  2195     0059                     	ds	2
  2196     005B                     _EUSART_TxDefaultInterruptHandler:
  2197     005B                     	ds	2
  2198     0019                     _T1GCONbits	set	25
  2199     0018                     _T1CONbits	set	24
  2200     0018                     _T1CON	set	24
  2201     0016                     _TMR1L	set	22
  2202     0017                     _TMR1H	set	23
  2203     0019                     _T1GCON	set	25
  2204     000B                     _INTCONbits	set	11
  2205     0011                     _PIR1bits	set	17
  2206     0012                     _PIR2bits	set	18
  2207     0092                     _PIE2bits	set	146
  2208     0091                     _PIE1bits	set	145
  2209     0097                     _WDTCON	set	151
  2210     0098                     _OSCTUNE	set	152
  2211     0099                     _OSCCON	set	153
  2212     0095                     _OPTION_REGbits	set	149
  2213     008E                     _TRISC	set	142
  2214     008D                     _TRISB	set	141
  2215     008C                     _TRISA	set	140
  2216     0090                     _TRISE	set	144
  2217     010E                     _LATCbits	set	270
  2218     0116                     _BORCON	set	278
  2219     011D                     _APFCON	set	285
  2220     010E                     _LATC	set	270
  2221     010D                     _LATB	set	269
  2222     010C                     _LATA	set	268
  2223     0110                     _LATE	set	272
  2224     0199                     _RCREG	set	409
  2225     019D                     _RCSTAbits	set	413
  2226     019A                     _TXREG	set	410
  2227     019E                     _TXSTAbits	set	414
  2228     019C                     _SPBRGH	set	412
  2229     019B                     _SPBRGL	set	411
  2230     019E                     _TXSTA	set	414
  2231     019D                     _RCSTA	set	413
  2232     019F                     _BAUDCON	set	415
  2233     018C                     _ANSELA	set	396
  2234     018D                     _ANSELB	set	397
  2235     0214                     _SSPSTATbits	set	532
  2236     0216                     _SSPCON2bits	set	534
  2237     0211                     _SSPBUF	set	529
  2238     0215                     _SSPCON1bits	set	533
  2239     0212                     _SSPADD	set	530
  2240     0216                     _SSPCON2	set	534
  2241     0215                     _SSPCON1	set	533
  2242     0214                     _SSPSTAT	set	532
  2243     020D                     _WPUB	set	525
  2244     0210                     _WPUE	set	528
  2245                           
  2246                           	psect	cinit
  2247     0057                     start_initialization:	
  2248                           ; #config settings
  2249                           
  2250     0057                     __initialization:	;BIGRAM
  2251                           
  2252                           ; Initialize objects allocated to BANK0
  2253     0057  307B               	movlw	low __pidataBANK0
  2254     0058  0084               	movwf	4
  2255     0059  3083               	movlw	(high __pidataBANK0)| (0+128)
  2256     005A  0085               	movwf	5
  2257     005B  305D               	movlw	low __pdataBANK0
  2258     005C  0086               	movwf	6
  2259     005D  3000               	movlw	high __pdataBANK0
  2260     005E  0087               	movwf	7
  2261     005F  3000               	movlw	0
  2262     0060  00FF               	movwf	btemp+1
  2263     0061  300C               	movlw	12
  2264     0062  3183  2387  3180   	fcall	init_ram
  2265                           
  2266                           ; Clear objects allocated to BIGRAM
  2267     0065  30D4               	movlw	low (0+8404)
  2268     0066  0084               	movwf	4
  2269     0067  3020               	movlw	high (0+8404)
  2270     0068  0085               	movwf	5
  2271     0069  301C               	movlw	28
  2272     006A  00FE               	movwf	btemp
  2273     006B  3001               	movlw	1
  2274     006C  00FF               	movwf	btemp+1
  2275     006D  3183  2393  3180   	fcall	clear_ram0
  2276                           
  2277                           ; Clear objects allocated to COMMON
  2278     0070  01F0               	clrf	__pbssCOMMON& (0+127)
  2279     0071  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2280     0072  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2281     0073  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2282     0074  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2283     0075  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2284     0076  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  2285                           
  2286                           ; Clear objects allocated to BANK0
  2287     0077  3020               	movlw	low __pbssBANK0
  2288     0078  0084               	movwf	4
  2289     0079  3000               	movlw	high __pbssBANK0
  2290     007A  0085               	movwf	5
  2291     007B  3031               	movlw	49
  2292     007C  00FE               	movwf	btemp
  2293     007D  3000               	movlw	0
  2294     007E  00FF               	movwf	btemp+1
  2295     007F  3183  2393  3180   	fcall	clear_ram0
  2296                           
  2297                           ; Clear objects allocated to BANK1
  2298     0082  30A0               	movlw	low __pbssBANK1
  2299     0083  0084               	movwf	4
  2300     0084  3000               	movlw	high __pbssBANK1
  2301     0085  0085               	movwf	5
  2302     0086  3030               	movlw	48
  2303     0087  00FE               	movwf	btemp
  2304     0088  3000               	movlw	0
  2305     0089  00FF               	movwf	btemp+1
  2306     008A  3183  2393  3180   	fcall	clear_ram0
  2307     008D                     end_of_initialization:	
  2308                           ;End of C runtime variable initialization code
  2309                           
  2310     008D                     __end_of__initialization:
  2311     008D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2312     008E  0020               	movlb	0
  2313     008F  3183  2BE4         	ljmp	_main	;jump to C main() function
  2314                           
  2315                           	psect	bssCOMMON
  2316     0070                     __pbssCOMMON:
  2317     0070                     _eusartRxLastError:
  2318     0070                     	ds	1
  2319     0071                     _eusartRxCount:
  2320     0071                     	ds	1
  2321     0072                     _eusartRxTail:
  2322     0072                     	ds	1
  2323     0073                     _eusartRxHead:
  2324     0073                     	ds	1
  2325     0074                     _eusartTxBufferRemaining:
  2326     0074                     	ds	1
  2327     0075                     _eusartTxTail:
  2328     0075                     	ds	1
  2329     0076                     _eusartTxHead:
  2330     0076                     	ds	1
  2331                           
  2332                           	psect	bssBANK0
  2333     0020                     __pbssBANK0:
  2334     0020                     _I2C_Status:
  2335     0020                     	ds	29
  2336     003D                     _device_time:
  2337     003D                     	ds	4
  2338     0041                     _timer1ReloadVal:
  2339     0041                     	ds	2
  2340     0043                     _MSSP_InterruptHandler:
  2341     0043                     	ds	2
  2342     0045                     _MB_UID:
  2343     0045                     	ds	1
  2344     0046                     _f_Indicator:
  2345     0046                     	ds	1
  2346     0047                     _SW_Ad:
  2347     0047                     	ds	1
  2348     0048                     _LED_Statuc:
  2349     0048                     	ds	1
  2350     0049                     _MB_Register:
  2351     0049                     	ds	4
  2352     004D                     _Humidity:
  2353     004D                     	ds	2
  2354     004F                     _Temperature:
  2355     004F                     	ds	2
  2356                           
  2357                           	psect	dataBANK0
  2358     005D                     __pdataBANK0:
  2359     005D                     _SHT30_CMD_MEASURE_L_Disable:
  2360     005D                     	ds	2
  2361     005F                     _SHT30_CMD_MEASURE_M_Disable:
  2362     005F                     	ds	2
  2363     0061                     _SHT30_CMD_MEASURE_H_Disable:
  2364     0061                     	ds	2
  2365     0063                     _SHT30_CMD_MEASURE_L_Enable:
  2366     0063                     	ds	2
  2367     0065                     _SHT30_CMD_MEASURE_M_Enable:
  2368     0065                     	ds	2
  2369     0067                     _SHT30_CMD_MEASURE_H_Enable:
  2370     0067                     	ds	2
  2371                           
  2372                           	psect	bssBANK1
  2373     00A0                     __pbssBANK1:
  2374     00A0                     _eusartRxStatusBuffer:
  2375     00A0                     	ds	16
  2376     00B0                     _eusartRxBuffer:
  2377     00B0                     	ds	16
  2378     00C0                     _eusartTxBuffer:
  2379     00C0                     	ds	16
  2380                           
  2381                           	psect	inittext
  2382     0387                     init_ram:
  2383     0387  00FE               	movwf	btemp
  2384     0388                     initloop:
  2385     0388  0012               	moviw fsr0++
  2386     0389  001E               	movwi fsr1++
  2387     038A  3001               	movlw	1
  2388     038B  02FE               	subwf	btemp,f
  2389     038C  3000               	movlw	0
  2390     038D  3BFF               	subwfb	btemp+1,f
  2391     038E  087F               	movf	btemp+1,w
  2392     038F  047E               	iorwf	btemp,w
  2393     0390  1D03               	skipz
  2394     0391  2B88               	goto	initloop
  2395     0392  3400               	retlw	0
  2396                           
  2397                           	psect	clrtext
  2398     0393                     clear_ram0:	
  2399                           ;	Called with FSR0 containing the base address, and
  2400                           ;	btemp/btemp+1 has the size to clear
  2401                           
  2402     0393  0064               	clrwdt	;clear the watchdog before getting into this loop
  2403     0394                     clrloop0:
  2404     0394  0180               	clrf	0	;clear RAM location pointed to by FSR
  2405     0395  3101               	addfsr 0,1
  2406     0396  3001               	movlw	1
  2407     0397  02FE               	subwf	btemp,f
  2408     0398  3000               	movlw	0
  2409     0399  3BFF               	subwfb	btemp+1,f
  2410     039A  087F               	movf	btemp+1,w
  2411     039B  047E               	iorwf	btemp,w
  2412     039C  1D03               	skipz
  2413     039D  2B94               	goto	clrloop0	;have we reached the end yet?
  2414     039E  3400               	retlw	0	;all done for this memory range, return
  2415                           
  2416                           	psect	cstackCOMMON
  2417     0077                     __pcstackCOMMON:
  2418     0077                     ?_I2C_Initialize:
  2419     0077                     ?_OSCILLATOR_Initialize:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422     0077                     ?_WDT_Initialize:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425     0077                     ?_TMR1_Initialize:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428     0077                     ?_EUSART_Initialize:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431     0077                     ?_I2C_DO_IDLE:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434     0077                     ??_I2C_DO_IDLE:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437     0077                     ?_I2C_DO_SEND_ADR_READ:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440     0077                     ??_I2C_DO_SEND_ADR_READ:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443     0077                     ?_I2C_DO_SEND_ADR_WRITE:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446     0077                     ?_I2C_DO_TX:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449     0077                     ?_I2C_DO_RX:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452     0077                     ??_I2C_DO_RX:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455     0077                     ?_I2C_DO_RCEN:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458     0077                     ??_I2C_DO_RCEN:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461     0077                     ?_I2C_DO_TX_EMPTY:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464     0077                     ??_I2C_DO_TX_EMPTY:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467     0077                     ?_I2C_DO_SEND_RESTART_READ:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470     0077                     ??_I2C_DO_SEND_RESTART_READ:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473     0077                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476     0077                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479     0077                     ?_I2C_DO_SEND_RESTART:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482     0077                     ??_I2C_DO_SEND_RESTART:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485     0077                     ?_I2C_DO_SEND_STOP:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488     0077                     ??_I2C_DO_SEND_STOP:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491     0077                     ?_I2C_DO_RX_ACK:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494     0077                     ??_I2C_DO_RX_ACK:	
  2495                           ; 1 bytes @ 0x0
  2496                           
  2497     0077                     ?_I2C_DO_RX_NACK_STOP:	
  2498                           ; 1 bytes @ 0x0
  2499                           
  2500     0077                     ??_I2C_DO_RX_NACK_STOP:	
  2501                           ; 1 bytes @ 0x0
  2502                           
  2503     0077                     ?_I2C_DO_RX_NACK_RESTART:	
  2504                           ; 1 bytes @ 0x0
  2505                           
  2506     0077                     ??_I2C_DO_RX_NACK_RESTART:	
  2507                           ; 1 bytes @ 0x0
  2508                           
  2509     0077                     ?_I2C_DO_RESET:	
  2510                           ; 1 bytes @ 0x0
  2511                           
  2512     0077                     ??_I2C_DO_RESET:	
  2513                           ; 1 bytes @ 0x0
  2514                           
  2515     0077                     ?_I2C_DO_ADDRESS_NACK:	
  2516                           ; 1 bytes @ 0x0
  2517                           
  2518     0077                     ??_I2C_DO_ADDRESS_NACK:	
  2519                           ; 1 bytes @ 0x0
  2520                           
  2521     0077                     ?_I2C_MasterIsr:	
  2522                           ; 1 bytes @ 0x0
  2523                           
  2524     0077                     ?_I2C_MasterClearIrq:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527     0077                     ??_I2C_MasterClearIrq:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530     0077                     ?_I2C_SetCallback:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533     0077                     ?_I2C_MasterFsm:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536     0077                     ?_I2C_MasterIsNack:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539     0077                     ??_I2C_MasterIsNack:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542     0077                     ?_I2C_MasterSendTxData:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545     0077                     ??_I2C_MasterSendTxData:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548     0077                     ?_I2C_MasterGetRxData:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551     0077                     ??_I2C_MasterGetRxData:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554     0077                     ?_I2C_MasterSendAck:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557     0077                     ??_I2C_MasterSendAck:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560     0077                     ?_I2C_MasterStartRx:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563     0077                     ??_I2C_MasterStartRx:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566     0077                     ?_I2C_MasterSetIrq:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569     0077                     ??_I2C_MasterSetIrq:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572     0077                     ?_I2C_MasterEnableRestart:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575     0077                     ??_I2C_MasterEnableRestart:	
  2576                           ; 1 bytes @ 0x0
  2577                           
  2578     0077                     ?_I2C_MasterStop:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581     0077                     ??_I2C_MasterStop:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584     0077                     ?_I2C_MasterSendNack:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587     0077                     ??_I2C_MasterSendNack:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590     0077                     ?_TMR1_ISR:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593     0077                     ?_EUSART_Receive_ISR:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596     0077                     ?_EUSART_Transmit_ISR:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599     0077                     ??_EUSART_Transmit_ISR:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602     0077                     ?_EUSART_DefaultFramingErrorHandler:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605     0077                     ??_EUSART_DefaultFramingErrorHandler:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608     0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611     0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614     0077                     ?_EUSART_DefaultErrorHandler:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617     0077                     ?_EUSART_RxDataHandler:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620     0077                     ??_EUSART_RxDataHandler:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623     0077                     ?_TMR1_DefaultInterruptHandler:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626     0077                     ??_TMR1_DefaultInterruptHandler:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629     0077                     ?_TMR1_CallBack:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632     0077                     ??_TMR1_CallBack:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635     0077                     ?_rtcc_handle:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638     0077                     ??_rtcc_handle:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641     0077                     ?_PIN_MANAGER_Initialize:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644     0077                     ?_SYSTEM_Initialize:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647     0077                     ?_I2C_SetBuffer:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650     0077                     ?_INTERRUPT_InterruptManager:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653     0077                     ?_main:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656     0077                     ?_TMR1_WriteTimer:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659     0077                     I2C_MasterSendTxData@data:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662     0077                     I2C_SetBuffer@bufferSize:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665     0077                     I2C_SetCallback@cb:	
  2666                           ; 2 bytes @ 0x0
  2667                           
  2668     0077                     TMR1_WriteTimer@timerVal:	
  2669                           ; 2 bytes @ 0x0
  2670                           
  2671                           
  2672                           ; 2 bytes @ 0x0
  2673     0077                     	ds	1
  2674     0078                     ??_I2C_DO_SEND_ADR_WRITE:
  2675     0078                     ??_I2C_DO_TX:	
  2676                           ; 1 bytes @ 0x1
  2677                           
  2678     0078                     ??_EUSART_Receive_ISR:	
  2679                           ; 1 bytes @ 0x1
  2680                           
  2681     0078                     ??_EUSART_DefaultErrorHandler:	
  2682                           ; 1 bytes @ 0x1
  2683                           
  2684                           
  2685                           ; 1 bytes @ 0x1
  2686     0078                     	ds	1
  2687     0079                     ??_TMR1_ISR:
  2688     0079                     ??_I2C_SetBuffer:	
  2689                           ; 1 bytes @ 0x2
  2690                           
  2691     0079                     ??_TMR1_WriteTimer:	
  2692                           ; 1 bytes @ 0x2
  2693                           
  2694     0079                     I2C_SetBuffer@buffer:	
  2695                           ; 1 bytes @ 0x2
  2696                           
  2697     0079                     I2C_SetCallback@ptr:	
  2698                           ; 1 bytes @ 0x2
  2699                           
  2700                           
  2701                           ; 1 bytes @ 0x2
  2702     0079                     	ds	1
  2703     007A                     ??_I2C_SetCallback:
  2704     007A                     ??_I2C_MasterFsm:	
  2705                           ; 1 bytes @ 0x3
  2706                           
  2707     007A                     I2C_SetCallback@idx:	
  2708                           ; 1 bytes @ 0x3
  2709                           
  2710                           
  2711                           ; 1 bytes @ 0x3
  2712     007A                     	ds	1
  2713     007B                     ?_I2C_SetDataCompleteCallback:
  2714     007B                     I2C_SetDataCompleteCallback@cb:	
  2715                           ; 1 bytes @ 0x4
  2716                           
  2717                           
  2718                           ; 2 bytes @ 0x4
  2719     007B                     	ds	1
  2720     007C                     ??_I2C_MasterIsr:
  2721     007C                     ??_INTERRUPT_InterruptManager:	
  2722                           ; 1 bytes @ 0x5
  2723                           
  2724                           
  2725                           ; 1 bytes @ 0x5
  2726     007C                     	ds	1
  2727     007D                     I2C_SetDataCompleteCallback@ptr:
  2728                           
  2729                           ; 1 bytes @ 0x6
  2730     007D                     	ds	1
  2731     007E                     ??_I2C_CallbackReturnStop:
  2732     007E                     ??_I2C_CallbackReturnReset:	
  2733                           ; 1 bytes @ 0x7
  2734                           
  2735     007E                     ??_rd1RegCompleteHandler:	
  2736                           ; 1 bytes @ 0x7
  2737                           
  2738     007E                     ??_rd2RegCompleteHandler:	
  2739                           ; 1 bytes @ 0x7
  2740                           
  2741     007E                     ??_wr1RegCompleteHandler:	
  2742                           ; 1 bytes @ 0x7
  2743                           
  2744     007E                     ??_wr2RegCompleteHandler:	
  2745                           ; 1 bytes @ 0x7
  2746                           
  2747     007E                     ??_rdBlkRegCompleteHandler:	
  2748                           ; 1 bytes @ 0x7
  2749                           
  2750     007E                     ??_I2C_SetDataCompleteCallback:	
  2751                           ; 1 bytes @ 0x7
  2752                           
  2753                           
  2754                           	psect	cstackBANK0
  2755     0069                     __pcstackBANK0:	
  2756                           ; 1 bytes @ 0x7
  2757                           
  2758     0069                     ??_I2C_Initialize:
  2759     0069                     ??_OSCILLATOR_Initialize:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762     0069                     ??_WDT_Initialize:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765     0069                     ?_I2C_CallbackReturnStop:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768     0069                     ?_I2C_CallbackReturnReset:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771     0069                     ?_EUSART_SetRxInterruptHandler:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774     0069                     ?_EUSART_SetTxInterruptHandler:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777     0069                     ?_EUSART_SetFramingErrorHandler:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780     0069                     ?_EUSART_SetOverrunErrorHandler:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783     0069                     ?_EUSART_SetErrorHandler:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786     0069                     ?_rd1RegCompleteHandler:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789     0069                     ?_rd2RegCompleteHandler:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792     0069                     ?_wr1RegCompleteHandler:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795     0069                     ?_wr2RegCompleteHandler:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798     0069                     ?_rdBlkRegCompleteHandler:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801     0069                     ?_TMR1_SetInterruptHandler:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804     0069                     ??_PIN_MANAGER_Initialize:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807     0069                     I2C_CallbackReturnStop@funPtr:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     0069                     I2C_CallbackReturnReset@funPtr:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     0069                     rd1RegCompleteHandler@ptr:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816     0069                     rd2RegCompleteHandler@ptr:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     0069                     wr1RegCompleteHandler@ptr:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     0069                     wr2RegCompleteHandler@ptr:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     0069                     rdBlkRegCompleteHandler@ptr:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     0069                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831     0069                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2832                           ; 2 bytes @ 0x0
  2833                           
  2834     0069                     EUSART_SetErrorHandler@interruptHandler:	
  2835                           ; 2 bytes @ 0x0
  2836                           
  2837     0069                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2838                           ; 2 bytes @ 0x0
  2839                           
  2840     0069                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2841                           ; 2 bytes @ 0x0
  2842                           
  2843     0069                     TMR1_SetInterruptHandler@InterruptHandler:	
  2844                           ; 2 bytes @ 0x0
  2845                           
  2846                           
  2847                           ; 2 bytes @ 0x0
  2848     0069                     	ds	2
  2849     006B                     ??_TMR1_Initialize:
  2850     006B                     ??_EUSART_Initialize:	
  2851                           ; 1 bytes @ 0x2
  2852                           
  2853     006B                     ??_EUSART_SetRxInterruptHandler:	
  2854                           ; 1 bytes @ 0x2
  2855                           
  2856     006B                     ??_EUSART_SetTxInterruptHandler:	
  2857                           ; 1 bytes @ 0x2
  2858                           
  2859     006B                     ??_EUSART_SetFramingErrorHandler:	
  2860                           ; 1 bytes @ 0x2
  2861                           
  2862     006B                     ??_EUSART_SetOverrunErrorHandler:	
  2863                           ; 1 bytes @ 0x2
  2864                           
  2865     006B                     ??_EUSART_SetErrorHandler:	
  2866                           ; 1 bytes @ 0x2
  2867                           
  2868     006B                     ??_TMR1_SetInterruptHandler:	
  2869                           ; 1 bytes @ 0x2
  2870                           
  2871     006B                     ??_SYSTEM_Initialize:	
  2872                           ; 1 bytes @ 0x2
  2873                           
  2874     006B                     ??_main:	
  2875                           ; 1 bytes @ 0x2
  2876                           
  2877                           
  2878                           	psect	maintext
  2879     03E4                     __pmaintext:	
  2880                           ; 1 bytes @ 0x2
  2881 ;;
  2882 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2883 ;;
  2884 ;; *************** function _main *****************
  2885 ;; Defined at:
  2886 ;;		line 49 in file "main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : B1F/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2900 ;;      Params:         0       0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels required when called: 10
  2906 ;; This function calls:
  2907 ;;		_SYSTEM_Initialize
  2908 ;; This function is called by:
  2909 ;;		Startup code after reset
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913     03E4                     _main:	
  2914                           ;psect for function _main
  2915                           
  2916     03E4                     l4376:	
  2917                           ;incstack = 0
  2918                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2919                           
  2920                           
  2921                           ;main.c: 52:     SYSTEM_Initialize();
  2922     03E4  3182  22E7  3183   	fcall	_SYSTEM_Initialize
  2923     03E7                     l598:	
  2924                           ;main.c: 69:     while (1)
  2925                           
  2926     03E7                     l599:	
  2927                           ;main.c: 70:     {;main.c: 72:     }
  2928                           
  2929     03E7  2BE7               	goto	l598
  2930     03E8  3180  2855         	ljmp	start
  2931     03EA                     __end_of_main:
  2932                           
  2933                           	psect	text1
  2934     02E7                     __ptext1:	
  2935 ;; *************** function _SYSTEM_Initialize *****************
  2936 ;; Defined at:
  2937 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2951 ;;      Params:         0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 9
  2958 ;; This function calls:
  2959 ;;		_EUSART_Initialize
  2960 ;;		_I2C_Initialize
  2961 ;;		_OSCILLATOR_Initialize
  2962 ;;		_PIN_MANAGER_Initialize
  2963 ;;		_TMR1_Initialize
  2964 ;;		_WDT_Initialize
  2965 ;; This function is called by:
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     02E7                     _SYSTEM_Initialize:	
  2971                           ;psect for function _SYSTEM_Initialize
  2972                           
  2973     02E7                     l4280:	
  2974                           ;incstack = 0
  2975                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2976                           
  2977                           
  2978                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2979     02E7  3183  23B4  3182   	fcall	_I2C_Initialize
  2980                           
  2981                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2982     02EA  3182  2282  3182   	fcall	_PIN_MANAGER_Initialize
  2983                           
  2984                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2985     02ED  3183  23D6  3182   	fcall	_OSCILLATOR_Initialize
  2986                           
  2987                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2988     02F0  3184  2446  3182   	fcall	_WDT_Initialize
  2989                           
  2990                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  2991     02F3  3182  229E  3182   	fcall	_TMR1_Initialize
  2992                           
  2993                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2994     02F6  3181  2127  3182   	fcall	_EUSART_Initialize
  2995     02F9                     l59:
  2996     02F9  0008               	return
  2997     02FA                     __end_of_SYSTEM_Initialize:
  2998                           
  2999                           	psect	text2
  3000     0446                     __ptext2:	
  3001 ;; *************** function _WDT_Initialize *****************
  3002 ;; Defined at:
  3003 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3017 ;;      Params:         0       0       0       0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 7
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_SYSTEM_Initialize
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     0446                     _WDT_Initialize:	
  3032                           ;psect for function _WDT_Initialize
  3033                           
  3034     0446                     l4220:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _WDT_Initialize: [wreg]
  3037                           
  3038                           
  3039                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  3040     0446  3016               	movlw	22
  3041     0447  0021               	movlb	1	; select bank1
  3042     0448  0097               	movwf	23	;volatile
  3043     0449                     l65:
  3044     0449  0008               	return
  3045     044A                     __end_of_WDT_Initialize:
  3046                           
  3047                           	psect	text3
  3048     029E                     __ptext3:	
  3049 ;; *************** function _TMR1_Initialize *****************
  3050 ;; Defined at:
  3051 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3065 ;;      Params:         0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        0 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 8
  3072 ;; This function calls:
  3073 ;;		_TMR1_SetInterruptHandler
  3074 ;; This function is called by:
  3075 ;;		_SYSTEM_Initialize
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079     029E                     _TMR1_Initialize:	
  3080                           ;psect for function _TMR1_Initialize
  3081                           
  3082     029E                     l4222:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3085                           
  3086                           
  3087                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3088     029E  0020               	movlb	0	; select bank0
  3089     029F  0199               	clrf	25	;volatile
  3090     02A0                     l4224:
  3091                           
  3092                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3093     02A0  30E0               	movlw	224
  3094     02A1  0097               	movwf	23	;volatile
  3095     02A2                     l4226:
  3096                           
  3097                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3098     02A2  30C0               	movlw	192
  3099     02A3  0096               	movwf	22	;volatile
  3100     02A4                     l4228:
  3101                           
  3102                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3103     02A4  1011               	bcf	17,0	;volatile
  3104     02A5                     l4230:
  3105                           
  3106                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3107     02A5  0817               	movf	23,w	;volatile
  3108     02A6  00C2               	movwf	_timer1ReloadVal+1	;volatile
  3109     02A7  0816               	movf	22,w	;volatile
  3110     02A8  00C1               	movwf	_timer1ReloadVal	;volatile
  3111     02A9                     l4232:
  3112                           
  3113                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3114     02A9  0021               	movlb	1	; select bank1
  3115     02AA  1411               	bsf	17,0	;volatile
  3116     02AB                     l4234:
  3117                           
  3118                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3119     02AB  3074               	movlw	low _TMR1_DefaultInterruptHandler
  3120     02AC  0020               	movlb	0	; select bank0
  3121     02AD  00E9               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3122     02AE  3004               	movlw	high _TMR1_DefaultInterruptHandler
  3123     02AF  00EA               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3124     02B0  3183  23EA  3182   	fcall	_TMR1_SetInterruptHandler
  3125     02B3                     l4236:
  3126                           
  3127                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3128     02B3  3041               	movlw	65
  3129     02B4  0020               	movlb	0	; select bank0
  3130     02B5  0098               	movwf	24	;volatile
  3131     02B6                     l971:
  3132     02B6  0008               	return
  3133     02B7                     __end_of_TMR1_Initialize:
  3134                           
  3135                           	psect	text4
  3136     03EA                     __ptext4:	
  3137 ;; *************** function _TMR1_SetInterruptHandler *****************
  3138 ;; Defined at:
  3139 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3142 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3154 ;;      Params:         0       2       0       0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0
  3157 ;;      Totals:         0       2       0       0       0       0       0       0
  3158 ;;Total ram usage:        2 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 7
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_TMR1_Initialize
  3165 ;;		_Tick_Init_SES
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169     03EA                     _TMR1_SetInterruptHandler:	
  3170                           ;psect for function _TMR1_SetInterruptHandler
  3171                           
  3172     03EA                     l4180:	
  3173                           ;incstack = 0
  3174                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3175                           
  3176                           
  3177                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  3178     03EA  0020               	movlb	0	; select bank0
  3179     03EB  086A               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3180     03EC  00D2               	movwf	_TMR1_InterruptHandler+1
  3181     03ED  0869               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3182     03EE  00D1               	movwf	_TMR1_InterruptHandler
  3183     03EF                     l1004:
  3184     03EF  0008               	return
  3185     03F0                     __end_of_TMR1_SetInterruptHandler:
  3186                           
  3187                           	psect	text5
  3188     0282                     __ptext5:	
  3189 ;; *************** function _PIN_MANAGER_Initialize *****************
  3190 ;; Defined at:
  3191 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3205 ;;      Params:         0       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 7
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_SYSTEM_Initialize
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219     0282                     _PIN_MANAGER_Initialize:	
  3220                           ;psect for function _PIN_MANAGER_Initialize
  3221                           
  3222     0282                     l4182:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3225                           
  3226                           
  3227                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3228     0282  0022               	movlb	2	; select bank2
  3229     0283  0190               	clrf	16	;volatile
  3230                           
  3231                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3232     0284  018C               	clrf	12	;volatile
  3233                           
  3234                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3235     0285  018D               	clrf	13	;volatile
  3236     0286                     l4184:
  3237                           
  3238                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  3239     0286  3040               	movlw	64
  3240     0287  008E               	movwf	14	;volatile
  3241     0288                     l4186:
  3242                           
  3243                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3244     0288  3008               	movlw	8
  3245     0289  0021               	movlb	1	; select bank1
  3246     028A  0090               	movwf	16	;volatile
  3247     028B                     l4188:
  3248                           
  3249                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3250     028B  30FF               	movlw	255
  3251     028C  008C               	movwf	12	;volatile
  3252     028D                     l4190:
  3253                           
  3254                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3255     028D  30FF               	movlw	255
  3256     028E  008D               	movwf	13	;volatile
  3257     028F                     l4192:
  3258                           
  3259                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3260     028F  309C               	movlw	156
  3261     0290  008E               	movwf	14	;volatile
  3262     0291                     l4194:
  3263                           
  3264                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3265     0291  303F               	movlw	63
  3266     0292  0023               	movlb	3	; select bank3
  3267     0293  008D               	movwf	13	;volatile
  3268     0294                     l4196:
  3269                           
  3270                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3271     0294  3030               	movlw	48
  3272     0295  008C               	movwf	12	;volatile
  3273     0296                     l4198:
  3274                           
  3275                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3276     0296  0024               	movlb	4	; select bank4
  3277     0297  0190               	clrf	16	;volatile
  3278     0298                     l4200:
  3279                           
  3280                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3281     0298  018D               	clrf	13	;volatile
  3282     0299                     l4202:
  3283                           
  3284                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3285     0299  0021               	movlb	1	; select bank1
  3286     029A  1795               	bsf	21,7	;volatile
  3287     029B                     l4204:
  3288                           
  3289                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3290     029B  0022               	movlb	2	; select bank2
  3291     029C  019D               	clrf	29	;volatile
  3292     029D                     l31:
  3293     029D  0008               	return
  3294     029E                     __end_of_PIN_MANAGER_Initialize:
  3295                           
  3296                           	psect	text6
  3297     03D6                     __ptext6:	
  3298 ;; *************** function _OSCILLATOR_Initialize *****************
  3299 ;; Defined at:
  3300 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3314 ;;      Params:         0       0       0       0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 7
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_SYSTEM_Initialize
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328     03D6                     _OSCILLATOR_Initialize:	
  3329                           ;psect for function _OSCILLATOR_Initialize
  3330                           
  3331     03D6                     l4214:	
  3332                           ;incstack = 0
  3333                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3334                           
  3335                           
  3336                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3337     03D6  3070               	movlw	112
  3338     03D7  0021               	movlb	1	; select bank1
  3339     03D8  0099               	movwf	25	;volatile
  3340     03D9                     l4216:
  3341                           
  3342                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3343     03D9  0198               	clrf	24	;volatile
  3344     03DA                     l4218:
  3345                           
  3346                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3347     03DA  0022               	movlb	2	; select bank2
  3348     03DB  0196               	clrf	22	;volatile
  3349     03DC                     l62:
  3350     03DC  0008               	return
  3351     03DD                     __end_of_OSCILLATOR_Initialize:
  3352                           
  3353                           	psect	text7
  3354     03B4                     __ptext7:	
  3355 ;; *************** function _I2C_Initialize *****************
  3356 ;; Defined at:
  3357 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3371 ;;      Params:         0       0       0       0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 7
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_SYSTEM_Initialize
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     03B4                     _I2C_Initialize:	
  3386                           ;psect for function _I2C_Initialize
  3387                           
  3388     03B4                     l4206:	
  3389                           ;incstack = 0
  3390                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3391                           
  3392                           
  3393                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3394     03B4  0024               	movlb	4	; select bank4
  3395     03B5  0194               	clrf	20	;volatile
  3396     03B6                     l4208:
  3397                           
  3398                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3399     03B6  3008               	movlw	8
  3400     03B7  0095               	movwf	21	;volatile
  3401     03B8                     l4210:
  3402                           
  3403                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3404     03B8  0196               	clrf	22	;volatile
  3405                           
  3406                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3407     03B9  3013               	movlw	19
  3408     03BA  0092               	movwf	18	;volatile
  3409     03BB                     l4212:
  3410                           
  3411                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3412     03BB  1295               	bcf	21,5	;volatile
  3413     03BC                     l174:
  3414     03BC  0008               	return
  3415     03BD                     __end_of_I2C_Initialize:
  3416                           
  3417                           	psect	text8
  3418     0127                     __ptext8:	
  3419 ;; *************** function _EUSART_Initialize *****************
  3420 ;; Defined at:
  3421 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, pclath, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3435 ;;      Params:         0       0       0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0
  3438 ;;      Totals:         0       0       0       0       0       0       0       0
  3439 ;;Total ram usage:        0 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 8
  3442 ;; This function calls:
  3443 ;;		_EUSART_SetErrorHandler
  3444 ;;		_EUSART_SetFramingErrorHandler
  3445 ;;		_EUSART_SetOverrunErrorHandler
  3446 ;;		_EUSART_SetRxInterruptHandler
  3447 ;;		_EUSART_SetTxInterruptHandler
  3448 ;; This function is called by:
  3449 ;;		_SYSTEM_Initialize
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453     0127                     _EUSART_Initialize:	
  3454                           ;psect for function _EUSART_Initialize
  3455                           
  3456     0127                     l4238:	
  3457                           ;incstack = 0
  3458                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3459                           
  3460                           
  3461                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3462     0127  0021               	movlb	1	; select bank1
  3463     0128  1291               	bcf	17,5	;volatile
  3464     0129                     l4240:
  3465                           
  3466                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3467     0129  3068               	movlw	low _EUSART_Receive_ISR
  3468     012A  0020               	movlb	0	; select bank0
  3469     012B  00E9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3470     012C  3001               	movlw	high _EUSART_Receive_ISR
  3471     012D  00EA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3472     012E  3183  23F6  3181   	fcall	_EUSART_SetRxInterruptHandler
  3473     0131                     l4242:
  3474                           
  3475                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3476     0131  0021               	movlb	1	; select bank1
  3477     0132  1211               	bcf	17,4	;volatile
  3478                           
  3479                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3480     0133  3062               	movlw	low _EUSART_Transmit_ISR
  3481     0134  0020               	movlb	0	; select bank0
  3482     0135  00E9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3483     0136  3002               	movlw	high _EUSART_Transmit_ISR
  3484     0137  00EA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3485     0138  3183  23F0  3181   	fcall	_EUSART_SetTxInterruptHandler
  3486     013B                     l4244:
  3487                           
  3488                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3489     013B  3008               	movlw	8
  3490     013C  0023               	movlb	3	; select bank3
  3491     013D  009F               	movwf	31	;volatile
  3492     013E                     l4246:
  3493                           
  3494                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3495     013E  3090               	movlw	144
  3496     013F  009D               	movwf	29	;volatile
  3497     0140                     l4248:
  3498                           
  3499                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3500     0140  3024               	movlw	36
  3501     0141  009E               	movwf	30	;volatile
  3502     0142                     l4250:
  3503                           
  3504                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  3505     0142  30CF               	movlw	207
  3506     0143  009B               	movwf	27	;volatile
  3507     0144                     l4252:
  3508                           
  3509                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3510     0144  019C               	clrf	28	;volatile
  3511     0145                     l4254:
  3512                           
  3513                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3514     0145  3075               	movlw	low _EUSART_DefaultFramingErrorHandler
  3515     0146  0020               	movlb	0	; select bank0
  3516     0147  00E9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3517     0148  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  3518     0149  00EA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3519     014A  3184  2402  3181   	fcall	_EUSART_SetFramingErrorHandler
  3520     014D                     l4256:
  3521                           
  3522                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3523     014D  3056               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3524     014E  0020               	movlb	0	; select bank0
  3525     014F  00E9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3526     0150  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3527     0151  00EA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3528     0152  3183  23FC  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3529     0155                     l4258:
  3530                           
  3531                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3532     0155  305A               	movlw	low _EUSART_DefaultErrorHandler
  3533     0156  0020               	movlb	0	; select bank0
  3534     0157  00E9               	movwf	EUSART_SetErrorHandler@interruptHandler
  3535     0158  3004               	movlw	high _EUSART_DefaultErrorHandler
  3536     0159  00EA               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3537     015A  3184  2408  3181   	fcall	_EUSART_SetErrorHandler
  3538                           
  3539                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3540     015D  01F0               	clrf	_eusartRxLastError	;volatile
  3541                           
  3542                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3543     015E  01F6               	clrf	_eusartTxHead	;volatile
  3544                           
  3545                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3546     015F  01F5               	clrf	_eusartTxTail	;volatile
  3547     0160                     l4260:
  3548                           
  3549                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3550     0160  3010               	movlw	16
  3551     0161  00F4               	movwf	_eusartTxBufferRemaining	;volatile
  3552     0162                     l4262:
  3553                           
  3554                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3555     0162  01F3               	clrf	_eusartRxHead	;volatile
  3556     0163                     l4264:
  3557                           
  3558                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3559     0163  01F2               	clrf	_eusartRxTail	;volatile
  3560     0164                     l4266:
  3561                           
  3562                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3563     0164  01F1               	clrf	_eusartRxCount	;volatile
  3564     0165                     l4268:
  3565                           
  3566                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3567     0165  0021               	movlb	1	; select bank1
  3568     0166  1691               	bsf	17,5	;volatile
  3569     0167                     l514:
  3570     0167  0008               	return
  3571     0168                     __end_of_EUSART_Initialize:
  3572                           
  3573                           	psect	text9
  3574     03F0                     __ptext9:	
  3575 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3576 ;; Defined at:
  3577 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3580 ;;		 -> EUSART_Transmit_ISR(1), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3592 ;;      Params:         0       2       0       0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0
  3595 ;;      Totals:         0       2       0       0       0       0       0       0
  3596 ;;Total ram usage:        2 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 7
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_EUSART_Initialize
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606     03F0                     _EUSART_SetTxInterruptHandler:	
  3607                           ;psect for function _EUSART_SetTxInterruptHandler
  3608                           
  3609     03F0                     l4172:	
  3610                           ;incstack = 0
  3611                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3612                           
  3613                           
  3614                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3615     03F0  0020               	movlb	0	; select bank0
  3616     03F1  086A               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3617     03F2  00DC               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3618     03F3  0869               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3619     03F4  00DB               	movwf	_EUSART_TxDefaultInterruptHandler
  3620     03F5                     l580:
  3621     03F5  0008               	return
  3622     03F6                     __end_of_EUSART_SetTxInterruptHandler:
  3623                           
  3624                           	psect	text10
  3625     03F6                     __ptext10:	
  3626 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3627 ;; Defined at:
  3628 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3631 ;;		 -> EUSART_Receive_ISR(1), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3643 ;;      Params:         0       2       0       0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0
  3646 ;;      Totals:         0       2       0       0       0       0       0       0
  3647 ;;Total ram usage:        2 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 7
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_EUSART_Initialize
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657     03F6                     _EUSART_SetRxInterruptHandler:	
  3658                           ;psect for function _EUSART_SetRxInterruptHandler
  3659                           
  3660     03F6                     l4170:	
  3661                           ;incstack = 0
  3662                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3663                           
  3664                           
  3665                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3666     03F6  0020               	movlb	0	; select bank0
  3667     03F7  086A               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3668     03F8  00DA               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3669     03F9  0869               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3670     03FA  00D9               	movwf	_EUSART_RxDefaultInterruptHandler
  3671     03FB                     l583:
  3672     03FB  0008               	return
  3673     03FC                     __end_of_EUSART_SetRxInterruptHandler:
  3674                           
  3675                           	psect	text11
  3676     03FC                     __ptext11:	
  3677 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3678 ;; Defined at:
  3679 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3682 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3694 ;;      Params:         0       2       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0
  3697 ;;      Totals:         0       2       0       0       0       0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 7
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_EUSART_Initialize
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708     03FC                     _EUSART_SetOverrunErrorHandler:	
  3709                           ;psect for function _EUSART_SetOverrunErrorHandler
  3710                           
  3711     03FC                     l4176:	
  3712                           ;incstack = 0
  3713                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3714                           
  3715                           
  3716                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3717     03FC  0020               	movlb	0	; select bank0
  3718     03FD  086A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3719     03FE  00D6               	movwf	_EUSART_OverrunErrorHandler+1
  3720     03FF  0869               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3721     0400  00D5               	movwf	_EUSART_OverrunErrorHandler
  3722     0401                     l574:
  3723     0401  0008               	return
  3724     0402                     __end_of_EUSART_SetOverrunErrorHandler:
  3725                           
  3726                           	psect	text12
  3727     0402                     __ptext12:	
  3728 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3729 ;; Defined at:
  3730 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3733 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3745 ;;      Params:         0       2       0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0
  3748 ;;      Totals:         0       2       0       0       0       0       0       0
  3749 ;;Total ram usage:        2 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 7
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_EUSART_Initialize
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759     0402                     _EUSART_SetFramingErrorHandler:	
  3760                           ;psect for function _EUSART_SetFramingErrorHandler
  3761                           
  3762     0402                     l4174:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3765                           
  3766                           
  3767                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3768     0402  0020               	movlb	0	; select bank0
  3769     0403  086A               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3770     0404  00D8               	movwf	_EUSART_FramingErrorHandler+1
  3771     0405  0869               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3772     0406  00D7               	movwf	_EUSART_FramingErrorHandler
  3773     0407                     l571:
  3774     0407  0008               	return
  3775     0408                     __end_of_EUSART_SetFramingErrorHandler:
  3776                           
  3777                           	psect	text13
  3778     0408                     __ptext13:	
  3779 ;; *************** function _EUSART_SetErrorHandler *****************
  3780 ;; Defined at:
  3781 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3784 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3796 ;;      Params:         0       2       0       0       0       0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0
  3799 ;;      Totals:         0       2       0       0       0       0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 7
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_EUSART_Initialize
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810     0408                     _EUSART_SetErrorHandler:	
  3811                           ;psect for function _EUSART_SetErrorHandler
  3812                           
  3813     0408                     l4178:	
  3814                           ;incstack = 0
  3815                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3816                           
  3817                           
  3818                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3819     0408  0020               	movlb	0	; select bank0
  3820     0409  086A               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3821     040A  00D4               	movwf	_EUSART_ErrorHandler+1
  3822     040B  0869               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3823     040C  00D3               	movwf	_EUSART_ErrorHandler
  3824     040D                     l577:
  3825     040D  0008               	return
  3826     040E                     __end_of_EUSART_SetErrorHandler:
  3827                           
  3828                           	psect	intentry
  3829     0004                     __pintentry:	
  3830 ;; *************** function _INTERRUPT_InterruptManager *****************
  3831 ;; Defined at:
  3832 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3846 ;;      Params:         0       0       0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 6
  3853 ;; This function calls:
  3854 ;;		NULL
  3855 ;;		_EUSART_Receive_ISR
  3856 ;;		_EUSART_Transmit_ISR
  3857 ;;		_I2C_MasterIsr
  3858 ;;		_TMR1_ISR
  3859 ;; This function is called by:
  3860 ;;		Interrupt level 1
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0004                     _INTERRUPT_InterruptManager:
  3865                           
  3866                           ;incstack = 0
  3867     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3868                           
  3869                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3870     0005  3180               	pagesel	$
  3871     0006                     i1l4352:
  3872                           
  3873                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3874     0006  1F0B               	btfss	11,6	;volatile
  3875     0007  2809               	goto	u172_21
  3876     0008  280A               	goto	u172_20
  3877     0009                     u172_21:
  3878     0009  2853               	goto	i1l439
  3879     000A                     u172_20:
  3880     000A                     i1l4354:
  3881                           
  3882                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3883     000A  0021               	movlb	1	; select bank1
  3884     000B  1E11               	btfss	17,4	;volatile
  3885     000C  280E               	goto	u173_21
  3886     000D  280F               	goto	u173_20
  3887     000E                     u173_21:
  3888     000E  281A               	goto	i1l428
  3889     000F                     u173_20:
  3890     000F                     i1l4356:
  3891     000F  0020               	movlb	0	; select bank0
  3892     0010  1E11               	btfss	17,4	;volatile
  3893     0011  2813               	goto	u174_21
  3894     0012  2814               	goto	u174_20
  3895     0013                     u174_21:
  3896     0013  281A               	goto	i1l428
  3897     0014                     u174_20:
  3898     0014                     i1l4358:
  3899                           
  3900                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  3901     0014  085C               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  3902     0015  008A               	movwf	10
  3903     0016  085B               	movf	_EUSART_TxDefaultInterruptHandler,w
  3904     0017  000A               	callw
  3905     0018  3180               	pagesel	$
  3906                           
  3907                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3908     0019  2853               	goto	i1l439
  3909     001A                     i1l428:	
  3910                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  3911                           
  3912     001A  0021               	movlb	1	; select bank1
  3913     001B  1E91               	btfss	17,5	;volatile
  3914     001C  281E               	goto	u175_21
  3915     001D  281F               	goto	u175_20
  3916     001E                     u175_21:
  3917     001E  282A               	goto	i1l430
  3918     001F                     u175_20:
  3919     001F                     i1l4360:
  3920     001F  0020               	movlb	0	; select bank0
  3921     0020  1E91               	btfss	17,5	;volatile
  3922     0021  2823               	goto	u176_21
  3923     0022  2824               	goto	u176_20
  3924     0023                     u176_21:
  3925     0023  282A               	goto	i1l430
  3926     0024                     u176_20:
  3927     0024                     i1l4362:
  3928                           
  3929                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  3930     0024  085A               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  3931     0025  008A               	movwf	10
  3932     0026  0859               	movf	_EUSART_RxDefaultInterruptHandler,w
  3933     0027  000A               	callw
  3934     0028  3180               	pagesel	$
  3935                           
  3936                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3937     0029  2853               	goto	i1l439
  3938     002A                     i1l430:	
  3939                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  3940                           
  3941     002A  0021               	movlb	1	; select bank1
  3942     002B  1D92               	btfss	18,3	;volatile
  3943     002C  282E               	goto	u177_21
  3944     002D  282F               	goto	u177_20
  3945     002E                     u177_21:
  3946     002E  283A               	goto	i1l432
  3947     002F                     u177_20:
  3948     002F                     i1l4364:
  3949     002F  0020               	movlb	0	; select bank0
  3950     0030  1D92               	btfss	18,3	;volatile
  3951     0031  2833               	goto	u178_21
  3952     0032  2834               	goto	u178_20
  3953     0033                     u178_21:
  3954     0033  283A               	goto	i1l432
  3955     0034                     u178_20:
  3956     0034                     i1l4366:
  3957                           
  3958                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  3959     0034  0844               	movf	_MSSP_InterruptHandler+1,w
  3960     0035  008A               	movwf	10
  3961     0036  0843               	movf	_MSSP_InterruptHandler,w
  3962     0037  000A               	callw
  3963     0038  3180               	pagesel	$
  3964                           
  3965                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3966     0039  2853               	goto	i1l439
  3967     003A                     i1l432:	
  3968                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  3969                           
  3970     003A  0021               	movlb	1	; select bank1
  3971     003B  1D91               	btfss	17,3	;volatile
  3972     003C  283E               	goto	u179_21
  3973     003D  283F               	goto	u179_20
  3974     003E                     u179_21:
  3975     003E  2845               	goto	i1l434
  3976     003F                     u179_20:
  3977     003F                     i1l4368:
  3978     003F  0020               	movlb	0	; select bank0
  3979     0040  1D91               	btfss	17,3	;volatile
  3980     0041  2843               	goto	u180_21
  3981     0042  2844               	goto	u180_20
  3982     0043                     u180_21:
  3983     0043  2845               	goto	i1l434
  3984     0044                     u180_20:
  3985     0044  2834               	goto	i1l4366
  3986     0045                     i1l434:	
  3987                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  3988                           
  3989     0045  0021               	movlb	1	; select bank1
  3990     0046  1C11               	btfss	17,0	;volatile
  3991     0047  2849               	goto	u181_21
  3992     0048  284A               	goto	u181_20
  3993     0049                     u181_21:
  3994     0049  2853               	goto	i1l433
  3995     004A                     u181_20:
  3996     004A                     i1l4372:
  3997     004A  0020               	movlb	0	; select bank0
  3998     004B  1C11               	btfss	17,0	;volatile
  3999     004C  284E               	goto	u182_21
  4000     004D  284F               	goto	u182_20
  4001     004E                     u182_21:
  4002     004E  2853               	goto	i1l433
  4003     004F                     u182_20:
  4004     004F                     i1l4374:
  4005                           
  4006                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
  4007     004F  3183  2361  3180   	fcall	_TMR1_ISR
  4008                           
  4009                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  4010     0052  2853               	goto	i1l439
  4011     0053                     i1l433:
  4012     0053                     i1l439:
  4013     0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4014     0054  0009               	retfie
  4015     0055                     __end_of_INTERRUPT_InterruptManager:
  4016                           
  4017                           	psect	text15
  4018     0361                     __ptext15:	
  4019 ;; *************** function _TMR1_ISR *****************
  4020 ;; Defined at:
  4021 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4035 ;;      Params:         0       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0       0
  4038 ;;      Totals:         0       0       0       0       0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 2
  4042 ;; This function calls:
  4043 ;;		_TMR1_CallBack
  4044 ;;		_TMR1_WriteTimer
  4045 ;; This function is called by:
  4046 ;;		_INTERRUPT_InterruptManager
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050     0361                     _TMR1_ISR:	
  4051                           ;psect for function _TMR1_ISR
  4052                           
  4053     0361                     i1l3608:	
  4054                           ;incstack = 0
  4055                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4056                           
  4057                           
  4058                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4059     0361  0020               	movlb	0	; select bank0
  4060     0362  1011               	bcf	17,0	;volatile
  4061     0363                     i1l3610:
  4062                           
  4063                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4064     0363  0842               	movf	_timer1ReloadVal+1,w	;volatile
  4065     0364  00F8               	movwf	TMR1_WriteTimer@timerVal+1
  4066     0365  0841               	movf	_timer1ReloadVal,w	;volatile
  4067     0366  00F7               	movwf	TMR1_WriteTimer@timerVal
  4068     0367  3183  2342  3183   	fcall	_TMR1_WriteTimer
  4069                           
  4070                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  4071     036A  3183  236E  3183   	fcall	_TMR1_CallBack
  4072     036D                     i1l997:
  4073     036D  0008               	return
  4074     036E                     __end_of_TMR1_ISR:
  4075                           
  4076                           	psect	text16
  4077     0342                     __ptext16:	
  4078 ;; *************** function _TMR1_WriteTimer *****************
  4079 ;; Defined at:
  4080 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  timerVal        2    0[COMMON] unsigned short 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4094 ;;      Params:         2       0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0
  4097 ;;      Totals:         2       0       0       0       0       0       0       0
  4098 ;;Total ram usage:        2 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_TMR1_ISR
  4104 ;;		_TMR1_Reload
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108     0342                     _TMR1_WriteTimer:	
  4109                           ;psect for function _TMR1_WriteTimer
  4110                           
  4111     0342                     i1l3530:	
  4112                           ;incstack = 0
  4113                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4114                           
  4115                           
  4116                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4117     0342  0020               	movlb	0	; select bank0
  4118     0343  1D18               	btfss	24,2	;volatile
  4119     0344  2B46               	goto	u122_21
  4120     0345  2B47               	goto	u122_20
  4121     0346                     u122_21:
  4122     0346  2B4E               	goto	i1l3540
  4123     0347                     u122_20:
  4124     0347                     i1l3532:
  4125                           
  4126                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4127     0347  1018               	bcf	24,0	;volatile
  4128     0348                     i1l3534:
  4129                           
  4130                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4131     0348  0878               	movf	TMR1_WriteTimer@timerVal+1,w
  4132     0349  0097               	movwf	23	;volatile
  4133     034A                     i1l3536:
  4134                           
  4135                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4136     034A  0877               	movf	TMR1_WriteTimer@timerVal,w
  4137     034B  0096               	movwf	22	;volatile
  4138     034C                     i1l3538:
  4139                           
  4140                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4141     034C  1418               	bsf	24,0	;volatile
  4142                           
  4143                           ;mcc_generated_files/tmr1.c: 133:     }
  4144     034D  2B52               	goto	i1l985
  4145     034E                     i1l3540:
  4146                           
  4147                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4148     034E  0878               	movf	TMR1_WriteTimer@timerVal+1,w
  4149     034F  0097               	movwf	23	;volatile
  4150     0350                     i1l3542:
  4151                           
  4152                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4153     0350  0877               	movf	TMR1_WriteTimer@timerVal,w
  4154     0351  0096               	movwf	22	;volatile
  4155     0352                     i1l985:
  4156     0352  0008               	return
  4157     0353                     __end_of_TMR1_WriteTimer:
  4158                           
  4159                           	psect	text17
  4160     036E                     __ptext17:	
  4161 ;; *************** function _TMR1_CallBack *****************
  4162 ;; Defined at:
  4163 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4177 ;;      Params:         0       0       0       0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 1
  4184 ;; This function calls:
  4185 ;;		NULL
  4186 ;;		_TMR1_DefaultInterruptHandler
  4187 ;;		_rtcc_handle
  4188 ;; This function is called by:
  4189 ;;		_TMR1_ISR
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193     036E                     _TMR1_CallBack:	
  4194                           ;psect for function _TMR1_CallBack
  4195                           
  4196     036E                     i1l3544:	
  4197                           ;incstack = 0
  4198                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4199                           
  4200                           
  4201                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  4202     036E  0020               	movlb	0	; select bank0
  4203     036F  0851               	movf	_TMR1_InterruptHandler,w
  4204     0370  0452               	iorwf	_TMR1_InterruptHandler+1,w
  4205     0371  1903               	btfsc	3,2
  4206     0372  2B74               	goto	u123_21
  4207     0373  2B75               	goto	u123_20
  4208     0374                     u123_21:
  4209     0374  2B7A               	goto	i1l1001
  4210     0375                     u123_20:
  4211     0375                     i1l3546:
  4212                           
  4213                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  4214     0375  0852               	movf	_TMR1_InterruptHandler+1,w
  4215     0376  008A               	movwf	10
  4216     0377  0851               	movf	_TMR1_InterruptHandler,w
  4217     0378  000A               	callw
  4218     0379  3183               	pagesel	$
  4219     037A                     i1l1001:
  4220     037A  0008               	return
  4221     037B                     __end_of_TMR1_CallBack:
  4222                           
  4223                           	psect	text18
  4224     0474                     __ptext18:	
  4225 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4226 ;; Defined at:
  4227 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		None
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4241 ;;      Params:         0       0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_TMR1_Initialize
  4251 ;;		_TMR1_CallBack
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255     0474                     _TMR1_DefaultInterruptHandler:	
  4256                           ;psect for function _TMR1_DefaultInterruptHandler
  4257                           
  4258     0474                     i1l1007:	
  4259                           ;incstack = 0
  4260                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4261                           
  4262     0474  0008               	return
  4263     0475                     __end_of_TMR1_DefaultInterruptHandler:
  4264                           
  4265                           	psect	text19
  4266     03AA                     __ptext19:	
  4267 ;; *************** function _rtcc_handle *****************
  4268 ;; Defined at:
  4269 ;;		line 12 in file "tick.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4283 ;;      Params:         0       0       0       0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_Tick_Init_SES
  4293 ;;		_TMR1_CallBack
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297     03AA                     _rtcc_handle:	
  4298                           ;psect for function _rtcc_handle
  4299                           
  4300     03AA                     i1l3342:	
  4301                           ;incstack = 0
  4302                           ; Regs used in _rtcc_handle: [wreg]
  4303                           
  4304                           
  4305                           ;tick.c: 14:     device_time++;
  4306     03AA  3001               	movlw	1
  4307     03AB  0020               	movlb	0	; select bank0
  4308     03AC  07BD               	addwf	_device_time,f	;volatile
  4309     03AD  3000               	movlw	0
  4310     03AE  3DBE               	addwfc	_device_time+1,f	;volatile
  4311     03AF  3000               	movlw	0
  4312     03B0  3DBF               	addwfc	_device_time+2,f	;volatile
  4313     03B1  3000               	movlw	0
  4314     03B2  3DC0               	addwfc	_device_time+3,f	;volatile
  4315     03B3                     i1l1021:
  4316     03B3  0008               	return
  4317     03B4                     __end_of_rtcc_handle:
  4318                           
  4319                           	psect	text20
  4320     044A                     __ptext20:	
  4321 ;; *************** function _I2C_MasterIsr *****************
  4322 ;; Defined at:
  4323 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4337 ;;      Params:         0       0       0       0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 5
  4344 ;; This function calls:
  4345 ;;		_I2C_MasterFsm
  4346 ;; This function is called by:
  4347 ;;		_I2C_Open
  4348 ;;		_INTERRUPT_InterruptManager
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     044A                     _I2C_MasterIsr:	
  4353                           ;psect for function _I2C_MasterIsr
  4354                           
  4355     044A                     i1l4320:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4358                           
  4359                           
  4360                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  4361     044A  3181  21CE  3184   	fcall	_I2C_MasterFsm
  4362     044D                     i1l227:
  4363     044D  0008               	return
  4364     044E                     __end_of_I2C_MasterIsr:
  4365                           
  4366                           	psect	text21
  4367     01CE                     __ptext21:	
  4368 ;; *************** function _I2C_MasterFsm *****************
  4369 ;; Defined at:
  4370 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4384 ;;      Params:         0       0       0       0       0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0
  4386 ;;      Temps:          2       0       0       0       0       0       0       0
  4387 ;;      Totals:         2       0       0       0       0       0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 4
  4391 ;; This function calls:
  4392 ;;		_I2C_DO_ADDRESS_NACK
  4393 ;;		_I2C_DO_IDLE
  4394 ;;		_I2C_DO_RCEN
  4395 ;;		_I2C_DO_RESET
  4396 ;;		_I2C_DO_RX
  4397 ;;		_I2C_DO_RX_ACK
  4398 ;;		_I2C_DO_RX_NACK_RESTART
  4399 ;;		_I2C_DO_RX_NACK_STOP
  4400 ;;		_I2C_DO_SEND_ADR_READ
  4401 ;;		_I2C_DO_SEND_ADR_WRITE
  4402 ;;		_I2C_DO_SEND_RESTART
  4403 ;;		_I2C_DO_SEND_RESTART_READ
  4404 ;;		_I2C_DO_SEND_RESTART_WRITE
  4405 ;;		_I2C_DO_SEND_STOP
  4406 ;;		_I2C_DO_TX
  4407 ;;		_I2C_DO_TX_EMPTY
  4408 ;;		_I2C_MasterClearIrq
  4409 ;;		_I2C_MasterIsNack
  4410 ;; This function is called by:
  4411 ;;		_I2C_MasterIsr
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415     01CE                     _I2C_MasterFsm:	
  4416                           ;psect for function _I2C_MasterFsm
  4417                           
  4418     01CE                     i1l4270:	
  4419                           ;incstack = 0
  4420                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4421                           
  4422                           
  4423                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  4424     01CE  3184  245E  3181   	fcall	_I2C_MasterClearIrq
  4425     01D1                     i1l4272:
  4426                           
  4427                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4428     01D1  0020               	movlb	0	; select bank0
  4429     01D2  1C3C               	btfss	_I2C_Status+28,0
  4430     01D3  29D5               	goto	u168_21
  4431     01D4  29D6               	goto	u168_20
  4432     01D5                     u168_21:
  4433     01D5  29E1               	goto	i1l4278
  4434     01D6                     u168_20:
  4435     01D6                     i1l4274:
  4436     01D6  3184  240E  3181   	fcall	_I2C_MasterIsNack
  4437     01D9  3A00               	xorlw	0
  4438     01DA  1903               	skipnz
  4439     01DB  29DD               	goto	u169_21
  4440     01DC  29DE               	goto	u169_20
  4441     01DD                     u169_21:
  4442     01DD  29E1               	goto	i1l4278
  4443     01DE                     u169_20:
  4444     01DE                     i1l4276:
  4445                           
  4446                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4447     01DE  300F               	movlw	15
  4448     01DF  0020               	movlb	0	; select bank0
  4449     01E0  00BA               	movwf	_I2C_Status+26
  4450     01E1                     i1l4278:
  4451                           
  4452                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4453     01E1  0020               	movlb	0	; select bank0
  4454     01E2  083A               	movf	_I2C_Status+26,w
  4455     01E3  00FA               	movwf	??_I2C_MasterFsm
  4456     01E4  01FB               	clrf	??_I2C_MasterFsm+1
  4457     01E5  35FA               	lslf	??_I2C_MasterFsm,f
  4458     01E6  0DFB               	rlf	??_I2C_MasterFsm+1,f
  4459     01E7  3042               	movlw	low _i2c_fsmStateTable
  4460     01E8  077A               	addwf	??_I2C_MasterFsm,w
  4461     01E9  0084               	movwf	4
  4462     01EA  3002               	movlw	high _i2c_fsmStateTable
  4463     01EB  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  4464     01EC  3880               	iorlw	128
  4465     01ED  0085               	movwf	5
  4466     01EE  3F01               	moviw [1]fsr0
  4467     01EF  008A               	movwf	10
  4468     01F0  3F00               	moviw [0]fsr0
  4469     01F1  000A               	callw
  4470     01F2  3181               	pagesel	$
  4471     01F3  0020               	movlb	0	; select bank0
  4472     01F4  00BA               	movwf	_I2C_Status+26
  4473     01F5                     i1l231:
  4474     01F5  0008               	return
  4475     01F6                     __end_of_I2C_MasterFsm:
  4476                           
  4477                           	psect	text22
  4478     045E                     __ptext22:	
  4479 ;; *************** function _I2C_MasterClearIrq *****************
  4480 ;; Defined at:
  4481 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		None
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4495 ;;      Params:         0       0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_I2C_MasterFsm
  4505 ;;		_I2C_Open
  4506 ;;		_I2C_Close
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510     045E                     _I2C_MasterClearIrq:	
  4511                           ;psect for function _I2C_MasterClearIrq
  4512                           
  4513     045E                     i1l3086:	
  4514                           ;incstack = 0
  4515                           ; Regs used in _I2C_MasterClearIrq: []
  4516                           
  4517                           
  4518                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  4519     045E  0020               	movlb	0	; select bank0
  4520     045F  1191               	bcf	17,3	;volatile
  4521     0460                     i1l394:
  4522     0460  0008               	return
  4523     0461                     __end_of_I2C_MasterClearIrq:
  4524                           
  4525                           	psect	text23
  4526     01F6                     __ptext23:	
  4527 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4528 ;; Defined at:
  4529 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;		None
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  1    wreg      enum E3112
  4536 ;; Registers used:
  4537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4543 ;;      Params:         0       0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0
  4545 ;;      Temps:          2       0       0       0       0       0       0       0
  4546 ;;      Totals:         2       0       0       0       0       0       0       0
  4547 ;;Total ram usage:        2 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 3
  4550 ;; This function calls:
  4551 ;;		NULL
  4552 ;;		_I2C_CallbackReturnReset
  4553 ;;		_I2C_CallbackReturnStop
  4554 ;;		_I2C_DO_SEND_RESTART
  4555 ;;		_I2C_DO_SEND_STOP
  4556 ;;		_rd1RegCompleteHandler
  4557 ;;		_rd2RegCompleteHandler
  4558 ;;		_rdBlkRegCompleteHandler
  4559 ;;		_wr1RegCompleteHandler
  4560 ;;		_wr2RegCompleteHandler
  4561 ;; This function is called by:
  4562 ;;		_I2C_MasterFsm
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566     01F6                     _I2C_DO_ADDRESS_NACK:	
  4567                           ;psect for function _I2C_DO_ADDRESS_NACK
  4568                           
  4569     01F6                     i1l4150:	
  4570                           ;incstack = 0
  4571                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4572                           
  4573                           
  4574                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  4575     01F6  0020               	movlb	0	; select bank0
  4576     01F7  103C               	bcf	_I2C_Status+28,0
  4577     01F8                     i1l4152:
  4578                           
  4579                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  4580     01F8  3002               	movlw	2
  4581     01F9  00BB               	movwf	_I2C_Status+27
  4582                           
  4583                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4584     01FA  2A03               	goto	i1l4164
  4585     01FB                     i1l4154:
  4586                           
  4587                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  4588     01FB  3184  242D  3181   	fcall	_I2C_DO_SEND_RESTART
  4589     01FE  2A1D               	goto	i1l322
  4590     01FF                     i1l4158:
  4591                           
  4592                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  4593     01FF  3184  2428  3181   	fcall	_I2C_DO_SEND_STOP
  4594     0202  2A1D               	goto	i1l322
  4595     0203                     i1l4164:
  4596     0203  082E               	movf	low ((_I2C_Status| 0+14)),w
  4597     0204  00E9               	movwf	rdBlkRegCompleteHandler@ptr
  4598     0205  3004               	movlw	4
  4599     0206  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4600     0207  0086               	movwf	6
  4601     0208  0187               	clrf	7
  4602     0209  3F41               	moviw [1]fsr1
  4603     020A  008A               	movwf	10
  4604     020B  3F40               	moviw [0]fsr1
  4605     020C  000A               	callw
  4606     020D  3181               	pagesel	$
  4607     020E  00F7               	movwf	??_I2C_DO_ADDRESS_NACK
  4608     020F  01F8               	clrf	??_I2C_DO_ADDRESS_NACK+1
  4609                           
  4610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4611                           ; Switch size 1, requested type "simple"
  4612                           ; Number of cases is 1, Range of values is 0 to 0
  4613                           ; switch strategies available:
  4614                           ; Name         Instructions Cycles
  4615                           ; simple_byte            4     3 (average)
  4616                           ; direct_byte            8     6 (fixed)
  4617                           ; jumptable            260     6 (fixed)
  4618                           ;	Chosen strategy is simple_byte
  4619     0210  0878               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  4620     0211  3A00               	xorlw	0	; case 0
  4621     0212  1903               	skipnz
  4622     0213  2A15               	goto	i1l4542
  4623     0214  29FF               	goto	i1l4158
  4624     0215                     i1l4542:
  4625                           
  4626                           ; Switch size 1, requested type "simple"
  4627                           ; Number of cases is 2, Range of values is 2 to 3
  4628                           ; switch strategies available:
  4629                           ; Name         Instructions Cycles
  4630                           ; simple_byte            7     4 (average)
  4631                           ; direct_byte           13     9 (fixed)
  4632                           ; jumptable            263     9 (fixed)
  4633                           ;	Chosen strategy is simple_byte
  4634     0215  0877               	movf	??_I2C_DO_ADDRESS_NACK,w
  4635     0216  3A02               	xorlw	2	; case 2
  4636     0217  1903               	skipnz
  4637     0218  29FB               	goto	i1l4154
  4638     0219  3A01               	xorlw	1	; case 3
  4639     021A  1903               	skipnz
  4640     021B  29FB               	goto	i1l4154
  4641     021C  29FF               	goto	i1l4158
  4642     021D                     i1l322:
  4643     021D  0008               	return
  4644     021E                     __end_of_I2C_DO_ADDRESS_NACK:
  4645                           
  4646                           	psect	text24
  4647     0414                     __ptext24:	
  4648 ;; *************** function _I2C_DO_RESET *****************
  4649 ;; Defined at:
  4650 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      enum E3112
  4657 ;; Registers used:
  4658 ;;		wreg, status,2
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4664 ;;      Params:         0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_I2C_MasterFsm
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677     0414                     _I2C_DO_RESET:	
  4678                           ;psect for function _I2C_DO_RESET
  4679                           
  4680     0414                     i1l3214:	
  4681                           ;incstack = 0
  4682                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4683                           
  4684                           
  4685                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  4686     0414  0020               	movlb	0	; select bank0
  4687     0415  10BC               	bcf	_I2C_Status+28,1
  4688     0416                     i1l3216:
  4689                           
  4690                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  4691     0416  01BB               	clrf	_I2C_Status+27
  4692     0417                     i1l3218:
  4693                           
  4694                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  4695     0417  300E               	movlw	14
  4696     0418                     i1l316:
  4697     0418  0008               	return
  4698     0419                     __end_of_I2C_DO_RESET:
  4699                           
  4700                           	psect	text25
  4701     0419                     __ptext25:	
  4702 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4703 ;; Defined at:
  4704 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      enum E3112
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4718 ;;      Params:         0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 1
  4725 ;; This function calls:
  4726 ;;		_I2C_MasterSendNack
  4727 ;; This function is called by:
  4728 ;;		_I2C_DO_RX
  4729 ;;		_I2C_MasterFsm
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733     0419                     _I2C_DO_RX_NACK_RESTART:	
  4734                           ;psect for function _I2C_DO_RX_NACK_RESTART
  4735                           
  4736     0419                     i1l2958:	
  4737                           ;incstack = 0
  4738                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4739                           
  4740                           
  4741                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  4742     0419  3184  2452  3184   	fcall	_I2C_MasterSendNack
  4743     041C                     i1l2960:
  4744                           
  4745                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  4746     041C  3009               	movlw	9
  4747     041D                     i1l313:
  4748     041D  0008               	return
  4749     041E                     __end_of_I2C_DO_RX_NACK_RESTART:
  4750                           
  4751                           	psect	text26
  4752     041E                     __ptext26:	
  4753 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4754 ;; Defined at:
  4755 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;		None
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      enum E3112
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4769 ;;      Params:         0       0       0       0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0
  4772 ;;      Totals:         0       0       0       0       0       0       0       0
  4773 ;;Total ram usage:        0 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 1
  4776 ;; This function calls:
  4777 ;;		_I2C_MasterSendNack
  4778 ;; This function is called by:
  4779 ;;		_I2C_DO_RX
  4780 ;;		_I2C_MasterFsm
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784     041E                     _I2C_DO_RX_NACK_STOP:	
  4785                           ;psect for function _I2C_DO_RX_NACK_STOP
  4786                           
  4787     041E                     i1l2964:	
  4788                           ;incstack = 0
  4789                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  4790                           
  4791                           
  4792                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  4793     041E  3184  2452  3184   	fcall	_I2C_MasterSendNack
  4794     0421                     i1l2966:
  4795                           
  4796                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  4797     0421  300A               	movlw	10
  4798     0422                     i1l310:
  4799     0422  0008               	return
  4800     0423                     __end_of_I2C_DO_RX_NACK_STOP:
  4801                           
  4802                           	psect	text27
  4803     0423                     __ptext27:	
  4804 ;; *************** function _I2C_DO_RX_ACK *****************
  4805 ;; Defined at:
  4806 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      enum E3112
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4820 ;;      Params:         0       0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 1
  4827 ;; This function calls:
  4828 ;;		_I2C_MasterSendAck
  4829 ;; This function is called by:
  4830 ;;		_I2C_MasterFsm
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834     0423                     _I2C_DO_RX_ACK:	
  4835                           ;psect for function _I2C_DO_RX_ACK
  4836                           
  4837     0423                     i1l3208:	
  4838                           ;incstack = 0
  4839                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  4840                           
  4841                           
  4842                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  4843     0423  3184  244E  3184   	fcall	_I2C_MasterSendAck
  4844     0426                     i1l3210:
  4845                           
  4846                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  4847     0426  3005               	movlw	5
  4848     0427                     i1l307:
  4849     0427  0008               	return
  4850     0428                     __end_of_I2C_DO_RX_ACK:
  4851                           
  4852                           	psect	text28
  4853     0428                     __ptext28:	
  4854 ;; *************** function _I2C_DO_SEND_STOP *****************
  4855 ;; Defined at:
  4856 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      enum E3112
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4870 ;;      Params:         0       0       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		_I2C_MasterStop
  4879 ;; This function is called by:
  4880 ;;		_I2C_DO_TX
  4881 ;;		_I2C_DO_TX_EMPTY
  4882 ;;		_I2C_DO_ADDRESS_NACK
  4883 ;;		_I2C_MasterFsm
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887     0428                     _I2C_DO_SEND_STOP:	
  4888                           ;psect for function _I2C_DO_SEND_STOP
  4889                           
  4890     0428                     i1l2946:	
  4891                           ;incstack = 0
  4892                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  4893                           
  4894                           
  4895                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  4896     0428  3184  246A  3184   	fcall	_I2C_MasterStop
  4897     042B                     i1l2948:
  4898                           
  4899                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  4900     042B  3000               	movlw	0
  4901     042C                     i1l304:
  4902     042C  0008               	return
  4903     042D                     __end_of_I2C_DO_SEND_STOP:
  4904                           
  4905                           	psect	text29
  4906     042D                     __ptext29:	
  4907 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4908 ;; Defined at:
  4909 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      enum E3112
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, pclath, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4923 ;;      Params:         0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 1
  4930 ;; This function calls:
  4931 ;;		_I2C_MasterEnableRestart
  4932 ;; This function is called by:
  4933 ;;		_I2C_DO_TX_EMPTY
  4934 ;;		_I2C_DO_ADDRESS_NACK
  4935 ;;		_I2C_MasterFsm
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939     042D                     _I2C_DO_SEND_RESTART:	
  4940                           ;psect for function _I2C_DO_SEND_RESTART
  4941                           
  4942     042D                     i1l2972:	
  4943                           ;incstack = 0
  4944                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  4945                           
  4946                           
  4947                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  4948     042D  3184  246D  3184   	fcall	_I2C_MasterEnableRestart
  4949     0430                     i1l2974:
  4950                           
  4951                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  4952     0430  3001               	movlw	1
  4953     0431                     i1l301:
  4954     0431  0008               	return
  4955     0432                     __end_of_I2C_DO_SEND_RESTART:
  4956                           
  4957                           	psect	text30
  4958     0432                     __ptext30:	
  4959 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4960 ;; Defined at:
  4961 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      enum E3112
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0, pclath, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4975 ;;      Params:         0       0       0       0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used: 1
  4981 ;; Hardware stack levels required when called: 1
  4982 ;; This function calls:
  4983 ;;		_I2C_MasterEnableRestart
  4984 ;; This function is called by:
  4985 ;;		_I2C_DO_TX
  4986 ;;		_I2C_MasterFsm
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990     0432                     _I2C_DO_SEND_RESTART_WRITE:	
  4991                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  4992                           
  4993     0432                     i1l2940:	
  4994                           ;incstack = 0
  4995                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4996                           
  4997                           
  4998                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  4999     0432  3184  246D  3184   	fcall	_I2C_MasterEnableRestart
  5000     0435                     i1l2942:
  5001                           
  5002                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5003     0435  3002               	movlw	2
  5004     0436                     i1l298:
  5005     0436  0008               	return
  5006     0437                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5007                           
  5008                           	psect	text31
  5009     0437                     __ptext31:	
  5010 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5011 ;; Defined at:
  5012 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      enum E3112
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5026 ;;      Params:         0       0       0       0       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0       0       0
  5029 ;;      Totals:         0       0       0       0       0       0       0       0
  5030 ;;Total ram usage:        0 bytes
  5031 ;; Hardware stack levels used: 1
  5032 ;; Hardware stack levels required when called: 1
  5033 ;; This function calls:
  5034 ;;		_I2C_MasterEnableRestart
  5035 ;; This function is called by:
  5036 ;;		_I2C_DO_TX
  5037 ;;		_I2C_MasterFsm
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041     0437                     _I2C_DO_SEND_RESTART_READ:	
  5042                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5043                           
  5044     0437                     i1l2934:	
  5045                           ;incstack = 0
  5046                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5047                           
  5048                           
  5049                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5050     0437  3184  246D  3184   	fcall	_I2C_MasterEnableRestart
  5051     043A                     i1l2936:
  5052                           
  5053                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5054     043A  3001               	movlw	1
  5055     043B                     i1l295:
  5056     043B  0008               	return
  5057     043C                     __end_of_I2C_DO_SEND_RESTART_READ:
  5058                           
  5059                           	psect	text32
  5060     03DD                     __ptext32:	
  5061 ;; *************** function _I2C_DO_RCEN *****************
  5062 ;; Defined at:
  5063 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;		None
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      enum E3112
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5077 ;;      Params:         0       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 1
  5084 ;; This function calls:
  5085 ;;		_I2C_MasterStartRx
  5086 ;; This function is called by:
  5087 ;;		_I2C_MasterFsm
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091     03DD                     _I2C_DO_RCEN:	
  5092                           ;psect for function _I2C_DO_RCEN
  5093                           
  5094     03DD                     i1l3176:	
  5095                           ;incstack = 0
  5096                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5097                           
  5098                           
  5099                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5100     03DD  0020               	movlb	0	; select bank0
  5101     03DE  103C               	bcf	_I2C_Status+28,0
  5102     03DF                     i1l3178:
  5103                           
  5104                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5105     03DF  3184  2467  3183   	fcall	_I2C_MasterStartRx
  5106     03E2                     i1l3180:
  5107                           
  5108                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5109     03E2  3004               	movlw	4
  5110     03E3                     i1l271:
  5111     03E3  0008               	return
  5112     03E4                     __end_of_I2C_DO_RCEN:
  5113                           
  5114                           	psect	text33
  5115     00E4                     __ptext33:	
  5116 ;; *************** function _I2C_DO_RX *****************
  5117 ;; Defined at:
  5118 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      enum E3112
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5132 ;;      Params:         0       0       0       0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0
  5134 ;;      Temps:          2       0       0       0       0       0       0       0
  5135 ;;      Totals:         2       0       0       0       0       0       0       0
  5136 ;;Total ram usage:        2 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 3
  5139 ;; This function calls:
  5140 ;;		NULL
  5141 ;;		_I2C_CallbackReturnReset
  5142 ;;		_I2C_CallbackReturnStop
  5143 ;;		_I2C_DO_RX_NACK_RESTART
  5144 ;;		_I2C_DO_RX_NACK_STOP
  5145 ;;		_I2C_MasterGetRxData
  5146 ;;		_I2C_MasterSendAck
  5147 ;;		_rd1RegCompleteHandler
  5148 ;;		_rd2RegCompleteHandler
  5149 ;;		_rdBlkRegCompleteHandler
  5150 ;;		_wr1RegCompleteHandler
  5151 ;;		_wr2RegCompleteHandler
  5152 ;; This function is called by:
  5153 ;;		_I2C_MasterFsm
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157     00E4                     _I2C_DO_RX:	
  5158                           ;psect for function _I2C_DO_RX
  5159                           
  5160     00E4                     i1l4096:	
  5161                           ;incstack = 0
  5162                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5163                           
  5164                           
  5165                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5166     00E4  0020               	movlb	0	; select bank0
  5167     00E5  0837               	movf	low ((_I2C_Status| 0+23)),w
  5168     00E6  0086               	movwf	6
  5169     00E7  0187               	clrf	7
  5170     00E8  3184  2464  3180   	fcall	_I2C_MasterGetRxData
  5171     00EB  0081               	movwf	1
  5172     00EC                     i1l4098:
  5173     00EC  3001               	movlw	1
  5174     00ED  00F7               	movwf	??_I2C_DO_RX
  5175     00EE  0877               	movf	??_I2C_DO_RX,w
  5176     00EF  0020               	movlb	0	; select bank0
  5177     00F0  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  5178     00F1                     i1l4100:
  5179                           
  5180                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5181     00F1  3001               	movlw	1
  5182     00F2  02B8               	subwf	_I2C_Status+24,f
  5183     00F3  3000               	movlw	0
  5184     00F4  3BB9               	subwfb	_I2C_Status+25,f
  5185     00F5  0838               	movf	_I2C_Status+24,w
  5186     00F6  0439               	iorwf	_I2C_Status+25,w
  5187     00F7  1903               	btfsc	3,2
  5188     00F8  28FA               	goto	u167_21
  5189     00F9  28FB               	goto	u167_20
  5190     00FA                     u167_21:
  5191     00FA  2900               	goto	i1l259
  5192     00FB                     u167_20:
  5193     00FB                     i1l4102:
  5194                           
  5195                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  5196     00FB  3184  244E  3180   	fcall	_I2C_MasterSendAck
  5197     00FE                     i1l4104:
  5198                           
  5199                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  5200     00FE  3005               	movlw	5
  5201     00FF  2926               	goto	i1l260
  5202     0100                     i1l259:	
  5203                           ;mcc_generated_files/i2c_master.c: 388:     else
  5204                           
  5205                           
  5206                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  5207     0100  15BC               	bsf	_I2C_Status+28,3
  5208                           
  5209                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5210     0101  290A               	goto	i1l4120
  5211     0102                     i1l4110:
  5212                           
  5213                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  5214     0102  3184  2419  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  5215     0105  2926               	goto	i1l260
  5216     0106                     i1l4114:
  5217                           
  5218                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  5219     0106  3184  241E  3180   	fcall	_I2C_DO_RX_NACK_STOP
  5220     0109  2926               	goto	i1l260
  5221     010A                     i1l4120:
  5222     010A  082C               	movf	low ((_I2C_Status| 0+12)),w
  5223     010B  00E9               	movwf	rdBlkRegCompleteHandler@ptr
  5224     010C  0821               	movf	_I2C_Status+1,w
  5225     010D  008A               	movwf	10
  5226     010E  0820               	movf	_I2C_Status,w
  5227     010F  000A               	callw
  5228     0110  3180               	pagesel	$
  5229     0111  00F7               	movwf	??_I2C_DO_RX
  5230     0112  01F8               	clrf	??_I2C_DO_RX+1
  5231                           
  5232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5233                           ; Switch size 1, requested type "simple"
  5234                           ; Number of cases is 1, Range of values is 0 to 0
  5235                           ; switch strategies available:
  5236                           ; Name         Instructions Cycles
  5237                           ; simple_byte            4     3 (average)
  5238                           ; direct_byte            8     6 (fixed)
  5239                           ; jumptable            260     6 (fixed)
  5240                           ;	Chosen strategy is simple_byte
  5241     0113  0878               	movf	??_I2C_DO_RX+1,w
  5242     0114  3A00               	xorlw	0	; case 0
  5243     0115  1903               	skipnz
  5244     0116  2918               	goto	i1l4544
  5245     0117  2906               	goto	i1l4114
  5246     0118                     i1l4544:
  5247                           
  5248                           ; Switch size 1, requested type "simple"
  5249                           ; Number of cases is 4, Range of values is 1 to 4
  5250                           ; switch strategies available:
  5251                           ; Name         Instructions Cycles
  5252                           ; simple_byte           13     7 (average)
  5253                           ; direct_byte           17     9 (fixed)
  5254                           ; jumptable            263     9 (fixed)
  5255                           ;	Chosen strategy is simple_byte
  5256     0118  0877               	movf	??_I2C_DO_RX,w
  5257     0119  3A01               	xorlw	1	; case 1
  5258     011A  1903               	skipnz
  5259     011B  2906               	goto	i1l4114
  5260     011C  3A03               	xorlw	3	; case 2
  5261     011D  1903               	skipnz
  5262     011E  2902               	goto	i1l4110
  5263     011F  3A01               	xorlw	1	; case 3
  5264     0120  1903               	skipnz
  5265     0121  2902               	goto	i1l4110
  5266     0122  3A07               	xorlw	7	; case 4
  5267     0123  1903               	skipnz
  5268     0124  2906               	goto	i1l4114
  5269     0125  2906               	goto	i1l4114
  5270     0126                     i1l260:
  5271     0126  0008               	return
  5272     0127                     __end_of_I2C_DO_RX:
  5273                           
  5274                           	psect	text34
  5275     0091                     __ptext34:	
  5276 ;; *************** function _I2C_DO_TX *****************
  5277 ;; Defined at:
  5278 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      enum E3112
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5292 ;;      Params:         0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0
  5294 ;;      Temps:          2       0       0       0       0       0       0       0
  5295 ;;      Totals:         2       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        2 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 3
  5299 ;; This function calls:
  5300 ;;		NULL
  5301 ;;		_I2C_CallbackReturnReset
  5302 ;;		_I2C_CallbackReturnStop
  5303 ;;		_I2C_DO_SEND_RESTART_READ
  5304 ;;		_I2C_DO_SEND_RESTART_WRITE
  5305 ;;		_I2C_DO_SEND_STOP
  5306 ;;		_I2C_MasterIsNack
  5307 ;;		_I2C_MasterSendTxData
  5308 ;;		_rd1RegCompleteHandler
  5309 ;;		_rd2RegCompleteHandler
  5310 ;;		_rdBlkRegCompleteHandler
  5311 ;;		_wr1RegCompleteHandler
  5312 ;;		_wr2RegCompleteHandler
  5313 ;; This function is called by:
  5314 ;;		_I2C_MasterFsm
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318     0091                     _I2C_DO_TX:	
  5319                           ;psect for function _I2C_DO_TX
  5320                           
  5321     0091                     i1l4062:	
  5322                           ;incstack = 0
  5323                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5324                           
  5325                           
  5326                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  5327     0091  3184  240E  3180   	fcall	_I2C_MasterIsNack
  5328     0094  3A00               	xorlw	0
  5329     0095  1903               	skipnz
  5330     0096  2898               	goto	u165_21
  5331     0097  2899               	goto	u165_20
  5332     0098                     u165_21:
  5333     0098  28C7               	goto	i1l243
  5334     0099                     u165_20:
  5335     0099  28A6               	goto	i1l4080
  5336     009A                     i1l4066:
  5337                           
  5338                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5339     009A  3184  2437  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  5340     009D  28E3               	goto	i1l246
  5341     009E                     i1l4070:
  5342                           
  5343                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5344     009E  3184  2432  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  5345     00A1  28E3               	goto	i1l246
  5346     00A2                     i1l4074:
  5347                           
  5348                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  5349     00A2  3184  2428  3180   	fcall	_I2C_DO_SEND_STOP
  5350     00A5  28E3               	goto	i1l246
  5351     00A6                     i1l4080:
  5352     00A6  0020               	movlb	0	; select bank0
  5353     00A7  082F               	movf	low ((_I2C_Status| 0+15)),w
  5354     00A8  00E9               	movwf	rdBlkRegCompleteHandler@ptr
  5355     00A9  3006               	movlw	6
  5356     00AA  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5357     00AB  0086               	movwf	6
  5358     00AC  0187               	clrf	7
  5359     00AD  3F41               	moviw [1]fsr1
  5360     00AE  008A               	movwf	10
  5361     00AF  3F40               	moviw [0]fsr1
  5362     00B0  000A               	callw
  5363     00B1  3180               	pagesel	$
  5364     00B2  00F8               	movwf	??_I2C_DO_TX
  5365     00B3  01F9               	clrf	??_I2C_DO_TX+1
  5366                           
  5367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5368                           ; Switch size 1, requested type "simple"
  5369                           ; Number of cases is 1, Range of values is 0 to 0
  5370                           ; switch strategies available:
  5371                           ; Name         Instructions Cycles
  5372                           ; simple_byte            4     3 (average)
  5373                           ; direct_byte            8     6 (fixed)
  5374                           ; jumptable            260     6 (fixed)
  5375                           ;	Chosen strategy is simple_byte
  5376     00B4  0879               	movf	??_I2C_DO_TX+1,w
  5377     00B5  3A00               	xorlw	0	; case 0
  5378     00B6  1903               	skipnz
  5379     00B7  28B9               	goto	i1l4546
  5380     00B8  28A2               	goto	i1l4074
  5381     00B9                     i1l4546:
  5382                           
  5383                           ; Switch size 1, requested type "simple"
  5384                           ; Number of cases is 4, Range of values is 1 to 4
  5385                           ; switch strategies available:
  5386                           ; Name         Instructions Cycles
  5387                           ; simple_byte           13     7 (average)
  5388                           ; direct_byte           17     9 (fixed)
  5389                           ; jumptable            263     9 (fixed)
  5390                           ;	Chosen strategy is simple_byte
  5391     00B9  0878               	movf	??_I2C_DO_TX,w
  5392     00BA  3A01               	xorlw	1	; case 1
  5393     00BB  1903               	skipnz
  5394     00BC  28A2               	goto	i1l4074
  5395     00BD  3A03               	xorlw	3	; case 2
  5396     00BE  1903               	skipnz
  5397     00BF  289A               	goto	i1l4066
  5398     00C0  3A01               	xorlw	1	; case 3
  5399     00C1  1903               	skipnz
  5400     00C2  289E               	goto	i1l4070
  5401     00C3  3A07               	xorlw	7	; case 4
  5402     00C4  1903               	skipnz
  5403     00C5  28A2               	goto	i1l4074
  5404     00C6  28A2               	goto	i1l4074
  5405     00C7                     i1l243:	
  5406                           ;mcc_generated_files/i2c_master.c: 372:     else
  5407                           
  5408                           
  5409                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  5410     00C7  0020               	movlb	0	; select bank0
  5411     00C8  103C               	bcf	_I2C_Status+28,0
  5412     00C9                     i1l4082:
  5413                           
  5414                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5415     00C9  3017               	movlw	23
  5416     00CA  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5417     00CB  0086               	movwf	6
  5418     00CC  0187               	clrf	7
  5419     00CD  3F40               	moviw [0]fsr1
  5420     00CE  0084               	movwf	4
  5421     00CF  0185               	clrf	5
  5422     00D0  0A81               	incf	1,f
  5423     00D1  0800               	movf	0,w
  5424     00D2  3184  2441  3180   	fcall	_I2C_MasterSendTxData
  5425     00D5                     i1l4084:
  5426                           
  5427                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5428     00D5  3001               	movlw	1
  5429     00D6  0020               	movlb	0	; select bank0
  5430     00D7  02B8               	subwf	_I2C_Status+24,f
  5431     00D8  3000               	movlw	0
  5432     00D9  3BB9               	subwfb	_I2C_Status+25,f
  5433     00DA  0838               	movf	_I2C_Status+24,w
  5434     00DB  0439               	iorwf	_I2C_Status+25,w
  5435     00DC  1D03               	btfss	3,2
  5436     00DD  28DF               	goto	u166_21
  5437     00DE  28E0               	goto	u166_20
  5438     00DF                     u166_21:
  5439     00DF  28E2               	goto	i1l4088
  5440     00E0                     u166_20:
  5441     00E0                     i1l4086:
  5442     00E0  3006               	movlw	6
  5443     00E1  28E3               	goto	i1l246
  5444     00E2                     i1l4088:
  5445     00E2  3003               	movlw	3
  5446     00E3                     i1l246:
  5447     00E3  0008               	return
  5448     00E4                     __end_of_I2C_DO_TX:
  5449                           
  5450                           	psect	text35
  5451     03CE                     __ptext35:	
  5452 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5453 ;; Defined at:
  5454 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      enum E3112
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5468 ;;      Params:         0       0       0       0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0
  5471 ;;      Totals:         0       0       0       0       0       0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 1
  5475 ;; This function calls:
  5476 ;;		_I2C_MasterSendTxData
  5477 ;; This function is called by:
  5478 ;;		_I2C_MasterFsm
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482     03CE                     _I2C_DO_SEND_ADR_WRITE:	
  5483                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  5484                           
  5485     03CE                     i1l3104:	
  5486                           ;incstack = 0
  5487                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5488                           
  5489                           
  5490                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  5491     03CE  0020               	movlb	0	; select bank0
  5492     03CF  143C               	bsf	_I2C_Status+28,0
  5493     03D0                     i1l3106:
  5494                           
  5495                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5496     03D0  3536               	lslf	_I2C_Status+22,w
  5497     03D1  3184  2441  3183   	fcall	_I2C_MasterSendTxData
  5498     03D4                     i1l3108:
  5499                           
  5500                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  5501     03D4  3003               	movlw	3
  5502     03D5                     i1l240:
  5503     03D5  0008               	return
  5504     03D6                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5505                           
  5506                           	psect	text36
  5507     03BD                     __ptext36:	
  5508 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5509 ;; Defined at:
  5510 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      enum E3112
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5524 ;;      Params:         0       0       0       0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 1
  5531 ;; This function calls:
  5532 ;;		_I2C_MasterSendTxData
  5533 ;; This function is called by:
  5534 ;;		_I2C_MasterFsm
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538     03BD                     _I2C_DO_SEND_ADR_READ:	
  5539                           ;psect for function _I2C_DO_SEND_ADR_READ
  5540                           
  5541     03BD                     i1l3096:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  5544                           
  5545                           
  5546                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  5547     03BD  0020               	movlb	0	; select bank0
  5548     03BE  143C               	bsf	_I2C_Status+28,0
  5549     03BF                     i1l3098:
  5550                           
  5551                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5552     03BF  1403               	setc
  5553     03C0  0D36               	rlf	_I2C_Status+22,w
  5554     03C1  3184  2441  3183   	fcall	_I2C_MasterSendTxData
  5555     03C4                     i1l3100:
  5556                           
  5557                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  5558     03C4  3005               	movlw	5
  5559     03C5                     i1l237:
  5560     03C5  0008               	return
  5561     03C6                     __end_of_I2C_DO_SEND_ADR_READ:
  5562                           
  5563                           	psect	text37
  5564     043C                     __ptext37:	
  5565 ;; *************** function _I2C_DO_IDLE *****************
  5566 ;; Defined at:
  5567 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;		None
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      enum E3112
  5574 ;; Registers used:
  5575 ;;		wreg, status,2
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5581 ;;      Params:         0       0       0       0       0       0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0
  5584 ;;      Totals:         0       0       0       0       0       0       0       0
  5585 ;;Total ram usage:        0 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_I2C_MasterFsm
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594     043C                     _I2C_DO_IDLE:	
  5595                           ;psect for function _I2C_DO_IDLE
  5596                           
  5597     043C                     i1l3088:	
  5598                           ;incstack = 0
  5599                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  5600                           
  5601                           
  5602                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  5603     043C  0020               	movlb	0	; select bank0
  5604     043D  10BC               	bcf	_I2C_Status+28,1
  5605     043E                     i1l3090:
  5606                           
  5607                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  5608     043E  01BB               	clrf	_I2C_Status+27
  5609     043F                     i1l3092:
  5610                           
  5611                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  5612     043F  300E               	movlw	14
  5613     0440                     i1l234:
  5614     0440  0008               	return
  5615     0441                     __end_of_I2C_DO_IDLE:
  5616                           
  5617                           	psect	text38
  5618     01A1                     __ptext38:	
  5619 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5620 ;; Defined at:
  5621 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      enum E3112
  5628 ;; Registers used:
  5629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5635 ;;      Params:         0       0       0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0
  5637 ;;      Temps:          2       0       0       0       0       0       0       0
  5638 ;;      Totals:         2       0       0       0       0       0       0       0
  5639 ;;Total ram usage:        2 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 3
  5642 ;; This function calls:
  5643 ;;		NULL
  5644 ;;		_I2C_CallbackReturnReset
  5645 ;;		_I2C_CallbackReturnStop
  5646 ;;		_I2C_DO_SEND_RESTART
  5647 ;;		_I2C_DO_SEND_STOP
  5648 ;;		_I2C_MasterSetIrq
  5649 ;;		_rd1RegCompleteHandler
  5650 ;;		_rd2RegCompleteHandler
  5651 ;;		_rdBlkRegCompleteHandler
  5652 ;;		_wr1RegCompleteHandler
  5653 ;;		_wr2RegCompleteHandler
  5654 ;; This function is called by:
  5655 ;;		_I2C_MasterFsm
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659     01A1                     _I2C_DO_TX_EMPTY:	
  5660                           ;psect for function _I2C_DO_TX_EMPTY
  5661                           
  5662     01A1                     i1l4126:	
  5663                           ;incstack = 0
  5664                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5665                           
  5666                           
  5667                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  5668     01A1  0020               	movlb	0	; select bank0
  5669     01A2  15BC               	bsf	_I2C_Status+28,3
  5670                           
  5671                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5672     01A3  29B1               	goto	i1l4144
  5673     01A4                     i1l4128:
  5674                           
  5675                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  5676     01A4  3184  242D  3181   	fcall	_I2C_DO_SEND_RESTART
  5677     01A7  29CD               	goto	i1l277
  5678     01A8                     i1l4132:
  5679                           
  5680                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  5681     01A8  3184  2461  3181   	fcall	_I2C_MasterSetIrq
  5682     01AB                     i1l4134:
  5683                           
  5684                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  5685     01AB  3003               	movlw	3
  5686     01AC  29CD               	goto	i1l277
  5687     01AD                     i1l4138:
  5688                           
  5689                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  5690     01AD  3184  2428  3181   	fcall	_I2C_DO_SEND_STOP
  5691     01B0  29CD               	goto	i1l277
  5692     01B1                     i1l4144:
  5693     01B1  082C               	movf	low ((_I2C_Status| 0+12)),w
  5694     01B2  00E9               	movwf	rdBlkRegCompleteHandler@ptr
  5695     01B3  0821               	movf	_I2C_Status+1,w
  5696     01B4  008A               	movwf	10
  5697     01B5  0820               	movf	_I2C_Status,w
  5698     01B6  000A               	callw
  5699     01B7  3181               	pagesel	$
  5700     01B8  00F7               	movwf	??_I2C_DO_TX_EMPTY
  5701     01B9  01F8               	clrf	??_I2C_DO_TX_EMPTY+1
  5702                           
  5703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5704                           ; Switch size 1, requested type "simple"
  5705                           ; Number of cases is 1, Range of values is 0 to 0
  5706                           ; switch strategies available:
  5707                           ; Name         Instructions Cycles
  5708                           ; simple_byte            4     3 (average)
  5709                           ; direct_byte            8     6 (fixed)
  5710                           ; jumptable            260     6 (fixed)
  5711                           ;	Chosen strategy is simple_byte
  5712     01BA  0878               	movf	??_I2C_DO_TX_EMPTY+1,w
  5713     01BB  3A00               	xorlw	0	; case 0
  5714     01BC  1903               	skipnz
  5715     01BD  29BF               	goto	i1l4548
  5716     01BE  29AD               	goto	i1l4138
  5717     01BF                     i1l4548:
  5718                           
  5719                           ; Switch size 1, requested type "simple"
  5720                           ; Number of cases is 4, Range of values is 1 to 4
  5721                           ; switch strategies available:
  5722                           ; Name         Instructions Cycles
  5723                           ; simple_byte           13     7 (average)
  5724                           ; direct_byte           17     9 (fixed)
  5725                           ; jumptable            263     9 (fixed)
  5726                           ;	Chosen strategy is simple_byte
  5727     01BF  0877               	movf	??_I2C_DO_TX_EMPTY,w
  5728     01C0  3A01               	xorlw	1	; case 1
  5729     01C1  1903               	skipnz
  5730     01C2  29AD               	goto	i1l4138
  5731     01C3  3A03               	xorlw	3	; case 2
  5732     01C4  1903               	skipnz
  5733     01C5  29A4               	goto	i1l4128
  5734     01C6  3A01               	xorlw	1	; case 3
  5735     01C7  1903               	skipnz
  5736     01C8  29A4               	goto	i1l4128
  5737     01C9  3A07               	xorlw	7	; case 4
  5738     01CA  1903               	skipnz
  5739     01CB  29A8               	goto	i1l4132
  5740     01CC  29AD               	goto	i1l4138
  5741     01CD                     i1l277:
  5742     01CD  0008               	return
  5743     01CE                     __end_of_I2C_DO_TX_EMPTY:
  5744                           
  5745                           	psect	text39
  5746     0461                     __ptext39:	
  5747 ;; *************** function _I2C_MasterSetIrq *****************
  5748 ;; Defined at:
  5749 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;		None
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;		None
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		None
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5763 ;;      Params:         0       0       0       0       0       0       0       0
  5764 ;;      Locals:         0       0       0       0       0       0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0
  5766 ;;      Totals:         0       0       0       0       0       0       0       0
  5767 ;;Total ram usage:        0 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_I2C_DO_TX_EMPTY
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776     0461                     _I2C_MasterSetIrq:	
  5777                           ;psect for function _I2C_MasterSetIrq
  5778                           
  5779     0461                     i1l2978:	
  5780                           ;incstack = 0
  5781                           ; Regs used in _I2C_MasterSetIrq: []
  5782                           
  5783                           
  5784                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  5785     0461  0020               	movlb	0	; select bank0
  5786     0462  1591               	bsf	17,3	;volatile
  5787     0463                     i1l397:
  5788     0463  0008               	return
  5789     0464                     __end_of_I2C_MasterSetIrq:
  5790                           
  5791                           	psect	text40
  5792     040E                     __ptext40:	
  5793 ;; *************** function _I2C_MasterIsNack *****************
  5794 ;; Defined at:
  5795 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      _Bool 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5809 ;;      Params:         0       0       0       0       0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0
  5812 ;;      Totals:         0       0       0       0       0       0       0       0
  5813 ;;Total ram usage:        0 bytes
  5814 ;; Hardware stack levels used: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_I2C_MasterFsm
  5819 ;;		_I2C_DO_TX
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823     040E                     _I2C_MasterIsNack:	
  5824                           ;psect for function _I2C_MasterIsNack
  5825                           
  5826     040E                     i1l2928:	
  5827                           ;incstack = 0
  5828                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  5829                           
  5830                           
  5831                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  5832     040E  0024               	movlb	4	; select bank4
  5833     040F  0E16               	swapf	22,w	;volatile
  5834     0410  0C89               	rrf	9,f
  5835     0411  0C89               	rrf	9,f
  5836     0412  3901               	andlw	1
  5837     0413                     i1l370:
  5838     0413  0008               	return
  5839     0414                     __end_of_I2C_MasterIsNack:
  5840                           
  5841                           	psect	text41
  5842     0441                     __ptext41:	
  5843 ;; *************** function _I2C_MasterSendTxData *****************
  5844 ;; Defined at:
  5845 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  data            1    wreg     unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  data            1    0[COMMON] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5859 ;;      Params:         0       0       0       0       0       0       0       0
  5860 ;;      Locals:         1       0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0
  5862 ;;      Totals:         1       0       0       0       0       0       0       0
  5863 ;;Total ram usage:        1 bytes
  5864 ;; Hardware stack levels used: 1
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_I2C_DO_SEND_ADR_READ
  5869 ;;		_I2C_DO_SEND_ADR_WRITE
  5870 ;;		_I2C_DO_TX
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874     0441                     _I2C_MasterSendTxData:	
  5875                           ;psect for function _I2C_MasterSendTxData
  5876                           
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  5880                           ;I2C_MasterSendTxData@data stored from wreg
  5881     0441  00F7               	movwf	I2C_MasterSendTxData@data
  5882     0442                     i1l2932:
  5883                           
  5884                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  5885     0442  0877               	movf	I2C_MasterSendTxData@data,w
  5886     0443  0024               	movlb	4	; select bank4
  5887     0444  0091               	movwf	17	;volatile
  5888     0445                     i1l352:
  5889     0445  0008               	return
  5890     0446                     __end_of_I2C_MasterSendTxData:
  5891                           
  5892                           	psect	text42
  5893     044E                     __ptext42:	
  5894 ;; *************** function _I2C_MasterSendAck *****************
  5895 ;; Defined at:
  5896 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		None
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5910 ;;      Params:         0       0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_I2C_DO_RX
  5920 ;;		_I2C_DO_RX_ACK
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924     044E                     _I2C_MasterSendAck:	
  5925                           ;psect for function _I2C_MasterSendAck
  5926                           
  5927     044E                     i1l2956:	
  5928                           ;incstack = 0
  5929                           ; Regs used in _I2C_MasterSendAck: []
  5930                           
  5931                           
  5932                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  5933     044E  0024               	movlb	4	; select bank4
  5934     044F  1296               	bcf	22,5	;volatile
  5935                           
  5936                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  5937     0450  1616               	bsf	22,4	;volatile
  5938     0451                     i1l373:
  5939     0451  0008               	return
  5940     0452                     __end_of_I2C_MasterSendAck:
  5941                           
  5942                           	psect	text43
  5943     0464                     __ptext43:	
  5944 ;; *************** function _I2C_MasterGetRxData *****************
  5945 ;; Defined at:
  5946 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      unsigned char 
  5953 ;; Registers used:
  5954 ;;		wreg
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5960 ;;      Params:         0       0       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0
  5963 ;;      Totals:         0       0       0       0       0       0       0       0
  5964 ;;Total ram usage:        0 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_I2C_DO_RX
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973     0464                     _I2C_MasterGetRxData:	
  5974                           ;psect for function _I2C_MasterGetRxData
  5975                           
  5976     0464                     i1l2952:	
  5977                           ;incstack = 0
  5978                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  5979                           
  5980                           
  5981                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  5982     0464  0024               	movlb	4	; select bank4
  5983     0465  0811               	movf	17,w	;volatile
  5984     0466                     i1l349:
  5985     0466  0008               	return
  5986     0467                     __end_of_I2C_MasterGetRxData:
  5987                           
  5988                           	psect	text44
  5989     0452                     __ptext44:	
  5990 ;; *************** function _I2C_MasterSendNack *****************
  5991 ;; Defined at:
  5992 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;		None
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;		None
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		None
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6006 ;;      Params:         0       0       0       0       0       0       0       0
  6007 ;;      Locals:         0       0       0       0       0       0       0       0
  6008 ;;      Temps:          0       0       0       0       0       0       0       0
  6009 ;;      Totals:         0       0       0       0       0       0       0       0
  6010 ;;Total ram usage:        0 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_I2C_DO_RX_NACK_STOP
  6016 ;;		_I2C_DO_RX_NACK_RESTART
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020     0452                     _I2C_MasterSendNack:	
  6021                           ;psect for function _I2C_MasterSendNack
  6022                           
  6023     0452                     i1l2926:	
  6024                           ;incstack = 0
  6025                           ; Regs used in _I2C_MasterSendNack: []
  6026                           
  6027                           
  6028                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6029     0452  0024               	movlb	4	; select bank4
  6030     0453  1696               	bsf	22,5	;volatile
  6031                           
  6032                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6033     0454  1616               	bsf	22,4	;volatile
  6034     0455                     i1l376:
  6035     0455  0008               	return
  6036     0456                     __end_of_I2C_MasterSendNack:
  6037                           
  6038                           	psect	text45
  6039     0467                     __ptext45:	
  6040 ;; *************** function _I2C_MasterStartRx *****************
  6041 ;; Defined at:
  6042 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      void 
  6049 ;; Registers used:
  6050 ;;		None
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6056 ;;      Params:         0       0       0       0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0
  6059 ;;      Totals:         0       0       0       0       0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_I2C_DO_RCEN
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069     0467                     _I2C_MasterStartRx:	
  6070                           ;psect for function _I2C_MasterStartRx
  6071                           
  6072     0467                     i1l2970:	
  6073                           ;incstack = 0
  6074                           ; Regs used in _I2C_MasterStartRx: []
  6075                           
  6076                           
  6077                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6078     0467  0024               	movlb	4	; select bank4
  6079     0468  1596               	bsf	22,3	;volatile
  6080     0469                     i1l361:
  6081     0469  0008               	return
  6082     046A                     __end_of_I2C_MasterStartRx:
  6083                           
  6084                           	psect	text46
  6085     02B7                     __ptext46:	
  6086 ;; *************** function _rdBlkRegCompleteHandler *****************
  6087 ;; Defined at:
  6088 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  ptr             1    0[BANK0 ] PTR void 
  6091 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6092 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      enum E363
  6097 ;; Registers used:
  6098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6104 ;;      Params:         0       1       0       0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0
  6107 ;;      Totals:         0       1       0       0       0       0       0       0
  6108 ;;Total ram usage:        1 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; Hardware stack levels required when called: 2
  6111 ;; This function calls:
  6112 ;;		_I2C_SetBuffer
  6113 ;;		_I2C_SetDataCompleteCallback
  6114 ;; This function is called by:
  6115 ;;		_I2C_ReadDataBlock
  6116 ;;		_I2C_DO_TX
  6117 ;;		_I2C_DO_RX
  6118 ;;		_I2C_DO_TX_EMPTY
  6119 ;;		_I2C_DO_ADDRESS_NACK
  6120 ;;		_I2C_DO_RX_EMPTY
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124     02B7                     _rdBlkRegCompleteHandler:	
  6125                           ;psect for function _rdBlkRegCompleteHandler
  6126                           
  6127     02B7                     i1l4056:	
  6128                           ;incstack = 0
  6129                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6130                           
  6131                           
  6132                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6133     02B7  0020               	movlb	0	; select bank0
  6134     02B8  0869               	movf	rdBlkRegCompleteHandler@ptr,w
  6135     02B9  0086               	movwf	6
  6136     02BA  0187               	clrf	7
  6137     02BB  3F40               	moviw [0]fsr1
  6138     02BC  00F7               	movwf	I2C_SetBuffer@bufferSize
  6139     02BD  3F41               	moviw [1]fsr1
  6140     02BE  00F8               	movwf	I2C_SetBuffer@bufferSize+1
  6141     02BF  0869               	movf	rdBlkRegCompleteHandler@ptr,w
  6142     02C0  3E02               	addlw	2
  6143     02C1  0086               	movwf	6
  6144     02C2  0187               	clrf	7
  6145     02C3  0801               	movf	1,w
  6146     02C4  3183  2353  3182   	fcall	_I2C_SetBuffer
  6147                           
  6148                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6149     02C7  3000               	movlw	0
  6150     02C8  00FB               	movwf	I2C_SetDataCompleteCallback@cb
  6151     02C9  00FC               	movwf	I2C_SetDataCompleteCallback@cb+1
  6152     02CA  01FD               	clrf	I2C_SetDataCompleteCallback@ptr
  6153     02CB  3183  239F  3182   	fcall	_I2C_SetDataCompleteCallback
  6154     02CE                     i1l4058:
  6155                           
  6156                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6157     02CE  3002               	movlw	2
  6158     02CF                     i1l942:
  6159     02CF  0008               	return
  6160     02D0                     __end_of_rdBlkRegCompleteHandler:
  6161                           
  6162                           	psect	text47
  6163     02FA                     __ptext47:	
  6164 ;; *************** function _wr1RegCompleteHandler *****************
  6165 ;; Defined at:
  6166 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  ptr             1    0[BANK0 ] PTR void 
  6169 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6170 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      enum E363
  6175 ;; Registers used:
  6176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6182 ;;      Params:         0       1       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0
  6185 ;;      Totals:         0       1       0       0       0       0       0       0
  6186 ;;Total ram usage:        1 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 2
  6189 ;; This function calls:
  6190 ;;		_I2C_SetBuffer
  6191 ;;		_I2C_SetDataCompleteCallback
  6192 ;; This function is called by:
  6193 ;;		_I2C_Write1ByteRegister
  6194 ;;		_I2C_DO_TX
  6195 ;;		_I2C_DO_RX
  6196 ;;		_I2C_DO_TX_EMPTY
  6197 ;;		_I2C_DO_ADDRESS_NACK
  6198 ;;		_I2C_DO_RX_EMPTY
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202     02FA                     _wr1RegCompleteHandler:	
  6203                           ;psect for function _wr1RegCompleteHandler
  6204                           
  6205     02FA                     i1l4040:	
  6206                           ;incstack = 0
  6207                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6208                           
  6209                           
  6210                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6211     02FA  3001               	movlw	1
  6212     02FB  00F7               	movwf	I2C_SetBuffer@bufferSize
  6213     02FC  3000               	movlw	0
  6214     02FD  00F8               	movwf	I2C_SetBuffer@bufferSize+1
  6215     02FE  0020               	movlb	0	; select bank0
  6216     02FF  0869               	movf	wr1RegCompleteHandler@ptr,w
  6217     0300  3183  2353  3182   	fcall	_I2C_SetBuffer
  6218     0303                     i1l4042:
  6219                           
  6220                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6221     0303  3000               	movlw	0
  6222     0304  00FB               	movwf	I2C_SetDataCompleteCallback@cb
  6223     0305  00FC               	movwf	I2C_SetDataCompleteCallback@cb+1
  6224     0306  01FD               	clrf	I2C_SetDataCompleteCallback@ptr
  6225     0307  3183  239F  3182   	fcall	_I2C_SetDataCompleteCallback
  6226     030A                     i1l4044:
  6227                           
  6228                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6229     030A  3004               	movlw	4
  6230     030B                     i1l936:
  6231     030B  0008               	return
  6232     030C                     __end_of_wr1RegCompleteHandler:
  6233                           
  6234                           	psect	text48
  6235     030C                     __ptext48:	
  6236 ;; *************** function _rd2RegCompleteHandler *****************
  6237 ;; Defined at:
  6238 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  ptr             1    0[BANK0 ] PTR void 
  6241 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6242 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;		None
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      enum E363
  6247 ;; Registers used:
  6248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6254 ;;      Params:         0       1       0       0       0       0       0       0
  6255 ;;      Locals:         0       0       0       0       0       0       0       0
  6256 ;;      Temps:          0       0       0       0       0       0       0       0
  6257 ;;      Totals:         0       1       0       0       0       0       0       0
  6258 ;;Total ram usage:        1 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 2
  6261 ;; This function calls:
  6262 ;;		_I2C_SetBuffer
  6263 ;;		_I2C_SetDataCompleteCallback
  6264 ;; This function is called by:
  6265 ;;		_I2C_Read2ByteRegister
  6266 ;;		_I2C_DO_TX
  6267 ;;		_I2C_DO_RX
  6268 ;;		_I2C_DO_TX_EMPTY
  6269 ;;		_I2C_DO_ADDRESS_NACK
  6270 ;;		_I2C_DO_RX_EMPTY
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274     030C                     _rd2RegCompleteHandler:	
  6275                           ;psect for function _rd2RegCompleteHandler
  6276                           
  6277     030C                     i1l4032:	
  6278                           ;incstack = 0
  6279                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6280                           
  6281                           
  6282                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6283     030C  3002               	movlw	2
  6284     030D  00F7               	movwf	I2C_SetBuffer@bufferSize
  6285     030E  3000               	movlw	0
  6286     030F  00F8               	movwf	I2C_SetBuffer@bufferSize+1
  6287     0310  0020               	movlb	0	; select bank0
  6288     0311  0869               	movf	rd2RegCompleteHandler@ptr,w
  6289     0312  3183  2353  3183   	fcall	_I2C_SetBuffer
  6290     0315                     i1l4034:
  6291                           
  6292                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6293     0315  3000               	movlw	0
  6294     0316  00FB               	movwf	I2C_SetDataCompleteCallback@cb
  6295     0317  00FC               	movwf	I2C_SetDataCompleteCallback@cb+1
  6296     0318  01FD               	clrf	I2C_SetDataCompleteCallback@ptr
  6297     0319  3183  239F  3183   	fcall	_I2C_SetDataCompleteCallback
  6298     031C                     i1l4036:
  6299                           
  6300                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6301     031C  3002               	movlw	2
  6302     031D                     i1l933:
  6303     031D  0008               	return
  6304     031E                     __end_of_rd2RegCompleteHandler:
  6305                           
  6306                           	psect	text49
  6307     031E                     __ptext49:	
  6308 ;; *************** function _rd1RegCompleteHandler *****************
  6309 ;; Defined at:
  6310 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  ptr             1    0[BANK0 ] PTR void 
  6313 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6314 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      enum E363
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6326 ;;      Params:         0       1       0       0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0       0
  6329 ;;      Totals:         0       1       0       0       0       0       0       0
  6330 ;;Total ram usage:        1 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 2
  6333 ;; This function calls:
  6334 ;;		_I2C_SetBuffer
  6335 ;;		_I2C_SetDataCompleteCallback
  6336 ;; This function is called by:
  6337 ;;		_I2C_Read1ByteRegister
  6338 ;;		_I2C_DO_TX
  6339 ;;		_I2C_DO_RX
  6340 ;;		_I2C_DO_TX_EMPTY
  6341 ;;		_I2C_DO_ADDRESS_NACK
  6342 ;;		_I2C_DO_RX_EMPTY
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346     031E                     _rd1RegCompleteHandler:	
  6347                           ;psect for function _rd1RegCompleteHandler
  6348                           
  6349     031E                     i1l4024:	
  6350                           ;incstack = 0
  6351                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6352                           
  6353                           
  6354                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6355     031E  3001               	movlw	1
  6356     031F  00F7               	movwf	I2C_SetBuffer@bufferSize
  6357     0320  3000               	movlw	0
  6358     0321  00F8               	movwf	I2C_SetBuffer@bufferSize+1
  6359     0322  0020               	movlb	0	; select bank0
  6360     0323  0869               	movf	rd1RegCompleteHandler@ptr,w
  6361     0324  3183  2353  3183   	fcall	_I2C_SetBuffer
  6362     0327                     i1l4026:
  6363                           
  6364                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6365     0327  3000               	movlw	0
  6366     0328  00FB               	movwf	I2C_SetDataCompleteCallback@cb
  6367     0329  00FC               	movwf	I2C_SetDataCompleteCallback@cb+1
  6368     032A  01FD               	clrf	I2C_SetDataCompleteCallback@ptr
  6369     032B  3183  239F  3183   	fcall	_I2C_SetDataCompleteCallback
  6370     032E                     i1l4028:
  6371                           
  6372                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6373     032E  3002               	movlw	2
  6374     032F                     i1l930:
  6375     032F  0008               	return
  6376     0330                     __end_of_rd1RegCompleteHandler:
  6377                           
  6378                           	psect	text50
  6379     0470                     __ptext50:	
  6380 ;; *************** function _I2C_CallbackReturnReset *****************
  6381 ;; Defined at:
  6382 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  funPtr          1    0[BANK0 ] PTR void 
  6385 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6386 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      enum E363
  6391 ;; Registers used:
  6392 ;;		wreg
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6398 ;;      Params:         0       1       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0
  6401 ;;      Totals:         0       1       0       0       0       0       0       0
  6402 ;;Total ram usage:        1 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_I2C_Open
  6408 ;;		_I2C_DO_TX
  6409 ;;		_I2C_DO_RX
  6410 ;;		_I2C_DO_TX_EMPTY
  6411 ;;		_I2C_DO_ADDRESS_NACK
  6412 ;;		_I2C_DO_RX_EMPTY
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416     0470                     _I2C_CallbackReturnReset:	
  6417                           ;psect for function _I2C_CallbackReturnReset
  6418                           
  6419     0470                     i1l4020:	
  6420                           ;incstack = 0
  6421                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6422                           
  6423                           
  6424                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6425     0470  3005               	movlw	5
  6426     0471                     i1l333:
  6427     0471  0008               	return
  6428     0472                     __end_of_I2C_CallbackReturnReset:
  6429                           
  6430                           	psect	text51
  6431     0472                     __ptext51:	
  6432 ;; *************** function _I2C_CallbackReturnStop *****************
  6433 ;; Defined at:
  6434 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  funPtr          1    0[BANK0 ] PTR void 
  6437 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6438 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      enum E363
  6443 ;; Registers used:
  6444 ;;		wreg
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6450 ;;      Params:         0       1       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0
  6453 ;;      Totals:         0       1       0       0       0       0       0       0
  6454 ;;Total ram usage:        1 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_I2C_SetCallback
  6460 ;;		_I2C_Open
  6461 ;;		_I2C_DO_TX
  6462 ;;		_I2C_DO_RX
  6463 ;;		_I2C_DO_TX_EMPTY
  6464 ;;		_I2C_DO_ADDRESS_NACK
  6465 ;;		_I2C_DO_RX_EMPTY
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469     0472                     _I2C_CallbackReturnStop:	
  6470                           ;psect for function _I2C_CallbackReturnStop
  6471                           
  6472     0472                     i1l4016:	
  6473                           ;incstack = 0
  6474                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6475                           
  6476                           
  6477                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  6478     0472  3001               	movlw	1
  6479     0473                     i1l330:
  6480     0473  0008               	return
  6481     0474                     __end_of_I2C_CallbackReturnStop:
  6482                           
  6483                           	psect	text52
  6484     0330                     __ptext52:	
  6485 ;; *************** function _wr2RegCompleteHandler *****************
  6486 ;; Defined at:
  6487 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  ptr             1    0[BANK0 ] PTR void 
  6490 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6491 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      enum E363
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6503 ;;      Params:         0       1       0       0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0
  6506 ;;      Totals:         0       1       0       0       0       0       0       0
  6507 ;;Total ram usage:        1 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 2
  6510 ;; This function calls:
  6511 ;;		_I2C_SetBuffer
  6512 ;;		_I2C_SetDataCompleteCallback
  6513 ;; This function is called by:
  6514 ;;		_I2C_Write2ByteRegister
  6515 ;;		_I2C_DO_TX
  6516 ;;		_I2C_DO_RX
  6517 ;;		_I2C_DO_TX_EMPTY
  6518 ;;		_I2C_DO_ADDRESS_NACK
  6519 ;;		_I2C_DO_RX_EMPTY
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523     0330                     _wr2RegCompleteHandler:	
  6524                           ;psect for function _wr2RegCompleteHandler
  6525                           
  6526     0330                     i1l4048:	
  6527                           ;incstack = 0
  6528                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6529                           
  6530                           
  6531                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6532     0330  3002               	movlw	2
  6533     0331  00F7               	movwf	I2C_SetBuffer@bufferSize
  6534     0332  3000               	movlw	0
  6535     0333  00F8               	movwf	I2C_SetBuffer@bufferSize+1
  6536     0334  0020               	movlb	0	; select bank0
  6537     0335  0869               	movf	wr2RegCompleteHandler@ptr,w
  6538     0336  3183  2353  3183   	fcall	_I2C_SetBuffer
  6539     0339                     i1l4050:
  6540                           
  6541                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6542     0339  3000               	movlw	0
  6543     033A  00FB               	movwf	I2C_SetDataCompleteCallback@cb
  6544     033B  00FC               	movwf	I2C_SetDataCompleteCallback@cb+1
  6545     033C  01FD               	clrf	I2C_SetDataCompleteCallback@ptr
  6546     033D  3183  239F  3183   	fcall	_I2C_SetDataCompleteCallback
  6547     0340                     i1l4052:
  6548                           
  6549                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6550     0340  3004               	movlw	4
  6551     0341                     i1l939:
  6552     0341  0008               	return
  6553     0342                     __end_of_wr2RegCompleteHandler:
  6554                           
  6555                           	psect	text53
  6556     039F                     __ptext53:	
  6557 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6558 ;; Defined at:
  6559 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
  6562 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  6563 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
  6564 ;;  ptr             1    6[COMMON] PTR void 
  6565 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6566 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6578 ;;      Params:         3       0       0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0
  6581 ;;      Totals:         3       0       0       0       0       0       0       0
  6582 ;;Total ram usage:        3 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 1
  6585 ;; This function calls:
  6586 ;;		_I2C_SetCallback
  6587 ;; This function is called by:
  6588 ;;		_rd1RegCompleteHandler
  6589 ;;		_rd2RegCompleteHandler
  6590 ;;		_wr1RegCompleteHandler
  6591 ;;		_wr2RegCompleteHandler
  6592 ;;		_rdBlkRegCompleteHandler
  6593 ;;		_I2C_Read1ByteRegister
  6594 ;;		_I2C_Read2ByteRegister
  6595 ;;		_I2C_Write1ByteRegister
  6596 ;;		_I2C_Write2ByteRegister
  6597 ;;		_I2C_ReadDataBlock
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601     039F                     _I2C_SetDataCompleteCallback:	
  6602                           ;psect for function _I2C_SetDataCompleteCallback
  6603                           
  6604     039F                     i1l4014:	
  6605                           ;incstack = 0
  6606                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6607                           
  6608                           
  6609                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6610     039F  087C               	movf	I2C_SetDataCompleteCallback@cb+1,w
  6611     03A0  00F8               	movwf	I2C_SetCallback@cb+1
  6612     03A1  087B               	movf	I2C_SetDataCompleteCallback@cb,w
  6613     03A2  00F7               	movwf	I2C_SetCallback@cb
  6614     03A3  087D               	movf	I2C_SetDataCompleteCallback@ptr,w
  6615     03A4  00F9               	movwf	I2C_SetCallback@ptr
  6616     03A5  3000               	movlw	0
  6617     03A6  3182  221E  3183   	fcall	_I2C_SetCallback
  6618     03A9                     i1l204:
  6619     03A9  0008               	return
  6620     03AA                     __end_of_I2C_SetDataCompleteCallback:
  6621                           
  6622                           	psect	text54
  6623     021E                     __ptext54:	
  6624 ;; *************** function _I2C_SetCallback *****************
  6625 ;; Defined at:
  6626 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;  idx             1    wreg     enum E3130
  6629 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  6630 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  6631 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
  6632 ;;  ptr             1    2[COMMON] PTR void 
  6633 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6634 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  idx             1    3[COMMON] enum E3130
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6646 ;;      Params:         3       0       0       0       0       0       0       0
  6647 ;;      Locals:         1       0       0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0
  6649 ;;      Totals:         4       0       0       0       0       0       0       0
  6650 ;;Total ram usage:        4 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_I2C_SetDataCompleteCallback
  6656 ;;		_I2C_SetWriteCollisionCallback
  6657 ;;		_I2C_SetAddressNackCallback
  6658 ;;		_I2C_SetDataNackCallback
  6659 ;;		_I2C_SetTimeoutCallback
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663     021E                     _I2C_SetCallback:	
  6664                           ;psect for function _I2C_SetCallback
  6665                           
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  6669                           ;I2C_SetCallback@idx stored from wreg
  6670     021E  00FA               	movwf	I2C_SetCallback@idx
  6671     021F                     i1l4008:
  6672                           
  6673                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  6674     021F  0877               	movf	I2C_SetCallback@cb,w
  6675     0220  0478               	iorwf	I2C_SetCallback@cb+1,w
  6676     0221  1903               	btfsc	3,2
  6677     0222  2A24               	goto	u164_21
  6678     0223  2A25               	goto	u164_20
  6679     0224                     u164_21:
  6680     0224  2A34               	goto	i1l4012
  6681     0225                     u164_20:
  6682     0225                     i1l4010:
  6683                           
  6684                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6685     0225  357A               	lslf	I2C_SetCallback@idx,w
  6686     0226  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6687     0227  0086               	movwf	6
  6688     0228  0187               	clrf	7
  6689     0229  0877               	movf	I2C_SetCallback@cb,w
  6690     022A  3FC0               	movwi [0]fsr1
  6691     022B  0878               	movf	I2C_SetCallback@cb+1,w
  6692     022C  3FC1               	movwi [1]fsr1
  6693                           
  6694                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  6695     022D  087A               	movf	I2C_SetCallback@idx,w
  6696     022E  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6697     022F  0086               	movwf	6
  6698     0230  0187               	clrf	7
  6699     0231  0879               	movf	I2C_SetCallback@ptr,w
  6700     0232  0081               	movwf	1
  6701                           
  6702                           ;mcc_generated_files/i2c_master.c: 310:     }
  6703     0233  2A41               	goto	i1l224
  6704     0234                     i1l4012:
  6705                           
  6706                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6707     0234  357A               	lslf	I2C_SetCallback@idx,w
  6708     0235  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6709     0236  0086               	movwf	6
  6710     0237  0187               	clrf	7
  6711     0238  3072               	movlw	low _I2C_CallbackReturnStop
  6712     0239  3FC0               	movwi [0]fsr1
  6713     023A  3004               	movlw	high _I2C_CallbackReturnStop
  6714     023B  3FC1               	movwi [1]fsr1
  6715                           
  6716                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6717     023C  087A               	movf	I2C_SetCallback@idx,w
  6718     023D  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6719     023E  0086               	movwf	6
  6720     023F  0187               	clrf	7
  6721     0240  0181               	clrf	1
  6722     0241                     i1l224:
  6723     0241  0008               	return
  6724     0242                     __end_of_I2C_SetCallback:
  6725                           
  6726                           	psect	text55
  6727     0353                     __ptext55:	
  6728 ;; *************** function _I2C_SetBuffer *****************
  6729 ;; Defined at:
  6730 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  buffer          1    wreg     PTR void 
  6733 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6734 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), 
  6735 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  6736 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  6737 ;;  bufferSize      2    0[COMMON] unsigned int 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  buffer          1    2[COMMON] PTR void 
  6740 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  6741 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), 
  6742 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  6743 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6753 ;;      Params:         2       0       0       0       0       0       0       0
  6754 ;;      Locals:         1       0       0       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0
  6756 ;;      Totals:         3       0       0       0       0       0       0       0
  6757 ;;Total ram usage:        3 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_rd1RegCompleteHandler
  6763 ;;		_rd2RegCompleteHandler
  6764 ;;		_wr1RegCompleteHandler
  6765 ;;		_wr2RegCompleteHandler
  6766 ;;		_rdBlkRegCompleteHandler
  6767 ;;		_I2C_Read1ByteRegister
  6768 ;;		_I2C_Read2ByteRegister
  6769 ;;		_I2C_Write1ByteRegister
  6770 ;;		_I2C_Write2ByteRegister
  6771 ;;		_I2C_WriteNBytes
  6772 ;;		_I2C_ReadNBytes
  6773 ;;		_I2C_ReadDataBlock
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777     0353                     _I2C_SetBuffer:	
  6778                           ;psect for function _I2C_SetBuffer
  6779                           
  6780                           
  6781                           ;incstack = 0
  6782                           ; Regs used in _I2C_SetBuffer: [wreg]
  6783                           ;I2C_SetBuffer@buffer stored from wreg
  6784     0353  00F9               	movwf	I2C_SetBuffer@buffer
  6785     0354                     i1l2914:
  6786                           
  6787                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  6788     0354  0020               	movlb	0	; select bank0
  6789     0355  1DBC               	btfss	_I2C_Status+28,3
  6790     0356  2B58               	goto	u86_21
  6791     0357  2B59               	goto	u86_20
  6792     0358                     u86_21:
  6793     0358  2B60               	goto	i1l201
  6794     0359                     u86_20:
  6795     0359                     i1l2916:
  6796                           
  6797                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  6798     0359  0879               	movf	I2C_SetBuffer@buffer,w
  6799     035A  00B7               	movwf	low ((_I2C_Status| 0+23))
  6800                           
  6801                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  6802     035B  0878               	movf	I2C_SetBuffer@bufferSize+1,w
  6803     035C  00B9               	movwf	_I2C_Status+25
  6804     035D  0877               	movf	I2C_SetBuffer@bufferSize,w
  6805     035E  00B8               	movwf	_I2C_Status+24
  6806     035F                     i1l2918:
  6807                           
  6808                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  6809     035F  11BC               	bcf	_I2C_Status+28,3
  6810     0360                     i1l201:
  6811     0360  0008               	return
  6812     0361                     __end_of_I2C_SetBuffer:
  6813                           
  6814                           	psect	text56
  6815     046A                     __ptext56:	
  6816 ;; *************** function _I2C_MasterStop *****************
  6817 ;; Defined at:
  6818 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		None
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6832 ;;      Params:         0       0       0       0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; This function calls:
  6839 ;;		Nothing
  6840 ;; This function is called by:
  6841 ;;		_I2C_DO_SEND_STOP
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845     046A                     _I2C_MasterStop:	
  6846                           ;psect for function _I2C_MasterStop
  6847                           
  6848     046A                     i1l2924:	
  6849                           ;incstack = 0
  6850                           ; Regs used in _I2C_MasterStop: []
  6851                           
  6852                           
  6853                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  6854     046A  0024               	movlb	4	; select bank4
  6855     046B  1516               	bsf	22,2	;volatile
  6856     046C                     i1l367:
  6857     046C  0008               	return
  6858     046D                     __end_of_I2C_MasterStop:
  6859                           
  6860                           	psect	text57
  6861     046D                     __ptext57:	
  6862 ;; *************** function _I2C_MasterEnableRestart *****************
  6863 ;; Defined at:
  6864 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		None
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6878 ;;      Params:         0       0       0       0       0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0
  6880 ;;      Temps:          0       0       0       0       0       0       0       0
  6881 ;;      Totals:         0       0       0       0       0       0       0       0
  6882 ;;Total ram usage:        0 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_I2C_DO_SEND_RESTART_READ
  6888 ;;		_I2C_DO_SEND_RESTART_WRITE
  6889 ;;		_I2C_DO_SEND_RESTART
  6890 ;;		_I2C_DO_RX_EMPTY
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894     046D                     _I2C_MasterEnableRestart:	
  6895                           ;psect for function _I2C_MasterEnableRestart
  6896                           
  6897     046D                     i1l2922:	
  6898                           ;incstack = 0
  6899                           ; Regs used in _I2C_MasterEnableRestart: []
  6900                           
  6901                           
  6902                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  6903     046D  0024               	movlb	4	; select bank4
  6904     046E  1496               	bsf	22,1	;volatile
  6905     046F                     i1l355:
  6906     046F  0008               	return
  6907     0470                     __end_of_I2C_MasterEnableRestart:
  6908                           
  6909                           	psect	text58
  6910     0262                     __ptext58:	
  6911 ;; *************** function _EUSART_Transmit_ISR *****************
  6912 ;; Defined at:
  6913 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6927 ;;      Params:         0       0       0       0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0
  6929 ;;      Temps:          1       0       0       0       0       0       0       0
  6930 ;;      Totals:         1       0       0       0       0       0       0       0
  6931 ;;Total ram usage:        1 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_EUSART_Initialize
  6937 ;;		_INTERRUPT_InterruptManager
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941     0262                     _EUSART_Transmit_ISR:	
  6942                           ;psect for function _EUSART_Transmit_ISR
  6943                           
  6944     0262                     i1l3612:	
  6945                           ;incstack = 0
  6946                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6947                           
  6948                           
  6949                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6950     0262  3010               	movlw	16
  6951     0263  0274               	subwf	_eusartTxBufferRemaining,w	;volatile
  6952     0264  1803               	skipnc
  6953     0265  2A67               	goto	u126_21
  6954     0266  2A68               	goto	u126_20
  6955     0267                     u126_21:
  6956     0267  2A7F               	goto	i1l545
  6957     0268                     u126_20:
  6958     0268                     i1l3614:
  6959                           
  6960                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6961     0268  0875               	movf	_eusartTxTail,w
  6962     0269  3EC0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6963     026A  0086               	movwf	6
  6964     026B  0187               	clrf	7
  6965     026C  0801               	movf	1,w
  6966     026D  0023               	movlb	3	; select bank3
  6967     026E  009A               	movwf	26	;volatile
  6968     026F                     i1l3616:
  6969     026F  3001               	movlw	1
  6970     0270  00F7               	movwf	??_EUSART_Transmit_ISR
  6971     0271  0877               	movf	??_EUSART_Transmit_ISR,w
  6972     0272  07F5               	addwf	_eusartTxTail,f	;volatile
  6973     0273                     i1l3618:
  6974                           
  6975                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6976     0273  3010               	movlw	16
  6977     0274  0275               	subwf	_eusartTxTail,w	;volatile
  6978     0275  1C03               	skipc
  6979     0276  2A78               	goto	u127_21
  6980     0277  2A79               	goto	u127_20
  6981     0278                     u127_21:
  6982     0278  2A7A               	goto	i1l3622
  6983     0279                     u127_20:
  6984     0279                     i1l3620:
  6985                           
  6986                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6987     0279  01F5               	clrf	_eusartTxTail	;volatile
  6988     027A                     i1l3622:
  6989                           
  6990                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6991     027A  3001               	movlw	1
  6992     027B  00F7               	movwf	??_EUSART_Transmit_ISR
  6993     027C  0877               	movf	??_EUSART_Transmit_ISR,w
  6994     027D  07F4               	addwf	_eusartTxBufferRemaining,f	;volatile
  6995                           
  6996                           ;mcc_generated_files/eusart.c: 209:     }
  6997     027E  2A81               	goto	i1l548
  6998     027F                     i1l545:	
  6999                           ;mcc_generated_files/eusart.c: 210:     else
  7000                           
  7001                           
  7002                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  7003     027F  0021               	movlb	1	; select bank1
  7004     0280  1211               	bcf	17,4	;volatile
  7005     0281                     i1l548:
  7006     0281  0008               	return
  7007     0282                     __end_of_EUSART_Transmit_ISR:
  7008                           
  7009                           	psect	text59
  7010     0168                     __ptext59:	
  7011 ;; *************** function _EUSART_Receive_ISR *****************
  7012 ;; Defined at:
  7013 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7027 ;;      Params:         0       0       0       0       0       0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0
  7030 ;;      Totals:         0       0       0       0       0       0       0       0
  7031 ;;Total ram usage:        0 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 2
  7034 ;; This function calls:
  7035 ;;		NULL
  7036 ;;		_EUSART_DefaultErrorHandler
  7037 ;;		_EUSART_DefaultFramingErrorHandler
  7038 ;;		_EUSART_DefaultOverrunErrorHandler
  7039 ;;		_EUSART_RxDataHandler
  7040 ;; This function is called by:
  7041 ;;		_EUSART_Initialize
  7042 ;;		_INTERRUPT_InterruptManager
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046     0168                     _EUSART_Receive_ISR:	
  7047                           ;psect for function _EUSART_Receive_ISR
  7048                           
  7049     0168                     i1l3624:	
  7050                           ;incstack = 0
  7051                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7052                           
  7053                           
  7054                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7055     0168  0873               	movf	_eusartRxHead,w	;volatile
  7056     0169  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7057     016A  0086               	movwf	6
  7058     016B  0187               	clrf	7
  7059     016C  0181               	clrf	1
  7060     016D                     i1l3626:
  7061                           
  7062                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7063     016D  0023               	movlb	3	; select bank3
  7064     016E  1D1D               	btfss	29,2	;volatile
  7065     016F  2971               	goto	u128_21
  7066     0170  2972               	goto	u128_20
  7067     0171                     u128_21:
  7068     0171  297D               	goto	i1l3632
  7069     0172                     u128_20:
  7070     0172                     i1l3628:
  7071                           
  7072                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7073     0172  0873               	movf	_eusartRxHead,w	;volatile
  7074     0173  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7075     0174  0086               	movwf	6
  7076     0175  0187               	clrf	7
  7077     0176  1481               	bsf	1,1
  7078     0177                     i1l3630:
  7079                           
  7080                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7081     0177  0020               	movlb	0	; select bank0
  7082     0178  0858               	movf	_EUSART_FramingErrorHandler+1,w
  7083     0179  008A               	movwf	10
  7084     017A  0857               	movf	_EUSART_FramingErrorHandler,w
  7085     017B  000A               	callw
  7086     017C  3181               	pagesel	$
  7087     017D                     i1l3632:
  7088                           
  7089                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7090     017D  0023               	movlb	3	; select bank3
  7091     017E  1C9D               	btfss	29,1	;volatile
  7092     017F  2981               	goto	u129_21
  7093     0180  2982               	goto	u129_20
  7094     0181                     u129_21:
  7095     0181  298D               	goto	i1l3638
  7096     0182                     u129_20:
  7097     0182                     i1l3634:
  7098                           
  7099                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7100     0182  0873               	movf	_eusartRxHead,w	;volatile
  7101     0183  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7102     0184  0086               	movwf	6
  7103     0185  0187               	clrf	7
  7104     0186  1501               	bsf	1,2
  7105     0187                     i1l3636:
  7106                           
  7107                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7108     0187  0020               	movlb	0	; select bank0
  7109     0188  0856               	movf	_EUSART_OverrunErrorHandler+1,w
  7110     0189  008A               	movwf	10
  7111     018A  0855               	movf	_EUSART_OverrunErrorHandler,w
  7112     018B  000A               	callw
  7113     018C  3181               	pagesel	$
  7114     018D                     i1l3638:
  7115                           
  7116                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7117     018D  0873               	movf	_eusartRxHead,w	;volatile
  7118     018E  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7119     018F  0086               	movwf	6
  7120     0190  0187               	clrf	7
  7121     0191  0801               	movf	1,w
  7122     0192  1903               	btfsc	3,2
  7123     0193  2995               	goto	u130_21
  7124     0194  2996               	goto	u130_20
  7125     0195                     u130_21:
  7126     0195  299D               	goto	i1l3642
  7127     0196                     u130_20:
  7128     0196                     i1l3640:
  7129                           
  7130                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7131     0196  0020               	movlb	0	; select bank0
  7132     0197  0854               	movf	_EUSART_ErrorHandler+1,w
  7133     0198  008A               	movwf	10
  7134     0199  0853               	movf	_EUSART_ErrorHandler,w
  7135     019A  000A               	callw
  7136     019B  3181               	pagesel	$
  7137                           
  7138                           ;mcc_generated_files/eusart.c: 233:     } else {
  7139     019C  29A0               	goto	i1l555
  7140     019D                     i1l3642:
  7141                           
  7142                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7143     019D  3182  22D0  3181   	fcall	_EUSART_RxDataHandler
  7144     01A0                     i1l555:
  7145     01A0  0008               	return
  7146     01A1                     __end_of_EUSART_Receive_ISR:
  7147                           
  7148                           	psect	text60
  7149     0456                     __ptext60:	
  7150 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7151 ;; Defined at:
  7152 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;		None
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;		None
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		None
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7166 ;;      Params:         0       0       0       0       0       0       0       0
  7167 ;;      Locals:         0       0       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0
  7169 ;;      Totals:         0       0       0       0       0       0       0       0
  7170 ;;Total ram usage:        0 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_EUSART_Initialize
  7176 ;;		_EUSART_Receive_ISR
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180     0456                     _EUSART_DefaultOverrunErrorHandler:	
  7181                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7182                           
  7183     0456                     i1l3404:	
  7184                           ;incstack = 0
  7185                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7186                           
  7187                           
  7188                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7189     0456  0023               	movlb	3	; select bank3
  7190     0457  121D               	bcf	29,4	;volatile
  7191                           
  7192                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7193     0458  161D               	bsf	29,4	;volatile
  7194     0459                     i1l565:
  7195     0459  0008               	return
  7196     045A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7197                           
  7198                           	psect	text61
  7199     0475                     __ptext61:	
  7200 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7201 ;; Defined at:
  7202 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		None
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7216 ;;      Params:         0       0       0       0       0       0       0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0
  7218 ;;      Temps:          0       0       0       0       0       0       0       0
  7219 ;;      Totals:         0       0       0       0       0       0       0       0
  7220 ;;Total ram usage:        0 bytes
  7221 ;; Hardware stack levels used: 1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_EUSART_Initialize
  7226 ;;		_EUSART_Receive_ISR
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230     0475                     _EUSART_DefaultFramingErrorHandler:	
  7231                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7232                           
  7233     0475                     i1l562:	
  7234                           ;incstack = 0
  7235                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7236                           
  7237     0475  0008               	return
  7238     0476                     __end_of_EUSART_DefaultFramingErrorHandler:
  7239                           
  7240                           	psect	text62
  7241     045A                     __ptext62:	
  7242 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7243 ;; Defined at:
  7244 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7258 ;;      Params:         0       0       0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 1
  7265 ;; This function calls:
  7266 ;;		_EUSART_RxDataHandler
  7267 ;; This function is called by:
  7268 ;;		_EUSART_Initialize
  7269 ;;		_EUSART_Receive_ISR
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273     045A                     _EUSART_DefaultErrorHandler:	
  7274                           ;psect for function _EUSART_DefaultErrorHandler
  7275                           
  7276     045A                     i1l3406:	
  7277                           ;incstack = 0
  7278                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7279                           
  7280                           
  7281                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7282     045A  3182  22D0  3184   	fcall	_EUSART_RxDataHandler
  7283     045D                     i1l568:
  7284     045D  0008               	return
  7285     045E                     __end_of_EUSART_DefaultErrorHandler:
  7286                           
  7287                           	psect	text63
  7288     02D0                     __ptext63:	
  7289 ;; *************** function _EUSART_RxDataHandler *****************
  7290 ;; Defined at:
  7291 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7305 ;;      Params:         0       0       0       0       0       0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0
  7307 ;;      Temps:          1       0       0       0       0       0       0       0
  7308 ;;      Totals:         1       0       0       0       0       0       0       0
  7309 ;;Total ram usage:        1 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_EUSART_Receive_ISR
  7315 ;;		_EUSART_DefaultErrorHandler
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319     02D0                     _EUSART_RxDataHandler:	
  7320                           ;psect for function _EUSART_RxDataHandler
  7321                           
  7322     02D0                     i1l3274:	
  7323                           ;incstack = 0
  7324                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7325                           
  7326                           
  7327                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7328     02D0  0873               	movf	_eusartRxHead,w
  7329     02D1  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7330     02D2  0086               	movwf	6
  7331     02D3  0187               	clrf	7
  7332     02D4  0023               	movlb	3	; select bank3
  7333     02D5  0819               	movf	25,w	;volatile
  7334     02D6  0081               	movwf	1
  7335     02D7                     i1l3276:
  7336     02D7  3001               	movlw	1
  7337     02D8  00F7               	movwf	??_EUSART_RxDataHandler
  7338     02D9  0877               	movf	??_EUSART_RxDataHandler,w
  7339     02DA  07F3               	addwf	_eusartRxHead,f	;volatile
  7340     02DB                     i1l3278:
  7341                           
  7342                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7343     02DB  3010               	movlw	16
  7344     02DC  0273               	subwf	_eusartRxHead,w	;volatile
  7345     02DD  1C03               	skipc
  7346     02DE  2AE0               	goto	u99_21
  7347     02DF  2AE1               	goto	u99_20
  7348     02E0                     u99_21:
  7349     02E0  2AE2               	goto	i1l3282
  7350     02E1                     u99_20:
  7351     02E1                     i1l3280:
  7352                           
  7353                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7354     02E1  01F3               	clrf	_eusartRxHead	;volatile
  7355     02E2                     i1l3282:
  7356                           
  7357                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7358     02E2  3001               	movlw	1
  7359     02E3  00F7               	movwf	??_EUSART_RxDataHandler
  7360     02E4  0877               	movf	??_EUSART_RxDataHandler,w
  7361     02E5  07F1               	addwf	_eusartRxCount,f	;volatile
  7362     02E6                     i1l559:
  7363     02E6  0008               	return
  7364     02E7                     __end_of_EUSART_RxDataHandler:
  7365     007E                     btemp	set	126	;btemp
  7366     007E                     int$flags	set	126
  7367     007E                     wtemp0	set	126
  7368     20D4                     
  7369                           	psect	idloc
  7370                           
  7371                           ;Config register IDLOC0 @ 0x8000
  7372                           ;	unspecified, using default values
  7373     8000                     	org	32768
  7374     8000  3FFF               	dw	16383
  7375                           
  7376                           ;Config register IDLOC1 @ 0x8001
  7377                           ;	unspecified, using default values
  7378     8001                     	org	32769
  7379     8001  3FFF               	dw	16383
  7380                           
  7381                           ;Config register IDLOC2 @ 0x8002
  7382                           ;	unspecified, using default values
  7383     8002                     	org	32770
  7384     8002  3FFF               	dw	16383
  7385                           
  7386                           ;Config register IDLOC3 @ 0x8003
  7387                           ;	unspecified, using default values
  7388     8003                     	org	32771
  7389     8003  3FFF               	dw	16383
  7390                           
  7391                           	psect	config
  7392                           
  7393                           ;Config register CONFIG1 @ 0x8007
  7394                           ;	Oscillator Selection
  7395                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7396                           ;	Watchdog Timer Enable
  7397                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  7398                           ;	Power-up Timer Enable
  7399                           ;	PWRTE = OFF, PWRT disabled
  7400                           ;	MCLR Pin Function Select
  7401                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7402                           ;	Flash Program Memory Code Protection
  7403                           ;	CP = OFF, Program memory code protection is disabled
  7404                           ;	Data Memory Code Protection
  7405                           ;	CPD = OFF, Data memory code protection is disabled
  7406                           ;	Brown-out Reset Enable
  7407                           ;	BOREN = ON, Brown-out Reset enabled
  7408                           ;	Clock Out Enable
  7409                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7410                           ;	Internal/External Switchover
  7411                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7412                           ;	Fail-Safe Clock Monitor Enable
  7413                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7414     8007                     	org	32775
  7415     8007  3FEC               	dw	16364
  7416                           
  7417                           ;Config register CONFIG2 @ 0x8008
  7418                           ;	Flash Memory Self-Write Protection
  7419                           ;	WRT = OFF, Write protection off
  7420                           ;	Voltage Regulator Capacitor Enable
  7421                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
  7422                           ;	PLL Enable
  7423                           ;	PLLEN = OFF, 4x PLL disabled
  7424                           ;	Stack Overflow/Underflow Reset Enable
  7425                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7426                           ;	Brown-out Reset Voltage Selection
  7427                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7428                           ;	Low-Voltage Programming Enable
  7429                           ;	LVP = ON, Low-voltage programming enabled
  7430     8008                     	org	32776
  7431     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         104
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2      75
    BANK1            80      0      48
    BANK2            52      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2415$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$2420	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$2415	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_MasterFsm$2414	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S202$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), NULL(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1403$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    S1191$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1191$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1191$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), NULL(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S202$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S202$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S202$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     816
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     605
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   88970
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (7) _rtcc_handle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   88730
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88730
                                              3 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22166
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22188
                                              1 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22166
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22166
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4362
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4362
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4718
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4362
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4362
                                              0 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          3     0      3    2979
                                              4 COMMON     3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     4     1      3    1117
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        3     1      2    1352
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1       0
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      4B       6       93.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      30       8       60.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               34      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      87      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 11 10:00:50 2023

                ?_EUSART_SetRxInterruptHandler 0069                         ??_I2C_DO_SEND_ADR_READ 0077  
                      ??_I2C_DO_SEND_ADR_WRITE 0078                                    _SSPSTATbits 0214  
                                           l31 029D                                             l62 03DC  
                                           l65 0449                                             l59 02F9  
                        ??_I2C_DO_SEND_RESTART 0077                                            l174 03BC  
                                          l514 0167                                            l571 0407  
                                          l580 03F5                                            l574 0401  
                                          l583 03FB                                            l577 040D  
                                          l598 03E7                                            l599 03E7  
                                          l971 02B6                                _timer1ReloadVal 0041  
                       ??_EUSART_RxDataHandler 0077                 ?_EUSART_SetFramingErrorHandler 0069  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 007E  
                                 _I2C_DO_RESET 0414                                           l1004 03EF  
                      ??_rd2RegCompleteHandler 007E                                           l4200 0298  
                                         l4210 03B8                                           l4202 0299  
                                         l4212 03BB                                           l4204 029B  
                                         l4220 0446                                           l4206 03B4  
                                         l4214 03D6                                           l4230 02A5  
                                         l4222 029E                                           l4240 0129  
                                         l4208 03B6                                           l4216 03D9  
                                         l4232 02A9                                           l4224 02A0  
                                         l4170 03F6                                           l4250 0142  
                                         l4242 0131                                           l4218 03DA  
                                         l4234 02AB                                           l4226 02A2  
                                         l4172 03F0                                           l4260 0160  
                                         l4252 0144                                           l4244 013B  
                                         l4180 03EA                                           l4236 02B3  
                                         l4228 02A4                                           l4174 0402  
                                         l4262 0162                                           l4254 0145  
                                         l4246 013E                                           l4238 0127  
                                         l4190 028D                                           l4182 0282  
                                         l4176 03FC                                           l4264 0163  
                                         l4256 014D                                           l4248 0140  
                                         l4192 028F                                           l4184 0286  
                                         l4280 02E7                                           l4178 0408  
                                         l4266 0164                                           l4258 0155  
                                         l4194 0291                                           l4186 0288  
                                         l4268 0165                                           l4196 0294  
                                         l4188 028B                                           l4198 0296  
                                         l4376 03E4                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _LATE 0110                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 007E  
                                         _main 03E4                       ?_I2C_CallbackReturnReset 0069  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0055  
                   ??_TMR1_SetInterruptHandler 006B                                  _I2C_DO_RX_ACK 0423  
                __end_of_OSCILLATOR_Initialize 03DD                                          ?_main 0077  
                                        _T1CON 0018                                          i1l201 0360  
                                        i1l204 03A9                                          i1l301 0431  
                                        i1l310 0422                                          i1l231 01F5  
                                        i1l224 0241                                          i1l240 03D5  
                                        i1l304 042C                                          i1l313 041D  
                                        i1l330 0473                                          i1l234 0440  
                                        i1l322 021D                                          i1l243 00C7  
                                        i1l307 0427                                          i1l227 044D  
                                        i1l260 0126                                          i1l316 0418  
                                        i1l333 0471                                          i1l237 03C5  
                                        i1l246 00E3                                          i1l430 002A  
                                        i1l271 03E3                                          i1l352 0445  
                                        i1l432 003A                                          i1l361 0469  
                                        i1l433 0053                                          i1l370 0413  
                                        i1l434 0045                                          i1l355 046F  
                                        i1l259 0100                                          i1l428 001A  
                                        i1l349 0466                                          i1l373 0451  
                                        i1l277 01CD                                          i1l367 046C  
                                        i1l295 043B                                          i1l439 0053  
                                        i1l376 0455                                          i1l545 027F  
                                        i1l562 0475                                          i1l298 0436  
                                        i1l394 0460                                          i1l555 01A0  
                                        i1l548 0281                                          i1l565 0459  
                                        i1l397 0463                                          i1l559 02E6  
                                        i1l568 045D                                          i1l930 032F  
                                        i1l933 031D                                          i1l942 02CF  
                                        i1l936 030B                                          i1l939 0341  
                                        i1l985 0352                                          i1l997 036D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                            ??_I2C_DO_TX_EMPTY 0077                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          u86_20 0359  
                                        u86_21 0358                                          _TXREG 019A  
                                        u99_20 02E1                                          u99_21 02E0  
                                        _TXSTA 019E                                          _SW_Ad 0047  
                             __end_of_TMR1_ISR 036E                              __end_of_I2C_DO_RX 0127  
                            __end_of_I2C_DO_TX 00E4                                 _WDT_Initialize 0446  
                      _I2C_MasterEnableRestart 046D                        __end_of_TMR1_Initialize 02B7  
                                        pclath 000A                               ?_I2C_SetCallback 0077  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0077                                _TMR1_WriteTimer 0342  
                           ??_I2C_DO_SEND_STOP 0077                                __initialization 0057  
                                 __end_of_main 03EA                      ?_I2C_DO_SEND_RESTART_READ 0077  
                               ?_I2C_DO_RX_ACK 0077                    ?_INTERRUPT_InterruptManager 0077  
               ??_EUSART_SetRxInterruptHandler 006B                                         ??_main 006B  
                            ?_I2C_MasterIsNack 0077                              ?_I2C_MasterSetIrq 0077  
                           ??_I2C_MasterIsNack 0077                         __end_of_WDT_Initialize 044A  
                           ??_I2C_MasterSetIrq 0077      __end_of_EUSART_DefaultFramingErrorHandler 0476  
          ??_EUSART_DefaultFramingErrorHandler 0077             ?_EUSART_DefaultFramingErrorHandler 0077  
            _EUSART_DefaultFramingErrorHandler 0475                     _EUSART_OverrunErrorHandler 0055  
              __end_of_I2C_CallbackReturnReset 0472                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 007B                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1001 037A  
                                       i1l1021 03B3                                         i1l1007 0474  
                      TMR1_WriteTimer@timerVal 0077                                         i1l3100 03C4  
                                       i1l3104 03CE                                         i1l4010 0225  
                                       i1l3106 03D0                                         i1l3210 0426  
                                       i1l4012 0234                                         i1l4020 0470  
                                       i1l3108 03D4                                         i1l4100 00F1  
                                       i1l4014 039F                                         i1l4110 0102  
                                       i1l4102 00FB                                         i1l3214 0414  
                                       i1l4008 021F                                         i1l4016 0472  
                                       i1l4024 031E                                         i1l4032 030C  
                                       i1l4040 02FA                                         i1l4120 010A  
                                       i1l4104 00FE                                         i1l3208 0423  
                                       i1l3216 0416                                         i1l4050 0339  
                                       i1l4026 0327                                         i1l4034 0315  
                                       i1l4042 0303                                         i1l3090 043E  
                                       i1l4114 0106                                         i1l3218 0417  
                                       i1l3404 0456                                         i1l4052 0340  
                                       i1l4028 032E                                         i1l4036 031C  
                                       i1l4044 030A                                         i1l4132 01A8  
                                       i1l3092 043F                                         i1l3180 03E2  
                                       i1l3406 045A                                         i1l4134 01AB  
                                       i1l4126 01A1                                         i1l4070 009E  
                                       i1l4062 0091                                         i1l4150 01F6  
                                       i1l3086 045E                                         i1l3342 03AA  
                                       i1l3280 02E1                                         u130_20 0196  
                                       i1l4048 0330                                         i1l4056 02B7  
                                       i1l4128 01A4                                         i1l4144 01B1  
                                       i1l3088 043C                                         i1l3096 03BD  
                                       i1l4080 00A6                                         i1l3176 03DD  
                                       i1l4152 01F8                                         i1l4320 044A  
                                       u122_20 0347                                         u130_21 0195  
                                       u122_21 0346                                         i1l3282 02E2  
                                       i1l3274 02D0                                         i1l4058 02CE  
                                       i1l4138 01AD                                         i1l3098 03BF  
                                       i1l4082 00C9                                         i1l4074 00A2  
                                       i1l4066 009A                                         i1l3178 03DF  
                                       i1l4154 01FB                                         i1l3530 0342  
                                       i1l3610 0363                                         i1l3276 02D7  
                                       i1l3620 0279                                         i1l3612 0262  
                                       i1l4084 00D5                                         i1l4164 0203  
                                       i1l3532 0347                                         i1l3540 034E  
                                       i1l3278 02DB                                         i1l3630 0177  
                                       i1l3622 027A                                         i1l3614 0268  
                                       i1l4086 00E0                                         i1l4158 01FF  
                                       i1l4270 01CE                                         i1l3542 0350  
                                       i1l3534 0348                                         i1l3640 0196  
                                       i1l3632 017D                                         i1l3624 0168  
                                       i1l3616 026F                                         i1l4088 00E2  
                                       i1l4096 00E4                                         i1l4272 01D1  
                                       u123_20 0375                                         i1l3544 036E  
                                       i1l3536 034A                                         i1l3608 0361  
                                       i1l4360 001F                                         i1l4352 0006  
                                       u123_21 0374                                         i1l3642 019D  
                                       i1l3634 0182                                         i1l3626 016D  
                                       i1l3618 0273                                         i1l2922 046D  
                                       i1l2914 0354                                         i1l4098 00EC  
                                       i1l4274 01D6                                         i1l3546 0375  
                                       i1l3538 034C                                         i1l4362 0024  
                                       i1l4354 000A                                         i1l3636 0187  
                                       i1l3628 0172                                         i1l2924 046A  
                                       i1l2916 0359                                         i1l2932 0442  
                                       i1l2940 0432                                         i1l4276 01DE  
                                       i1l4372 004A                                         i1l4364 002F  
                                       i1l4356 000F                                         i1l3638 018D  
                                       i1l2918 035F                                         i1l2926 0452  
                                       i1l2934 0437                                         i1l2942 0435  
                                       i1l4542 0215                                         i1l4278 01E1  
                                       i1l4374 004F                                         i1l4366 0034  
                                       i1l4358 0014                                         i1l2952 0464  
                                       i1l2928 040E                                         i1l4544 0118  
                                       i1l2936 043A                                         i1l2960 041C  
                                       i1l4368 003F                                         i1l2970 0467  
                                       i1l4546 00B9                                         i1l2946 0428  
                                       i1l2956 044E                                         i1l4548 01BF  
                                       i1l2972 042D                                         i1l2948 042B  
                                       i1l2964 041E                                         i1l2974 0430  
                                       i1l2966 0421                                         i1l2958 0419  
                                       i1l2978 0461                                         u126_20 0268  
                                       u126_21 0267                                         u127_20 0279  
                                       u127_21 0278                                         u128_20 0172  
                                       u128_21 0171                                         u129_20 0182  
                                       u129_21 0181                                         u164_20 0225  
                                       u180_20 0044                                         u172_20 000A  
                                       u164_21 0224                                         u180_21 0043  
                                       u172_21 0009                                         u165_20 0099  
                                       u181_20 004A                                         u173_20 000F  
                                       u165_21 0098                                         u181_21 0049  
                                       u173_21 000E                                         u166_20 00E0  
                                       u182_20 004F                                         u174_20 0014  
                                       u166_21 00DF                                         u182_21 004E  
                                       u174_21 0013                                         u167_20 00FB  
                                       u175_20 001F                                         u167_21 00FA  
                                       u175_21 001E                                         u168_20 01D6  
                                       u176_20 0024                                         u168_21 01D5  
                                       u176_21 0023                                         u169_20 01DE  
                                       u177_20 002F                                         u169_21 01DD  
                                       u177_21 002E                                         u178_20 0034  
                                       u178_21 0033                                         _MB_UID 0045  
                                       u179_20 003F                                         u179_21 003E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 0464           __end_of_TMR1_DefaultInterruptHandler 0475  
                 _TMR1_DefaultInterruptHandler 0474                                  _I2C_MasterFsm 01CE  
                                _I2C_MasterIsr 044A                            _EUSART_Transmit_ISR 0262  
                            I2C_SetCallback@cb 0077                                  _I2C_SetBuffer 0353  
                          _I2C_DO_ADDRESS_NACK 01F6                           ?_I2C_MasterGetRxData 0077  
                                 ?_rtcc_handle 0077                                ?_WDT_Initialize 0077  
                    ??_I2C_MasterEnableRestart 0077       TMR1_SetInterruptHandler@InterruptHandler 0069  
                      __end_of_TMR1_WriteTimer 0353                           ?_EUSART_Transmit_ISR 0077  
                        __end_of_TMR1_CallBack 037B                               ?_TMR1_Initialize 0077  
                            _SYSTEM_Initialize 02E7                        __end_of__initialization 008D  
                           ?_SYSTEM_Initialize 0077                           ?_I2C_DO_ADDRESS_NACK 0077  
         __end_of_EUSART_SetTxInterruptHandler 03F6                   _EUSART_SetTxInterruptHandler 03F0  
                      _rdBlkRegCompleteHandler 02B7                                 __pcstackCOMMON 0077  
                               ?_I2C_MasterFsm 0077                                 ?_I2C_MasterIsr 0077  
                              ??_I2C_DO_RX_ACK 0077                                   __pidataBANK0 037B  
                       _I2C_CallbackReturnStop 0472                            ??_SYSTEM_Initialize 006B  
                                    ?_TMR1_ISR 0077                  ?_TMR1_DefaultInterruptHandler 0077  
                         __end_of_fctsupported 03CE                                 ?_I2C_SetBuffer 0077  
                __end_of_I2C_DO_SEND_ADR_WRITE 03D6                     ?_I2C_DO_SEND_RESTART_WRITE 0077  
                        ??_I2C_MasterGetRxData 0077                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 00A0                     __end_of_I2C_MasterClearIrq 0461  
              ??_EUSART_SetOverrunErrorHandler 006B                      __end_of_SYSTEM_Initialize 02FA  
                        ??_EUSART_Transmit_ISR 0077                              _I2C_MasterSendAck 044E  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                ??_I2C_DO_IDLE 0077                                  ??_I2C_DO_RCEN 0077  
                __end_of_rd2RegCompleteHandler 031E                   __end_of_I2C_MasterSendTxData 0446  
                           ?_I2C_MasterSendAck 0077                              _I2C_MasterStartRx 0467  
                        ??_I2C_DO_ADDRESS_NACK 0077                  __end_of_wr2RegCompleteHandler 0342  
                          _I2C_DO_RX_NACK_STOP 041E                          _rd1RegCompleteHandler 031E  
                           ?_I2C_MasterStartRx 0077                     __end_of_I2C_MasterSendNack 0456  
                        _wr1RegCompleteHandler 02FA                                     __pmaintext 03E4  
                          ??_I2C_MasterSendAck 0077                       rd1RegCompleteHandler@ptr 0069  
                ?_EUSART_SetTxInterruptHandler 0069               _EUSART_TxDefaultInterruptHandler 005B  
                  __end_of_I2C_DO_SEND_RESTART 0432                                _I2C_DO_TX_EMPTY 01A1  
                          I2C_SetBuffer@buffer 0079                                     ??_TMR1_ISR 0079  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0077  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0078  
               I2C_SetDataCompleteCallback@ptr 007D                       ??_I2C_DO_RX_NACK_RESTART 0077  
            __end_of_I2C_DO_SEND_RESTART_WRITE 0437                           ?_I2C_DO_RX_NACK_STOP 0077  
                                _eusartRxCount 0071                      __end_of_I2C_MasterSendAck 0452  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 006B  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                               ?_TMR1_WriteTimer 0077  
                    __end_of_I2C_MasterStartRx 046A                   ?_I2C_SetDataCompleteCallback 007B  
                                    _I2C_DO_RX 00E4                                      _I2C_DO_TX 0091  
             __end_of_I2C_DO_SEND_RESTART_READ 043C                      ??_rdBlkRegCompleteHandler 007E  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 0441                            __end_of_I2C_DO_RCEN 03E4  
                              ??_I2C_SetBuffer 0079                        I2C_SetBuffer@bufferSize 0077  
                                  _Temperature 004F                                 _I2C_MasterStop 046A  
                               _I2C_Initialize 03B4                                        __ptext1 02E7  
                                      __ptext2 0446                                        __ptext3 029E  
                                      __ptext4 03EA                                        __ptext5 0282  
                                      __ptext6 03D6                                        __ptext7 03B4  
                                      __ptext8 0127                                        __ptext9 03F0  
                        ??_I2C_DO_RX_NACK_STOP 0077                 ??_TMR1_DefaultInterruptHandler 0077  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 03D6  
                           I2C_SetCallback@idx 007A                       ??_PIN_MANAGER_Initialize 0069  
                I2C_CallbackReturnReset@funPtr 0069                      ?_TMR1_SetInterruptHandler 0069  
                           I2C_SetCallback@ptr 0079                       wr1RegCompleteHandler@ptr 0069  
                   _SHT30_CMD_MEASURE_H_Enable 0067                                        clrloop0 0394  
                   _SHT30_CMD_MEASURE_L_Enable 0063                           end_of_initialization 008D  
                   _SHT30_CMD_MEASURE_M_Enable 0065                                     ?_I2C_DO_RX 0077  
                                   ?_I2C_DO_TX 0077          __end_of_EUSART_SetOverrunErrorHandler 0402  
                _EUSART_SetOverrunErrorHandler 03FC                                        init_ram 0387  
                       ?_rd1RegCompleteHandler 0069                                        initloop 0388  
                      __end_of_I2C_DO_TX_EMPTY 01CE                              _EUSART_Initialize 0127  
                  _SHT30_CMD_MEASURE_H_Disable 0061                         ?_wr1RegCompleteHandler 0069  
                           ?_EUSART_Initialize 0077                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 046D                         __end_of_I2C_Initialize 03BD  
                  _SHT30_CMD_MEASURE_L_Disable 005D                    _SHT30_CMD_MEASURE_M_Disable 005F  
                          ??_EUSART_Initialize 006B                               ??_WDT_Initialize 0069  
               ??_EUSART_SetTxInterruptHandler 006B                __end_of_rdBlkRegCompleteHandler 02D0  
                         _I2C_MasterSendTxData 0441                                    _f_Indicator 0046  
                                 _fctsupported 03C6                      __end_of_EUSART_Initialize 0168  
                                  _I2C_DO_IDLE 043C                                    _I2C_DO_RCEN 03DD  
                   rdBlkRegCompleteHandler@ptr 0069                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0069                       _I2C_DO_SEND_RESTART_READ 0437  
                 I2C_CallbackReturnStop@funPtr 0069                                ?_I2C_MasterStop 0077  
                              ?_I2C_Initialize 0077                        _I2C_CallbackReturnReset 0470  
           __end_of_EUSART_DefaultErrorHandler 045E                     _EUSART_DefaultErrorHandler 045A  
                        ?_I2C_MasterSendTxData 0077                         ?_OSCILLATOR_Initialize 0077  
                  ??_I2C_DO_SEND_RESTART_WRITE 0077                            start_initialization 0057  
                                ?_I2C_DO_RESET 0077   EUSART_SetRxInterruptHandler@interruptHandler 0069  
 EUSART_SetTxInterruptHandler@interruptHandler 0069                                    ??_I2C_DO_RX 0077  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 0474  
                       _I2C_DO_RX_NACK_RESTART 0419                               ?_I2C_DO_TX_EMPTY 0077  
                           _I2C_MasterClearIrq 045E                 ?_EUSART_SetOverrunErrorHandler 0069  
                   _EUSART_FramingErrorHandler 0057                         _EUSART_SetErrorHandler 0408  
                          ?_I2C_MasterClearIrq 0077                    __end_of_I2C_MasterGetRxData 0467  
                                  __pdataBANK0 005D                          __end_of_I2C_DO_RX_ACK 0428  
                             _I2C_DO_SEND_STOP 0428                              ??_I2C_SetCallback 007A  
                           _I2C_MasterSendNack 0452                       ?_I2C_MasterEnableRestart 0077  
                            _i2c_fsmStateTable 0242                                    __pbssBIGRAM 20D4  
                  __end_of_EUSART_Transmit_ISR 0282                          _I2C_DO_SEND_ADR_WRITE 03CE  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 0069                                 ??_I2C_DO_RESET 0077  
                          ?_I2C_MasterSendNack 0077                   __end_of_I2C_DO_SEND_ADR_READ 03C6  
                         ??_I2C_MasterClearIrq 0077                    __end_of_I2C_DO_ADDRESS_NACK 021E  
                   __end_of_EUSART_Receive_ISR 01A1                               _I2C_MasterIsNack 040E  
                    _I2C_DO_SEND_RESTART_WRITE 0432               _EUSART_RxDefaultInterruptHandler 0059  
                             _I2C_MasterSetIrq 0461                                      __pnvBANK0 0051  
                        _rd2RegCompleteHandler 030C                   __end_of_EUSART_RxDataHandler 02E7  
                       _PIN_MANAGER_Initialize 0282                          _wr2RegCompleteHandler 0330  
                    ??_I2C_CallbackReturnReset 007E                           ??_I2C_MasterSendNack 0077  
                     rd2RegCompleteHandler@ptr 0069               __end_of_TMR1_SetInterruptHandler 03F0  
                                 _eusartRxHead 0073                                   _eusartTxHead 0076  
                                 _eusartRxTail 0072                         ??_I2C_MasterSendTxData 0077  
                                 _eusartTxTail 0075                      __end_of_i2c_fsmStateTable 0262  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0074  
                                  _device_time 003D                        ??_rd1RegCompleteHandler 007E  
                               _eusartRxBuffer 00B0                        ??_wr1RegCompleteHandler 007E  
                                _TMR1_CallBack 036E                                 _eusartTxBuffer 00C0  
       EUSART_SetErrorHandler@interruptHandler 0069                                       _LATCbits 010E  
                                    clear_ram0 0393                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 006B  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 01F6  
                        __end_of_I2C_MasterIsr 044E                    __end_of_I2C_DO_RX_NACK_STOP 0423  
    __end_of_EUSART_DefaultOverrunErrorHandler 045A            ??_EUSART_DefaultOverrunErrorHandler 0077  
           ?_EUSART_DefaultOverrunErrorHandler 0077              _EUSART_DefaultOverrunErrorHandler 0456  
                                     _TMR1_ISR 0361                __end_of_I2C_MasterEnableRestart 0470  
                        __end_of_I2C_SetBuffer 0361                              ??_TMR1_Initialize 006B  
                       ?_I2C_DO_SEND_ADR_WRITE 0077                       I2C_MasterSendTxData@data 0077  
                                ??_rtcc_handle 0077                       wr2RegCompleteHandler@ptr 0069  
                   ??_I2C_DO_SEND_RESTART_READ 0077                       ?_rdBlkRegCompleteHandler 0069  
                               ?_TMR1_CallBack 0077                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0077                                   ?_I2C_DO_RCEN 0077  
                       ?_rd2RegCompleteHandler 0069                                       _Humidity 004D  
                       ?_wr2RegCompleteHandler 0069                               ??_I2C_MasterStop 0077  
                             ??_I2C_Initialize 0069                           __end_of_I2C_DO_RESET 0419  
                      ??_OSCILLATOR_Initialize 0069                            _EUSART_ErrorHandler 0053  
                         _I2C_DO_SEND_ADR_READ 03BD                    ?_EUSART_DefaultErrorHandler 0077  
                     _TMR1_SetInterruptHandler 03EA                          _TMR1_InterruptHandler 0051  
                         _EUSART_RxDataHandler 02D0                                       __ptext10 03F6  
                                     __ptext11 03FC                                       __ptext20 044A  
                                     __ptext12 0402                                       __ptext21 01CE  
                                     __ptext13 0408                                     _T1GCONbits 0019  
                                     __ptext30 0432                                       __ptext22 045E  
                                     __ptext31 0437                                       __ptext23 01F6  
                                     __ptext15 0361                                       __ptext40 040E  
                                     __ptext32 03DD                                       __ptext24 0414  
                                     __ptext16 0342                                       __ptext41 0441  
                                     __ptext33 00E4                                       __ptext25 0419  
                                     __ptext17 036E                                       __ptext50 0470  
                                     __ptext42 044E                                       __ptext34 0091  
                                     __ptext26 041E                                       __ptext18 0474  
                                     __ptext51 0472                                       __ptext43 0464  
                                     __ptext35 03CE                                       __ptext27 0423  
                                     __ptext19 03AA                                       __ptext60 0456  
                                     __ptext52 0330                                       __ptext44 0452  
                                     __ptext36 03BD                                       __ptext28 0428  
                                     __ptext61 0475                                       __ptext53 039F  
                                     __ptext45 0467                                       __ptext37 043C  
                                     __ptext29 042D                                       __ptext62 045A  
                                     __ptext54 021E                                       __ptext46 02B7  
                                     __ptext38 01A1                                       __ptext63 02D0  
                                     __ptext55 0353                                       __ptext47 02FA  
                                     __ptext39 0461                                       __ptext56 046A  
                                     __ptext48 030C                                       __ptext57 046D  
                                     __ptext49 031E                                       __ptext58 0262  
                                     __ptext59 0168            __end_of_I2C_SetDataCompleteCallback 03AA  
                  _I2C_SetDataCompleteCallback 039F                        ?_I2C_DO_RX_NACK_RESTART 0077  
                          __end_of_rtcc_handle 03B4                       __end_of_I2C_DO_SEND_STOP 042D  
                      ?_EUSART_SetErrorHandler 0069                                _I2C_SetCallback 021E  
                ??_I2C_SetDataCompleteCallback 007E  EUSART_SetOverrunErrorHandler@interruptHandler 0069  
                                  _MB_Register 0049                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0077             __end_of_INTERRUPT_InterruptManager 0055  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0408  
                _EUSART_SetFramingErrorHandler 0402                              ??_TMR1_WriteTimer 0079  
                     __end_of_I2C_MasterIsNack 0414                       __end_of_I2C_MasterSetIrq 0464  
                                   _LED_Statuc 0048                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0077                 __end_of_I2C_DO_RX_NACK_RESTART 041E  
                              ??_TMR1_CallBack 0077                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0077                 __end_of_EUSART_SetErrorHandler 040E  
                          _I2C_DO_SEND_RESTART 042D           __end_of_EUSART_SetRxInterruptHandler 03FC  
                 _EUSART_SetRxInterruptHandler 03F6                             _EUSART_Receive_ISR 0168  
EUSART_SetFramingErrorHandler@interruptHandler 0069                                  __pstringtext1 0242  
                                __pstringtext2 03C6                           ?_I2C_DO_SEND_RESTART 0077  
                          ?_EUSART_Receive_ISR 0077                                    _rtcc_handle 03AA  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                                   _SES_Modbus 20D4                        __end_of_I2C_SetCallback 0242  
               __end_of_PIN_MANAGER_Initialize 029E                  __end_of_rd1RegCompleteHandler 0330  
                         ??_EUSART_Receive_ISR 0078                  __end_of_wr1RegCompleteHandler 030C  
                        _MSSP_InterruptHandler 0043                                _TMR1_Initialize 029E  
