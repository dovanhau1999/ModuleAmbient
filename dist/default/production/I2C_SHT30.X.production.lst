

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Apr 08 15:42:29 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1936 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     0010                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0015                     	;# 
   125     0016                     	;# 
   126     0016                     	;# 
   127     0017                     	;# 
   128     0018                     	;# 
   129     0019                     	;# 
   130     001A                     	;# 
   131     001B                     	;# 
   132     001C                     	;# 
   133     001E                     	;# 
   134     001F                     	;# 
   135     008C                     	;# 
   136     008D                     	;# 
   137     008E                     	;# 
   138     0090                     	;# 
   139     0091                     	;# 
   140     0092                     	;# 
   141     0093                     	;# 
   142     0095                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009E                     	;# 
   153     010C                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     0110                     	;# 
   157     0111                     	;# 
   158     0112                     	;# 
   159     0113                     	;# 
   160     0114                     	;# 
   161     0115                     	;# 
   162     0116                     	;# 
   163     0117                     	;# 
   164     0118                     	;# 
   165     0119                     	;# 
   166     011A                     	;# 
   167     011B                     	;# 
   168     011D                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0191                     	;# 
   172     0191                     	;# 
   173     0192                     	;# 
   174     0193                     	;# 
   175     0193                     	;# 
   176     0193                     	;# 
   177     0194                     	;# 
   178     0195                     	;# 
   179     0196                     	;# 
   180     0199                     	;# 
   181     019A                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019B                     	;# 
   185     019B                     	;# 
   186     019C                     	;# 
   187     019C                     	;# 
   188     019D                     	;# 
   189     019E                     	;# 
   190     019F                     	;# 
   191     020D                     	;# 
   192     0210                     	;# 
   193     0211                     	;# 
   194     0212                     	;# 
   195     0213                     	;# 
   196     0214                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0291                     	;# 
   202     0291                     	;# 
   203     0292                     	;# 
   204     0293                     	;# 
   205     0294                     	;# 
   206     0295                     	;# 
   207     0295                     	;# 
   208     0296                     	;# 
   209     0298                     	;# 
   210     0298                     	;# 
   211     0299                     	;# 
   212     029A                     	;# 
   213     029B                     	;# 
   214     029C                     	;# 
   215     029C                     	;# 
   216     029D                     	;# 
   217     029E                     	;# 
   218     029F                     	;# 
   219     0311                     	;# 
   220     0311                     	;# 
   221     0312                     	;# 
   222     0313                     	;# 
   223     0314                     	;# 
   224     0315                     	;# 
   225     0315                     	;# 
   226     0316                     	;# 
   227     0318                     	;# 
   228     0318                     	;# 
   229     0319                     	;# 
   230     031A                     	;# 
   231     031C                     	;# 
   232     031C                     	;# 
   233     031D                     	;# 
   234     031E                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     0415                     	;# 
   239     0416                     	;# 
   240     0417                     	;# 
   241     041C                     	;# 
   242     041D                     	;# 
   243     041E                     	;# 
   244     0791                     	;# 
   245     0792                     	;# 
   246     0793                     	;# 
   247     0794                     	;# 
   248     0795                     	;# 
   249     0798                     	;# 
   250     0799                     	;# 
   251     07A0                     	;# 
   252     07A1                     	;# 
   253     07A3                     	;# 
   254     07A4                     	;# 
   255     07A6                     	;# 
   256     07A7                     	;# 
   257     07A9                     	;# 
   258     07AA                     	;# 
   259     0FE4                     	;# 
   260     0FE5                     	;# 
   261     0FE6                     	;# 
   262     0FE7                     	;# 
   263     0FE8                     	;# 
   264     0FE9                     	;# 
   265     0FEA                     	;# 
   266     0FEB                     	;# 
   267     0FED                     	;# 
   268     0FEE                     	;# 
   269     0FEF                     	;# 
   270     0000                     	;# 
   271     0001                     	;# 
   272     0002                     	;# 
   273     0003                     	;# 
   274     0004                     	;# 
   275     0005                     	;# 
   276     0006                     	;# 
   277     0007                     	;# 
   278     0008                     	;# 
   279     0009                     	;# 
   280     000A                     	;# 
   281     000B                     	;# 
   282     000C                     	;# 
   283     000D                     	;# 
   284     000E                     	;# 
   285     0010                     	;# 
   286     0011                     	;# 
   287     0012                     	;# 
   288     0013                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     008E                     	;# 
   303     0090                     	;# 
   304     0091                     	;# 
   305     0092                     	;# 
   306     0093                     	;# 
   307     0095                     	;# 
   308     0096                     	;# 
   309     0097                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009A                     	;# 
   313     009B                     	;# 
   314     009B                     	;# 
   315     009C                     	;# 
   316     009D                     	;# 
   317     009E                     	;# 
   318     010C                     	;# 
   319     010D                     	;# 
   320     010E                     	;# 
   321     0110                     	;# 
   322     0111                     	;# 
   323     0112                     	;# 
   324     0113                     	;# 
   325     0114                     	;# 
   326     0115                     	;# 
   327     0116                     	;# 
   328     0117                     	;# 
   329     0118                     	;# 
   330     0119                     	;# 
   331     011A                     	;# 
   332     011B                     	;# 
   333     011D                     	;# 
   334     018C                     	;# 
   335     018D                     	;# 
   336     0191                     	;# 
   337     0191                     	;# 
   338     0192                     	;# 
   339     0193                     	;# 
   340     0193                     	;# 
   341     0193                     	;# 
   342     0194                     	;# 
   343     0195                     	;# 
   344     0196                     	;# 
   345     0199                     	;# 
   346     019A                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019B                     	;# 
   350     019B                     	;# 
   351     019C                     	;# 
   352     019C                     	;# 
   353     019D                     	;# 
   354     019E                     	;# 
   355     019F                     	;# 
   356     020D                     	;# 
   357     0210                     	;# 
   358     0211                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0214                     	;# 
   362     0215                     	;# 
   363     0215                     	;# 
   364     0216                     	;# 
   365     0217                     	;# 
   366     0291                     	;# 
   367     0291                     	;# 
   368     0292                     	;# 
   369     0293                     	;# 
   370     0294                     	;# 
   371     0295                     	;# 
   372     0295                     	;# 
   373     0296                     	;# 
   374     0298                     	;# 
   375     0298                     	;# 
   376     0299                     	;# 
   377     029A                     	;# 
   378     029B                     	;# 
   379     029C                     	;# 
   380     029C                     	;# 
   381     029D                     	;# 
   382     029E                     	;# 
   383     029F                     	;# 
   384     0311                     	;# 
   385     0311                     	;# 
   386     0312                     	;# 
   387     0313                     	;# 
   388     0314                     	;# 
   389     0315                     	;# 
   390     0315                     	;# 
   391     0316                     	;# 
   392     0318                     	;# 
   393     0318                     	;# 
   394     0319                     	;# 
   395     031A                     	;# 
   396     031C                     	;# 
   397     031C                     	;# 
   398     031D                     	;# 
   399     031E                     	;# 
   400     0394                     	;# 
   401     0395                     	;# 
   402     0396                     	;# 
   403     0415                     	;# 
   404     0416                     	;# 
   405     0417                     	;# 
   406     041C                     	;# 
   407     041D                     	;# 
   408     041E                     	;# 
   409     0791                     	;# 
   410     0792                     	;# 
   411     0793                     	;# 
   412     0794                     	;# 
   413     0795                     	;# 
   414     0798                     	;# 
   415     0799                     	;# 
   416     07A0                     	;# 
   417     07A1                     	;# 
   418     07A3                     	;# 
   419     07A4                     	;# 
   420     07A6                     	;# 
   421     07A7                     	;# 
   422     07A9                     	;# 
   423     07AA                     	;# 
   424     0FE4                     	;# 
   425     0FE5                     	;# 
   426     0FE6                     	;# 
   427     0FE7                     	;# 
   428     0FE8                     	;# 
   429     0FE9                     	;# 
   430     0FEA                     	;# 
   431     0FEB                     	;# 
   432     0FED                     	;# 
   433     0FEE                     	;# 
   434     0FEF                     	;# 
   435     0000                     	;# 
   436     0001                     	;# 
   437     0002                     	;# 
   438     0003                     	;# 
   439     0004                     	;# 
   440     0005                     	;# 
   441     0006                     	;# 
   442     0007                     	;# 
   443     0008                     	;# 
   444     0009                     	;# 
   445     000A                     	;# 
   446     000B                     	;# 
   447     000C                     	;# 
   448     000D                     	;# 
   449     000E                     	;# 
   450     0010                     	;# 
   451     0011                     	;# 
   452     0012                     	;# 
   453     0013                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0016                     	;# 
   457     0017                     	;# 
   458     0018                     	;# 
   459     0019                     	;# 
   460     001A                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001E                     	;# 
   464     001F                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     008E                     	;# 
   468     0090                     	;# 
   469     0091                     	;# 
   470     0092                     	;# 
   471     0093                     	;# 
   472     0095                     	;# 
   473     0096                     	;# 
   474     0097                     	;# 
   475     0098                     	;# 
   476     0099                     	;# 
   477     009A                     	;# 
   478     009B                     	;# 
   479     009B                     	;# 
   480     009C                     	;# 
   481     009D                     	;# 
   482     009E                     	;# 
   483     010C                     	;# 
   484     010D                     	;# 
   485     010E                     	;# 
   486     0110                     	;# 
   487     0111                     	;# 
   488     0112                     	;# 
   489     0113                     	;# 
   490     0114                     	;# 
   491     0115                     	;# 
   492     0116                     	;# 
   493     0117                     	;# 
   494     0118                     	;# 
   495     0119                     	;# 
   496     011A                     	;# 
   497     011B                     	;# 
   498     011D                     	;# 
   499     018C                     	;# 
   500     018D                     	;# 
   501     0191                     	;# 
   502     0191                     	;# 
   503     0192                     	;# 
   504     0193                     	;# 
   505     0193                     	;# 
   506     0193                     	;# 
   507     0194                     	;# 
   508     0195                     	;# 
   509     0196                     	;# 
   510     0199                     	;# 
   511     019A                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019B                     	;# 
   516     019C                     	;# 
   517     019C                     	;# 
   518     019D                     	;# 
   519     019E                     	;# 
   520     019F                     	;# 
   521     020D                     	;# 
   522     0210                     	;# 
   523     0211                     	;# 
   524     0212                     	;# 
   525     0213                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0216                     	;# 
   530     0217                     	;# 
   531     0291                     	;# 
   532     0291                     	;# 
   533     0292                     	;# 
   534     0293                     	;# 
   535     0294                     	;# 
   536     0295                     	;# 
   537     0295                     	;# 
   538     0296                     	;# 
   539     0298                     	;# 
   540     0298                     	;# 
   541     0299                     	;# 
   542     029A                     	;# 
   543     029B                     	;# 
   544     029C                     	;# 
   545     029C                     	;# 
   546     029D                     	;# 
   547     029E                     	;# 
   548     029F                     	;# 
   549     0311                     	;# 
   550     0311                     	;# 
   551     0312                     	;# 
   552     0313                     	;# 
   553     0314                     	;# 
   554     0315                     	;# 
   555     0315                     	;# 
   556     0316                     	;# 
   557     0318                     	;# 
   558     0318                     	;# 
   559     0319                     	;# 
   560     031A                     	;# 
   561     031C                     	;# 
   562     031C                     	;# 
   563     031D                     	;# 
   564     031E                     	;# 
   565     0394                     	;# 
   566     0395                     	;# 
   567     0396                     	;# 
   568     0415                     	;# 
   569     0416                     	;# 
   570     0417                     	;# 
   571     041C                     	;# 
   572     041D                     	;# 
   573     041E                     	;# 
   574     0791                     	;# 
   575     0792                     	;# 
   576     0793                     	;# 
   577     0794                     	;# 
   578     0795                     	;# 
   579     0798                     	;# 
   580     0799                     	;# 
   581     07A0                     	;# 
   582     07A1                     	;# 
   583     07A3                     	;# 
   584     07A4                     	;# 
   585     07A6                     	;# 
   586     07A7                     	;# 
   587     07A9                     	;# 
   588     07AA                     	;# 
   589     0FE4                     	;# 
   590     0FE5                     	;# 
   591     0FE6                     	;# 
   592     0FE7                     	;# 
   593     0FE8                     	;# 
   594     0FE9                     	;# 
   595     0FEA                     	;# 
   596     0FEB                     	;# 
   597     0FED                     	;# 
   598     0FEE                     	;# 
   599     0FEF                     	;# 
   600     0000                     	;# 
   601     0001                     	;# 
   602     0002                     	;# 
   603     0003                     	;# 
   604     0004                     	;# 
   605     0005                     	;# 
   606     0006                     	;# 
   607     0007                     	;# 
   608     0008                     	;# 
   609     0009                     	;# 
   610     000A                     	;# 
   611     000B                     	;# 
   612     000C                     	;# 
   613     000D                     	;# 
   614     000E                     	;# 
   615     0010                     	;# 
   616     0011                     	;# 
   617     0012                     	;# 
   618     0013                     	;# 
   619     0015                     	;# 
   620     0016                     	;# 
   621     0016                     	;# 
   622     0017                     	;# 
   623     0018                     	;# 
   624     0019                     	;# 
   625     001A                     	;# 
   626     001B                     	;# 
   627     001C                     	;# 
   628     001E                     	;# 
   629     001F                     	;# 
   630     008C                     	;# 
   631     008D                     	;# 
   632     008E                     	;# 
   633     0090                     	;# 
   634     0091                     	;# 
   635     0092                     	;# 
   636     0093                     	;# 
   637     0095                     	;# 
   638     0096                     	;# 
   639     0097                     	;# 
   640     0098                     	;# 
   641     0099                     	;# 
   642     009A                     	;# 
   643     009B                     	;# 
   644     009B                     	;# 
   645     009C                     	;# 
   646     009D                     	;# 
   647     009E                     	;# 
   648     010C                     	;# 
   649     010D                     	;# 
   650     010E                     	;# 
   651     0110                     	;# 
   652     0111                     	;# 
   653     0112                     	;# 
   654     0113                     	;# 
   655     0114                     	;# 
   656     0115                     	;# 
   657     0116                     	;# 
   658     0117                     	;# 
   659     0118                     	;# 
   660     0119                     	;# 
   661     011A                     	;# 
   662     011B                     	;# 
   663     011D                     	;# 
   664     018C                     	;# 
   665     018D                     	;# 
   666     0191                     	;# 
   667     0191                     	;# 
   668     0192                     	;# 
   669     0193                     	;# 
   670     0193                     	;# 
   671     0193                     	;# 
   672     0194                     	;# 
   673     0195                     	;# 
   674     0196                     	;# 
   675     0199                     	;# 
   676     019A                     	;# 
   677     019B                     	;# 
   678     019B                     	;# 
   679     019B                     	;# 
   680     019B                     	;# 
   681     019C                     	;# 
   682     019C                     	;# 
   683     019D                     	;# 
   684     019E                     	;# 
   685     019F                     	;# 
   686     020D                     	;# 
   687     0210                     	;# 
   688     0211                     	;# 
   689     0212                     	;# 
   690     0213                     	;# 
   691     0214                     	;# 
   692     0215                     	;# 
   693     0215                     	;# 
   694     0216                     	;# 
   695     0217                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0295                     	;# 
   702     0295                     	;# 
   703     0296                     	;# 
   704     0298                     	;# 
   705     0298                     	;# 
   706     0299                     	;# 
   707     029A                     	;# 
   708     029B                     	;# 
   709     029C                     	;# 
   710     029C                     	;# 
   711     029D                     	;# 
   712     029E                     	;# 
   713     029F                     	;# 
   714     0311                     	;# 
   715     0311                     	;# 
   716     0312                     	;# 
   717     0313                     	;# 
   718     0314                     	;# 
   719     0315                     	;# 
   720     0315                     	;# 
   721     0316                     	;# 
   722     0318                     	;# 
   723     0318                     	;# 
   724     0319                     	;# 
   725     031A                     	;# 
   726     031C                     	;# 
   727     031C                     	;# 
   728     031D                     	;# 
   729     031E                     	;# 
   730     0394                     	;# 
   731     0395                     	;# 
   732     0396                     	;# 
   733     0415                     	;# 
   734     0416                     	;# 
   735     0417                     	;# 
   736     041C                     	;# 
   737     041D                     	;# 
   738     041E                     	;# 
   739     0791                     	;# 
   740     0792                     	;# 
   741     0793                     	;# 
   742     0794                     	;# 
   743     0795                     	;# 
   744     0798                     	;# 
   745     0799                     	;# 
   746     07A0                     	;# 
   747     07A1                     	;# 
   748     07A3                     	;# 
   749     07A4                     	;# 
   750     07A6                     	;# 
   751     07A7                     	;# 
   752     07A9                     	;# 
   753     07AA                     	;# 
   754     0FE4                     	;# 
   755     0FE5                     	;# 
   756     0FE6                     	;# 
   757     0FE7                     	;# 
   758     0FE8                     	;# 
   759     0FE9                     	;# 
   760     0FEA                     	;# 
   761     0FEB                     	;# 
   762     0FED                     	;# 
   763     0FEE                     	;# 
   764     0FEF                     	;# 
   765     0000                     	;# 
   766     0001                     	;# 
   767     0002                     	;# 
   768     0003                     	;# 
   769     0004                     	;# 
   770     0005                     	;# 
   771     0006                     	;# 
   772     0007                     	;# 
   773     0008                     	;# 
   774     0009                     	;# 
   775     000A                     	;# 
   776     000B                     	;# 
   777     000C                     	;# 
   778     000D                     	;# 
   779     000E                     	;# 
   780     0010                     	;# 
   781     0011                     	;# 
   782     0012                     	;# 
   783     0013                     	;# 
   784     0015                     	;# 
   785     0016                     	;# 
   786     0016                     	;# 
   787     0017                     	;# 
   788     0018                     	;# 
   789     0019                     	;# 
   790     001A                     	;# 
   791     001B                     	;# 
   792     001C                     	;# 
   793     001E                     	;# 
   794     001F                     	;# 
   795     008C                     	;# 
   796     008D                     	;# 
   797     008E                     	;# 
   798     0090                     	;# 
   799     0091                     	;# 
   800     0092                     	;# 
   801     0093                     	;# 
   802     0095                     	;# 
   803     0096                     	;# 
   804     0097                     	;# 
   805     0098                     	;# 
   806     0099                     	;# 
   807     009A                     	;# 
   808     009B                     	;# 
   809     009B                     	;# 
   810     009C                     	;# 
   811     009D                     	;# 
   812     009E                     	;# 
   813     010C                     	;# 
   814     010D                     	;# 
   815     010E                     	;# 
   816     0110                     	;# 
   817     0111                     	;# 
   818     0112                     	;# 
   819     0113                     	;# 
   820     0114                     	;# 
   821     0115                     	;# 
   822     0116                     	;# 
   823     0117                     	;# 
   824     0118                     	;# 
   825     0119                     	;# 
   826     011A                     	;# 
   827     011B                     	;# 
   828     011D                     	;# 
   829     018C                     	;# 
   830     018D                     	;# 
   831     0191                     	;# 
   832     0191                     	;# 
   833     0192                     	;# 
   834     0193                     	;# 
   835     0193                     	;# 
   836     0193                     	;# 
   837     0194                     	;# 
   838     0195                     	;# 
   839     0196                     	;# 
   840     0199                     	;# 
   841     019A                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019B                     	;# 
   845     019B                     	;# 
   846     019C                     	;# 
   847     019C                     	;# 
   848     019D                     	;# 
   849     019E                     	;# 
   850     019F                     	;# 
   851     020D                     	;# 
   852     0210                     	;# 
   853     0211                     	;# 
   854     0212                     	;# 
   855     0213                     	;# 
   856     0214                     	;# 
   857     0215                     	;# 
   858     0215                     	;# 
   859     0216                     	;# 
   860     0217                     	;# 
   861     0291                     	;# 
   862     0291                     	;# 
   863     0292                     	;# 
   864     0293                     	;# 
   865     0294                     	;# 
   866     0295                     	;# 
   867     0295                     	;# 
   868     0296                     	;# 
   869     0298                     	;# 
   870     0298                     	;# 
   871     0299                     	;# 
   872     029A                     	;# 
   873     029B                     	;# 
   874     029C                     	;# 
   875     029C                     	;# 
   876     029D                     	;# 
   877     029E                     	;# 
   878     029F                     	;# 
   879     0311                     	;# 
   880     0311                     	;# 
   881     0312                     	;# 
   882     0313                     	;# 
   883     0314                     	;# 
   884     0315                     	;# 
   885     0315                     	;# 
   886     0316                     	;# 
   887     0318                     	;# 
   888     0318                     	;# 
   889     0319                     	;# 
   890     031A                     	;# 
   891     031C                     	;# 
   892     031C                     	;# 
   893     031D                     	;# 
   894     031E                     	;# 
   895     0394                     	;# 
   896     0395                     	;# 
   897     0396                     	;# 
   898     0415                     	;# 
   899     0416                     	;# 
   900     0417                     	;# 
   901     041C                     	;# 
   902     041D                     	;# 
   903     041E                     	;# 
   904     0791                     	;# 
   905     0792                     	;# 
   906     0793                     	;# 
   907     0794                     	;# 
   908     0795                     	;# 
   909     0798                     	;# 
   910     0799                     	;# 
   911     07A0                     	;# 
   912     07A1                     	;# 
   913     07A3                     	;# 
   914     07A4                     	;# 
   915     07A6                     	;# 
   916     07A7                     	;# 
   917     07A9                     	;# 
   918     07AA                     	;# 
   919     0FE4                     	;# 
   920     0FE5                     	;# 
   921     0FE6                     	;# 
   922     0FE7                     	;# 
   923     0FE8                     	;# 
   924     0FE9                     	;# 
   925     0FEA                     	;# 
   926     0FEB                     	;# 
   927     0FED                     	;# 
   928     0FEE                     	;# 
   929     0FEF                     	;# 
   930     0000                     	;# 
   931     0001                     	;# 
   932     0002                     	;# 
   933     0003                     	;# 
   934     0004                     	;# 
   935     0005                     	;# 
   936     0006                     	;# 
   937     0007                     	;# 
   938     0008                     	;# 
   939     0009                     	;# 
   940     000A                     	;# 
   941     000B                     	;# 
   942     000C                     	;# 
   943     000D                     	;# 
   944     000E                     	;# 
   945     0010                     	;# 
   946     0011                     	;# 
   947     0012                     	;# 
   948     0013                     	;# 
   949     0015                     	;# 
   950     0016                     	;# 
   951     0016                     	;# 
   952     0017                     	;# 
   953     0018                     	;# 
   954     0019                     	;# 
   955     001A                     	;# 
   956     001B                     	;# 
   957     001C                     	;# 
   958     001E                     	;# 
   959     001F                     	;# 
   960     008C                     	;# 
   961     008D                     	;# 
   962     008E                     	;# 
   963     0090                     	;# 
   964     0091                     	;# 
   965     0092                     	;# 
   966     0093                     	;# 
   967     0095                     	;# 
   968     0096                     	;# 
   969     0097                     	;# 
   970     0098                     	;# 
   971     0099                     	;# 
   972     009A                     	;# 
   973     009B                     	;# 
   974     009B                     	;# 
   975     009C                     	;# 
   976     009D                     	;# 
   977     009E                     	;# 
   978     010C                     	;# 
   979     010D                     	;# 
   980     010E                     	;# 
   981     0110                     	;# 
   982     0111                     	;# 
   983     0112                     	;# 
   984     0113                     	;# 
   985     0114                     	;# 
   986     0115                     	;# 
   987     0116                     	;# 
   988     0117                     	;# 
   989     0118                     	;# 
   990     0119                     	;# 
   991     011A                     	;# 
   992     011B                     	;# 
   993     011D                     	;# 
   994     018C                     	;# 
   995     018D                     	;# 
   996     0191                     	;# 
   997     0191                     	;# 
   998     0192                     	;# 
   999     0193                     	;# 
  1000     0193                     	;# 
  1001     0193                     	;# 
  1002     0194                     	;# 
  1003     0195                     	;# 
  1004     0196                     	;# 
  1005     0199                     	;# 
  1006     019A                     	;# 
  1007     019B                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019B                     	;# 
  1011     019C                     	;# 
  1012     019C                     	;# 
  1013     019D                     	;# 
  1014     019E                     	;# 
  1015     019F                     	;# 
  1016     020D                     	;# 
  1017     0210                     	;# 
  1018     0211                     	;# 
  1019     0212                     	;# 
  1020     0213                     	;# 
  1021     0214                     	;# 
  1022     0215                     	;# 
  1023     0215                     	;# 
  1024     0216                     	;# 
  1025     0217                     	;# 
  1026     0291                     	;# 
  1027     0291                     	;# 
  1028     0292                     	;# 
  1029     0293                     	;# 
  1030     0294                     	;# 
  1031     0295                     	;# 
  1032     0295                     	;# 
  1033     0296                     	;# 
  1034     0298                     	;# 
  1035     0298                     	;# 
  1036     0299                     	;# 
  1037     029A                     	;# 
  1038     029B                     	;# 
  1039     029C                     	;# 
  1040     029C                     	;# 
  1041     029D                     	;# 
  1042     029E                     	;# 
  1043     029F                     	;# 
  1044     0311                     	;# 
  1045     0311                     	;# 
  1046     0312                     	;# 
  1047     0313                     	;# 
  1048     0314                     	;# 
  1049     0315                     	;# 
  1050     0315                     	;# 
  1051     0316                     	;# 
  1052     0318                     	;# 
  1053     0318                     	;# 
  1054     0319                     	;# 
  1055     031A                     	;# 
  1056     031C                     	;# 
  1057     031C                     	;# 
  1058     031D                     	;# 
  1059     031E                     	;# 
  1060     0394                     	;# 
  1061     0395                     	;# 
  1062     0396                     	;# 
  1063     0415                     	;# 
  1064     0416                     	;# 
  1065     0417                     	;# 
  1066     041C                     	;# 
  1067     041D                     	;# 
  1068     041E                     	;# 
  1069     0791                     	;# 
  1070     0792                     	;# 
  1071     0793                     	;# 
  1072     0794                     	;# 
  1073     0795                     	;# 
  1074     0798                     	;# 
  1075     0799                     	;# 
  1076     07A0                     	;# 
  1077     07A1                     	;# 
  1078     07A3                     	;# 
  1079     07A4                     	;# 
  1080     07A6                     	;# 
  1081     07A7                     	;# 
  1082     07A9                     	;# 
  1083     07AA                     	;# 
  1084     0FE4                     	;# 
  1085     0FE5                     	;# 
  1086     0FE6                     	;# 
  1087     0FE7                     	;# 
  1088     0FE8                     	;# 
  1089     0FE9                     	;# 
  1090     0FEA                     	;# 
  1091     0FEB                     	;# 
  1092     0FED                     	;# 
  1093     0FEE                     	;# 
  1094     0FEF                     	;# 
  1095     0000                     	;# 
  1096     0001                     	;# 
  1097     0002                     	;# 
  1098     0003                     	;# 
  1099     0004                     	;# 
  1100     0005                     	;# 
  1101     0006                     	;# 
  1102     0007                     	;# 
  1103     0008                     	;# 
  1104     0009                     	;# 
  1105     000A                     	;# 
  1106     000B                     	;# 
  1107     000C                     	;# 
  1108     000D                     	;# 
  1109     000E                     	;# 
  1110     0010                     	;# 
  1111     0011                     	;# 
  1112     0012                     	;# 
  1113     0013                     	;# 
  1114     0015                     	;# 
  1115     0016                     	;# 
  1116     0016                     	;# 
  1117     0017                     	;# 
  1118     0018                     	;# 
  1119     0019                     	;# 
  1120     001A                     	;# 
  1121     001B                     	;# 
  1122     001C                     	;# 
  1123     001E                     	;# 
  1124     001F                     	;# 
  1125     008C                     	;# 
  1126     008D                     	;# 
  1127     008E                     	;# 
  1128     0090                     	;# 
  1129     0091                     	;# 
  1130     0092                     	;# 
  1131     0093                     	;# 
  1132     0095                     	;# 
  1133     0096                     	;# 
  1134     0097                     	;# 
  1135     0098                     	;# 
  1136     0099                     	;# 
  1137     009A                     	;# 
  1138     009B                     	;# 
  1139     009B                     	;# 
  1140     009C                     	;# 
  1141     009D                     	;# 
  1142     009E                     	;# 
  1143     010C                     	;# 
  1144     010D                     	;# 
  1145     010E                     	;# 
  1146     0110                     	;# 
  1147     0111                     	;# 
  1148     0112                     	;# 
  1149     0113                     	;# 
  1150     0114                     	;# 
  1151     0115                     	;# 
  1152     0116                     	;# 
  1153     0117                     	;# 
  1154     0118                     	;# 
  1155     0119                     	;# 
  1156     011A                     	;# 
  1157     011B                     	;# 
  1158     011D                     	;# 
  1159     018C                     	;# 
  1160     018D                     	;# 
  1161     0191                     	;# 
  1162     0191                     	;# 
  1163     0192                     	;# 
  1164     0193                     	;# 
  1165     0193                     	;# 
  1166     0193                     	;# 
  1167     0194                     	;# 
  1168     0195                     	;# 
  1169     0196                     	;# 
  1170     0199                     	;# 
  1171     019A                     	;# 
  1172     019B                     	;# 
  1173     019B                     	;# 
  1174     019B                     	;# 
  1175     019B                     	;# 
  1176     019C                     	;# 
  1177     019C                     	;# 
  1178     019D                     	;# 
  1179     019E                     	;# 
  1180     019F                     	;# 
  1181     020D                     	;# 
  1182     0210                     	;# 
  1183     0211                     	;# 
  1184     0212                     	;# 
  1185     0213                     	;# 
  1186     0214                     	;# 
  1187     0215                     	;# 
  1188     0215                     	;# 
  1189     0216                     	;# 
  1190     0217                     	;# 
  1191     0291                     	;# 
  1192     0291                     	;# 
  1193     0292                     	;# 
  1194     0293                     	;# 
  1195     0294                     	;# 
  1196     0295                     	;# 
  1197     0295                     	;# 
  1198     0296                     	;# 
  1199     0298                     	;# 
  1200     0298                     	;# 
  1201     0299                     	;# 
  1202     029A                     	;# 
  1203     029B                     	;# 
  1204     029C                     	;# 
  1205     029C                     	;# 
  1206     029D                     	;# 
  1207     029E                     	;# 
  1208     029F                     	;# 
  1209     0311                     	;# 
  1210     0311                     	;# 
  1211     0312                     	;# 
  1212     0313                     	;# 
  1213     0314                     	;# 
  1214     0315                     	;# 
  1215     0315                     	;# 
  1216     0316                     	;# 
  1217     0318                     	;# 
  1218     0318                     	;# 
  1219     0319                     	;# 
  1220     031A                     	;# 
  1221     031C                     	;# 
  1222     031C                     	;# 
  1223     031D                     	;# 
  1224     031E                     	;# 
  1225     0394                     	;# 
  1226     0395                     	;# 
  1227     0396                     	;# 
  1228     0415                     	;# 
  1229     0416                     	;# 
  1230     0417                     	;# 
  1231     041C                     	;# 
  1232     041D                     	;# 
  1233     041E                     	;# 
  1234     0791                     	;# 
  1235     0792                     	;# 
  1236     0793                     	;# 
  1237     0794                     	;# 
  1238     0795                     	;# 
  1239     0798                     	;# 
  1240     0799                     	;# 
  1241     07A0                     	;# 
  1242     07A1                     	;# 
  1243     07A3                     	;# 
  1244     07A4                     	;# 
  1245     07A6                     	;# 
  1246     07A7                     	;# 
  1247     07A9                     	;# 
  1248     07AA                     	;# 
  1249     0FE4                     	;# 
  1250     0FE5                     	;# 
  1251     0FE6                     	;# 
  1252     0FE7                     	;# 
  1253     0FE8                     	;# 
  1254     0FE9                     	;# 
  1255     0FEA                     	;# 
  1256     0FEB                     	;# 
  1257     0FED                     	;# 
  1258     0FEE                     	;# 
  1259     0FEF                     	;# 
  1260     0000                     	;# 
  1261     0001                     	;# 
  1262     0002                     	;# 
  1263     0003                     	;# 
  1264     0004                     	;# 
  1265     0005                     	;# 
  1266     0006                     	;# 
  1267     0007                     	;# 
  1268     0008                     	;# 
  1269     0009                     	;# 
  1270     000A                     	;# 
  1271     000B                     	;# 
  1272     000C                     	;# 
  1273     000D                     	;# 
  1274     000E                     	;# 
  1275     0010                     	;# 
  1276     0011                     	;# 
  1277     0012                     	;# 
  1278     0013                     	;# 
  1279     0015                     	;# 
  1280     0016                     	;# 
  1281     0016                     	;# 
  1282     0017                     	;# 
  1283     0018                     	;# 
  1284     0019                     	;# 
  1285     001A                     	;# 
  1286     001B                     	;# 
  1287     001C                     	;# 
  1288     001E                     	;# 
  1289     001F                     	;# 
  1290     008C                     	;# 
  1291     008D                     	;# 
  1292     008E                     	;# 
  1293     0090                     	;# 
  1294     0091                     	;# 
  1295     0092                     	;# 
  1296     0093                     	;# 
  1297     0095                     	;# 
  1298     0096                     	;# 
  1299     0097                     	;# 
  1300     0098                     	;# 
  1301     0099                     	;# 
  1302     009A                     	;# 
  1303     009B                     	;# 
  1304     009B                     	;# 
  1305     009C                     	;# 
  1306     009D                     	;# 
  1307     009E                     	;# 
  1308     010C                     	;# 
  1309     010D                     	;# 
  1310     010E                     	;# 
  1311     0110                     	;# 
  1312     0111                     	;# 
  1313     0112                     	;# 
  1314     0113                     	;# 
  1315     0114                     	;# 
  1316     0115                     	;# 
  1317     0116                     	;# 
  1318     0117                     	;# 
  1319     0118                     	;# 
  1320     0119                     	;# 
  1321     011A                     	;# 
  1322     011B                     	;# 
  1323     011D                     	;# 
  1324     018C                     	;# 
  1325     018D                     	;# 
  1326     0191                     	;# 
  1327     0191                     	;# 
  1328     0192                     	;# 
  1329     0193                     	;# 
  1330     0193                     	;# 
  1331     0193                     	;# 
  1332     0194                     	;# 
  1333     0195                     	;# 
  1334     0196                     	;# 
  1335     0199                     	;# 
  1336     019A                     	;# 
  1337     019B                     	;# 
  1338     019B                     	;# 
  1339     019B                     	;# 
  1340     019B                     	;# 
  1341     019C                     	;# 
  1342     019C                     	;# 
  1343     019D                     	;# 
  1344     019E                     	;# 
  1345     019F                     	;# 
  1346     020D                     	;# 
  1347     0210                     	;# 
  1348     0211                     	;# 
  1349     0212                     	;# 
  1350     0213                     	;# 
  1351     0214                     	;# 
  1352     0215                     	;# 
  1353     0215                     	;# 
  1354     0216                     	;# 
  1355     0217                     	;# 
  1356     0291                     	;# 
  1357     0291                     	;# 
  1358     0292                     	;# 
  1359     0293                     	;# 
  1360     0294                     	;# 
  1361     0295                     	;# 
  1362     0295                     	;# 
  1363     0296                     	;# 
  1364     0298                     	;# 
  1365     0298                     	;# 
  1366     0299                     	;# 
  1367     029A                     	;# 
  1368     029B                     	;# 
  1369     029C                     	;# 
  1370     029C                     	;# 
  1371     029D                     	;# 
  1372     029E                     	;# 
  1373     029F                     	;# 
  1374     0311                     	;# 
  1375     0311                     	;# 
  1376     0312                     	;# 
  1377     0313                     	;# 
  1378     0314                     	;# 
  1379     0315                     	;# 
  1380     0315                     	;# 
  1381     0316                     	;# 
  1382     0318                     	;# 
  1383     0318                     	;# 
  1384     0319                     	;# 
  1385     031A                     	;# 
  1386     031C                     	;# 
  1387     031C                     	;# 
  1388     031D                     	;# 
  1389     031E                     	;# 
  1390     0394                     	;# 
  1391     0395                     	;# 
  1392     0396                     	;# 
  1393     0415                     	;# 
  1394     0416                     	;# 
  1395     0417                     	;# 
  1396     041C                     	;# 
  1397     041D                     	;# 
  1398     041E                     	;# 
  1399     0791                     	;# 
  1400     0792                     	;# 
  1401     0793                     	;# 
  1402     0794                     	;# 
  1403     0795                     	;# 
  1404     0798                     	;# 
  1405     0799                     	;# 
  1406     07A0                     	;# 
  1407     07A1                     	;# 
  1408     07A3                     	;# 
  1409     07A4                     	;# 
  1410     07A6                     	;# 
  1411     07A7                     	;# 
  1412     07A9                     	;# 
  1413     07AA                     	;# 
  1414     0FE4                     	;# 
  1415     0FE5                     	;# 
  1416     0FE6                     	;# 
  1417     0FE7                     	;# 
  1418     0FE8                     	;# 
  1419     0FE9                     	;# 
  1420     0FEA                     	;# 
  1421     0FEB                     	;# 
  1422     0FED                     	;# 
  1423     0FEE                     	;# 
  1424     0FEF                     	;# 
  1425                           
  1426                           	psect	idataBANK0
  1427     0288                     __pidataBANK0:
  1428                           
  1429                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  1430     0288  3416               	retlw	22
  1431     0289  3424               	retlw	36
  1432                           
  1433                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  1434     028A  340B               	retlw	11
  1435     028B  3424               	retlw	36
  1436                           
  1437                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  1438     028C  3400               	retlw	0
  1439     028D  3424               	retlw	36
  1440                           
  1441                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  1442     028E  3410               	retlw	16
  1443     028F  342C               	retlw	44
  1444                           
  1445                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  1446     0290  340D               	retlw	13
  1447     0291  342C               	retlw	44
  1448                           
  1449                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  1450     0292  3406               	retlw	6
  1451     0293  342C               	retlw	44
  1452                           
  1453                           	psect	stringtext1
  1454     0205                     __pstringtext1:
  1455     0205                     _i2c_fsmStateTable:
  1456     0205  341D               	retlw	low _I2C_DO_IDLE
  1457     0206  3403               	retlw	high _I2C_DO_IDLE
  1458     0207  34A6               	retlw	low _I2C_DO_SEND_ADR_READ
  1459     0208  3402               	retlw	high _I2C_DO_SEND_ADR_READ
  1460     0209  34AF               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1461     020A  3402               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1462     020B  3469               	retlw	low _I2C_DO_TX
  1463     020C  3400               	retlw	high _I2C_DO_TX
  1464     020D  34C1               	retlw	low _I2C_DO_RX
  1465     020E  3400               	retlw	high _I2C_DO_RX
  1466     020F  34BE               	retlw	low _I2C_DO_RCEN
  1467     0210  3402               	retlw	high _I2C_DO_RCEN
  1468     0211  3484               	retlw	low _I2C_DO_TX_EMPTY
  1469     0212  3401               	retlw	high _I2C_DO_TX_EMPTY
  1470     0213  3418               	retlw	low _I2C_DO_SEND_RESTART_READ
  1471     0214  3403               	retlw	high _I2C_DO_SEND_RESTART_READ
  1472     0215  3413               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1473     0216  3403               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1474     0217  340E               	retlw	low _I2C_DO_SEND_RESTART
  1475     0218  3403               	retlw	high _I2C_DO_SEND_RESTART
  1476     0219  3409               	retlw	low _I2C_DO_SEND_STOP
  1477     021A  3403               	retlw	high _I2C_DO_SEND_STOP
  1478     021B  3404               	retlw	low _I2C_DO_RX_ACK
  1479     021C  3403               	retlw	high _I2C_DO_RX_ACK
  1480     021D  34FF               	retlw	low _I2C_DO_RX_NACK_STOP
  1481     021E  3402               	retlw	high _I2C_DO_RX_NACK_STOP
  1482     021F  34FA               	retlw	low _I2C_DO_RX_NACK_RESTART
  1483     0220  3402               	retlw	high _I2C_DO_RX_NACK_RESTART
  1484     0221  34F5               	retlw	low _I2C_DO_RESET
  1485     0222  3402               	retlw	high _I2C_DO_RESET
  1486     0223  34B3               	retlw	low _I2C_DO_ADDRESS_NACK
  1487     0224  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1488     0225                     __end_of_i2c_fsmStateTable:
  1489                           
  1490                           	psect	nvBANK0
  1491     006E                     __pnvBANK0:
  1492     006E                     _EUSART_TxDefaultInterruptHandler:
  1493     006E                     	ds	2
  1494                           
  1495                           	psect	nvBANK1
  1496     00A0                     __pnvBANK1:
  1497     00A0                     _EUSART_ErrorHandler:
  1498     00A0                     	ds	2
  1499     00A2                     _EUSART_OverrunErrorHandler:
  1500     00A2                     	ds	2
  1501     00A4                     _EUSART_FramingErrorHandler:
  1502     00A4                     	ds	2
  1503     00A6                     _EUSART_RxDefaultInterruptHandler:
  1504     00A6                     	ds	2
  1505     000B                     _INTCONbits	set	11
  1506     0011                     _PIR1bits	set	17
  1507     0012                     _PIR2bits	set	18
  1508     0092                     _PIE2bits	set	146
  1509     0091                     _PIE1bits	set	145
  1510     0097                     _WDTCON	set	151
  1511     0098                     _OSCTUNE	set	152
  1512     0099                     _OSCCON	set	153
  1513     0095                     _OPTION_REGbits	set	149
  1514     008E                     _TRISC	set	142
  1515     008D                     _TRISB	set	141
  1516     008C                     _TRISA	set	140
  1517     0090                     _TRISE	set	144
  1518     0116                     _BORCON	set	278
  1519     011D                     _APFCON	set	285
  1520     010E                     _LATC	set	270
  1521     010D                     _LATB	set	269
  1522     010C                     _LATA	set	268
  1523     0110                     _LATE	set	272
  1524     0199                     _RCREG	set	409
  1525     019D                     _RCSTAbits	set	413
  1526     019A                     _TXREG	set	410
  1527     019E                     _TXSTAbits	set	414
  1528     019C                     _SPBRGH	set	412
  1529     019B                     _SPBRGL	set	411
  1530     019E                     _TXSTA	set	414
  1531     019D                     _RCSTA	set	413
  1532     019F                     _BAUDCON	set	415
  1533     018C                     _ANSELA	set	396
  1534     018D                     _ANSELB	set	397
  1535     0214                     _SSPSTATbits	set	532
  1536     0216                     _SSPCON2bits	set	534
  1537     0211                     _SSPBUF	set	529
  1538     0215                     _SSPCON1bits	set	533
  1539     0212                     _SSPADD	set	530
  1540     0216                     _SSPCON2	set	534
  1541     0215                     _SSPCON1	set	533
  1542     0214                     _SSPSTAT	set	532
  1543     020D                     _WPUB	set	525
  1544     0210                     _WPUE	set	528
  1545                           
  1546                           	psect	cinit
  1547     004A                     start_initialization:	
  1548                           ; #config settings
  1549                           
  1550     004A                     __initialization:
  1551                           
  1552                           ; Initialize objects allocated to BANK0
  1553     004A  3088               	movlw	low __pidataBANK0
  1554     004B  0084               	movwf	4
  1555     004C  3082               	movlw	(high __pidataBANK0)| (0+128)
  1556     004D  0085               	movwf	5
  1557     004E  3062               	movlw	low __pdataBANK0
  1558     004F  0086               	movwf	6
  1559     0050  3000               	movlw	high __pdataBANK0
  1560     0051  0087               	movwf	7
  1561     0052  300C               	movlw	12
  1562     0053  3182  22C5  3180   	fcall	init_ram
  1563                           
  1564                           ; Clear objects allocated to COMMON
  1565     0056  01F0               	clrf	__pbssCOMMON& (0+127)
  1566     0057  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1567     0058  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1568     0059  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1569     005A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1570     005B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1571     005C  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  1572                           
  1573                           ; Clear objects allocated to BANK0
  1574     005D  3020               	movlw	low __pbssBANK0
  1575     005E  0084               	movwf	4
  1576     005F  3000               	movlw	high __pbssBANK0
  1577     0060  0085               	movwf	5
  1578     0061  3042               	movlw	66
  1579     0062  3182  22CB  3180   	fcall	clear_ram0
  1580     0065                     end_of_initialization:	
  1581                           ;End of C runtime variable initialization code
  1582                           
  1583     0065                     __end_of__initialization:
  1584     0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1585     0066  0020               	movlb	0
  1586     0067  3182  2AD1         	ljmp	_main	;jump to C main() function
  1587                           
  1588                           	psect	bssCOMMON
  1589     0070                     __pbssCOMMON:
  1590     0070                     _eusartRxLastError:
  1591     0070                     	ds	1
  1592     0071                     _eusartRxCount:
  1593     0071                     	ds	1
  1594     0072                     _eusartRxTail:
  1595     0072                     	ds	1
  1596     0073                     _eusartRxHead:
  1597     0073                     	ds	1
  1598     0074                     _eusartTxBufferRemaining:
  1599     0074                     	ds	1
  1600     0075                     _eusartTxTail:
  1601     0075                     	ds	1
  1602     0076                     _eusartTxHead:
  1603     0076                     	ds	1
  1604                           
  1605                           	psect	bssBANK0
  1606     0020                     __pbssBANK0:
  1607     0020                     _I2C_Status:
  1608     0020                     	ds	36
  1609     0044                     _eusartRxStatusBuffer:
  1610     0044                     	ds	8
  1611     004C                     _eusartRxBuffer:
  1612     004C                     	ds	8
  1613     0054                     _eusartTxBuffer:
  1614     0054                     	ds	8
  1615     005C                     _MSSP_InterruptHandler:
  1616     005C                     	ds	2
  1617     005E                     _Humidity:
  1618     005E                     	ds	2
  1619     0060                     _Temperature:
  1620     0060                     	ds	2
  1621                           
  1622                           	psect	dataBANK0
  1623     0062                     __pdataBANK0:
  1624     0062                     _SHT30_CMD_MEASURE_L_Disable:
  1625     0062                     	ds	2
  1626     0064                     _SHT30_CMD_MEASURE_M_Disable:
  1627     0064                     	ds	2
  1628     0066                     _SHT30_CMD_MEASURE_H_Disable:
  1629     0066                     	ds	2
  1630     0068                     _SHT30_CMD_MEASURE_L_Enable:
  1631     0068                     	ds	2
  1632     006A                     _SHT30_CMD_MEASURE_M_Enable:
  1633     006A                     	ds	2
  1634     006C                     _SHT30_CMD_MEASURE_H_Enable:
  1635     006C                     	ds	2
  1636                           
  1637                           	psect	inittext
  1638     02C5                     init_ram:
  1639     02C5  00FE               	movwf	btemp
  1640     02C6                     initloop:
  1641     02C6  0012               	moviw fsr0++
  1642     02C7  001E               	movwi fsr1++
  1643     02C8  0BFE               	decfsz	btemp,f
  1644     02C9  2AC6               	goto	initloop
  1645     02CA  3400               	retlw	0
  1646                           
  1647                           	psect	clrtext
  1648     02CB                     clear_ram0:	
  1649                           ;	Called with FSR0 containing the base address, and
  1650                           ;	WREG with the size to clear
  1651                           
  1652     02CB  0064               	clrwdt	;clear the watchdog before getting into this loop
  1653     02CC                     clrloop0:
  1654     02CC  0180               	clrf	0	;clear RAM location pointed to by FSR
  1655     02CD  3101               	addfsr 0,1
  1656     02CE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1657     02CF  2ACC               	goto	clrloop0	;have we reached the end yet?
  1658     02D0  3400               	retlw	0	;all done for this memory range, return
  1659                           
  1660                           	psect	cstackBANK1
  1661     00A8                     __pcstackBANK1:
  1662     00A8                     ?_EUSART_SetRxInterruptHandler:
  1663     00A8                     ?_EUSART_SetTxInterruptHandler:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     00A8                     ?_EUSART_SetFramingErrorHandler:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     00A8                     ?_EUSART_SetOverrunErrorHandler:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     00A8                     ?_EUSART_SetErrorHandler:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     00A8                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     00A8                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1679                           ; 2 bytes @ 0x0
  1680                           
  1681     00A8                     EUSART_SetErrorHandler@interruptHandler:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684     00A8                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1685                           ; 2 bytes @ 0x0
  1686                           
  1687     00A8                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1688                           ; 2 bytes @ 0x0
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x0
  1692     00A8                     	ds	2
  1693                           
  1694                           	psect	cstackCOMMON
  1695     0077                     __pcstackCOMMON:
  1696     0077                     ?_I2C_Initialize:
  1697     0077                     ?_OSCILLATOR_Initialize:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0077                     ?_WDT_Initialize:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0077                     ?_EUSART_Initialize:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0077                     ?_I2C_DO_IDLE:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     0077                     ??_I2C_DO_IDLE:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     0077                     ?_I2C_DO_SEND_ADR_READ:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0077                     ??_I2C_DO_SEND_ADR_READ:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     0077                     ?_I2C_DO_SEND_ADR_WRITE:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     0077                     ?_I2C_DO_TX:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     0077                     ?_I2C_DO_RX:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0077                     ??_I2C_DO_RX:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0077                     ?_I2C_DO_RCEN:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0077                     ??_I2C_DO_RCEN:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     0077                     ?_I2C_DO_TX_EMPTY:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     0077                     ??_I2C_DO_TX_EMPTY:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     0077                     ?_I2C_DO_SEND_RESTART_READ:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     0077                     ??_I2C_DO_SEND_RESTART_READ:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     0077                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751     0077                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754     0077                     ?_I2C_DO_SEND_RESTART:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757     0077                     ??_I2C_DO_SEND_RESTART:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760     0077                     ?_I2C_DO_SEND_STOP:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763     0077                     ??_I2C_DO_SEND_STOP:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766     0077                     ?_I2C_DO_RX_ACK:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769     0077                     ??_I2C_DO_RX_ACK:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772     0077                     ?_I2C_DO_RX_NACK_STOP:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0077                     ??_I2C_DO_RX_NACK_STOP:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0077                     ?_I2C_DO_RX_NACK_RESTART:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0077                     ??_I2C_DO_RX_NACK_RESTART:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0077                     ?_I2C_DO_RESET:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0077                     ??_I2C_DO_RESET:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790     0077                     ?_I2C_DO_ADDRESS_NACK:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793     0077                     ??_I2C_DO_ADDRESS_NACK:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796     0077                     ?_I2C_CallbackReturnStop:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799     0077                     ?_I2C_CallbackReturnReset:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0077                     ?_I2C_MasterIsr:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0077                     ?_I2C_MasterClearIrq:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0077                     ??_I2C_MasterClearIrq:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0077                     ?_I2C_MasterFsm:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0077                     ?_I2C_MasterIsNack:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0077                     ??_I2C_MasterIsNack:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0077                     ?_I2C_MasterSendTxData:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0077                     ??_I2C_MasterSendTxData:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0077                     ?_I2C_MasterGetRxData:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0077                     ??_I2C_MasterGetRxData:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0077                     ?_I2C_MasterSendAck:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0077                     ??_I2C_MasterSendAck:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0077                     ?_I2C_MasterStartRx:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0077                     ??_I2C_MasterStartRx:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0077                     ?_I2C_MasterSetIrq:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0077                     ??_I2C_MasterSetIrq:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0077                     ?_I2C_MasterEnableRestart:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0077                     ??_I2C_MasterEnableRestart:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0077                     ?_I2C_MasterStop:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0077                     ??_I2C_MasterStop:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0077                     ?_I2C_MasterSendNack:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0077                     ??_I2C_MasterSendNack:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0077                     ?_EUSART_Receive_ISR:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0077                     ?_EUSART_Transmit_ISR:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0077                     ??_EUSART_Transmit_ISR:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0077                     ?_EUSART_DefaultFramingErrorHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0077                     ??_EUSART_DefaultFramingErrorHandler:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0077                     ?_EUSART_DefaultOverrunErrorHandler:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0077                     ??_EUSART_DefaultOverrunErrorHandler:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0077                     ?_EUSART_DefaultErrorHandler:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0077                     ?_EUSART_RxDataHandler:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0077                     ??_EUSART_RxDataHandler:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0077                     ?_PIN_MANAGER_Initialize:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0077                     ?_SYSTEM_Initialize:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0077                     ?_INTERRUPT_InterruptManager:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0077                     ?_main:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0077                     I2C_MasterSendTxData@data:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0077                     I2C_CallbackReturnStop@funPtr:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0077                     I2C_CallbackReturnReset@funPtr:	
  1917                           ; 2 bytes @ 0x0
  1918                           
  1919                           
  1920                           ; 2 bytes @ 0x0
  1921     0077                     	ds	1
  1922     0078                     ??_I2C_DO_SEND_ADR_WRITE:
  1923     0078                     ??_I2C_DO_TX:	
  1924                           ; 1 bytes @ 0x1
  1925                           
  1926     0078                     ??_EUSART_Receive_ISR:	
  1927                           ; 1 bytes @ 0x1
  1928                           
  1929     0078                     ??_EUSART_DefaultErrorHandler:	
  1930                           ; 1 bytes @ 0x1
  1931                           
  1932                           
  1933                           ; 1 bytes @ 0x1
  1934     0078                     	ds	1
  1935     0079                     ??_I2C_CallbackReturnStop:
  1936     0079                     ??_I2C_CallbackReturnReset:	
  1937                           ; 1 bytes @ 0x2
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x2
  1941     0079                     	ds	1
  1942     007A                     ??_I2C_MasterFsm:
  1943                           
  1944                           ; 1 bytes @ 0x3
  1945     007A                     	ds	2
  1946     007C                     ??_I2C_MasterIsr:
  1947     007C                     ??_INTERRUPT_InterruptManager:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950                           
  1951                           	psect	cstackBANK0
  1952     0000                     __pcstackBANK0:	
  1953                           ; 1 bytes @ 0x5
  1954                           
  1955     0000                     ??_I2C_Initialize:
  1956     0000                     ??_OSCILLATOR_Initialize:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     0000                     ??_WDT_Initialize:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     0000                     ??_EUSART_Initialize:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0000                     ??_EUSART_SetRxInterruptHandler:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0000                     ??_EUSART_SetTxInterruptHandler:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0000                     ??_EUSART_SetFramingErrorHandler:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0000                     ??_EUSART_SetOverrunErrorHandler:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0000                     ??_EUSART_SetErrorHandler:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0000                     ??_PIN_MANAGER_Initialize:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0000                     ??_SYSTEM_Initialize:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0000                     ??_main:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989                           
  1990                           	psect	maintext
  1991     02D1                     __pmaintext:	
  1992                           ; 1 bytes @ 0x0
  1993 ;;
  1994 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1995 ;;
  1996 ;; *************** function _main *****************
  1997 ;; Defined at:
  1998 ;;		line 49 in file "main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : B1F/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2012 ;;      Params:         0       0       0       0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels required when called: 9
  2018 ;; This function calls:
  2019 ;;		_SYSTEM_Initialize
  2020 ;; This function is called by:
  2021 ;;		Startup code after reset
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     02D1                     _main:	
  2026                           ;psect for function _main
  2027                           
  2028     02D1                     l2883:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;main.c: 52:     SYSTEM_Initialize();
  2034     02D1  3182  2278  3182   	fcall	_SYSTEM_Initialize
  2035     02D4                     l586:	
  2036                           ;main.c: 69:     while (1)
  2037                           
  2038     02D4                     l587:	
  2039                           ;main.c: 70:     {;main.c: 72:     }
  2040                           
  2041     02D4  2AD4               	goto	l586
  2042     02D5  3180  2848         	ljmp	start
  2043     02D7                     __end_of_main:
  2044                           
  2045                           	psect	text1
  2046     0278                     __ptext1:	
  2047 ;; *************** function _SYSTEM_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2063 ;;      Params:         0       0       0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 8
  2070 ;; This function calls:
  2071 ;;		_EUSART_Initialize
  2072 ;;		_I2C_Initialize
  2073 ;;		_OSCILLATOR_Initialize
  2074 ;;		_PIN_MANAGER_Initialize
  2075 ;;		_WDT_Initialize
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     0278                     _SYSTEM_Initialize:	
  2082                           ;psect for function _SYSTEM_Initialize
  2083                           
  2084     0278                     l2881:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  2090     0278  3182  2294  3182   	fcall	_I2C_Initialize
  2091                           
  2092                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2093     027B  3182  2245  3182   	fcall	_PIN_MANAGER_Initialize
  2094                           
  2095                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2096     027E  3182  22B7  3182   	fcall	_OSCILLATOR_Initialize
  2097                           
  2098                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  2099     0281  3183  2327  3182   	fcall	_WDT_Initialize
  2100                           
  2101                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2102     0284  3181  210C  3182   	fcall	_EUSART_Initialize
  2103     0287                     l57:
  2104     0287  0008               	return
  2105     0288                     __end_of_SYSTEM_Initialize:
  2106                           
  2107                           	psect	text2
  2108     0327                     __ptext2:	
  2109 ;; *************** function _WDT_Initialize *****************
  2110 ;; Defined at:
  2111 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2125 ;;      Params:         0       0       0       0       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0
  2128 ;;      Totals:         0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        0 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 6
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_SYSTEM_Initialize
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     0327                     _WDT_Initialize:	
  2140                           ;psect for function _WDT_Initialize
  2141                           
  2142     0327                     l2847:	
  2143                           ;incstack = 0
  2144                           ; Regs used in _WDT_Initialize: [wreg]
  2145                           
  2146                           
  2147                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
  2148     0327  3016               	movlw	22
  2149     0328  0021               	movlb	1	; select bank1
  2150     0329  0097               	movwf	23	;volatile
  2151     032A                     l63:
  2152     032A  0008               	return
  2153     032B                     __end_of_WDT_Initialize:
  2154                           
  2155                           	psect	text3
  2156     0245                     __ptext3:	
  2157 ;; *************** function _PIN_MANAGER_Initialize *****************
  2158 ;; Defined at:
  2159 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2173 ;;      Params:         0       0       0       0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0
  2176 ;;      Totals:         0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 6
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_SYSTEM_Initialize
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187     0245                     _PIN_MANAGER_Initialize:	
  2188                           ;psect for function _PIN_MANAGER_Initialize
  2189                           
  2190     0245                     l2809:	
  2191                           ;incstack = 0
  2192                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2193                           
  2194                           
  2195                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2196     0245  0022               	movlb	2	; select bank2
  2197     0246  0190               	clrf	16	;volatile
  2198                           
  2199                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2200     0247  018C               	clrf	12	;volatile
  2201                           
  2202                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2203     0248  018D               	clrf	13	;volatile
  2204     0249                     l2811:
  2205                           
  2206                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  2207     0249  3040               	movlw	64
  2208     024A  008E               	movwf	14	;volatile
  2209     024B                     l2813:
  2210                           
  2211                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2212     024B  3008               	movlw	8
  2213     024C  0021               	movlb	1	; select bank1
  2214     024D  0090               	movwf	16	;volatile
  2215     024E                     l2815:
  2216                           
  2217                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2218     024E  30FF               	movlw	255
  2219     024F  008C               	movwf	12	;volatile
  2220     0250                     l2817:
  2221                           
  2222                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  2223     0250  30FF               	movlw	255
  2224     0251  008D               	movwf	13	;volatile
  2225     0252                     l2819:
  2226                           
  2227                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  2228     0252  309C               	movlw	156
  2229     0253  008E               	movwf	14	;volatile
  2230     0254                     l2821:
  2231                           
  2232                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  2233     0254  303F               	movlw	63
  2234     0255  0023               	movlb	3	; select bank3
  2235     0256  008D               	movwf	13	;volatile
  2236     0257                     l2823:
  2237                           
  2238                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  2239     0257  3030               	movlw	48
  2240     0258  008C               	movwf	12	;volatile
  2241     0259                     l2825:
  2242                           
  2243                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2244     0259  0024               	movlb	4	; select bank4
  2245     025A  0190               	clrf	16	;volatile
  2246     025B                     l2827:
  2247                           
  2248                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2249     025B  018D               	clrf	13	;volatile
  2250     025C                     l2829:
  2251                           
  2252                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2253     025C  0021               	movlb	1	; select bank1
  2254     025D  1795               	bsf	21,7	;volatile
  2255     025E                     l2831:
  2256                           
  2257                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2258     025E  0022               	movlb	2	; select bank2
  2259     025F  019D               	clrf	29	;volatile
  2260     0260                     l31:
  2261     0260  0008               	return
  2262     0261                     __end_of_PIN_MANAGER_Initialize:
  2263                           
  2264                           	psect	text4
  2265     02B7                     __ptext4:	
  2266 ;; *************** function _OSCILLATOR_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2282 ;;      Params:         0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 6
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_SYSTEM_Initialize
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296     02B7                     _OSCILLATOR_Initialize:	
  2297                           ;psect for function _OSCILLATOR_Initialize
  2298                           
  2299     02B7                     l2841:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2302                           
  2303                           
  2304                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  2305     02B7  3070               	movlw	112
  2306     02B8  0021               	movlb	1	; select bank1
  2307     02B9  0099               	movwf	25	;volatile
  2308     02BA                     l2843:
  2309                           
  2310                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2311     02BA  0198               	clrf	24	;volatile
  2312     02BB                     l2845:
  2313                           
  2314                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2315     02BB  0022               	movlb	2	; select bank2
  2316     02BC  0196               	clrf	22	;volatile
  2317     02BD                     l60:
  2318     02BD  0008               	return
  2319     02BE                     __end_of_OSCILLATOR_Initialize:
  2320                           
  2321                           	psect	text5
  2322     0294                     __ptext5:	
  2323 ;; *************** function _I2C_Initialize *****************
  2324 ;; Defined at:
  2325 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2339 ;;      Params:         0       0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 6
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_SYSTEM_Initialize
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     0294                     _I2C_Initialize:	
  2354                           ;psect for function _I2C_Initialize
  2355                           
  2356     0294                     l2833:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2359                           
  2360                           
  2361                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2362     0294  0024               	movlb	4	; select bank4
  2363     0295  0194               	clrf	20	;volatile
  2364     0296                     l2835:
  2365                           
  2366                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2367     0296  3008               	movlw	8
  2368     0297  0095               	movwf	21	;volatile
  2369     0298                     l2837:
  2370                           
  2371                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2372     0298  0196               	clrf	22	;volatile
  2373                           
  2374                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2375     0299  3013               	movlw	19
  2376     029A  0092               	movwf	18	;volatile
  2377     029B                     l2839:
  2378                           
  2379                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2380     029B  1295               	bcf	21,5	;volatile
  2381     029C                     l172:
  2382     029C  0008               	return
  2383     029D                     __end_of_I2C_Initialize:
  2384                           
  2385                           	psect	text6
  2386     010C                     __ptext6:	
  2387 ;; *************** function _EUSART_Initialize *****************
  2388 ;; Defined at:
  2389 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2403 ;;      Params:         0       0       0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 7
  2410 ;; This function calls:
  2411 ;;		_EUSART_SetErrorHandler
  2412 ;;		_EUSART_SetFramingErrorHandler
  2413 ;;		_EUSART_SetOverrunErrorHandler
  2414 ;;		_EUSART_SetRxInterruptHandler
  2415 ;;		_EUSART_SetTxInterruptHandler
  2416 ;; This function is called by:
  2417 ;;		_SYSTEM_Initialize
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421     010C                     _EUSART_Initialize:	
  2422                           ;psect for function _EUSART_Initialize
  2423                           
  2424     010C                     l2849:	
  2425                           ;incstack = 0
  2426                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2427                           
  2428                           
  2429                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  2430     010C  0021               	movlb	1	; select bank1
  2431     010D  1291               	bcf	17,5	;volatile
  2432     010E                     l2851:
  2433                           
  2434                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2435     010E  304B               	movlw	low _EUSART_Receive_ISR
  2436     010F  00A8               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  2437     0110  3001               	movlw	high _EUSART_Receive_ISR
  2438     0111  00A9               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  2439     0112  3182  22D7  3181   	fcall	_EUSART_SetRxInterruptHandler
  2440     0115                     l2853:
  2441                           
  2442                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  2443     0115  0021               	movlb	1	; select bank1
  2444     0116  1211               	bcf	17,4	;volatile
  2445                           
  2446                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2447     0117  3025               	movlw	low _EUSART_Transmit_ISR
  2448     0118  00A8               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  2449     0119  3002               	movlw	high _EUSART_Transmit_ISR
  2450     011A  00A9               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  2451     011B  3182  229D  3181   	fcall	_EUSART_SetTxInterruptHandler
  2452     011E                     l2855:
  2453                           
  2454                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  2455     011E  3008               	movlw	8
  2456     011F  0023               	movlb	3	; select bank3
  2457     0120  009F               	movwf	31	;volatile
  2458     0121                     l2857:
  2459                           
  2460                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  2461     0121  3090               	movlw	144
  2462     0122  009D               	movwf	29	;volatile
  2463     0123                     l2859:
  2464                           
  2465                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  2466     0123  3024               	movlw	36
  2467     0124  009E               	movwf	30	;volatile
  2468     0125                     l2861:
  2469                           
  2470                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  2471     0125  30CF               	movlw	207
  2472     0126  009B               	movwf	27	;volatile
  2473     0127                     l2863:
  2474                           
  2475                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  2476     0127  019C               	clrf	28	;volatile
  2477     0128                     l2865:
  2478                           
  2479                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2480     0128  3055               	movlw	low _EUSART_DefaultFramingErrorHandler
  2481     0129  0021               	movlb	1	; select bank1
  2482     012A  00A8               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  2483     012B  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  2484     012C  00A9               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  2485     012D  3182  22E3  3181   	fcall	_EUSART_SetFramingErrorHandler
  2486     0130                     l2867:
  2487                           
  2488                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2489     0130  3037               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2490     0131  0021               	movlb	1	; select bank1
  2491     0132  00A8               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  2492     0133  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2493     0134  00A9               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  2494     0135  3182  22DD  3181   	fcall	_EUSART_SetOverrunErrorHandler
  2495     0138                     l2869:
  2496                           
  2497                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2498     0138  303B               	movlw	low _EUSART_DefaultErrorHandler
  2499     0139  0021               	movlb	1	; select bank1
  2500     013A  00A8               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  2501     013B  3003               	movlw	high _EUSART_DefaultErrorHandler
  2502     013C  00A9               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  2503     013D  3182  22E9  3181   	fcall	_EUSART_SetErrorHandler
  2504                           
  2505                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2506     0140  01F0               	clrf	_eusartRxLastError	;volatile
  2507                           
  2508                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2509     0141  01F6               	clrf	_eusartTxHead	;volatile
  2510                           
  2511                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2512     0142  01F5               	clrf	_eusartTxTail	;volatile
  2513     0143                     l2871:
  2514                           
  2515                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2516     0143  3008               	movlw	8
  2517     0144  00F4               	movwf	_eusartTxBufferRemaining	;volatile
  2518     0145                     l2873:
  2519                           
  2520                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2521     0145  01F3               	clrf	_eusartRxHead	;volatile
  2522     0146                     l2875:
  2523                           
  2524                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2525     0146  01F2               	clrf	_eusartRxTail	;volatile
  2526     0147                     l2877:
  2527                           
  2528                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2529     0147  01F1               	clrf	_eusartRxCount	;volatile
  2530     0148                     l2879:
  2531                           
  2532                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  2533     0148  0021               	movlb	1	; select bank1
  2534     0149  1691               	bsf	17,5	;volatile
  2535     014A                     l508:
  2536     014A  0008               	return
  2537     014B                     __end_of_EUSART_Initialize:
  2538                           
  2539                           	psect	text7
  2540     029D                     __ptext7:	
  2541 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2542 ;; Defined at:
  2543 ;;		line 276 in file "mcc_generated_files/eusart.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2546 ;;		 -> EUSART_Transmit_ISR(1), 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2558 ;;      Params:         0       0       2       0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0
  2561 ;;      Totals:         0       0       2       0       0       0       0       0
  2562 ;;Total ram usage:        2 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 6
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_EUSART_Initialize
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572     029D                     _EUSART_SetTxInterruptHandler:	
  2573                           ;psect for function _EUSART_SetTxInterruptHandler
  2574                           
  2575     029D                     l2801:	
  2576                           ;incstack = 0
  2577                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  2578                           
  2579                           
  2580                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2581     029D  0021               	movlb	1	; select bank1
  2582     029E  0829               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  2583     029F  0020               	movlb	0	; select bank0
  2584     02A0  00EF               	movwf	_EUSART_TxDefaultInterruptHandler+1
  2585     02A1  0021               	movlb	1	; select bank1
  2586     02A2  0828               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  2587     02A3  0020               	movlb	0	; select bank0
  2588     02A4  00EE               	movwf	_EUSART_TxDefaultInterruptHandler
  2589     02A5                     l574:
  2590     02A5  0008               	return
  2591     02A6                     __end_of_EUSART_SetTxInterruptHandler:
  2592                           
  2593                           	psect	text8
  2594     02D7                     __ptext8:	
  2595 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2596 ;; Defined at:
  2597 ;;		line 280 in file "mcc_generated_files/eusart.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2600 ;;		 -> EUSART_Receive_ISR(1), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2612 ;;      Params:         0       0       2       0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0
  2615 ;;      Totals:         0       0       2       0       0       0       0       0
  2616 ;;Total ram usage:        2 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 6
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_EUSART_Initialize
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626     02D7                     _EUSART_SetRxInterruptHandler:	
  2627                           ;psect for function _EUSART_SetRxInterruptHandler
  2628                           
  2629     02D7                     l2799:	
  2630                           ;incstack = 0
  2631                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  2632                           
  2633                           
  2634                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2635     02D7  0021               	movlb	1	; select bank1
  2636     02D8  0829               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  2637     02D9  00A7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  2638     02DA  0828               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  2639     02DB  00A6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  2640     02DC                     l577:
  2641     02DC  0008               	return
  2642     02DD                     __end_of_EUSART_SetRxInterruptHandler:
  2643                           
  2644                           	psect	text9
  2645     02DD                     __ptext9:	
  2646 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2647 ;; Defined at:
  2648 ;;		line 268 in file "mcc_generated_files/eusart.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2651 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2663 ;;      Params:         0       0       2       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0
  2666 ;;      Totals:         0       0       2       0       0       0       0       0
  2667 ;;Total ram usage:        2 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 6
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_EUSART_Initialize
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     02DD                     _EUSART_SetOverrunErrorHandler:	
  2678                           ;psect for function _EUSART_SetOverrunErrorHandler
  2679                           
  2680     02DD                     l2805:	
  2681                           ;incstack = 0
  2682                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2683                           
  2684                           
  2685                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  2686     02DD  0021               	movlb	1	; select bank1
  2687     02DE  0829               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  2688     02DF  00A3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2689     02E0  0828               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  2690     02E1  00A2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2691     02E2                     l568:
  2692     02E2  0008               	return
  2693     02E3                     __end_of_EUSART_SetOverrunErrorHandler:
  2694                           
  2695                           	psect	text10
  2696     02E3                     __ptext10:	
  2697 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2698 ;; Defined at:
  2699 ;;		line 264 in file "mcc_generated_files/eusart.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2702 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2714 ;;      Params:         0       0       2       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0
  2717 ;;      Totals:         0       0       2       0       0       0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 6
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_EUSART_Initialize
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728     02E3                     _EUSART_SetFramingErrorHandler:	
  2729                           ;psect for function _EUSART_SetFramingErrorHandler
  2730                           
  2731     02E3                     l2803:	
  2732                           ;incstack = 0
  2733                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2734                           
  2735                           
  2736                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  2737     02E3  0021               	movlb	1	; select bank1
  2738     02E4  0829               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  2739     02E5  00A5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2740     02E6  0828               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  2741     02E7  00A4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2742     02E8                     l565:
  2743     02E8  0008               	return
  2744     02E9                     __end_of_EUSART_SetFramingErrorHandler:
  2745                           
  2746                           	psect	text11
  2747     02E9                     __ptext11:	
  2748 ;; *************** function _EUSART_SetErrorHandler *****************
  2749 ;; Defined at:
  2750 ;;		line 272 in file "mcc_generated_files/eusart.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  2753 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2765 ;;      Params:         0       0       2       0       0       0       0       0
  2766 ;;      Locals:         0       0       0       0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0
  2768 ;;      Totals:         0       0       2       0       0       0       0       0
  2769 ;;Total ram usage:        2 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 6
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_EUSART_Initialize
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779     02E9                     _EUSART_SetErrorHandler:	
  2780                           ;psect for function _EUSART_SetErrorHandler
  2781                           
  2782     02E9                     l2807:	
  2783                           ;incstack = 0
  2784                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2785                           
  2786                           
  2787                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  2788     02E9  0021               	movlb	1	; select bank1
  2789     02EA  0829               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  2790     02EB  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2791     02EC  0828               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  2792     02ED  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  2793     02EE                     l571:
  2794     02EE  0008               	return
  2795     02EF                     __end_of_EUSART_SetErrorHandler:
  2796                           
  2797                           	psect	intentry
  2798     0004                     __pintentry:	
  2799 ;; *************** function _INTERRUPT_InterruptManager *****************
  2800 ;; Defined at:
  2801 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2815 ;;      Params:         0       0       0       0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 5
  2822 ;; This function calls:
  2823 ;;		NULL
  2824 ;;		_EUSART_Receive_ISR
  2825 ;;		_EUSART_Transmit_ISR
  2826 ;;		_I2C_MasterIsr
  2827 ;; This function is called by:
  2828 ;;		Interrupt level 1
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832     0004                     _INTERRUPT_InterruptManager:
  2833                           
  2834                           ;incstack = 0
  2835     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2836                           
  2837                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2838     0005  3180               	pagesel	$
  2839     0006                     i1l2655:
  2840                           
  2841                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2842     0006  1F0B               	btfss	11,6	;volatile
  2843     0007  2809               	goto	u63_21
  2844     0008  280A               	goto	u63_20
  2845     0009                     u63_21:
  2846     0009  2846               	goto	i1l433
  2847     000A                     u63_20:
  2848     000A                     i1l2657:
  2849                           
  2850                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  2851     000A  0021               	movlb	1	; select bank1
  2852     000B  1E11               	btfss	17,4	;volatile
  2853     000C  280E               	goto	u64_21
  2854     000D  280F               	goto	u64_20
  2855     000E                     u64_21:
  2856     000E  281A               	goto	i1l424
  2857     000F                     u64_20:
  2858     000F                     i1l2659:
  2859     000F  0020               	movlb	0	; select bank0
  2860     0010  1E11               	btfss	17,4	;volatile
  2861     0011  2813               	goto	u65_21
  2862     0012  2814               	goto	u65_20
  2863     0013                     u65_21:
  2864     0013  281A               	goto	i1l424
  2865     0014                     u65_20:
  2866     0014                     i1l2661:
  2867                           
  2868                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  2869     0014  086F               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  2870     0015  008A               	movwf	10
  2871     0016  086E               	movf	_EUSART_TxDefaultInterruptHandler,w
  2872     0017  000A               	callw
  2873     0018  3180               	pagesel	$
  2874                           
  2875                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2876     0019  2846               	goto	i1l433
  2877     001A                     i1l424:	
  2878                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  2879                           
  2880     001A  0021               	movlb	1	; select bank1
  2881     001B  1E91               	btfss	17,5	;volatile
  2882     001C  281E               	goto	u66_21
  2883     001D  281F               	goto	u66_20
  2884     001E                     u66_21:
  2885     001E  282B               	goto	i1l426
  2886     001F                     u66_20:
  2887     001F                     i1l2663:
  2888     001F  0020               	movlb	0	; select bank0
  2889     0020  1E91               	btfss	17,5	;volatile
  2890     0021  2823               	goto	u67_21
  2891     0022  2824               	goto	u67_20
  2892     0023                     u67_21:
  2893     0023  282B               	goto	i1l426
  2894     0024                     u67_20:
  2895     0024                     i1l2665:
  2896                           
  2897                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  2898     0024  0021               	movlb	1	; select bank1
  2899     0025  0827               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  2900     0026  008A               	movwf	10
  2901     0027  0826               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  2902     0028  000A               	callw
  2903     0029  3180               	pagesel	$
  2904                           
  2905                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  2906     002A  2846               	goto	i1l433
  2907     002B                     i1l426:	
  2908                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  2909                           
  2910     002B  0021               	movlb	1	; select bank1
  2911     002C  1D92               	btfss	18,3	;volatile
  2912     002D  282F               	goto	u68_21
  2913     002E  2830               	goto	u68_20
  2914     002F                     u68_21:
  2915     002F  283B               	goto	i1l428
  2916     0030                     u68_20:
  2917     0030                     i1l2667:
  2918     0030  0020               	movlb	0	; select bank0
  2919     0031  1D92               	btfss	18,3	;volatile
  2920     0032  2834               	goto	u69_21
  2921     0033  2835               	goto	u69_20
  2922     0034                     u69_21:
  2923     0034  283B               	goto	i1l428
  2924     0035                     u69_20:
  2925     0035                     i1l2669:
  2926                           
  2927                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  2928     0035  085D               	movf	_MSSP_InterruptHandler+1,w
  2929     0036  008A               	movwf	10
  2930     0037  085C               	movf	_MSSP_InterruptHandler,w
  2931     0038  000A               	callw
  2932     0039  3180               	pagesel	$
  2933                           
  2934                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  2935     003A  2846               	goto	i1l433
  2936     003B                     i1l428:	
  2937                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  2938                           
  2939     003B  0021               	movlb	1	; select bank1
  2940     003C  1D91               	btfss	17,3	;volatile
  2941     003D  283F               	goto	u70_21
  2942     003E  2840               	goto	u70_20
  2943     003F                     u70_21:
  2944     003F  2846               	goto	i1l427
  2945     0040                     u70_20:
  2946     0040                     i1l2671:
  2947     0040  0020               	movlb	0	; select bank0
  2948     0041  1D91               	btfss	17,3	;volatile
  2949     0042  2844               	goto	u71_21
  2950     0043  2845               	goto	u71_20
  2951     0044                     u71_21:
  2952     0044  2846               	goto	i1l427
  2953     0045                     u71_20:
  2954     0045  2835               	goto	i1l2669
  2955     0046                     i1l427:
  2956     0046                     i1l433:
  2957     0046  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2958     0047  0009               	retfie
  2959     0048                     __end_of_INTERRUPT_InterruptManager:
  2960                           
  2961                           	psect	text13
  2962     032B                     __ptext13:	
  2963 ;; *************** function _I2C_MasterIsr *****************
  2964 ;; Defined at:
  2965 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2979 ;;      Params:         0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 4
  2986 ;; This function calls:
  2987 ;;		_I2C_MasterFsm
  2988 ;; This function is called by:
  2989 ;;		_I2C_Open
  2990 ;;		_INTERRUPT_InterruptManager
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     032B                     _I2C_MasterIsr:	
  2995                           ;psect for function _I2C_MasterIsr
  2996                           
  2997     032B                     i1l2467:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3000                           
  3001                           
  3002                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  3003     032B  3181  21DD  3183   	fcall	_I2C_MasterFsm
  3004     032E                     i1l225:
  3005     032E  0008               	return
  3006     032F                     __end_of_I2C_MasterIsr:
  3007                           
  3008                           	psect	text14
  3009     01DD                     __ptext14:	
  3010 ;; *************** function _I2C_MasterFsm *****************
  3011 ;; Defined at:
  3012 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3026 ;;      Params:         0       0       0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0       0
  3028 ;;      Temps:          2       0       0       0       0       0       0       0
  3029 ;;      Totals:         2       0       0       0       0       0       0       0
  3030 ;;Total ram usage:        2 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 3
  3033 ;; This function calls:
  3034 ;;		_I2C_DO_ADDRESS_NACK
  3035 ;;		_I2C_DO_IDLE
  3036 ;;		_I2C_DO_RCEN
  3037 ;;		_I2C_DO_RESET
  3038 ;;		_I2C_DO_RX
  3039 ;;		_I2C_DO_RX_ACK
  3040 ;;		_I2C_DO_RX_NACK_RESTART
  3041 ;;		_I2C_DO_RX_NACK_STOP
  3042 ;;		_I2C_DO_SEND_ADR_READ
  3043 ;;		_I2C_DO_SEND_ADR_WRITE
  3044 ;;		_I2C_DO_SEND_RESTART
  3045 ;;		_I2C_DO_SEND_RESTART_READ
  3046 ;;		_I2C_DO_SEND_RESTART_WRITE
  3047 ;;		_I2C_DO_SEND_STOP
  3048 ;;		_I2C_DO_TX
  3049 ;;		_I2C_DO_TX_EMPTY
  3050 ;;		_I2C_MasterClearIrq
  3051 ;;		_I2C_MasterIsNack
  3052 ;; This function is called by:
  3053 ;;		_I2C_MasterIsr
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057     01DD                     _I2C_MasterFsm:	
  3058                           ;psect for function _I2C_MasterFsm
  3059                           
  3060     01DD                     i1l2423:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3063                           
  3064                           
  3065                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  3066     01DD  3183  233F  3181   	fcall	_I2C_MasterClearIrq
  3067     01E0                     i1l2425:
  3068                           
  3069                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  3070     01E0  0020               	movlb	0	; select bank0
  3071     01E1  1C43               	btfss	_I2C_Status+35,0
  3072     01E2  29E4               	goto	u46_21
  3073     01E3  29E5               	goto	u46_20
  3074     01E4                     u46_21:
  3075     01E4  29F0               	goto	i1l2431
  3076     01E5                     u46_20:
  3077     01E5                     i1l2427:
  3078     01E5  3182  22EF  3181   	fcall	_I2C_MasterIsNack
  3079     01E8  3A00               	xorlw	0
  3080     01E9  1903               	skipnz
  3081     01EA  29EC               	goto	u47_21
  3082     01EB  29ED               	goto	u47_20
  3083     01EC                     u47_21:
  3084     01EC  29F0               	goto	i1l2431
  3085     01ED                     u47_20:
  3086     01ED                     i1l2429:
  3087                           
  3088                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  3089     01ED  300F               	movlw	15
  3090     01EE  0020               	movlb	0	; select bank0
  3091     01EF  00C1               	movwf	_I2C_Status+33
  3092     01F0                     i1l2431:
  3093                           
  3094                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  3095     01F0  0020               	movlb	0	; select bank0
  3096     01F1  0841               	movf	_I2C_Status+33,w
  3097     01F2  00FA               	movwf	??_I2C_MasterFsm
  3098     01F3  01FB               	clrf	??_I2C_MasterFsm+1
  3099     01F4  35FA               	lslf	??_I2C_MasterFsm,f
  3100     01F5  0DFB               	rlf	??_I2C_MasterFsm+1,f
  3101     01F6  3005               	movlw	low _i2c_fsmStateTable
  3102     01F7  077A               	addwf	??_I2C_MasterFsm,w
  3103     01F8  0084               	movwf	4
  3104     01F9  3002               	movlw	high _i2c_fsmStateTable
  3105     01FA  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  3106     01FB  3880               	iorlw	128
  3107     01FC  0085               	movwf	5
  3108     01FD  3F01               	moviw [1]fsr0
  3109     01FE  008A               	movwf	10
  3110     01FF  3F00               	moviw [0]fsr0
  3111     0200  000A               	callw
  3112     0201  3181               	pagesel	$
  3113     0202  0020               	movlb	0	; select bank0
  3114     0203  00C1               	movwf	_I2C_Status+33
  3115     0204                     i1l229:
  3116     0204  0008               	return
  3117     0205                     __end_of_I2C_MasterFsm:
  3118                           
  3119                           	psect	text15
  3120     033F                     __ptext15:	
  3121 ;; *************** function _I2C_MasterClearIrq *****************
  3122 ;; Defined at:
  3123 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		None
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3137 ;;      Params:         0       0       0       0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_I2C_MasterFsm
  3147 ;;		_I2C_Open
  3148 ;;		_I2C_Close
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152     033F                     _I2C_MasterClearIrq:	
  3153                           ;psect for function _I2C_MasterClearIrq
  3154                           
  3155     033F                     i1l2209:	
  3156                           ;incstack = 0
  3157                           ; Regs used in _I2C_MasterClearIrq: []
  3158                           
  3159                           
  3160                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  3161     033F  0020               	movlb	0	; select bank0
  3162     0340  1191               	bcf	17,3	;volatile
  3163     0341                     i1l392:
  3164     0341  0008               	return
  3165     0342                     __end_of_I2C_MasterClearIrq:
  3166                           
  3167                           	psect	text16
  3168     01B3                     __ptext16:	
  3169 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3170 ;; Defined at:
  3171 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      enum E3112
  3178 ;; Registers used:
  3179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3185 ;;      Params:         0       0       0       0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0
  3187 ;;      Temps:          2       0       0       0       0       0       0       0
  3188 ;;      Totals:         2       0       0       0       0       0       0       0
  3189 ;;Total ram usage:        2 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 2
  3192 ;; This function calls:
  3193 ;;		NULL
  3194 ;;		_I2C_CallbackReturnReset
  3195 ;;		_I2C_CallbackReturnStop
  3196 ;;		_I2C_DO_SEND_RESTART
  3197 ;;		_I2C_DO_SEND_STOP
  3198 ;; This function is called by:
  3199 ;;		_I2C_MasterFsm
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203     01B3                     _I2C_DO_ADDRESS_NACK:	
  3204                           ;psect for function _I2C_DO_ADDRESS_NACK
  3205                           
  3206     01B3                     i1l2345:	
  3207                           ;incstack = 0
  3208                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3209                           
  3210                           
  3211                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  3212     01B3  0020               	movlb	0	; select bank0
  3213     01B4  1043               	bcf	_I2C_Status+35,0
  3214     01B5                     i1l2347:
  3215                           
  3216                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  3217     01B5  3002               	movlw	2
  3218     01B6  00C2               	movwf	_I2C_Status+34
  3219                           
  3220                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  3221     01B7  29C0               	goto	i1l2359
  3222     01B8                     i1l2349:
  3223                           
  3224                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  3225     01B8  3183  230E  3181   	fcall	_I2C_DO_SEND_RESTART
  3226     01BB  29DC               	goto	i1l320
  3227     01BC                     i1l2353:
  3228                           
  3229                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  3230     01BC  3183  2309  3181   	fcall	_I2C_DO_SEND_STOP
  3231     01BF  29DC               	goto	i1l320
  3232     01C0                     i1l2359:
  3233     01C0  0831               	movf	(low ((_I2C_Status| 0+16))+1),w
  3234     01C1  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3235     01C2  0830               	movf	low ((_I2C_Status| 0+16)),w
  3236     01C3  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3237     01C4  3004               	movlw	4
  3238     01C5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3239     01C6  0086               	movwf	6
  3240     01C7  0187               	clrf	7
  3241     01C8  3F41               	moviw [1]fsr1
  3242     01C9  008A               	movwf	10
  3243     01CA  3F40               	moviw [0]fsr1
  3244     01CB  000A               	callw
  3245     01CC  3181               	pagesel	$
  3246     01CD  00F7               	movwf	??_I2C_DO_ADDRESS_NACK
  3247     01CE  01F8               	clrf	??_I2C_DO_ADDRESS_NACK+1
  3248                           
  3249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 1, Range of values is 0 to 0
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte            4     3 (average)
  3255                           ; direct_byte            8     6 (fixed)
  3256                           ; jumptable            260     6 (fixed)
  3257                           ;	Chosen strategy is simple_byte
  3258     01CF  0878               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3259     01D0  3A00               	xorlw	0	; case 0
  3260     01D1  1903               	skipnz
  3261     01D2  29D4               	goto	i1l2965
  3262     01D3  29BC               	goto	i1l2353
  3263     01D4                     i1l2965:
  3264                           
  3265                           ; Switch size 1, requested type "simple"
  3266                           ; Number of cases is 2, Range of values is 2 to 3
  3267                           ; switch strategies available:
  3268                           ; Name         Instructions Cycles
  3269                           ; simple_byte            7     4 (average)
  3270                           ; direct_byte           13     9 (fixed)
  3271                           ; jumptable            263     9 (fixed)
  3272                           ;	Chosen strategy is simple_byte
  3273     01D4  0877               	movf	??_I2C_DO_ADDRESS_NACK,w
  3274     01D5  3A02               	xorlw	2	; case 2
  3275     01D6  1903               	skipnz
  3276     01D7  29B8               	goto	i1l2349
  3277     01D8  3A01               	xorlw	1	; case 3
  3278     01D9  1903               	skipnz
  3279     01DA  29B8               	goto	i1l2349
  3280     01DB  29BC               	goto	i1l2353
  3281     01DC                     i1l320:
  3282     01DC  0008               	return
  3283     01DD                     __end_of_I2C_DO_ADDRESS_NACK:
  3284                           
  3285                           	psect	text17
  3286     02F5                     __ptext17:	
  3287 ;; *************** function _I2C_DO_RESET *****************
  3288 ;; Defined at:
  3289 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      enum E3112
  3296 ;; Registers used:
  3297 ;;		wreg, status,2
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3303 ;;      Params:         0       0       0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_I2C_MasterFsm
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316     02F5                     _I2C_DO_RESET:	
  3317                           ;psect for function _I2C_DO_RESET
  3318                           
  3319     02F5                     i1l2337:	
  3320                           ;incstack = 0
  3321                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3322                           
  3323                           
  3324                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  3325     02F5  0020               	movlb	0	; select bank0
  3326     02F6  10C3               	bcf	_I2C_Status+35,1
  3327     02F7                     i1l2339:
  3328                           
  3329                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  3330     02F7  01C2               	clrf	_I2C_Status+34
  3331     02F8                     i1l2341:
  3332                           
  3333                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  3334     02F8  300E               	movlw	14
  3335     02F9                     i1l314:
  3336     02F9  0008               	return
  3337     02FA                     __end_of_I2C_DO_RESET:
  3338                           
  3339                           	psect	text18
  3340     02FA                     __ptext18:	
  3341 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3342 ;; Defined at:
  3343 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      enum E3112
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3357 ;;      Params:         0       0       0       0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 1
  3364 ;; This function calls:
  3365 ;;		_I2C_MasterSendNack
  3366 ;; This function is called by:
  3367 ;;		_I2C_DO_RX
  3368 ;;		_I2C_MasterFsm
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372     02FA                     _I2C_DO_RX_NACK_RESTART:	
  3373                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3374                           
  3375     02FA                     i1l2179:	
  3376                           ;incstack = 0
  3377                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3378                           
  3379                           
  3380                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  3381     02FA  3183  2333  3182   	fcall	_I2C_MasterSendNack
  3382     02FD                     i1l2181:
  3383                           
  3384                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  3385     02FD  3009               	movlw	9
  3386     02FE                     i1l311:
  3387     02FE  0008               	return
  3388     02FF                     __end_of_I2C_DO_RX_NACK_RESTART:
  3389                           
  3390                           	psect	text19
  3391     02FF                     __ptext19:	
  3392 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3393 ;; Defined at:
  3394 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      enum E3112
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3408 ;;      Params:         0       0       0       0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0       0
  3411 ;;      Totals:         0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        0 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 1
  3415 ;; This function calls:
  3416 ;;		_I2C_MasterSendNack
  3417 ;; This function is called by:
  3418 ;;		_I2C_DO_RX
  3419 ;;		_I2C_MasterFsm
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423     02FF                     _I2C_DO_RX_NACK_STOP:	
  3424                           ;psect for function _I2C_DO_RX_NACK_STOP
  3425                           
  3426     02FF                     i1l2185:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3429                           
  3430                           
  3431                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  3432     02FF  3183  2333  3182   	fcall	_I2C_MasterSendNack
  3433     0302                     i1l2187:
  3434                           
  3435                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  3436     0302  300A               	movlw	10
  3437     0303                     i1l308:
  3438     0303  0008               	return
  3439     0304                     __end_of_I2C_DO_RX_NACK_STOP:
  3440                           
  3441                           	psect	text20
  3442     0304                     __ptext20:	
  3443 ;; *************** function _I2C_DO_RX_ACK *****************
  3444 ;; Defined at:
  3445 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      enum E3112
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0, pclath, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3459 ;;      Params:         0       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 1
  3466 ;; This function calls:
  3467 ;;		_I2C_MasterSendAck
  3468 ;; This function is called by:
  3469 ;;		_I2C_MasterFsm
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     0304                     _I2C_DO_RX_ACK:	
  3474                           ;psect for function _I2C_DO_RX_ACK
  3475                           
  3476     0304                     i1l2331:	
  3477                           ;incstack = 0
  3478                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3479                           
  3480                           
  3481                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  3482     0304  3183  232F  3183   	fcall	_I2C_MasterSendAck
  3483     0307                     i1l2333:
  3484                           
  3485                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  3486     0307  3005               	movlw	5
  3487     0308                     i1l305:
  3488     0308  0008               	return
  3489     0309                     __end_of_I2C_DO_RX_ACK:
  3490                           
  3491                           	psect	text21
  3492     0309                     __ptext21:	
  3493 ;; *************** function _I2C_DO_SEND_STOP *****************
  3494 ;; Defined at:
  3495 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      enum E3112
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3509 ;;      Params:         0       0       0       0       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0
  3512 ;;      Totals:         0       0       0       0       0       0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 1
  3516 ;; This function calls:
  3517 ;;		_I2C_MasterStop
  3518 ;; This function is called by:
  3519 ;;		_I2C_DO_TX
  3520 ;;		_I2C_DO_TX_EMPTY
  3521 ;;		_I2C_DO_ADDRESS_NACK
  3522 ;;		_I2C_MasterFsm
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526     0309                     _I2C_DO_SEND_STOP:	
  3527                           ;psect for function _I2C_DO_SEND_STOP
  3528                           
  3529     0309                     i1l2167:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3532                           
  3533                           
  3534                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  3535     0309  3183  234B  3183   	fcall	_I2C_MasterStop
  3536     030C                     i1l2169:
  3537                           
  3538                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  3539     030C  3000               	movlw	0
  3540     030D                     i1l302:
  3541     030D  0008               	return
  3542     030E                     __end_of_I2C_DO_SEND_STOP:
  3543                           
  3544                           	psect	text22
  3545     030E                     __ptext22:	
  3546 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3547 ;; Defined at:
  3548 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      enum E3112
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3562 ;;      Params:         0       0       0       0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 1
  3569 ;; This function calls:
  3570 ;;		_I2C_MasterEnableRestart
  3571 ;; This function is called by:
  3572 ;;		_I2C_DO_TX_EMPTY
  3573 ;;		_I2C_DO_ADDRESS_NACK
  3574 ;;		_I2C_MasterFsm
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578     030E                     _I2C_DO_SEND_RESTART:	
  3579                           ;psect for function _I2C_DO_SEND_RESTART
  3580                           
  3581     030E                     i1l2193:	
  3582                           ;incstack = 0
  3583                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3584                           
  3585                           
  3586                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  3587     030E  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3588     0311                     i1l2195:
  3589                           
  3590                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  3591     0311  3001               	movlw	1
  3592     0312                     i1l299:
  3593     0312  0008               	return
  3594     0313                     __end_of_I2C_DO_SEND_RESTART:
  3595                           
  3596                           	psect	text23
  3597     0313                     __ptext23:	
  3598 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3599 ;; Defined at:
  3600 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      enum E3112
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3614 ;;      Params:         0       0       0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 1
  3621 ;; This function calls:
  3622 ;;		_I2C_MasterEnableRestart
  3623 ;; This function is called by:
  3624 ;;		_I2C_DO_TX
  3625 ;;		_I2C_MasterFsm
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629     0313                     _I2C_DO_SEND_RESTART_WRITE:	
  3630                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3631                           
  3632     0313                     i1l2161:	
  3633                           ;incstack = 0
  3634                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3635                           
  3636                           
  3637                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  3638     0313  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3639     0316                     i1l2163:
  3640                           
  3641                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  3642     0316  3002               	movlw	2
  3643     0317                     i1l296:
  3644     0317  0008               	return
  3645     0318                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3646                           
  3647                           	psect	text24
  3648     0318                     __ptext24:	
  3649 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3650 ;; Defined at:
  3651 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      enum E3112
  3658 ;; Registers used:
  3659 ;;		wreg, status,2, status,0, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3665 ;;      Params:         0       0       0       0       0       0       0       0
  3666 ;;      Locals:         0       0       0       0       0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0
  3668 ;;      Totals:         0       0       0       0       0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 1
  3672 ;; This function calls:
  3673 ;;		_I2C_MasterEnableRestart
  3674 ;; This function is called by:
  3675 ;;		_I2C_DO_TX
  3676 ;;		_I2C_MasterFsm
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680     0318                     _I2C_DO_SEND_RESTART_READ:	
  3681                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3682                           
  3683     0318                     i1l2155:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3686                           
  3687                           
  3688                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  3689     0318  3183  234E  3183   	fcall	_I2C_MasterEnableRestart
  3690     031B                     i1l2157:
  3691                           
  3692                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  3693     031B  3001               	movlw	1
  3694     031C                     i1l293:
  3695     031C  0008               	return
  3696     031D                     __end_of_I2C_DO_SEND_RESTART_READ:
  3697                           
  3698                           	psect	text25
  3699     02BE                     __ptext25:	
  3700 ;; *************** function _I2C_DO_RCEN *****************
  3701 ;; Defined at:
  3702 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      enum E3112
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3716 ;;      Params:         0       0       0       0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 1
  3723 ;; This function calls:
  3724 ;;		_I2C_MasterStartRx
  3725 ;; This function is called by:
  3726 ;;		_I2C_MasterFsm
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730     02BE                     _I2C_DO_RCEN:	
  3731                           ;psect for function _I2C_DO_RCEN
  3732                           
  3733     02BE                     i1l2299:	
  3734                           ;incstack = 0
  3735                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  3736                           
  3737                           
  3738                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  3739     02BE  0020               	movlb	0	; select bank0
  3740     02BF  1043               	bcf	_I2C_Status+35,0
  3741     02C0                     i1l2301:
  3742                           
  3743                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  3744     02C0  3183  2348  3182   	fcall	_I2C_MasterStartRx
  3745     02C3                     i1l2303:
  3746                           
  3747                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  3748     02C3  3004               	movlw	4
  3749     02C4                     i1l269:
  3750     02C4  0008               	return
  3751     02C5                     __end_of_I2C_DO_RCEN:
  3752                           
  3753                           	psect	text26
  3754     00C1                     __ptext26:	
  3755 ;; *************** function _I2C_DO_RX *****************
  3756 ;; Defined at:
  3757 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      enum E3112
  3764 ;; Registers used:
  3765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3771 ;;      Params:         0       0       0       0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0
  3773 ;;      Temps:          2       0       0       0       0       0       0       0
  3774 ;;      Totals:         2       0       0       0       0       0       0       0
  3775 ;;Total ram usage:        2 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 2
  3778 ;; This function calls:
  3779 ;;		NULL
  3780 ;;		_I2C_CallbackReturnReset
  3781 ;;		_I2C_CallbackReturnStop
  3782 ;;		_I2C_DO_RX_NACK_RESTART
  3783 ;;		_I2C_DO_RX_NACK_STOP
  3784 ;;		_I2C_MasterGetRxData
  3785 ;;		_I2C_MasterSendAck
  3786 ;; This function is called by:
  3787 ;;		_I2C_MasterFsm
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791     00C1                     _I2C_DO_RX:	
  3792                           ;psect for function _I2C_DO_RX
  3793                           
  3794     00C1                     i1l2269:	
  3795                           ;incstack = 0
  3796                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3797                           
  3798                           
  3799                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  3800     00C1  3183  2345  3180   	fcall	_I2C_MasterGetRxData
  3801     00C4  00F7               	movwf	??_I2C_DO_RX
  3802     00C5  301D               	movlw	29
  3803     00C6  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3804     00C7  0086               	movwf	6
  3805     00C8  0187               	clrf	7
  3806     00C9  3F40               	moviw [0]fsr1
  3807     00CA  0084               	movwf	4
  3808     00CB  3F41               	moviw [1]fsr1
  3809     00CC  0085               	movwf	5
  3810     00CD  0877               	movf	??_I2C_DO_RX,w
  3811     00CE  0080               	movwf	0
  3812     00CF                     i1l2271:
  3813     00CF  3001               	movlw	1
  3814     00D0  0020               	movlb	0	; select bank0
  3815     00D1  07BD               	addwf	low ((_I2C_Status| 0+29)),f
  3816     00D2  3000               	movlw	0
  3817     00D3  3DBE               	addwfc	(low ((_I2C_Status| 0+29))+1),f
  3818     00D4                     i1l2273:
  3819                           
  3820                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  3821     00D4  3001               	movlw	1
  3822     00D5  02BF               	subwf	_I2C_Status+31,f
  3823     00D6  3000               	movlw	0
  3824     00D7  3BC0               	subwfb	_I2C_Status+32,f
  3825     00D8  083F               	movf	_I2C_Status+31,w
  3826     00D9  0440               	iorwf	_I2C_Status+32,w
  3827     00DA  1903               	btfsc	3,2
  3828     00DB  28DD               	goto	u44_21
  3829     00DC  28DE               	goto	u44_20
  3830     00DD                     u44_21:
  3831     00DD  28E3               	goto	i1l257
  3832     00DE                     u44_20:
  3833     00DE                     i1l2275:
  3834                           
  3835                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  3836     00DE  3183  232F  3180   	fcall	_I2C_MasterSendAck
  3837     00E1                     i1l2277:
  3838                           
  3839                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  3840     00E1  3005               	movlw	5
  3841     00E2  290B               	goto	i1l258
  3842     00E3                     i1l257:	
  3843                           ;mcc_generated_files/i2c_master.c: 388:     else
  3844                           
  3845                           
  3846                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  3847     00E3  15C3               	bsf	_I2C_Status+35,3
  3848                           
  3849                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3850     00E4  28ED               	goto	i1l2293
  3851     00E5                     i1l2283:
  3852                           
  3853                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  3854     00E5  3182  22FA  3180   	fcall	_I2C_DO_RX_NACK_RESTART
  3855     00E8  290B               	goto	i1l258
  3856     00E9                     i1l2287:
  3857                           
  3858                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  3859     00E9  3182  22FF  3180   	fcall	_I2C_DO_RX_NACK_STOP
  3860     00EC  290B               	goto	i1l258
  3861     00ED                     i1l2293:
  3862     00ED  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  3863     00EE  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3864     00EF  082C               	movf	low ((_I2C_Status| 0+12)),w
  3865     00F0  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3866     00F1  0821               	movf	_I2C_Status+1,w
  3867     00F2  008A               	movwf	10
  3868     00F3  0820               	movf	_I2C_Status,w
  3869     00F4  000A               	callw
  3870     00F5  3180               	pagesel	$
  3871     00F6  00F7               	movwf	??_I2C_DO_RX
  3872     00F7  01F8               	clrf	??_I2C_DO_RX+1
  3873                           
  3874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3875                           ; Switch size 1, requested type "simple"
  3876                           ; Number of cases is 1, Range of values is 0 to 0
  3877                           ; switch strategies available:
  3878                           ; Name         Instructions Cycles
  3879                           ; simple_byte            4     3 (average)
  3880                           ; direct_byte            8     6 (fixed)
  3881                           ; jumptable            260     6 (fixed)
  3882                           ;	Chosen strategy is simple_byte
  3883     00F8  0878               	movf	??_I2C_DO_RX+1,w
  3884     00F9  3A00               	xorlw	0	; case 0
  3885     00FA  1903               	skipnz
  3886     00FB  28FD               	goto	i1l2967
  3887     00FC  28E9               	goto	i1l2287
  3888     00FD                     i1l2967:
  3889                           
  3890                           ; Switch size 1, requested type "simple"
  3891                           ; Number of cases is 4, Range of values is 1 to 4
  3892                           ; switch strategies available:
  3893                           ; Name         Instructions Cycles
  3894                           ; simple_byte           13     7 (average)
  3895                           ; direct_byte           17     9 (fixed)
  3896                           ; jumptable            263     9 (fixed)
  3897                           ;	Chosen strategy is simple_byte
  3898     00FD  0877               	movf	??_I2C_DO_RX,w
  3899     00FE  3A01               	xorlw	1	; case 1
  3900     00FF  1903               	skipnz
  3901     0100  28E9               	goto	i1l2287
  3902     0101  3A03               	xorlw	3	; case 2
  3903     0102  1903               	skipnz
  3904     0103  28E5               	goto	i1l2283
  3905     0104  3A01               	xorlw	1	; case 3
  3906     0105  1903               	skipnz
  3907     0106  28E5               	goto	i1l2283
  3908     0107  3A07               	xorlw	7	; case 4
  3909     0108  1903               	skipnz
  3910     0109  28E9               	goto	i1l2287
  3911     010A  28E9               	goto	i1l2287
  3912     010B                     i1l258:
  3913     010B  0008               	return
  3914     010C                     __end_of_I2C_DO_RX:
  3915                           
  3916                           	psect	text27
  3917     0069                     __ptext27:	
  3918 ;; *************** function _I2C_DO_TX *****************
  3919 ;; Defined at:
  3920 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      enum E3112
  3927 ;; Registers used:
  3928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3934 ;;      Params:         0       0       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0       0
  3937 ;;      Totals:         2       0       0       0       0       0       0       0
  3938 ;;Total ram usage:        2 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 2
  3941 ;; This function calls:
  3942 ;;		NULL
  3943 ;;		_I2C_CallbackReturnReset
  3944 ;;		_I2C_CallbackReturnStop
  3945 ;;		_I2C_DO_SEND_RESTART_READ
  3946 ;;		_I2C_DO_SEND_RESTART_WRITE
  3947 ;;		_I2C_DO_SEND_STOP
  3948 ;;		_I2C_MasterIsNack
  3949 ;;		_I2C_MasterSendTxData
  3950 ;; This function is called by:
  3951 ;;		_I2C_MasterFsm
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955     0069                     _I2C_DO_TX:	
  3956                           ;psect for function _I2C_DO_TX
  3957                           
  3958     0069                     i1l2235:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3961                           
  3962                           
  3963                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  3964     0069  3182  22EF  3180   	fcall	_I2C_MasterIsNack
  3965     006C  3A00               	xorlw	0
  3966     006D  1903               	skipnz
  3967     006E  2870               	goto	u42_21
  3968     006F  2871               	goto	u42_20
  3969     0070                     u42_21:
  3970     0070  28A1               	goto	i1l241
  3971     0071                     u42_20:
  3972     0071  287E               	goto	i1l2253
  3973     0072                     i1l2239:
  3974                           
  3975                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  3976     0072  3183  2318  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  3977     0075  28C0               	goto	i1l244
  3978     0076                     i1l2243:
  3979                           
  3980                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  3981     0076  3183  2313  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  3982     0079  28C0               	goto	i1l244
  3983     007A                     i1l2247:
  3984                           
  3985                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  3986     007A  3183  2309  3180   	fcall	_I2C_DO_SEND_STOP
  3987     007D  28C0               	goto	i1l244
  3988     007E                     i1l2253:
  3989     007E  0020               	movlb	0	; select bank0
  3990     007F  0833               	movf	(low ((_I2C_Status| 0+18))+1),w
  3991     0080  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  3992     0081  0832               	movf	low ((_I2C_Status| 0+18)),w
  3993     0082  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  3994     0083  3006               	movlw	6
  3995     0084  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3996     0085  0086               	movwf	6
  3997     0086  0187               	clrf	7
  3998     0087  3F41               	moviw [1]fsr1
  3999     0088  008A               	movwf	10
  4000     0089  3F40               	moviw [0]fsr1
  4001     008A  000A               	callw
  4002     008B  3180               	pagesel	$
  4003     008C  00F8               	movwf	??_I2C_DO_TX
  4004     008D  01F9               	clrf	??_I2C_DO_TX+1
  4005                           
  4006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4007                           ; Switch size 1, requested type "simple"
  4008                           ; Number of cases is 1, Range of values is 0 to 0
  4009                           ; switch strategies available:
  4010                           ; Name         Instructions Cycles
  4011                           ; simple_byte            4     3 (average)
  4012                           ; direct_byte            8     6 (fixed)
  4013                           ; jumptable            260     6 (fixed)
  4014                           ;	Chosen strategy is simple_byte
  4015     008E  0879               	movf	??_I2C_DO_TX+1,w
  4016     008F  3A00               	xorlw	0	; case 0
  4017     0090  1903               	skipnz
  4018     0091  2893               	goto	i1l2969
  4019     0092  287A               	goto	i1l2247
  4020     0093                     i1l2969:
  4021                           
  4022                           ; Switch size 1, requested type "simple"
  4023                           ; Number of cases is 4, Range of values is 1 to 4
  4024                           ; switch strategies available:
  4025                           ; Name         Instructions Cycles
  4026                           ; simple_byte           13     7 (average)
  4027                           ; direct_byte           17     9 (fixed)
  4028                           ; jumptable            263     9 (fixed)
  4029                           ;	Chosen strategy is simple_byte
  4030     0093  0878               	movf	??_I2C_DO_TX,w
  4031     0094  3A01               	xorlw	1	; case 1
  4032     0095  1903               	skipnz
  4033     0096  287A               	goto	i1l2247
  4034     0097  3A03               	xorlw	3	; case 2
  4035     0098  1903               	skipnz
  4036     0099  2872               	goto	i1l2239
  4037     009A  3A01               	xorlw	1	; case 3
  4038     009B  1903               	skipnz
  4039     009C  2876               	goto	i1l2243
  4040     009D  3A07               	xorlw	7	; case 4
  4041     009E  1903               	skipnz
  4042     009F  287A               	goto	i1l2247
  4043     00A0  287A               	goto	i1l2247
  4044     00A1                     i1l241:	
  4045                           ;mcc_generated_files/i2c_master.c: 372:     else
  4046                           
  4047                           
  4048                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  4049     00A1  0020               	movlb	0	; select bank0
  4050     00A2  1043               	bcf	_I2C_Status+35,0
  4051     00A3                     i1l2255:
  4052                           
  4053                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  4054     00A3  083E               	movf	(low ((_I2C_Status| 0+29))+1),w
  4055     00A4  00F9               	movwf	??_I2C_DO_TX+1
  4056     00A5  083D               	movf	low ((_I2C_Status| 0+29)),w
  4057     00A6  00F8               	movwf	??_I2C_DO_TX
  4058     00A7  0ABD               	incf	low ((_I2C_Status| 0+29)),f
  4059     00A8  1903               	skipnz
  4060     00A9  0ABE               	incf	(low ((_I2C_Status| 0+29))+1),f
  4061     00AA  0878               	movf	??_I2C_DO_TX,w
  4062     00AB  0086               	movwf	6
  4063     00AC  0879               	movf	??_I2C_DO_TX+1,w
  4064     00AD  0087               	movwf	7
  4065     00AE  0801               	movf	1,w
  4066     00AF  3183  2322  3180   	fcall	_I2C_MasterSendTxData
  4067     00B2                     i1l2257:
  4068                           
  4069                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  4070     00B2  3001               	movlw	1
  4071     00B3  0020               	movlb	0	; select bank0
  4072     00B4  02BF               	subwf	_I2C_Status+31,f
  4073     00B5  3000               	movlw	0
  4074     00B6  3BC0               	subwfb	_I2C_Status+32,f
  4075     00B7  083F               	movf	_I2C_Status+31,w
  4076     00B8  0440               	iorwf	_I2C_Status+32,w
  4077     00B9  1D03               	btfss	3,2
  4078     00BA  28BC               	goto	u43_21
  4079     00BB  28BD               	goto	u43_20
  4080     00BC                     u43_21:
  4081     00BC  28BF               	goto	i1l2261
  4082     00BD                     u43_20:
  4083     00BD                     i1l2259:
  4084     00BD  3006               	movlw	6
  4085     00BE  28C0               	goto	i1l244
  4086     00BF                     i1l2261:
  4087     00BF  3003               	movlw	3
  4088     00C0                     i1l244:
  4089     00C0  0008               	return
  4090     00C1                     __end_of_I2C_DO_TX:
  4091                           
  4092                           	psect	text28
  4093     02AF                     __ptext28:	
  4094 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4095 ;; Defined at:
  4096 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      enum E3112
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, pclath, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4110 ;;      Params:         0       0       0       0       0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0
  4113 ;;      Totals:         0       0       0       0       0       0       0       0
  4114 ;;Total ram usage:        0 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 1
  4117 ;; This function calls:
  4118 ;;		_I2C_MasterSendTxData
  4119 ;; This function is called by:
  4120 ;;		_I2C_MasterFsm
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124     02AF                     _I2C_DO_SEND_ADR_WRITE:	
  4125                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4126                           
  4127     02AF                     i1l2227:	
  4128                           ;incstack = 0
  4129                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4130                           
  4131                           
  4132                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  4133     02AF  0020               	movlb	0	; select bank0
  4134     02B0  1443               	bsf	_I2C_Status+35,0
  4135     02B1                     i1l2229:
  4136                           
  4137                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  4138     02B1  353C               	lslf	_I2C_Status+28,w
  4139     02B2  3183  2322  3182   	fcall	_I2C_MasterSendTxData
  4140     02B5                     i1l2231:
  4141                           
  4142                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  4143     02B5  3003               	movlw	3
  4144     02B6                     i1l238:
  4145     02B6  0008               	return
  4146     02B7                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4147                           
  4148                           	psect	text29
  4149     02A6                     __ptext29:	
  4150 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4151 ;; Defined at:
  4152 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      enum E3112
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4166 ;;      Params:         0       0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 1
  4173 ;; This function calls:
  4174 ;;		_I2C_MasterSendTxData
  4175 ;; This function is called by:
  4176 ;;		_I2C_MasterFsm
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180     02A6                     _I2C_DO_SEND_ADR_READ:	
  4181                           ;psect for function _I2C_DO_SEND_ADR_READ
  4182                           
  4183     02A6                     i1l2219:	
  4184                           ;incstack = 0
  4185                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4186                           
  4187                           
  4188                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  4189     02A6  0020               	movlb	0	; select bank0
  4190     02A7  1443               	bsf	_I2C_Status+35,0
  4191     02A8                     i1l2221:
  4192                           
  4193                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  4194     02A8  1403               	setc
  4195     02A9  0D3C               	rlf	_I2C_Status+28,w
  4196     02AA  3183  2322  3182   	fcall	_I2C_MasterSendTxData
  4197     02AD                     i1l2223:
  4198                           
  4199                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  4200     02AD  3005               	movlw	5
  4201     02AE                     i1l235:
  4202     02AE  0008               	return
  4203     02AF                     __end_of_I2C_DO_SEND_ADR_READ:
  4204                           
  4205                           	psect	text30
  4206     031D                     __ptext30:	
  4207 ;; *************** function _I2C_DO_IDLE *****************
  4208 ;; Defined at:
  4209 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      enum E3112
  4216 ;; Registers used:
  4217 ;;		wreg, status,2
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4223 ;;      Params:         0       0       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_I2C_MasterFsm
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236     031D                     _I2C_DO_IDLE:	
  4237                           ;psect for function _I2C_DO_IDLE
  4238                           
  4239     031D                     i1l2211:	
  4240                           ;incstack = 0
  4241                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4242                           
  4243                           
  4244                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  4245     031D  0020               	movlb	0	; select bank0
  4246     031E  10C3               	bcf	_I2C_Status+35,1
  4247     031F                     i1l2213:
  4248                           
  4249                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  4250     031F  01C2               	clrf	_I2C_Status+34
  4251     0320                     i1l2215:
  4252                           
  4253                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  4254     0320  300E               	movlw	14
  4255     0321                     i1l232:
  4256     0321  0008               	return
  4257     0322                     __end_of_I2C_DO_IDLE:
  4258                           
  4259                           	psect	text31
  4260     0184                     __ptext31:	
  4261 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4262 ;; Defined at:
  4263 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;		None
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      enum E3112
  4270 ;; Registers used:
  4271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4277 ;;      Params:         0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       0       0       0       0       0       0       0
  4279 ;;      Temps:          2       0       0       0       0       0       0       0
  4280 ;;      Totals:         2       0       0       0       0       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 2
  4284 ;; This function calls:
  4285 ;;		NULL
  4286 ;;		_I2C_CallbackReturnReset
  4287 ;;		_I2C_CallbackReturnStop
  4288 ;;		_I2C_DO_SEND_RESTART
  4289 ;;		_I2C_DO_SEND_STOP
  4290 ;;		_I2C_MasterSetIrq
  4291 ;; This function is called by:
  4292 ;;		_I2C_MasterFsm
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296     0184                     _I2C_DO_TX_EMPTY:	
  4297                           ;psect for function _I2C_DO_TX_EMPTY
  4298                           
  4299     0184                     i1l2307:	
  4300                           ;incstack = 0
  4301                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4302                           
  4303                           
  4304                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  4305     0184  0020               	movlb	0	; select bank0
  4306     0185  15C3               	bsf	_I2C_Status+35,3
  4307                           
  4308                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4309     0186  2994               	goto	i1l2325
  4310     0187                     i1l2309:
  4311                           
  4312                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  4313     0187  3183  230E  3181   	fcall	_I2C_DO_SEND_RESTART
  4314     018A  29B2               	goto	i1l275
  4315     018B                     i1l2313:
  4316                           
  4317                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  4318     018B  3183  2342  3181   	fcall	_I2C_MasterSetIrq
  4319     018E                     i1l2315:
  4320                           
  4321                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  4322     018E  3003               	movlw	3
  4323     018F  29B2               	goto	i1l275
  4324     0190                     i1l2319:
  4325                           
  4326                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  4327     0190  3183  2309  3181   	fcall	_I2C_DO_SEND_STOP
  4328     0193  29B2               	goto	i1l275
  4329     0194                     i1l2325:
  4330     0194  082D               	movf	(low ((_I2C_Status| 0+12))+1),w
  4331     0195  00F8               	movwf	I2C_CallbackReturnReset@funPtr+1
  4332     0196  082C               	movf	low ((_I2C_Status| 0+12)),w
  4333     0197  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4334     0198  0821               	movf	_I2C_Status+1,w
  4335     0199  008A               	movwf	10
  4336     019A  0820               	movf	_I2C_Status,w
  4337     019B  000A               	callw
  4338     019C  3181               	pagesel	$
  4339     019D  00F7               	movwf	??_I2C_DO_TX_EMPTY
  4340     019E  01F8               	clrf	??_I2C_DO_TX_EMPTY+1
  4341                           
  4342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4343                           ; Switch size 1, requested type "simple"
  4344                           ; Number of cases is 1, Range of values is 0 to 0
  4345                           ; switch strategies available:
  4346                           ; Name         Instructions Cycles
  4347                           ; simple_byte            4     3 (average)
  4348                           ; direct_byte            8     6 (fixed)
  4349                           ; jumptable            260     6 (fixed)
  4350                           ;	Chosen strategy is simple_byte
  4351     019F  0878               	movf	??_I2C_DO_TX_EMPTY+1,w
  4352     01A0  3A00               	xorlw	0	; case 0
  4353     01A1  1903               	skipnz
  4354     01A2  29A4               	goto	i1l2971
  4355     01A3  2990               	goto	i1l2319
  4356     01A4                     i1l2971:
  4357                           
  4358                           ; Switch size 1, requested type "simple"
  4359                           ; Number of cases is 4, Range of values is 1 to 4
  4360                           ; switch strategies available:
  4361                           ; Name         Instructions Cycles
  4362                           ; simple_byte           13     7 (average)
  4363                           ; direct_byte           17     9 (fixed)
  4364                           ; jumptable            263     9 (fixed)
  4365                           ;	Chosen strategy is simple_byte
  4366     01A4  0877               	movf	??_I2C_DO_TX_EMPTY,w
  4367     01A5  3A01               	xorlw	1	; case 1
  4368     01A6  1903               	skipnz
  4369     01A7  2990               	goto	i1l2319
  4370     01A8  3A03               	xorlw	3	; case 2
  4371     01A9  1903               	skipnz
  4372     01AA  2987               	goto	i1l2309
  4373     01AB  3A01               	xorlw	1	; case 3
  4374     01AC  1903               	skipnz
  4375     01AD  2987               	goto	i1l2309
  4376     01AE  3A07               	xorlw	7	; case 4
  4377     01AF  1903               	skipnz
  4378     01B0  298B               	goto	i1l2313
  4379     01B1  2990               	goto	i1l2319
  4380     01B2                     i1l275:
  4381     01B2  0008               	return
  4382     01B3                     __end_of_I2C_DO_TX_EMPTY:
  4383                           
  4384                           	psect	text32
  4385     0342                     __ptext32:	
  4386 ;; *************** function _I2C_MasterSetIrq *****************
  4387 ;; Defined at:
  4388 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		None
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4402 ;;      Params:         0       0       0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0
  4405 ;;      Totals:         0       0       0       0       0       0       0       0
  4406 ;;Total ram usage:        0 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_I2C_DO_TX_EMPTY
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415     0342                     _I2C_MasterSetIrq:	
  4416                           ;psect for function _I2C_MasterSetIrq
  4417                           
  4418     0342                     i1l2199:	
  4419                           ;incstack = 0
  4420                           ; Regs used in _I2C_MasterSetIrq: []
  4421                           
  4422                           
  4423                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  4424     0342  0020               	movlb	0	; select bank0
  4425     0343  1591               	bsf	17,3	;volatile
  4426     0344                     i1l395:
  4427     0344  0008               	return
  4428     0345                     __end_of_I2C_MasterSetIrq:
  4429                           
  4430                           	psect	text33
  4431     02EF                     __ptext33:	
  4432 ;; *************** function _I2C_MasterIsNack *****************
  4433 ;; Defined at:
  4434 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      _Bool 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4448 ;;      Params:         0       0       0       0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_I2C_MasterFsm
  4458 ;;		_I2C_DO_TX
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462     02EF                     _I2C_MasterIsNack:	
  4463                           ;psect for function _I2C_MasterIsNack
  4464                           
  4465     02EF                     i1l2149:	
  4466                           ;incstack = 0
  4467                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4468                           
  4469                           
  4470                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  4471     02EF  0024               	movlb	4	; select bank4
  4472     02F0  0E16               	swapf	22,w	;volatile
  4473     02F1  0C89               	rrf	9,f
  4474     02F2  0C89               	rrf	9,f
  4475     02F3  3901               	andlw	1
  4476     02F4                     i1l368:
  4477     02F4  0008               	return
  4478     02F5                     __end_of_I2C_MasterIsNack:
  4479                           
  4480                           	psect	text34
  4481     0322                     __ptext34:	
  4482 ;; *************** function _I2C_MasterSendTxData *****************
  4483 ;; Defined at:
  4484 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  data            1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  data            1    0[COMMON] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4498 ;;      Params:         0       0       0       0       0       0       0       0
  4499 ;;      Locals:         1       0       0       0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0
  4501 ;;      Totals:         1       0       0       0       0       0       0       0
  4502 ;;Total ram usage:        1 bytes
  4503 ;; Hardware stack levels used: 1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_I2C_DO_SEND_ADR_READ
  4508 ;;		_I2C_DO_SEND_ADR_WRITE
  4509 ;;		_I2C_DO_TX
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513     0322                     _I2C_MasterSendTxData:	
  4514                           ;psect for function _I2C_MasterSendTxData
  4515                           
  4516                           
  4517                           ;incstack = 0
  4518                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4519                           ;I2C_MasterSendTxData@data stored from wreg
  4520     0322  00F7               	movwf	I2C_MasterSendTxData@data
  4521     0323                     i1l2153:
  4522                           
  4523                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  4524     0323  0877               	movf	I2C_MasterSendTxData@data,w
  4525     0324  0024               	movlb	4	; select bank4
  4526     0325  0091               	movwf	17	;volatile
  4527     0326                     i1l350:
  4528     0326  0008               	return
  4529     0327                     __end_of_I2C_MasterSendTxData:
  4530                           
  4531                           	psect	text35
  4532     032F                     __ptext35:	
  4533 ;; *************** function _I2C_MasterSendAck *****************
  4534 ;; Defined at:
  4535 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		None
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4549 ;;      Params:         0       0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_I2C_DO_RX
  4559 ;;		_I2C_DO_RX_ACK
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563     032F                     _I2C_MasterSendAck:	
  4564                           ;psect for function _I2C_MasterSendAck
  4565                           
  4566     032F                     i1l2177:	
  4567                           ;incstack = 0
  4568                           ; Regs used in _I2C_MasterSendAck: []
  4569                           
  4570                           
  4571                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  4572     032F  0024               	movlb	4	; select bank4
  4573     0330  1296               	bcf	22,5	;volatile
  4574                           
  4575                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  4576     0331  1616               	bsf	22,4	;volatile
  4577     0332                     i1l371:
  4578     0332  0008               	return
  4579     0333                     __end_of_I2C_MasterSendAck:
  4580                           
  4581                           	psect	text36
  4582     0345                     __ptext36:	
  4583 ;; *************** function _I2C_MasterGetRxData *****************
  4584 ;; Defined at:
  4585 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;		None
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      unsigned char 
  4592 ;; Registers used:
  4593 ;;		wreg
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4599 ;;      Params:         0       0       0       0       0       0       0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0       0
  4602 ;;      Totals:         0       0       0       0       0       0       0       0
  4603 ;;Total ram usage:        0 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_I2C_DO_RX
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612     0345                     _I2C_MasterGetRxData:	
  4613                           ;psect for function _I2C_MasterGetRxData
  4614                           
  4615     0345                     i1l2173:	
  4616                           ;incstack = 0
  4617                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4618                           
  4619                           
  4620                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  4621     0345  0024               	movlb	4	; select bank4
  4622     0346  0811               	movf	17,w	;volatile
  4623     0347                     i1l347:
  4624     0347  0008               	return
  4625     0348                     __end_of_I2C_MasterGetRxData:
  4626                           
  4627                           	psect	text37
  4628     0333                     __ptext37:	
  4629 ;; *************** function _I2C_MasterSendNack *****************
  4630 ;; Defined at:
  4631 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		None
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4645 ;;      Params:         0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_I2C_DO_RX_NACK_STOP
  4655 ;;		_I2C_DO_RX_NACK_RESTART
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659     0333                     _I2C_MasterSendNack:	
  4660                           ;psect for function _I2C_MasterSendNack
  4661                           
  4662     0333                     i1l2147:	
  4663                           ;incstack = 0
  4664                           ; Regs used in _I2C_MasterSendNack: []
  4665                           
  4666                           
  4667                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  4668     0333  0024               	movlb	4	; select bank4
  4669     0334  1696               	bsf	22,5	;volatile
  4670                           
  4671                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  4672     0335  1616               	bsf	22,4	;volatile
  4673     0336                     i1l374:
  4674     0336  0008               	return
  4675     0337                     __end_of_I2C_MasterSendNack:
  4676                           
  4677                           	psect	text38
  4678     0348                     __ptext38:	
  4679 ;; *************** function _I2C_MasterStartRx *****************
  4680 ;; Defined at:
  4681 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		None
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4695 ;;      Params:         0       0       0       0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0
  4698 ;;      Totals:         0       0       0       0       0       0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_I2C_DO_RCEN
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708     0348                     _I2C_MasterStartRx:	
  4709                           ;psect for function _I2C_MasterStartRx
  4710                           
  4711     0348                     i1l2191:	
  4712                           ;incstack = 0
  4713                           ; Regs used in _I2C_MasterStartRx: []
  4714                           
  4715                           
  4716                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  4717     0348  0024               	movlb	4	; select bank4
  4718     0349  1596               	bsf	22,3	;volatile
  4719     034A                     i1l359:
  4720     034A  0008               	return
  4721     034B                     __end_of_I2C_MasterStartRx:
  4722                           
  4723                           	psect	text39
  4724     034B                     __ptext39:	
  4725 ;; *************** function _I2C_MasterStop *****************
  4726 ;; Defined at:
  4727 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		None
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4741 ;;      Params:         0       0       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_I2C_DO_SEND_STOP
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     034B                     _I2C_MasterStop:	
  4755                           ;psect for function _I2C_MasterStop
  4756                           
  4757     034B                     i1l2145:	
  4758                           ;incstack = 0
  4759                           ; Regs used in _I2C_MasterStop: []
  4760                           
  4761                           
  4762                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  4763     034B  0024               	movlb	4	; select bank4
  4764     034C  1516               	bsf	22,2	;volatile
  4765     034D                     i1l365:
  4766     034D  0008               	return
  4767     034E                     __end_of_I2C_MasterStop:
  4768                           
  4769                           	psect	text40
  4770     034E                     __ptext40:	
  4771 ;; *************** function _I2C_MasterEnableRestart *****************
  4772 ;; Defined at:
  4773 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		None
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4787 ;;      Params:         0       0       0       0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_I2C_DO_SEND_RESTART_READ
  4797 ;;		_I2C_DO_SEND_RESTART_WRITE
  4798 ;;		_I2C_DO_SEND_RESTART
  4799 ;;		_I2C_DO_RX_EMPTY
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803     034E                     _I2C_MasterEnableRestart:	
  4804                           ;psect for function _I2C_MasterEnableRestart
  4805                           
  4806     034E                     i1l2143:	
  4807                           ;incstack = 0
  4808                           ; Regs used in _I2C_MasterEnableRestart: []
  4809                           
  4810                           
  4811                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  4812     034E  0024               	movlb	4	; select bank4
  4813     034F  1496               	bsf	22,1	;volatile
  4814     0350                     i1l353:
  4815     0350  0008               	return
  4816     0351                     __end_of_I2C_MasterEnableRestart:
  4817                           
  4818                           	psect	text41
  4819     0351                     __ptext41:	
  4820 ;; *************** function _I2C_CallbackReturnReset *****************
  4821 ;; Defined at:
  4822 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  funPtr          2    0[COMMON] PTR void 
  4825 ;;		 -> NULL(0), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      enum E363
  4830 ;; Registers used:
  4831 ;;		wreg
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4837 ;;      Params:         2       0       0       0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0
  4840 ;;      Totals:         2       0       0       0       0       0       0       0
  4841 ;;Total ram usage:        2 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_I2C_Open
  4847 ;;		_I2C_DO_TX
  4848 ;;		_I2C_DO_RX
  4849 ;;		_I2C_DO_TX_EMPTY
  4850 ;;		_I2C_DO_ADDRESS_NACK
  4851 ;;		_I2C_DO_RX_EMPTY
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855     0351                     _I2C_CallbackReturnReset:	
  4856                           ;psect for function _I2C_CallbackReturnReset
  4857                           
  4858     0351                     i1l2205:	
  4859                           ;incstack = 0
  4860                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  4861                           
  4862                           
  4863                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  4864     0351  3005               	movlw	5
  4865     0352                     i1l331:
  4866     0352  0008               	return
  4867     0353                     __end_of_I2C_CallbackReturnReset:
  4868                           
  4869                           	psect	text42
  4870     0353                     __ptext42:	
  4871 ;; *************** function _I2C_CallbackReturnStop *****************
  4872 ;; Defined at:
  4873 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  funPtr          2    0[COMMON] PTR void 
  4876 ;;		 -> NULL(0), 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      enum E363
  4881 ;; Registers used:
  4882 ;;		wreg
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4888 ;;      Params:         2       0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0
  4891 ;;      Totals:         2       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        2 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_I2C_Open
  4898 ;;		_I2C_SetCallback
  4899 ;;		_I2C_DO_TX
  4900 ;;		_I2C_DO_RX
  4901 ;;		_I2C_DO_TX_EMPTY
  4902 ;;		_I2C_DO_ADDRESS_NACK
  4903 ;;		_I2C_DO_RX_EMPTY
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907     0353                     _I2C_CallbackReturnStop:	
  4908                           ;psect for function _I2C_CallbackReturnStop
  4909                           
  4910     0353                     i1l2201:	
  4911                           ;incstack = 0
  4912                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  4913                           
  4914                           
  4915                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  4916     0353  3001               	movlw	1
  4917     0354                     i1l328:
  4918     0354  0008               	return
  4919     0355                     __end_of_I2C_CallbackReturnStop:
  4920                           
  4921                           	psect	text43
  4922     0225                     __ptext43:	
  4923 ;; *************** function _EUSART_Transmit_ISR *****************
  4924 ;; Defined at:
  4925 ;;		line 197 in file "mcc_generated_files/eusart.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4939 ;;      Params:         0       0       0       0       0       0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0
  4941 ;;      Temps:          1       0       0       0       0       0       0       0
  4942 ;;      Totals:         1       0       0       0       0       0       0       0
  4943 ;;Total ram usage:        1 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_EUSART_Initialize
  4949 ;;		_INTERRUPT_InterruptManager
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953     0225                     _EUSART_Transmit_ISR:	
  4954                           ;psect for function _EUSART_Transmit_ISR
  4955                           
  4956     0225                     i1l2469:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4959                           
  4960                           
  4961                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4962     0225  3008               	movlw	8
  4963     0226  0274               	subwf	_eusartTxBufferRemaining,w	;volatile
  4964     0227  1803               	skipnc
  4965     0228  2A2A               	goto	u54_21
  4966     0229  2A2B               	goto	u54_20
  4967     022A                     u54_21:
  4968     022A  2A42               	goto	i1l539
  4969     022B                     u54_20:
  4970     022B                     i1l2471:
  4971                           
  4972                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  4973     022B  0875               	movf	_eusartTxTail,w
  4974     022C  3E54               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4975     022D  0086               	movwf	6
  4976     022E  0187               	clrf	7
  4977     022F  0801               	movf	1,w
  4978     0230  0023               	movlb	3	; select bank3
  4979     0231  009A               	movwf	26	;volatile
  4980     0232                     i1l2473:
  4981     0232  3001               	movlw	1
  4982     0233  00F7               	movwf	??_EUSART_Transmit_ISR
  4983     0234  0877               	movf	??_EUSART_Transmit_ISR,w
  4984     0235  07F5               	addwf	_eusartTxTail,f	;volatile
  4985     0236                     i1l2475:
  4986                           
  4987                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4988     0236  3008               	movlw	8
  4989     0237  0275               	subwf	_eusartTxTail,w	;volatile
  4990     0238  1C03               	skipc
  4991     0239  2A3B               	goto	u55_21
  4992     023A  2A3C               	goto	u55_20
  4993     023B                     u55_21:
  4994     023B  2A3D               	goto	i1l2479
  4995     023C                     u55_20:
  4996     023C                     i1l2477:
  4997                           
  4998                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  4999     023C  01F5               	clrf	_eusartTxTail	;volatile
  5000     023D                     i1l2479:
  5001                           
  5002                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  5003     023D  3001               	movlw	1
  5004     023E  00F7               	movwf	??_EUSART_Transmit_ISR
  5005     023F  0877               	movf	??_EUSART_Transmit_ISR,w
  5006     0240  07F4               	addwf	_eusartTxBufferRemaining,f	;volatile
  5007                           
  5008                           ;mcc_generated_files/eusart.c: 209:     }
  5009     0241  2A44               	goto	i1l542
  5010     0242                     i1l539:	
  5011                           ;mcc_generated_files/eusart.c: 210:     else
  5012                           
  5013                           
  5014                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  5015     0242  0021               	movlb	1	; select bank1
  5016     0243  1211               	bcf	17,4	;volatile
  5017     0244                     i1l542:
  5018     0244  0008               	return
  5019     0245                     __end_of_EUSART_Transmit_ISR:
  5020                           
  5021                           	psect	text44
  5022     014B                     __ptext44:	
  5023 ;; *************** function _EUSART_Receive_ISR *****************
  5024 ;; Defined at:
  5025 ;;		line 216 in file "mcc_generated_files/eusart.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5039 ;;      Params:         0       0       0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0
  5042 ;;      Totals:         0       0       0       0       0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 2
  5046 ;; This function calls:
  5047 ;;		NULL
  5048 ;;		_EUSART_DefaultErrorHandler
  5049 ;;		_EUSART_DefaultFramingErrorHandler
  5050 ;;		_EUSART_DefaultOverrunErrorHandler
  5051 ;;		_EUSART_RxDataHandler
  5052 ;; This function is called by:
  5053 ;;		_EUSART_Initialize
  5054 ;;		_INTERRUPT_InterruptManager
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058     014B                     _EUSART_Receive_ISR:	
  5059                           ;psect for function _EUSART_Receive_ISR
  5060                           
  5061     014B                     i1l2481:	
  5062                           ;incstack = 0
  5063                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5064                           
  5065                           
  5066                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5067     014B  0873               	movf	_eusartRxHead,w	;volatile
  5068     014C  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5069     014D  0086               	movwf	6
  5070     014E  0187               	clrf	7
  5071     014F  0181               	clrf	1
  5072     0150                     i1l2483:
  5073                           
  5074                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  5075     0150  0023               	movlb	3	; select bank3
  5076     0151  1D1D               	btfss	29,2	;volatile
  5077     0152  2954               	goto	u56_21
  5078     0153  2955               	goto	u56_20
  5079     0154                     u56_21:
  5080     0154  2960               	goto	i1l2489
  5081     0155                     u56_20:
  5082     0155                     i1l2485:
  5083                           
  5084                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5085     0155  0873               	movf	_eusartRxHead,w	;volatile
  5086     0156  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5087     0157  0086               	movwf	6
  5088     0158  0187               	clrf	7
  5089     0159  1481               	bsf	1,1
  5090     015A                     i1l2487:
  5091                           
  5092                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5093     015A  0021               	movlb	1	; select bank1
  5094     015B  0825               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  5095     015C  008A               	movwf	10
  5096     015D  0824               	movf	_EUSART_FramingErrorHandler^(0+128),w
  5097     015E  000A               	callw
  5098     015F  3181               	pagesel	$
  5099     0160                     i1l2489:
  5100                           
  5101                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5102     0160  0023               	movlb	3	; select bank3
  5103     0161  1C9D               	btfss	29,1	;volatile
  5104     0162  2964               	goto	u57_21
  5105     0163  2965               	goto	u57_20
  5106     0164                     u57_21:
  5107     0164  2970               	goto	i1l2495
  5108     0165                     u57_20:
  5109     0165                     i1l2491:
  5110                           
  5111                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5112     0165  0873               	movf	_eusartRxHead,w	;volatile
  5113     0166  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5114     0167  0086               	movwf	6
  5115     0168  0187               	clrf	7
  5116     0169  1501               	bsf	1,2
  5117     016A                     i1l2493:
  5118                           
  5119                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5120     016A  0021               	movlb	1	; select bank1
  5121     016B  0823               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  5122     016C  008A               	movwf	10
  5123     016D  0822               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  5124     016E  000A               	callw
  5125     016F  3181               	pagesel	$
  5126     0170                     i1l2495:
  5127                           
  5128                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5129     0170  0873               	movf	_eusartRxHead,w	;volatile
  5130     0171  3E44               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5131     0172  0086               	movwf	6
  5132     0173  0187               	clrf	7
  5133     0174  0801               	movf	1,w
  5134     0175  1903               	btfsc	3,2
  5135     0176  2978               	goto	u58_21
  5136     0177  2979               	goto	u58_20
  5137     0178                     u58_21:
  5138     0178  2980               	goto	i1l2499
  5139     0179                     u58_20:
  5140     0179                     i1l2497:
  5141                           
  5142                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5143     0179  0021               	movlb	1	; select bank1
  5144     017A  0821               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  5145     017B  008A               	movwf	10
  5146     017C  0820               	movf	_EUSART_ErrorHandler^(0+128),w
  5147     017D  000A               	callw
  5148     017E  3181               	pagesel	$
  5149                           
  5150                           ;mcc_generated_files/eusart.c: 233:     } else {
  5151     017F  2983               	goto	i1l549
  5152     0180                     i1l2499:
  5153                           
  5154                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5155     0180  3182  2261  3181   	fcall	_EUSART_RxDataHandler
  5156     0183                     i1l549:
  5157     0183  0008               	return
  5158     0184                     __end_of_EUSART_Receive_ISR:
  5159                           
  5160                           	psect	text45
  5161     0337                     __ptext45:	
  5162 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5163 ;; Defined at:
  5164 ;;		line 252 in file "mcc_generated_files/eusart.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		None
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5178 ;;      Params:         0       0       0       0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0       0       0       0
  5180 ;;      Temps:          0       0       0       0       0       0       0       0
  5181 ;;      Totals:         0       0       0       0       0       0       0       0
  5182 ;;Total ram usage:        0 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_EUSART_Initialize
  5188 ;;		_EUSART_Receive_ISR
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192     0337                     _EUSART_DefaultOverrunErrorHandler:	
  5193                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5194                           
  5195     0337                     i1l2433:	
  5196                           ;incstack = 0
  5197                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5198                           
  5199                           
  5200                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  5201     0337  0023               	movlb	3	; select bank3
  5202     0338  121D               	bcf	29,4	;volatile
  5203                           
  5204                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  5205     0339  161D               	bsf	29,4	;volatile
  5206     033A                     i1l559:
  5207     033A  0008               	return
  5208     033B                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5209                           
  5210                           	psect	text46
  5211     0355                     __ptext46:	
  5212 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5213 ;; Defined at:
  5214 ;;		line 250 in file "mcc_generated_files/eusart.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		None
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5228 ;;      Params:         0       0       0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_EUSART_Initialize
  5238 ;;		_EUSART_Receive_ISR
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242     0355                     _EUSART_DefaultFramingErrorHandler:	
  5243                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5244                           
  5245     0355                     i1l556:	
  5246                           ;incstack = 0
  5247                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5248                           
  5249     0355  0008               	return
  5250     0356                     __end_of_EUSART_DefaultFramingErrorHandler:
  5251                           
  5252                           	psect	text47
  5253     033B                     __ptext47:	
  5254 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5255 ;; Defined at:
  5256 ;;		line 260 in file "mcc_generated_files/eusart.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5270 ;;      Params:         0       0       0       0       0       0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0
  5273 ;;      Totals:         0       0       0       0       0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used: 1
  5276 ;; Hardware stack levels required when called: 1
  5277 ;; This function calls:
  5278 ;;		_EUSART_RxDataHandler
  5279 ;; This function is called by:
  5280 ;;		_EUSART_Initialize
  5281 ;;		_EUSART_Receive_ISR
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285     033B                     _EUSART_DefaultErrorHandler:	
  5286                           ;psect for function _EUSART_DefaultErrorHandler
  5287                           
  5288     033B                     i1l2435:	
  5289                           ;incstack = 0
  5290                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5291                           
  5292                           
  5293                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  5294     033B  3182  2261  3183   	fcall	_EUSART_RxDataHandler
  5295     033E                     i1l562:
  5296     033E  0008               	return
  5297     033F                     __end_of_EUSART_DefaultErrorHandler:
  5298                           
  5299                           	psect	text48
  5300     0261                     __ptext48:	
  5301 ;; *************** function _EUSART_RxDataHandler *****************
  5302 ;; Defined at:
  5303 ;;		line 240 in file "mcc_generated_files/eusart.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5317 ;;      Params:         0       0       0       0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0
  5319 ;;      Temps:          1       0       0       0       0       0       0       0
  5320 ;;      Totals:         1       0       0       0       0       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_EUSART_Receive_ISR
  5327 ;;		_EUSART_DefaultErrorHandler
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331     0261                     _EUSART_RxDataHandler:	
  5332                           ;psect for function _EUSART_RxDataHandler
  5333                           
  5334     0261                     i1l2375:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5337                           
  5338                           
  5339                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5340     0261  0873               	movf	_eusartRxHead,w
  5341     0262  3E4C               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5342     0263  0086               	movwf	6
  5343     0264  0187               	clrf	7
  5344     0265  0023               	movlb	3	; select bank3
  5345     0266  0819               	movf	25,w	;volatile
  5346     0267  0081               	movwf	1
  5347     0268                     i1l2377:
  5348     0268  3001               	movlw	1
  5349     0269  00F7               	movwf	??_EUSART_RxDataHandler
  5350     026A  0877               	movf	??_EUSART_RxDataHandler,w
  5351     026B  07F3               	addwf	_eusartRxHead,f	;volatile
  5352     026C                     i1l2379:
  5353                           
  5354                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5355     026C  3008               	movlw	8
  5356     026D  0273               	subwf	_eusartRxHead,w	;volatile
  5357     026E  1C03               	skipc
  5358     026F  2A71               	goto	u45_21
  5359     0270  2A72               	goto	u45_20
  5360     0271                     u45_21:
  5361     0271  2A73               	goto	i1l2383
  5362     0272                     u45_20:
  5363     0272                     i1l2381:
  5364                           
  5365                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  5366     0272  01F3               	clrf	_eusartRxHead	;volatile
  5367     0273                     i1l2383:
  5368                           
  5369                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  5370     0273  3001               	movlw	1
  5371     0274  00F7               	movwf	??_EUSART_RxDataHandler
  5372     0275  0877               	movf	??_EUSART_RxDataHandler,w
  5373     0276  07F1               	addwf	_eusartRxCount,f	;volatile
  5374     0277                     i1l553:
  5375     0277  0008               	return
  5376     0278                     __end_of_EUSART_RxDataHandler:
  5377     007E                     btemp	set	126	;btemp
  5378     007E                     int$flags	set	126
  5379     007E                     wtemp0	set	126
  5380                           
  5381                           	psect	idloc
  5382                           
  5383                           ;Config register IDLOC0 @ 0x8000
  5384                           ;	unspecified, using default values
  5385     8000                     	org	32768
  5386     8000  3FFF               	dw	16383
  5387                           
  5388                           ;Config register IDLOC1 @ 0x8001
  5389                           ;	unspecified, using default values
  5390     8001                     	org	32769
  5391     8001  3FFF               	dw	16383
  5392                           
  5393                           ;Config register IDLOC2 @ 0x8002
  5394                           ;	unspecified, using default values
  5395     8002                     	org	32770
  5396     8002  3FFF               	dw	16383
  5397                           
  5398                           ;Config register IDLOC3 @ 0x8003
  5399                           ;	unspecified, using default values
  5400     8003                     	org	32771
  5401     8003  3FFF               	dw	16383
  5402                           
  5403                           	psect	config
  5404                           
  5405                           ;Config register CONFIG1 @ 0x8007
  5406                           ;	Oscillator Selection
  5407                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5408                           ;	Watchdog Timer Enable
  5409                           ;	WDTE = OFF, WDT disabled
  5410                           ;	Power-up Timer Enable
  5411                           ;	PWRTE = OFF, PWRT disabled
  5412                           ;	MCLR Pin Function Select
  5413                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5414                           ;	Flash Program Memory Code Protection
  5415                           ;	CP = OFF, Program memory code protection is disabled
  5416                           ;	Data Memory Code Protection
  5417                           ;	CPD = OFF, Data memory code protection is disabled
  5418                           ;	Brown-out Reset Enable
  5419                           ;	BOREN = ON, Brown-out Reset enabled
  5420                           ;	Clock Out Enable
  5421                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5422                           ;	Internal/External Switchover
  5423                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5424                           ;	Fail-Safe Clock Monitor Enable
  5425                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5426     8007                     	org	32775
  5427     8007  3FE4               	dw	16356
  5428                           
  5429                           ;Config register CONFIG2 @ 0x8008
  5430                           ;	Flash Memory Self-Write Protection
  5431                           ;	WRT = OFF, Write protection off
  5432                           ;	Voltage Regulator Capacitor Enable
  5433                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5434                           ;	PLL Enable
  5435                           ;	PLLEN = OFF, 4x PLL disabled
  5436                           ;	Stack Overflow/Underflow Reset Enable
  5437                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5438                           ;	Brown-out Reset Voltage Selection
  5439                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5440                           ;	Low-Voltage Programming Enable
  5441                           ;	LVP = ON, Low-voltage programming enabled
  5442     8008                     	org	32776
  5443     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    32
    Data        12
    BSS         73
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0      80
    BANK1            80      2      10
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_MasterFsm$1904	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    NULL$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    S198$data_ptr	PTR unsigned char  size(2) Largest target is 0

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 0

    S198$callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S198$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     605
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     605
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1126
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0    1126
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0    1126
                                              3 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0     287
                                              1 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0     265
                                              0 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      66       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      66      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Apr 08 15:42:29 2023

                ?_EUSART_SetRxInterruptHandler 00A8                         ??_I2C_DO_SEND_ADR_READ 0077  
                      ??_I2C_DO_SEND_ADR_WRITE 0078                                    _SSPSTATbits 0214  
                                           l31 0260                                             l60 02BD  
                                           l63 032A                                             l57 0287  
                        ??_I2C_DO_SEND_RESTART 0077                                            l172 029C  
                                          l508 014A                                            l571 02EE  
                                          l565 02E8                                            l574 02A5  
                                          l568 02E2                                            l577 02DC  
                                          l586 02D4                                            l587 02D4  
                       ??_EUSART_RxDataHandler 0077                 ?_EUSART_SetFramingErrorHandler 00A8  
                                          wreg 0009                       ??_I2C_CallbackReturnStop 0079  
                                 _I2C_DO_RESET 02F5                                           l2801 029D  
                                         l2803 02E3                                           l2811 0249  
                                         l2805 02DD                                           l2821 0254  
                                         l2813 024B                                           l2807 02E9  
                                         l2831 025E                                           l2823 0257  
                                         l2815 024E                                           l2833 0294  
                                         l2841 02B7                                           l2825 0259  
                                         l2817 0250                                           l2809 0245  
                                         l2851 010E                                           l2835 0296  
                                         l2843 02BA                                           l2827 025B  
                                         l2819 0252                                           l2861 0125  
                                         l2853 0115                                           l2837 0298  
                                         l2845 02BB                                           l2829 025C  
                                         l2871 0143                                           l2863 0127  
                                         l2855 011E                                           l2839 029B  
                                         l2847 0327                                           l2873 0145  
                                         l2865 0128                                           l2857 0121  
                                         l2849 010C                                           l2881 0278  
                                         l2875 0146                                           l2867 0130  
                                         l2859 0123                                           l2883 02D1  
                                         l2877 0147                                           l2869 0138  
                                         l2799 02D7                                           l2879 0148  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATE 0110  
                                         _WPUB 020D                                           _WPUE 0210  
                                         _main 02D1                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0048  
                                _I2C_DO_RX_ACK 0304                  __end_of_OSCILLATOR_Initialize 02BE  
                                        ?_main 0077                                          i1l302 030D  
                                        i1l311 02FE                                          i1l232 0321  
                                        i1l320 01DC                                          i1l241 00A1  
                                        i1l305 0308                                          i1l225 032E  
                                        i1l314 02F9                                          i1l331 0352  
                                        i1l235 02AE                                          i1l244 00C0  
                                        i1l308 0303                                          i1l229 0204  
                                        i1l350 0326                                          i1l238 02B6  
                                        i1l328 0354                                          i1l424 001A  
                                        i1l353 0350                                          i1l257 00E3  
                                        i1l433 0046                                          i1l258 010B  
                                        i1l426 002B                                          i1l347 0347  
                                        i1l371 0332                                          i1l275 01B2  
                                        i1l427 0046                                          i1l428 003B  
                                        i1l365 034D                                          i1l269 02C4  
                                        i1l293 031C                                          i1l542 0244  
                                        i1l374 0336                                          i1l359 034A  
                                        i1l368 02F4                                          i1l296 0317  
                                        i1l392 0341                                          i1l553 0277  
                                        i1l562 033E                                          i1l539 0242  
                                        i1l395 0344                                          i1l299 0312  
                                        i1l556 0355                                          i1l549 0183  
                                        i1l559 033A                                          _RCREG 0199  
                                        _RCSTA 019D                                          u42_20 0071  
                                        u42_21 0070                                          u43_20 00BD  
                                        u43_21 00BC                                          u44_20 00DE  
                                        u44_21 00DD                                          u45_20 0272  
                                        u45_21 0271                                          u54_20 022B  
                                        u46_20 01E5                                          u70_20 0040  
                                        u54_21 022A                                          u46_21 01E4  
                                        u70_21 003F                                          u55_20 023C  
                                        u47_20 01ED                                          u71_20 0045  
                                        u63_20 000A                                          u55_21 023B  
                                        u47_21 01EC                                          u71_21 0044  
                                        u63_21 0009                                          u56_20 0155  
                                        u64_20 000F                                          u56_21 0154  
                                        u64_21 000E                                          u57_20 0165  
                                        u65_20 0014                              ??_I2C_DO_TX_EMPTY 0077  
                                        u57_21 0164                                          u65_21 0013  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u58_20 0179                                          u66_20 001F  
                                        u58_21 0178                                          u66_21 001E  
                                        u67_20 0024                                          u67_21 0023  
                                        u68_20 0030                                          u68_21 002F  
                                        u69_20 0035                                          u69_21 0034  
                                        _TXREG 019A                                          _TXSTA 019E  
                            __end_of_I2C_DO_RX 010C                              __end_of_I2C_DO_TX 00C1  
                               _WDT_Initialize 0327                        _I2C_MasterEnableRestart 034E  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0077  
                           ??_I2C_DO_SEND_STOP 0077                                __initialization 004A  
                                 __end_of_main 02D7                      ?_I2C_DO_SEND_RESTART_READ 0077  
                               ?_I2C_DO_RX_ACK 0077                    ?_INTERRUPT_InterruptManager 0077  
               ??_EUSART_SetRxInterruptHandler 0000                                         ??_main 0000  
                            ?_I2C_MasterIsNack 0077                              ?_I2C_MasterSetIrq 0077  
                           ??_I2C_MasterIsNack 0077                         __end_of_WDT_Initialize 032B  
                           ??_I2C_MasterSetIrq 0077      __end_of_EUSART_DefaultFramingErrorHandler 0356  
          ??_EUSART_DefaultFramingErrorHandler 0077             ?_EUSART_DefaultFramingErrorHandler 0077  
            _EUSART_DefaultFramingErrorHandler 0355                     _EUSART_OverrunErrorHandler 00A2  
              __end_of_I2C_CallbackReturnReset 0353                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l2201 0353  
                                       i1l2211 031D                                         i1l2205 0351  
                                       i1l2213 031F                                         i1l2221 02A8  
                                       i1l2301 02C0                                         i1l2143 034E  
                                       i1l2215 0320                                         i1l2223 02AD  
                                       i1l2231 02B5                                         i1l2303 02C3  
                                       i1l2145 034B                                         i1l2153 0323  
                                       i1l2313 018B                                         i1l2161 0313  
                                       i1l2209 033F                                         i1l2147 0333  
                                       i1l2315 018E                                         i1l2307 0184  
                                       i1l2219 02A6                                         i1l2227 02AF  
                                       i1l2243 0076                                         i1l2235 0069  
                                       i1l2155 0318                                         i1l2163 0316  
                                       i1l2331 0304                                         i1l2173 0345  
                                       i1l2149 02EF                                         i1l2309 0187  
                                       i1l2325 0194                                         i1l2229 02B1  
                                       i1l2261 00BF                                         i1l2253 007E  
                                       i1l2157 031B                                         i1l2333 0307  
                                       i1l2181 02FD                                         i1l2341 02F8  
                                       i1l2191 0348                                         i1l2319 0190  
                                       i1l2255 00A3                                         i1l2247 007A  
                                       i1l2239 0072                                         i1l2271 00CF  
                                       i1l2167 0309                                         i1l2431 01F0  
                                       i1l2423 01DD                                         i1l2433 0337  
                                       i1l2177 032F                                         i1l2257 00B2  
                                       i1l2273 00D4                                         i1l2193 030E  
                                       i1l2169 030C                                         i1l2185 02FF  
                                       i1l2337 02F5                                         i1l2353 01BC  
                                       i1l2345 01B3                                         i1l2425 01E0  
                                       i1l2435 033B                                         i1l2259 00BD  
                                       i1l2283 00E5                                         i1l2275 00DE  
                                       i1l2195 0311                                         i1l2187 0302  
                                       i1l2179 02FA                                         i1l2339 02F7  
                                       i1l2347 01B5                                         i1l2427 01E5  
                                       i1l2381 0272                                         i1l2293 00ED  
                                       i1l2277 00E1                                         i1l2269 00C1  
                                       i1l2349 01B8                                         i1l2429 01ED  
                                       i1l2383 0273                                         i1l2375 0261  
                                       i1l2471 022B                                         i1l2199 0342  
                                       i1l2287 00E9                                         i1l2359 01C0  
                                       i1l2377 0268                                         i1l2481 014B  
                                       i1l2473 0232                                         i1l2379 026C  
                                       i1l2491 0165                                         i1l2483 0150  
                                       i1l2475 0236                                         i1l2299 02BE  
                                       i1l2467 032B                                         i1l2493 016A  
                                       i1l2485 0155                                         i1l2477 023C  
                                       i1l2469 0225                                         i1l2661 0014  
                                       i1l2495 0170                                         i1l2487 015A  
                                       i1l2479 023D                                         i1l2671 0040  
                                       i1l2663 001F                                         i1l2655 0006  
                                       i1l2497 0179                                         i1l2489 0160  
                                       i1l2665 0024                                         i1l2657 000A  
                                       i1l2499 0180                                         i1l2667 0030  
                                       i1l2659 000F                                         i1l2669 0035  
                                       i1l2971 01A4                                         i1l2965 01D4  
                                       i1l2967 00FD                                         i1l2969 0093  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 0345                                  _I2C_MasterFsm 01DD  
                                _I2C_MasterIsr 032B                            _EUSART_Transmit_ISR 0225  
                          _I2C_DO_ADDRESS_NACK 01B3                           ?_I2C_MasterGetRxData 0077  
                              ?_WDT_Initialize 0077                      ??_I2C_MasterEnableRestart 0077  
                         ?_EUSART_Transmit_ISR 0077                              _SYSTEM_Initialize 0278  
                      __end_of__initialization 0065                             ?_SYSTEM_Initialize 0077  
                         ?_I2C_DO_ADDRESS_NACK 0077           __end_of_EUSART_SetTxInterruptHandler 02A6  
                 _EUSART_SetTxInterruptHandler 029D                                 __pcstackCOMMON 0077  
                               ?_I2C_MasterFsm 0077                                 ?_I2C_MasterIsr 0077  
                              ??_I2C_DO_RX_ACK 0077                                   __pidataBANK0 0288  
                       _I2C_CallbackReturnStop 0353                            ??_SYSTEM_Initialize 0000  
                __end_of_I2C_DO_SEND_ADR_WRITE 02B7                     ?_I2C_DO_SEND_RESTART_WRITE 0077  
                        ??_I2C_MasterGetRxData 0077                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0044                     __end_of_I2C_MasterClearIrq 0342  
              ??_EUSART_SetOverrunErrorHandler 0000                      __end_of_SYSTEM_Initialize 0288  
                        ??_EUSART_Transmit_ISR 0077                              _I2C_MasterSendAck 032F  
                                   __pbssBANK0 0020                                  ??_I2C_DO_IDLE 0077  
                                ??_I2C_DO_RCEN 0077                   __end_of_I2C_MasterSendTxData 0327  
                           ?_I2C_MasterSendAck 0077                              _I2C_MasterStartRx 0348  
                        ??_I2C_DO_ADDRESS_NACK 0077                            _I2C_DO_RX_NACK_STOP 02FF  
                           ?_I2C_MasterStartRx 0077                     __end_of_I2C_MasterSendNack 0337  
                                   __pmaintext 02D1                            ??_I2C_MasterSendAck 0077  
                ?_EUSART_SetTxInterruptHandler 00A8               _EUSART_TxDefaultInterruptHandler 006E  
                  __end_of_I2C_DO_SEND_RESTART 0313                                _I2C_DO_TX_EMPTY 0184  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0077  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0078  
                     ??_I2C_DO_RX_NACK_RESTART 0077              __end_of_I2C_DO_SEND_RESTART_WRITE 0318  
                         ?_I2C_DO_RX_NACK_STOP 0077                                  _eusartRxCount 0071  
                    __end_of_I2C_MasterSendAck 0333                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0000                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                    __end_of_I2C_MasterStartRx 034B                                      _I2C_DO_RX 00C1  
                                    _I2C_DO_TX 0069               __end_of_I2C_DO_SEND_RESTART_READ 031D  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 0322                            __end_of_I2C_DO_RCEN 02C5  
                                  _Temperature 0060                                 _I2C_MasterStop 034B  
                               _I2C_Initialize 0294                                        __ptext1 0278  
                                      __ptext2 0327                                        __ptext3 0245  
                                      __ptext4 02B7                                        __ptext5 0294  
                                      __ptext6 010C                                        __ptext7 029D  
                                      __ptext8 02D7                                        __ptext9 02DD  
                        ??_I2C_DO_RX_NACK_STOP 0077                          _OSCILLATOR_Initialize 02B7  
                     ??_PIN_MANAGER_Initialize 0000                  I2C_CallbackReturnReset@funPtr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 006C                                        clrloop0 02CC  
                   _SHT30_CMD_MEASURE_L_Enable 0068                           end_of_initialization 0065  
                   _SHT30_CMD_MEASURE_M_Enable 006A                                     ?_I2C_DO_RX 0077  
                                   ?_I2C_DO_TX 0077          __end_of_EUSART_SetOverrunErrorHandler 02E3  
                _EUSART_SetOverrunErrorHandler 02DD                                        init_ram 02C5  
                                      initloop 02C6                        __end_of_I2C_DO_TX_EMPTY 01B3  
                            _EUSART_Initialize 010C                    _SHT30_CMD_MEASURE_H_Disable 0066  
                           ?_EUSART_Initialize 0077                                      _RCSTAbits 019D  
                       __end_of_I2C_MasterStop 034E                         __end_of_I2C_Initialize 029D  
                  _SHT30_CMD_MEASURE_L_Disable 0062                    _SHT30_CMD_MEASURE_M_Disable 0064  
                          ??_EUSART_Initialize 0000                               ??_WDT_Initialize 0000  
               ??_EUSART_SetTxInterruptHandler 0000                           _I2C_MasterSendTxData 0322  
                    __end_of_EUSART_Initialize 014B                                    _I2C_DO_IDLE 031D  
                                  _I2C_DO_RCEN 02BE                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 0318  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterStop 0077  
                              ?_I2C_Initialize 0077                        _I2C_CallbackReturnReset 0351  
           __end_of_EUSART_DefaultErrorHandler 033F                     _EUSART_DefaultErrorHandler 033B  
                        ?_I2C_MasterSendTxData 0077                         ?_OSCILLATOR_Initialize 0077  
                  ??_I2C_DO_SEND_RESTART_WRITE 0077                            start_initialization 004A  
                                ?_I2C_DO_RESET 0077   EUSART_SetRxInterruptHandler@interruptHandler 00A8  
 EUSART_SetTxInterruptHandler@interruptHandler 00A8                                    ??_I2C_DO_RX 0077  
                                  ??_I2C_DO_TX 0078                 __end_of_I2C_CallbackReturnStop 0355  
                       _I2C_DO_RX_NACK_RESTART 02FA                               ?_I2C_DO_TX_EMPTY 0077  
                           _I2C_MasterClearIrq 033F                 ?_EUSART_SetOverrunErrorHandler 00A8  
                   _EUSART_FramingErrorHandler 00A4                         _EUSART_SetErrorHandler 02E9  
                          ?_I2C_MasterClearIrq 0077                    __end_of_I2C_MasterGetRxData 0348  
                                  __pdataBANK0 0062                          __end_of_I2C_DO_RX_ACK 0309  
                             _I2C_DO_SEND_STOP 0309                             _I2C_MasterSendNack 0333  
                     ?_I2C_MasterEnableRestart 0077                              _i2c_fsmStateTable 0205  
                  __end_of_EUSART_Transmit_ISR 0245                          _I2C_DO_SEND_ADR_WRITE 02AF  
                                  __pbssCOMMON 0070                                      ___latbits 0002  
                                __pcstackBANK0 0000                                  __pcstackBANK1 00A8  
                               ??_I2C_DO_RESET 0077                            ?_I2C_MasterSendNack 0077  
                 __end_of_I2C_DO_SEND_ADR_READ 02AF                           ??_I2C_MasterClearIrq 0077  
                  __end_of_I2C_DO_ADDRESS_NACK 01DD                     __end_of_EUSART_Receive_ISR 0184  
                             _I2C_MasterIsNack 02EF                      _I2C_DO_SEND_RESTART_WRITE 0313  
             _EUSART_RxDefaultInterruptHandler 00A6                               _I2C_MasterSetIrq 0342  
                                    __pnvBANK0 006E                                      __pnvBANK1 00A0  
                 __end_of_EUSART_RxDataHandler 0278                         _PIN_MANAGER_Initialize 0245  
                    ??_I2C_CallbackReturnReset 0079                           ??_I2C_MasterSendNack 0077  
                                 _eusartRxHead 0073                                   _eusartTxHead 0076  
                                 _eusartRxTail 0072                         ??_I2C_MasterSendTxData 0077  
                                 _eusartTxTail 0075                      __end_of_i2c_fsmStateTable 0225  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0074  
                               _eusartRxBuffer 004C                                 _eusartTxBuffer 0054  
       EUSART_SetErrorHandler@interruptHandler 00A8                                      clear_ram0 02CB  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0000                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 0205                          __end_of_I2C_MasterIsr 032F  
                  __end_of_I2C_DO_RX_NACK_STOP 0304      __end_of_EUSART_DefaultOverrunErrorHandler 033B  
          ??_EUSART_DefaultOverrunErrorHandler 0077             ?_EUSART_DefaultOverrunErrorHandler 0077  
            _EUSART_DefaultOverrunErrorHandler 0337                __end_of_I2C_MasterEnableRestart 0351  
                       ?_I2C_DO_SEND_ADR_WRITE 0077                       I2C_MasterSendTxData@data 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0077                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0077                                   ?_I2C_DO_RCEN 0077  
                                     _Humidity 005E                               ??_I2C_MasterStop 0077  
                             ??_I2C_Initialize 0000                           __end_of_I2C_DO_RESET 02FA  
                      ??_OSCILLATOR_Initialize 0000                            _EUSART_ErrorHandler 00A0  
                         _I2C_DO_SEND_ADR_READ 02A6                    ?_EUSART_DefaultErrorHandler 0077  
                         _EUSART_RxDataHandler 0261                                       __ptext10 02E3  
                                     __ptext11 02E9                                       __ptext20 0304  
                                     __ptext21 0309                                       __ptext13 032B  
                                     __ptext30 031D                                       __ptext22 030E  
                                     __ptext14 01DD                                       __ptext31 0184  
                                     __ptext23 0313                                       __ptext15 033F  
                                     __ptext40 034E                                       __ptext32 0342  
                                     __ptext24 0318                                       __ptext16 01B3  
                                     __ptext41 0351                                       __ptext33 02EF  
                                     __ptext25 02BE                                       __ptext17 02F5  
                                     __ptext42 0353                                       __ptext34 0322  
                                     __ptext26 00C1                                       __ptext18 02FA  
                                     __ptext43 0225                                       __ptext35 032F  
                                     __ptext27 0069                                       __ptext19 02FF  
                                     __ptext44 014B                                       __ptext36 0345  
                                     __ptext28 02AF                                       __ptext45 0337  
                                     __ptext37 0333                                       __ptext29 02A6  
                                     __ptext46 0355                                       __ptext38 0348  
                                     __ptext47 033B                                       __ptext39 034B  
                                     __ptext48 0261                        ?_I2C_DO_RX_NACK_RESTART 0077  
                     __end_of_I2C_DO_SEND_STOP 030E                        ?_EUSART_SetErrorHandler 00A8  
EUSART_SetOverrunErrorHandler@interruptHandler 00A8                                       int$flags 007E  
                        ?_I2C_DO_SEND_ADR_READ 0077             __end_of_INTERRUPT_InterruptManager 0048  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 02E9  
                _EUSART_SetFramingErrorHandler 02E3                       __end_of_I2C_MasterIsNack 02F5  
                     __end_of_I2C_MasterSetIrq 0345                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0077                 __end_of_I2C_DO_RX_NACK_RESTART 02FF  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0077  
               __end_of_EUSART_SetErrorHandler 02EF                            _I2C_DO_SEND_RESTART 030E  
         __end_of_EUSART_SetRxInterruptHandler 02DD                   _EUSART_SetRxInterruptHandler 02D7  
                           _EUSART_Receive_ISR 014B  EUSART_SetFramingErrorHandler@interruptHandler 00A8  
                                __pstringtext1 0205                           ?_I2C_DO_SEND_RESTART 0077  
                          ?_EUSART_Receive_ISR 0077                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                 __end_of_PIN_MANAGER_Initialize 0261  
                         ??_EUSART_Receive_ISR 0078                          _MSSP_InterruptHandler 005C  
