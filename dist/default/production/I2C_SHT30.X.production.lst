

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Apr 27 15:48:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	intentry,global,class=CODE,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	text63,local,class=CODE,merge=1,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	text84,local,class=CODE,merge=1,delta=2
   108                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text92,local,class=CODE,merge=1,delta=2
   116                           	psect	text93,local,class=CODE,merge=1,delta=2
   117                           	psect	text94,local,class=CODE,merge=1,delta=2
   118                           	psect	text95,local,class=CODE,merge=1,delta=2
   119                           	psect	text96,local,class=CODE,merge=1,delta=2
   120                           	psect	text97,local,class=CODE,merge=1,delta=2
   121                           	psect	text98,local,class=CODE,merge=1,delta=2
   122                           	psect	text99,local,class=CODE,merge=1,delta=2
   123                           	psect	text100,local,class=CODE,merge=1,delta=2
   124                           	psect	text101,local,class=CODE,merge=1,delta=2
   125                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text104,local,class=CODE,merge=1,delta=2
   128                           	psect	text105,local,class=CODE,merge=1,delta=2
   129                           	psect	text106,local,class=CODE,merge=1,delta=2
   130                           	psect	text107,local,class=CODE,merge=1,delta=2
   131                           	psect	text108,local,class=CODE,merge=1,delta=2
   132                           	psect	text109,local,class=CODE,merge=1,delta=2
   133                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   134                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   135                           	dabs	1,0x320,16
   136                           	dabs	1,0x2A0,80
   137                           	dabs	1,0x24A,38
   138                           	dabs	1,0x216A,0,_SES_Modbus
   139                           	dabs	1,0x7E,2
   140     0000                     
   141                           ; Version 2.40
   142                           ; Generated 17/11/2021 GMT
   143                           ; 
   144                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   145                           ; All rights reserved.
   146                           ; 
   147                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   148                           ; 
   149                           ; Redistribution and use in source and binary forms, with or without modification, are
   150                           ; permitted provided that the following conditions are met:
   151                           ; 
   152                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   153                           ;        conditions and the following disclaimer.
   154                           ; 
   155                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   156                           ;        of conditions and the following disclaimer in the documentation and/or other
   157                           ;        materials provided with the distribution. Publication is not required when
   158                           ;        this file is used in an embedded application.
   159                           ; 
   160                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   161                           ;        software without specific prior written permission.
   162                           ; 
   163                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   164                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   165                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   166                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   167                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   168                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   169                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   170                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   171                           ; 
   172                           ; 
   173                           ; Code-generator required, PIC16F1936 Definitions
   174                           ; 
   175                           ; SFR Addresses
   176     0000                     	;# 
   177     0001                     	;# 
   178     0002                     	;# 
   179     0003                     	;# 
   180     0004                     	;# 
   181     0005                     	;# 
   182     0006                     	;# 
   183     0007                     	;# 
   184     0008                     	;# 
   185     0009                     	;# 
   186     000A                     	;# 
   187     000B                     	;# 
   188     000C                     	;# 
   189     000D                     	;# 
   190     000E                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001E                     	;# 
   205     001F                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     0090                     	;# 
   210     0091                     	;# 
   211     0092                     	;# 
   212     0093                     	;# 
   213     0095                     	;# 
   214     0096                     	;# 
   215     0097                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009A                     	;# 
   219     009B                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     0110                     	;# 
   228     0111                     	;# 
   229     0112                     	;# 
   230     0113                     	;# 
   231     0114                     	;# 
   232     0115                     	;# 
   233     0116                     	;# 
   234     0117                     	;# 
   235     0118                     	;# 
   236     0119                     	;# 
   237     011A                     	;# 
   238     011B                     	;# 
   239     011D                     	;# 
   240     018C                     	;# 
   241     018D                     	;# 
   242     0191                     	;# 
   243     0191                     	;# 
   244     0192                     	;# 
   245     0193                     	;# 
   246     0193                     	;# 
   247     0193                     	;# 
   248     0194                     	;# 
   249     0195                     	;# 
   250     0196                     	;# 
   251     0199                     	;# 
   252     019A                     	;# 
   253     019B                     	;# 
   254     019B                     	;# 
   255     019B                     	;# 
   256     019B                     	;# 
   257     019C                     	;# 
   258     019C                     	;# 
   259     019D                     	;# 
   260     019E                     	;# 
   261     019F                     	;# 
   262     020D                     	;# 
   263     0210                     	;# 
   264     0211                     	;# 
   265     0212                     	;# 
   266     0213                     	;# 
   267     0214                     	;# 
   268     0215                     	;# 
   269     0215                     	;# 
   270     0216                     	;# 
   271     0217                     	;# 
   272     0291                     	;# 
   273     0291                     	;# 
   274     0292                     	;# 
   275     0293                     	;# 
   276     0294                     	;# 
   277     0295                     	;# 
   278     0295                     	;# 
   279     0296                     	;# 
   280     0298                     	;# 
   281     0298                     	;# 
   282     0299                     	;# 
   283     029A                     	;# 
   284     029B                     	;# 
   285     029C                     	;# 
   286     029C                     	;# 
   287     029D                     	;# 
   288     029E                     	;# 
   289     029F                     	;# 
   290     0311                     	;# 
   291     0311                     	;# 
   292     0312                     	;# 
   293     0313                     	;# 
   294     0314                     	;# 
   295     0315                     	;# 
   296     0315                     	;# 
   297     0316                     	;# 
   298     0318                     	;# 
   299     0318                     	;# 
   300     0319                     	;# 
   301     031A                     	;# 
   302     031C                     	;# 
   303     031C                     	;# 
   304     031D                     	;# 
   305     031E                     	;# 
   306     0394                     	;# 
   307     0395                     	;# 
   308     0396                     	;# 
   309     0415                     	;# 
   310     0416                     	;# 
   311     0417                     	;# 
   312     041C                     	;# 
   313     041D                     	;# 
   314     041E                     	;# 
   315     0791                     	;# 
   316     0792                     	;# 
   317     0793                     	;# 
   318     0794                     	;# 
   319     0795                     	;# 
   320     0798                     	;# 
   321     0799                     	;# 
   322     07A0                     	;# 
   323     07A1                     	;# 
   324     07A3                     	;# 
   325     07A4                     	;# 
   326     07A6                     	;# 
   327     07A7                     	;# 
   328     07A9                     	;# 
   329     07AA                     	;# 
   330     0FE4                     	;# 
   331     0FE5                     	;# 
   332     0FE6                     	;# 
   333     0FE7                     	;# 
   334     0FE8                     	;# 
   335     0FE9                     	;# 
   336     0FEA                     	;# 
   337     0FEB                     	;# 
   338     0FED                     	;# 
   339     0FEE                     	;# 
   340     0FEF                     	;# 
   341     0000                     	;# 
   342     0001                     	;# 
   343     0002                     	;# 
   344     0003                     	;# 
   345     0004                     	;# 
   346     0005                     	;# 
   347     0006                     	;# 
   348     0007                     	;# 
   349     0008                     	;# 
   350     0009                     	;# 
   351     000A                     	;# 
   352     000B                     	;# 
   353     000C                     	;# 
   354     000D                     	;# 
   355     000E                     	;# 
   356     0010                     	;# 
   357     0011                     	;# 
   358     0012                     	;# 
   359     0013                     	;# 
   360     0015                     	;# 
   361     0016                     	;# 
   362     0016                     	;# 
   363     0017                     	;# 
   364     0018                     	;# 
   365     0019                     	;# 
   366     001A                     	;# 
   367     001B                     	;# 
   368     001C                     	;# 
   369     001E                     	;# 
   370     001F                     	;# 
   371     008C                     	;# 
   372     008D                     	;# 
   373     008E                     	;# 
   374     0090                     	;# 
   375     0091                     	;# 
   376     0092                     	;# 
   377     0093                     	;# 
   378     0095                     	;# 
   379     0096                     	;# 
   380     0097                     	;# 
   381     0098                     	;# 
   382     0099                     	;# 
   383     009A                     	;# 
   384     009B                     	;# 
   385     009B                     	;# 
   386     009C                     	;# 
   387     009D                     	;# 
   388     009E                     	;# 
   389     010C                     	;# 
   390     010D                     	;# 
   391     010E                     	;# 
   392     0110                     	;# 
   393     0111                     	;# 
   394     0112                     	;# 
   395     0113                     	;# 
   396     0114                     	;# 
   397     0115                     	;# 
   398     0116                     	;# 
   399     0117                     	;# 
   400     0118                     	;# 
   401     0119                     	;# 
   402     011A                     	;# 
   403     011B                     	;# 
   404     011D                     	;# 
   405     018C                     	;# 
   406     018D                     	;# 
   407     0191                     	;# 
   408     0191                     	;# 
   409     0192                     	;# 
   410     0193                     	;# 
   411     0193                     	;# 
   412     0193                     	;# 
   413     0194                     	;# 
   414     0195                     	;# 
   415     0196                     	;# 
   416     0199                     	;# 
   417     019A                     	;# 
   418     019B                     	;# 
   419     019B                     	;# 
   420     019B                     	;# 
   421     019B                     	;# 
   422     019C                     	;# 
   423     019C                     	;# 
   424     019D                     	;# 
   425     019E                     	;# 
   426     019F                     	;# 
   427     020D                     	;# 
   428     0210                     	;# 
   429     0211                     	;# 
   430     0212                     	;# 
   431     0213                     	;# 
   432     0214                     	;# 
   433     0215                     	;# 
   434     0215                     	;# 
   435     0216                     	;# 
   436     0217                     	;# 
   437     0291                     	;# 
   438     0291                     	;# 
   439     0292                     	;# 
   440     0293                     	;# 
   441     0294                     	;# 
   442     0295                     	;# 
   443     0295                     	;# 
   444     0296                     	;# 
   445     0298                     	;# 
   446     0298                     	;# 
   447     0299                     	;# 
   448     029A                     	;# 
   449     029B                     	;# 
   450     029C                     	;# 
   451     029C                     	;# 
   452     029D                     	;# 
   453     029E                     	;# 
   454     029F                     	;# 
   455     0311                     	;# 
   456     0311                     	;# 
   457     0312                     	;# 
   458     0313                     	;# 
   459     0314                     	;# 
   460     0315                     	;# 
   461     0315                     	;# 
   462     0316                     	;# 
   463     0318                     	;# 
   464     0318                     	;# 
   465     0319                     	;# 
   466     031A                     	;# 
   467     031C                     	;# 
   468     031C                     	;# 
   469     031D                     	;# 
   470     031E                     	;# 
   471     0394                     	;# 
   472     0395                     	;# 
   473     0396                     	;# 
   474     0415                     	;# 
   475     0416                     	;# 
   476     0417                     	;# 
   477     041C                     	;# 
   478     041D                     	;# 
   479     041E                     	;# 
   480     0791                     	;# 
   481     0792                     	;# 
   482     0793                     	;# 
   483     0794                     	;# 
   484     0795                     	;# 
   485     0798                     	;# 
   486     0799                     	;# 
   487     07A0                     	;# 
   488     07A1                     	;# 
   489     07A3                     	;# 
   490     07A4                     	;# 
   491     07A6                     	;# 
   492     07A7                     	;# 
   493     07A9                     	;# 
   494     07AA                     	;# 
   495     0FE4                     	;# 
   496     0FE5                     	;# 
   497     0FE6                     	;# 
   498     0FE7                     	;# 
   499     0FE8                     	;# 
   500     0FE9                     	;# 
   501     0FEA                     	;# 
   502     0FEB                     	;# 
   503     0FED                     	;# 
   504     0FEE                     	;# 
   505     0FEF                     	;# 
   506     0000                     	;# 
   507     0001                     	;# 
   508     0002                     	;# 
   509     0003                     	;# 
   510     0004                     	;# 
   511     0005                     	;# 
   512     0006                     	;# 
   513     0007                     	;# 
   514     0008                     	;# 
   515     0009                     	;# 
   516     000A                     	;# 
   517     000B                     	;# 
   518     000C                     	;# 
   519     000D                     	;# 
   520     000E                     	;# 
   521     0010                     	;# 
   522     0011                     	;# 
   523     0012                     	;# 
   524     0013                     	;# 
   525     0015                     	;# 
   526     0016                     	;# 
   527     0016                     	;# 
   528     0017                     	;# 
   529     0018                     	;# 
   530     0019                     	;# 
   531     001A                     	;# 
   532     001B                     	;# 
   533     001C                     	;# 
   534     001E                     	;# 
   535     001F                     	;# 
   536     008C                     	;# 
   537     008D                     	;# 
   538     008E                     	;# 
   539     0090                     	;# 
   540     0091                     	;# 
   541     0092                     	;# 
   542     0093                     	;# 
   543     0095                     	;# 
   544     0096                     	;# 
   545     0097                     	;# 
   546     0098                     	;# 
   547     0099                     	;# 
   548     009A                     	;# 
   549     009B                     	;# 
   550     009B                     	;# 
   551     009C                     	;# 
   552     009D                     	;# 
   553     009E                     	;# 
   554     010C                     	;# 
   555     010D                     	;# 
   556     010E                     	;# 
   557     0110                     	;# 
   558     0111                     	;# 
   559     0112                     	;# 
   560     0113                     	;# 
   561     0114                     	;# 
   562     0115                     	;# 
   563     0116                     	;# 
   564     0117                     	;# 
   565     0118                     	;# 
   566     0119                     	;# 
   567     011A                     	;# 
   568     011B                     	;# 
   569     011D                     	;# 
   570     018C                     	;# 
   571     018D                     	;# 
   572     0191                     	;# 
   573     0191                     	;# 
   574     0192                     	;# 
   575     0193                     	;# 
   576     0193                     	;# 
   577     0193                     	;# 
   578     0194                     	;# 
   579     0195                     	;# 
   580     0196                     	;# 
   581     0199                     	;# 
   582     019A                     	;# 
   583     019B                     	;# 
   584     019B                     	;# 
   585     019B                     	;# 
   586     019B                     	;# 
   587     019C                     	;# 
   588     019C                     	;# 
   589     019D                     	;# 
   590     019E                     	;# 
   591     019F                     	;# 
   592     020D                     	;# 
   593     0210                     	;# 
   594     0211                     	;# 
   595     0212                     	;# 
   596     0213                     	;# 
   597     0214                     	;# 
   598     0215                     	;# 
   599     0215                     	;# 
   600     0216                     	;# 
   601     0217                     	;# 
   602     0291                     	;# 
   603     0291                     	;# 
   604     0292                     	;# 
   605     0293                     	;# 
   606     0294                     	;# 
   607     0295                     	;# 
   608     0295                     	;# 
   609     0296                     	;# 
   610     0298                     	;# 
   611     0298                     	;# 
   612     0299                     	;# 
   613     029A                     	;# 
   614     029B                     	;# 
   615     029C                     	;# 
   616     029C                     	;# 
   617     029D                     	;# 
   618     029E                     	;# 
   619     029F                     	;# 
   620     0311                     	;# 
   621     0311                     	;# 
   622     0312                     	;# 
   623     0313                     	;# 
   624     0314                     	;# 
   625     0315                     	;# 
   626     0315                     	;# 
   627     0316                     	;# 
   628     0318                     	;# 
   629     0318                     	;# 
   630     0319                     	;# 
   631     031A                     	;# 
   632     031C                     	;# 
   633     031C                     	;# 
   634     031D                     	;# 
   635     031E                     	;# 
   636     0394                     	;# 
   637     0395                     	;# 
   638     0396                     	;# 
   639     0415                     	;# 
   640     0416                     	;# 
   641     0417                     	;# 
   642     041C                     	;# 
   643     041D                     	;# 
   644     041E                     	;# 
   645     0791                     	;# 
   646     0792                     	;# 
   647     0793                     	;# 
   648     0794                     	;# 
   649     0795                     	;# 
   650     0798                     	;# 
   651     0799                     	;# 
   652     07A0                     	;# 
   653     07A1                     	;# 
   654     07A3                     	;# 
   655     07A4                     	;# 
   656     07A6                     	;# 
   657     07A7                     	;# 
   658     07A9                     	;# 
   659     07AA                     	;# 
   660     0FE4                     	;# 
   661     0FE5                     	;# 
   662     0FE6                     	;# 
   663     0FE7                     	;# 
   664     0FE8                     	;# 
   665     0FE9                     	;# 
   666     0FEA                     	;# 
   667     0FEB                     	;# 
   668     0FED                     	;# 
   669     0FEE                     	;# 
   670     0FEF                     	;# 
   671     0000                     	;# 
   672     0001                     	;# 
   673     0002                     	;# 
   674     0003                     	;# 
   675     0004                     	;# 
   676     0005                     	;# 
   677     0006                     	;# 
   678     0007                     	;# 
   679     0008                     	;# 
   680     0009                     	;# 
   681     000A                     	;# 
   682     000B                     	;# 
   683     000C                     	;# 
   684     000D                     	;# 
   685     000E                     	;# 
   686     0010                     	;# 
   687     0011                     	;# 
   688     0012                     	;# 
   689     0013                     	;# 
   690     0015                     	;# 
   691     0016                     	;# 
   692     0016                     	;# 
   693     0017                     	;# 
   694     0018                     	;# 
   695     0019                     	;# 
   696     001A                     	;# 
   697     001B                     	;# 
   698     001C                     	;# 
   699     001E                     	;# 
   700     001F                     	;# 
   701     008C                     	;# 
   702     008D                     	;# 
   703     008E                     	;# 
   704     0090                     	;# 
   705     0091                     	;# 
   706     0092                     	;# 
   707     0093                     	;# 
   708     0095                     	;# 
   709     0096                     	;# 
   710     0097                     	;# 
   711     0098                     	;# 
   712     0099                     	;# 
   713     009A                     	;# 
   714     009B                     	;# 
   715     009B                     	;# 
   716     009C                     	;# 
   717     009D                     	;# 
   718     009E                     	;# 
   719     010C                     	;# 
   720     010D                     	;# 
   721     010E                     	;# 
   722     0110                     	;# 
   723     0111                     	;# 
   724     0112                     	;# 
   725     0113                     	;# 
   726     0114                     	;# 
   727     0115                     	;# 
   728     0116                     	;# 
   729     0117                     	;# 
   730     0118                     	;# 
   731     0119                     	;# 
   732     011A                     	;# 
   733     011B                     	;# 
   734     011D                     	;# 
   735     018C                     	;# 
   736     018D                     	;# 
   737     0191                     	;# 
   738     0191                     	;# 
   739     0192                     	;# 
   740     0193                     	;# 
   741     0193                     	;# 
   742     0193                     	;# 
   743     0194                     	;# 
   744     0195                     	;# 
   745     0196                     	;# 
   746     0199                     	;# 
   747     019A                     	;# 
   748     019B                     	;# 
   749     019B                     	;# 
   750     019B                     	;# 
   751     019B                     	;# 
   752     019C                     	;# 
   753     019C                     	;# 
   754     019D                     	;# 
   755     019E                     	;# 
   756     019F                     	;# 
   757     020D                     	;# 
   758     0210                     	;# 
   759     0211                     	;# 
   760     0212                     	;# 
   761     0213                     	;# 
   762     0214                     	;# 
   763     0215                     	;# 
   764     0215                     	;# 
   765     0216                     	;# 
   766     0217                     	;# 
   767     0291                     	;# 
   768     0291                     	;# 
   769     0292                     	;# 
   770     0293                     	;# 
   771     0294                     	;# 
   772     0295                     	;# 
   773     0295                     	;# 
   774     0296                     	;# 
   775     0298                     	;# 
   776     0298                     	;# 
   777     0299                     	;# 
   778     029A                     	;# 
   779     029B                     	;# 
   780     029C                     	;# 
   781     029C                     	;# 
   782     029D                     	;# 
   783     029E                     	;# 
   784     029F                     	;# 
   785     0311                     	;# 
   786     0311                     	;# 
   787     0312                     	;# 
   788     0313                     	;# 
   789     0314                     	;# 
   790     0315                     	;# 
   791     0315                     	;# 
   792     0316                     	;# 
   793     0318                     	;# 
   794     0318                     	;# 
   795     0319                     	;# 
   796     031A                     	;# 
   797     031C                     	;# 
   798     031C                     	;# 
   799     031D                     	;# 
   800     031E                     	;# 
   801     0394                     	;# 
   802     0395                     	;# 
   803     0396                     	;# 
   804     0415                     	;# 
   805     0416                     	;# 
   806     0417                     	;# 
   807     041C                     	;# 
   808     041D                     	;# 
   809     041E                     	;# 
   810     0791                     	;# 
   811     0792                     	;# 
   812     0793                     	;# 
   813     0794                     	;# 
   814     0795                     	;# 
   815     0798                     	;# 
   816     0799                     	;# 
   817     07A0                     	;# 
   818     07A1                     	;# 
   819     07A3                     	;# 
   820     07A4                     	;# 
   821     07A6                     	;# 
   822     07A7                     	;# 
   823     07A9                     	;# 
   824     07AA                     	;# 
   825     0FE4                     	;# 
   826     0FE5                     	;# 
   827     0FE6                     	;# 
   828     0FE7                     	;# 
   829     0FE8                     	;# 
   830     0FE9                     	;# 
   831     0FEA                     	;# 
   832     0FEB                     	;# 
   833     0FED                     	;# 
   834     0FEE                     	;# 
   835     0FEF                     	;# 
   836     0000                     	;# 
   837     0001                     	;# 
   838     0002                     	;# 
   839     0003                     	;# 
   840     0004                     	;# 
   841     0005                     	;# 
   842     0006                     	;# 
   843     0007                     	;# 
   844     0008                     	;# 
   845     0009                     	;# 
   846     000A                     	;# 
   847     000B                     	;# 
   848     000C                     	;# 
   849     000D                     	;# 
   850     000E                     	;# 
   851     0010                     	;# 
   852     0011                     	;# 
   853     0012                     	;# 
   854     0013                     	;# 
   855     0015                     	;# 
   856     0016                     	;# 
   857     0016                     	;# 
   858     0017                     	;# 
   859     0018                     	;# 
   860     0019                     	;# 
   861     001A                     	;# 
   862     001B                     	;# 
   863     001C                     	;# 
   864     001E                     	;# 
   865     001F                     	;# 
   866     008C                     	;# 
   867     008D                     	;# 
   868     008E                     	;# 
   869     0090                     	;# 
   870     0091                     	;# 
   871     0092                     	;# 
   872     0093                     	;# 
   873     0095                     	;# 
   874     0096                     	;# 
   875     0097                     	;# 
   876     0098                     	;# 
   877     0099                     	;# 
   878     009A                     	;# 
   879     009B                     	;# 
   880     009B                     	;# 
   881     009C                     	;# 
   882     009D                     	;# 
   883     009E                     	;# 
   884     010C                     	;# 
   885     010D                     	;# 
   886     010E                     	;# 
   887     0110                     	;# 
   888     0111                     	;# 
   889     0112                     	;# 
   890     0113                     	;# 
   891     0114                     	;# 
   892     0115                     	;# 
   893     0116                     	;# 
   894     0117                     	;# 
   895     0118                     	;# 
   896     0119                     	;# 
   897     011A                     	;# 
   898     011B                     	;# 
   899     011D                     	;# 
   900     018C                     	;# 
   901     018D                     	;# 
   902     0191                     	;# 
   903     0191                     	;# 
   904     0192                     	;# 
   905     0193                     	;# 
   906     0193                     	;# 
   907     0193                     	;# 
   908     0194                     	;# 
   909     0195                     	;# 
   910     0196                     	;# 
   911     0199                     	;# 
   912     019A                     	;# 
   913     019B                     	;# 
   914     019B                     	;# 
   915     019B                     	;# 
   916     019B                     	;# 
   917     019C                     	;# 
   918     019C                     	;# 
   919     019D                     	;# 
   920     019E                     	;# 
   921     019F                     	;# 
   922     020D                     	;# 
   923     0210                     	;# 
   924     0211                     	;# 
   925     0212                     	;# 
   926     0213                     	;# 
   927     0214                     	;# 
   928     0215                     	;# 
   929     0215                     	;# 
   930     0216                     	;# 
   931     0217                     	;# 
   932     0291                     	;# 
   933     0291                     	;# 
   934     0292                     	;# 
   935     0293                     	;# 
   936     0294                     	;# 
   937     0295                     	;# 
   938     0295                     	;# 
   939     0296                     	;# 
   940     0298                     	;# 
   941     0298                     	;# 
   942     0299                     	;# 
   943     029A                     	;# 
   944     029B                     	;# 
   945     029C                     	;# 
   946     029C                     	;# 
   947     029D                     	;# 
   948     029E                     	;# 
   949     029F                     	;# 
   950     0311                     	;# 
   951     0311                     	;# 
   952     0312                     	;# 
   953     0313                     	;# 
   954     0314                     	;# 
   955     0315                     	;# 
   956     0315                     	;# 
   957     0316                     	;# 
   958     0318                     	;# 
   959     0318                     	;# 
   960     0319                     	;# 
   961     031A                     	;# 
   962     031C                     	;# 
   963     031C                     	;# 
   964     031D                     	;# 
   965     031E                     	;# 
   966     0394                     	;# 
   967     0395                     	;# 
   968     0396                     	;# 
   969     0415                     	;# 
   970     0416                     	;# 
   971     0417                     	;# 
   972     041C                     	;# 
   973     041D                     	;# 
   974     041E                     	;# 
   975     0791                     	;# 
   976     0792                     	;# 
   977     0793                     	;# 
   978     0794                     	;# 
   979     0795                     	;# 
   980     0798                     	;# 
   981     0799                     	;# 
   982     07A0                     	;# 
   983     07A1                     	;# 
   984     07A3                     	;# 
   985     07A4                     	;# 
   986     07A6                     	;# 
   987     07A7                     	;# 
   988     07A9                     	;# 
   989     07AA                     	;# 
   990     0FE4                     	;# 
   991     0FE5                     	;# 
   992     0FE6                     	;# 
   993     0FE7                     	;# 
   994     0FE8                     	;# 
   995     0FE9                     	;# 
   996     0FEA                     	;# 
   997     0FEB                     	;# 
   998     0FED                     	;# 
   999     0FEE                     	;# 
  1000     0FEF                     	;# 
  1001     0000                     	;# 
  1002     0001                     	;# 
  1003     0002                     	;# 
  1004     0003                     	;# 
  1005     0004                     	;# 
  1006     0005                     	;# 
  1007     0006                     	;# 
  1008     0007                     	;# 
  1009     0008                     	;# 
  1010     0009                     	;# 
  1011     000A                     	;# 
  1012     000B                     	;# 
  1013     000C                     	;# 
  1014     000D                     	;# 
  1015     000E                     	;# 
  1016     0010                     	;# 
  1017     0011                     	;# 
  1018     0012                     	;# 
  1019     0013                     	;# 
  1020     0015                     	;# 
  1021     0016                     	;# 
  1022     0016                     	;# 
  1023     0017                     	;# 
  1024     0018                     	;# 
  1025     0019                     	;# 
  1026     001A                     	;# 
  1027     001B                     	;# 
  1028     001C                     	;# 
  1029     001E                     	;# 
  1030     001F                     	;# 
  1031     008C                     	;# 
  1032     008D                     	;# 
  1033     008E                     	;# 
  1034     0090                     	;# 
  1035     0091                     	;# 
  1036     0092                     	;# 
  1037     0093                     	;# 
  1038     0095                     	;# 
  1039     0096                     	;# 
  1040     0097                     	;# 
  1041     0098                     	;# 
  1042     0099                     	;# 
  1043     009A                     	;# 
  1044     009B                     	;# 
  1045     009B                     	;# 
  1046     009C                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     010C                     	;# 
  1050     010D                     	;# 
  1051     010E                     	;# 
  1052     0110                     	;# 
  1053     0111                     	;# 
  1054     0112                     	;# 
  1055     0113                     	;# 
  1056     0114                     	;# 
  1057     0115                     	;# 
  1058     0116                     	;# 
  1059     0117                     	;# 
  1060     0118                     	;# 
  1061     0119                     	;# 
  1062     011A                     	;# 
  1063     011B                     	;# 
  1064     011D                     	;# 
  1065     018C                     	;# 
  1066     018D                     	;# 
  1067     0191                     	;# 
  1068     0191                     	;# 
  1069     0192                     	;# 
  1070     0193                     	;# 
  1071     0193                     	;# 
  1072     0193                     	;# 
  1073     0194                     	;# 
  1074     0195                     	;# 
  1075     0196                     	;# 
  1076     0199                     	;# 
  1077     019A                     	;# 
  1078     019B                     	;# 
  1079     019B                     	;# 
  1080     019B                     	;# 
  1081     019B                     	;# 
  1082     019C                     	;# 
  1083     019C                     	;# 
  1084     019D                     	;# 
  1085     019E                     	;# 
  1086     019F                     	;# 
  1087     020D                     	;# 
  1088     0210                     	;# 
  1089     0211                     	;# 
  1090     0212                     	;# 
  1091     0213                     	;# 
  1092     0214                     	;# 
  1093     0215                     	;# 
  1094     0215                     	;# 
  1095     0216                     	;# 
  1096     0217                     	;# 
  1097     0291                     	;# 
  1098     0291                     	;# 
  1099     0292                     	;# 
  1100     0293                     	;# 
  1101     0294                     	;# 
  1102     0295                     	;# 
  1103     0295                     	;# 
  1104     0296                     	;# 
  1105     0298                     	;# 
  1106     0298                     	;# 
  1107     0299                     	;# 
  1108     029A                     	;# 
  1109     029B                     	;# 
  1110     029C                     	;# 
  1111     029C                     	;# 
  1112     029D                     	;# 
  1113     029E                     	;# 
  1114     029F                     	;# 
  1115     0311                     	;# 
  1116     0311                     	;# 
  1117     0312                     	;# 
  1118     0313                     	;# 
  1119     0314                     	;# 
  1120     0315                     	;# 
  1121     0315                     	;# 
  1122     0316                     	;# 
  1123     0318                     	;# 
  1124     0318                     	;# 
  1125     0319                     	;# 
  1126     031A                     	;# 
  1127     031C                     	;# 
  1128     031C                     	;# 
  1129     031D                     	;# 
  1130     031E                     	;# 
  1131     0394                     	;# 
  1132     0395                     	;# 
  1133     0396                     	;# 
  1134     0415                     	;# 
  1135     0416                     	;# 
  1136     0417                     	;# 
  1137     041C                     	;# 
  1138     041D                     	;# 
  1139     041E                     	;# 
  1140     0791                     	;# 
  1141     0792                     	;# 
  1142     0793                     	;# 
  1143     0794                     	;# 
  1144     0795                     	;# 
  1145     0798                     	;# 
  1146     0799                     	;# 
  1147     07A0                     	;# 
  1148     07A1                     	;# 
  1149     07A3                     	;# 
  1150     07A4                     	;# 
  1151     07A6                     	;# 
  1152     07A7                     	;# 
  1153     07A9                     	;# 
  1154     07AA                     	;# 
  1155     0FE4                     	;# 
  1156     0FE5                     	;# 
  1157     0FE6                     	;# 
  1158     0FE7                     	;# 
  1159     0FE8                     	;# 
  1160     0FE9                     	;# 
  1161     0FEA                     	;# 
  1162     0FEB                     	;# 
  1163     0FED                     	;# 
  1164     0FEE                     	;# 
  1165     0FEF                     	;# 
  1166     0000                     	;# 
  1167     0001                     	;# 
  1168     0002                     	;# 
  1169     0003                     	;# 
  1170     0004                     	;# 
  1171     0005                     	;# 
  1172     0006                     	;# 
  1173     0007                     	;# 
  1174     0008                     	;# 
  1175     0009                     	;# 
  1176     000A                     	;# 
  1177     000B                     	;# 
  1178     000C                     	;# 
  1179     000D                     	;# 
  1180     000E                     	;# 
  1181     0010                     	;# 
  1182     0011                     	;# 
  1183     0012                     	;# 
  1184     0013                     	;# 
  1185     0015                     	;# 
  1186     0016                     	;# 
  1187     0016                     	;# 
  1188     0017                     	;# 
  1189     0018                     	;# 
  1190     0019                     	;# 
  1191     001A                     	;# 
  1192     001B                     	;# 
  1193     001C                     	;# 
  1194     001E                     	;# 
  1195     001F                     	;# 
  1196     008C                     	;# 
  1197     008D                     	;# 
  1198     008E                     	;# 
  1199     0090                     	;# 
  1200     0091                     	;# 
  1201     0092                     	;# 
  1202     0093                     	;# 
  1203     0095                     	;# 
  1204     0096                     	;# 
  1205     0097                     	;# 
  1206     0098                     	;# 
  1207     0099                     	;# 
  1208     009A                     	;# 
  1209     009B                     	;# 
  1210     009B                     	;# 
  1211     009C                     	;# 
  1212     009D                     	;# 
  1213     009E                     	;# 
  1214     010C                     	;# 
  1215     010D                     	;# 
  1216     010E                     	;# 
  1217     0110                     	;# 
  1218     0111                     	;# 
  1219     0112                     	;# 
  1220     0113                     	;# 
  1221     0114                     	;# 
  1222     0115                     	;# 
  1223     0116                     	;# 
  1224     0117                     	;# 
  1225     0118                     	;# 
  1226     0119                     	;# 
  1227     011A                     	;# 
  1228     011B                     	;# 
  1229     011D                     	;# 
  1230     018C                     	;# 
  1231     018D                     	;# 
  1232     0191                     	;# 
  1233     0191                     	;# 
  1234     0192                     	;# 
  1235     0193                     	;# 
  1236     0193                     	;# 
  1237     0193                     	;# 
  1238     0194                     	;# 
  1239     0195                     	;# 
  1240     0196                     	;# 
  1241     0199                     	;# 
  1242     019A                     	;# 
  1243     019B                     	;# 
  1244     019B                     	;# 
  1245     019B                     	;# 
  1246     019B                     	;# 
  1247     019C                     	;# 
  1248     019C                     	;# 
  1249     019D                     	;# 
  1250     019E                     	;# 
  1251     019F                     	;# 
  1252     020D                     	;# 
  1253     0210                     	;# 
  1254     0211                     	;# 
  1255     0212                     	;# 
  1256     0213                     	;# 
  1257     0214                     	;# 
  1258     0215                     	;# 
  1259     0215                     	;# 
  1260     0216                     	;# 
  1261     0217                     	;# 
  1262     0291                     	;# 
  1263     0291                     	;# 
  1264     0292                     	;# 
  1265     0293                     	;# 
  1266     0294                     	;# 
  1267     0295                     	;# 
  1268     0295                     	;# 
  1269     0296                     	;# 
  1270     0298                     	;# 
  1271     0298                     	;# 
  1272     0299                     	;# 
  1273     029A                     	;# 
  1274     029B                     	;# 
  1275     029C                     	;# 
  1276     029C                     	;# 
  1277     029D                     	;# 
  1278     029E                     	;# 
  1279     029F                     	;# 
  1280     0311                     	;# 
  1281     0311                     	;# 
  1282     0312                     	;# 
  1283     0313                     	;# 
  1284     0314                     	;# 
  1285     0315                     	;# 
  1286     0315                     	;# 
  1287     0316                     	;# 
  1288     0318                     	;# 
  1289     0318                     	;# 
  1290     0319                     	;# 
  1291     031A                     	;# 
  1292     031C                     	;# 
  1293     031C                     	;# 
  1294     031D                     	;# 
  1295     031E                     	;# 
  1296     0394                     	;# 
  1297     0395                     	;# 
  1298     0396                     	;# 
  1299     0415                     	;# 
  1300     0416                     	;# 
  1301     0417                     	;# 
  1302     041C                     	;# 
  1303     041D                     	;# 
  1304     041E                     	;# 
  1305     0791                     	;# 
  1306     0792                     	;# 
  1307     0793                     	;# 
  1308     0794                     	;# 
  1309     0795                     	;# 
  1310     0798                     	;# 
  1311     0799                     	;# 
  1312     07A0                     	;# 
  1313     07A1                     	;# 
  1314     07A3                     	;# 
  1315     07A4                     	;# 
  1316     07A6                     	;# 
  1317     07A7                     	;# 
  1318     07A9                     	;# 
  1319     07AA                     	;# 
  1320     0FE4                     	;# 
  1321     0FE5                     	;# 
  1322     0FE6                     	;# 
  1323     0FE7                     	;# 
  1324     0FE8                     	;# 
  1325     0FE9                     	;# 
  1326     0FEA                     	;# 
  1327     0FEB                     	;# 
  1328     0FED                     	;# 
  1329     0FEE                     	;# 
  1330     0FEF                     	;# 
  1331     0000                     	;# 
  1332     0001                     	;# 
  1333     0002                     	;# 
  1334     0003                     	;# 
  1335     0004                     	;# 
  1336     0005                     	;# 
  1337     0006                     	;# 
  1338     0007                     	;# 
  1339     0008                     	;# 
  1340     0009                     	;# 
  1341     000A                     	;# 
  1342     000B                     	;# 
  1343     000C                     	;# 
  1344     000D                     	;# 
  1345     000E                     	;# 
  1346     0010                     	;# 
  1347     0011                     	;# 
  1348     0012                     	;# 
  1349     0013                     	;# 
  1350     0015                     	;# 
  1351     0016                     	;# 
  1352     0016                     	;# 
  1353     0017                     	;# 
  1354     0018                     	;# 
  1355     0019                     	;# 
  1356     001A                     	;# 
  1357     001B                     	;# 
  1358     001C                     	;# 
  1359     001E                     	;# 
  1360     001F                     	;# 
  1361     008C                     	;# 
  1362     008D                     	;# 
  1363     008E                     	;# 
  1364     0090                     	;# 
  1365     0091                     	;# 
  1366     0092                     	;# 
  1367     0093                     	;# 
  1368     0095                     	;# 
  1369     0096                     	;# 
  1370     0097                     	;# 
  1371     0098                     	;# 
  1372     0099                     	;# 
  1373     009A                     	;# 
  1374     009B                     	;# 
  1375     009B                     	;# 
  1376     009C                     	;# 
  1377     009D                     	;# 
  1378     009E                     	;# 
  1379     010C                     	;# 
  1380     010D                     	;# 
  1381     010E                     	;# 
  1382     0110                     	;# 
  1383     0111                     	;# 
  1384     0112                     	;# 
  1385     0113                     	;# 
  1386     0114                     	;# 
  1387     0115                     	;# 
  1388     0116                     	;# 
  1389     0117                     	;# 
  1390     0118                     	;# 
  1391     0119                     	;# 
  1392     011A                     	;# 
  1393     011B                     	;# 
  1394     011D                     	;# 
  1395     018C                     	;# 
  1396     018D                     	;# 
  1397     0191                     	;# 
  1398     0191                     	;# 
  1399     0192                     	;# 
  1400     0193                     	;# 
  1401     0193                     	;# 
  1402     0193                     	;# 
  1403     0194                     	;# 
  1404     0195                     	;# 
  1405     0196                     	;# 
  1406     0199                     	;# 
  1407     019A                     	;# 
  1408     019B                     	;# 
  1409     019B                     	;# 
  1410     019B                     	;# 
  1411     019B                     	;# 
  1412     019C                     	;# 
  1413     019C                     	;# 
  1414     019D                     	;# 
  1415     019E                     	;# 
  1416     019F                     	;# 
  1417     020D                     	;# 
  1418     0210                     	;# 
  1419     0211                     	;# 
  1420     0212                     	;# 
  1421     0213                     	;# 
  1422     0214                     	;# 
  1423     0215                     	;# 
  1424     0215                     	;# 
  1425     0216                     	;# 
  1426     0217                     	;# 
  1427     0291                     	;# 
  1428     0291                     	;# 
  1429     0292                     	;# 
  1430     0293                     	;# 
  1431     0294                     	;# 
  1432     0295                     	;# 
  1433     0295                     	;# 
  1434     0296                     	;# 
  1435     0298                     	;# 
  1436     0298                     	;# 
  1437     0299                     	;# 
  1438     029A                     	;# 
  1439     029B                     	;# 
  1440     029C                     	;# 
  1441     029C                     	;# 
  1442     029D                     	;# 
  1443     029E                     	;# 
  1444     029F                     	;# 
  1445     0311                     	;# 
  1446     0311                     	;# 
  1447     0312                     	;# 
  1448     0313                     	;# 
  1449     0314                     	;# 
  1450     0315                     	;# 
  1451     0315                     	;# 
  1452     0316                     	;# 
  1453     0318                     	;# 
  1454     0318                     	;# 
  1455     0319                     	;# 
  1456     031A                     	;# 
  1457     031C                     	;# 
  1458     031C                     	;# 
  1459     031D                     	;# 
  1460     031E                     	;# 
  1461     0394                     	;# 
  1462     0395                     	;# 
  1463     0396                     	;# 
  1464     0415                     	;# 
  1465     0416                     	;# 
  1466     0417                     	;# 
  1467     041C                     	;# 
  1468     041D                     	;# 
  1469     041E                     	;# 
  1470     0791                     	;# 
  1471     0792                     	;# 
  1472     0793                     	;# 
  1473     0794                     	;# 
  1474     0795                     	;# 
  1475     0798                     	;# 
  1476     0799                     	;# 
  1477     07A0                     	;# 
  1478     07A1                     	;# 
  1479     07A3                     	;# 
  1480     07A4                     	;# 
  1481     07A6                     	;# 
  1482     07A7                     	;# 
  1483     07A9                     	;# 
  1484     07AA                     	;# 
  1485     0FE4                     	;# 
  1486     0FE5                     	;# 
  1487     0FE6                     	;# 
  1488     0FE7                     	;# 
  1489     0FE8                     	;# 
  1490     0FE9                     	;# 
  1491     0FEA                     	;# 
  1492     0FEB                     	;# 
  1493     0FED                     	;# 
  1494     0FEE                     	;# 
  1495     0FEF                     	;# 
  1496     0000                     	;# 
  1497     0001                     	;# 
  1498     0002                     	;# 
  1499     0003                     	;# 
  1500     0004                     	;# 
  1501     0005                     	;# 
  1502     0006                     	;# 
  1503     0007                     	;# 
  1504     0008                     	;# 
  1505     0009                     	;# 
  1506     000A                     	;# 
  1507     000B                     	;# 
  1508     000C                     	;# 
  1509     000D                     	;# 
  1510     000E                     	;# 
  1511     0010                     	;# 
  1512     0011                     	;# 
  1513     0012                     	;# 
  1514     0013                     	;# 
  1515     0015                     	;# 
  1516     0016                     	;# 
  1517     0016                     	;# 
  1518     0017                     	;# 
  1519     0018                     	;# 
  1520     0019                     	;# 
  1521     001A                     	;# 
  1522     001B                     	;# 
  1523     001C                     	;# 
  1524     001E                     	;# 
  1525     001F                     	;# 
  1526     008C                     	;# 
  1527     008D                     	;# 
  1528     008E                     	;# 
  1529     0090                     	;# 
  1530     0091                     	;# 
  1531     0092                     	;# 
  1532     0093                     	;# 
  1533     0095                     	;# 
  1534     0096                     	;# 
  1535     0097                     	;# 
  1536     0098                     	;# 
  1537     0099                     	;# 
  1538     009A                     	;# 
  1539     009B                     	;# 
  1540     009B                     	;# 
  1541     009C                     	;# 
  1542     009D                     	;# 
  1543     009E                     	;# 
  1544     010C                     	;# 
  1545     010D                     	;# 
  1546     010E                     	;# 
  1547     0110                     	;# 
  1548     0111                     	;# 
  1549     0112                     	;# 
  1550     0113                     	;# 
  1551     0114                     	;# 
  1552     0115                     	;# 
  1553     0116                     	;# 
  1554     0117                     	;# 
  1555     0118                     	;# 
  1556     0119                     	;# 
  1557     011A                     	;# 
  1558     011B                     	;# 
  1559     011D                     	;# 
  1560     018C                     	;# 
  1561     018D                     	;# 
  1562     0191                     	;# 
  1563     0191                     	;# 
  1564     0192                     	;# 
  1565     0193                     	;# 
  1566     0193                     	;# 
  1567     0193                     	;# 
  1568     0194                     	;# 
  1569     0195                     	;# 
  1570     0196                     	;# 
  1571     0199                     	;# 
  1572     019A                     	;# 
  1573     019B                     	;# 
  1574     019B                     	;# 
  1575     019B                     	;# 
  1576     019B                     	;# 
  1577     019C                     	;# 
  1578     019C                     	;# 
  1579     019D                     	;# 
  1580     019E                     	;# 
  1581     019F                     	;# 
  1582     020D                     	;# 
  1583     0210                     	;# 
  1584     0211                     	;# 
  1585     0212                     	;# 
  1586     0213                     	;# 
  1587     0214                     	;# 
  1588     0215                     	;# 
  1589     0215                     	;# 
  1590     0216                     	;# 
  1591     0217                     	;# 
  1592     0291                     	;# 
  1593     0291                     	;# 
  1594     0292                     	;# 
  1595     0293                     	;# 
  1596     0294                     	;# 
  1597     0295                     	;# 
  1598     0295                     	;# 
  1599     0296                     	;# 
  1600     0298                     	;# 
  1601     0298                     	;# 
  1602     0299                     	;# 
  1603     029A                     	;# 
  1604     029B                     	;# 
  1605     029C                     	;# 
  1606     029C                     	;# 
  1607     029D                     	;# 
  1608     029E                     	;# 
  1609     029F                     	;# 
  1610     0311                     	;# 
  1611     0311                     	;# 
  1612     0312                     	;# 
  1613     0313                     	;# 
  1614     0314                     	;# 
  1615     0315                     	;# 
  1616     0315                     	;# 
  1617     0316                     	;# 
  1618     0318                     	;# 
  1619     0318                     	;# 
  1620     0319                     	;# 
  1621     031A                     	;# 
  1622     031C                     	;# 
  1623     031C                     	;# 
  1624     031D                     	;# 
  1625     031E                     	;# 
  1626     0394                     	;# 
  1627     0395                     	;# 
  1628     0396                     	;# 
  1629     0415                     	;# 
  1630     0416                     	;# 
  1631     0417                     	;# 
  1632     041C                     	;# 
  1633     041D                     	;# 
  1634     041E                     	;# 
  1635     0791                     	;# 
  1636     0792                     	;# 
  1637     0793                     	;# 
  1638     0794                     	;# 
  1639     0795                     	;# 
  1640     0798                     	;# 
  1641     0799                     	;# 
  1642     07A0                     	;# 
  1643     07A1                     	;# 
  1644     07A3                     	;# 
  1645     07A4                     	;# 
  1646     07A6                     	;# 
  1647     07A7                     	;# 
  1648     07A9                     	;# 
  1649     07AA                     	;# 
  1650     0FE4                     	;# 
  1651     0FE5                     	;# 
  1652     0FE6                     	;# 
  1653     0FE7                     	;# 
  1654     0FE8                     	;# 
  1655     0FE9                     	;# 
  1656     0FEA                     	;# 
  1657     0FEB                     	;# 
  1658     0FED                     	;# 
  1659     0FEE                     	;# 
  1660     0FEF                     	;# 
  1661     0000                     	;# 
  1662     0001                     	;# 
  1663     0002                     	;# 
  1664     0003                     	;# 
  1665     0004                     	;# 
  1666     0005                     	;# 
  1667     0006                     	;# 
  1668     0007                     	;# 
  1669     0008                     	;# 
  1670     0009                     	;# 
  1671     000A                     	;# 
  1672     000B                     	;# 
  1673     000C                     	;# 
  1674     000D                     	;# 
  1675     000E                     	;# 
  1676     0010                     	;# 
  1677     0011                     	;# 
  1678     0012                     	;# 
  1679     0013                     	;# 
  1680     0015                     	;# 
  1681     0016                     	;# 
  1682     0016                     	;# 
  1683     0017                     	;# 
  1684     0018                     	;# 
  1685     0019                     	;# 
  1686     001A                     	;# 
  1687     001B                     	;# 
  1688     001C                     	;# 
  1689     001E                     	;# 
  1690     001F                     	;# 
  1691     008C                     	;# 
  1692     008D                     	;# 
  1693     008E                     	;# 
  1694     0090                     	;# 
  1695     0091                     	;# 
  1696     0092                     	;# 
  1697     0093                     	;# 
  1698     0095                     	;# 
  1699     0096                     	;# 
  1700     0097                     	;# 
  1701     0098                     	;# 
  1702     0099                     	;# 
  1703     009A                     	;# 
  1704     009B                     	;# 
  1705     009B                     	;# 
  1706     009C                     	;# 
  1707     009D                     	;# 
  1708     009E                     	;# 
  1709     010C                     	;# 
  1710     010D                     	;# 
  1711     010E                     	;# 
  1712     0110                     	;# 
  1713     0111                     	;# 
  1714     0112                     	;# 
  1715     0113                     	;# 
  1716     0114                     	;# 
  1717     0115                     	;# 
  1718     0116                     	;# 
  1719     0117                     	;# 
  1720     0118                     	;# 
  1721     0119                     	;# 
  1722     011A                     	;# 
  1723     011B                     	;# 
  1724     011D                     	;# 
  1725     018C                     	;# 
  1726     018D                     	;# 
  1727     0191                     	;# 
  1728     0191                     	;# 
  1729     0192                     	;# 
  1730     0193                     	;# 
  1731     0193                     	;# 
  1732     0193                     	;# 
  1733     0194                     	;# 
  1734     0195                     	;# 
  1735     0196                     	;# 
  1736     0199                     	;# 
  1737     019A                     	;# 
  1738     019B                     	;# 
  1739     019B                     	;# 
  1740     019B                     	;# 
  1741     019B                     	;# 
  1742     019C                     	;# 
  1743     019C                     	;# 
  1744     019D                     	;# 
  1745     019E                     	;# 
  1746     019F                     	;# 
  1747     020D                     	;# 
  1748     0210                     	;# 
  1749     0211                     	;# 
  1750     0212                     	;# 
  1751     0213                     	;# 
  1752     0214                     	;# 
  1753     0215                     	;# 
  1754     0215                     	;# 
  1755     0216                     	;# 
  1756     0217                     	;# 
  1757     0291                     	;# 
  1758     0291                     	;# 
  1759     0292                     	;# 
  1760     0293                     	;# 
  1761     0294                     	;# 
  1762     0295                     	;# 
  1763     0295                     	;# 
  1764     0296                     	;# 
  1765     0298                     	;# 
  1766     0298                     	;# 
  1767     0299                     	;# 
  1768     029A                     	;# 
  1769     029B                     	;# 
  1770     029C                     	;# 
  1771     029C                     	;# 
  1772     029D                     	;# 
  1773     029E                     	;# 
  1774     029F                     	;# 
  1775     0311                     	;# 
  1776     0311                     	;# 
  1777     0312                     	;# 
  1778     0313                     	;# 
  1779     0314                     	;# 
  1780     0315                     	;# 
  1781     0315                     	;# 
  1782     0316                     	;# 
  1783     0318                     	;# 
  1784     0318                     	;# 
  1785     0319                     	;# 
  1786     031A                     	;# 
  1787     031C                     	;# 
  1788     031C                     	;# 
  1789     031D                     	;# 
  1790     031E                     	;# 
  1791     0394                     	;# 
  1792     0395                     	;# 
  1793     0396                     	;# 
  1794     0415                     	;# 
  1795     0416                     	;# 
  1796     0417                     	;# 
  1797     041C                     	;# 
  1798     041D                     	;# 
  1799     041E                     	;# 
  1800     0791                     	;# 
  1801     0792                     	;# 
  1802     0793                     	;# 
  1803     0794                     	;# 
  1804     0795                     	;# 
  1805     0798                     	;# 
  1806     0799                     	;# 
  1807     07A0                     	;# 
  1808     07A1                     	;# 
  1809     07A3                     	;# 
  1810     07A4                     	;# 
  1811     07A6                     	;# 
  1812     07A7                     	;# 
  1813     07A9                     	;# 
  1814     07AA                     	;# 
  1815     0FE4                     	;# 
  1816     0FE5                     	;# 
  1817     0FE6                     	;# 
  1818     0FE7                     	;# 
  1819     0FE8                     	;# 
  1820     0FE9                     	;# 
  1821     0FEA                     	;# 
  1822     0FEB                     	;# 
  1823     0FED                     	;# 
  1824     0FEE                     	;# 
  1825     0FEF                     	;# 
  1826     0000                     	;# 
  1827     0001                     	;# 
  1828     0002                     	;# 
  1829     0003                     	;# 
  1830     0004                     	;# 
  1831     0005                     	;# 
  1832     0006                     	;# 
  1833     0007                     	;# 
  1834     0008                     	;# 
  1835     0009                     	;# 
  1836     000A                     	;# 
  1837     000B                     	;# 
  1838     000C                     	;# 
  1839     000D                     	;# 
  1840     000E                     	;# 
  1841     0010                     	;# 
  1842     0011                     	;# 
  1843     0012                     	;# 
  1844     0013                     	;# 
  1845     0015                     	;# 
  1846     0016                     	;# 
  1847     0016                     	;# 
  1848     0017                     	;# 
  1849     0018                     	;# 
  1850     0019                     	;# 
  1851     001A                     	;# 
  1852     001B                     	;# 
  1853     001C                     	;# 
  1854     001E                     	;# 
  1855     001F                     	;# 
  1856     008C                     	;# 
  1857     008D                     	;# 
  1858     008E                     	;# 
  1859     0090                     	;# 
  1860     0091                     	;# 
  1861     0092                     	;# 
  1862     0093                     	;# 
  1863     0095                     	;# 
  1864     0096                     	;# 
  1865     0097                     	;# 
  1866     0098                     	;# 
  1867     0099                     	;# 
  1868     009A                     	;# 
  1869     009B                     	;# 
  1870     009B                     	;# 
  1871     009C                     	;# 
  1872     009D                     	;# 
  1873     009E                     	;# 
  1874     010C                     	;# 
  1875     010D                     	;# 
  1876     010E                     	;# 
  1877     0110                     	;# 
  1878     0111                     	;# 
  1879     0112                     	;# 
  1880     0113                     	;# 
  1881     0114                     	;# 
  1882     0115                     	;# 
  1883     0116                     	;# 
  1884     0117                     	;# 
  1885     0118                     	;# 
  1886     0119                     	;# 
  1887     011A                     	;# 
  1888     011B                     	;# 
  1889     011D                     	;# 
  1890     018C                     	;# 
  1891     018D                     	;# 
  1892     0191                     	;# 
  1893     0191                     	;# 
  1894     0192                     	;# 
  1895     0193                     	;# 
  1896     0193                     	;# 
  1897     0193                     	;# 
  1898     0194                     	;# 
  1899     0195                     	;# 
  1900     0196                     	;# 
  1901     0199                     	;# 
  1902     019A                     	;# 
  1903     019B                     	;# 
  1904     019B                     	;# 
  1905     019B                     	;# 
  1906     019B                     	;# 
  1907     019C                     	;# 
  1908     019C                     	;# 
  1909     019D                     	;# 
  1910     019E                     	;# 
  1911     019F                     	;# 
  1912     020D                     	;# 
  1913     0210                     	;# 
  1914     0211                     	;# 
  1915     0212                     	;# 
  1916     0213                     	;# 
  1917     0214                     	;# 
  1918     0215                     	;# 
  1919     0215                     	;# 
  1920     0216                     	;# 
  1921     0217                     	;# 
  1922     0291                     	;# 
  1923     0291                     	;# 
  1924     0292                     	;# 
  1925     0293                     	;# 
  1926     0294                     	;# 
  1927     0295                     	;# 
  1928     0295                     	;# 
  1929     0296                     	;# 
  1930     0298                     	;# 
  1931     0298                     	;# 
  1932     0299                     	;# 
  1933     029A                     	;# 
  1934     029B                     	;# 
  1935     029C                     	;# 
  1936     029C                     	;# 
  1937     029D                     	;# 
  1938     029E                     	;# 
  1939     029F                     	;# 
  1940     0311                     	;# 
  1941     0311                     	;# 
  1942     0312                     	;# 
  1943     0313                     	;# 
  1944     0314                     	;# 
  1945     0315                     	;# 
  1946     0315                     	;# 
  1947     0316                     	;# 
  1948     0318                     	;# 
  1949     0318                     	;# 
  1950     0319                     	;# 
  1951     031A                     	;# 
  1952     031C                     	;# 
  1953     031C                     	;# 
  1954     031D                     	;# 
  1955     031E                     	;# 
  1956     0394                     	;# 
  1957     0395                     	;# 
  1958     0396                     	;# 
  1959     0415                     	;# 
  1960     0416                     	;# 
  1961     0417                     	;# 
  1962     041C                     	;# 
  1963     041D                     	;# 
  1964     041E                     	;# 
  1965     0791                     	;# 
  1966     0792                     	;# 
  1967     0793                     	;# 
  1968     0794                     	;# 
  1969     0795                     	;# 
  1970     0798                     	;# 
  1971     0799                     	;# 
  1972     07A0                     	;# 
  1973     07A1                     	;# 
  1974     07A3                     	;# 
  1975     07A4                     	;# 
  1976     07A6                     	;# 
  1977     07A7                     	;# 
  1978     07A9                     	;# 
  1979     07AA                     	;# 
  1980     0FE4                     	;# 
  1981     0FE5                     	;# 
  1982     0FE6                     	;# 
  1983     0FE7                     	;# 
  1984     0FE8                     	;# 
  1985     0FE9                     	;# 
  1986     0FEA                     	;# 
  1987     0FEB                     	;# 
  1988     0FED                     	;# 
  1989     0FEE                     	;# 
  1990     0FEF                     	;# 
  1991     0000                     	;# 
  1992     0001                     	;# 
  1993     0002                     	;# 
  1994     0003                     	;# 
  1995     0004                     	;# 
  1996     0005                     	;# 
  1997     0006                     	;# 
  1998     0007                     	;# 
  1999     0008                     	;# 
  2000     0009                     	;# 
  2001     000A                     	;# 
  2002     000B                     	;# 
  2003     000C                     	;# 
  2004     000D                     	;# 
  2005     000E                     	;# 
  2006     0010                     	;# 
  2007     0011                     	;# 
  2008     0012                     	;# 
  2009     0013                     	;# 
  2010     0015                     	;# 
  2011     0016                     	;# 
  2012     0016                     	;# 
  2013     0017                     	;# 
  2014     0018                     	;# 
  2015     0019                     	;# 
  2016     001A                     	;# 
  2017     001B                     	;# 
  2018     001C                     	;# 
  2019     001E                     	;# 
  2020     001F                     	;# 
  2021     008C                     	;# 
  2022     008D                     	;# 
  2023     008E                     	;# 
  2024     0090                     	;# 
  2025     0091                     	;# 
  2026     0092                     	;# 
  2027     0093                     	;# 
  2028     0095                     	;# 
  2029     0096                     	;# 
  2030     0097                     	;# 
  2031     0098                     	;# 
  2032     0099                     	;# 
  2033     009A                     	;# 
  2034     009B                     	;# 
  2035     009B                     	;# 
  2036     009C                     	;# 
  2037     009D                     	;# 
  2038     009E                     	;# 
  2039     010C                     	;# 
  2040     010D                     	;# 
  2041     010E                     	;# 
  2042     0110                     	;# 
  2043     0111                     	;# 
  2044     0112                     	;# 
  2045     0113                     	;# 
  2046     0114                     	;# 
  2047     0115                     	;# 
  2048     0116                     	;# 
  2049     0117                     	;# 
  2050     0118                     	;# 
  2051     0119                     	;# 
  2052     011A                     	;# 
  2053     011B                     	;# 
  2054     011D                     	;# 
  2055     018C                     	;# 
  2056     018D                     	;# 
  2057     0191                     	;# 
  2058     0191                     	;# 
  2059     0192                     	;# 
  2060     0193                     	;# 
  2061     0193                     	;# 
  2062     0193                     	;# 
  2063     0194                     	;# 
  2064     0195                     	;# 
  2065     0196                     	;# 
  2066     0199                     	;# 
  2067     019A                     	;# 
  2068     019B                     	;# 
  2069     019B                     	;# 
  2070     019B                     	;# 
  2071     019B                     	;# 
  2072     019C                     	;# 
  2073     019C                     	;# 
  2074     019D                     	;# 
  2075     019E                     	;# 
  2076     019F                     	;# 
  2077     020D                     	;# 
  2078     0210                     	;# 
  2079     0211                     	;# 
  2080     0212                     	;# 
  2081     0213                     	;# 
  2082     0214                     	;# 
  2083     0215                     	;# 
  2084     0215                     	;# 
  2085     0216                     	;# 
  2086     0217                     	;# 
  2087     0291                     	;# 
  2088     0291                     	;# 
  2089     0292                     	;# 
  2090     0293                     	;# 
  2091     0294                     	;# 
  2092     0295                     	;# 
  2093     0295                     	;# 
  2094     0296                     	;# 
  2095     0298                     	;# 
  2096     0298                     	;# 
  2097     0299                     	;# 
  2098     029A                     	;# 
  2099     029B                     	;# 
  2100     029C                     	;# 
  2101     029C                     	;# 
  2102     029D                     	;# 
  2103     029E                     	;# 
  2104     029F                     	;# 
  2105     0311                     	;# 
  2106     0311                     	;# 
  2107     0312                     	;# 
  2108     0313                     	;# 
  2109     0314                     	;# 
  2110     0315                     	;# 
  2111     0315                     	;# 
  2112     0316                     	;# 
  2113     0318                     	;# 
  2114     0318                     	;# 
  2115     0319                     	;# 
  2116     031A                     	;# 
  2117     031C                     	;# 
  2118     031C                     	;# 
  2119     031D                     	;# 
  2120     031E                     	;# 
  2121     0394                     	;# 
  2122     0395                     	;# 
  2123     0396                     	;# 
  2124     0415                     	;# 
  2125     0416                     	;# 
  2126     0417                     	;# 
  2127     041C                     	;# 
  2128     041D                     	;# 
  2129     041E                     	;# 
  2130     0791                     	;# 
  2131     0792                     	;# 
  2132     0793                     	;# 
  2133     0794                     	;# 
  2134     0795                     	;# 
  2135     0798                     	;# 
  2136     0799                     	;# 
  2137     07A0                     	;# 
  2138     07A1                     	;# 
  2139     07A3                     	;# 
  2140     07A4                     	;# 
  2141     07A6                     	;# 
  2142     07A7                     	;# 
  2143     07A9                     	;# 
  2144     07AA                     	;# 
  2145     0FE4                     	;# 
  2146     0FE5                     	;# 
  2147     0FE6                     	;# 
  2148     0FE7                     	;# 
  2149     0FE8                     	;# 
  2150     0FE9                     	;# 
  2151     0FEA                     	;# 
  2152     0FEB                     	;# 
  2153     0FED                     	;# 
  2154     0FEE                     	;# 
  2155     0FEF                     	;_SES_Modbus
  2156                           
  2157                           	psect	idataBANK1
  2158     12AC                     __pidataBANK1:
  2159                           
  2160                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2161     12AC  3424               	retlw	36
  2162     12AD  3400               	retlw	0
  2163                           
  2164                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2165     12AE  342C               	retlw	44
  2166     12AF  3410               	retlw	16
  2167                           
  2168                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2169     12B0  342C               	retlw	44
  2170     12B1  3406               	retlw	6
  2171                           
  2172                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2173     12B2  342C               	retlw	44
  2174     12B3  340D               	retlw	13
  2175                           
  2176                           	psect	idataBANK2
  2177     07FC                     __pidataBANK2:
  2178                           
  2179                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2180     07FC  3424               	retlw	36
  2181     07FD  3416               	retlw	22
  2182                           
  2183                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2184     07FE  3424               	retlw	36
  2185     07FF  340B               	retlw	11
  2186                           
  2187                           	psect	stringtext1
  2188     1800                     __pstringtext1:
  2189     1800                     _i2c_fsmStateTable:
  2190     1800  3459               	retlw	low _I2C_DO_IDLE
  2191     1801  3412               	retlw	high _I2C_DO_IDLE
  2192     1802  34B4               	retlw	low _I2C_DO_SEND_ADR_READ
  2193     1803  3412               	retlw	high _I2C_DO_SEND_ADR_READ
  2194     1804  34A4               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2195     1805  3412               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2196     1806  34B4               	retlw	low _I2C_DO_TX
  2197     1807  3408               	retlw	high _I2C_DO_TX
  2198     1808  3477               	retlw	low _I2C_DO_RX
  2199     1809  3417               	retlw	high _I2C_DO_RX
  2200     180A  3496               	retlw	low _I2C_DO_RCEN
  2201     180B  3412               	retlw	high _I2C_DO_RCEN
  2202     180C  3498               	retlw	low _I2C_DO_TX_EMPTY
  2203     180D  3416               	retlw	high _I2C_DO_TX_EMPTY
  2204     180E  345E               	retlw	low _I2C_DO_SEND_RESTART_READ
  2205     180F  3412               	retlw	high _I2C_DO_SEND_RESTART_READ
  2206     1810  3463               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2207     1811  3412               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2208     1812  3468               	retlw	low _I2C_DO_SEND_RESTART
  2209     1813  3412               	retlw	high _I2C_DO_SEND_RESTART
  2210     1814  346D               	retlw	low _I2C_DO_SEND_STOP
  2211     1815  3412               	retlw	high _I2C_DO_SEND_STOP
  2212     1816  3472               	retlw	low _I2C_DO_RX_ACK
  2213     1817  3412               	retlw	high _I2C_DO_RX_ACK
  2214     1818  3477               	retlw	low _I2C_DO_RX_NACK_STOP
  2215     1819  3412               	retlw	high _I2C_DO_RX_NACK_STOP
  2216     181A  347C               	retlw	low _I2C_DO_RX_NACK_RESTART
  2217     181B  3412               	retlw	high _I2C_DO_RX_NACK_RESTART
  2218     181C  3481               	retlw	low _I2C_DO_RESET
  2219     181D  3412               	retlw	high _I2C_DO_RESET
  2220     181E  349D               	retlw	low _I2C_DO_ADDRESS_NACK
  2221     181F  3415               	retlw	high _I2C_DO_ADDRESS_NACK
  2222     1820                     __end_of_i2c_fsmStateTable:
  2223                           
  2224                           	psect	stringtext2
  2225     1820                     __pstringtext2:
  2226     1820                     _fctsupported:
  2227     1820  3401               	retlw	1
  2228     1821  3402               	retlw	2
  2229     1822  3403               	retlw	3
  2230     1823  3404               	retlw	4
  2231     1824  3405               	retlw	5
  2232     1825  3406               	retlw	6
  2233     1826  340F               	retlw	15
  2234     1827  3410               	retlw	16
  2235     1828                     __end_of_fctsupported:
  2236                           
  2237                           	psect	nvBANK1
  2238     00EC                     __pnvBANK1:
  2239     00EC                     Device_Init@value_SW4:
  2240     00EC                     	ds	1
  2241     00ED                     Device_Init@value_SW3:
  2242     00ED                     	ds	1
  2243     00EE                     Device_Init@value_SW2:
  2244     00EE                     	ds	1
  2245     00EF                     Device_Init@value_SW1:
  2246     00EF                     	ds	1
  2247                           
  2248                           	psect	nvBANK2
  2249     0161                     __pnvBANK2:
  2250     0161                     _TMR1_InterruptHandler:
  2251     0161                     	ds	2
  2252     0163                     _EUSART_OverrunErrorHandler:
  2253     0163                     	ds	2
  2254     0165                     _EUSART_FramingErrorHandler:
  2255     0165                     	ds	2
  2256     0167                     _EUSART_RxDefaultInterruptHandler:
  2257     0167                     	ds	2
  2258     0169                     _EUSART_TxDefaultInterruptHandler:
  2259     0169                     	ds	2
  2260                           
  2261                           	psect	nvBANK3
  2262     01A0                     __pnvBANK3:
  2263     01A0                     _EUSART_ErrorHandler:
  2264     01A0                     	ds	2
  2265     000C                     _PORTAbits	set	12
  2266     0018                     _T1CONbits	set	24
  2267     0018                     _T1CON	set	24
  2268     0016                     _TMR1L	set	22
  2269     0017                     _TMR1H	set	23
  2270     0019                     _T1GCON	set	25
  2271     0012                     _PIR2bits	set	18
  2272     0011                     _PIR1bits	set	17
  2273     000B                     _INTCONbits	set	11
  2274     0092                     _PIE2bits	set	146
  2275     0091                     _PIE1bits	set	145
  2276     0097                     _WDTCON	set	151
  2277     0098                     _OSCTUNE	set	152
  2278     0099                     _OSCCON	set	153
  2279     0095                     _OPTION_REGbits	set	149
  2280     008E                     _TRISC	set	142
  2281     008D                     _TRISB	set	141
  2282     008C                     _TRISA	set	140
  2283     0090                     _TRISE	set	144
  2284     010E                     _LATCbits	set	270
  2285     0116                     _BORCON	set	278
  2286     011D                     _APFCON	set	285
  2287     010E                     _LATC	set	270
  2288     010D                     _LATB	set	269
  2289     010C                     _LATA	set	268
  2290     0110                     _LATE	set	272
  2291     0199                     _RCREG	set	409
  2292     019D                     _RCSTAbits	set	413
  2293     019A                     _TXREG	set	410
  2294     019E                     _TXSTAbits	set	414
  2295     019C                     _SPBRGH	set	412
  2296     019B                     _SPBRGL	set	411
  2297     019E                     _TXSTA	set	414
  2298     019D                     _RCSTA	set	413
  2299     019F                     _BAUDCON	set	415
  2300     018C                     _ANSELA	set	396
  2301     018D                     _ANSELB	set	397
  2302     0214                     _SSPSTATbits	set	532
  2303     0216                     _SSPCON2bits	set	534
  2304     0211                     _SSPBUF	set	529
  2305     0215                     _SSPCON1bits	set	533
  2306     0212                     _SSPADD	set	530
  2307     0216                     _SSPCON2	set	534
  2308     0215                     _SSPCON1	set	533
  2309     0214                     _SSPSTAT	set	532
  2310     020D                     _WPUB	set	525
  2311     0210                     _WPUE	set	528
  2312                           
  2313                           	psect	cinit
  2314     005A                     start_initialization:	
  2315                           ; #config settings
  2316                           
  2317     005A                     __initialization:	;BIGRAM
  2318                           
  2319                           ; Initialize objects allocated to BANK1
  2320     005A  30AC               	movlw	low __pidataBANK1
  2321     005B  0084               	movwf	4
  2322     005C  3092               	movlw	(high __pidataBANK1)| (0+128)
  2323     005D  0085               	movwf	5
  2324     005E  30E4               	movlw	low __pdataBANK1
  2325     005F  0086               	movwf	6
  2326     0060  3000               	movlw	high __pdataBANK1
  2327     0061  0087               	movwf	7
  2328     0062  3000               	movlw	0
  2329     0063  00FF               	movwf	btemp+1
  2330     0064  3008               	movlw	8
  2331     0065  3193  2346  3180   	fcall	init_ram
  2332                           
  2333                           ; Initialize objects allocated to BANK2
  2334     0068  30FC               	movlw	low __pidataBANK2
  2335     0069  0084               	movwf	4
  2336     006A  3087               	movlw	(high __pidataBANK2)| (0+128)
  2337     006B  0085               	movwf	5
  2338     006C  306B               	movlw	low __pdataBANK2
  2339     006D  0086               	movwf	6
  2340     006E  3001               	movlw	high __pdataBANK2
  2341     006F  0087               	movwf	7
  2342     0070  3000               	movlw	0
  2343     0071  00FF               	movwf	btemp+1
  2344     0072  3004               	movlw	4
  2345     0073  3193  2346  3180   	fcall	init_ram
  2346                           
  2347                           ; Clear objects allocated to BIGRAM
  2348     0076  306A               	movlw	low (0+8554)
  2349     0077  0084               	movwf	4
  2350     0078  3021               	movlw	high (0+8554)
  2351     0079  0085               	movwf	5
  2352     007A  3086               	movlw	134
  2353     007B  00FE               	movwf	btemp
  2354     007C  3000               	movlw	0
  2355     007D  00FF               	movwf	btemp+1
  2356     007E  3193  233A  3180   	fcall	clear_ram0
  2357                           
  2358                           ; Clear objects allocated to COMMON
  2359     0081  01FC               	clrf	__pbssCOMMON& (0+127)
  2360     0082  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2361                           
  2362                           ; Clear objects allocated to BANK0
  2363     0083  01E9               	clrf	__pbssBANK0& (0+127)
  2364     0084  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  2365     0085  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  2366     0086  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  2367     0087  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  2368     0088  01EE               	clrf	(__pbssBANK0+5)& (0+127)
  2369     0089  01EF               	clrf	(__pbssBANK0+6)& (0+127)
  2370                           
  2371                           ; Clear objects allocated to BANK1
  2372     008A  30D7               	movlw	low __pbssBANK1
  2373     008B  0084               	movwf	4
  2374     008C  3000               	movlw	high __pbssBANK1
  2375     008D  0085               	movwf	5
  2376     008E  300D               	movlw	13
  2377     008F  00FE               	movwf	btemp
  2378     0090  3000               	movlw	0
  2379     0091  00FF               	movwf	btemp+1
  2380     0092  3193  233A  3180   	fcall	clear_ram0
  2381                           
  2382                           ; Clear objects allocated to BANK2
  2383     0095  3020               	movlw	low __pbssBANK2
  2384     0096  0084               	movwf	4
  2385     0097  3001               	movlw	high __pbssBANK2
  2386     0098  0085               	movwf	5
  2387     0099  3041               	movlw	65
  2388     009A  00FE               	movwf	btemp
  2389     009B  3000               	movlw	0
  2390     009C  00FF               	movwf	btemp+1
  2391     009D  3193  233A  3180   	fcall	clear_ram0
  2392     00A0                     end_of_initialization:	
  2393                           ;End of C runtime variable initialization code
  2394                           
  2395     00A0                     __end_of__initialization:
  2396     00A0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2397     00A1  0020               	movlb	0
  2398     00A2  3193  2B88         	ljmp	_main	;jump to C main() function
  2399                           
  2400                           	psect	bssCOMMON
  2401     007C                     __pbssCOMMON:
  2402     007C                     Task_MB@f_Modbus_Init:
  2403     007C                     	ds	1
  2404     007D                     _eusartRxLastError:
  2405     007D                     	ds	1
  2406                           
  2407                           	psect	bssBANK0
  2408     0069                     __pbssBANK0:
  2409     0069                     _SW_Ad:
  2410     0069                     	ds	1
  2411     006A                     _eusartRxCount:
  2412     006A                     	ds	1
  2413     006B                     _eusartRxTail:
  2414     006B                     	ds	1
  2415     006C                     _eusartRxHead:
  2416     006C                     	ds	1
  2417     006D                     _eusartTxBufferRemaining:
  2418     006D                     	ds	1
  2419     006E                     _eusartTxTail:
  2420     006E                     	ds	1
  2421     006F                     _eusartTxHead:
  2422     006F                     	ds	1
  2423                           
  2424                           	psect	bssBANK1
  2425     00D7                     __pbssBANK1:
  2426     00D7                     _device_time:
  2427     00D7                     	ds	4
  2428     00DB                     _SensorAmbient:
  2429     00DB                     	ds	4
  2430     00DF                     _timer1ReloadVal:
  2431     00DF                     	ds	2
  2432     00E1                     _MSSP_InterruptHandler:
  2433     00E1                     	ds	2
  2434     00E3                     _f_Indicator:
  2435     00E3                     	ds	1
  2436                           
  2437                           	psect	dataBANK1
  2438     00E4                     __pdataBANK1:
  2439     00E4                     _SHT30_CMD_MEASURE_H_Disable:
  2440     00E4                     	ds	2
  2441     00E6                     _SHT30_CMD_MEASURE_L_Enable:
  2442     00E6                     	ds	2
  2443     00E8                     _SHT30_CMD_MEASURE_H_Enable:
  2444     00E8                     	ds	2
  2445     00EA                     _SHT30_CMD_MEASURE_M_Enable:
  2446     00EA                     	ds	2
  2447                           
  2448                           	psect	bssBANK2
  2449     0120                     __pbssBANK2:
  2450     0120                     _I2C_Status:
  2451     0120                     	ds	29
  2452     013D                     _eusartRxStatusBuffer:
  2453     013D                     	ds	8
  2454     0145                     _eusartRxBuffer:
  2455     0145                     	ds	8
  2456     014D                     _eusartTxBuffer:
  2457     014D                     	ds	8
  2458     0155                     Task_Sensor@valTime:
  2459     0155                     	ds	4
  2460     0159                     ReadData@valTime:
  2461     0159                     	ds	4
  2462     015D                     _MB_Register:
  2463     015D                     	ds	4
  2464                           
  2465                           	psect	dataBANK2
  2466     016B                     __pdataBANK2:
  2467     016B                     _SHT30_CMD_MEASURE_L_Disable:
  2468     016B                     	ds	2
  2469     016D                     _SHT30_CMD_MEASURE_M_Disable:
  2470     016D                     	ds	2
  2471                           
  2472                           	psect	inittext
  2473     1346                     init_ram:
  2474     1346  00FE               	movwf	btemp
  2475     1347                     initloop:
  2476     1347  0012               	moviw fsr0++
  2477     1348  001E               	movwi fsr1++
  2478     1349  3001               	movlw	1
  2479     134A  02FE               	subwf	btemp,f
  2480     134B  3000               	movlw	0
  2481     134C  3BFF               	subwfb	btemp+1,f
  2482     134D  087F               	movf	btemp+1,w
  2483     134E  047E               	iorwf	btemp,w
  2484     134F  1D03               	skipz
  2485     1350  2B47               	goto	initloop
  2486     1351  3400               	retlw	0
  2487                           
  2488                           	psect	clrtext
  2489     133A                     clear_ram0:	
  2490                           ;	Called with FSR0 containing the base address, and
  2491                           ;	btemp/btemp+1 has the size to clear
  2492                           
  2493     133A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2494     133B                     clrloop0:
  2495     133B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2496     133C  3101               	addfsr 0,1
  2497     133D  3001               	movlw	1
  2498     133E  02FE               	subwf	btemp,f
  2499     133F  3000               	movlw	0
  2500     1340  3BFF               	subwfb	btemp+1,f
  2501     1341  087F               	movf	btemp+1,w
  2502     1342  047E               	iorwf	btemp,w
  2503     1343  1D03               	skipz
  2504     1344  2B3B               	goto	clrloop0	;have we reached the end yet?
  2505     1345  3400               	retlw	0	;all done for this memory range, return
  2506                           
  2507                           	psect	cstackBANK1
  2508     00A0                     __pcstackBANK1:
  2509     00A0                     ___fldiv@rem:
  2510                           
  2511                           ; 4 bytes @ 0x0
  2512     00A0                     	ds	4
  2513     00A4                     ___fldiv@sign:
  2514                           
  2515                           ; 1 bytes @ 0x4
  2516     00A4                     	ds	1
  2517     00A5                     ___fldiv@new_exp:
  2518                           
  2519                           ; 2 bytes @ 0x5
  2520     00A5                     	ds	2
  2521     00A7                     ___fldiv@grs:
  2522                           
  2523                           ; 4 bytes @ 0x7
  2524     00A7                     	ds	4
  2525     00AB                     ___fldiv@bexp:
  2526                           
  2527                           ; 1 bytes @ 0xB
  2528     00AB                     	ds	1
  2529     00AC                     ___fldiv@aexp:
  2530                           
  2531                           ; 1 bytes @ 0xC
  2532     00AC                     	ds	1
  2533     00AD                     ??_ReadData:
  2534                           
  2535                           ; 1 bytes @ 0xD
  2536     00AD                     	ds	8
  2537     00B5                     ReadData@aData:
  2538                           
  2539                           ; 6 bytes @ 0x15
  2540     00B5                     	ds	6
  2541     00BB                     ReadData@ctemp:
  2542                           
  2543                           ; 4 bytes @ 0x1B
  2544     00BB                     	ds	4
  2545     00BF                     ReadData@humidity:
  2546                           
  2547                           ; 4 bytes @ 0x1F
  2548     00BF                     	ds	4
  2549     00C3                     _ReadData$2361:
  2550                           
  2551                           ; 4 bytes @ 0x23
  2552     00C3                     	ds	4
  2553     00C7                     _ReadData$2362:
  2554                           
  2555                           ; 4 bytes @ 0x27
  2556     00C7                     	ds	4
  2557     00CB                     ??_Task_Sensor:
  2558                           
  2559                           ; 1 bytes @ 0x2B
  2560     00CB                     	ds	12
  2561                           
  2562                           	psect	cstackCOMMON
  2563     0070                     __pcstackCOMMON:
  2564     0070                     ?_I2C_Open:
  2565     0070                     ?_I2C_MasterWrite:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568     0070                     ?_I2C_Close:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571     0070                     ?_I2C_MasterRead:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574     0070                     ?_I2C_Initialize:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577     0070                     ?_OSCILLATOR_Initialize:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0070                     ?_WDT_Initialize:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0070                     ?_TMR1_Initialize:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0070                     ?_EUSART_Initialize:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589     0070                     ?_TMR1_ISR:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592     0070                     ?_EUSART_Receive_ISR:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595     0070                     ?_EUSART_Transmit_ISR:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598     0070                     ??_EUSART_Transmit_ISR:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613     0070                     ?_EUSART_DefaultErrorHandler:	
  2614                           ; 1 bytes @ 0x0
  2615                           
  2616     0070                     ?_EUSART_RxDataHandler:	
  2617                           ; 1 bytes @ 0x0
  2618                           
  2619     0070                     ??_EUSART_RxDataHandler:	
  2620                           ; 1 bytes @ 0x0
  2621                           
  2622     0070                     ?_TMR1_DefaultInterruptHandler:	
  2623                           ; 1 bytes @ 0x0
  2624                           
  2625     0070                     ??_TMR1_DefaultInterruptHandler:	
  2626                           ; 1 bytes @ 0x0
  2627                           
  2628     0070                     ?_TMR1_CallBack:	
  2629                           ; 1 bytes @ 0x0
  2630                           
  2631     0070                     ??_TMR1_CallBack:	
  2632                           ; 1 bytes @ 0x0
  2633                           
  2634     0070                     ?_I2C_DO_IDLE:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637     0070                     ??_I2C_DO_IDLE:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649     0070                     ?_I2C_DO_TX:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652     0070                     ?_I2C_DO_RX:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655     0070                     ?_I2C_DO_RCEN:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658     0070                     ??_I2C_DO_RCEN:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661     0070                     ?_I2C_DO_TX_EMPTY:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676     0070                     ?_I2C_DO_SEND_RESTART:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679     0070                     ??_I2C_DO_SEND_RESTART:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682     0070                     ?_I2C_DO_SEND_STOP:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685     0070                     ??_I2C_DO_SEND_STOP:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688     0070                     ?_I2C_DO_RX_ACK:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691     0070                     ??_I2C_DO_RX_ACK:	
  2692                           ; 1 bytes @ 0x0
  2693                           
  2694     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2695                           ; 1 bytes @ 0x0
  2696                           
  2697     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2698                           ; 1 bytes @ 0x0
  2699                           
  2700     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2701                           ; 1 bytes @ 0x0
  2702                           
  2703     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2704                           ; 1 bytes @ 0x0
  2705                           
  2706     0070                     ?_I2C_DO_RESET:	
  2707                           ; 1 bytes @ 0x0
  2708                           
  2709     0070                     ??_I2C_DO_RESET:	
  2710                           ; 1 bytes @ 0x0
  2711                           
  2712     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2713                           ; 1 bytes @ 0x0
  2714                           
  2715     0070                     ?_I2C_MasterIsr:	
  2716                           ; 1 bytes @ 0x0
  2717                           
  2718     0070                     ?_I2C_MasterClearIrq:	
  2719                           ; 1 bytes @ 0x0
  2720                           
  2721     0070                     ?_I2C_MasterOpen:	
  2722                           ; 1 bytes @ 0x0
  2723                           
  2724     0070                     ?_I2C_MasterEnableIrq:	
  2725                           ; 1 bytes @ 0x0
  2726                           
  2727     0070                     ?_I2C_MasterDisableIrq:	
  2728                           ; 1 bytes @ 0x0
  2729                           
  2730     0070                     ?_I2C_MasterClose:	
  2731                           ; 1 bytes @ 0x0
  2732                           
  2733     0070                     ?_I2C_MasterStart:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736     0070                     ?_I2C_MasterFsm:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739     0070                     ?_I2C_MasterIsNack:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742     0070                     ??_I2C_MasterIsNack:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745     0070                     ?_I2C_MasterSendTxData:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748     0070                     ??_I2C_MasterSendTxData:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751     0070                     ?_I2C_MasterGetRxData:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754     0070                     ??_I2C_MasterGetRxData:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757     0070                     ?_I2C_MasterSendAck:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760     0070                     ??_I2C_MasterSendAck:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763     0070                     ?_I2C_MasterStartRx:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766     0070                     ??_I2C_MasterStartRx:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769     0070                     ?_I2C_MasterSetIrq:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772     0070                     ??_I2C_MasterSetIrq:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775     0070                     ?_I2C_MasterEnableRestart:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778     0070                     ??_I2C_MasterEnableRestart:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781     0070                     ?_I2C_MasterStop:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784     0070                     ??_I2C_MasterStop:	
  2785                           ; 1 bytes @ 0x0
  2786                           
  2787     0070                     ?_I2C_MasterSendNack:	
  2788                           ; 1 bytes @ 0x0
  2789                           
  2790     0070                     ??_I2C_MasterSendNack:	
  2791                           ; 1 bytes @ 0x0
  2792                           
  2793     0070                     ?_App_Init:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796     0070                     ?_App_Process:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799     0070                     ?_Tick_Init_SES:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802     0070                     ?_Task_MB:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805     0070                     ?_Modbus_sendTxBuff:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808     0070                     ?_rtcc_handle:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811     0070                     ??_rtcc_handle:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814     0070                     ?_PIN_MANAGER_Initialize:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817     0070                     ?_SYSTEM_Initialize:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820     0070                     ?_INTERRUPT_InterruptManager:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823     0070                     ?_EUSART_is_tx_done:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826     0070                     ?_EUSART_Read:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829     0070                     ?_EUSART_Write:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832     0070                     ?_TMR1_StartTimer:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835     0070                     ?_TMR1_WriteTimer:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838     0070                     ?_I2C_MasterOperation:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841     0070                     ?_main:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844     0070                     ?_ReadData:	
  2845                           ; 1 bytes @ 0x0
  2846                           
  2847     0070                     ?_Task_Sensor:	
  2848                           ; 1 bytes @ 0x0
  2849                           
  2850     0070                     ?_Task_Indicator:	
  2851                           ; 1 bytes @ 0x0
  2852                           
  2853     0070                     ?_Device_Init:	
  2854                           ; 1 bytes @ 0x0
  2855                           
  2856     0070                     ?_buildException:	
  2857                           ; 1 bytes @ 0x0
  2858                           
  2859     0070                     ?_Modbus_getRxBuff:	
  2860                           ; 1 bytes @ 0x0
  2861                           
  2862     0070                     ?_validateRequest:	
  2863                           ; 1 bytes @ 0x0
  2864                           
  2865     0070                     ?_ModbusSlave_Init:	
  2866                           ; 1 bytes @ 0x0
  2867                           
  2868     0070                     ?_ModbusSlave_Process:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871     0070                     ?i1_I2C_SetBuffer:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874     0070                     ?i1_I2C_SetCallback:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877     0070                     ?i1_I2C_MasterClearIrq:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880     0070                     ??i1_I2C_MasterClearIrq:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883     0070                     I2C_MasterSendTxData@data:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886     0070                     TMR1_WriteTimer@timerVal:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889     0070                     i1I2C_SetBuffer@bufferSize:	
  2890                           ; 2 bytes @ 0x0
  2891                           
  2892     0070                     i1I2C_SetCallback@cb:	
  2893                           ; 2 bytes @ 0x0
  2894                           
  2895                           
  2896                           ; 2 bytes @ 0x0
  2897     0070                     	ds	1
  2898     0071                     ??_EUSART_Receive_ISR:
  2899     0071                     ??_EUSART_DefaultErrorHandler:	
  2900                           ; 1 bytes @ 0x1
  2901                           
  2902     0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2903                           ; 1 bytes @ 0x1
  2904                           
  2905                           
  2906                           ; 1 bytes @ 0x1
  2907     0071                     	ds	1
  2908     0072                     ??_TMR1_ISR:
  2909     0072                     ??_TMR1_WriteTimer:	
  2910                           ; 1 bytes @ 0x2
  2911                           
  2912     0072                     ??i1_I2C_SetBuffer:	
  2913                           ; 1 bytes @ 0x2
  2914                           
  2915     0072                     i1I2C_SetBuffer@buffer:	
  2916                           ; 1 bytes @ 0x2
  2917                           
  2918     0072                     i1I2C_SetCallback@ptr:	
  2919                           ; 1 bytes @ 0x2
  2920                           
  2921                           
  2922                           ; 1 bytes @ 0x2
  2923     0072                     	ds	1
  2924     0073                     ??i1_I2C_SetCallback:
  2925     0073                     i1I2C_SetCallback@idx:	
  2926                           ; 1 bytes @ 0x3
  2927                           
  2928                           
  2929                           ; 1 bytes @ 0x3
  2930     0073                     	ds	1
  2931     0074                     ?_I2C_SetDataCompleteCallback:
  2932     0074                     I2C_SetDataCompleteCallback@cb:	
  2933                           ; 1 bytes @ 0x4
  2934                           
  2935                           
  2936                           ; 2 bytes @ 0x4
  2937     0074                     	ds	2
  2938     0076                     I2C_SetDataCompleteCallback@ptr:
  2939                           
  2940                           ; 1 bytes @ 0x6
  2941     0076                     	ds	1
  2942     0077                     ??_I2C_SetDataCompleteCallback:
  2943     0077                     ?_rd1RegCompleteHandler:	
  2944                           ; 1 bytes @ 0x7
  2945                           
  2946     0077                     ?_rd2RegCompleteHandler:	
  2947                           ; 1 bytes @ 0x7
  2948                           
  2949     0077                     ?_wr1RegCompleteHandler:	
  2950                           ; 1 bytes @ 0x7
  2951                           
  2952     0077                     ?_wr2RegCompleteHandler:	
  2953                           ; 1 bytes @ 0x7
  2954                           
  2955     0077                     ?_rdBlkRegCompleteHandler:	
  2956                           ; 1 bytes @ 0x7
  2957                           
  2958     0077                     ?_I2C_CallbackReturnStop:	
  2959                           ; 1 bytes @ 0x7
  2960                           
  2961     0077                     ?_I2C_CallbackReturnReset:	
  2962                           ; 1 bytes @ 0x7
  2963                           
  2964     0077                     rd1RegCompleteHandler@ptr:	
  2965                           ; 1 bytes @ 0x7
  2966                           
  2967     0077                     rd2RegCompleteHandler@ptr:	
  2968                           ; 1 bytes @ 0x7
  2969                           
  2970     0077                     wr1RegCompleteHandler@ptr:	
  2971                           ; 1 bytes @ 0x7
  2972                           
  2973     0077                     wr2RegCompleteHandler@ptr:	
  2974                           ; 1 bytes @ 0x7
  2975                           
  2976     0077                     rdBlkRegCompleteHandler@ptr:	
  2977                           ; 1 bytes @ 0x7
  2978                           
  2979     0077                     I2C_CallbackReturnStop@funPtr:	
  2980                           ; 1 bytes @ 0x7
  2981                           
  2982     0077                     I2C_CallbackReturnReset@funPtr:	
  2983                           ; 1 bytes @ 0x7
  2984                           
  2985                           
  2986                           ; 1 bytes @ 0x7
  2987     0077                     	ds	1
  2988     0078                     ??_rd1RegCompleteHandler:
  2989     0078                     ??_rd2RegCompleteHandler:	
  2990                           ; 1 bytes @ 0x8
  2991                           
  2992     0078                     ??_wr1RegCompleteHandler:	
  2993                           ; 1 bytes @ 0x8
  2994                           
  2995     0078                     ??_wr2RegCompleteHandler:	
  2996                           ; 1 bytes @ 0x8
  2997                           
  2998     0078                     ??_rdBlkRegCompleteHandler:	
  2999                           ; 1 bytes @ 0x8
  3000                           
  3001     0078                     ??_I2C_DO_TX:	
  3002                           ; 1 bytes @ 0x8
  3003                           
  3004     0078                     ??_I2C_DO_RX:	
  3005                           ; 1 bytes @ 0x8
  3006                           
  3007     0078                     ??_I2C_DO_TX_EMPTY:	
  3008                           ; 1 bytes @ 0x8
  3009                           
  3010     0078                     ??_I2C_DO_ADDRESS_NACK:	
  3011                           ; 1 bytes @ 0x8
  3012                           
  3013     0078                     ??_I2C_CallbackReturnStop:	
  3014                           ; 1 bytes @ 0x8
  3015                           
  3016     0078                     ??_I2C_CallbackReturnReset:	
  3017                           ; 1 bytes @ 0x8
  3018                           
  3019                           
  3020                           ; 1 bytes @ 0x8
  3021     0078                     	ds	2
  3022     007A                     ??_I2C_MasterFsm:
  3023                           
  3024                           ; 1 bytes @ 0xA
  3025     007A                     	ds	2
  3026     007C                     ??_I2C_MasterIsr:
  3027     007C                     ??_INTERRUPT_InterruptManager:	
  3028                           ; 1 bytes @ 0xC
  3029                           
  3030                           
  3031                           	psect	cstackBANK0
  3032     0020                     __pcstackBANK0:	
  3033                           ; 1 bytes @ 0xC
  3034                           
  3035     0020                     ?_I2C_SetBuffer:
  3036     0020                     ??_I2C_Close:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039     0020                     ??_I2C_Initialize:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042     0020                     ??_OSCILLATOR_Initialize:	
  3043                           ; 1 bytes @ 0x0
  3044                           
  3045     0020                     ??_WDT_Initialize:	
  3046                           ; 1 bytes @ 0x0
  3047                           
  3048     0020                     ?_EUSART_SetRxInterruptHandler:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051     0020                     ?_EUSART_SetTxInterruptHandler:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054     0020                     ?_EUSART_SetFramingErrorHandler:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057     0020                     ?_EUSART_SetOverrunErrorHandler:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060     0020                     ?_EUSART_SetErrorHandler:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063     0020                     ?_TMR1_SetInterruptHandler:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066     0020                     ?_I2C_SetInterruptHandler:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069     0020                     ??_I2C_MasterClearIrq:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072     0020                     ??_I2C_MasterOpen:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075     0020                     ??_I2C_MasterEnableIrq:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078     0020                     ??_I2C_MasterDisableIrq:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081     0020                     ??_I2C_MasterClose:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084     0020                     ??_I2C_MasterStart:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087     0020                     ?_I2C_SetCallback:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090     0020                     ??_PIN_MANAGER_Initialize:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093     0020                     ??_EUSART_is_tx_done:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096     0020                     ??_EUSART_Read:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099     0020                     ??_EUSART_Write:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102     0020                     ??_TMR1_StartTimer:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105     0020                     ??_I2C_MasterOperation:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108     0020                     ??_Task_Indicator:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111     0020                     ??_Device_Init:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114     0020                     ??_buildException:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117     0020                     ??_ModbusSlave_Init:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120     0020                     ?_Modbus_calcCRC:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123     0020                     ?__Umul8_16:	
  3124                           ; 2 bytes @ 0x0
  3125                           
  3126     0020                     ?_Get_millis:	
  3127                           ; 2 bytes @ 0x0
  3128                           
  3129     0020                     ?___fltol:	
  3130                           ; 4 bytes @ 0x0
  3131                           
  3132     0020                     ?___xxtofl:	
  3133                           ; 4 bytes @ 0x0
  3134                           
  3135     0020                     I2C_Close@returnValue:	
  3136                           ; 4 bytes @ 0x0
  3137                           
  3138     0020                     I2C_MasterOperation@read:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141     0020                     ModbusSlave_Init@_SW_Ad:	
  3142                           ; 1 bytes @ 0x0
  3143                           
  3144     0020                     __Umul8_16@multiplicand:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3151                           ; 2 bytes @ 0x0
  3152                           
  3153     0020                     EUSART_SetErrorHandler@interruptHandler:	
  3154                           ; 2 bytes @ 0x0
  3155                           
  3156     0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3157                           ; 2 bytes @ 0x0
  3158                           
  3159     0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3160                           ; 2 bytes @ 0x0
  3161                           
  3162     0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  3163                           ; 2 bytes @ 0x0
  3164                           
  3165     0020                     I2C_SetBuffer@bufferSize:	
  3166                           ; 2 bytes @ 0x0
  3167                           
  3168     0020                     I2C_SetInterruptHandler@InterruptHandler:	
  3169                           ; 2 bytes @ 0x0
  3170                           
  3171     0020                     I2C_SetCallback@cb:	
  3172                           ; 2 bytes @ 0x0
  3173                           
  3174     0020                     ___fltol@f1:	
  3175                           ; 2 bytes @ 0x0
  3176                           
  3177     0020                     ___xxtofl@val:	
  3178                           ; 4 bytes @ 0x0
  3179                           
  3180                           
  3181                           ; 4 bytes @ 0x0
  3182     0020                     	ds	1
  3183     0021                     EUSART_Read@readValue:
  3184     0021                     EUSART_Write@txData:	
  3185                           ; 1 bytes @ 0x1
  3186                           
  3187     0021                     I2C_MasterOperation@returnValue:	
  3188                           ; 1 bytes @ 0x1
  3189                           
  3190     0021                     buildException@exception:	
  3191                           ; 1 bytes @ 0x1
  3192                           
  3193                           
  3194                           ; 1 bytes @ 0x1
  3195     0021                     	ds	1
  3196     0022                     ??_I2C_Open:
  3197     0022                     ??_I2C_SetBuffer:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200     0022                     ??_I2C_MasterWrite:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203     0022                     ??_I2C_MasterRead:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206     0022                     ??_TMR1_Initialize:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209     0022                     ??_EUSART_Initialize:	
  3210                           ; 1 bytes @ 0x2
  3211                           
  3212     0022                     ??_EUSART_SetRxInterruptHandler:	
  3213                           ; 1 bytes @ 0x2
  3214                           
  3215     0022                     ??_EUSART_SetTxInterruptHandler:	
  3216                           ; 1 bytes @ 0x2
  3217                           
  3218     0022                     ??_EUSART_SetFramingErrorHandler:	
  3219                           ; 1 bytes @ 0x2
  3220                           
  3221     0022                     ??_EUSART_SetOverrunErrorHandler:	
  3222                           ; 1 bytes @ 0x2
  3223                           
  3224     0022                     ??_EUSART_SetErrorHandler:	
  3225                           ; 1 bytes @ 0x2
  3226                           
  3227     0022                     ??_TMR1_SetInterruptHandler:	
  3228                           ; 1 bytes @ 0x2
  3229                           
  3230     0022                     ??_I2C_SetInterruptHandler:	
  3231                           ; 1 bytes @ 0x2
  3232                           
  3233     0022                     ??_App_Init:	
  3234                           ; 1 bytes @ 0x2
  3235                           
  3236     0022                     ??_Tick_Init_SES:	
  3237                           ; 1 bytes @ 0x2
  3238                           
  3239     0022                     ??_Modbus_calcCRC:	
  3240                           ; 1 bytes @ 0x2
  3241                           
  3242     0022                     ??__Umul8_16:	
  3243                           ; 1 bytes @ 0x2
  3244                           
  3245     0022                     ??_SYSTEM_Initialize:	
  3246                           ; 1 bytes @ 0x2
  3247                           
  3248     0022                     ??_Modbus_getRxBuff:	
  3249                           ; 1 bytes @ 0x2
  3250                           
  3251     0022                     I2C_Open@address:	
  3252                           ; 1 bytes @ 0x2
  3253                           
  3254     0022                     I2C_SetBuffer@buffer:	
  3255                           ; 1 bytes @ 0x2
  3256                           
  3257     0022                     I2C_SetCallback@ptr:	
  3258                           ; 1 bytes @ 0x2
  3259                           
  3260     0022                     buildException@u8func:	
  3261                           ; 1 bytes @ 0x2
  3262                           
  3263                           
  3264                           ; 1 bytes @ 0x2
  3265     0022                     	ds	1
  3266     0023                     ??_I2C_SetCallback:
  3267     0023                     I2C_Open@returnValue:	
  3268                           ; 1 bytes @ 0x3
  3269                           
  3270     0023                     I2C_SetCallback@idx:	
  3271                           ; 1 bytes @ 0x3
  3272                           
  3273                           
  3274                           ; 1 bytes @ 0x3
  3275     0023                     	ds	1
  3276     0024                     ?_I2C_SetAddressNackCallback:
  3277     0024                     ??_Get_millis:	
  3278                           ; 1 bytes @ 0x4
  3279                           
  3280     0024                     ?_I2C_ReadNBytes:	
  3281                           ; 1 bytes @ 0x4
  3282                           
  3283     0024                     ??___fltol:	
  3284                           ; 1 bytes @ 0x4
  3285                           
  3286     0024                     ??___xxtofl:	
  3287                           ; 1 bytes @ 0x4
  3288                           
  3289     0024                     ?_llabs:	
  3290                           ; 1 bytes @ 0x4
  3291                           
  3292     0024                     I2C_ReadNBytes@data:	
  3293                           ; 8 bytes @ 0x4
  3294                           
  3295     0024                     I2C_SetAddressNackCallback@cb:	
  3296                           ; 1 bytes @ 0x4
  3297                           
  3298     0024                     __Umul8_16@product:	
  3299                           ; 2 bytes @ 0x4
  3300                           
  3301     0024                     llabs@a:	
  3302                           ; 2 bytes @ 0x4
  3303                           
  3304                           
  3305                           ; 8 bytes @ 0x4
  3306     0024                     	ds	1
  3307     0025                     I2C_ReadNBytes@len:
  3308                           
  3309                           ; 2 bytes @ 0x5
  3310     0025                     	ds	1
  3311     0026                     I2C_SetAddressNackCallback@ptr:
  3312     0026                     Modbus_calcCRC@temp2:	
  3313                           ; 2 bytes @ 0x6
  3314                           
  3315     0026                     __Umul8_16@word_mpld:	
  3316                           ; 2 bytes @ 0x6
  3317                           
  3318                           
  3319                           ; 2 bytes @ 0x6
  3320     0026                     	ds	1
  3321     0027                     ??_I2C_ReadNBytes:
  3322     0027                     I2C_ReadNBytes@address:	
  3323                           ; 1 bytes @ 0x7
  3324                           
  3325                           
  3326                           ; 1 bytes @ 0x7
  3327     0027                     	ds	1
  3328     0028                     ??_I2C_SetAddressNackCallback:
  3329     0028                     ?_I2C_WriteNBytes:	
  3330                           ; 1 bytes @ 0x8
  3331                           
  3332     0028                     I2C_WriteNBytes@data:	
  3333                           ; 1 bytes @ 0x8
  3334                           
  3335     0028                     ___fltol@sign1:	
  3336                           ; 1 bytes @ 0x8
  3337                           
  3338     0028                     __Umul8_16@multiplier:	
  3339                           ; 1 bytes @ 0x8
  3340                           
  3341     0028                     ___xxtofl@sign:	
  3342                           ; 1 bytes @ 0x8
  3343                           
  3344     0028                     Modbus_calcCRC@flag:	
  3345                           ; 1 bytes @ 0x8
  3346                           
  3347                           
  3348                           ; 2 bytes @ 0x8
  3349     0028                     	ds	1
  3350     0029                     Modbus_getRxBuff@bBuffOverflow:
  3351     0029                     ___fltol@exp1:	
  3352                           ; 1 bytes @ 0x9
  3353                           
  3354     0029                     ___xxtofl@exp:	
  3355                           ; 1 bytes @ 0x9
  3356                           
  3357     0029                     I2C_WriteNBytes@len:	
  3358                           ; 1 bytes @ 0x9
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x9
  3362     0029                     	ds	1
  3363     002A                     Modbus_calcCRC@len:
  3364     002A                     ___xxtofl@arg:	
  3365                           ; 1 bytes @ 0xA
  3366                           
  3367                           
  3368                           ; 4 bytes @ 0xA
  3369     002A                     	ds	1
  3370     002B                     ??_I2C_WriteNBytes:
  3371     002B                     I2C_WriteNBytes@address:	
  3372                           ; 1 bytes @ 0xB
  3373                           
  3374     002B                     Modbus_calcCRC@i:	
  3375                           ; 1 bytes @ 0xB
  3376                           
  3377                           
  3378                           ; 1 bytes @ 0xB
  3379     002B                     	ds	1
  3380     002C                     ??_llabs:
  3381     002C                     Modbus_calcCRC@j:	
  3382                           ; 1 bytes @ 0xC
  3383                           
  3384                           
  3385                           ; 1 bytes @ 0xC
  3386     002C                     	ds	1
  3387     002D                     Modbus_calcCRC@temp:
  3388                           
  3389                           ; 2 bytes @ 0xD
  3390     002D                     	ds	1
  3391     002E                     ?___flmul:
  3392     002E                     ___flmul@b:	
  3393                           ; 4 bytes @ 0xE
  3394                           
  3395                           
  3396                           ; 4 bytes @ 0xE
  3397     002E                     	ds	1
  3398     002F                     ??_Modbus_sendTxBuff:
  3399     002F                     ??_validateRequest:	
  3400                           ; 1 bytes @ 0xF
  3401                           
  3402                           
  3403                           ; 1 bytes @ 0xF
  3404     002F                     	ds	3
  3405     0032                     ___flmul@a:
  3406                           
  3407                           ; 4 bytes @ 0x12
  3408     0032                     	ds	4
  3409     0036                     ??___flmul:
  3410     0036                     Modbus_sendTxBuff@u16crc:	
  3411                           ; 1 bytes @ 0x16
  3412                           
  3413                           
  3414                           ; 2 bytes @ 0x16
  3415     0036                     	ds	2
  3416     0038                     Modbus_sendTxBuff@index:
  3417                           
  3418                           ; 2 bytes @ 0x18
  3419     0038                     	ds	2
  3420     003A                     Modbus_sendTxBuff@u32overTimecountDown:
  3421                           
  3422                           ; 4 bytes @ 0x1A
  3423     003A                     	ds	1
  3424     003B                     ___flmul@sign:
  3425                           
  3426                           ; 1 bytes @ 0x1B
  3427     003B                     	ds	1
  3428     003C                     validateRequest@u16MsgCRC:
  3429     003C                     ___flmul@grs:	
  3430                           ; 2 bytes @ 0x1C
  3431                           
  3432                           
  3433                           ; 4 bytes @ 0x1C
  3434     003C                     	ds	2
  3435     003E                     ?_ModbusSlaveF04:
  3436     003E                     validateRequest@isSupported:	
  3437                           ; 1 bytes @ 0x1E
  3438                           
  3439     003E                     ModbusSlaveF04@size:	
  3440                           ; 1 bytes @ 0x1E
  3441                           
  3442                           
  3443                           ; 2 bytes @ 0x1E
  3444     003E                     	ds	1
  3445     003F                     validateRequest@i:
  3446                           
  3447                           ; 1 bytes @ 0x1F
  3448     003F                     	ds	1
  3449     0040                     ??_ModbusSlaveF04:
  3450     0040                     ___flmul@aexp:	
  3451                           ; 1 bytes @ 0x20
  3452                           
  3453                           
  3454                           ; 1 bytes @ 0x20
  3455     0040                     	ds	1
  3456     0041                     ___flmul@bexp:
  3457                           
  3458                           ; 1 bytes @ 0x21
  3459     0041                     	ds	1
  3460     0042                     ___flmul@prod:
  3461                           
  3462                           ; 4 bytes @ 0x22
  3463     0042                     	ds	4
  3464     0046                     ___flmul@temp:
  3465                           
  3466                           ; 2 bytes @ 0x26
  3467     0046                     	ds	2
  3468     0048                     ?___fladd:
  3469     0048                     ___fladd@b:	
  3470                           ; 4 bytes @ 0x28
  3471                           
  3472                           
  3473                           ; 4 bytes @ 0x28
  3474     0048                     	ds	2
  3475     004A                     ModbusSlaveF04@u8StartAdd:
  3476                           
  3477                           ; 2 bytes @ 0x2A
  3478     004A                     	ds	2
  3479     004C                     ModbusSlaveF04@u8regsno:
  3480     004C                     ___fladd@a:	
  3481                           ; 1 bytes @ 0x2C
  3482                           
  3483                           
  3484                           ; 4 bytes @ 0x2C
  3485     004C                     	ds	1
  3486     004D                     ModbusSlaveF04@reg:
  3487                           
  3488                           ; 1 bytes @ 0x2D
  3489     004D                     	ds	1
  3490     004E                     ModbusSlaveF04@valueAdd:
  3491                           
  3492                           ; 2 bytes @ 0x2E
  3493     004E                     	ds	2
  3494     0050                     ??___fladd:
  3495     0050                     ModbusSlaveF04@valueRegsno:	
  3496                           ; 1 bytes @ 0x30
  3497                           
  3498                           
  3499                           ; 2 bytes @ 0x30
  3500     0050                     	ds	2
  3501     0052                     ModbusSlaveF04@i:
  3502                           
  3503                           ; 2 bytes @ 0x32
  3504     0052                     	ds	2
  3505     0054                     ?_ModbusRTU_Slave_Poll:
  3506     0054                     ModbusRTU_Slave_Poll@size:	
  3507                           ; 1 bytes @ 0x34
  3508                           
  3509                           
  3510                           ; 2 bytes @ 0x34
  3511     0054                     	ds	2
  3512     0056                     ??_ModbusRTU_Slave_Poll:
  3513                           
  3514                           ; 1 bytes @ 0x36
  3515     0056                     	ds	2
  3516     0058                     ___fladd@signs:
  3517                           
  3518                           ; 1 bytes @ 0x38
  3519     0058                     	ds	1
  3520     0059                     ___fladd@aexp:
  3521                           
  3522                           ; 1 bytes @ 0x39
  3523     0059                     	ds	1
  3524     005A                     ___fladd@bexp:
  3525                           
  3526                           ; 1 bytes @ 0x3A
  3527     005A                     	ds	1
  3528     005B                     ___fladd@grs:
  3529                           
  3530                           ; 1 bytes @ 0x3B
  3531     005B                     	ds	1
  3532     005C                     ?___fldiv:
  3533     005C                     ___fldiv@a:	
  3534                           ; 4 bytes @ 0x3C
  3535                           
  3536                           
  3537                           ; 4 bytes @ 0x3C
  3538     005C                     	ds	2
  3539     005E                     ModbusRTU_Slave_Poll@reg:
  3540                           
  3541                           ; 1 bytes @ 0x3E
  3542     005E                     	ds	1
  3543     005F                     ModbusRTU_Slave_Poll@u8Current:
  3544                           
  3545                           ; 1 bytes @ 0x3F
  3546     005F                     	ds	1
  3547     0060                     ModbusRTU_Slave_Poll@i8state:
  3548     0060                     ___fldiv@b:	
  3549                           ; 1 bytes @ 0x40
  3550                           
  3551                           
  3552                           ; 4 bytes @ 0x40
  3553     0060                     	ds	1
  3554     0061                     ModbusRTU_Slave_Poll@u8exception:
  3555                           
  3556                           ; 1 bytes @ 0x41
  3557     0061                     	ds	1
  3558     0062                     ??_Task_MB:
  3559     0062                     ??_ModbusSlave_Process:	
  3560                           ; 1 bytes @ 0x42
  3561                           
  3562                           
  3563                           ; 1 bytes @ 0x42
  3564     0062                     	ds	2
  3565     0064                     ??___fldiv:
  3566                           
  3567                           ; 1 bytes @ 0x44
  3568     0064                     	ds	5
  3569     0069                     ??_App_Process:
  3570     0069                     ??_main:	
  3571                           ; 1 bytes @ 0x49
  3572                           
  3573                           
  3574                           	psect	maintext
  3575     1388                     __pmaintext:	
  3576                           ; 1 bytes @ 0x49
  3577 ;;
  3578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3579 ;;
  3580 ;; *************** function _main *****************
  3581 ;; Defined at:
  3582 ;;		line 49 in file "main.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : B1F/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3596 ;;      Params:         0       0       0       0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels required when called: 14
  3602 ;; This function calls:
  3603 ;;		_App_Init
  3604 ;;		_App_Process
  3605 ;;		_SYSTEM_Initialize
  3606 ;; This function is called by:
  3607 ;;		Startup code after reset
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611     1388                     _main:	
  3612                           ;psect for function _main
  3613                           
  3614     1388                     l5195:	
  3615                           ;incstack = 0
  3616                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3617                           
  3618                           
  3619                           ;main.c: 51:     SYSTEM_Initialize();
  3620     1388  3194  241F  3193   	fcall	_SYSTEM_Initialize
  3621                           
  3622                           ;main.c: 52:     App_Init();
  3623     138B  3193  230F  3193   	fcall	_App_Init
  3624     138E                     l5197:
  3625                           
  3626                           ;main.c: 57:     (INTCONbits.GIE = 1);
  3627     138E  178B               	bsf	11,7	;volatile
  3628     138F                     l5199:
  3629                           
  3630                           ;main.c: 60:     (INTCONbits.PEIE = 1);
  3631     138F  170B               	bsf	11,6	;volatile
  3632     1390                     l5201:
  3633                           
  3634                           ;main.c: 70:         App_Process();
  3635     1390  3193  2319  3193   	fcall	_App_Process
  3636     1393  2B90               	goto	l5201
  3637     1394  3180  2858         	ljmp	start
  3638     1396                     __end_of_main:
  3639                           
  3640                           	psect	text1
  3641     141F                     __ptext1:	
  3642 ;; *************** function _SYSTEM_Initialize *****************
  3643 ;; Defined at:
  3644 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, pclath, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3658 ;;      Params:         0       0       0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 9
  3665 ;; This function calls:
  3666 ;;		_EUSART_Initialize
  3667 ;;		_I2C_Initialize
  3668 ;;		_OSCILLATOR_Initialize
  3669 ;;		_PIN_MANAGER_Initialize
  3670 ;;		_TMR1_Initialize
  3671 ;;		_WDT_Initialize
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677     141F                     _SYSTEM_Initialize:	
  3678                           ;psect for function _SYSTEM_Initialize
  3679                           
  3680     141F                     l5007:	
  3681                           ;incstack = 0
  3682                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3683                           
  3684                           
  3685                           ;mcc_generated_files/mcc.c: 52:     I2C_Initialize();
  3686     141F  3192  22FC  3194   	fcall	_I2C_Initialize
  3687                           
  3688                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3689     1422  3194  24C9  3194   	fcall	_PIN_MANAGER_Initialize
  3690                           
  3691                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3692     1425  3192  229D  3194   	fcall	_OSCILLATOR_Initialize
  3693                           
  3694                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3695     1428  3192  2250  3194   	fcall	_WDT_Initialize
  3696                           
  3697                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  3698     142B  3194  24AE  3194   	fcall	_TMR1_Initialize
  3699                           
  3700                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3701     142E  3197  2735  3194   	fcall	_EUSART_Initialize
  3702     1431                     l163:
  3703     1431  0008               	return
  3704     1432                     __end_of_SYSTEM_Initialize:
  3705                           
  3706                           	psect	text2
  3707     1250                     __ptext2:	
  3708 ;; *************** function _WDT_Initialize *****************
  3709 ;; Defined at:
  3710 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3724 ;;      Params:         0       0       0       0       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0
  3727 ;;      Totals:         0       0       0       0       0       0       0       0
  3728 ;;Total ram usage:        0 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 7
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_SYSTEM_Initialize
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738     1250                     _WDT_Initialize:	
  3739                           ;psect for function _WDT_Initialize
  3740                           
  3741     1250                     l4841:	
  3742                           ;incstack = 0
  3743                           ; Regs used in _WDT_Initialize: [wreg]
  3744                           
  3745                           
  3746                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x24;
  3747     1250  3024               	movlw	36
  3748     1251  0021               	movlb	1	; select bank1
  3749     1252  0097               	movwf	23	;volatile
  3750     1253                     l169:
  3751     1253  0008               	return
  3752     1254                     __end_of_WDT_Initialize:
  3753                           
  3754                           	psect	text3
  3755     14AE                     __ptext3:	
  3756 ;; *************** function _TMR1_Initialize *****************
  3757 ;; Defined at:
  3758 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3772 ;;      Params:         0       0       0       0       0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 8
  3779 ;; This function calls:
  3780 ;;		_TMR1_SetInterruptHandler
  3781 ;; This function is called by:
  3782 ;;		_SYSTEM_Initialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786     14AE                     _TMR1_Initialize:	
  3787                           ;psect for function _TMR1_Initialize
  3788                           
  3789     14AE                     l4843:	
  3790                           ;incstack = 0
  3791                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3792                           
  3793                           
  3794                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3795     14AE  0020               	movlb	0	; select bank0
  3796     14AF  0199               	clrf	25	;volatile
  3797     14B0                     l4845:
  3798                           
  3799                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3800     14B0  30E0               	movlw	224
  3801     14B1  0097               	movwf	23	;volatile
  3802     14B2                     l4847:
  3803                           
  3804                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3805     14B2  30C0               	movlw	192
  3806     14B3  0096               	movwf	22	;volatile
  3807     14B4                     l4849:
  3808                           
  3809                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3810     14B4  1011               	bcf	17,0	;volatile
  3811     14B5                     l4851:
  3812                           
  3813                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3814     14B5  0817               	movf	23,w	;volatile
  3815     14B6  0021               	movlb	1	; select bank1
  3816     14B7  00E0               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3817     14B8  0020               	movlb	0	; select bank0
  3818     14B9  0816               	movf	22,w	;volatile
  3819     14BA  0021               	movlb	1	; select bank1
  3820     14BB  00DF               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3821     14BC                     l4853:
  3822                           
  3823                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3824     14BC  1411               	bsf	17,0	;volatile
  3825     14BD                     l4855:
  3826                           
  3827                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3828     14BD  3011               	movlw	low _TMR1_DefaultInterruptHandler
  3829     14BE  0020               	movlb	0	; select bank0
  3830     14BF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3831     14C0  3012               	movlw	high _TMR1_DefaultInterruptHandler
  3832     14C1  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3833     14C2  3192  22BD  3194   	fcall	_TMR1_SetInterruptHandler
  3834     14C5                     l4857:
  3835                           
  3836                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3837     14C5  3041               	movlw	65
  3838     14C6  0020               	movlb	0	; select bank0
  3839     14C7  0098               	movwf	24	;volatile
  3840     14C8                     l381:
  3841     14C8  0008               	return
  3842     14C9                     __end_of_TMR1_Initialize:
  3843                           
  3844                           	psect	text4
  3845     14C9                     __ptext4:	
  3846 ;; *************** function _PIN_MANAGER_Initialize *****************
  3847 ;; Defined at:
  3848 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3862 ;;      Params:         0       0       0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 7
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_SYSTEM_Initialize
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876     14C9                     _PIN_MANAGER_Initialize:	
  3877                           ;psect for function _PIN_MANAGER_Initialize
  3878                           
  3879     14C9                     l4803:	
  3880                           ;incstack = 0
  3881                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3882                           
  3883                           
  3884                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3885     14C9  0022               	movlb	2	; select bank2
  3886     14CA  0190               	clrf	16	;volatile
  3887                           
  3888                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3889     14CB  018C               	clrf	12	;volatile
  3890                           
  3891                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3892     14CC  018D               	clrf	13	;volatile
  3893     14CD                     l4805:
  3894                           
  3895                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x63;
  3896     14CD  3063               	movlw	99
  3897     14CE  008E               	movwf	14	;volatile
  3898     14CF                     l4807:
  3899                           
  3900                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3901     14CF  3008               	movlw	8
  3902     14D0  0021               	movlb	1	; select bank1
  3903     14D1  0090               	movwf	16	;volatile
  3904     14D2                     l4809:
  3905                           
  3906                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3907     14D2  30FF               	movlw	255
  3908     14D3  008C               	movwf	12	;volatile
  3909     14D4                     l4811:
  3910                           
  3911                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3912     14D4  30FF               	movlw	255
  3913     14D5  008D               	movwf	13	;volatile
  3914     14D6                     l4813:
  3915                           
  3916                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3917     14D6  309C               	movlw	156
  3918     14D7  008E               	movwf	14	;volatile
  3919     14D8                     l4815:
  3920                           
  3921                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3922     14D8  303F               	movlw	63
  3923     14D9  0023               	movlb	3	; select bank3
  3924     14DA  008D               	movwf	13	;volatile
  3925     14DB                     l4817:
  3926                           
  3927                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3928     14DB  3030               	movlw	48
  3929     14DC  008C               	movwf	12	;volatile
  3930     14DD                     l4819:
  3931                           
  3932                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3933     14DD  0024               	movlb	4	; select bank4
  3934     14DE  0190               	clrf	16	;volatile
  3935     14DF                     l4821:
  3936                           
  3937                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3938     14DF  018D               	clrf	13	;volatile
  3939     14E0                     l4823:
  3940                           
  3941                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3942     14E0  0021               	movlb	1	; select bank1
  3943     14E1  1795               	bsf	21,7	;volatile
  3944     14E2                     l4825:
  3945                           
  3946                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3947     14E2  0022               	movlb	2	; select bank2
  3948     14E3  019D               	clrf	29	;volatile
  3949     14E4                     l135:
  3950     14E4  0008               	return
  3951     14E5                     __end_of_PIN_MANAGER_Initialize:
  3952                           
  3953                           	psect	text5
  3954     129D                     __ptext5:	
  3955 ;; *************** function _OSCILLATOR_Initialize *****************
  3956 ;; Defined at:
  3957 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3971 ;;      Params:         0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 7
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_SYSTEM_Initialize
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985     129D                     _OSCILLATOR_Initialize:	
  3986                           ;psect for function _OSCILLATOR_Initialize
  3987                           
  3988     129D                     l4835:	
  3989                           ;incstack = 0
  3990                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3991                           
  3992                           
  3993                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3994     129D  3070               	movlw	112
  3995     129E  0021               	movlb	1	; select bank1
  3996     129F  0099               	movwf	25	;volatile
  3997     12A0                     l4837:
  3998                           
  3999                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  4000     12A0  0198               	clrf	24	;volatile
  4001     12A1                     l4839:
  4002                           
  4003                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  4004     12A1  0022               	movlb	2	; select bank2
  4005     12A2  0196               	clrf	22	;volatile
  4006     12A3                     l166:
  4007     12A3  0008               	return
  4008     12A4                     __end_of_OSCILLATOR_Initialize:
  4009                           
  4010                           	psect	text6
  4011     12FC                     __ptext6:	
  4012 ;; *************** function _I2C_Initialize *****************
  4013 ;; Defined at:
  4014 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4028 ;;      Params:         0       0       0       0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 7
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_SYSTEM_Initialize
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042     12FC                     _I2C_Initialize:	
  4043                           ;psect for function _I2C_Initialize
  4044                           
  4045     12FC                     l4827:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4048                           
  4049                           
  4050                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  4051     12FC  0024               	movlb	4	; select bank4
  4052     12FD  0194               	clrf	20	;volatile
  4053     12FE                     l4829:
  4054                           
  4055                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4056     12FE  3008               	movlw	8
  4057     12FF  0095               	movwf	21	;volatile
  4058     1300                     l4831:
  4059                           
  4060                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4061     1300  0196               	clrf	22	;volatile
  4062                           
  4063                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  4064     1301  3013               	movlw	19
  4065     1302  0092               	movwf	18	;volatile
  4066     1303                     l4833:
  4067                           
  4068                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4069     1303  1295               	bcf	21,5	;volatile
  4070     1304                     l514:
  4071     1304  0008               	return
  4072     1305                     __end_of_I2C_Initialize:
  4073                           
  4074                           	psect	text7
  4075     1735                     __ptext7:	
  4076 ;; *************** function _EUSART_Initialize *****************
  4077 ;; Defined at:
  4078 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4092 ;;      Params:         0       0       0       0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 8
  4099 ;; This function calls:
  4100 ;;		_EUSART_SetErrorHandler
  4101 ;;		_EUSART_SetFramingErrorHandler
  4102 ;;		_EUSART_SetOverrunErrorHandler
  4103 ;;		_EUSART_SetRxInterruptHandler
  4104 ;;		_EUSART_SetTxInterruptHandler
  4105 ;; This function is called by:
  4106 ;;		_SYSTEM_Initialize
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110     1735                     _EUSART_Initialize:	
  4111                           ;psect for function _EUSART_Initialize
  4112                           
  4113     1735                     l4859:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4116                           
  4117                           
  4118                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4119     1735  0021               	movlb	1	; select bank1
  4120     1736  1291               	bcf	17,5	;volatile
  4121     1737                     l4861:
  4122                           
  4123                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4124     1737  30F4               	movlw	low _EUSART_Receive_ISR
  4125     1738  0020               	movlb	0	; select bank0
  4126     1739  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4127     173A  3016               	movlw	high _EUSART_Receive_ISR
  4128     173B  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4129     173C  3192  22EA  3197   	fcall	_EUSART_SetRxInterruptHandler
  4130     173F                     l4863:
  4131                           
  4132                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4133     173F  0021               	movlb	1	; select bank1
  4134     1740  1211               	bcf	17,4	;volatile
  4135                           
  4136                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4137     1741  3006               	movlw	low _EUSART_Transmit_ISR
  4138     1742  0020               	movlb	0	; select bank0
  4139     1743  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4140     1744  3015               	movlw	high _EUSART_Transmit_ISR
  4141     1745  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4142     1746  3192  22F3  3197   	fcall	_EUSART_SetTxInterruptHandler
  4143     1749                     l4865:
  4144                           
  4145                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4146     1749  3008               	movlw	8
  4147     174A  0023               	movlb	3	; select bank3
  4148     174B  009F               	movwf	31	;volatile
  4149     174C                     l4867:
  4150                           
  4151                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4152     174C  3090               	movlw	144
  4153     174D  009D               	movwf	29	;volatile
  4154     174E                     l4869:
  4155                           
  4156                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4157     174E  3024               	movlw	36
  4158     174F  009E               	movwf	30	;volatile
  4159     1750                     l4871:
  4160                           
  4161                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  4162     1750  30CF               	movlw	207
  4163     1751  009B               	movwf	27	;volatile
  4164     1752                     l4873:
  4165                           
  4166                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4167     1752  019C               	clrf	28	;volatile
  4168     1753                     l4875:
  4169                           
  4170                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4171     1753  3010               	movlw	low _EUSART_DefaultFramingErrorHandler
  4172     1754  0020               	movlb	0	; select bank0
  4173     1755  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4174     1756  3012               	movlw	high _EUSART_DefaultFramingErrorHandler
  4175     1757  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4176     1758  3192  22D8  3197   	fcall	_EUSART_SetFramingErrorHandler
  4177     175B                     l4877:
  4178                           
  4179                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4180     175B  303C               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4181     175C  0020               	movlb	0	; select bank0
  4182     175D  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4183     175E  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4184     175F  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4185     1760  3192  22E1  3197   	fcall	_EUSART_SetOverrunErrorHandler
  4186     1763                     l4879:
  4187                           
  4188                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4189     1763  3038               	movlw	low _EUSART_DefaultErrorHandler
  4190     1764  0020               	movlb	0	; select bank0
  4191     1765  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4192     1766  3012               	movlw	high _EUSART_DefaultErrorHandler
  4193     1767  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4194     1768  3192  22CF  3197   	fcall	_EUSART_SetErrorHandler
  4195                           
  4196                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4197     176B  01FD               	clrf	_eusartRxLastError	;volatile
  4198                           
  4199                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4200     176C  0020               	movlb	0	; select bank0
  4201     176D  01EF               	clrf	_eusartTxHead	;volatile
  4202                           
  4203                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4204     176E  01EE               	clrf	_eusartTxTail	;volatile
  4205     176F                     l4881:
  4206                           
  4207                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4208     176F  3008               	movlw	8
  4209     1770  00ED               	movwf	_eusartTxBufferRemaining	;volatile
  4210     1771                     l4883:
  4211                           
  4212                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4213     1771  01EC               	clrf	_eusartRxHead	;volatile
  4214     1772                     l4885:
  4215                           
  4216                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4217     1772  01EB               	clrf	_eusartRxTail	;volatile
  4218     1773                     l4887:
  4219                           
  4220                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4221     1773  01EA               	clrf	_eusartRxCount	;volatile
  4222     1774                     l4889:
  4223                           
  4224                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4225     1774  0021               	movlb	1	; select bank1
  4226     1775  1691               	bsf	17,5	;volatile
  4227     1776                     l279:
  4228     1776  0008               	return
  4229     1777                     __end_of_EUSART_Initialize:
  4230                           
  4231                           	psect	text8
  4232     12F3                     __ptext8:	
  4233 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4234 ;; Defined at:
  4235 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4238 ;;		 -> EUSART_Transmit_ISR(1), 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4250 ;;      Params:         0       2       0       0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0
  4253 ;;      Totals:         0       2       0       0       0       0       0       0
  4254 ;;Total ram usage:        2 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 7
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_EUSART_Initialize
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264     12F3                     _EUSART_SetTxInterruptHandler:	
  4265                           ;psect for function _EUSART_SetTxInterruptHandler
  4266                           
  4267     12F3                     l4591:	
  4268                           ;incstack = 0
  4269                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4270                           
  4271                           
  4272                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4273     12F3  0020               	movlb	0	; select bank0
  4274     12F4  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4275     12F5  0022               	movlb	2	; select bank2
  4276     12F6  00EA               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
  4277     12F7  0020               	movlb	0	; select bank0
  4278     12F8  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4279     12F9  0022               	movlb	2	; select bank2
  4280     12FA  00E9               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
  4281     12FB                     l351:
  4282     12FB  0008               	return
  4283     12FC                     __end_of_EUSART_SetTxInterruptHandler:
  4284                           
  4285                           	psect	text9
  4286     12EA                     __ptext9:	
  4287 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4288 ;; Defined at:
  4289 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4292 ;;		 -> EUSART_Receive_ISR(1), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4304 ;;      Params:         0       2       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0
  4307 ;;      Totals:         0       2       0       0       0       0       0       0
  4308 ;;Total ram usage:        2 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 7
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_EUSART_Initialize
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318     12EA                     _EUSART_SetRxInterruptHandler:	
  4319                           ;psect for function _EUSART_SetRxInterruptHandler
  4320                           
  4321     12EA                     l4589:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4324                           
  4325                           
  4326                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4327     12EA  0020               	movlb	0	; select bank0
  4328     12EB  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4329     12EC  0022               	movlb	2	; select bank2
  4330     12ED  00E8               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
  4331     12EE  0020               	movlb	0	; select bank0
  4332     12EF  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4333     12F0  0022               	movlb	2	; select bank2
  4334     12F1  00E7               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
  4335     12F2                     l354:
  4336     12F2  0008               	return
  4337     12F3                     __end_of_EUSART_SetRxInterruptHandler:
  4338                           
  4339                           	psect	text10
  4340     12E1                     __ptext10:	
  4341 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4342 ;; Defined at:
  4343 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4346 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4358 ;;      Params:         0       2       0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0
  4361 ;;      Totals:         0       2       0       0       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 7
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_EUSART_Initialize
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372     12E1                     _EUSART_SetOverrunErrorHandler:	
  4373                           ;psect for function _EUSART_SetOverrunErrorHandler
  4374                           
  4375     12E1                     l4595:	
  4376                           ;incstack = 0
  4377                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4378                           
  4379                           
  4380                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4381     12E1  0020               	movlb	0	; select bank0
  4382     12E2  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4383     12E3  0022               	movlb	2	; select bank2
  4384     12E4  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  4385     12E5  0020               	movlb	0	; select bank0
  4386     12E6  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4387     12E7  0022               	movlb	2	; select bank2
  4388     12E8  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  4389     12E9                     l345:
  4390     12E9  0008               	return
  4391     12EA                     __end_of_EUSART_SetOverrunErrorHandler:
  4392                           
  4393                           	psect	text11
  4394     12D8                     __ptext11:	
  4395 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4396 ;; Defined at:
  4397 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4400 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4412 ;;      Params:         0       2       0       0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0
  4415 ;;      Totals:         0       2       0       0       0       0       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 7
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_EUSART_Initialize
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426     12D8                     _EUSART_SetFramingErrorHandler:	
  4427                           ;psect for function _EUSART_SetFramingErrorHandler
  4428                           
  4429     12D8                     l4593:	
  4430                           ;incstack = 0
  4431                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4432                           
  4433                           
  4434                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4435     12D8  0020               	movlb	0	; select bank0
  4436     12D9  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4437     12DA  0022               	movlb	2	; select bank2
  4438     12DB  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  4439     12DC  0020               	movlb	0	; select bank0
  4440     12DD  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4441     12DE  0022               	movlb	2	; select bank2
  4442     12DF  00E5               	movwf	_EUSART_FramingErrorHandler^(0+256)
  4443     12E0                     l342:
  4444     12E0  0008               	return
  4445     12E1                     __end_of_EUSART_SetFramingErrorHandler:
  4446                           
  4447                           	psect	text12
  4448     12CF                     __ptext12:	
  4449 ;; *************** function _EUSART_SetErrorHandler *****************
  4450 ;; Defined at:
  4451 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4454 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4466 ;;      Params:         0       2       0       0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0
  4469 ;;      Totals:         0       2       0       0       0       0       0       0
  4470 ;;Total ram usage:        2 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 7
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_EUSART_Initialize
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480     12CF                     _EUSART_SetErrorHandler:	
  4481                           ;psect for function _EUSART_SetErrorHandler
  4482                           
  4483     12CF                     l4597:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4486                           
  4487                           
  4488                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4489     12CF  0020               	movlb	0	; select bank0
  4490     12D0  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4491     12D1  0023               	movlb	3	; select bank3
  4492     12D2  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
  4493     12D3  0020               	movlb	0	; select bank0
  4494     12D4  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4495     12D5  0023               	movlb	3	; select bank3
  4496     12D6  00A0               	movwf	_EUSART_ErrorHandler^(0+384)
  4497     12D7                     l348:
  4498     12D7  0008               	return
  4499     12D8                     __end_of_EUSART_SetErrorHandler:
  4500                           
  4501                           	psect	text13
  4502     1319                     __ptext13:	
  4503 ;; *************** function _App_Process *****************
  4504 ;; Defined at:
  4505 ;;		line 61 in file "MCU.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4519 ;;      Params:         0       0       0       0       0       0       0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0
  4522 ;;      Totals:         0       0       0       0       0       0       0       0
  4523 ;;Total ram usage:        0 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 13
  4526 ;; This function calls:
  4527 ;;		_Task_Indicator
  4528 ;;		_Task_MB
  4529 ;;		_Task_Sensor
  4530 ;; This function is called by:
  4531 ;;		_main
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535     1319                     _App_Process:	
  4536                           ;psect for function _App_Process
  4537                           
  4538     1319                     l5053:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _App_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4541                           
  4542                           
  4543                           ;MCU.c: 62:     Task_Sensor();
  4544     1319  318B  2333  3193   	fcall	_Task_Sensor
  4545     131C                     l5055:
  4546                           
  4547                           ;MCU.c: 63:     Task_MB();
  4548     131C  3193  23FC  3193   	fcall	_Task_MB
  4549     131F                     l5057:
  4550                           
  4551                           ;MCU.c: 64:     Task_Indicator();
  4552     131F  3196  26C5  3193   	fcall	_Task_Indicator
  4553     1322                     l883:
  4554     1322  0008               	return
  4555     1323                     __end_of_App_Process:
  4556                           
  4557                           	psect	text14
  4558     0B33                     __ptext14:	
  4559 ;; *************** function _Task_Sensor *****************
  4560 ;; Defined at:
  4561 ;;		line 47 in file "I2C_SHT30.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4575 ;;      Params:         0       0       0       0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0
  4577 ;;      Temps:          0       0      12       0       0       0       0       0
  4578 ;;      Totals:         0       0      12       0       0       0       0       0
  4579 ;;Total ram usage:       12 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 12
  4582 ;; This function calls:
  4583 ;;		_Get_millis
  4584 ;;		_ReadData
  4585 ;;		_llabs
  4586 ;; This function is called by:
  4587 ;;		_App_Process
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591     0B33                     _Task_Sensor:	
  4592                           ;psect for function _Task_Sensor
  4593                           
  4594     0B33                     l4925:	
  4595                           ;incstack = 0
  4596                           ; Regs used in _Task_Sensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4597                           
  4598                           
  4599                           ;I2C_SHT30.c: 48:     static uint32_t valTime = 0;;I2C_SHT30.c: 51:     if ((llabs(((uin
      +                          t32_t) Get_millis() - valTime)) >= (uint32_t) 2 * 1000)) {
  4600     0B33  3193  23EB  318B   	fcall	_Get_millis
  4601     0B36  0022               	movlb	2	; select bank2
  4602     0B37  0855               	movf	Task_Sensor@valTime^(0+256),w
  4603     0B38  0020               	movlb	0	; select bank0
  4604     0B39  0220               	subwf	?_Get_millis,w
  4605     0B3A  0021               	movlb	1	; select bank1
  4606     0B3B  00CB               	movwf	??_Task_Sensor^(0+128)
  4607     0B3C  0022               	movlb	2	; select bank2
  4608     0B3D  0856               	movf	(Task_Sensor@valTime+1)^(0+256),w
  4609     0B3E  0020               	movlb	0	; select bank0
  4610     0B3F  3B21               	subwfb	?_Get_millis+1,w
  4611     0B40  0021               	movlb	1	; select bank1
  4612     0B41  00CC               	movwf	(??_Task_Sensor^(0+128)+1)
  4613     0B42  0022               	movlb	2	; select bank2
  4614     0B43  0857               	movf	(Task_Sensor@valTime+2)^(0+256),w
  4615     0B44  0020               	movlb	0	; select bank0
  4616     0B45  3B22               	subwfb	?_Get_millis+2,w
  4617     0B46  0021               	movlb	1	; select bank1
  4618     0B47  00CD               	movwf	(??_Task_Sensor^(0+128)+2)
  4619     0B48  0022               	movlb	2	; select bank2
  4620     0B49  0858               	movf	(Task_Sensor@valTime+3)^(0+256),w
  4621     0B4A  0020               	movlb	0	; select bank0
  4622     0B4B  3B23               	subwfb	?_Get_millis+3,w
  4623     0B4C  0021               	movlb	1	; select bank1
  4624     0B4D  00CE               	movwf	(??_Task_Sensor^(0+128)+3)
  4625     0B4E  084B               	movf	??_Task_Sensor^(0+128),w
  4626     0B4F  00CF               	movwf	(??_Task_Sensor+4)^(0+128)
  4627     0B50  084C               	movf	(??_Task_Sensor+1)^(0+128),w
  4628     0B51  00D0               	movwf	((??_Task_Sensor+4)^(0+128)+1)
  4629     0B52  084D               	movf	(??_Task_Sensor+2)^(0+128),w
  4630     0B53  00D1               	movwf	((??_Task_Sensor+4)^(0+128)+2)
  4631     0B54  084E               	movf	(??_Task_Sensor+3)^(0+128),w
  4632     0B55  00D2               	movwf	((??_Task_Sensor+4)^(0+128)+3)
  4633     0B56  01D3               	clrf	((??_Task_Sensor+4)^(0+128)+4)
  4634     0B57  01D4               	clrf	((??_Task_Sensor+4)^(0+128)+5)
  4635     0B58  01D5               	clrf	((??_Task_Sensor+4)^(0+128)+6)
  4636     0B59  01D6               	clrf	((??_Task_Sensor+4)^(0+128)+7)
  4637     0B5A  0856               	movf	((??_Task_Sensor+4)^(0+128)+7),w
  4638     0B5B  0020               	movlb	0	; select bank0
  4639     0B5C  00AB               	movwf	llabs@a+7
  4640     0B5D  0021               	movlb	1	; select bank1
  4641     0B5E  0855               	movf	((??_Task_Sensor+4)^(0+128)+6),w
  4642     0B5F  0020               	movlb	0	; select bank0
  4643     0B60  00AA               	movwf	llabs@a+6
  4644     0B61  0021               	movlb	1	; select bank1
  4645     0B62  0854               	movf	((??_Task_Sensor+4)^(0+128)+5),w
  4646     0B63  0020               	movlb	0	; select bank0
  4647     0B64  00A9               	movwf	llabs@a+5
  4648     0B65  0021               	movlb	1	; select bank1
  4649     0B66  0853               	movf	((??_Task_Sensor+4)^(0+128)+4),w
  4650     0B67  0020               	movlb	0	; select bank0
  4651     0B68  00A8               	movwf	llabs@a+4
  4652     0B69  0021               	movlb	1	; select bank1
  4653     0B6A  0852               	movf	((??_Task_Sensor+4)^(0+128)+3),w
  4654     0B6B  0020               	movlb	0	; select bank0
  4655     0B6C  00A7               	movwf	llabs@a+3
  4656     0B6D  0021               	movlb	1	; select bank1
  4657     0B6E  0851               	movf	((??_Task_Sensor+4)^(0+128)+2),w
  4658     0B6F  0020               	movlb	0	; select bank0
  4659     0B70  00A6               	movwf	llabs@a+2
  4660     0B71  0021               	movlb	1	; select bank1
  4661     0B72  0850               	movf	((??_Task_Sensor+4)^(0+128)+1),w
  4662     0B73  0020               	movlb	0	; select bank0
  4663     0B74  00A5               	movwf	llabs@a+1
  4664     0B75  0021               	movlb	1	; select bank1
  4665     0B76  084F               	movf	(??_Task_Sensor+4)^(0+128),w
  4666     0B77  0020               	movlb	0	; select bank0
  4667     0B78  00A4               	movwf	llabs@a
  4668     0B79  3188  201E  318B   	fcall	_llabs
  4669     0B7C  0020               	movlb	0	; select bank0
  4670     0B7D  1BAB               	btfsc	?_llabs+7,7
  4671     0B7E  2B98               	goto	u4091
  4672     0B7F  082B               	movf	?_llabs+7,w
  4673     0B80  1D03               	btfss	3,2
  4674     0B81  2B99               	goto	u4090
  4675     0B82  082A               	movf	?_llabs+6,w
  4676     0B83  1D03               	btfss	3,2
  4677     0B84  2B99               	goto	u4090
  4678     0B85  0829               	movf	?_llabs+5,w
  4679     0B86  1D03               	btfss	3,2
  4680     0B87  2B99               	goto	u4090
  4681     0B88  0828               	movf	?_llabs+4,w
  4682     0B89  1D03               	btfss	3,2
  4683     0B8A  2B99               	goto	u4090
  4684     0B8B  0827               	movf	?_llabs+3,w
  4685     0B8C  1D03               	btfss	3,2
  4686     0B8D  2B99               	goto	u4090
  4687     0B8E  0826               	movf	?_llabs+2,w
  4688     0B8F  1D03               	btfss	3,2
  4689     0B90  2B99               	goto	u4090
  4690     0B91  30D0               	movlw	208
  4691     0B92  0224               	subwf	?_llabs,w
  4692     0B93  3007               	movlw	7
  4693     0B94  3B25               	subwfb	?_llabs+1,w
  4694     0B95  1C03               	btfss	3,0
  4695     0B96  2B98               	goto	u4091
  4696     0B97  2B99               	goto	u4090
  4697     0B98                     u4091:
  4698     0B98  2BC9               	goto	l817
  4699     0B99                     u4090:
  4700     0B99                     l4927:
  4701                           
  4702                           ;I2C_SHT30.c: 52:         valTime = Get_millis();
  4703     0B99  3193  23EB  318B   	fcall	_Get_millis
  4704     0B9C  0020               	movlb	0	; select bank0
  4705     0B9D  0823               	movf	?_Get_millis+3,w
  4706     0B9E  0022               	movlb	2	; select bank2
  4707     0B9F  00D8               	movwf	(Task_Sensor@valTime+3)^(0+256)
  4708     0BA0  0020               	movlb	0	; select bank0
  4709     0BA1  0822               	movf	?_Get_millis+2,w
  4710     0BA2  0022               	movlb	2	; select bank2
  4711     0BA3  00D7               	movwf	(Task_Sensor@valTime+2)^(0+256)
  4712     0BA4  0020               	movlb	0	; select bank0
  4713     0BA5  0821               	movf	?_Get_millis+1,w
  4714     0BA6  0022               	movlb	2	; select bank2
  4715     0BA7  00D6               	movwf	(Task_Sensor@valTime+1)^(0+256)
  4716     0BA8  0020               	movlb	0	; select bank0
  4717     0BA9  0820               	movf	?_Get_millis,w
  4718     0BAA  0022               	movlb	2	; select bank2
  4719     0BAB  00D5               	movwf	Task_Sensor@valTime^(0+256)
  4720     0BAC                     l4929:
  4721                           
  4722                           ;I2C_SHT30.c: 53:         f_Indicator = ON_Sensor;
  4723     0BAC  0021               	movlb	1	; select bank1
  4724     0BAD  01E3               	clrf	_f_Indicator^(0+128)
  4725     0BAE  0AE3               	incf	_f_Indicator^(0+128),f
  4726     0BAF                     l4931:
  4727                           
  4728                           ;I2C_SHT30.c: 54:         ReadData();
  4729     0BAF  3180  20A4  318B   	fcall	_ReadData
  4730     0BB2                     l4933:
  4731                           
  4732                           ;I2C_SHT30.c: 55:         if ((SensorAmbient.T.Val16 <= 0) || (SensorAmbient.H.Val16 == 
      +                          0)) {
  4733     0BB2  0021               	movlb	1	; select bank1
  4734     0BB3  085B               	movf	_SensorAmbient^(0+128),w
  4735     0BB4  045C               	iorwf	(_SensorAmbient+1)^(0+128),w
  4736     0BB5  1903               	btfsc	3,2
  4737     0BB6  2BB8               	goto	u4101
  4738     0BB7  2BB9               	goto	u4100
  4739     0BB8                     u4101:
  4740     0BB8  2BBF               	goto	l4937
  4741     0BB9                     u4100:
  4742     0BB9                     l4935:
  4743     0BB9  085D               	movf	(_SensorAmbient^(0+128)+2),w
  4744     0BBA  045E               	iorwf	((_SensorAmbient+1)^(0+128)+2),w
  4745     0BBB  1D03               	btfss	3,2
  4746     0BBC  2BBE               	goto	u4111
  4747     0BBD  2BBF               	goto	u4110
  4748     0BBE                     u4111:
  4749     0BBE  2BC9               	goto	l817
  4750     0BBF                     u4110:
  4751     0BBF                     l4937:
  4752                           
  4753                           ;I2C_SHT30.c: 56:             SensorAmbient.T.Val16 = 0xFFFF;
  4754     0BBF  30FF               	movlw	255
  4755     0BC0  00DB               	movwf	_SensorAmbient^(0+128)
  4756     0BC1  30FF               	movlw	255
  4757     0BC2  00DC               	movwf	(_SensorAmbient^(0+128)+1)
  4758                           
  4759                           ;I2C_SHT30.c: 57:             SensorAmbient.H.Val16 = 0xFFFF;
  4760     0BC3  30FF               	movlw	255
  4761     0BC4  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  4762     0BC5  30FF               	movlw	255
  4763     0BC6  00DE               	movwf	(_SensorAmbient^(0+128)+3)
  4764                           
  4765                           ;I2C_SHT30.c: 58:             f_Indicator = ERR_Sensor;
  4766     0BC7  3002               	movlw	2
  4767     0BC8  00E3               	movwf	_f_Indicator^(0+128)
  4768     0BC9                     l817:
  4769     0BC9  0008               	return
  4770     0BCA                     __end_of_Task_Sensor:
  4771                           
  4772                           	psect	text15
  4773     081E                     __ptext15:	
  4774 ;; *************** function _llabs *****************
  4775 ;; Defined at:
  4776 ;;		line 1 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\llabs.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  a               8    4[BANK0 ] long long 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  8    4[BANK0 ] long long 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4790 ;;      Params:         0       8       0       0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0
  4793 ;;      Totals:         0       8       0       0       0       0       0       0
  4794 ;;Total ram usage:        8 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; Hardware stack levels required when called: 7
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_Task_Sensor
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804     081E                     _llabs:	
  4805                           ;psect for function _llabs
  4806                           
  4807     081E                     l4779:	
  4808                           ;incstack = 0
  4809                           ; Regs used in _llabs: [wreg+status,2+status,0]
  4810                           
  4811     081E  0020               	movlb	0	; select bank0
  4812     081F  1BAB               	btfsc	llabs@a+7,7
  4813     0820  283C               	goto	u4020
  4814     0821  082B               	movf	llabs@a+7,w
  4815     0822  1D03               	btfss	3,2
  4816     0823  283B               	goto	u4021
  4817     0824  082A               	movf	llabs@a+6,w
  4818     0825  1D03               	btfss	3,2
  4819     0826  283B               	goto	u4021
  4820     0827  0829               	movf	llabs@a+5,w
  4821     0828  1D03               	btfss	3,2
  4822     0829  283B               	goto	u4021
  4823     082A  0828               	movf	llabs@a+4,w
  4824     082B  1D03               	btfss	3,2
  4825     082C  283B               	goto	u4021
  4826     082D  0827               	movf	llabs@a+3,w
  4827     082E  1D03               	btfss	3,2
  4828     082F  283B               	goto	u4021
  4829     0830  0826               	movf	llabs@a+2,w
  4830     0831  1D03               	btfss	3,2
  4831     0832  283B               	goto	u4021
  4832     0833  0825               	movf	llabs@a+1,w
  4833     0834  1D03               	btfss	3,2
  4834     0835  283B               	goto	u4021
  4835     0836  3001               	movlw	1
  4836     0837  0224               	subwf	llabs@a,w
  4837     0838  1803               	btfsc	3,0
  4838     0839  283B               	goto	u4021
  4839     083A  283C               	goto	u4020
  4840     083B                     u4021:
  4841     083B  2864               	goto	l1622
  4842     083C                     u4020:
  4843     083C                     l4781:
  4844     083C  0020               	movlb	0	; select bank0
  4845     083D  0924               	comf	llabs@a,w
  4846     083E  00A4               	movwf	?_llabs
  4847     083F  0925               	comf	llabs@a+1,w
  4848     0840  00A5               	movwf	?_llabs+1
  4849     0841  0926               	comf	llabs@a+2,w
  4850     0842  00A6               	movwf	?_llabs+2
  4851     0843  0927               	comf	llabs@a+3,w
  4852     0844  00A7               	movwf	?_llabs+3
  4853     0845  0928               	comf	llabs@a+4,w
  4854     0846  00A8               	movwf	?_llabs+4
  4855     0847  0929               	comf	llabs@a+5,w
  4856     0848  00A9               	movwf	?_llabs+5
  4857     0849  092A               	comf	llabs@a+6,w
  4858     084A  00AA               	movwf	?_llabs+6
  4859     084B  092B               	comf	llabs@a+7,w
  4860     084C  00AB               	movwf	?_llabs+7
  4861     084D  0AA4               	incf	?_llabs,f
  4862     084E  1D03               	skipz
  4863     084F  2863               	goto	u403lld
  4864     0850  0AA5               	incf	?_llabs+1,f
  4865     0851  1D03               	skipz
  4866     0852  2863               	goto	u403lld
  4867     0853  0AA6               	incf	?_llabs+2,f
  4868     0854  1D03               	skipz
  4869     0855  2863               	goto	u403lld
  4870     0856  0AA7               	incf	?_llabs+3,f
  4871     0857  1D03               	skipz
  4872     0858  2863               	goto	u403lld
  4873     0859  0AA8               	incf	?_llabs+4,f
  4874     085A  1D03               	skipz
  4875     085B  2863               	goto	u403lld
  4876     085C  0AA9               	incf	?_llabs+5,f
  4877     085D  1D03               	skipz
  4878     085E  2863               	goto	u403lld
  4879     085F  0AAA               	incf	?_llabs+6,f
  4880     0860  1D03               	skipz
  4881     0861  2863               	goto	u403lld
  4882     0862  0AAB               	incf	?_llabs+7,f
  4883     0863                     u403lld:
  4884     0863  2864               	goto	l1625
  4885     0864                     l1622:
  4886     0864                     l1625:
  4887     0864  0008               	return
  4888     0865                     __end_of_llabs:
  4889                           
  4890                           	psect	text16
  4891     00A4                     __ptext16:	
  4892 ;; *************** function _ReadData *****************
  4893 ;; Defined at:
  4894 ;;		line 26 in file "I2C_SHT30.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  aData           6   21[BANK1 ] unsigned char [6]
  4899 ;;  humidity        4   31[BANK1 ] unsigned char [6]
  4900 ;;  ctemp           4   27[BANK1 ] unsigned char [6]
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4910 ;;      Params:         0       0       0       0       0       0       0       0
  4911 ;;      Locals:         0       0      22       0       0       0       0       0
  4912 ;;      Temps:          0       0       8       0       0       0       0       0
  4913 ;;      Totals:         0       0      30       0       0       0       0       0
  4914 ;;Total ram usage:       30 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; Hardware stack levels required when called: 11
  4917 ;; This function calls:
  4918 ;;		_Get_millis
  4919 ;;		_I2C_ReadNBytes
  4920 ;;		_I2C_WriteNBytes
  4921 ;;		___fladd
  4922 ;;		___fldiv
  4923 ;;		___flmul
  4924 ;;		___fltol
  4925 ;;		___xxtofl
  4926 ;; This function is called by:
  4927 ;;		_Task_Sensor
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931     00A4                     _ReadData:	
  4932                           ;psect for function _ReadData
  4933                           
  4934     00A4                     l4771:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4937                           
  4938                           
  4939                           ;I2C_SHT30.c: 27:     uint8_t aData[6];;I2C_SHT30.c: 28:     static uint32_t valTime = 0
      +                          ;;I2C_SHT30.c: 29:     I2C_WriteNBytes(0x44, SHT30_CMD_MEASURE_M_Enable, 2);
  4940     00A4  30EA               	movlw	(low (_SHT30_CMD_MEASURE_M_Enable| 0))& (0+255)
  4941     00A5  0020               	movlb	0	; select bank0
  4942     00A6  00A8               	movwf	I2C_WriteNBytes@data
  4943     00A7  3002               	movlw	2
  4944     00A8  00A9               	movwf	I2C_WriteNBytes@len
  4945     00A9  3000               	movlw	0
  4946     00AA  00AA               	movwf	I2C_WriteNBytes@len+1
  4947     00AB  3044               	movlw	68
  4948     00AC  3196  266D  3180   	fcall	_I2C_WriteNBytes
  4949     00AF                     l4773:
  4950                           
  4951                           ;I2C_SHT30.c: 30:     valTime = Get_millis();
  4952     00AF  3193  23EB  3180   	fcall	_Get_millis
  4953     00B2  0020               	movlb	0	; select bank0
  4954     00B3  0823               	movf	?_Get_millis+3,w
  4955     00B4  0022               	movlb	2	; select bank2
  4956     00B5  00DC               	movwf	(ReadData@valTime+3)^(0+256)
  4957     00B6  0020               	movlb	0	; select bank0
  4958     00B7  0822               	movf	?_Get_millis+2,w
  4959     00B8  0022               	movlb	2	; select bank2
  4960     00B9  00DB               	movwf	(ReadData@valTime+2)^(0+256)
  4961     00BA  0020               	movlb	0	; select bank0
  4962     00BB  0821               	movf	?_Get_millis+1,w
  4963     00BC  0022               	movlb	2	; select bank2
  4964     00BD  00DA               	movwf	(ReadData@valTime+1)^(0+256)
  4965     00BE  0020               	movlb	0	; select bank0
  4966     00BF  0820               	movf	?_Get_millis,w
  4967     00C0  0022               	movlb	2	; select bank2
  4968     00C1  00D9               	movwf	ReadData@valTime^(0+256)
  4969     00C2                     l4775:	
  4970                           ;I2C_SHT30.c: 31:     while (((uint32_t) Get_millis() - valTime) < (uint32_t) 2 * 4);
  4971                           
  4972     00C2  3193  23EB  3180   	fcall	_Get_millis
  4973     00C5  0022               	movlb	2	; select bank2
  4974     00C6  0859               	movf	ReadData@valTime^(0+256),w
  4975     00C7  0020               	movlb	0	; select bank0
  4976     00C8  0220               	subwf	?_Get_millis,w
  4977     00C9  0021               	movlb	1	; select bank1
  4978     00CA  00AD               	movwf	??_ReadData^(0+128)
  4979     00CB  0022               	movlb	2	; select bank2
  4980     00CC  085A               	movf	(ReadData@valTime+1)^(0+256),w
  4981     00CD  0020               	movlb	0	; select bank0
  4982     00CE  3B21               	subwfb	?_Get_millis+1,w
  4983     00CF  0021               	movlb	1	; select bank1
  4984     00D0  00AE               	movwf	(??_ReadData^(0+128)+1)
  4985     00D1  0022               	movlb	2	; select bank2
  4986     00D2  085B               	movf	(ReadData@valTime+2)^(0+256),w
  4987     00D3  0020               	movlb	0	; select bank0
  4988     00D4  3B22               	subwfb	?_Get_millis+2,w
  4989     00D5  0021               	movlb	1	; select bank1
  4990     00D6  00AF               	movwf	(??_ReadData^(0+128)+2)
  4991     00D7  0022               	movlb	2	; select bank2
  4992     00D8  085C               	movf	(ReadData@valTime+3)^(0+256),w
  4993     00D9  0020               	movlb	0	; select bank0
  4994     00DA  3B23               	subwfb	?_Get_millis+3,w
  4995     00DB  0021               	movlb	1	; select bank1
  4996     00DC  00B0               	movwf	(??_ReadData^(0+128)+3)
  4997     00DD  0830               	movf	(??_ReadData^(0+128)+3),w
  4998     00DE  1D03               	btfss	3,2
  4999     00DF  28EC               	goto	u4010
  5000     00E0  082F               	movf	(??_ReadData^(0+128)+2),w
  5001     00E1  1D03               	btfss	3,2
  5002     00E2  28EC               	goto	u4010
  5003     00E3  082E               	movf	(??_ReadData^(0+128)+1),w
  5004     00E4  1D03               	btfss	3,2
  5005     00E5  28EC               	goto	u4010
  5006     00E6  3008               	movlw	8
  5007     00E7  022D               	subwf	??_ReadData^(0+128),w
  5008     00E8  1C03               	btfss	3,0
  5009     00E9  28EB               	goto	u4011
  5010     00EA  28EC               	goto	u4010
  5011     00EB                     u4011:
  5012     00EB  28C2               	goto	l4775
  5013     00EC                     u4010:
  5014     00EC                     l4777:
  5015                           
  5016                           ;I2C_SHT30.c: 33:     I2C_ReadNBytes(0x44, aData, 6);
  5017     00EC  30B5               	movlw	(low (ReadData@aData| 0))& (0+255)
  5018     00ED  0020               	movlb	0	; select bank0
  5019     00EE  00A4               	movwf	I2C_ReadNBytes@data
  5020     00EF  3006               	movlw	6
  5021     00F0  00A5               	movwf	I2C_ReadNBytes@len
  5022     00F1  3000               	movlw	0
  5023     00F2  00A6               	movwf	I2C_ReadNBytes@len+1
  5024     00F3  3044               	movlw	68
  5025     00F4  3194  24E5  3180   	fcall	_I2C_ReadNBytes
  5026                           
  5027                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5028     00F7  0021               	movlb	1	; select bank1
  5029     00F8  0836               	movf	(ReadData@aData^(0+128)+1),w
  5030     00F9  00AD               	movwf	??_ReadData^(0+128)
  5031     00FA  01AE               	clrf	(??_ReadData^(0+128)+1)
  5032     00FB  01AF               	clrf	(??_ReadData^(0+128)+2)
  5033     00FC  01B0               	clrf	(??_ReadData^(0+128)+3)
  5034     00FD  0830               	movf	(??_ReadData+3)^(0+128),w
  5035     00FE  0020               	movlb	0	; select bank0
  5036     00FF  00A3               	movwf	___xxtofl@val+3
  5037     0100  0021               	movlb	1	; select bank1
  5038     0101  082F               	movf	(??_ReadData+2)^(0+128),w
  5039     0102  0020               	movlb	0	; select bank0
  5040     0103  00A2               	movwf	___xxtofl@val+2
  5041     0104  0021               	movlb	1	; select bank1
  5042     0105  082E               	movf	(??_ReadData+1)^(0+128),w
  5043     0106  0020               	movlb	0	; select bank0
  5044     0107  00A1               	movwf	___xxtofl@val+1
  5045     0108  0021               	movlb	1	; select bank1
  5046     0109  082D               	movf	??_ReadData^(0+128),w
  5047     010A  0020               	movlb	0	; select bank0
  5048     010B  00A0               	movwf	___xxtofl@val
  5049     010C  3001               	movlw	1
  5050     010D  318C  246E  3180   	fcall	___xxtofl
  5051     0110  0020               	movlb	0	; select bank0
  5052     0111  0823               	movf	?___xxtofl+3,w
  5053     0112  00CB               	movwf	___fladd@b+3
  5054     0113  0822               	movf	?___xxtofl+2,w
  5055     0114  00CA               	movwf	___fladd@b+2
  5056     0115  0821               	movf	?___xxtofl+1,w
  5057     0116  00C9               	movwf	___fladd@b+1
  5058     0117  0820               	movf	?___xxtofl,w
  5059     0118  00C8               	movwf	___fladd@b
  5060     0119  3043               	movlw	67
  5061     011A  00B1               	movwf	___flmul@b+3
  5062     011B  3080               	movlw	128
  5063     011C  00B0               	movwf	___flmul@b+2
  5064     011D  3000               	movlw	0
  5065     011E  00AF               	movwf	___flmul@b+1
  5066     011F  3000               	movlw	0
  5067     0120  00AE               	movwf	___flmul@b
  5068     0121  0021               	movlb	1	; select bank1
  5069     0122  0835               	movf	ReadData@aData^(0+128),w
  5070     0123  00B1               	movwf	(??_ReadData+4)^(0+128)
  5071     0124  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5072     0125  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5073     0126  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5074     0127  0834               	movf	(??_ReadData+7)^(0+128),w
  5075     0128  0020               	movlb	0	; select bank0
  5076     0129  00A3               	movwf	___xxtofl@val+3
  5077     012A  0021               	movlb	1	; select bank1
  5078     012B  0833               	movf	(??_ReadData+6)^(0+128),w
  5079     012C  0020               	movlb	0	; select bank0
  5080     012D  00A2               	movwf	___xxtofl@val+2
  5081     012E  0021               	movlb	1	; select bank1
  5082     012F  0832               	movf	(??_ReadData+5)^(0+128),w
  5083     0130  0020               	movlb	0	; select bank0
  5084     0131  00A1               	movwf	___xxtofl@val+1
  5085     0132  0021               	movlb	1	; select bank1
  5086     0133  0831               	movf	(??_ReadData+4)^(0+128),w
  5087     0134  0020               	movlb	0	; select bank0
  5088     0135  00A0               	movwf	___xxtofl@val
  5089     0136  3001               	movlw	1
  5090     0137  318C  246E  3180   	fcall	___xxtofl
  5091     013A  0020               	movlb	0	; select bank0
  5092     013B  0823               	movf	?___xxtofl+3,w
  5093     013C  00B5               	movwf	___flmul@a+3
  5094     013D  0822               	movf	?___xxtofl+2,w
  5095     013E  00B4               	movwf	___flmul@a+2
  5096     013F  0821               	movf	?___xxtofl+1,w
  5097     0140  00B3               	movwf	___flmul@a+1
  5098     0141  0820               	movf	?___xxtofl,w
  5099     0142  00B2               	movwf	___flmul@a
  5100     0143  3182  22ED  3180   	fcall	___flmul
  5101     0146  0020               	movlb	0	; select bank0
  5102     0147  0831               	movf	?___flmul+3,w
  5103     0148  00CF               	movwf	___fladd@a+3
  5104     0149  0830               	movf	?___flmul+2,w
  5105     014A  00CE               	movwf	___fladd@a+2
  5106     014B  082F               	movf	?___flmul+1,w
  5107     014C  00CD               	movwf	___fladd@a+1
  5108     014D  082E               	movf	?___flmul,w
  5109     014E  00CC               	movwf	___fladd@a
  5110     014F  3185  2528  3180   	fcall	___fladd
  5111     0152  0020               	movlb	0	; select bank0
  5112     0153  084B               	movf	?___fladd+3,w
  5113     0154  0021               	movlb	1	; select bank1
  5114     0155  00C6               	movwf	(_ReadData$2361+3)^(0+128)
  5115     0156  0020               	movlb	0	; select bank0
  5116     0157  084A               	movf	?___fladd+2,w
  5117     0158  0021               	movlb	1	; select bank1
  5118     0159  00C5               	movwf	(_ReadData$2361+2)^(0+128)
  5119     015A  0020               	movlb	0	; select bank0
  5120     015B  0849               	movf	?___fladd+1,w
  5121     015C  0021               	movlb	1	; select bank1
  5122     015D  00C4               	movwf	(_ReadData$2361+1)^(0+128)
  5123     015E  0020               	movlb	0	; select bank0
  5124     015F  0848               	movf	?___fladd,w
  5125     0160  0021               	movlb	1	; select bank1
  5126     0161  00C3               	movwf	_ReadData$2361^(0+128)
  5127                           
  5128                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5129     0162  30C2               	movlw	194
  5130     0163  0020               	movlb	0	; select bank0
  5131     0164  00CB               	movwf	___fladd@b+3
  5132     0165  3034               	movlw	52
  5133     0166  00CA               	movwf	___fladd@b+2
  5134     0167  3000               	movlw	0
  5135     0168  00C9               	movwf	___fladd@b+1
  5136     0169  3000               	movlw	0
  5137     016A  00C8               	movwf	___fladd@b
  5138     016B  3047               	movlw	71
  5139     016C  00DF               	movwf	___fldiv@a+3
  5140     016D  307F               	movlw	127
  5141     016E  00DE               	movwf	___fldiv@a+2
  5142     016F  30FF               	movlw	255
  5143     0170  00DD               	movwf	___fldiv@a+1
  5144     0171  3000               	movlw	0
  5145     0172  00DC               	movwf	___fldiv@a
  5146     0173  3043               	movlw	67
  5147     0174  00B1               	movwf	___flmul@b+3
  5148     0175  302F               	movlw	47
  5149     0176  00B0               	movwf	___flmul@b+2
  5150     0177  3000               	movlw	0
  5151     0178  00AF               	movwf	___flmul@b+1
  5152     0179  3000               	movlw	0
  5153     017A  00AE               	movwf	___flmul@b
  5154     017B  0021               	movlb	1	; select bank1
  5155     017C  0846               	movf	(_ReadData$2361+3)^(0+128),w
  5156     017D  0020               	movlb	0	; select bank0
  5157     017E  00B5               	movwf	___flmul@a+3
  5158     017F  0021               	movlb	1	; select bank1
  5159     0180  0845               	movf	(_ReadData$2361+2)^(0+128),w
  5160     0181  0020               	movlb	0	; select bank0
  5161     0182  00B4               	movwf	___flmul@a+2
  5162     0183  0021               	movlb	1	; select bank1
  5163     0184  0844               	movf	(_ReadData$2361+1)^(0+128),w
  5164     0185  0020               	movlb	0	; select bank0
  5165     0186  00B3               	movwf	___flmul@a+1
  5166     0187  0021               	movlb	1	; select bank1
  5167     0188  0843               	movf	_ReadData$2361^(0+128),w
  5168     0189  0020               	movlb	0	; select bank0
  5169     018A  00B2               	movwf	___flmul@a
  5170     018B  3182  22ED  3180   	fcall	___flmul
  5171     018E  0020               	movlb	0	; select bank0
  5172     018F  0831               	movf	?___flmul+3,w
  5173     0190  00E3               	movwf	___fldiv@b+3
  5174     0191  0830               	movf	?___flmul+2,w
  5175     0192  00E2               	movwf	___fldiv@b+2
  5176     0193  082F               	movf	?___flmul+1,w
  5177     0194  00E1               	movwf	___fldiv@b+1
  5178     0195  082E               	movf	?___flmul,w
  5179     0196  00E0               	movwf	___fldiv@b
  5180     0197  318D  25FC  3180   	fcall	___fldiv
  5181     019A  0020               	movlb	0	; select bank0
  5182     019B  085F               	movf	?___fldiv+3,w
  5183     019C  00CF               	movwf	___fladd@a+3
  5184     019D  085E               	movf	?___fldiv+2,w
  5185     019E  00CE               	movwf	___fladd@a+2
  5186     019F  085D               	movf	?___fldiv+1,w
  5187     01A0  00CD               	movwf	___fladd@a+1
  5188     01A1  085C               	movf	?___fldiv,w
  5189     01A2  00CC               	movwf	___fladd@a
  5190     01A3  3185  2528  3180   	fcall	___fladd
  5191     01A6  0020               	movlb	0	; select bank0
  5192     01A7  084B               	movf	?___fladd+3,w
  5193     01A8  0021               	movlb	1	; select bank1
  5194     01A9  00CA               	movwf	(_ReadData$2362+3)^(0+128)
  5195     01AA  0020               	movlb	0	; select bank0
  5196     01AB  084A               	movf	?___fladd+2,w
  5197     01AC  0021               	movlb	1	; select bank1
  5198     01AD  00C9               	movwf	(_ReadData$2362+2)^(0+128)
  5199     01AE  0020               	movlb	0	; select bank0
  5200     01AF  0849               	movf	?___fladd+1,w
  5201     01B0  0021               	movlb	1	; select bank1
  5202     01B1  00C8               	movwf	(_ReadData$2362+1)^(0+128)
  5203     01B2  0020               	movlb	0	; select bank0
  5204     01B3  0848               	movf	?___fladd,w
  5205     01B4  0021               	movlb	1	; select bank1
  5206     01B5  00C7               	movwf	_ReadData$2362^(0+128)
  5207                           
  5208                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5209     01B6  3041               	movlw	65
  5210     01B7  0020               	movlb	0	; select bank0
  5211     01B8  00B1               	movwf	___flmul@b+3
  5212     01B9  3020               	movlw	32
  5213     01BA  00B0               	movwf	___flmul@b+2
  5214     01BB  3000               	movlw	0
  5215     01BC  00AF               	movwf	___flmul@b+1
  5216     01BD  3000               	movlw	0
  5217     01BE  00AE               	movwf	___flmul@b
  5218     01BF  0021               	movlb	1	; select bank1
  5219     01C0  084A               	movf	(_ReadData$2362+3)^(0+128),w
  5220     01C1  0020               	movlb	0	; select bank0
  5221     01C2  00B5               	movwf	___flmul@a+3
  5222     01C3  0021               	movlb	1	; select bank1
  5223     01C4  0849               	movf	(_ReadData$2362+2)^(0+128),w
  5224     01C5  0020               	movlb	0	; select bank0
  5225     01C6  00B4               	movwf	___flmul@a+2
  5226     01C7  0021               	movlb	1	; select bank1
  5227     01C8  0848               	movf	(_ReadData$2362+1)^(0+128),w
  5228     01C9  0020               	movlb	0	; select bank0
  5229     01CA  00B3               	movwf	___flmul@a+1
  5230     01CB  0021               	movlb	1	; select bank1
  5231     01CC  0847               	movf	_ReadData$2362^(0+128),w
  5232     01CD  0020               	movlb	0	; select bank0
  5233     01CE  00B2               	movwf	___flmul@a
  5234     01CF  3182  22ED  3180   	fcall	___flmul
  5235     01D2  0020               	movlb	0	; select bank0
  5236     01D3  0831               	movf	?___flmul+3,w
  5237     01D4  0021               	movlb	1	; select bank1
  5238     01D5  00BE               	movwf	(ReadData@ctemp+3)^(0+128)
  5239     01D6  0020               	movlb	0	; select bank0
  5240     01D7  0830               	movf	?___flmul+2,w
  5241     01D8  0021               	movlb	1	; select bank1
  5242     01D9  00BD               	movwf	(ReadData@ctemp+2)^(0+128)
  5243     01DA  0020               	movlb	0	; select bank0
  5244     01DB  082F               	movf	?___flmul+1,w
  5245     01DC  0021               	movlb	1	; select bank1
  5246     01DD  00BC               	movwf	(ReadData@ctemp+1)^(0+128)
  5247     01DE  0020               	movlb	0	; select bank0
  5248     01DF  082E               	movf	?___flmul,w
  5249     01E0  0021               	movlb	1	; select bank1
  5250     01E1  00BB               	movwf	ReadData@ctemp^(0+128)
  5251                           
  5252                           ;I2C_SHT30.c: 38:     SensorAmbient.T.Val16 = (uint16_t) ctemp;
  5253     01E2  083E               	movf	(ReadData@ctemp+3)^(0+128),w
  5254     01E3  0020               	movlb	0	; select bank0
  5255     01E4  00A3               	movwf	___fltol@f1+3
  5256     01E5  0021               	movlb	1	; select bank1
  5257     01E6  083D               	movf	(ReadData@ctemp+2)^(0+128),w
  5258     01E7  0020               	movlb	0	; select bank0
  5259     01E8  00A2               	movwf	___fltol@f1+2
  5260     01E9  0021               	movlb	1	; select bank1
  5261     01EA  083C               	movf	(ReadData@ctemp+1)^(0+128),w
  5262     01EB  0020               	movlb	0	; select bank0
  5263     01EC  00A1               	movwf	___fltol@f1+1
  5264     01ED  0021               	movlb	1	; select bank1
  5265     01EE  083B               	movf	ReadData@ctemp^(0+128),w
  5266     01EF  0020               	movlb	0	; select bank0
  5267     01F0  00A0               	movwf	___fltol@f1
  5268     01F1  3189  21C4  3180   	fcall	___fltol
  5269     01F4  0020               	movlb	0	; select bank0
  5270     01F5  0821               	movf	?___fltol+1,w
  5271     01F6  0021               	movlb	1	; select bank1
  5272     01F7  00DC               	movwf	(_SensorAmbient+1)^(0+128)
  5273     01F8  0020               	movlb	0	; select bank0
  5274     01F9  0820               	movf	?___fltol,w
  5275     01FA  0021               	movlb	1	; select bank1
  5276     01FB  00DB               	movwf	_SensorAmbient^(0+128)
  5277                           
  5278                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5279     01FC  0839               	movf	(ReadData@aData^(0+128)+4),w
  5280     01FD  00AD               	movwf	??_ReadData^(0+128)
  5281     01FE  01AE               	clrf	(??_ReadData^(0+128)+1)
  5282     01FF  01AF               	clrf	(??_ReadData^(0+128)+2)
  5283     0200  01B0               	clrf	(??_ReadData^(0+128)+3)
  5284     0201  0830               	movf	(??_ReadData+3)^(0+128),w
  5285     0202  0020               	movlb	0	; select bank0
  5286     0203  00A3               	movwf	___xxtofl@val+3
  5287     0204  0021               	movlb	1	; select bank1
  5288     0205  082F               	movf	(??_ReadData+2)^(0+128),w
  5289     0206  0020               	movlb	0	; select bank0
  5290     0207  00A2               	movwf	___xxtofl@val+2
  5291     0208  0021               	movlb	1	; select bank1
  5292     0209  082E               	movf	(??_ReadData+1)^(0+128),w
  5293     020A  0020               	movlb	0	; select bank0
  5294     020B  00A1               	movwf	___xxtofl@val+1
  5295     020C  0021               	movlb	1	; select bank1
  5296     020D  082D               	movf	??_ReadData^(0+128),w
  5297     020E  0020               	movlb	0	; select bank0
  5298     020F  00A0               	movwf	___xxtofl@val
  5299     0210  3001               	movlw	1
  5300     0211  318C  246E  3180   	fcall	___xxtofl
  5301     0214  0020               	movlb	0	; select bank0
  5302     0215  0823               	movf	?___xxtofl+3,w
  5303     0216  00CB               	movwf	___fladd@b+3
  5304     0217  0822               	movf	?___xxtofl+2,w
  5305     0218  00CA               	movwf	___fladd@b+2
  5306     0219  0821               	movf	?___xxtofl+1,w
  5307     021A  00C9               	movwf	___fladd@b+1
  5308     021B  0820               	movf	?___xxtofl,w
  5309     021C  00C8               	movwf	___fladd@b
  5310     021D  3043               	movlw	67
  5311     021E  00B1               	movwf	___flmul@b+3
  5312     021F  3080               	movlw	128
  5313     0220  00B0               	movwf	___flmul@b+2
  5314     0221  3000               	movlw	0
  5315     0222  00AF               	movwf	___flmul@b+1
  5316     0223  3000               	movlw	0
  5317     0224  00AE               	movwf	___flmul@b
  5318     0225  0021               	movlb	1	; select bank1
  5319     0226  0838               	movf	(ReadData@aData^(0+128)+3),w
  5320     0227  00B1               	movwf	(??_ReadData+4)^(0+128)
  5321     0228  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5322     0229  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5323     022A  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5324     022B  0834               	movf	(??_ReadData+7)^(0+128),w
  5325     022C  0020               	movlb	0	; select bank0
  5326     022D  00A3               	movwf	___xxtofl@val+3
  5327     022E  0021               	movlb	1	; select bank1
  5328     022F  0833               	movf	(??_ReadData+6)^(0+128),w
  5329     0230  0020               	movlb	0	; select bank0
  5330     0231  00A2               	movwf	___xxtofl@val+2
  5331     0232  0021               	movlb	1	; select bank1
  5332     0233  0832               	movf	(??_ReadData+5)^(0+128),w
  5333     0234  0020               	movlb	0	; select bank0
  5334     0235  00A1               	movwf	___xxtofl@val+1
  5335     0236  0021               	movlb	1	; select bank1
  5336     0237  0831               	movf	(??_ReadData+4)^(0+128),w
  5337     0238  0020               	movlb	0	; select bank0
  5338     0239  00A0               	movwf	___xxtofl@val
  5339     023A  3001               	movlw	1
  5340     023B  318C  246E  3180   	fcall	___xxtofl
  5341     023E  0020               	movlb	0	; select bank0
  5342     023F  0823               	movf	?___xxtofl+3,w
  5343     0240  00B5               	movwf	___flmul@a+3
  5344     0241  0822               	movf	?___xxtofl+2,w
  5345     0242  00B4               	movwf	___flmul@a+2
  5346     0243  0821               	movf	?___xxtofl+1,w
  5347     0244  00B3               	movwf	___flmul@a+1
  5348     0245  0820               	movf	?___xxtofl,w
  5349     0246  00B2               	movwf	___flmul@a
  5350     0247  3182  22ED  3180   	fcall	___flmul
  5351     024A  0020               	movlb	0	; select bank0
  5352     024B  0831               	movf	?___flmul+3,w
  5353     024C  00CF               	movwf	___fladd@a+3
  5354     024D  0830               	movf	?___flmul+2,w
  5355     024E  00CE               	movwf	___fladd@a+2
  5356     024F  082F               	movf	?___flmul+1,w
  5357     0250  00CD               	movwf	___fladd@a+1
  5358     0251  082E               	movf	?___flmul,w
  5359     0252  00CC               	movwf	___fladd@a
  5360     0253  3185  2528  3180   	fcall	___fladd
  5361     0256  0020               	movlb	0	; select bank0
  5362     0257  084B               	movf	?___fladd+3,w
  5363     0258  0021               	movlb	1	; select bank1
  5364     0259  00C6               	movwf	(_ReadData$2361+3)^(0+128)
  5365     025A  0020               	movlb	0	; select bank0
  5366     025B  084A               	movf	?___fladd+2,w
  5367     025C  0021               	movlb	1	; select bank1
  5368     025D  00C5               	movwf	(_ReadData$2361+2)^(0+128)
  5369     025E  0020               	movlb	0	; select bank0
  5370     025F  0849               	movf	?___fladd+1,w
  5371     0260  0021               	movlb	1	; select bank1
  5372     0261  00C4               	movwf	(_ReadData$2361+1)^(0+128)
  5373     0262  0020               	movlb	0	; select bank0
  5374     0263  0848               	movf	?___fladd,w
  5375     0264  0021               	movlb	1	; select bank1
  5376     0265  00C3               	movwf	_ReadData$2361^(0+128)
  5377                           
  5378                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5379     0266  3047               	movlw	71
  5380     0267  0020               	movlb	0	; select bank0
  5381     0268  00DF               	movwf	___fldiv@a+3
  5382     0269  307F               	movlw	127
  5383     026A  00DE               	movwf	___fldiv@a+2
  5384     026B  30FF               	movlw	255
  5385     026C  00DD               	movwf	___fldiv@a+1
  5386     026D  3000               	movlw	0
  5387     026E  00DC               	movwf	___fldiv@a
  5388     026F  3042               	movlw	66
  5389     0270  00B1               	movwf	___flmul@b+3
  5390     0271  30C8               	movlw	200
  5391     0272  00B0               	movwf	___flmul@b+2
  5392     0273  3000               	movlw	0
  5393     0274  00AF               	movwf	___flmul@b+1
  5394     0275  3000               	movlw	0
  5395     0276  00AE               	movwf	___flmul@b
  5396     0277  0021               	movlb	1	; select bank1
  5397     0278  0846               	movf	(_ReadData$2361+3)^(0+128),w
  5398     0279  0020               	movlb	0	; select bank0
  5399     027A  00B5               	movwf	___flmul@a+3
  5400     027B  0021               	movlb	1	; select bank1
  5401     027C  0845               	movf	(_ReadData$2361+2)^(0+128),w
  5402     027D  0020               	movlb	0	; select bank0
  5403     027E  00B4               	movwf	___flmul@a+2
  5404     027F  0021               	movlb	1	; select bank1
  5405     0280  0844               	movf	(_ReadData$2361+1)^(0+128),w
  5406     0281  0020               	movlb	0	; select bank0
  5407     0282  00B3               	movwf	___flmul@a+1
  5408     0283  0021               	movlb	1	; select bank1
  5409     0284  0843               	movf	_ReadData$2361^(0+128),w
  5410     0285  0020               	movlb	0	; select bank0
  5411     0286  00B2               	movwf	___flmul@a
  5412     0287  3182  22ED  3180   	fcall	___flmul
  5413     028A  0020               	movlb	0	; select bank0
  5414     028B  0831               	movf	?___flmul+3,w
  5415     028C  00E3               	movwf	___fldiv@b+3
  5416     028D  0830               	movf	?___flmul+2,w
  5417     028E  00E2               	movwf	___fldiv@b+2
  5418     028F  082F               	movf	?___flmul+1,w
  5419     0290  00E1               	movwf	___fldiv@b+1
  5420     0291  082E               	movf	?___flmul,w
  5421     0292  00E0               	movwf	___fldiv@b
  5422     0293  318D  25FC  3180   	fcall	___fldiv
  5423     0296  0020               	movlb	0	; select bank0
  5424     0297  085F               	movf	?___fldiv+3,w
  5425     0298  0021               	movlb	1	; select bank1
  5426     0299  00CA               	movwf	(_ReadData$2362+3)^(0+128)
  5427     029A  0020               	movlb	0	; select bank0
  5428     029B  085E               	movf	?___fldiv+2,w
  5429     029C  0021               	movlb	1	; select bank1
  5430     029D  00C9               	movwf	(_ReadData$2362+2)^(0+128)
  5431     029E  0020               	movlb	0	; select bank0
  5432     029F  085D               	movf	?___fldiv+1,w
  5433     02A0  0021               	movlb	1	; select bank1
  5434     02A1  00C8               	movwf	(_ReadData$2362+1)^(0+128)
  5435     02A2  0020               	movlb	0	; select bank0
  5436     02A3  085C               	movf	?___fldiv,w
  5437     02A4  0021               	movlb	1	; select bank1
  5438     02A5  00C7               	movwf	_ReadData$2362^(0+128)
  5439                           
  5440                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5441     02A6  3041               	movlw	65
  5442     02A7  0020               	movlb	0	; select bank0
  5443     02A8  00B1               	movwf	___flmul@b+3
  5444     02A9  3020               	movlw	32
  5445     02AA  00B0               	movwf	___flmul@b+2
  5446     02AB  3000               	movlw	0
  5447     02AC  00AF               	movwf	___flmul@b+1
  5448     02AD  3000               	movlw	0
  5449     02AE  00AE               	movwf	___flmul@b
  5450     02AF  0021               	movlb	1	; select bank1
  5451     02B0  084A               	movf	(_ReadData$2362+3)^(0+128),w
  5452     02B1  0020               	movlb	0	; select bank0
  5453     02B2  00B5               	movwf	___flmul@a+3
  5454     02B3  0021               	movlb	1	; select bank1
  5455     02B4  0849               	movf	(_ReadData$2362+2)^(0+128),w
  5456     02B5  0020               	movlb	0	; select bank0
  5457     02B6  00B4               	movwf	___flmul@a+2
  5458     02B7  0021               	movlb	1	; select bank1
  5459     02B8  0848               	movf	(_ReadData$2362+1)^(0+128),w
  5460     02B9  0020               	movlb	0	; select bank0
  5461     02BA  00B3               	movwf	___flmul@a+1
  5462     02BB  0021               	movlb	1	; select bank1
  5463     02BC  0847               	movf	_ReadData$2362^(0+128),w
  5464     02BD  0020               	movlb	0	; select bank0
  5465     02BE  00B2               	movwf	___flmul@a
  5466     02BF  3182  22ED  3180   	fcall	___flmul
  5467     02C2  0020               	movlb	0	; select bank0
  5468     02C3  0831               	movf	?___flmul+3,w
  5469     02C4  0021               	movlb	1	; select bank1
  5470     02C5  00C2               	movwf	(ReadData@humidity+3)^(0+128)
  5471     02C6  0020               	movlb	0	; select bank0
  5472     02C7  0830               	movf	?___flmul+2,w
  5473     02C8  0021               	movlb	1	; select bank1
  5474     02C9  00C1               	movwf	(ReadData@humidity+2)^(0+128)
  5475     02CA  0020               	movlb	0	; select bank0
  5476     02CB  082F               	movf	?___flmul+1,w
  5477     02CC  0021               	movlb	1	; select bank1
  5478     02CD  00C0               	movwf	(ReadData@humidity+1)^(0+128)
  5479     02CE  0020               	movlb	0	; select bank0
  5480     02CF  082E               	movf	?___flmul,w
  5481     02D0  0021               	movlb	1	; select bank1
  5482     02D1  00BF               	movwf	ReadData@humidity^(0+128)
  5483                           
  5484                           ;I2C_SHT30.c: 43:     SensorAmbient.H.Val16 = (uint16_t) humidity;
  5485     02D2  0842               	movf	(ReadData@humidity+3)^(0+128),w
  5486     02D3  0020               	movlb	0	; select bank0
  5487     02D4  00A3               	movwf	___fltol@f1+3
  5488     02D5  0021               	movlb	1	; select bank1
  5489     02D6  0841               	movf	(ReadData@humidity+2)^(0+128),w
  5490     02D7  0020               	movlb	0	; select bank0
  5491     02D8  00A2               	movwf	___fltol@f1+2
  5492     02D9  0021               	movlb	1	; select bank1
  5493     02DA  0840               	movf	(ReadData@humidity+1)^(0+128),w
  5494     02DB  0020               	movlb	0	; select bank0
  5495     02DC  00A1               	movwf	___fltol@f1+1
  5496     02DD  0021               	movlb	1	; select bank1
  5497     02DE  083F               	movf	ReadData@humidity^(0+128),w
  5498     02DF  0020               	movlb	0	; select bank0
  5499     02E0  00A0               	movwf	___fltol@f1
  5500     02E1  3189  21C4  3180   	fcall	___fltol
  5501     02E4  0020               	movlb	0	; select bank0
  5502     02E5  0821               	movf	?___fltol+1,w
  5503     02E6  0021               	movlb	1	; select bank1
  5504     02E7  00DE               	movwf	((_SensorAmbient+1)^(0+128)+2)
  5505     02E8  0020               	movlb	0	; select bank0
  5506     02E9  0820               	movf	?___fltol,w
  5507     02EA  0021               	movlb	1	; select bank1
  5508     02EB  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  5509     02EC                     l808:
  5510     02EC  0008               	return
  5511     02ED                     __end_of_ReadData:
  5512                           
  5513                           	psect	text17
  5514     0C6E                     __ptext17:	
  5515 ;; *************** function ___xxtofl *****************
  5516 ;; Defined at:
  5517 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\xxtofl.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  sign            1    wreg     unsigned char 
  5520 ;;  val             4    0[BANK0 ] long 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  sign            1    8[BANK0 ] unsigned char 
  5523 ;;  arg             4   10[BANK0 ] unsigned long 
  5524 ;;  exp             1    9[BANK0 ] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  4    0[BANK0 ] unsigned char 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5534 ;;      Params:         0       4       0       0       0       0       0       0
  5535 ;;      Locals:         0       6       0       0       0       0       0       0
  5536 ;;      Temps:          0       4       0       0       0       0       0       0
  5537 ;;      Totals:         0      14       0       0       0       0       0       0
  5538 ;;Total ram usage:       14 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 7
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_ReadData
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548     0C6E                     ___xxtofl:	
  5549                           ;psect for function ___xxtofl
  5550                           
  5551                           
  5552                           ;incstack = 0
  5553                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5554                           ;___xxtofl@sign stored from wreg
  5555     0C6E  0020               	movlb	0	; select bank0
  5556     0C6F  00A8               	movwf	___xxtofl@sign
  5557     0C70                     l4545:
  5558     0C70  0828               	movf	___xxtofl@sign,w
  5559     0C71  1903               	btfsc	3,2
  5560     0C72  2C74               	goto	u3831
  5561     0C73  2C75               	goto	u3830
  5562     0C74                     u3831:
  5563     0C74  2C89               	goto	l4551
  5564     0C75                     u3830:
  5565     0C75                     l4547:
  5566     0C75  1FA3               	btfss	___xxtofl@val+3,7
  5567     0C76  2C78               	goto	u3841
  5568     0C77  2C79               	goto	u3840
  5569     0C78                     u3841:
  5570     0C78  2C89               	goto	l4551
  5571     0C79                     u3840:
  5572     0C79                     l4549:
  5573     0C79  0920               	comf	___xxtofl@val,w
  5574     0C7A  00AA               	movwf	___xxtofl@arg
  5575     0C7B  0921               	comf	___xxtofl@val+1,w
  5576     0C7C  00AB               	movwf	___xxtofl@arg+1
  5577     0C7D  0922               	comf	___xxtofl@val+2,w
  5578     0C7E  00AC               	movwf	___xxtofl@arg+2
  5579     0C7F  0923               	comf	___xxtofl@val+3,w
  5580     0C80  00AD               	movwf	___xxtofl@arg+3
  5581     0C81  0AAA               	incf	___xxtofl@arg,f
  5582     0C82  1903               	skipnz
  5583     0C83  0AAB               	incf	___xxtofl@arg+1,f
  5584     0C84  1903               	skipnz
  5585     0C85  0AAC               	incf	___xxtofl@arg+2,f
  5586     0C86  1903               	skipnz
  5587     0C87  0AAD               	incf	___xxtofl@arg+3,f
  5588     0C88  2C91               	goto	l1603
  5589     0C89                     l4551:
  5590     0C89  0823               	movf	___xxtofl@val+3,w
  5591     0C8A  00AD               	movwf	___xxtofl@arg+3
  5592     0C8B  0822               	movf	___xxtofl@val+2,w
  5593     0C8C  00AC               	movwf	___xxtofl@arg+2
  5594     0C8D  0821               	movf	___xxtofl@val+1,w
  5595     0C8E  00AB               	movwf	___xxtofl@arg+1
  5596     0C8F  0820               	movf	___xxtofl@val,w
  5597     0C90  00AA               	movwf	___xxtofl@arg
  5598     0C91                     l1603:
  5599     0C91  0823               	movf	___xxtofl@val+3,w
  5600     0C92  0422               	iorwf	___xxtofl@val+2,w
  5601     0C93  0421               	iorwf	___xxtofl@val+1,w
  5602     0C94  0420               	iorwf	___xxtofl@val,w
  5603     0C95  1D03               	skipz
  5604     0C96  2C98               	goto	u3851
  5605     0C97  2C99               	goto	u3850
  5606     0C98                     u3851:
  5607     0C98  2CA2               	goto	l4557
  5608     0C99                     u3850:
  5609     0C99                     l4553:
  5610     0C99  3000               	movlw	0
  5611     0C9A  00A3               	movwf	?___xxtofl+3
  5612     0C9B  3000               	movlw	0
  5613     0C9C  00A2               	movwf	?___xxtofl+2
  5614     0C9D  3000               	movlw	0
  5615     0C9E  00A1               	movwf	?___xxtofl+1
  5616     0C9F  3000               	movlw	0
  5617     0CA0  00A0               	movwf	?___xxtofl
  5618     0CA1  2D18               	goto	l1605
  5619     0CA2                     l4557:
  5620     0CA2  3096               	movlw	150
  5621     0CA3  00A9               	movwf	___xxtofl@exp
  5622     0CA4  2CB0               	goto	l4561
  5623     0CA5                     l4559:
  5624     0CA5  3001               	movlw	1
  5625     0CA6  00A4               	movwf	??___xxtofl
  5626     0CA7  0824               	movf	??___xxtofl,w
  5627     0CA8  07A9               	addwf	___xxtofl@exp,f
  5628     0CA9  3001               	movlw	1
  5629     0CAA                     u3865:
  5630     0CAA  36AD               	lsrf	___xxtofl@arg+3,f
  5631     0CAB  0CAC               	rrf	___xxtofl@arg+2,f
  5632     0CAC  0CAB               	rrf	___xxtofl@arg+1,f
  5633     0CAD  0CAA               	rrf	___xxtofl@arg,f
  5634     0CAE  0B89               	decfsz	9,f
  5635     0CAF  2CAA               	goto	u3865
  5636     0CB0                     l4561:
  5637     0CB0  30FE               	movlw	254
  5638     0CB1  052D               	andwf	___xxtofl@arg+3,w
  5639     0CB2  1D03               	btfss	3,2
  5640     0CB3  2CB5               	goto	u3871
  5641     0CB4  2CB6               	goto	u3870
  5642     0CB5                     u3871:
  5643     0CB5  2CA5               	goto	l4559
  5644     0CB6                     u3870:
  5645     0CB6  2CCA               	goto	l1609
  5646     0CB7                     l4563:
  5647     0CB7  3001               	movlw	1
  5648     0CB8  00A4               	movwf	??___xxtofl
  5649     0CB9  0824               	movf	??___xxtofl,w
  5650     0CBA  07A9               	addwf	___xxtofl@exp,f
  5651     0CBB                     l4565:
  5652     0CBB  3001               	movlw	1
  5653     0CBC  07AA               	addwf	___xxtofl@arg,f
  5654     0CBD  3000               	movlw	0
  5655     0CBE  3DAB               	addwfc	___xxtofl@arg+1,f
  5656     0CBF  3000               	movlw	0
  5657     0CC0  3DAC               	addwfc	___xxtofl@arg+2,f
  5658     0CC1  3000               	movlw	0
  5659     0CC2  3DAD               	addwfc	___xxtofl@arg+3,f
  5660     0CC3                     l4567:
  5661     0CC3  3001               	movlw	1
  5662     0CC4                     u3885:
  5663     0CC4  36AD               	lsrf	___xxtofl@arg+3,f
  5664     0CC5  0CAC               	rrf	___xxtofl@arg+2,f
  5665     0CC6  0CAB               	rrf	___xxtofl@arg+1,f
  5666     0CC7  0CAA               	rrf	___xxtofl@arg,f
  5667     0CC8  0B89               	decfsz	9,f
  5668     0CC9  2CC4               	goto	u3885
  5669     0CCA                     l1609:
  5670     0CCA  30FF               	movlw	255
  5671     0CCB  052D               	andwf	___xxtofl@arg+3,w
  5672     0CCC  1D03               	btfss	3,2
  5673     0CCD  2CCF               	goto	u3891
  5674     0CCE  2CD0               	goto	u3890
  5675     0CCF                     u3891:
  5676     0CCF  2CB7               	goto	l4563
  5677     0CD0                     u3890:
  5678     0CD0  2CDA               	goto	l4571
  5679     0CD1                     l4569:
  5680     0CD1  3001               	movlw	1
  5681     0CD2  02A9               	subwf	___xxtofl@exp,f
  5682     0CD3  3001               	movlw	1
  5683     0CD4                     u3905:
  5684     0CD4  35AA               	lslf	___xxtofl@arg,f
  5685     0CD5  0DAB               	rlf	___xxtofl@arg+1,f
  5686     0CD6  0DAC               	rlf	___xxtofl@arg+2,f
  5687     0CD7  0DAD               	rlf	___xxtofl@arg+3,f
  5688     0CD8  0B89               	decfsz	9,f
  5689     0CD9  2CD4               	goto	u3905
  5690     0CDA                     l4571:
  5691     0CDA  1BAC               	btfsc	___xxtofl@arg+2,7
  5692     0CDB  2CDD               	goto	u3911
  5693     0CDC  2CDE               	goto	u3910
  5694     0CDD                     u3911:
  5695     0CDD  2CE4               	goto	l1616
  5696     0CDE                     u3910:
  5697     0CDE                     l4573:
  5698     0CDE  3002               	movlw	2
  5699     0CDF  0229               	subwf	___xxtofl@exp,w
  5700     0CE0  1803               	skipnc
  5701     0CE1  2CE3               	goto	u3921
  5702     0CE2  2CE4               	goto	u3920
  5703     0CE3                     u3921:
  5704     0CE3  2CD1               	goto	l4569
  5705     0CE4                     u3920:
  5706     0CE4                     l1616:
  5707     0CE4  1829               	btfsc	___xxtofl@exp,0
  5708     0CE5  2CE7               	goto	u3931
  5709     0CE6  2CE8               	goto	u3930
  5710     0CE7                     u3931:
  5711     0CE7  2CF0               	goto	l1617
  5712     0CE8                     u3930:
  5713     0CE8                     l4575:
  5714     0CE8  30FF               	movlw	255
  5715     0CE9  05AA               	andwf	___xxtofl@arg,f
  5716     0CEA  30FF               	movlw	255
  5717     0CEB  05AB               	andwf	___xxtofl@arg+1,f
  5718     0CEC  307F               	movlw	127
  5719     0CED  05AC               	andwf	___xxtofl@arg+2,f
  5720     0CEE  30FF               	movlw	255
  5721     0CEF  05AD               	andwf	___xxtofl@arg+3,f
  5722     0CF0                     l1617:
  5723     0CF0  1003               	clrc
  5724     0CF1  0CA9               	rrf	___xxtofl@exp,f
  5725     0CF2                     l4577:
  5726     0CF2  0829               	movf	___xxtofl@exp,w
  5727     0CF3  00A4               	movwf	??___xxtofl
  5728     0CF4  01A5               	clrf	??___xxtofl+1
  5729     0CF5  01A6               	clrf	??___xxtofl+2
  5730     0CF6  01A7               	clrf	??___xxtofl+3
  5731     0CF7  3018               	movlw	24
  5732     0CF8                     u3945:
  5733     0CF8  35A4               	lslf	??___xxtofl,f
  5734     0CF9  0DA5               	rlf	??___xxtofl+1,f
  5735     0CFA  0DA6               	rlf	??___xxtofl+2,f
  5736     0CFB  0DA7               	rlf	??___xxtofl+3,f
  5737     0CFC                     u3940:
  5738     0CFC  0B89               	decfsz	9,f
  5739     0CFD  2CF8               	goto	u3945
  5740     0CFE  0824               	movf	??___xxtofl,w
  5741     0CFF  04AA               	iorwf	___xxtofl@arg,f
  5742     0D00  0825               	movf	??___xxtofl+1,w
  5743     0D01  04AB               	iorwf	___xxtofl@arg+1,f
  5744     0D02  0826               	movf	??___xxtofl+2,w
  5745     0D03  04AC               	iorwf	___xxtofl@arg+2,f
  5746     0D04  0827               	movf	??___xxtofl+3,w
  5747     0D05  04AD               	iorwf	___xxtofl@arg+3,f
  5748     0D06                     l4579:
  5749     0D06  0828               	movf	___xxtofl@sign,w
  5750     0D07  1903               	btfsc	3,2
  5751     0D08  2D0A               	goto	u3951
  5752     0D09  2D0B               	goto	u3950
  5753     0D0A                     u3951:
  5754     0D0A  2D10               	goto	l4585
  5755     0D0B                     u3950:
  5756     0D0B                     l4581:
  5757     0D0B  1FA3               	btfss	___xxtofl@val+3,7
  5758     0D0C  2D0E               	goto	u3961
  5759     0D0D  2D0F               	goto	u3960
  5760     0D0E                     u3961:
  5761     0D0E  2D10               	goto	l4585
  5762     0D0F                     u3960:
  5763     0D0F                     l4583:
  5764     0D0F  17AD               	bsf	___xxtofl@arg+3,7
  5765     0D10                     l4585:
  5766     0D10  082D               	movf	___xxtofl@arg+3,w
  5767     0D11  00A3               	movwf	?___xxtofl+3
  5768     0D12  082C               	movf	___xxtofl@arg+2,w
  5769     0D13  00A2               	movwf	?___xxtofl+2
  5770     0D14  082B               	movf	___xxtofl@arg+1,w
  5771     0D15  00A1               	movwf	?___xxtofl+1
  5772     0D16  082A               	movf	___xxtofl@arg,w
  5773     0D17  00A0               	movwf	?___xxtofl
  5774     0D18                     l1605:
  5775     0D18  0008               	return
  5776     0D19                     __end_of___xxtofl:
  5777                           
  5778                           	psect	text18
  5779     09C4                     __ptext18:	
  5780 ;; *************** function ___fltol *****************
  5781 ;; Defined at:
  5782 ;;		line 43 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\fltol.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  f1              4    0[BANK0 ] unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  exp1            1    9[BANK0 ] unsigned char 
  5787 ;;  sign1           1    8[BANK0 ] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4    0[BANK0 ] long 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5797 ;;      Params:         0       4       0       0       0       0       0       0
  5798 ;;      Locals:         0       2       0       0       0       0       0       0
  5799 ;;      Temps:          0       4       0       0       0       0       0       0
  5800 ;;      Totals:         0      10       0       0       0       0       0       0
  5801 ;;Total ram usage:       10 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 7
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_ReadData
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811     09C4                     ___fltol:	
  5812                           ;psect for function ___fltol
  5813                           
  5814     09C4                     l4035:	
  5815                           ;incstack = 0
  5816                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5817                           
  5818     09C4  1003               	clrc
  5819     09C5  0020               	movlb	0	; select bank0
  5820     09C6  0D22               	rlf	___fltol@f1+2,w
  5821     09C7  0D23               	rlf	___fltol@f1+3,w
  5822     09C8  00A9               	movwf	___fltol@exp1
  5823     09C9  0829               	movf	___fltol@exp1,w
  5824     09CA  1D03               	btfss	3,2
  5825     09CB  29CD               	goto	u2751
  5826     09CC  29CE               	goto	u2750
  5827     09CD                     u2751:
  5828     09CD  29D7               	goto	l4041
  5829     09CE                     u2750:
  5830     09CE                     l4037:
  5831     09CE  3000               	movlw	0
  5832     09CF  00A3               	movwf	?___fltol+3
  5833     09D0  3000               	movlw	0
  5834     09D1  00A2               	movwf	?___fltol+2
  5835     09D2  3000               	movlw	0
  5836     09D3  00A1               	movwf	?___fltol+1
  5837     09D4  3000               	movlw	0
  5838     09D5  00A0               	movwf	?___fltol
  5839     09D6  2A34               	goto	l1356
  5840     09D7                     l4041:
  5841     09D7  0820               	movf	___fltol@f1,w
  5842     09D8  00A4               	movwf	??___fltol
  5843     09D9  0821               	movf	___fltol@f1+1,w
  5844     09DA  00A5               	movwf	??___fltol+1
  5845     09DB  0822               	movf	___fltol@f1+2,w
  5846     09DC  00A6               	movwf	??___fltol+2
  5847     09DD  0823               	movf	___fltol@f1+3,w
  5848     09DE  00A7               	movwf	??___fltol+3
  5849     09DF  301F               	movlw	31
  5850     09E0                     u2765:
  5851     09E0  36A7               	lsrf	??___fltol+3,f
  5852     09E1  0CA6               	rrf	??___fltol+2,f
  5853     09E2  0CA5               	rrf	??___fltol+1,f
  5854     09E3  0CA4               	rrf	??___fltol,f
  5855     09E4                     u2760:
  5856     09E4  0B89               	decfsz	9,f
  5857     09E5  29E0               	goto	u2765
  5858     09E6  0824               	movf	??___fltol,w
  5859     09E7  00A8               	movwf	___fltol@sign1
  5860     09E8                     l4043:
  5861     09E8  17A2               	bsf	___fltol@f1+2,7
  5862     09E9                     l4045:
  5863     09E9  30FF               	movlw	255
  5864     09EA  05A0               	andwf	___fltol@f1,f
  5865     09EB  30FF               	movlw	255
  5866     09EC  05A1               	andwf	___fltol@f1+1,f
  5867     09ED  30FF               	movlw	255
  5868     09EE  05A2               	andwf	___fltol@f1+2,f
  5869     09EF  3000               	movlw	0
  5870     09F0  05A3               	andwf	___fltol@f1+3,f
  5871     09F1                     l4047:
  5872     09F1  3096               	movlw	150
  5873     09F2  02A9               	subwf	___fltol@exp1,f
  5874     09F3                     l4049:
  5875     09F3  1FA9               	btfss	___fltol@exp1,7
  5876     09F4  29F6               	goto	u2771
  5877     09F5  29F7               	goto	u2770
  5878     09F6                     u2771:
  5879     09F6  2A0F               	goto	l4059
  5880     09F7                     u2770:
  5881     09F7                     l4051:
  5882     09F7  0829               	movf	___fltol@exp1,w
  5883     09F8  3A80               	xorlw	128
  5884     09F9  3E97               	addlw	151
  5885     09FA  1803               	skipnc
  5886     09FB  29FD               	goto	u2781
  5887     09FC  29FE               	goto	u2780
  5888     09FD                     u2781:
  5889     09FD  29FF               	goto	l4057
  5890     09FE                     u2780:
  5891     09FE  29CE               	goto	l4037
  5892     09FF                     l4057:
  5893     09FF  3001               	movlw	1
  5894     0A00                     u2795:
  5895     0A00  36A3               	lsrf	___fltol@f1+3,f
  5896     0A01  0CA2               	rrf	___fltol@f1+2,f
  5897     0A02  0CA1               	rrf	___fltol@f1+1,f
  5898     0A03  0CA0               	rrf	___fltol@f1,f
  5899     0A04  0B89               	decfsz	9,f
  5900     0A05  2A00               	goto	u2795
  5901     0A06  3001               	movlw	1
  5902     0A07  00A4               	movwf	??___fltol
  5903     0A08  0824               	movf	??___fltol,w
  5904     0A09  07A9               	addwf	___fltol@exp1,f
  5905     0A0A  1D03               	btfss	3,2
  5906     0A0B  2A0D               	goto	u2801
  5907     0A0C  2A0E               	goto	u2800
  5908     0A0D                     u2801:
  5909     0A0D  29FF               	goto	l4057
  5910     0A0E                     u2800:
  5911     0A0E  2A24               	goto	l4067
  5912     0A0F                     l4059:
  5913     0A0F  3020               	movlw	32
  5914     0A10  0229               	subwf	___fltol@exp1,w
  5915     0A11  1C03               	skipc
  5916     0A12  2A14               	goto	u2811
  5917     0A13  2A15               	goto	u2810
  5918     0A14                     u2811:
  5919     0A14  2A1F               	goto	l1363
  5920     0A15                     u2810:
  5921     0A15  29CE               	goto	l4037
  5922     0A16                     l4065:
  5923     0A16  3001               	movlw	1
  5924     0A17                     u2825:
  5925     0A17  35A0               	lslf	___fltol@f1,f
  5926     0A18  0DA1               	rlf	___fltol@f1+1,f
  5927     0A19  0DA2               	rlf	___fltol@f1+2,f
  5928     0A1A  0DA3               	rlf	___fltol@f1+3,f
  5929     0A1B  0B89               	decfsz	9,f
  5930     0A1C  2A17               	goto	u2825
  5931     0A1D  3001               	movlw	1
  5932     0A1E  02A9               	subwf	___fltol@exp1,f
  5933     0A1F                     l1363:
  5934     0A1F  0829               	movf	___fltol@exp1,w
  5935     0A20  1D03               	btfss	3,2
  5936     0A21  2A23               	goto	u2831
  5937     0A22  2A24               	goto	u2830
  5938     0A23                     u2831:
  5939     0A23  2A16               	goto	l4065
  5940     0A24                     u2830:
  5941     0A24                     l4067:
  5942     0A24  0828               	movf	___fltol@sign1,w
  5943     0A25  1903               	btfsc	3,2
  5944     0A26  2A28               	goto	u2841
  5945     0A27  2A29               	goto	u2840
  5946     0A28                     u2841:
  5947     0A28  2A34               	goto	l1366
  5948     0A29                     u2840:
  5949     0A29                     l4069:
  5950     0A29  09A0               	comf	___fltol@f1,f
  5951     0A2A  09A1               	comf	___fltol@f1+1,f
  5952     0A2B  09A2               	comf	___fltol@f1+2,f
  5953     0A2C  09A3               	comf	___fltol@f1+3,f
  5954     0A2D  0AA0               	incf	___fltol@f1,f
  5955     0A2E  1903               	skipnz
  5956     0A2F  0AA1               	incf	___fltol@f1+1,f
  5957     0A30  1903               	skipnz
  5958     0A31  0AA2               	incf	___fltol@f1+2,f
  5959     0A32  1903               	skipnz
  5960     0A33  0AA3               	incf	___fltol@f1+3,f
  5961     0A34                     l1366:
  5962     0A34                     l1356:
  5963     0A34  0008               	return
  5964     0A35                     __end_of___fltol:
  5965                           
  5966                           	psect	text19
  5967     02ED                     __ptext19:	
  5968 ;; *************** function ___flmul *****************
  5969 ;; Defined at:
  5970 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcmul.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  b               4   14[BANK0 ] long 
  5973 ;;  a               4   18[BANK0 ] long 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  prod            4   34[BANK0 ] struct .
  5976 ;;  grs             4   28[BANK0 ] unsigned long 
  5977 ;;  temp            2   38[BANK0 ] struct .
  5978 ;;  bexp            1   33[BANK0 ] unsigned char 
  5979 ;;  aexp            1   32[BANK0 ] unsigned char 
  5980 ;;  sign            1   27[BANK0 ] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  4   14[BANK0 ] unsigned char 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0, pclath, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5990 ;;      Params:         0       8       0       0       0       0       0       0
  5991 ;;      Locals:         0      13       0       0       0       0       0       0
  5992 ;;      Temps:          0       5       0       0       0       0       0       0
  5993 ;;      Totals:         0      26       0       0       0       0       0       0
  5994 ;;Total ram usage:       26 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 8
  5997 ;; This function calls:
  5998 ;;		__Umul8_16
  5999 ;; This function is called by:
  6000 ;;		_ReadData
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004     02ED                     ___flmul:	
  6005                           ;psect for function ___flmul
  6006                           
  6007     02ED                     l4405:	
  6008                           ;incstack = 0
  6009                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  6010                           
  6011     02ED  0020               	movlb	0	; select bank0
  6012     02EE  0831               	movf	___flmul@b+3,w
  6013     02EF  3980               	andlw	128
  6014     02F0  00BB               	movwf	___flmul@sign
  6015     02F1                     l4407:
  6016     02F1  3531               	lslf	___flmul@b+3,w
  6017     02F2  00C1               	movwf	___flmul@bexp
  6018     02F3                     l4409:
  6019     02F3  1FB0               	btfss	___flmul@b+2,7
  6020     02F4  2AF6               	goto	u3571
  6021     02F5  2AF7               	goto	u3570
  6022     02F6                     u3571:
  6023     02F6  2AF8               	goto	l4413
  6024     02F7                     u3570:
  6025     02F7                     l4411:
  6026     02F7  1441               	bsf	___flmul@bexp,0
  6027     02F8                     l4413:
  6028     02F8  0841               	movf	___flmul@bexp,w
  6029     02F9  1903               	btfsc	3,2
  6030     02FA  2AFC               	goto	u3581
  6031     02FB  2AFD               	goto	u3580
  6032     02FC                     u3581:
  6033     02FC  2B0C               	goto	l4421
  6034     02FD                     u3580:
  6035     02FD                     l4415:
  6036     02FD  0A41               	incf	___flmul@bexp,w
  6037     02FE  1D03               	btfss	3,2
  6038     02FF  2B01               	goto	u3591
  6039     0300  2B02               	goto	u3590
  6040     0301                     u3591:
  6041     0301  2B0A               	goto	l4419
  6042     0302                     u3590:
  6043     0302                     l4417:
  6044     0302  3000               	movlw	0
  6045     0303  00B1               	movwf	___flmul@b+3
  6046     0304  3000               	movlw	0
  6047     0305  00B0               	movwf	___flmul@b+2
  6048     0306  3000               	movlw	0
  6049     0307  00AF               	movwf	___flmul@b+1
  6050     0308  3000               	movlw	0
  6051     0309  00AE               	movwf	___flmul@b
  6052     030A                     l4419:
  6053     030A  17B0               	bsf	___flmul@b+2,7
  6054     030B  2B14               	goto	l4423
  6055     030C                     l4421:
  6056     030C  3000               	movlw	0
  6057     030D  00B1               	movwf	___flmul@b+3
  6058     030E  3000               	movlw	0
  6059     030F  00B0               	movwf	___flmul@b+2
  6060     0310  3000               	movlw	0
  6061     0311  00AF               	movwf	___flmul@b+1
  6062     0312  3000               	movlw	0
  6063     0313  00AE               	movwf	___flmul@b
  6064     0314                     l4423:
  6065     0314  0835               	movf	___flmul@a+3,w
  6066     0315  3980               	andlw	128
  6067     0316  00B6               	movwf	??___flmul
  6068     0317  0836               	movf	??___flmul,w
  6069     0318  06BB               	xorwf	___flmul@sign,f
  6070     0319                     l4425:
  6071     0319  3535               	lslf	___flmul@a+3,w
  6072     031A  00C0               	movwf	___flmul@aexp
  6073     031B                     l4427:
  6074     031B  1FB4               	btfss	___flmul@a+2,7
  6075     031C  2B1E               	goto	u3601
  6076     031D  2B1F               	goto	u3600
  6077     031E                     u3601:
  6078     031E  2B20               	goto	l4431
  6079     031F                     u3600:
  6080     031F                     l4429:
  6081     031F  1440               	bsf	___flmul@aexp,0
  6082     0320                     l4431:
  6083     0320  0840               	movf	___flmul@aexp,w
  6084     0321  1903               	btfsc	3,2
  6085     0322  2B24               	goto	u3611
  6086     0323  2B25               	goto	u3610
  6087     0324                     u3611:
  6088     0324  2B34               	goto	l4439
  6089     0325                     u3610:
  6090     0325                     l4433:
  6091     0325  0A40               	incf	___flmul@aexp,w
  6092     0326  1D03               	btfss	3,2
  6093     0327  2B29               	goto	u3621
  6094     0328  2B2A               	goto	u3620
  6095     0329                     u3621:
  6096     0329  2B32               	goto	l4437
  6097     032A                     u3620:
  6098     032A                     l4435:
  6099     032A  3000               	movlw	0
  6100     032B  00B5               	movwf	___flmul@a+3
  6101     032C  3000               	movlw	0
  6102     032D  00B4               	movwf	___flmul@a+2
  6103     032E  3000               	movlw	0
  6104     032F  00B3               	movwf	___flmul@a+1
  6105     0330  3000               	movlw	0
  6106     0331  00B2               	movwf	___flmul@a
  6107     0332                     l4437:
  6108     0332  17B4               	bsf	___flmul@a+2,7
  6109     0333  2B3C               	goto	l4441
  6110     0334                     l4439:
  6111     0334  3000               	movlw	0
  6112     0335  00B5               	movwf	___flmul@a+3
  6113     0336  3000               	movlw	0
  6114     0337  00B4               	movwf	___flmul@a+2
  6115     0338  3000               	movlw	0
  6116     0339  00B3               	movwf	___flmul@a+1
  6117     033A  3000               	movlw	0
  6118     033B  00B2               	movwf	___flmul@a
  6119     033C                     l4441:
  6120     033C  0840               	movf	___flmul@aexp,w
  6121     033D  1903               	btfsc	3,2
  6122     033E  2B40               	goto	u3631
  6123     033F  2B41               	goto	u3630
  6124     0340                     u3631:
  6125     0340  2B46               	goto	l4445
  6126     0341                     u3630:
  6127     0341                     l4443:
  6128     0341  0841               	movf	___flmul@bexp,w
  6129     0342  1D03               	btfss	3,2
  6130     0343  2B45               	goto	u3641
  6131     0344  2B46               	goto	u3640
  6132     0345                     u3641:
  6133     0345  2B4F               	goto	l4449
  6134     0346                     u3640:
  6135     0346                     l4445:
  6136     0346  3000               	movlw	0
  6137     0347  00B1               	movwf	?___flmul+3
  6138     0348  3000               	movlw	0
  6139     0349  00B0               	movwf	?___flmul+2
  6140     034A  3000               	movlw	0
  6141     034B  00AF               	movwf	?___flmul+1
  6142     034C  3000               	movlw	0
  6143     034D  00AE               	movwf	?___flmul
  6144     034E  2D27               	goto	l1559
  6145     034F                     l4449:
  6146     034F  082E               	movf	___flmul@b,w
  6147     0350  00A0               	movwf	__Umul8_16@multiplicand
  6148     0351  0834               	movf	___flmul@a+2,w
  6149     0352  3195  2529  3182   	fcall	__Umul8_16
  6150     0355  0020               	movlb	0	; select bank0
  6151     0356  0821               	movf	?__Umul8_16+1,w
  6152     0357  00C7               	movwf	___flmul@temp+1
  6153     0358  0820               	movf	?__Umul8_16,w
  6154     0359  00C6               	movwf	___flmul@temp
  6155     035A                     l4451:
  6156     035A  0846               	movf	___flmul@temp,w
  6157     035B  00B6               	movwf	??___flmul
  6158     035C  01B7               	clrf	??___flmul+1
  6159     035D  01B8               	clrf	??___flmul+2
  6160     035E  01B9               	clrf	??___flmul+3
  6161     035F  0839               	movf	??___flmul+3,w
  6162     0360  00BF               	movwf	___flmul@grs+3
  6163     0361  0838               	movf	??___flmul+2,w
  6164     0362  00BE               	movwf	___flmul@grs+2
  6165     0363  0837               	movf	??___flmul+1,w
  6166     0364  00BD               	movwf	___flmul@grs+1
  6167     0365  0836               	movf	??___flmul,w
  6168     0366  00BC               	movwf	___flmul@grs
  6169     0367                     l4453:
  6170     0367  0847               	movf	___flmul@temp+1,w
  6171     0368  00B6               	movwf	??___flmul
  6172     0369  01B7               	clrf	??___flmul+1
  6173     036A  01B8               	clrf	??___flmul+2
  6174     036B  01B9               	clrf	??___flmul+3
  6175     036C  0839               	movf	??___flmul+3,w
  6176     036D  00C5               	movwf	___flmul@prod+3
  6177     036E  0838               	movf	??___flmul+2,w
  6178     036F  00C4               	movwf	___flmul@prod+2
  6179     0370  0837               	movf	??___flmul+1,w
  6180     0371  00C3               	movwf	___flmul@prod+1
  6181     0372  0836               	movf	??___flmul,w
  6182     0373  00C2               	movwf	___flmul@prod
  6183     0374  082F               	movf	___flmul@b+1,w
  6184     0375  00A0               	movwf	__Umul8_16@multiplicand
  6185     0376  0833               	movf	___flmul@a+1,w
  6186     0377  3195  2529  3182   	fcall	__Umul8_16
  6187     037A  0020               	movlb	0	; select bank0
  6188     037B  0821               	movf	?__Umul8_16+1,w
  6189     037C  00C7               	movwf	___flmul@temp+1
  6190     037D  0820               	movf	?__Umul8_16,w
  6191     037E  00C6               	movwf	___flmul@temp
  6192     037F                     l4455:
  6193     037F  0846               	movf	___flmul@temp,w
  6194     0380  00B6               	movwf	??___flmul
  6195     0381  01B7               	clrf	??___flmul+1
  6196     0382  01B8               	clrf	??___flmul+2
  6197     0383  01B9               	clrf	??___flmul+3
  6198     0384  0836               	movf	??___flmul,w
  6199     0385  07BC               	addwf	___flmul@grs,f
  6200     0386  0837               	movf	??___flmul+1,w
  6201     0387  3DBD               	addwfc	___flmul@grs+1,f
  6202     0388  0838               	movf	??___flmul+2,w
  6203     0389  3DBE               	addwfc	___flmul@grs+2,f
  6204     038A  0839               	movf	??___flmul+3,w
  6205     038B  3DBF               	addwfc	___flmul@grs+3,f
  6206     038C                     l4457:
  6207     038C  0847               	movf	___flmul@temp+1,w
  6208     038D  00B6               	movwf	??___flmul
  6209     038E  01B7               	clrf	??___flmul+1
  6210     038F  01B8               	clrf	??___flmul+2
  6211     0390  01B9               	clrf	??___flmul+3
  6212     0391  0836               	movf	??___flmul,w
  6213     0392  07C2               	addwf	___flmul@prod,f
  6214     0393  0837               	movf	??___flmul+1,w
  6215     0394  3DC3               	addwfc	___flmul@prod+1,f
  6216     0395  0838               	movf	??___flmul+2,w
  6217     0396  3DC4               	addwfc	___flmul@prod+2,f
  6218     0397  0839               	movf	??___flmul+3,w
  6219     0398  3DC5               	addwfc	___flmul@prod+3,f
  6220     0399  0830               	movf	___flmul@b+2,w
  6221     039A  00A0               	movwf	__Umul8_16@multiplicand
  6222     039B  0832               	movf	___flmul@a,w
  6223     039C  3195  2529  3182   	fcall	__Umul8_16
  6224     039F  0020               	movlb	0	; select bank0
  6225     03A0  0821               	movf	?__Umul8_16+1,w
  6226     03A1  00C7               	movwf	___flmul@temp+1
  6227     03A2  0820               	movf	?__Umul8_16,w
  6228     03A3  00C6               	movwf	___flmul@temp
  6229     03A4                     l4459:
  6230     03A4  0846               	movf	___flmul@temp,w
  6231     03A5  00B6               	movwf	??___flmul
  6232     03A6  01B7               	clrf	??___flmul+1
  6233     03A7  01B8               	clrf	??___flmul+2
  6234     03A8  01B9               	clrf	??___flmul+3
  6235     03A9  0836               	movf	??___flmul,w
  6236     03AA  07BC               	addwf	___flmul@grs,f
  6237     03AB  0837               	movf	??___flmul+1,w
  6238     03AC  3DBD               	addwfc	___flmul@grs+1,f
  6239     03AD  0838               	movf	??___flmul+2,w
  6240     03AE  3DBE               	addwfc	___flmul@grs+2,f
  6241     03AF  0839               	movf	??___flmul+3,w
  6242     03B0  3DBF               	addwfc	___flmul@grs+3,f
  6243     03B1                     l4461:
  6244     03B1  0847               	movf	___flmul@temp+1,w
  6245     03B2  00B6               	movwf	??___flmul
  6246     03B3  01B7               	clrf	??___flmul+1
  6247     03B4  01B8               	clrf	??___flmul+2
  6248     03B5  01B9               	clrf	??___flmul+3
  6249     03B6  0836               	movf	??___flmul,w
  6250     03B7  07C2               	addwf	___flmul@prod,f
  6251     03B8  0837               	movf	??___flmul+1,w
  6252     03B9  3DC3               	addwfc	___flmul@prod+1,f
  6253     03BA  0838               	movf	??___flmul+2,w
  6254     03BB  3DC4               	addwfc	___flmul@prod+2,f
  6255     03BC  0839               	movf	??___flmul+3,w
  6256     03BD  3DC5               	addwfc	___flmul@prod+3,f
  6257     03BE                     l4463:
  6258     03BE  3008               	movlw	8
  6259     03BF                     u3655:
  6260     03BF  35BC               	lslf	___flmul@grs,f
  6261     03C0  0DBD               	rlf	___flmul@grs+1,f
  6262     03C1  0DBE               	rlf	___flmul@grs+2,f
  6263     03C2  0DBF               	rlf	___flmul@grs+3,f
  6264     03C3  0B89               	decfsz	9,f
  6265     03C4  2BBF               	goto	u3655
  6266     03C5                     l4465:
  6267     03C5  082F               	movf	___flmul@b+1,w
  6268     03C6  00A0               	movwf	__Umul8_16@multiplicand
  6269     03C7  0832               	movf	___flmul@a,w
  6270     03C8  3195  2529  3182   	fcall	__Umul8_16
  6271     03CB  0020               	movlb	0	; select bank0
  6272     03CC  0821               	movf	?__Umul8_16+1,w
  6273     03CD  00C7               	movwf	___flmul@temp+1
  6274     03CE  0820               	movf	?__Umul8_16,w
  6275     03CF  00C6               	movwf	___flmul@temp
  6276     03D0                     l4467:
  6277     03D0  0846               	movf	___flmul@temp,w
  6278     03D1  07BC               	addwf	___flmul@grs,f
  6279     03D2  0847               	movf	___flmul@temp+1,w
  6280     03D3  3DBD               	addwfc	___flmul@grs+1,f
  6281     03D4  3000               	movlw	0
  6282     03D5  3DBE               	addwfc	___flmul@grs+2,f
  6283     03D6  3DBF               	addwfc	___flmul@grs+3,f
  6284     03D7                     l4469:
  6285     03D7  082E               	movf	___flmul@b,w
  6286     03D8  00A0               	movwf	__Umul8_16@multiplicand
  6287     03D9  0833               	movf	___flmul@a+1,w
  6288     03DA  3195  2529  3182   	fcall	__Umul8_16
  6289     03DD  0020               	movlb	0	; select bank0
  6290     03DE  0821               	movf	?__Umul8_16+1,w
  6291     03DF  00C7               	movwf	___flmul@temp+1
  6292     03E0  0820               	movf	?__Umul8_16,w
  6293     03E1  00C6               	movwf	___flmul@temp
  6294     03E2                     l4471:
  6295     03E2  0846               	movf	___flmul@temp,w
  6296     03E3  07BC               	addwf	___flmul@grs,f
  6297     03E4  0847               	movf	___flmul@temp+1,w
  6298     03E5  3DBD               	addwfc	___flmul@grs+1,f
  6299     03E6  3000               	movlw	0
  6300     03E7  3DBE               	addwfc	___flmul@grs+2,f
  6301     03E8  3DBF               	addwfc	___flmul@grs+3,f
  6302     03E9                     l4473:
  6303     03E9  3008               	movlw	8
  6304     03EA                     u3665:
  6305     03EA  35BC               	lslf	___flmul@grs,f
  6306     03EB  0DBD               	rlf	___flmul@grs+1,f
  6307     03EC  0DBE               	rlf	___flmul@grs+2,f
  6308     03ED  0DBF               	rlf	___flmul@grs+3,f
  6309     03EE  0B89               	decfsz	9,f
  6310     03EF  2BEA               	goto	u3665
  6311     03F0  082E               	movf	___flmul@b,w
  6312     03F1  00A0               	movwf	__Umul8_16@multiplicand
  6313     03F2  0832               	movf	___flmul@a,w
  6314     03F3  3195  2529  3182   	fcall	__Umul8_16
  6315     03F6  0020               	movlb	0	; select bank0
  6316     03F7  0821               	movf	?__Umul8_16+1,w
  6317     03F8  00C7               	movwf	___flmul@temp+1
  6318     03F9  0820               	movf	?__Umul8_16,w
  6319     03FA  00C6               	movwf	___flmul@temp
  6320     03FB                     l4475:
  6321     03FB  0846               	movf	___flmul@temp,w
  6322     03FC  07BC               	addwf	___flmul@grs,f
  6323     03FD  0847               	movf	___flmul@temp+1,w
  6324     03FE  3DBD               	addwfc	___flmul@grs+1,f
  6325     03FF  3000               	movlw	0
  6326     0400  3DBE               	addwfc	___flmul@grs+2,f
  6327     0401  3DBF               	addwfc	___flmul@grs+3,f
  6328     0402                     l4477:
  6329     0402  082F               	movf	___flmul@b+1,w
  6330     0403  00A0               	movwf	__Umul8_16@multiplicand
  6331     0404  0834               	movf	___flmul@a+2,w
  6332     0405  3195  2529  3182   	fcall	__Umul8_16
  6333     0408  0020               	movlb	0	; select bank0
  6334     0409  0821               	movf	?__Umul8_16+1,w
  6335     040A  00C7               	movwf	___flmul@temp+1
  6336     040B  0820               	movf	?__Umul8_16,w
  6337     040C  00C6               	movwf	___flmul@temp
  6338     040D  0846               	movf	___flmul@temp,w
  6339     040E  07C2               	addwf	___flmul@prod,f
  6340     040F  0847               	movf	___flmul@temp+1,w
  6341     0410  3DC3               	addwfc	___flmul@prod+1,f
  6342     0411  3000               	movlw	0
  6343     0412  3DC4               	addwfc	___flmul@prod+2,f
  6344     0413  3DC5               	addwfc	___flmul@prod+3,f
  6345     0414                     l4479:
  6346     0414  0830               	movf	___flmul@b+2,w
  6347     0415  00A0               	movwf	__Umul8_16@multiplicand
  6348     0416  0833               	movf	___flmul@a+1,w
  6349     0417  3195  2529  3182   	fcall	__Umul8_16
  6350     041A  0020               	movlb	0	; select bank0
  6351     041B  0821               	movf	?__Umul8_16+1,w
  6352     041C  00C7               	movwf	___flmul@temp+1
  6353     041D  0820               	movf	?__Umul8_16,w
  6354     041E  00C6               	movwf	___flmul@temp
  6355     041F                     l4481:
  6356     041F  0846               	movf	___flmul@temp,w
  6357     0420  07C2               	addwf	___flmul@prod,f
  6358     0421  0847               	movf	___flmul@temp+1,w
  6359     0422  3DC3               	addwfc	___flmul@prod+1,f
  6360     0423  3000               	movlw	0
  6361     0424  3DC4               	addwfc	___flmul@prod+2,f
  6362     0425  3DC5               	addwfc	___flmul@prod+3,f
  6363     0426  0830               	movf	___flmul@b+2,w
  6364     0427  00A0               	movwf	__Umul8_16@multiplicand
  6365     0428  0834               	movf	___flmul@a+2,w
  6366     0429  3195  2529  3182   	fcall	__Umul8_16
  6367     042C  0020               	movlb	0	; select bank0
  6368     042D  0821               	movf	?__Umul8_16+1,w
  6369     042E  00C7               	movwf	___flmul@temp+1
  6370     042F  0820               	movf	?__Umul8_16,w
  6371     0430  00C6               	movwf	___flmul@temp
  6372     0431                     l4483:
  6373     0431  0846               	movf	___flmul@temp,w
  6374     0432  00B6               	movwf	??___flmul
  6375     0433  0847               	movf	___flmul@temp+1,w
  6376     0434  00B7               	movwf	??___flmul+1
  6377     0435  01B8               	clrf	??___flmul+2
  6378     0436  01B9               	clrf	??___flmul+3
  6379     0437  3008               	movlw	8
  6380     0438                     u3675:
  6381     0438  35B6               	lslf	??___flmul,f
  6382     0439  0DB7               	rlf	??___flmul+1,f
  6383     043A  0DB8               	rlf	??___flmul+2,f
  6384     043B  0DB9               	rlf	??___flmul+3,f
  6385     043C                     u3670:
  6386     043C  0B89               	decfsz	9,f
  6387     043D  2C38               	goto	u3675
  6388     043E  0836               	movf	??___flmul,w
  6389     043F  07C2               	addwf	___flmul@prod,f
  6390     0440  0837               	movf	??___flmul+1,w
  6391     0441  3DC3               	addwfc	___flmul@prod+1,f
  6392     0442  0838               	movf	??___flmul+2,w
  6393     0443  3DC4               	addwfc	___flmul@prod+2,f
  6394     0444  0839               	movf	??___flmul+3,w
  6395     0445  3DC5               	addwfc	___flmul@prod+3,f
  6396     0446                     l4485:
  6397     0446  083C               	movf	___flmul@grs,w
  6398     0447  00B6               	movwf	??___flmul
  6399     0448  083D               	movf	___flmul@grs+1,w
  6400     0449  00B7               	movwf	??___flmul+1
  6401     044A  083E               	movf	___flmul@grs+2,w
  6402     044B  00B8               	movwf	??___flmul+2
  6403     044C  083F               	movf	___flmul@grs+3,w
  6404     044D  00B9               	movwf	??___flmul+3
  6405     044E  3018               	movlw	24
  6406     044F                     u3685:
  6407     044F  36B9               	lsrf	??___flmul+3,f
  6408     0450  0CB8               	rrf	??___flmul+2,f
  6409     0451  0CB7               	rrf	??___flmul+1,f
  6410     0452  0CB6               	rrf	??___flmul,f
  6411     0453                     u3680:
  6412     0453  0B89               	decfsz	9,f
  6413     0454  2C4F               	goto	u3685
  6414     0455  0836               	movf	??___flmul,w
  6415     0456  07C2               	addwf	___flmul@prod,f
  6416     0457  0837               	movf	??___flmul+1,w
  6417     0458  3DC3               	addwfc	___flmul@prod+1,f
  6418     0459  0838               	movf	??___flmul+2,w
  6419     045A  3DC4               	addwfc	___flmul@prod+2,f
  6420     045B  0839               	movf	??___flmul+3,w
  6421     045C  3DC5               	addwfc	___flmul@prod+3,f
  6422     045D                     l4487:
  6423     045D  3008               	movlw	8
  6424     045E                     u3695:
  6425     045E  35BC               	lslf	___flmul@grs,f
  6426     045F  0DBD               	rlf	___flmul@grs+1,f
  6427     0460  0DBE               	rlf	___flmul@grs+2,f
  6428     0461  0DBF               	rlf	___flmul@grs+3,f
  6429     0462  0B89               	decfsz	9,f
  6430     0463  2C5E               	goto	u3695
  6431     0464                     l4489:
  6432     0464  0841               	movf	___flmul@bexp,w
  6433     0465  0740               	addwf	___flmul@aexp,w
  6434     0466  00B6               	movwf	??___flmul
  6435     0467  01B7               	clrf	??___flmul+1
  6436     0468  0DB7               	rlf	??___flmul+1,f
  6437     0469  0836               	movf	??___flmul,w
  6438     046A  3E82               	addlw	130
  6439     046B  00C6               	movwf	___flmul@temp
  6440     046C  30FF               	movlw	255
  6441     046D  3D37               	addwfc	??___flmul+1,w
  6442     046E  00C7               	movwf	___flmul@temp+1
  6443     046F  2C87               	goto	l4501
  6444     0470                     l4491:
  6445     0470  3001               	movlw	1
  6446     0471                     u3705:
  6447     0471  35C2               	lslf	___flmul@prod,f
  6448     0472  0DC3               	rlf	___flmul@prod+1,f
  6449     0473  0DC4               	rlf	___flmul@prod+2,f
  6450     0474  0DC5               	rlf	___flmul@prod+3,f
  6451     0475  0B89               	decfsz	9,f
  6452     0476  2C71               	goto	u3705
  6453     0477                     l4493:
  6454     0477  1FBF               	btfss	___flmul@grs+3,7
  6455     0478  2C7A               	goto	u3711
  6456     0479  2C7B               	goto	u3710
  6457     047A                     u3711:
  6458     047A  2C7C               	goto	l4497
  6459     047B                     u3710:
  6460     047B                     l4495:
  6461     047B  1442               	bsf	___flmul@prod,0
  6462     047C                     l4497:
  6463     047C  3001               	movlw	1
  6464     047D                     u3725:
  6465     047D  35BC               	lslf	___flmul@grs,f
  6466     047E  0DBD               	rlf	___flmul@grs+1,f
  6467     047F  0DBE               	rlf	___flmul@grs+2,f
  6468     0480  0DBF               	rlf	___flmul@grs+3,f
  6469     0481  0B89               	decfsz	9,f
  6470     0482  2C7D               	goto	u3725
  6471     0483                     l4499:
  6472     0483  30FF               	movlw	255
  6473     0484  07C6               	addwf	___flmul@temp,f
  6474     0485  30FF               	movlw	255
  6475     0486  3DC7               	addwfc	___flmul@temp+1,f
  6476     0487                     l4501:
  6477     0487  1FC4               	btfss	___flmul@prod+2,7
  6478     0488  2C8A               	goto	u3731
  6479     0489  2C8B               	goto	u3730
  6480     048A                     u3731:
  6481     048A  2C70               	goto	l4491
  6482     048B                     u3730:
  6483     048B                     l4503:
  6484     048B  01C0               	clrf	___flmul@aexp
  6485     048C                     l4505:
  6486     048C  1FBF               	btfss	___flmul@grs+3,7
  6487     048D  2C8F               	goto	u3741
  6488     048E  2C90               	goto	u3740
  6489     048F                     u3741:
  6490     048F  2CAC               	goto	l4513
  6491     0490                     u3740:
  6492     0490                     l4507:
  6493     0490  30FF               	movlw	255
  6494     0491  053C               	andwf	___flmul@grs,w
  6495     0492  00B6               	movwf	??___flmul
  6496     0493  30FF               	movlw	255
  6497     0494  053D               	andwf	___flmul@grs+1,w
  6498     0495  00B7               	movwf	??___flmul+1
  6499     0496  30FF               	movlw	255
  6500     0497  053E               	andwf	___flmul@grs+2,w
  6501     0498  00B8               	movwf	??___flmul+2
  6502     0499  307F               	movlw	127
  6503     049A  053F               	andwf	___flmul@grs+3,w
  6504     049B  00B9               	movwf	??___flmul+3
  6505     049C  0839               	movf	??___flmul+3,w
  6506     049D  0438               	iorwf	??___flmul+2,w
  6507     049E  0437               	iorwf	??___flmul+1,w
  6508     049F  0436               	iorwf	??___flmul,w
  6509     04A0  1903               	skipnz
  6510     04A1  2CA3               	goto	u3751
  6511     04A2  2CA4               	goto	u3750
  6512     04A3                     u3751:
  6513     04A3  2CA7               	goto	l1565
  6514     04A4                     u3750:
  6515     04A4                     l4509:
  6516     04A4  01C0               	clrf	___flmul@aexp
  6517     04A5  0AC0               	incf	___flmul@aexp,f
  6518     04A6  2CAC               	goto	l4513
  6519     04A7                     l1565:
  6520     04A7  1C42               	btfss	___flmul@prod,0
  6521     04A8  2CAA               	goto	u3761
  6522     04A9  2CAB               	goto	u3760
  6523     04AA                     u3761:
  6524     04AA  2CAC               	goto	l4513
  6525     04AB                     u3760:
  6526     04AB  2CA4               	goto	l4509
  6527     04AC                     l4513:
  6528     04AC  0840               	movf	___flmul@aexp,w
  6529     04AD  1903               	btfsc	3,2
  6530     04AE  2CB0               	goto	u3771
  6531     04AF  2CB1               	goto	u3770
  6532     04B0                     u3771:
  6533     04B0  2CD9               	goto	l4523
  6534     04B1                     u3770:
  6535     04B1                     l4515:
  6536     04B1  3001               	movlw	1
  6537     04B2  07C2               	addwf	___flmul@prod,f
  6538     04B3  3000               	movlw	0
  6539     04B4  3DC3               	addwfc	___flmul@prod+1,f
  6540     04B5  3000               	movlw	0
  6541     04B6  3DC4               	addwfc	___flmul@prod+2,f
  6542     04B7  3000               	movlw	0
  6543     04B8  3DC5               	addwfc	___flmul@prod+3,f
  6544     04B9                     l4517:
  6545     04B9  1C45               	btfss	___flmul@prod+3,0
  6546     04BA  2CBC               	goto	u3781
  6547     04BB  2CBD               	goto	u3780
  6548     04BC                     u3781:
  6549     04BC  2CD9               	goto	l4523
  6550     04BD                     u3780:
  6551     04BD                     l4519:
  6552     04BD  0842               	movf	___flmul@prod,w
  6553     04BE  00B6               	movwf	??___flmul
  6554     04BF  0843               	movf	___flmul@prod+1,w
  6555     04C0  00B7               	movwf	??___flmul+1
  6556     04C1  0844               	movf	___flmul@prod+2,w
  6557     04C2  00B8               	movwf	??___flmul+2
  6558     04C3  0845               	movf	___flmul@prod+3,w
  6559     04C4  00B9               	movwf	??___flmul+3
  6560     04C5  3001               	movlw	1
  6561     04C6  00BA               	movwf	??___flmul+4
  6562     04C7                     u3795:
  6563     04C7  37B9               	asrf	??___flmul+3,f
  6564     04C8  0CB8               	rrf	??___flmul+2,f
  6565     04C9  0CB7               	rrf	??___flmul+1,f
  6566     04CA  0CB6               	rrf	??___flmul,f
  6567     04CB                     u3790:
  6568     04CB  0BBA               	decfsz	??___flmul+4,f
  6569     04CC  2CC7               	goto	u3795
  6570     04CD  0839               	movf	??___flmul+3,w
  6571     04CE  00C5               	movwf	___flmul@prod+3
  6572     04CF  0838               	movf	??___flmul+2,w
  6573     04D0  00C4               	movwf	___flmul@prod+2
  6574     04D1  0837               	movf	??___flmul+1,w
  6575     04D2  00C3               	movwf	___flmul@prod+1
  6576     04D3  0836               	movf	??___flmul,w
  6577     04D4  00C2               	movwf	___flmul@prod
  6578     04D5                     l4521:
  6579     04D5  3001               	movlw	1
  6580     04D6  07C6               	addwf	___flmul@temp,f
  6581     04D7  3000               	movlw	0
  6582     04D8  3DC7               	addwfc	___flmul@temp+1,f
  6583     04D9                     l4523:
  6584     04D9  0847               	movf	___flmul@temp+1,w
  6585     04DA  3A80               	xorlw	128
  6586     04DB  00B6               	movwf	??___flmul
  6587     04DC  3080               	movlw	128
  6588     04DD  0236               	subwf	??___flmul,w
  6589     04DE  1D03               	skipz
  6590     04DF  2CE2               	goto	u3805
  6591     04E0  30FF               	movlw	255
  6592     04E1  0246               	subwf	___flmul@temp,w
  6593     04E2                     u3805:
  6594     04E2  1C03               	skipc
  6595     04E3  2CE5               	goto	u3801
  6596     04E4  2CE6               	goto	u3800
  6597     04E5                     u3801:
  6598     04E5  2CF0               	goto	l4527
  6599     04E6                     u3800:
  6600     04E6                     l4525:
  6601     04E6  307F               	movlw	127
  6602     04E7  0020               	movlb	0	; select bank0
  6603     04E8  00C5               	movwf	___flmul@prod+3
  6604     04E9  3080               	movlw	128
  6605     04EA  00C4               	movwf	___flmul@prod+2
  6606     04EB  3000               	movlw	0
  6607     04EC  00C3               	movwf	___flmul@prod+1
  6608     04ED  3000               	movlw	0
  6609     04EE  00C2               	movwf	___flmul@prod
  6610     04EF  2D1B               	goto	l1571
  6611     04F0                     l4527:
  6612     04F0  0020               	movlb	0	; select bank0
  6613     04F1  0847               	movf	___flmul@temp+1,w
  6614     04F2  3A80               	xorlw	128
  6615     04F3  00B6               	movwf	??___flmul
  6616     04F4  3080               	movlw	128
  6617     04F5  0236               	subwf	??___flmul,w
  6618     04F6  1D03               	skipz
  6619     04F7  2CFA               	goto	u3815
  6620     04F8  3001               	movlw	1
  6621     04F9  0246               	subwf	___flmul@temp,w
  6622     04FA                     u3815:
  6623     04FA  1803               	skipnc
  6624     04FB  2CFD               	goto	u3811
  6625     04FC  2CFE               	goto	u3810
  6626     04FD                     u3811:
  6627     04FD  2D09               	goto	l4533
  6628     04FE                     u3810:
  6629     04FE                     l4529:
  6630     04FE  3000               	movlw	0
  6631     04FF  0020               	movlb	0	; select bank0
  6632     0500  00C5               	movwf	___flmul@prod+3
  6633     0501  3000               	movlw	0
  6634     0502  00C4               	movwf	___flmul@prod+2
  6635     0503  3000               	movlw	0
  6636     0504  00C3               	movwf	___flmul@prod+1
  6637     0505  3000               	movlw	0
  6638     0506  00C2               	movwf	___flmul@prod
  6639     0507                     l4531:
  6640     0507  01BB               	clrf	___flmul@sign
  6641     0508  2D1B               	goto	l1571
  6642     0509                     l4533:
  6643     0509  0020               	movlb	0	; select bank0
  6644     050A  0846               	movf	___flmul@temp,w
  6645     050B  00C1               	movwf	___flmul@bexp
  6646     050C  30FF               	movlw	255
  6647     050D  05C2               	andwf	___flmul@prod,f
  6648     050E  30FF               	movlw	255
  6649     050F  05C3               	andwf	___flmul@prod+1,f
  6650     0510  307F               	movlw	127
  6651     0511  05C4               	andwf	___flmul@prod+2,f
  6652     0512  3000               	movlw	0
  6653     0513  05C5               	andwf	___flmul@prod+3,f
  6654     0514                     l4535:
  6655     0514  1C41               	btfss	___flmul@bexp,0
  6656     0515  2D17               	goto	u3821
  6657     0516  2D18               	goto	u3820
  6658     0517                     u3821:
  6659     0517  2D19               	goto	l4539
  6660     0518                     u3820:
  6661     0518                     l4537:
  6662     0518  17C4               	bsf	___flmul@prod+2,7
  6663     0519                     l4539:
  6664     0519  3641               	lsrf	___flmul@bexp,w
  6665     051A  00C5               	movwf	___flmul@prod+3
  6666     051B                     l1571:
  6667     051B  083B               	movf	___flmul@sign,w
  6668     051C  00B6               	movwf	??___flmul
  6669     051D  0836               	movf	??___flmul,w
  6670     051E  04C5               	iorwf	___flmul@prod+3,f
  6671     051F                     l4541:
  6672     051F  0845               	movf	___flmul@prod+3,w
  6673     0520  00B1               	movwf	?___flmul+3
  6674     0521  0844               	movf	___flmul@prod+2,w
  6675     0522  00B0               	movwf	?___flmul+2
  6676     0523  0843               	movf	___flmul@prod+1,w
  6677     0524  00AF               	movwf	?___flmul+1
  6678     0525  0842               	movf	___flmul@prod,w
  6679     0526  00AE               	movwf	?___flmul
  6680     0527                     l1559:
  6681     0527  0008               	return
  6682     0528                     __end_of___flmul:
  6683                           
  6684                           	psect	text20
  6685     1529                     __ptext20:	
  6686 ;; *************** function __Umul8_16 *****************
  6687 ;; Defined at:
  6688 ;;		line 4 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\Umul8_16.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  multiplier      1    wreg     unsigned char 
  6691 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6694 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6695 ;;  product         2    4[BANK0 ] unsigned int 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  2    0[BANK0 ] unsigned int 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6705 ;;      Params:         0       2       0       0       0       0       0       0
  6706 ;;      Locals:         0       5       0       0       0       0       0       0
  6707 ;;      Temps:          0       2       0       0       0       0       0       0
  6708 ;;      Totals:         0       9       0       0       0       0       0       0
  6709 ;;Total ram usage:        9 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 7
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		___flmul
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719     1529                     __Umul8_16:	
  6720                           ;psect for function __Umul8_16
  6721                           
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6725                           ;__Umul8_16@multiplier stored from wreg
  6726     1529  0020               	movlb	0	; select bank0
  6727     152A  00A8               	movwf	__Umul8_16@multiplier
  6728     152B                     l3829:
  6729     152B  01A4               	clrf	__Umul8_16@product
  6730     152C  01A5               	clrf	__Umul8_16@product+1
  6731     152D                     l3831:
  6732     152D  0820               	movf	__Umul8_16@multiplicand,w
  6733     152E  00A2               	movwf	??__Umul8_16
  6734     152F  01A3               	clrf	??__Umul8_16+1
  6735     1530  0822               	movf	??__Umul8_16,w
  6736     1531  00A6               	movwf	__Umul8_16@word_mpld
  6737     1532  0823               	movf	??__Umul8_16+1,w
  6738     1533  00A7               	movwf	__Umul8_16@word_mpld+1
  6739     1534                     l3833:
  6740     1534  1C28               	btfss	__Umul8_16@multiplier,0
  6741     1535  2D37               	goto	u2601
  6742     1536  2D38               	goto	u2600
  6743     1537                     u2601:
  6744     1537  2D3C               	goto	l1578
  6745     1538                     u2600:
  6746     1538                     l3835:
  6747     1538  0826               	movf	__Umul8_16@word_mpld,w
  6748     1539  07A4               	addwf	__Umul8_16@product,f
  6749     153A  0827               	movf	__Umul8_16@word_mpld+1,w
  6750     153B  3DA5               	addwfc	__Umul8_16@product+1,f
  6751     153C                     l1578:
  6752     153C  3001               	movlw	1
  6753     153D                     u2615:
  6754     153D  35A6               	lslf	__Umul8_16@word_mpld,f
  6755     153E  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6756     153F  0B89               	decfsz	9,f
  6757     1540  2D3D               	goto	u2615
  6758     1541  1003               	clrc
  6759     1542  0CA8               	rrf	__Umul8_16@multiplier,f
  6760     1543                     l3837:
  6761     1543  0828               	movf	__Umul8_16@multiplier,w
  6762     1544  1D03               	btfss	3,2
  6763     1545  2D47               	goto	u2621
  6764     1546  2D48               	goto	u2620
  6765     1547                     u2621:
  6766     1547  2D34               	goto	l3833
  6767     1548                     u2620:
  6768     1548                     l3839:
  6769     1548  0825               	movf	__Umul8_16@product+1,w
  6770     1549  00A1               	movwf	?__Umul8_16+1
  6771     154A  0824               	movf	__Umul8_16@product,w
  6772     154B  00A0               	movwf	?__Umul8_16
  6773     154C                     l1580:
  6774     154C  0008               	return
  6775     154D                     __end_of__Umul8_16:
  6776                           
  6777                           	psect	text21
  6778     0DFC                     __ptext21:	
  6779 ;; *************** function ___fldiv *****************
  6780 ;; Defined at:
  6781 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcdiv.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  a               4   60[BANK0 ] unsigned int 
  6784 ;;  b               4   64[BANK0 ] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  grs             4    7[BANK1 ] unsigned long 
  6787 ;;  rem             4    0[BANK1 ] unsigned long 
  6788 ;;  new_exp         2    5[BANK1 ] int 
  6789 ;;  aexp            1   12[BANK1 ] unsigned char 
  6790 ;;  bexp            1   11[BANK1 ] unsigned char 
  6791 ;;  sign            1    4[BANK1 ] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  4   60[BANK0 ] unsigned char 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6801 ;;      Params:         0       8       0       0       0       0       0       0
  6802 ;;      Locals:         0       0      13       0       0       0       0       0
  6803 ;;      Temps:          0       5       0       0       0       0       0       0
  6804 ;;      Totals:         0      13      13       0       0       0       0       0
  6805 ;;Total ram usage:       26 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 7
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_ReadData
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815     0DFC                     ___fldiv:	
  6816                           ;psect for function ___fldiv
  6817                           
  6818     0DFC                     l4265:	
  6819                           ;incstack = 0
  6820                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6821                           
  6822     0DFC  0020               	movlb	0	; select bank0
  6823     0DFD  0863               	movf	___fldiv@b+3,w
  6824     0DFE  3980               	andlw	128
  6825     0DFF  0021               	movlb	1	; select bank1
  6826     0E00  00A4               	movwf	___fldiv@sign^(0+128)
  6827     0E01                     l4267:
  6828     0E01  0020               	movlb	0	; select bank0
  6829     0E02  3563               	lslf	___fldiv@b+3,w
  6830     0E03  0021               	movlb	1	; select bank1
  6831     0E04  00AB               	movwf	___fldiv@bexp^(0+128)
  6832     0E05                     l4269:
  6833     0E05  0020               	movlb	0	; select bank0
  6834     0E06  1FE2               	btfss	___fldiv@b+2,7
  6835     0E07  2E09               	goto	u3281
  6836     0E08  2E0A               	goto	u3280
  6837     0E09                     u3281:
  6838     0E09  2E0C               	goto	l4273
  6839     0E0A                     u3280:
  6840     0E0A                     l4271:
  6841     0E0A  0021               	movlb	1	; select bank1
  6842     0E0B  142B               	bsf	___fldiv@bexp^(0+128),0
  6843     0E0C                     l4273:
  6844     0E0C  0021               	movlb	1	; select bank1
  6845     0E0D  082B               	movf	___fldiv@bexp^(0+128),w
  6846     0E0E  1903               	btfsc	3,2
  6847     0E0F  2E11               	goto	u3291
  6848     0E10  2E12               	goto	u3290
  6849     0E11                     u3291:
  6850     0E11  2E24               	goto	l4283
  6851     0E12                     u3290:
  6852     0E12                     l4275:
  6853     0E12  0A2B               	incf	___fldiv@bexp^(0+128),w
  6854     0E13  1D03               	btfss	3,2
  6855     0E14  2E16               	goto	u3301
  6856     0E15  2E17               	goto	u3300
  6857     0E16                     u3301:
  6858     0E16  2E20               	goto	l4279
  6859     0E17                     u3300:
  6860     0E17                     l4277:
  6861     0E17  3000               	movlw	0
  6862     0E18  0020               	movlb	0	; select bank0
  6863     0E19  00E3               	movwf	___fldiv@b+3
  6864     0E1A  3000               	movlw	0
  6865     0E1B  00E2               	movwf	___fldiv@b+2
  6866     0E1C  3000               	movlw	0
  6867     0E1D  00E1               	movwf	___fldiv@b+1
  6868     0E1E  3000               	movlw	0
  6869     0E1F  00E0               	movwf	___fldiv@b
  6870     0E20                     l4279:
  6871     0E20  0020               	movlb	0	; select bank0
  6872     0E21  17E2               	bsf	___fldiv@b+2,7
  6873     0E22                     l4281:
  6874     0E22  01E3               	clrf	___fldiv@b+3
  6875     0E23  2E2D               	goto	l4285
  6876     0E24                     l4283:
  6877     0E24  3000               	movlw	0
  6878     0E25  0020               	movlb	0	; select bank0
  6879     0E26  00E3               	movwf	___fldiv@b+3
  6880     0E27  3000               	movlw	0
  6881     0E28  00E2               	movwf	___fldiv@b+2
  6882     0E29  3000               	movlw	0
  6883     0E2A  00E1               	movwf	___fldiv@b+1
  6884     0E2B  3000               	movlw	0
  6885     0E2C  00E0               	movwf	___fldiv@b
  6886     0E2D                     l4285:
  6887     0E2D  085F               	movf	___fldiv@a+3,w
  6888     0E2E  3980               	andlw	128
  6889     0E2F  00E4               	movwf	??___fldiv
  6890     0E30  0864               	movf	??___fldiv,w
  6891     0E31  0021               	movlb	1	; select bank1
  6892     0E32  06A4               	xorwf	___fldiv@sign^(0+128),f
  6893     0E33                     l4287:
  6894     0E33  0020               	movlb	0	; select bank0
  6895     0E34  355F               	lslf	___fldiv@a+3,w
  6896     0E35  0021               	movlb	1	; select bank1
  6897     0E36  00AC               	movwf	___fldiv@aexp^(0+128)
  6898     0E37                     l4289:
  6899     0E37  0020               	movlb	0	; select bank0
  6900     0E38  1FDE               	btfss	___fldiv@a+2,7
  6901     0E39  2E3B               	goto	u3311
  6902     0E3A  2E3C               	goto	u3310
  6903     0E3B                     u3311:
  6904     0E3B  2E3E               	goto	l4293
  6905     0E3C                     u3310:
  6906     0E3C                     l4291:
  6907     0E3C  0021               	movlb	1	; select bank1
  6908     0E3D  142C               	bsf	___fldiv@aexp^(0+128),0
  6909     0E3E                     l4293:
  6910     0E3E  0021               	movlb	1	; select bank1
  6911     0E3F  082C               	movf	___fldiv@aexp^(0+128),w
  6912     0E40  1903               	btfsc	3,2
  6913     0E41  2E43               	goto	u3321
  6914     0E42  2E44               	goto	u3320
  6915     0E43                     u3321:
  6916     0E43  2E56               	goto	l4303
  6917     0E44                     u3320:
  6918     0E44                     l4295:
  6919     0E44  0A2C               	incf	___fldiv@aexp^(0+128),w
  6920     0E45  1D03               	btfss	3,2
  6921     0E46  2E48               	goto	u3331
  6922     0E47  2E49               	goto	u3330
  6923     0E48                     u3331:
  6924     0E48  2E52               	goto	l4299
  6925     0E49                     u3330:
  6926     0E49                     l4297:
  6927     0E49  3000               	movlw	0
  6928     0E4A  0020               	movlb	0	; select bank0
  6929     0E4B  00DF               	movwf	___fldiv@a+3
  6930     0E4C  3000               	movlw	0
  6931     0E4D  00DE               	movwf	___fldiv@a+2
  6932     0E4E  3000               	movlw	0
  6933     0E4F  00DD               	movwf	___fldiv@a+1
  6934     0E50  3000               	movlw	0
  6935     0E51  00DC               	movwf	___fldiv@a
  6936     0E52                     l4299:
  6937     0E52  0020               	movlb	0	; select bank0
  6938     0E53  17DE               	bsf	___fldiv@a+2,7
  6939     0E54                     l4301:
  6940     0E54  01DF               	clrf	___fldiv@a+3
  6941     0E55  2E5F               	goto	l1519
  6942     0E56                     l4303:
  6943     0E56  3000               	movlw	0
  6944     0E57  0020               	movlb	0	; select bank0
  6945     0E58  00DF               	movwf	___fldiv@a+3
  6946     0E59  3000               	movlw	0
  6947     0E5A  00DE               	movwf	___fldiv@a+2
  6948     0E5B  3000               	movlw	0
  6949     0E5C  00DD               	movwf	___fldiv@a+1
  6950     0E5D  3000               	movlw	0
  6951     0E5E  00DC               	movwf	___fldiv@a
  6952     0E5F                     l1519:
  6953     0E5F  085F               	movf	___fldiv@a+3,w
  6954     0E60  045E               	iorwf	___fldiv@a+2,w
  6955     0E61  045D               	iorwf	___fldiv@a+1,w
  6956     0E62  045C               	iorwf	___fldiv@a,w
  6957     0E63  1D03               	skipz
  6958     0E64  2E66               	goto	u3341
  6959     0E65  2E67               	goto	u3340
  6960     0E66                     u3341:
  6961     0E66  2E82               	goto	l4313
  6962     0E67                     u3340:
  6963     0E67                     l4305:
  6964     0E67  3000               	movlw	0
  6965     0E68  00E3               	movwf	___fldiv@b+3
  6966     0E69  3000               	movlw	0
  6967     0E6A  00E2               	movwf	___fldiv@b+2
  6968     0E6B  3000               	movlw	0
  6969     0E6C  00E1               	movwf	___fldiv@b+1
  6970     0E6D  3000               	movlw	0
  6971     0E6E  00E0               	movwf	___fldiv@b
  6972     0E6F  3080               	movlw	128
  6973     0E70  04E2               	iorwf	___fldiv@b+2,f
  6974     0E71  307F               	movlw	127
  6975     0E72  04E3               	iorwf	___fldiv@b+3,f
  6976     0E73                     l4307:
  6977     0E73  0021               	movlb	1	; select bank1
  6978     0E74  0824               	movf	___fldiv@sign^(0+128),w
  6979     0E75  0020               	movlb	0	; select bank0
  6980     0E76  00E4               	movwf	??___fldiv
  6981     0E77  0864               	movf	??___fldiv,w
  6982     0E78  04E3               	iorwf	___fldiv@b+3,f
  6983     0E79                     l4309:
  6984     0E79  0863               	movf	___fldiv@b+3,w
  6985     0E7A  00DF               	movwf	?___fldiv+3
  6986     0E7B  0862               	movf	___fldiv@b+2,w
  6987     0E7C  00DE               	movwf	?___fldiv+2
  6988     0E7D  0861               	movf	___fldiv@b+1,w
  6989     0E7E  00DD               	movwf	?___fldiv+1
  6990     0E7F  0860               	movf	___fldiv@b,w
  6991     0E80  00DC               	movwf	?___fldiv
  6992     0E81  2FFF               	goto	l1521
  6993     0E82                     l4313:
  6994     0E82  0021               	movlb	1	; select bank1
  6995     0E83  082B               	movf	___fldiv@bexp^(0+128),w
  6996     0E84  1D03               	btfss	3,2
  6997     0E85  2E87               	goto	u3351
  6998     0E86  2E88               	goto	u3350
  6999     0E87                     u3351:
  7000     0E87  2E92               	goto	l4319
  7001     0E88                     u3350:
  7002     0E88                     l4315:
  7003     0E88  3000               	movlw	0
  7004     0E89  0020               	movlb	0	; select bank0
  7005     0E8A  00DF               	movwf	?___fldiv+3
  7006     0E8B  3000               	movlw	0
  7007     0E8C  00DE               	movwf	?___fldiv+2
  7008     0E8D  3000               	movlw	0
  7009     0E8E  00DD               	movwf	?___fldiv+1
  7010     0E8F  3000               	movlw	0
  7011     0E90  00DC               	movwf	?___fldiv
  7012     0E91  2FFF               	goto	l1521
  7013     0E92                     l4319:
  7014     0E92  082B               	movf	___fldiv@bexp^(0+128),w
  7015     0E93  0020               	movlb	0	; select bank0
  7016     0E94  00E4               	movwf	??___fldiv
  7017     0E95  01E5               	clrf	??___fldiv+1
  7018     0E96  0865               	movf	??___fldiv+1,w
  7019     0E97  00E7               	movwf	??___fldiv+3
  7020     0E98  0021               	movlb	1	; select bank1
  7021     0E99  082C               	movf	___fldiv@aexp^(0+128),w
  7022     0E9A  0020               	movlb	0	; select bank0
  7023     0E9B  0264               	subwf	??___fldiv,w
  7024     0E9C  00E6               	movwf	??___fldiv+2
  7025     0E9D  1C03               	skipc
  7026     0E9E  03E7               	decf	??___fldiv+3,f
  7027     0E9F  0866               	movf	??___fldiv+2,w
  7028     0EA0  3E7F               	addlw	127
  7029     0EA1  0021               	movlb	1	; select bank1
  7030     0EA2  00A5               	movwf	___fldiv@new_exp^(0+128)
  7031     0EA3  3000               	movlw	0
  7032     0EA4  0020               	movlb	0	; select bank0
  7033     0EA5  3D67               	addwfc	??___fldiv+3,w
  7034     0EA6  0021               	movlb	1	; select bank1
  7035     0EA7  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  7036     0EA8                     l4321:
  7037     0EA8  0020               	movlb	0	; select bank0
  7038     0EA9  0863               	movf	___fldiv@b+3,w
  7039     0EAA  0021               	movlb	1	; select bank1
  7040     0EAB  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  7041     0EAC  0020               	movlb	0	; select bank0
  7042     0EAD  0862               	movf	___fldiv@b+2,w
  7043     0EAE  0021               	movlb	1	; select bank1
  7044     0EAF  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  7045     0EB0  0020               	movlb	0	; select bank0
  7046     0EB1  0861               	movf	___fldiv@b+1,w
  7047     0EB2  0021               	movlb	1	; select bank1
  7048     0EB3  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  7049     0EB4  0020               	movlb	0	; select bank0
  7050     0EB5  0860               	movf	___fldiv@b,w
  7051     0EB6  0021               	movlb	1	; select bank1
  7052     0EB7  00A0               	movwf	___fldiv@rem^(0+128)
  7053     0EB8                     l4323:
  7054     0EB8  3000               	movlw	0
  7055     0EB9  0020               	movlb	0	; select bank0
  7056     0EBA  00E3               	movwf	___fldiv@b+3
  7057     0EBB  3000               	movlw	0
  7058     0EBC  00E2               	movwf	___fldiv@b+2
  7059     0EBD  3000               	movlw	0
  7060     0EBE  00E1               	movwf	___fldiv@b+1
  7061     0EBF  3000               	movlw	0
  7062     0EC0  00E0               	movwf	___fldiv@b
  7063     0EC1                     l4325:
  7064     0EC1  3000               	movlw	0
  7065     0EC2  0021               	movlb	1	; select bank1
  7066     0EC3  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  7067     0EC4  3000               	movlw	0
  7068     0EC5  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  7069     0EC6  3000               	movlw	0
  7070     0EC7  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  7071     0EC8  3000               	movlw	0
  7072     0EC9  00A7               	movwf	___fldiv@grs^(0+128)
  7073     0ECA                     l4327:
  7074     0ECA  01AC               	clrf	___fldiv@aexp^(0+128)
  7075     0ECB  2F20               	goto	l4347
  7076     0ECC                     l4329:
  7077     0ECC  082C               	movf	___fldiv@aexp^(0+128),w
  7078     0ECD  1903               	btfsc	3,2
  7079     0ECE  2ED0               	goto	u3361
  7080     0ECF  2ED1               	goto	u3360
  7081     0ED0                     u3361:
  7082     0ED0  2EEF               	goto	l4339
  7083     0ED1                     u3360:
  7084     0ED1                     l4331:
  7085     0ED1  3001               	movlw	1
  7086     0ED2                     u3375:
  7087     0ED2  35A0               	lslf	___fldiv@rem^(0+128),f
  7088     0ED3  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  7089     0ED4  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  7090     0ED5  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  7091     0ED6  0B89               	decfsz	9,f
  7092     0ED7  2ED2               	goto	u3375
  7093     0ED8  3001               	movlw	1
  7094     0ED9                     u3385:
  7095     0ED9  0020               	movlb	0	; select bank0
  7096     0EDA  35E0               	lslf	___fldiv@b,f
  7097     0EDB  0DE1               	rlf	___fldiv@b+1,f
  7098     0EDC  0DE2               	rlf	___fldiv@b+2,f
  7099     0EDD  0DE3               	rlf	___fldiv@b+3,f
  7100     0EDE  0B89               	decfsz	9,f
  7101     0EDF  2ED9               	goto	u3385
  7102     0EE0                     l4333:
  7103     0EE0  0021               	movlb	1	; select bank1
  7104     0EE1  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7105     0EE2  2EE4               	goto	u3391
  7106     0EE3  2EE5               	goto	u3390
  7107     0EE4                     u3391:
  7108     0EE4  2EE7               	goto	l4337
  7109     0EE5                     u3390:
  7110     0EE5                     l4335:
  7111     0EE5  0020               	movlb	0	; select bank0
  7112     0EE6  1460               	bsf	___fldiv@b,0
  7113     0EE7                     l4337:
  7114     0EE7  3001               	movlw	1
  7115     0EE8                     u3405:
  7116     0EE8  0021               	movlb	1	; select bank1
  7117     0EE9  35A7               	lslf	___fldiv@grs^(0+128),f
  7118     0EEA  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7119     0EEB  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7120     0EEC  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7121     0EED  0B89               	decfsz	9,f
  7122     0EEE  2EE8               	goto	u3405
  7123     0EEF                     l4339:
  7124     0EEF  0020               	movlb	0	; select bank0
  7125     0EF0  085F               	movf	___fldiv@a+3,w
  7126     0EF1  0021               	movlb	1	; select bank1
  7127     0EF2  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  7128     0EF3  1D03               	skipz
  7129     0EF4  2F05               	goto	u3415
  7130     0EF5  0020               	movlb	0	; select bank0
  7131     0EF6  085E               	movf	___fldiv@a+2,w
  7132     0EF7  0021               	movlb	1	; select bank1
  7133     0EF8  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  7134     0EF9  1D03               	skipz
  7135     0EFA  2F05               	goto	u3415
  7136     0EFB  0020               	movlb	0	; select bank0
  7137     0EFC  085D               	movf	___fldiv@a+1,w
  7138     0EFD  0021               	movlb	1	; select bank1
  7139     0EFE  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  7140     0EFF  1D03               	skipz
  7141     0F00  2F05               	goto	u3415
  7142     0F01  0020               	movlb	0	; select bank0
  7143     0F02  085C               	movf	___fldiv@a,w
  7144     0F03  0021               	movlb	1	; select bank1
  7145     0F04  0220               	subwf	___fldiv@rem^(0+128),w
  7146     0F05                     u3415:
  7147     0F05  1C03               	skipc
  7148     0F06  2F08               	goto	u3411
  7149     0F07  2F09               	goto	u3410
  7150     0F08                     u3411:
  7151     0F08  2F1A               	goto	l4345
  7152     0F09                     u3410:
  7153     0F09                     l4341:
  7154     0F09  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  7155     0F0A                     l4343:
  7156     0F0A  0020               	movlb	0	; select bank0
  7157     0F0B  085C               	movf	___fldiv@a,w
  7158     0F0C  0021               	movlb	1	; select bank1
  7159     0F0D  02A0               	subwf	___fldiv@rem^(0+128),f
  7160     0F0E  0020               	movlb	0	; select bank0
  7161     0F0F  085D               	movf	___fldiv@a+1,w
  7162     0F10  0021               	movlb	1	; select bank1
  7163     0F11  3BA1               	subwfb	(___fldiv@rem+1)^(0+128),f
  7164     0F12  0020               	movlb	0	; select bank0
  7165     0F13  085E               	movf	___fldiv@a+2,w
  7166     0F14  0021               	movlb	1	; select bank1
  7167     0F15  3BA2               	subwfb	(___fldiv@rem+2)^(0+128),f
  7168     0F16  0020               	movlb	0	; select bank0
  7169     0F17  085F               	movf	___fldiv@a+3,w
  7170     0F18  0021               	movlb	1	; select bank1
  7171     0F19  3BA3               	subwfb	(___fldiv@rem+3)^(0+128),f
  7172     0F1A                     l4345:
  7173     0F1A  3001               	movlw	1
  7174     0F1B  0020               	movlb	0	; select bank0
  7175     0F1C  00E4               	movwf	??___fldiv
  7176     0F1D  0864               	movf	??___fldiv,w
  7177     0F1E  0021               	movlb	1	; select bank1
  7178     0F1F  07AC               	addwf	___fldiv@aexp^(0+128),f
  7179     0F20                     l4347:
  7180     0F20  301A               	movlw	26
  7181     0F21  022C               	subwf	___fldiv@aexp^(0+128),w
  7182     0F22  1C03               	skipc
  7183     0F23  2F25               	goto	u3421
  7184     0F24  2F26               	goto	u3420
  7185     0F25                     u3421:
  7186     0F25  2ECC               	goto	l4329
  7187     0F26                     u3420:
  7188     0F26                     l4349:
  7189     0F26  0823               	movf	(___fldiv@rem+3)^(0+128),w
  7190     0F27  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  7191     0F28  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  7192     0F29  0420               	iorwf	___fldiv@rem^(0+128),w
  7193     0F2A  1903               	skipnz
  7194     0F2B  2F2D               	goto	u3431
  7195     0F2C  2F2E               	goto	u3430
  7196     0F2D                     u3431:
  7197     0F2D  2F4A               	goto	l4363
  7198     0F2E                     u3430:
  7199     0F2E                     l4351:
  7200     0F2E  1427               	bsf	___fldiv@grs^(0+128),0
  7201     0F2F  2F4A               	goto	l4363
  7202     0F30                     l4353:
  7203     0F30  3001               	movlw	1
  7204     0F31                     u3445:
  7205     0F31  35E0               	lslf	___fldiv@b,f
  7206     0F32  0DE1               	rlf	___fldiv@b+1,f
  7207     0F33  0DE2               	rlf	___fldiv@b+2,f
  7208     0F34  0DE3               	rlf	___fldiv@b+3,f
  7209     0F35  0B89               	decfsz	9,f
  7210     0F36  2F31               	goto	u3445
  7211     0F37                     l4355:
  7212     0F37  0021               	movlb	1	; select bank1
  7213     0F38  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7214     0F39  2F3B               	goto	u3451
  7215     0F3A  2F3C               	goto	u3450
  7216     0F3B                     u3451:
  7217     0F3B  2F3E               	goto	l4359
  7218     0F3C                     u3450:
  7219     0F3C                     l4357:
  7220     0F3C  0020               	movlb	0	; select bank0
  7221     0F3D  1460               	bsf	___fldiv@b,0
  7222     0F3E                     l4359:
  7223     0F3E  3001               	movlw	1
  7224     0F3F                     u3465:
  7225     0F3F  0021               	movlb	1	; select bank1
  7226     0F40  35A7               	lslf	___fldiv@grs^(0+128),f
  7227     0F41  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7228     0F42  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7229     0F43  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7230     0F44  0B89               	decfsz	9,f
  7231     0F45  2F3F               	goto	u3465
  7232     0F46                     l4361:
  7233     0F46  30FF               	movlw	255
  7234     0F47  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7235     0F48  30FF               	movlw	255
  7236     0F49  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7237     0F4A                     l4363:
  7238     0F4A  0020               	movlb	0	; select bank0
  7239     0F4B  1FE2               	btfss	___fldiv@b+2,7
  7240     0F4C  2F4E               	goto	u3471
  7241     0F4D  2F4F               	goto	u3470
  7242     0F4E                     u3471:
  7243     0F4E  2F30               	goto	l4353
  7244     0F4F                     u3470:
  7245     0F4F                     l4365:
  7246     0F4F  0021               	movlb	1	; select bank1
  7247     0F50  01AC               	clrf	___fldiv@aexp^(0+128)
  7248     0F51                     l4367:
  7249     0F51  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7250     0F52  2F54               	goto	u3481
  7251     0F53  2F55               	goto	u3480
  7252     0F54                     u3481:
  7253     0F54  2F79               	goto	l4375
  7254     0F55                     u3480:
  7255     0F55                     l4369:
  7256     0F55  30FF               	movlw	255
  7257     0F56  0527               	andwf	___fldiv@grs^(0+128),w
  7258     0F57  0020               	movlb	0	; select bank0
  7259     0F58  00E4               	movwf	??___fldiv
  7260     0F59  30FF               	movlw	255
  7261     0F5A  0021               	movlb	1	; select bank1
  7262     0F5B  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  7263     0F5C  0020               	movlb	0	; select bank0
  7264     0F5D  00E5               	movwf	??___fldiv+1
  7265     0F5E  30FF               	movlw	255
  7266     0F5F  0021               	movlb	1	; select bank1
  7267     0F60  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  7268     0F61  0020               	movlb	0	; select bank0
  7269     0F62  00E6               	movwf	??___fldiv+2
  7270     0F63  307F               	movlw	127
  7271     0F64  0021               	movlb	1	; select bank1
  7272     0F65  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  7273     0F66  0020               	movlb	0	; select bank0
  7274     0F67  00E7               	movwf	??___fldiv+3
  7275     0F68  0867               	movf	??___fldiv+3,w
  7276     0F69  0466               	iorwf	??___fldiv+2,w
  7277     0F6A  0465               	iorwf	??___fldiv+1,w
  7278     0F6B  0464               	iorwf	??___fldiv,w
  7279     0F6C  1903               	skipnz
  7280     0F6D  2F6F               	goto	u3491
  7281     0F6E  2F70               	goto	u3490
  7282     0F6F                     u3491:
  7283     0F6F  2F74               	goto	l1535
  7284     0F70                     u3490:
  7285     0F70                     l4371:
  7286     0F70  0021               	movlb	1	; select bank1
  7287     0F71  01AC               	clrf	___fldiv@aexp^(0+128)
  7288     0F72  0AAC               	incf	___fldiv@aexp^(0+128),f
  7289     0F73  2F79               	goto	l4375
  7290     0F74                     l1535:
  7291     0F74  1C60               	btfss	___fldiv@b,0
  7292     0F75  2F77               	goto	u3501
  7293     0F76  2F78               	goto	u3500
  7294     0F77                     u3501:
  7295     0F77  2F79               	goto	l4375
  7296     0F78                     u3500:
  7297     0F78  2F70               	goto	l4371
  7298     0F79                     l4375:
  7299     0F79  0021               	movlb	1	; select bank1
  7300     0F7A  082C               	movf	___fldiv@aexp^(0+128),w
  7301     0F7B  1903               	btfsc	3,2
  7302     0F7C  2F7E               	goto	u3511
  7303     0F7D  2F7F               	goto	u3510
  7304     0F7E                     u3511:
  7305     0F7E  2FA9               	goto	l4385
  7306     0F7F                     u3510:
  7307     0F7F                     l4377:
  7308     0F7F  3001               	movlw	1
  7309     0F80  0020               	movlb	0	; select bank0
  7310     0F81  07E0               	addwf	___fldiv@b,f
  7311     0F82  3000               	movlw	0
  7312     0F83  3DE1               	addwfc	___fldiv@b+1,f
  7313     0F84  3000               	movlw	0
  7314     0F85  3DE2               	addwfc	___fldiv@b+2,f
  7315     0F86  3000               	movlw	0
  7316     0F87  3DE3               	addwfc	___fldiv@b+3,f
  7317     0F88                     l4379:
  7318     0F88  1C63               	btfss	___fldiv@b+3,0
  7319     0F89  2F8B               	goto	u3521
  7320     0F8A  2F8C               	goto	u3520
  7321     0F8B                     u3521:
  7322     0F8B  2FA9               	goto	l4385
  7323     0F8C                     u3520:
  7324     0F8C                     l4381:
  7325     0F8C  0860               	movf	___fldiv@b,w
  7326     0F8D  00E4               	movwf	??___fldiv
  7327     0F8E  0861               	movf	___fldiv@b+1,w
  7328     0F8F  00E5               	movwf	??___fldiv+1
  7329     0F90  0862               	movf	___fldiv@b+2,w
  7330     0F91  00E6               	movwf	??___fldiv+2
  7331     0F92  0863               	movf	___fldiv@b+3,w
  7332     0F93  00E7               	movwf	??___fldiv+3
  7333     0F94  3001               	movlw	1
  7334     0F95  00E8               	movwf	??___fldiv+4
  7335     0F96                     u3535:
  7336     0F96  37E7               	asrf	??___fldiv+3,f
  7337     0F97  0CE6               	rrf	??___fldiv+2,f
  7338     0F98  0CE5               	rrf	??___fldiv+1,f
  7339     0F99  0CE4               	rrf	??___fldiv,f
  7340     0F9A                     u3530:
  7341     0F9A  0BE8               	decfsz	??___fldiv+4,f
  7342     0F9B  2F96               	goto	u3535
  7343     0F9C  0867               	movf	??___fldiv+3,w
  7344     0F9D  00E3               	movwf	___fldiv@b+3
  7345     0F9E  0866               	movf	??___fldiv+2,w
  7346     0F9F  00E2               	movwf	___fldiv@b+2
  7347     0FA0  0865               	movf	??___fldiv+1,w
  7348     0FA1  00E1               	movwf	___fldiv@b+1
  7349     0FA2  0864               	movf	??___fldiv,w
  7350     0FA3  00E0               	movwf	___fldiv@b
  7351     0FA4                     l4383:
  7352     0FA4  3001               	movlw	1
  7353     0FA5  0021               	movlb	1	; select bank1
  7354     0FA6  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7355     0FA7  3000               	movlw	0
  7356     0FA8  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7357     0FA9                     l4385:
  7358     0FA9  0021               	movlb	1	; select bank1
  7359     0FAA  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7360     0FAB  3A80               	xorlw	128
  7361     0FAC  0020               	movlb	0	; select bank0
  7362     0FAD  00E4               	movwf	??___fldiv
  7363     0FAE  3080               	movlw	128
  7364     0FAF  0264               	subwf	??___fldiv,w
  7365     0FB0  1D03               	skipz
  7366     0FB1  2FB5               	goto	u3545
  7367     0FB2  30FF               	movlw	255
  7368     0FB3  0021               	movlb	1	; select bank1
  7369     0FB4  0225               	subwf	___fldiv@new_exp^(0+128),w
  7370     0FB5                     u3545:
  7371     0FB5  1C03               	skipc
  7372     0FB6  2FB8               	goto	u3541
  7373     0FB7  2FB9               	goto	u3540
  7374     0FB8                     u3541:
  7375     0FB8  2FC7               	goto	l1540
  7376     0FB9                     u3540:
  7377     0FB9                     l4387:
  7378     0FB9  30FF               	movlw	255
  7379     0FBA  0021               	movlb	1	; select bank1
  7380     0FBB  00A5               	movwf	___fldiv@new_exp^(0+128)
  7381     0FBC  3000               	movlw	0
  7382     0FBD  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  7383     0FBE  3000               	movlw	0
  7384     0FBF  0020               	movlb	0	; select bank0
  7385     0FC0  00E3               	movwf	___fldiv@b+3
  7386     0FC1  3000               	movlw	0
  7387     0FC2  00E2               	movwf	___fldiv@b+2
  7388     0FC3  3000               	movlw	0
  7389     0FC4  00E1               	movwf	___fldiv@b+1
  7390     0FC5  3000               	movlw	0
  7391     0FC6  00E0               	movwf	___fldiv@b
  7392     0FC7                     l1540:
  7393     0FC7  0021               	movlb	1	; select bank1
  7394     0FC8  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7395     0FC9  3A80               	xorlw	128
  7396     0FCA  0020               	movlb	0	; select bank0
  7397     0FCB  00E4               	movwf	??___fldiv
  7398     0FCC  3080               	movlw	128
  7399     0FCD  0264               	subwf	??___fldiv,w
  7400     0FCE  1D03               	skipz
  7401     0FCF  2FD3               	goto	u3555
  7402     0FD0  3001               	movlw	1
  7403     0FD1  0021               	movlb	1	; select bank1
  7404     0FD2  0225               	subwf	___fldiv@new_exp^(0+128),w
  7405     0FD3                     u3555:
  7406     0FD3  1803               	skipnc
  7407     0FD4  2FD6               	goto	u3551
  7408     0FD5  2FD7               	goto	u3550
  7409     0FD6                     u3551:
  7410     0FD6  2FE5               	goto	l1541
  7411     0FD7                     u3550:
  7412     0FD7                     l4389:
  7413     0FD7  0021               	movlb	1	; select bank1
  7414     0FD8  01A5               	clrf	___fldiv@new_exp^(0+128)
  7415     0FD9  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  7416     0FDA                     l4391:
  7417     0FDA  3000               	movlw	0
  7418     0FDB  0020               	movlb	0	; select bank0
  7419     0FDC  00E3               	movwf	___fldiv@b+3
  7420     0FDD  3000               	movlw	0
  7421     0FDE  00E2               	movwf	___fldiv@b+2
  7422     0FDF  3000               	movlw	0
  7423     0FE0  00E1               	movwf	___fldiv@b+1
  7424     0FE1  3000               	movlw	0
  7425     0FE2  00E0               	movwf	___fldiv@b
  7426     0FE3                     l4393:
  7427     0FE3  0021               	movlb	1	; select bank1
  7428     0FE4  01A4               	clrf	___fldiv@sign^(0+128)
  7429     0FE5                     l1541:
  7430     0FE5  0021               	movlb	1	; select bank1
  7431     0FE6  0825               	movf	___fldiv@new_exp^(0+128),w
  7432     0FE7  00AB               	movwf	___fldiv@bexp^(0+128)
  7433     0FE8                     l4395:
  7434     0FE8  1C2B               	btfss	___fldiv@bexp^(0+128),0
  7435     0FE9  2FEB               	goto	u3561
  7436     0FEA  2FEC               	goto	u3560
  7437     0FEB                     u3561:
  7438     0FEB  2FEF               	goto	l4399
  7439     0FEC                     u3560:
  7440     0FEC                     l4397:
  7441     0FEC  0020               	movlb	0	; select bank0
  7442     0FED  17E2               	bsf	___fldiv@b+2,7
  7443     0FEE  2FF4               	goto	l1543
  7444     0FEF                     l4399:
  7445     0FEF  307F               	movlw	127
  7446     0FF0  0020               	movlb	0	; select bank0
  7447     0FF1  00E4               	movwf	??___fldiv
  7448     0FF2  0864               	movf	??___fldiv,w
  7449     0FF3  05E2               	andwf	___fldiv@b+2,f
  7450     0FF4                     l1543:
  7451     0FF4  0021               	movlb	1	; select bank1
  7452     0FF5  362B               	lsrf	___fldiv@bexp^(0+128),w
  7453     0FF6  0020               	movlb	0	; select bank0
  7454     0FF7  00E3               	movwf	___fldiv@b+3
  7455     0FF8  0021               	movlb	1	; select bank1
  7456     0FF9  0824               	movf	___fldiv@sign^(0+128),w
  7457     0FFA  0020               	movlb	0	; select bank0
  7458     0FFB  00E4               	movwf	??___fldiv
  7459     0FFC  0864               	movf	??___fldiv,w
  7460     0FFD  04E3               	iorwf	___fldiv@b+3,f
  7461     0FFE  2E79               	goto	l4309
  7462     0FFF                     l1521:
  7463     0FFF  0008               	return
  7464     1000                     __end_of___fldiv:
  7465                           
  7466                           	psect	text22
  7467     0528                     __ptext22:	
  7468 ;; *************** function ___fladd *****************
  7469 ;; Defined at:
  7470 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcadd.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  b               4   40[BANK0 ] unsigned char 
  7473 ;;  a               4   44[BANK0 ] unsigned char 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  grs             1   59[BANK0 ] unsigned char 
  7476 ;;  bexp            1   58[BANK0 ] unsigned char 
  7477 ;;  aexp            1   57[BANK0 ] unsigned char 
  7478 ;;  signs           1   56[BANK0 ] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  4   40[BANK0 ] unsigned char 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7488 ;;      Params:         0       8       0       0       0       0       0       0
  7489 ;;      Locals:         0       4       0       0       0       0       0       0
  7490 ;;      Temps:          0       8       0       0       0       0       0       0
  7491 ;;      Totals:         0      20       0       0       0       0       0       0
  7492 ;;Total ram usage:       20 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 7
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_ReadData
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502     0528                     ___fladd:	
  7503                           ;psect for function ___fladd
  7504                           
  7505     0528                     l4071:	
  7506                           ;incstack = 0
  7507                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7508                           
  7509     0528  0020               	movlb	0	; select bank0
  7510     0529  084B               	movf	___fladd@b+3,w
  7511     052A  3980               	andlw	128
  7512     052B  00D8               	movwf	___fladd@signs
  7513     052C                     l4073:
  7514     052C  354B               	lslf	___fladd@b+3,w
  7515     052D  00DA               	movwf	___fladd@bexp
  7516     052E                     l4075:
  7517     052E  1FCA               	btfss	___fladd@b+2,7
  7518     052F  2D31               	goto	u2851
  7519     0530  2D32               	goto	u2850
  7520     0531                     u2851:
  7521     0531  2D33               	goto	l4079
  7522     0532                     u2850:
  7523     0532                     l4077:
  7524     0532  145A               	bsf	___fladd@bexp,0
  7525     0533                     l4079:
  7526     0533  085A               	movf	___fladd@bexp,w
  7527     0534  1903               	btfsc	3,2
  7528     0535  2D37               	goto	u2861
  7529     0536  2D38               	goto	u2860
  7530     0537                     u2861:
  7531     0537  2D48               	goto	l4089
  7532     0538                     u2860:
  7533     0538                     l4081:
  7534     0538  0A5A               	incf	___fladd@bexp,w
  7535     0539  1D03               	btfss	3,2
  7536     053A  2D3C               	goto	u2871
  7537     053B  2D3D               	goto	u2870
  7538     053C                     u2871:
  7539     053C  2D45               	goto	l4085
  7540     053D                     u2870:
  7541     053D                     l4083:
  7542     053D  3000               	movlw	0
  7543     053E  00CB               	movwf	___fladd@b+3
  7544     053F  3000               	movlw	0
  7545     0540  00CA               	movwf	___fladd@b+2
  7546     0541  3000               	movlw	0
  7547     0542  00C9               	movwf	___fladd@b+1
  7548     0543  3000               	movlw	0
  7549     0544  00C8               	movwf	___fladd@b
  7550     0545                     l4085:
  7551     0545  17CA               	bsf	___fladd@b+2,7
  7552     0546                     l4087:
  7553     0546  01CB               	clrf	___fladd@b+3
  7554     0547  2D50               	goto	l4091
  7555     0548                     l4089:
  7556     0548  3000               	movlw	0
  7557     0549  00CB               	movwf	___fladd@b+3
  7558     054A  3000               	movlw	0
  7559     054B  00CA               	movwf	___fladd@b+2
  7560     054C  3000               	movlw	0
  7561     054D  00C9               	movwf	___fladd@b+1
  7562     054E  3000               	movlw	0
  7563     054F  00C8               	movwf	___fladd@b
  7564     0550                     l4091:
  7565     0550  084F               	movf	___fladd@a+3,w
  7566     0551  3980               	andlw	128
  7567     0552  00D9               	movwf	___fladd@aexp
  7568     0553                     l4093:
  7569     0553  0859               	movf	___fladd@aexp,w
  7570     0554  0658               	xorwf	___fladd@signs,w
  7571     0555  1903               	skipnz
  7572     0556  2D58               	goto	u2881
  7573     0557  2D59               	goto	u2880
  7574     0558                     u2881:
  7575     0558  2D5A               	goto	l4097
  7576     0559                     u2880:
  7577     0559                     l4095:
  7578     0559  1758               	bsf	___fladd@signs,6
  7579     055A                     l4097:
  7580     055A  354F               	lslf	___fladd@a+3,w
  7581     055B  00D9               	movwf	___fladd@aexp
  7582     055C                     l4099:
  7583     055C  1FCE               	btfss	___fladd@a+2,7
  7584     055D  2D5F               	goto	u2891
  7585     055E  2D60               	goto	u2890
  7586     055F                     u2891:
  7587     055F  2D61               	goto	l4103
  7588     0560                     u2890:
  7589     0560                     l4101:
  7590     0560  1459               	bsf	___fladd@aexp,0
  7591     0561                     l4103:
  7592     0561  0859               	movf	___fladd@aexp,w
  7593     0562  1903               	btfsc	3,2
  7594     0563  2D65               	goto	u2901
  7595     0564  2D66               	goto	u2900
  7596     0565                     u2901:
  7597     0565  2D76               	goto	l4113
  7598     0566                     u2900:
  7599     0566                     l4105:
  7600     0566  0A59               	incf	___fladd@aexp,w
  7601     0567  1D03               	btfss	3,2
  7602     0568  2D6A               	goto	u2911
  7603     0569  2D6B               	goto	u2910
  7604     056A                     u2911:
  7605     056A  2D73               	goto	l4109
  7606     056B                     u2910:
  7607     056B                     l4107:
  7608     056B  3000               	movlw	0
  7609     056C  00CF               	movwf	___fladd@a+3
  7610     056D  3000               	movlw	0
  7611     056E  00CE               	movwf	___fladd@a+2
  7612     056F  3000               	movlw	0
  7613     0570  00CD               	movwf	___fladd@a+1
  7614     0571  3000               	movlw	0
  7615     0572  00CC               	movwf	___fladd@a
  7616     0573                     l4109:
  7617     0573  17CE               	bsf	___fladd@a+2,7
  7618     0574                     l4111:
  7619     0574  01CF               	clrf	___fladd@a+3
  7620     0575  2D7E               	goto	l1463
  7621     0576                     l4113:
  7622     0576  3000               	movlw	0
  7623     0577  00CF               	movwf	___fladd@a+3
  7624     0578  3000               	movlw	0
  7625     0579  00CE               	movwf	___fladd@a+2
  7626     057A  3000               	movlw	0
  7627     057B  00CD               	movwf	___fladd@a+1
  7628     057C  3000               	movlw	0
  7629     057D  00CC               	movwf	___fladd@a
  7630     057E                     l1463:
  7631     057E  085A               	movf	___fladd@bexp,w
  7632     057F  0259               	subwf	___fladd@aexp,w
  7633     0580  1803               	skipnc
  7634     0581  2D83               	goto	u2921
  7635     0582  2D84               	goto	u2920
  7636     0583                     u2921:
  7637     0583  2DAA               	goto	l4149
  7638     0584                     u2920:
  7639     0584                     l4115:
  7640     0584  1F58               	btfss	___fladd@signs,6
  7641     0585  2D87               	goto	u2931
  7642     0586  2D88               	goto	u2930
  7643     0587                     u2931:
  7644     0587  2D8C               	goto	l4119
  7645     0588                     u2930:
  7646     0588                     l4117:
  7647     0588  3080               	movlw	128
  7648     0589  00D0               	movwf	??___fladd
  7649     058A  0850               	movf	??___fladd,w
  7650     058B  06D8               	xorwf	___fladd@signs,f
  7651     058C                     l4119:
  7652     058C  085A               	movf	___fladd@bexp,w
  7653     058D  00DB               	movwf	___fladd@grs
  7654     058E                     l4121:
  7655     058E  0859               	movf	___fladd@aexp,w
  7656     058F  00DA               	movwf	___fladd@bexp
  7657     0590                     l4123:
  7658     0590  085B               	movf	___fladd@grs,w
  7659     0591  00D9               	movwf	___fladd@aexp
  7660     0592                     l4125:
  7661     0592  0848               	movf	___fladd@b,w
  7662     0593  00DB               	movwf	___fladd@grs
  7663     0594                     l4127:
  7664     0594  084C               	movf	___fladd@a,w
  7665     0595  00C8               	movwf	___fladd@b
  7666     0596                     l4129:
  7667     0596  085B               	movf	___fladd@grs,w
  7668     0597  00CC               	movwf	___fladd@a
  7669     0598                     l4131:
  7670     0598  0849               	movf	___fladd@b+1,w
  7671     0599  00DB               	movwf	___fladd@grs
  7672     059A                     l4133:
  7673     059A  084D               	movf	___fladd@a+1,w
  7674     059B  00C9               	movwf	___fladd@b+1
  7675     059C                     l4135:
  7676     059C  085B               	movf	___fladd@grs,w
  7677     059D  00CD               	movwf	___fladd@a+1
  7678     059E                     l4137:
  7679     059E  084A               	movf	___fladd@b+2,w
  7680     059F  00DB               	movwf	___fladd@grs
  7681     05A0                     l4139:
  7682     05A0  084E               	movf	___fladd@a+2,w
  7683     05A1  00CA               	movwf	___fladd@b+2
  7684     05A2                     l4141:
  7685     05A2  085B               	movf	___fladd@grs,w
  7686     05A3  00CE               	movwf	___fladd@a+2
  7687     05A4                     l4143:
  7688     05A4  084B               	movf	___fladd@b+3,w
  7689     05A5  00DB               	movwf	___fladd@grs
  7690     05A6                     l4145:
  7691     05A6  084F               	movf	___fladd@a+3,w
  7692     05A7  00CB               	movwf	___fladd@b+3
  7693     05A8                     l4147:
  7694     05A8  085B               	movf	___fladd@grs,w
  7695     05A9  00CF               	movwf	___fladd@a+3
  7696     05AA                     l4149:
  7697     05AA  01DB               	clrf	___fladd@grs
  7698     05AB                     l4151:
  7699     05AB  0859               	movf	___fladd@aexp,w
  7700     05AC  00D0               	movwf	??___fladd
  7701     05AD  01D1               	clrf	??___fladd+1
  7702     05AE  0851               	movf	??___fladd+1,w
  7703     05AF  00D3               	movwf	??___fladd+3
  7704     05B0  085A               	movf	___fladd@bexp,w
  7705     05B1  0250               	subwf	??___fladd,w
  7706     05B2  00D2               	movwf	??___fladd+2
  7707     05B3  1C03               	skipc
  7708     05B4  03D3               	decf	??___fladd+3,f
  7709     05B5  0853               	movf	??___fladd+3,w
  7710     05B6  3A80               	xorlw	128
  7711     05B7  00D4               	movwf	??___fladd+4
  7712     05B8  3080               	movlw	128
  7713     05B9  0254               	subwf	??___fladd+4,w
  7714     05BA  1D03               	skipz
  7715     05BB  2DBE               	goto	u2945
  7716     05BC  301A               	movlw	26
  7717     05BD  0252               	subwf	??___fladd+2,w
  7718     05BE                     u2945:
  7719     05BE  1C03               	skipc
  7720     05BF  2DC1               	goto	u2941
  7721     05C0  2DC2               	goto	u2940
  7722     05C1                     u2941:
  7723     05C1  2DF4               	goto	l4167
  7724     05C2                     u2940:
  7725     05C2                     l4153:
  7726     05C2  0020               	movlb	0	; select bank0
  7727     05C3  084B               	movf	___fladd@b+3,w
  7728     05C4  044A               	iorwf	___fladd@b+2,w
  7729     05C5  0449               	iorwf	___fladd@b+1,w
  7730     05C6  0448               	iorwf	___fladd@b,w
  7731     05C7  1D03               	skipz
  7732     05C8  2DCA               	goto	u2951
  7733     05C9  2DCC               	goto	u2950
  7734     05CA                     u2951:
  7735     05CA  3001               	movlw	1
  7736     05CB  2DCD               	goto	u2960
  7737     05CC                     u2950:
  7738     05CC  3000               	movlw	0
  7739     05CD                     u2960:
  7740     05CD  00DB               	movwf	___fladd@grs
  7741     05CE  3000               	movlw	0
  7742     05CF  00CB               	movwf	___fladd@b+3
  7743     05D0  3000               	movlw	0
  7744     05D1  00CA               	movwf	___fladd@b+2
  7745     05D2  3000               	movlw	0
  7746     05D3  00C9               	movwf	___fladd@b+1
  7747     05D4  3000               	movlw	0
  7748     05D5  00C8               	movwf	___fladd@b
  7749     05D6  0859               	movf	___fladd@aexp,w
  7750     05D7  00DA               	movwf	___fladd@bexp
  7751     05D8  2DFB               	goto	l1467
  7752     05D9                     l1469:
  7753     05D9  1C5B               	btfss	___fladd@grs,0
  7754     05DA  2DDC               	goto	u2971
  7755     05DB  2DDD               	goto	u2970
  7756     05DC                     u2971:
  7757     05DC  2DE1               	goto	l4157
  7758     05DD                     u2970:
  7759     05DD                     l4155:
  7760     05DD  365B               	lsrf	___fladd@grs,w
  7761     05DE  3801               	iorlw	1
  7762     05DF  00DB               	movwf	___fladd@grs
  7763     05E0  2DE3               	goto	l4159
  7764     05E1                     l4157:
  7765     05E1  1003               	clrc
  7766     05E2  0CDB               	rrf	___fladd@grs,f
  7767     05E3                     l4159:
  7768     05E3  1C48               	btfss	___fladd@b,0
  7769     05E4  2DE6               	goto	u2981
  7770     05E5  2DE7               	goto	u2980
  7771     05E6                     u2981:
  7772     05E6  2DE8               	goto	l4163
  7773     05E7                     u2980:
  7774     05E7                     l4161:
  7775     05E7  17DB               	bsf	___fladd@grs,7
  7776     05E8                     l4163:
  7777     05E8  3001               	movlw	1
  7778     05E9  00D0               	movwf	??___fladd
  7779     05EA                     u2995:
  7780     05EA  37CB               	asrf	___fladd@b+3,f
  7781     05EB  0CCA               	rrf	___fladd@b+2,f
  7782     05EC  0CC9               	rrf	___fladd@b+1,f
  7783     05ED  0CC8               	rrf	___fladd@b,f
  7784     05EE  0BD0               	decfsz	??___fladd& (0+127),f
  7785     05EF  2DEA               	goto	u2995
  7786     05F0                     l4165:
  7787     05F0  3001               	movlw	1
  7788     05F1  00D0               	movwf	??___fladd
  7789     05F2  0850               	movf	??___fladd,w
  7790     05F3  07DA               	addwf	___fladd@bexp,f
  7791     05F4                     l4167:
  7792     05F4  0020               	movlb	0	; select bank0
  7793     05F5  0859               	movf	___fladd@aexp,w
  7794     05F6  025A               	subwf	___fladd@bexp,w
  7795     05F7  1C03               	skipc
  7796     05F8  2DFA               	goto	u3001
  7797     05F9  2DFB               	goto	u3000
  7798     05FA                     u3001:
  7799     05FA  2DD9               	goto	l1469
  7800     05FB                     u3000:
  7801     05FB                     l1467:
  7802     05FB  1B58               	btfsc	___fladd@signs,6
  7803     05FC  2DFE               	goto	u3011
  7804     05FD  2DFF               	goto	u3010
  7805     05FE                     u3011:
  7806     05FE  2E35               	goto	l4193
  7807     05FF                     u3010:
  7808     05FF                     l4169:
  7809     05FF  085A               	movf	___fladd@bexp,w
  7810     0600  1D03               	btfss	3,2
  7811     0601  2E03               	goto	u3021
  7812     0602  2E04               	goto	u3020
  7813     0603                     u3021:
  7814     0603  2E0D               	goto	l4175
  7815     0604                     u3020:
  7816     0604                     l4171:
  7817     0604  3000               	movlw	0
  7818     0605  00CB               	movwf	?___fladd+3
  7819     0606  3000               	movlw	0
  7820     0607  00CA               	movwf	?___fladd+2
  7821     0608  3000               	movlw	0
  7822     0609  00C9               	movwf	?___fladd+1
  7823     060A  3000               	movlw	0
  7824     060B  00C8               	movwf	?___fladd
  7825     060C  2F2F               	goto	l1476
  7826     060D                     l4175:
  7827     060D  084C               	movf	___fladd@a,w
  7828     060E  07C8               	addwf	___fladd@b,f
  7829     060F  084D               	movf	___fladd@a+1,w
  7830     0610  3DC9               	addwfc	___fladd@b+1,f
  7831     0611  084E               	movf	___fladd@a+2,w
  7832     0612  3DCA               	addwfc	___fladd@b+2,f
  7833     0613  084F               	movf	___fladd@a+3,w
  7834     0614  3DCB               	addwfc	___fladd@b+3,f
  7835     0615                     l4177:
  7836     0615  1C4B               	btfss	___fladd@b+3,0
  7837     0616  2E18               	goto	u3031
  7838     0617  2E19               	goto	u3030
  7839     0618                     u3031:
  7840     0618  2EC1               	goto	l4227
  7841     0619                     u3030:
  7842     0619                     l4179:
  7843     0619  1C5B               	btfss	___fladd@grs,0
  7844     061A  2E1C               	goto	u3041
  7845     061B  2E1D               	goto	u3040
  7846     061C                     u3041:
  7847     061C  2E21               	goto	l4183
  7848     061D                     u3040:
  7849     061D                     l4181:
  7850     061D  365B               	lsrf	___fladd@grs,w
  7851     061E  3801               	iorlw	1
  7852     061F  00DB               	movwf	___fladd@grs
  7853     0620  2E23               	goto	l4185
  7854     0621                     l4183:
  7855     0621  1003               	clrc
  7856     0622  0CDB               	rrf	___fladd@grs,f
  7857     0623                     l4185:
  7858     0623  1C48               	btfss	___fladd@b,0
  7859     0624  2E26               	goto	u3051
  7860     0625  2E27               	goto	u3050
  7861     0626                     u3051:
  7862     0626  2E28               	goto	l4189
  7863     0627                     u3050:
  7864     0627                     l4187:
  7865     0627  17DB               	bsf	___fladd@grs,7
  7866     0628                     l4189:
  7867     0628  3001               	movlw	1
  7868     0629  00D0               	movwf	??___fladd
  7869     062A                     u3065:
  7870     062A  37CB               	asrf	___fladd@b+3,f
  7871     062B  0CCA               	rrf	___fladd@b+2,f
  7872     062C  0CC9               	rrf	___fladd@b+1,f
  7873     062D  0CC8               	rrf	___fladd@b,f
  7874     062E  0BD0               	decfsz	??___fladd& (0+127),f
  7875     062F  2E2A               	goto	u3065
  7876     0630                     l4191:
  7877     0630  3001               	movlw	1
  7878     0631  00D0               	movwf	??___fladd
  7879     0632  0850               	movf	??___fladd,w
  7880     0633  07DA               	addwf	___fladd@bexp,f
  7881     0634  2EC1               	goto	l4227
  7882     0635                     l4193:
  7883     0635  084B               	movf	___fladd@b+3,w
  7884     0636  3A80               	xorlw	128
  7885     0637  00D0               	movwf	??___fladd
  7886     0638  084F               	movf	___fladd@a+3,w
  7887     0639  3A80               	xorlw	128
  7888     063A  0250               	subwf	??___fladd,w
  7889     063B  1D03               	skipz
  7890     063C  2E47               	goto	u3073
  7891     063D  084E               	movf	___fladd@a+2,w
  7892     063E  024A               	subwf	___fladd@b+2,w
  7893     063F  1D03               	skipz
  7894     0640  2E47               	goto	u3073
  7895     0641  084D               	movf	___fladd@a+1,w
  7896     0642  0249               	subwf	___fladd@b+1,w
  7897     0643  1D03               	skipz
  7898     0644  2E47               	goto	u3073
  7899     0645  084C               	movf	___fladd@a,w
  7900     0646  0248               	subwf	___fladd@b,w
  7901     0647                     u3073:
  7902     0647  1803               	skipnc
  7903     0648  2E4A               	goto	u3071
  7904     0649  2E4B               	goto	u3070
  7905     064A                     u3071:
  7906     064A  2E83               	goto	l4203
  7907     064B                     u3070:
  7908     064B                     l4195:
  7909     064B  30FF               	movlw	255
  7910     064C  00D0               	movwf	??___fladd
  7911     064D  30FF               	movlw	255
  7912     064E  00D1               	movwf	??___fladd+1
  7913     064F  30FF               	movlw	255
  7914     0650  00D2               	movwf	??___fladd+2
  7915     0651  30FF               	movlw	255
  7916     0652  00D3               	movwf	??___fladd+3
  7917     0653  0848               	movf	___fladd@b,w
  7918     0654  024C               	subwf	___fladd@a,w
  7919     0655  00D4               	movwf	??___fladd+4
  7920     0656  0849               	movf	___fladd@b+1,w
  7921     0657  3B4D               	subwfb	___fladd@a+1,w
  7922     0658  00D5               	movwf	??___fladd+5
  7923     0659  084A               	movf	___fladd@b+2,w
  7924     065A  3B4E               	subwfb	___fladd@a+2,w
  7925     065B  00D6               	movwf	??___fladd+6
  7926     065C  084B               	movf	___fladd@b+3,w
  7927     065D  3B4F               	subwfb	___fladd@a+3,w
  7928     065E  00D7               	movwf	??___fladd+7
  7929     065F  0854               	movf	??___fladd+4,w
  7930     0660  07D0               	addwf	??___fladd,f
  7931     0661  0855               	movf	??___fladd+5,w
  7932     0662  3DD1               	addwfc	??___fladd+1,f
  7933     0663  0856               	movf	??___fladd+6,w
  7934     0664  3DD2               	addwfc	??___fladd+2,f
  7935     0665  0857               	movf	??___fladd+7,w
  7936     0666  3DD3               	addwfc	??___fladd+3,f
  7937     0667  0853               	movf	??___fladd+3,w
  7938     0668  00CB               	movwf	___fladd@b+3
  7939     0669  0852               	movf	??___fladd+2,w
  7940     066A  00CA               	movwf	___fladd@b+2
  7941     066B  0851               	movf	??___fladd+1,w
  7942     066C  00C9               	movwf	___fladd@b+1
  7943     066D  0850               	movf	??___fladd,w
  7944     066E  00C8               	movwf	___fladd@b
  7945     066F                     l4197:
  7946     066F  3080               	movlw	128
  7947     0670  00D0               	movwf	??___fladd
  7948     0671  0850               	movf	??___fladd,w
  7949     0672  06D8               	xorwf	___fladd@signs,f
  7950     0673  09DB               	comf	___fladd@grs,f
  7951     0674  0ADB               	incf	___fladd@grs,f
  7952     0675                     l4199:
  7953     0675  085B               	movf	___fladd@grs,w
  7954     0676  1D03               	btfss	3,2
  7955     0677  2E79               	goto	u3081
  7956     0678  2E7A               	goto	u3080
  7957     0679                     u3081:
  7958     0679  2E8B               	goto	l1484
  7959     067A                     u3080:
  7960     067A                     l4201:
  7961     067A  3001               	movlw	1
  7962     067B  07C8               	addwf	___fladd@b,f
  7963     067C  3000               	movlw	0
  7964     067D  3DC9               	addwfc	___fladd@b+1,f
  7965     067E  3000               	movlw	0
  7966     067F  3DCA               	addwfc	___fladd@b+2,f
  7967     0680  3000               	movlw	0
  7968     0681  3DCB               	addwfc	___fladd@b+3,f
  7969     0682  2E8B               	goto	l1484
  7970     0683                     l4203:
  7971     0683  084C               	movf	___fladd@a,w
  7972     0684  02C8               	subwf	___fladd@b,f
  7973     0685  084D               	movf	___fladd@a+1,w
  7974     0686  3BC9               	subwfb	___fladd@b+1,f
  7975     0687  084E               	movf	___fladd@a+2,w
  7976     0688  3BCA               	subwfb	___fladd@b+2,f
  7977     0689  084F               	movf	___fladd@a+3,w
  7978     068A  3BCB               	subwfb	___fladd@b+3,f
  7979     068B                     l1484:
  7980     068B  084B               	movf	___fladd@b+3,w
  7981     068C  044A               	iorwf	___fladd@b+2,w
  7982     068D  0449               	iorwf	___fladd@b+1,w
  7983     068E  0448               	iorwf	___fladd@b,w
  7984     068F  1D03               	skipz
  7985     0690  2E92               	goto	u3091
  7986     0691  2E93               	goto	u3090
  7987     0692                     u3091:
  7988     0692  2EBD               	goto	l4225
  7989     0693                     u3090:
  7990     0693                     l4205:
  7991     0693  085B               	movf	___fladd@grs,w
  7992     0694  1D03               	btfss	3,2
  7993     0695  2E97               	goto	u3101
  7994     0696  2E98               	goto	u3100
  7995     0697                     u3101:
  7996     0697  2EBD               	goto	l4225
  7997     0698                     u3100:
  7998     0698                     l4207:
  7999     0698  3000               	movlw	0
  8000     0699  00CB               	movwf	?___fladd+3
  8001     069A  3000               	movlw	0
  8002     069B  00CA               	movwf	?___fladd+2
  8003     069C  3000               	movlw	0
  8004     069D  00C9               	movwf	?___fladd+1
  8005     069E  3000               	movlw	0
  8006     069F  00C8               	movwf	?___fladd
  8007     06A0  2F2F               	goto	l1476
  8008     06A1                     l4211:
  8009     06A1  3001               	movlw	1
  8010     06A2                     u3115:
  8011     06A2  35C8               	lslf	___fladd@b,f
  8012     06A3  0DC9               	rlf	___fladd@b+1,f
  8013     06A4  0DCA               	rlf	___fladd@b+2,f
  8014     06A5  0DCB               	rlf	___fladd@b+3,f
  8015     06A6  0B89               	decfsz	9,f
  8016     06A7  2EA2               	goto	u3115
  8017     06A8                     l4213:
  8018     06A8  1FDB               	btfss	___fladd@grs,7
  8019     06A9  2EAB               	goto	u3121
  8020     06AA  2EAC               	goto	u3120
  8021     06AB                     u3121:
  8022     06AB  2EAD               	goto	l1488
  8023     06AC                     u3120:
  8024     06AC                     l4215:
  8025     06AC  1448               	bsf	___fladd@b,0
  8026     06AD                     l1488:
  8027     06AD  1C5B               	btfss	___fladd@grs,0
  8028     06AE  2EB0               	goto	u3131
  8029     06AF  2EB1               	goto	u3130
  8030     06B0                     u3131:
  8031     06B0  2EB4               	goto	l4219
  8032     06B1                     u3130:
  8033     06B1                     l4217:
  8034     06B1  1403               	setc
  8035     06B2  0DDB               	rlf	___fladd@grs,f
  8036     06B3  2EB6               	goto	l4221
  8037     06B4                     l4219:
  8038     06B4  1003               	clrc
  8039     06B5  0DDB               	rlf	___fladd@grs,f
  8040     06B6                     l4221:
  8041     06B6  085A               	movf	___fladd@bexp,w
  8042     06B7  1903               	btfsc	3,2
  8043     06B8  2EBA               	goto	u3141
  8044     06B9  2EBB               	goto	u3140
  8045     06BA                     u3141:
  8046     06BA  2EBD               	goto	l4225
  8047     06BB                     u3140:
  8048     06BB                     l4223:
  8049     06BB  3001               	movlw	1
  8050     06BC  02DA               	subwf	___fladd@bexp,f
  8051     06BD                     l4225:
  8052     06BD  1FCA               	btfss	___fladd@b+2,7
  8053     06BE  2EC0               	goto	u3151
  8054     06BF  2EC1               	goto	u3150
  8055     06C0                     u3151:
  8056     06C0  2EA1               	goto	l4211
  8057     06C1                     u3150:
  8058     06C1                     l4227:
  8059     06C1  01D9               	clrf	___fladd@aexp
  8060     06C2                     l4229:
  8061     06C2  1FDB               	btfss	___fladd@grs,7
  8062     06C3  2EC5               	goto	u3161
  8063     06C4  2EC6               	goto	u3160
  8064     06C5                     u3161:
  8065     06C5  2ED4               	goto	l4237
  8066     06C6                     u3160:
  8067     06C6                     l4231:
  8068     06C6  085B               	movf	___fladd@grs,w
  8069     06C7  397F               	andlw	127
  8070     06C8  1903               	btfsc	3,2
  8071     06C9  2ECB               	goto	u3171
  8072     06CA  2ECC               	goto	u3170
  8073     06CB                     u3171:
  8074     06CB  2ECF               	goto	l1494
  8075     06CC                     u3170:
  8076     06CC                     l4233:
  8077     06CC  01D9               	clrf	___fladd@aexp
  8078     06CD  0AD9               	incf	___fladd@aexp,f
  8079     06CE  2ED4               	goto	l4237
  8080     06CF                     l1494:
  8081     06CF  1C48               	btfss	___fladd@b,0
  8082     06D0  2ED2               	goto	u3181
  8083     06D1  2ED3               	goto	u3180
  8084     06D2                     u3181:
  8085     06D2  2ED4               	goto	l4237
  8086     06D3                     u3180:
  8087     06D3  2ECC               	goto	l4233
  8088     06D4                     l4237:
  8089     06D4  0859               	movf	___fladd@aexp,w
  8090     06D5  1903               	btfsc	3,2
  8091     06D6  2ED8               	goto	u3191
  8092     06D7  2ED9               	goto	u3190
  8093     06D8                     u3191:
  8094     06D8  2F06               	goto	l1497
  8095     06D9                     u3190:
  8096     06D9                     l4239:
  8097     06D9  3001               	movlw	1
  8098     06DA  07C8               	addwf	___fladd@b,f
  8099     06DB  3000               	movlw	0
  8100     06DC  3DC9               	addwfc	___fladd@b+1,f
  8101     06DD  3000               	movlw	0
  8102     06DE  3DCA               	addwfc	___fladd@b+2,f
  8103     06DF  3000               	movlw	0
  8104     06E0  3DCB               	addwfc	___fladd@b+3,f
  8105     06E1                     l4241:
  8106     06E1  1C4B               	btfss	___fladd@b+3,0
  8107     06E2  2EE4               	goto	u3201
  8108     06E3  2EE5               	goto	u3200
  8109     06E4                     u3201:
  8110     06E4  2F06               	goto	l1497
  8111     06E5                     u3200:
  8112     06E5                     l4243:
  8113     06E5  0848               	movf	___fladd@b,w
  8114     06E6  00D0               	movwf	??___fladd
  8115     06E7  0849               	movf	___fladd@b+1,w
  8116     06E8  00D1               	movwf	??___fladd+1
  8117     06E9  084A               	movf	___fladd@b+2,w
  8118     06EA  00D2               	movwf	??___fladd+2
  8119     06EB  084B               	movf	___fladd@b+3,w
  8120     06EC  00D3               	movwf	??___fladd+3
  8121     06ED  3001               	movlw	1
  8122     06EE  00D4               	movwf	??___fladd+4
  8123     06EF                     u3215:
  8124     06EF  37D3               	asrf	??___fladd+3,f
  8125     06F0  0CD2               	rrf	??___fladd+2,f
  8126     06F1  0CD1               	rrf	??___fladd+1,f
  8127     06F2  0CD0               	rrf	??___fladd,f
  8128     06F3                     u3210:
  8129     06F3  0BD4               	decfsz	??___fladd+4,f
  8130     06F4  2EEF               	goto	u3215
  8131     06F5  0853               	movf	??___fladd+3,w
  8132     06F6  00CB               	movwf	___fladd@b+3
  8133     06F7  0852               	movf	??___fladd+2,w
  8134     06F8  00CA               	movwf	___fladd@b+2
  8135     06F9  0851               	movf	??___fladd+1,w
  8136     06FA  00C9               	movwf	___fladd@b+1
  8137     06FB  0850               	movf	??___fladd,w
  8138     06FC  00C8               	movwf	___fladd@b
  8139     06FD  0A5A               	incf	___fladd@bexp,w
  8140     06FE  1903               	btfsc	3,2
  8141     06FF  2F01               	goto	u3221
  8142     0700  2F02               	goto	u3220
  8143     0701                     u3221:
  8144     0701  2F06               	goto	l1497
  8145     0702                     u3220:
  8146     0702                     l4245:
  8147     0702  3001               	movlw	1
  8148     0703  00D0               	movwf	??___fladd
  8149     0704  0850               	movf	??___fladd,w
  8150     0705  07DA               	addwf	___fladd@bexp,f
  8151     0706                     l1497:
  8152     0706  0A5A               	incf	___fladd@bexp,w
  8153     0707  1903               	btfsc	3,2
  8154     0708  2F0A               	goto	u3231
  8155     0709  2F0B               	goto	u3230
  8156     070A                     u3231:
  8157     070A  2F10               	goto	l4249
  8158     070B                     u3230:
  8159     070B                     l4247:
  8160     070B  085A               	movf	___fladd@bexp,w
  8161     070C  1D03               	btfss	3,2
  8162     070D  2F0F               	goto	u3241
  8163     070E  2F10               	goto	u3240
  8164     070F                     u3241:
  8165     070F  2F1E               	goto	l4255
  8166     0710                     u3240:
  8167     0710                     l4249:
  8168     0710  3000               	movlw	0
  8169     0711  00CB               	movwf	___fladd@b+3
  8170     0712  3000               	movlw	0
  8171     0713  00CA               	movwf	___fladd@b+2
  8172     0714  3000               	movlw	0
  8173     0715  00C9               	movwf	___fladd@b+1
  8174     0716  3000               	movlw	0
  8175     0717  00C8               	movwf	___fladd@b
  8176     0718                     l4251:
  8177     0718  085A               	movf	___fladd@bexp,w
  8178     0719  1D03               	btfss	3,2
  8179     071A  2F1C               	goto	u3251
  8180     071B  2F1D               	goto	u3250
  8181     071C                     u3251:
  8182     071C  2F1E               	goto	l4255
  8183     071D                     u3250:
  8184     071D                     l4253:
  8185     071D  01D8               	clrf	___fladd@signs
  8186     071E                     l4255:
  8187     071E  1C5A               	btfss	___fladd@bexp,0
  8188     071F  2F21               	goto	u3261
  8189     0720  2F22               	goto	u3260
  8190     0721                     u3261:
  8191     0721  2F24               	goto	l4259
  8192     0722                     u3260:
  8193     0722                     l4257:
  8194     0722  17CA               	bsf	___fladd@b+2,7
  8195     0723  2F28               	goto	l1505
  8196     0724                     l4259:
  8197     0724  307F               	movlw	127
  8198     0725  00D0               	movwf	??___fladd
  8199     0726  0850               	movf	??___fladd,w
  8200     0727  05CA               	andwf	___fladd@b+2,f
  8201     0728                     l1505:
  8202     0728  365A               	lsrf	___fladd@bexp,w
  8203     0729  00CB               	movwf	___fladd@b+3
  8204     072A                     l4261:
  8205     072A  1FD8               	btfss	___fladd@signs,7
  8206     072B  2F2D               	goto	u3271
  8207     072C  2F2E               	goto	u3270
  8208     072D                     u3271:
  8209     072D  2F2F               	goto	l1506
  8210     072E                     u3270:
  8211     072E                     l4263:
  8212     072E  17CB               	bsf	___fladd@b+3,7
  8213     072F                     l1506:
  8214     072F                     l1476:
  8215     072F  0008               	return
  8216     0730                     __end_of___fladd:
  8217                           
  8218                           	psect	text23
  8219     166D                     __ptext23:	
  8220 ;; *************** function _I2C_WriteNBytes *****************
  8221 ;; Defined at:
  8222 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  address         1    wreg     unsigned char 
  8225 ;;  data            1    8[BANK0 ] PTR unsigned char 
  8226 ;;		 -> SHT30_CMD_MEASURE_M_Enable(2), 
  8227 ;;  len             2    9[BANK0 ] unsigned int 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  address         1   11[BANK0 ] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8239 ;;      Params:         0       3       0       0       0       0       0       0
  8240 ;;      Locals:         0       1       0       0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0
  8242 ;;      Totals:         0       4       0       0       0       0       0       0
  8243 ;;Total ram usage:        4 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 10
  8246 ;; This function calls:
  8247 ;;		_I2C_Close
  8248 ;;		_I2C_MasterWrite
  8249 ;;		_I2C_Open
  8250 ;;		_I2C_SetAddressNackCallback
  8251 ;;		_I2C_SetBuffer
  8252 ;; This function is called by:
  8253 ;;		_ReadData
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257     166D                     _I2C_WriteNBytes:	
  8258                           ;psect for function _I2C_WriteNBytes
  8259                           
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _I2C_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8263                           ;I2C_WriteNBytes@address stored from wreg
  8264     166D  0020               	movlb	0	; select bank0
  8265     166E  00AB               	movwf	I2C_WriteNBytes@address
  8266     166F                     l3849:
  8267     166F                     l3851:	
  8268                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  8269                           
  8270     166F  0020               	movlb	0	; select bank0
  8271     1670  082B               	movf	I2C_WriteNBytes@address,w
  8272     1671  3197  27BA  3196   	fcall	_I2C_Open
  8273     1674  3A00               	xorlw	0
  8274     1675  1903               	skipnz
  8275     1676  2E78               	goto	u2641
  8276     1677  2E79               	goto	u2640
  8277     1678                     u2641:
  8278     1678  2E6F               	goto	l3851
  8279     1679                     u2640:
  8280     1679                     l3853:
  8281                           
  8282                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8283     1679  0020               	movlb	0	; select bank0
  8284     167A  082A               	movf	I2C_WriteNBytes@len+1,w
  8285     167B  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8286     167C  0829               	movf	I2C_WriteNBytes@len,w
  8287     167D  00A0               	movwf	I2C_SetBuffer@bufferSize
  8288     167E  0828               	movf	I2C_WriteNBytes@data,w
  8289     167F  3194  2432  3196   	fcall	_I2C_SetBuffer
  8290     1682                     l3855:
  8291                           
  8292                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8293     1682  3000               	movlw	0
  8294     1683  0020               	movlb	0	; select bank0
  8295     1684  00A4               	movwf	I2C_SetAddressNackCallback@cb
  8296     1685  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
  8297     1686  3000               	movlw	0
  8298     1687  00A6               	movwf	I2C_SetAddressNackCallback@ptr
  8299     1688  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
  8300     1689  3193  232E  3196   	fcall	_I2C_SetAddressNackCallback
  8301     168C                     l3857:
  8302                           
  8303                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8304     168C  3192  228B  3196   	fcall	_I2C_MasterWrite
  8305     168F                     l3859:	
  8306                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  8307                           
  8308     168F  3194  2493  3196   	fcall	_I2C_Close
  8309     1692  3A01               	xorlw	1
  8310     1693  1903               	skipnz
  8311     1694  2E96               	goto	u2651
  8312     1695  2E97               	goto	u2650
  8313     1696                     u2651:
  8314     1696  2E8F               	goto	l3859
  8315     1697                     u2650:
  8316     1697                     l71:
  8317     1697  0008               	return
  8318     1698                     __end_of_I2C_WriteNBytes:
  8319                           
  8320                           	psect	text24
  8321     132E                     __ptext24:	
  8322 ;; *************** function _I2C_SetAddressNackCallback *****************
  8323 ;; Defined at:
  8324 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  8327 ;;		 -> NULL(1), 
  8328 ;;  ptr             2    6[BANK0 ] PTR void 
  8329 ;;		 -> NULL(0), 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8341 ;;      Params:         0       4       0       0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0
  8344 ;;      Totals:         0       4       0       0       0       0       0       0
  8345 ;;Total ram usage:        4 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; Hardware stack levels required when called: 8
  8348 ;; This function calls:
  8349 ;;		_I2C_SetCallback
  8350 ;; This function is called by:
  8351 ;;		_I2C_WriteNBytes
  8352 ;;		_I2C_Read1ByteRegister
  8353 ;;		_I2C_Read2ByteRegister
  8354 ;;		_I2C_Write1ByteRegister
  8355 ;;		_I2C_Write2ByteRegister
  8356 ;;		_I2C_ReadDataBlock
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360     132E                     _I2C_SetAddressNackCallback:	
  8361                           ;psect for function _I2C_SetAddressNackCallback
  8362                           
  8363     132E                     l3693:	
  8364                           ;incstack = 0
  8365                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8366                           
  8367                           
  8368                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8369     132E  0020               	movlb	0	; select bank0
  8370     132F  0825               	movf	I2C_SetAddressNackCallback@cb+1,w
  8371     1330  00A1               	movwf	I2C_SetCallback@cb+1
  8372     1331  0824               	movf	I2C_SetAddressNackCallback@cb,w
  8373     1332  00A0               	movwf	I2C_SetCallback@cb
  8374     1333  0826               	movf	I2C_SetAddressNackCallback@ptr,w
  8375     1334  00A2               	movwf	I2C_SetCallback@ptr
  8376     1335  3002               	movlw	2
  8377     1336  3195  25EF  3193   	fcall	_I2C_SetCallback
  8378     1339                     l550:
  8379     1339  0008               	return
  8380     133A                     __end_of_I2C_SetAddressNackCallback:
  8381                           
  8382                           	psect	text25
  8383     15EF                     __ptext25:	
  8384 ;; *************** function _I2C_SetCallback *****************
  8385 ;; Defined at:
  8386 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  idx             1    wreg     enum E3130
  8389 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8390 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8391 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8392 ;;  ptr             1    2[BANK0 ] PTR void 
  8393 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8394 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  idx             1    3[BANK0 ] enum E3130
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8406 ;;      Params:         0       3       0       0       0       0       0       0
  8407 ;;      Locals:         0       1       0       0       0       0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0
  8409 ;;      Totals:         0       4       0       0       0       0       0       0
  8410 ;;Total ram usage:        4 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; Hardware stack levels required when called: 7
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_I2C_SetAddressNackCallback
  8417 ;;		_I2C_SetWriteCollisionCallback
  8418 ;;		_I2C_SetDataNackCallback
  8419 ;;		_I2C_SetTimeoutCallback
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423     15EF                     _I2C_SetCallback:	
  8424                           ;psect for function _I2C_SetCallback
  8425                           
  8426                           
  8427                           ;incstack = 0
  8428                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8429                           ;I2C_SetCallback@idx stored from wreg
  8430     15EF  0020               	movlb	0	; select bank0
  8431     15F0  00A3               	movwf	I2C_SetCallback@idx
  8432     15F1                     l3601:
  8433                           
  8434                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8435     15F1  0820               	movf	I2C_SetCallback@cb,w
  8436     15F2  0421               	iorwf	I2C_SetCallback@cb+1,w
  8437     15F3  1903               	btfsc	3,2
  8438     15F4  2DF6               	goto	u2421
  8439     15F5  2DF7               	goto	u2420
  8440     15F6                     u2421:
  8441     15F6  2E08               	goto	l3605
  8442     15F7                     u2420:
  8443     15F7                     l3603:
  8444                           
  8445                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8446     15F7  3523               	lslf	I2C_SetCallback@idx,w
  8447     15F8  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8448     15F9  0086               	movwf	6
  8449     15FA  3001               	movlw	1	; select bank2/3
  8450     15FB  0087               	movwf	7
  8451     15FC  0820               	movf	I2C_SetCallback@cb,w
  8452     15FD  3FC0               	movwi [0]fsr1
  8453     15FE  0821               	movf	I2C_SetCallback@cb+1,w
  8454     15FF  3FC1               	movwi [1]fsr1
  8455                           
  8456                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8457     1600  0823               	movf	I2C_SetCallback@idx,w
  8458     1601  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8459     1602  0086               	movwf	6
  8460     1603  3001               	movlw	1	; select bank2/3
  8461     1604  0087               	movwf	7
  8462     1605  0822               	movf	I2C_SetCallback@ptr,w
  8463     1606  0081               	movwf	1
  8464                           
  8465                           ;mcc_generated_files/i2c_master.c: 310:     }
  8466     1607  2E17               	goto	l564
  8467     1608                     l3605:
  8468                           
  8469                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8470     1608  3523               	lslf	I2C_SetCallback@idx,w
  8471     1609  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8472     160A  0086               	movwf	6
  8473     160B  3001               	movlw	1	; select bank2/3
  8474     160C  0087               	movwf	7
  8475     160D  3012               	movlw	low _I2C_CallbackReturnStop
  8476     160E  3FC0               	movwi [0]fsr1
  8477     160F  3012               	movlw	high _I2C_CallbackReturnStop
  8478     1610  3FC1               	movwi [1]fsr1
  8479                           
  8480                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8481     1611  0823               	movf	I2C_SetCallback@idx,w
  8482     1612  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8483     1613  0086               	movwf	6
  8484     1614  3001               	movlw	1	; select bank2/3
  8485     1615  0087               	movwf	7
  8486     1616  0181               	clrf	1
  8487     1617                     l564:
  8488     1617  0008               	return
  8489     1618                     __end_of_I2C_SetCallback:
  8490                           
  8491                           	psect	text26
  8492     128B                     __ptext26:	
  8493 ;; *************** function _I2C_MasterWrite *****************
  8494 ;; Defined at:
  8495 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      enum E358
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0, pclath, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8509 ;;      Params:         0       0       0       0       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; Hardware stack levels required when called: 9
  8516 ;; This function calls:
  8517 ;;		_I2C_MasterOperation
  8518 ;; This function is called by:
  8519 ;;		_I2C_WriteNBytes
  8520 ;;		_I2C_Read1ByteRegister
  8521 ;;		_I2C_Read2ByteRegister
  8522 ;;		_I2C_Write1ByteRegister
  8523 ;;		_I2C_Write2ByteRegister
  8524 ;;		_I2C_ReadDataBlock
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528     128B                     _I2C_MasterWrite:	
  8529                           ;psect for function _I2C_MasterWrite
  8530                           
  8531     128B                     l3695:	
  8532                           ;incstack = 0
  8533                           ; Regs used in _I2C_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  8534                           
  8535                           
  8536                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8537     128B  3000               	movlw	0
  8538     128C  3188  2000  3192   	fcall	_I2C_MasterOperation
  8539     128F                     l534:
  8540     128F  0008               	return
  8541     1290                     __end_of_I2C_MasterWrite:
  8542                           
  8543                           	psect	text27
  8544     14E5                     __ptext27:	
  8545 ;; *************** function _I2C_ReadNBytes *****************
  8546 ;; Defined at:
  8547 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  address         1    wreg     unsigned char 
  8550 ;;  data            1    4[BANK0 ] PTR unsigned char 
  8551 ;;		 -> ReadData@aData(6), 
  8552 ;;  len             2    5[BANK0 ] unsigned int 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  address         1    7[BANK0 ] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0, pclath, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8564 ;;      Params:         0       3       0       0       0       0       0       0
  8565 ;;      Locals:         0       1       0       0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0
  8567 ;;      Totals:         0       4       0       0       0       0       0       0
  8568 ;;Total ram usage:        4 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 10
  8571 ;; This function calls:
  8572 ;;		_I2C_Close
  8573 ;;		_I2C_MasterRead
  8574 ;;		_I2C_Open
  8575 ;;		_I2C_SetBuffer
  8576 ;; This function is called by:
  8577 ;;		_ReadData
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581     14E5                     _I2C_ReadNBytes:	
  8582                           ;psect for function _I2C_ReadNBytes
  8583                           
  8584                           
  8585                           ;incstack = 0
  8586                           ; Regs used in _I2C_ReadNBytes: [wreg+status,2+status,0+pclath+cstack]
  8587                           ;I2C_ReadNBytes@address stored from wreg
  8588     14E5  0020               	movlb	0	; select bank0
  8589     14E6  00A7               	movwf	I2C_ReadNBytes@address
  8590     14E7                     l3861:
  8591     14E7                     l3863:	
  8592                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  8593                           
  8594     14E7  0020               	movlb	0	; select bank0
  8595     14E8  0827               	movf	I2C_ReadNBytes@address,w
  8596     14E9  3197  27BA  3194   	fcall	_I2C_Open
  8597     14EC  3A00               	xorlw	0
  8598     14ED  1903               	skipnz
  8599     14EE  2CF0               	goto	u2661
  8600     14EF  2CF1               	goto	u2660
  8601     14F0                     u2661:
  8602     14F0  2CE7               	goto	l3863
  8603     14F1                     u2660:
  8604     14F1                     l3865:
  8605                           
  8606                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  8607     14F1  0020               	movlb	0	; select bank0
  8608     14F2  0826               	movf	I2C_ReadNBytes@len+1,w
  8609     14F3  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8610     14F4  0825               	movf	I2C_ReadNBytes@len,w
  8611     14F5  00A0               	movwf	I2C_SetBuffer@bufferSize
  8612     14F6  0824               	movf	I2C_ReadNBytes@data,w
  8613     14F7  3194  2432  3194   	fcall	_I2C_SetBuffer
  8614                           
  8615                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  8616     14FA  3192  2286  3194   	fcall	_I2C_MasterRead
  8617     14FD                     l3867:	
  8618                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  8619                           
  8620     14FD  3194  2493  3194   	fcall	_I2C_Close
  8621     1500  3A01               	xorlw	1
  8622     1501  1903               	skipnz
  8623     1502  2D04               	goto	u2671
  8624     1503  2D05               	goto	u2670
  8625     1504                     u2671:
  8626     1504  2CFD               	goto	l3867
  8627     1505                     u2670:
  8628     1505                     l80:
  8629     1505  0008               	return
  8630     1506                     __end_of_I2C_ReadNBytes:
  8631                           
  8632                           	psect	text28
  8633     1432                     __ptext28:	
  8634 ;; *************** function _I2C_SetBuffer *****************
  8635 ;; Defined at:
  8636 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  buffer          1    wreg     PTR void 
  8639 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_M_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8640 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8641 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8642 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8643 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  buffer          1    2[BANK0 ] PTR void 
  8646 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_M_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8647 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8648 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8649 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8659 ;;      Params:         0       2       0       0       0       0       0       0
  8660 ;;      Locals:         0       1       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       3       0       0       0       0       0       0
  8663 ;;Total ram usage:        3 bytes
  8664 ;; Hardware stack levels used: 1
  8665 ;; Hardware stack levels required when called: 7
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_I2C_WriteNBytes
  8670 ;;		_I2C_ReadNBytes
  8671 ;;		_I2C_Read1ByteRegister
  8672 ;;		_I2C_Read2ByteRegister
  8673 ;;		_I2C_Write1ByteRegister
  8674 ;;		_I2C_Write2ByteRegister
  8675 ;;		_I2C_ReadDataBlock
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679     1432                     _I2C_SetBuffer:	
  8680                           ;psect for function _I2C_SetBuffer
  8681                           
  8682                           
  8683                           ;incstack = 0
  8684                           ; Regs used in _I2C_SetBuffer: [wreg]
  8685                           ;I2C_SetBuffer@buffer stored from wreg
  8686     1432  0020               	movlb	0	; select bank0
  8687     1433  00A2               	movwf	I2C_SetBuffer@buffer
  8688     1434                     l3687:
  8689                           
  8690                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8691     1434  0022               	movlb	2	; select bank2
  8692     1435  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
  8693     1436  2C38               	goto	u2501
  8694     1437  2C39               	goto	u2500
  8695     1438                     u2501:
  8696     1438  2C46               	goto	l541
  8697     1439                     u2500:
  8698     1439                     l3689:
  8699                           
  8700                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8701     1439  0020               	movlb	0	; select bank0
  8702     143A  0822               	movf	I2C_SetBuffer@buffer,w
  8703     143B  0022               	movlb	2	; select bank2
  8704     143C  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
  8705                           
  8706                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8707     143D  0020               	movlb	0	; select bank0
  8708     143E  0821               	movf	I2C_SetBuffer@bufferSize+1,w
  8709     143F  0022               	movlb	2	; select bank2
  8710     1440  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
  8711     1441  0020               	movlb	0	; select bank0
  8712     1442  0820               	movf	I2C_SetBuffer@bufferSize,w
  8713     1443  0022               	movlb	2	; select bank2
  8714     1444  00B8               	movwf	(_I2C_Status^(0+256)+24)
  8715     1445                     l3691:
  8716                           
  8717                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8718     1445  11BC               	bcf	(_I2C_Status^(0+256)+28),3
  8719     1446                     l541:
  8720     1446  0008               	return
  8721     1447                     __end_of_I2C_SetBuffer:
  8722                           
  8723                           	psect	text29
  8724     17BA                     __ptext29:	
  8725 ;; *************** function _I2C_Open *****************
  8726 ;; Defined at:
  8727 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  address         1    wreg     unsigned char 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  address         1    2[BANK0 ] unsigned char 
  8732 ;;  returnValue     1    3[BANK0 ] enum E358
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      enum E358
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0, pclath, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8742 ;;      Params:         0       0       0       0       0       0       0       0
  8743 ;;      Locals:         0       2       0       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0       0
  8745 ;;      Totals:         0       2       0       0       0       0       0       0
  8746 ;;Total ram usage:        2 bytes
  8747 ;; Hardware stack levels used: 1
  8748 ;; Hardware stack levels required when called: 8
  8749 ;; This function calls:
  8750 ;;		_I2C_MasterClearIrq
  8751 ;;		_I2C_MasterEnableIrq
  8752 ;;		_I2C_MasterOpen
  8753 ;;		_I2C_SetInterruptHandler
  8754 ;; This function is called by:
  8755 ;;		_I2C_WriteNBytes
  8756 ;;		_I2C_ReadNBytes
  8757 ;;		_I2C_Read1ByteRegister
  8758 ;;		_I2C_Read2ByteRegister
  8759 ;;		_I2C_Write1ByteRegister
  8760 ;;		_I2C_Write2ByteRegister
  8761 ;;		_I2C_ReadDataBlock
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765     17BA                     _I2C_Open:	
  8766                           ;psect for function _I2C_Open
  8767                           
  8768                           
  8769                           ;incstack = 0
  8770                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  8771                           ;I2C_Open@address stored from wreg
  8772     17BA  0020               	movlb	0	; select bank0
  8773     17BB  00A2               	movwf	I2C_Open@address
  8774     17BC                     l3649:
  8775                           
  8776                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8777     17BC  01A3               	clrf	I2C_Open@returnValue
  8778     17BD  0AA3               	incf	I2C_Open@returnValue,f
  8779                           
  8780                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8781     17BE  0022               	movlb	2	; select bank2
  8782     17BF  193C               	btfsc	(_I2C_Status^(0+256)+28),2
  8783     17C0  2FC2               	goto	u2491
  8784     17C1  2FC3               	goto	u2490
  8785     17C2                     u2491:
  8786     17C2  2FFD               	goto	l3681
  8787     17C3                     u2490:
  8788     17C3                     l3651:
  8789                           
  8790                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8791     17C3  0020               	movlb	0	; select bank0
  8792     17C4  0822               	movf	I2C_Open@address,w
  8793     17C5  0022               	movlb	2	; select bank2
  8794     17C6  00B6               	movwf	(_I2C_Status^(0+256)+22)
  8795     17C7                     l3653:
  8796                           
  8797                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8798     17C7  10BC               	bcf	(_I2C_Status^(0+256)+28),1
  8799     17C8                     l3655:
  8800                           
  8801                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8802     17C8  153C               	bsf	(_I2C_Status^(0+256)+28),2
  8803     17C9                     l3657:
  8804                           
  8805                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8806     17C9  103C               	bcf	(_I2C_Status^(0+256)+28),0
  8807                           
  8808                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8809     17CA  300E               	movlw	14
  8810     17CB  00BA               	movwf	(_I2C_Status^(0+256)+26)
  8811                           
  8812                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8813     17CC  30F4               	movlw	244
  8814     17CD  00B4               	movwf	(_I2C_Status^(0+256)+20)
  8815     17CE  3001               	movlw	1
  8816     17CF  00B5               	movwf	(_I2C_Status^(0+256)+21)
  8817     17D0                     l3659:
  8818                           
  8819                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8820     17D0  15BC               	bsf	(_I2C_Status^(0+256)+28),3
  8821                           
  8822                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8823     17D1  3012               	movlw	low _I2C_CallbackReturnStop
  8824     17D2  00A0               	movwf	_I2C_Status^(0+256)
  8825     17D3  3012               	movlw	high _I2C_CallbackReturnStop
  8826     17D4  00A1               	movwf	(_I2C_Status^(0+256)+1)
  8827     17D5                     l3661:
  8828                           
  8829                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8830     17D5  01AC               	clrf	(low ((_I2C_Status| (0+256)+12)))^0
  8831     17D6                     l3663:
  8832                           
  8833                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8834     17D6  3012               	movlw	low _I2C_CallbackReturnStop
  8835     17D7  00A2               	movwf	(low ((_I2C_Status| (0+256)+2)))^0
  8836     17D8  3012               	movlw	high _I2C_CallbackReturnStop
  8837     17D9  00A3               	movwf	((low ((_I2C_Status| (0+256)+2)))^0+1)
  8838                           
  8839                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8840     17DA  01AD               	clrf	(low ((_I2C_Status| (0+256)+13)))^0
  8841     17DB                     l3665:
  8842                           
  8843                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8844     17DB  3012               	movlw	low _I2C_CallbackReturnStop
  8845     17DC  00A4               	movwf	(low ((_I2C_Status| (0+256)+4)))^0
  8846     17DD  3012               	movlw	high _I2C_CallbackReturnStop
  8847     17DE  00A5               	movwf	((low ((_I2C_Status| (0+256)+4)))^0+1)
  8848     17DF                     l3667:
  8849                           
  8850                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8851     17DF  01AE               	clrf	(low ((_I2C_Status| (0+256)+14)))^0
  8852                           
  8853                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8854     17E0  3012               	movlw	low _I2C_CallbackReturnStop
  8855     17E1  00A6               	movwf	(low ((_I2C_Status| (0+256)+6)))^0
  8856     17E2  3012               	movlw	high _I2C_CallbackReturnStop
  8857     17E3  00A7               	movwf	((low ((_I2C_Status| (0+256)+6)))^0+1)
  8858     17E4                     l3669:
  8859                           
  8860                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8861     17E4  01AF               	clrf	(low ((_I2C_Status| (0+256)+15)))^0
  8862     17E5                     l3671:
  8863                           
  8864                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8865     17E5  3002               	movlw	low _I2C_CallbackReturnReset
  8866     17E6  00A8               	movwf	(low ((_I2C_Status| (0+256)+8)))^0
  8867     17E7  3000               	movlw	high _I2C_CallbackReturnReset
  8868     17E8  00A9               	movwf	((low ((_I2C_Status| (0+256)+8)))^0+1)
  8869                           
  8870                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8871     17E9  01B0               	clrf	(low ((_I2C_Status| (0+256)+16)))^0
  8872     17EA                     l3673:
  8873                           
  8874                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  8875     17EA  3048               	movlw	low _I2C_MasterIsr
  8876     17EB  0020               	movlb	0	; select bank0
  8877     17EC  00A0               	movwf	I2C_SetInterruptHandler@InterruptHandler
  8878     17ED  3012               	movlw	high _I2C_MasterIsr
  8879     17EE  00A1               	movwf	I2C_SetInterruptHandler@InterruptHandler+1
  8880     17EF  3192  22C6  3197   	fcall	_I2C_SetInterruptHandler
  8881     17F2                     l3675:
  8882                           
  8883                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  8884     17F2  3192  2229  3197   	fcall	_I2C_MasterClearIrq
  8885     17F5                     l3677:
  8886                           
  8887                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  8888     17F5  3193  235F  3197   	fcall	_I2C_MasterOpen
  8889     17F8                     l3679:
  8890                           
  8891                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  8892     17F8  3192  2235  3197   	fcall	_I2C_MasterEnableIrq
  8893                           
  8894                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  8895     17FB  0020               	movlb	0	; select bank0
  8896     17FC  01A3               	clrf	I2C_Open@returnValue
  8897     17FD                     l3681:
  8898                           
  8899                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  8900     17FD  0020               	movlb	0	; select bank0
  8901     17FE  0823               	movf	I2C_Open@returnValue,w
  8902     17FF                     l518:
  8903     17FF  0008               	return
  8904     1800                     __end_of_I2C_Open:
  8905                           
  8906                           	psect	text30
  8907     12C6                     __ptext30:	
  8908 ;; *************** function _I2C_SetInterruptHandler *****************
  8909 ;; Defined at:
  8910 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8913 ;;		 -> I2C_MasterIsr(1), 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8925 ;;      Params:         0       2       0       0       0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0
  8928 ;;      Totals:         0       2       0       0       0       0       0       0
  8929 ;;Total ram usage:        2 bytes
  8930 ;; Hardware stack levels used: 1
  8931 ;; Hardware stack levels required when called: 7
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_I2C_Open
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939     12C6                     _I2C_SetInterruptHandler:	
  8940                           ;psect for function _I2C_SetInterruptHandler
  8941                           
  8942     12C6                     l3561:	
  8943                           ;incstack = 0
  8944                           ; Regs used in _I2C_SetInterruptHandler: [wreg]
  8945                           
  8946                           
  8947                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  8948     12C6  0020               	movlb	0	; select bank0
  8949     12C7  0821               	movf	I2C_SetInterruptHandler@InterruptHandler+1,w
  8950     12C8  0021               	movlb	1	; select bank1
  8951     12C9  00E2               	movwf	(_MSSP_InterruptHandler+1)^(0+128)
  8952     12CA  0020               	movlb	0	; select bank0
  8953     12CB  0820               	movf	I2C_SetInterruptHandler@InterruptHandler,w
  8954     12CC  0021               	movlb	1	; select bank1
  8955     12CD  00E1               	movwf	_MSSP_InterruptHandler^(0+128)
  8956     12CE                     l559:
  8957     12CE  0008               	return
  8958     12CF                     __end_of_I2C_SetInterruptHandler:
  8959                           
  8960                           	psect	text31
  8961     135F                     __ptext31:	
  8962 ;; *************** function _I2C_MasterOpen *****************
  8963 ;; Defined at:
  8964 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  8965 ;; Parameters:    Size  Location     Type
  8966 ;;		None
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;		None
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      _Bool 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8978 ;;      Params:         0       0       0       0       0       0       0       0
  8979 ;;      Locals:         0       0       0       0       0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0       0
  8981 ;;      Totals:         0       0       0       0       0       0       0       0
  8982 ;;Total ram usage:        0 bytes
  8983 ;; Hardware stack levels used: 1
  8984 ;; Hardware stack levels required when called: 7
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_I2C_Open
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992     135F                     _I2C_MasterOpen:	
  8993                           ;psect for function _I2C_MasterOpen
  8994                           
  8995     135F                     l3565:	
  8996                           ;incstack = 0
  8997                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  8998                           
  8999                           
  9000                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  9001     135F  0024               	movlb	4	; select bank4
  9002     1360  1A95               	btfsc	21,5	;volatile
  9003     1361  2B63               	goto	u2391
  9004     1362  2B64               	goto	u2390
  9005     1363                     u2391:
  9006     1363  2B6B               	goto	l683
  9007     1364                     u2390:
  9008     1364                     l3567:
  9009                           
  9010                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  9011     1364  0194               	clrf	20	;volatile
  9012     1365                     l3569:
  9013                           
  9014                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  9015     1365  3008               	movlw	8
  9016     1366  0095               	movwf	21	;volatile
  9017     1367                     l3571:
  9018                           
  9019                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  9020     1367  0196               	clrf	22	;volatile
  9021                           
  9022                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x13;
  9023     1368  3013               	movlw	19
  9024     1369  0092               	movwf	18	;volatile
  9025     136A                     l3573:
  9026                           
  9027                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  9028     136A  1695               	bsf	21,5	;volatile
  9029     136B                     l683:
  9030     136B  0008               	return
  9031     136C                     __end_of_I2C_MasterOpen:
  9032                           
  9033                           	psect	text32
  9034     1235                     __ptext32:	
  9035 ;; *************** function _I2C_MasterEnableIrq *****************
  9036 ;; Defined at:
  9037 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      void 
  9044 ;; Registers used:
  9045 ;;		None
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9051 ;;      Params:         0       0       0       0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0       0       0       0
  9054 ;;      Totals:         0       0       0       0       0       0       0       0
  9055 ;;Total ram usage:        0 bytes
  9056 ;; Hardware stack levels used: 1
  9057 ;; Hardware stack levels required when called: 7
  9058 ;; This function calls:
  9059 ;;		Nothing
  9060 ;; This function is called by:
  9061 ;;		_I2C_Open
  9062 ;;		_I2C_SetTimeOut
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066     1235                     _I2C_MasterEnableIrq:	
  9067                           ;psect for function _I2C_MasterEnableIrq
  9068                           
  9069     1235                     l3577:	
  9070                           ;incstack = 0
  9071                           ; Regs used in _I2C_MasterEnableIrq: []
  9072                           
  9073                           
  9074                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  9075     1235  0021               	movlb	1	; select bank1
  9076     1236  1591               	bsf	17,3	;volatile
  9077     1237                     l725:
  9078     1237  0008               	return
  9079     1238                     __end_of_I2C_MasterEnableIrq:
  9080                           
  9081                           	psect	text33
  9082     1286                     __ptext33:	
  9083 ;; *************** function _I2C_MasterRead *****************
  9084 ;; Defined at:
  9085 ;;		line 247 in file "mcc_generated_files/i2c_master.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      enum E358
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0, pclath, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9099 ;;      Params:         0       0       0       0       0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; Hardware stack levels required when called: 9
  9106 ;; This function calls:
  9107 ;;		_I2C_MasterOperation
  9108 ;; This function is called by:
  9109 ;;		_I2C_ReadNBytes
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113     1286                     _I2C_MasterRead:	
  9114                           ;psect for function _I2C_MasterRead
  9115                           
  9116     1286                     l3717:	
  9117                           ;incstack = 0
  9118                           ; Regs used in _I2C_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  9119                           
  9120                           
  9121                           ;mcc_generated_files/i2c_master.c: 249:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9122     1286  3001               	movlw	1
  9123     1287  3188  2000  3192   	fcall	_I2C_MasterOperation
  9124     128A                     l531:
  9125     128A  0008               	return
  9126     128B                     __end_of_I2C_MasterRead:
  9127                           
  9128                           	psect	text34
  9129     0800                     __ptext34:	
  9130 ;; *************** function _I2C_MasterOperation *****************
  9131 ;; Defined at:
  9132 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  read            1    wreg     _Bool 
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;  read            1    0[BANK0 ] _Bool 
  9137 ;;  returnValue     1    1[BANK0 ] enum E358
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      enum E358
  9140 ;; Registers used:
  9141 ;;		wreg, status,2, status,0, pclath, cstack
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9147 ;;      Params:         0       0       0       0       0       0       0       0
  9148 ;;      Locals:         0       2       0       0       0       0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0
  9150 ;;      Totals:         0       2       0       0       0       0       0       0
  9151 ;;Total ram usage:        2 bytes
  9152 ;; Hardware stack levels used: 1
  9153 ;; Hardware stack levels required when called: 8
  9154 ;; This function calls:
  9155 ;;		_I2C_MasterStart
  9156 ;; This function is called by:
  9157 ;;		_I2C_MasterRead
  9158 ;;		_I2C_MasterWrite
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162     0800                     _I2C_MasterOperation:	
  9163                           ;psect for function _I2C_MasterOperation
  9164                           
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _I2C_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
  9168                           ;I2C_MasterOperation@read stored from wreg
  9169     0800  0020               	movlb	0	; select bank0
  9170     0801  00A0               	movwf	I2C_MasterOperation@read
  9171     0802                     l3583:
  9172                           
  9173                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9174     0802  01A1               	clrf	I2C_MasterOperation@returnValue
  9175     0803  0AA1               	incf	I2C_MasterOperation@returnValue,f
  9176                           
  9177                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  9178     0804  0022               	movlb	2	; select bank2
  9179     0805  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9180     0806  2808               	goto	u2401
  9181     0807  2809               	goto	u2400
  9182     0808                     u2401:
  9183     0808  281B               	goto	l3597
  9184     0809                     u2400:
  9185     0809                     l3585:
  9186                           
  9187                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  9188     0809  14BC               	bsf	(_I2C_Status^(0+256)+28),1
  9189     080A                     l3587:
  9190                           
  9191                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  9192     080A  0020               	movlb	0	; select bank0
  9193     080B  01A1               	clrf	I2C_MasterOperation@returnValue
  9194     080C                     l3589:
  9195                           
  9196                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  9197     080C  0820               	movf	I2C_MasterOperation@read,w
  9198     080D  1903               	btfsc	3,2
  9199     080E  2810               	goto	u2411
  9200     080F  2811               	goto	u2410
  9201     0810                     u2411:
  9202     0810  2815               	goto	l3593
  9203     0811                     u2410:
  9204     0811                     l3591:
  9205                           
  9206                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9207     0811  0022               	movlb	2	; select bank2
  9208     0812  01BA               	clrf	(_I2C_Status^(0+256)+26)
  9209     0813  0ABA               	incf	(_I2C_Status^(0+256)+26),f
  9210                           
  9211                           ;mcc_generated_files/i2c_master.c: 237:         }
  9212     0814  2818               	goto	l3595
  9213     0815                     l3593:
  9214                           
  9215                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9216     0815  3002               	movlw	2
  9217     0816  0022               	movlb	2	; select bank2
  9218     0817  00BA               	movwf	(_I2C_Status^(0+256)+26)
  9219     0818                     l3595:
  9220                           
  9221                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  9222     0818  3192  2232  3188   	fcall	_I2C_MasterStart
  9223     081B                     l3597:
  9224                           
  9225                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  9226     081B  0020               	movlb	0	; select bank0
  9227     081C  0821               	movf	I2C_MasterOperation@returnValue,w
  9228     081D                     l528:
  9229     081D  0008               	return
  9230     081E                     __end_of_I2C_MasterOperation:
  9231                           
  9232                           	psect	text35
  9233     1232                     __ptext35:	
  9234 ;; *************** function _I2C_MasterStart *****************
  9235 ;; Defined at:
  9236 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		None
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9250 ;;      Params:         0       0       0       0       0       0       0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used: 1
  9256 ;; Hardware stack levels required when called: 7
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_I2C_MasterOperation
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264     1232                     _I2C_MasterStart:	
  9265                           ;psect for function _I2C_MasterStart
  9266                           
  9267     1232                     l3495:	
  9268                           ;incstack = 0
  9269                           ; Regs used in _I2C_MasterStart: []
  9270                           
  9271                           
  9272                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  9273     1232  0024               	movlb	4	; select bank4
  9274     1233  1416               	bsf	22,0	;volatile
  9275     1234                     l704:
  9276     1234  0008               	return
  9277     1235                     __end_of_I2C_MasterStart:
  9278                           
  9279                           	psect	text36
  9280     1493                     __ptext36:	
  9281 ;; *************** function _I2C_Close *****************
  9282 ;; Defined at:
  9283 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;  returnValue     1    0[BANK0 ] enum E358
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      enum E358
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0, pclath, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9297 ;;      Params:         0       0       0       0       0       0       0       0
  9298 ;;      Locals:         0       1       0       0       0       0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0
  9300 ;;      Totals:         0       1       0       0       0       0       0       0
  9301 ;;Total ram usage:        1 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 8
  9304 ;; This function calls:
  9305 ;;		_I2C_MasterClearIrq
  9306 ;;		_I2C_MasterClose
  9307 ;;		_I2C_MasterDisableIrq
  9308 ;; This function is called by:
  9309 ;;		_I2C_WriteNBytes
  9310 ;;		_I2C_ReadNBytes
  9311 ;;		_I2C_Read1ByteRegister
  9312 ;;		_I2C_Read2ByteRegister
  9313 ;;		_I2C_Write1ByteRegister
  9314 ;;		_I2C_Write2ByteRegister
  9315 ;;		_I2C_ReadDataBlock
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319     1493                     _I2C_Close:	
  9320                           ;psect for function _I2C_Close
  9321                           
  9322     1493                     l3699:	
  9323                           ;incstack = 0
  9324                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  9325                           
  9326                           
  9327                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  9328     1493  0020               	movlb	0	; select bank0
  9329     1494  01A0               	clrf	I2C_Close@returnValue
  9330     1495  0AA0               	incf	I2C_Close@returnValue,f
  9331                           
  9332                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  9333     1496  0022               	movlb	2	; select bank2
  9334     1497  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9335     1498  2C9A               	goto	u2511
  9336     1499  2C9B               	goto	u2510
  9337     149A                     u2511:
  9338     149A  2CAB               	goto	l3713
  9339     149B                     u2510:
  9340     149B                     l3701:
  9341                           
  9342                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  9343     149B  113C               	bcf	(_I2C_Status^(0+256)+28),2
  9344     149C                     l3703:
  9345                           
  9346                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  9347     149C  30FF               	movlw	255
  9348     149D  00B6               	movwf	(_I2C_Status^(0+256)+22)
  9349     149E                     l3705:
  9350                           
  9351                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  9352     149E  3192  2229  3194   	fcall	_I2C_MasterClearIrq
  9353     14A1                     l3707:
  9354                           
  9355                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  9356     14A1  3192  222F  3194   	fcall	_I2C_MasterDisableIrq
  9357     14A4                     l3709:
  9358                           
  9359                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  9360     14A4  3192  222C  3194   	fcall	_I2C_MasterClose
  9361     14A7                     l3711:
  9362                           
  9363                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  9364     14A7  0022               	movlb	2	; select bank2
  9365     14A8  083B               	movf	(_I2C_Status^(0+256)+27),w
  9366     14A9  0020               	movlb	0	; select bank0
  9367     14AA  00A0               	movwf	I2C_Close@returnValue
  9368     14AB                     l3713:
  9369                           
  9370                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  9371     14AB  0020               	movlb	0	; select bank0
  9372     14AC  0820               	movf	I2C_Close@returnValue,w
  9373     14AD                     l522:
  9374     14AD  0008               	return
  9375     14AE                     __end_of_I2C_Close:
  9376                           
  9377                           	psect	text37
  9378     122F                     __ptext37:	
  9379 ;; *************** function _I2C_MasterDisableIrq *****************
  9380 ;; Defined at:
  9381 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		None
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9395 ;;      Params:         0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used: 1
  9401 ;; Hardware stack levels required when called: 7
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_I2C_Close
  9406 ;;		_I2C_SetTimeOut
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410     122F                     _I2C_MasterDisableIrq:	
  9411                           ;psect for function _I2C_MasterDisableIrq
  9412                           
  9413     122F                     l3579:	
  9414                           ;incstack = 0
  9415                           ; Regs used in _I2C_MasterDisableIrq: []
  9416                           
  9417                           
  9418                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  9419     122F  0021               	movlb	1	; select bank1
  9420     1230  1191               	bcf	17,3	;volatile
  9421     1231                     l731:
  9422     1231  0008               	return
  9423     1232                     __end_of_I2C_MasterDisableIrq:
  9424                           
  9425                           	psect	text38
  9426     122C                     __ptext38:	
  9427 ;; *************** function _I2C_MasterClose *****************
  9428 ;; Defined at:
  9429 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;		None
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;		None
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		None
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9443 ;;      Params:         0       0       0       0       0       0       0       0
  9444 ;;      Locals:         0       0       0       0       0       0       0       0
  9445 ;;      Temps:          0       0       0       0       0       0       0       0
  9446 ;;      Totals:         0       0       0       0       0       0       0       0
  9447 ;;Total ram usage:        0 bytes
  9448 ;; Hardware stack levels used: 1
  9449 ;; Hardware stack levels required when called: 7
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_I2C_Close
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457     122C                     _I2C_MasterClose:	
  9458                           ;psect for function _I2C_MasterClose
  9459                           
  9460     122C                     l3581:	
  9461                           ;incstack = 0
  9462                           ; Regs used in _I2C_MasterClose: []
  9463                           
  9464                           
  9465                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  9466     122C  0024               	movlb	4	; select bank4
  9467     122D  1295               	bcf	21,5	;volatile
  9468     122E                     l686:
  9469     122E  0008               	return
  9470     122F                     __end_of_I2C_MasterClose:
  9471                           
  9472                           	psect	text39
  9473     1229                     __ptext39:	
  9474 ;; *************** function _I2C_MasterClearIrq *****************
  9475 ;; Defined at:
  9476 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		None
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9490 ;;      Params:         0       0       0       0       0       0       0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0
  9493 ;;      Totals:         0       0       0       0       0       0       0       0
  9494 ;;Total ram usage:        0 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 7
  9497 ;; This function calls:
  9498 ;;		Nothing
  9499 ;; This function is called by:
  9500 ;;		_I2C_Open
  9501 ;;		_I2C_Close
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505     1229                     _I2C_MasterClearIrq:	
  9506                           ;psect for function _I2C_MasterClearIrq
  9507                           
  9508     1229                     l3563:	
  9509                           ;incstack = 0
  9510                           ; Regs used in _I2C_MasterClearIrq: []
  9511                           
  9512                           
  9513                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9514     1229  0020               	movlb	0	; select bank0
  9515     122A  1191               	bcf	17,3	;volatile
  9516     122B                     l734:
  9517     122B  0008               	return
  9518     122C                     __end_of_I2C_MasterClearIrq:
  9519                           
  9520                           	psect	text40
  9521     13FC                     __ptext40:	
  9522 ;; *************** function _Task_MB *****************
  9523 ;; Defined at:
  9524 ;;		line 256 in file "Mobbus_Slave.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      void 
  9531 ;; Registers used:
  9532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9538 ;;      Params:         0       0       0       0       0       0       0       0
  9539 ;;      Locals:         0       0       0       0       0       0       0       0
  9540 ;;      Temps:          0       0       0       0       0       0       0       0
  9541 ;;      Totals:         0       0       0       0       0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used: 1
  9544 ;; Hardware stack levels required when called: 12
  9545 ;; This function calls:
  9546 ;;		_ModbusSlave_Init
  9547 ;;		_ModbusSlave_Process
  9548 ;; This function is called by:
  9549 ;;		_App_Process
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553     13FC                     _Task_MB:	
  9554                           ;psect for function _Task_MB
  9555                           
  9556     13FC                     l4999:	
  9557                           ;incstack = 0
  9558                           ; Regs used in _Task_MB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9559                           
  9560                           
  9561                           ;Mobbus_Slave.c: 257:     static _Bool f_Modbus_Init = 0;;Mobbus_Slave.c: 258:     if (!
      +                          f_Modbus_Init) {
  9562     13FC  087C               	movf	Task_MB@f_Modbus_Init,w
  9563     13FD  1D03               	btfss	3,2
  9564     13FE  2C00               	goto	u4301
  9565     13FF  2C01               	goto	u4300
  9566     1400                     u4301:
  9567     1400  2C09               	goto	l5005
  9568     1401                     u4300:
  9569     1401                     l5001:
  9570                           
  9571                           ;Mobbus_Slave.c: 259:         ModbusSlave_Init(SW_Ad);
  9572     1401  0020               	movlb	0	; select bank0
  9573     1402  0869               	movf	_SW_Ad,w
  9574     1403  3188  2065  3193   	fcall	_ModbusSlave_Init
  9575     1406                     l5003:
  9576                           
  9577                           ;Mobbus_Slave.c: 260:         f_Modbus_Init = 1;
  9578     1406  01FC               	clrf	Task_MB@f_Modbus_Init
  9579     1407  0AFC               	incf	Task_MB@f_Modbus_Init,f
  9580                           
  9581                           ;Mobbus_Slave.c: 261:     } else {
  9582     1408  2C0C               	goto	l995
  9583     1409                     l5005:
  9584                           
  9585                           ;Mobbus_Slave.c: 262:         ModbusSlave_Process();
  9586     1409  3194  2479  3193   	fcall	_ModbusSlave_Process
  9587     140C                     l995:
  9588     140C  0008               	return
  9589     140D                     __end_of_Task_MB:
  9590                           
  9591                           	psect	text41
  9592     1479                     __ptext41:	
  9593 ;; *************** function _ModbusSlave_Process *****************
  9594 ;; Defined at:
  9595 ;;		line 247 in file "Mobbus_Slave.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  state           1    0        unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9609 ;;      Params:         0       0       0       0       0       0       0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 11
  9616 ;; This function calls:
  9617 ;;		_ModbusRTU_Slave_Poll
  9618 ;; This function is called by:
  9619 ;;		_Task_MB
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623     1479                     _ModbusSlave_Process:	
  9624                           ;psect for function _ModbusSlave_Process
  9625                           
  9626     1479                     l4791:	
  9627                           ;incstack = 0
  9628                           ; Regs used in _ModbusSlave_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9629                           
  9630     1479                     l4793:
  9631                           
  9632                           ;Mobbus_Slave.c: 250:     MB_Register[0] = SensorAmbient.T.Val16;
  9633     1479  0021               	movlb	1	; select bank1
  9634     147A  085C               	movf	(_SensorAmbient+1)^(0+128),w
  9635     147B  0022               	movlb	2	; select bank2
  9636     147C  00DE               	movwf	(_MB_Register+1)^(0+256)
  9637     147D  0021               	movlb	1	; select bank1
  9638     147E  085B               	movf	_SensorAmbient^(0+128),w
  9639     147F  0022               	movlb	2	; select bank2
  9640     1480  00DD               	movwf	_MB_Register^(0+256)
  9641     1481                     l4795:
  9642                           
  9643                           ;Mobbus_Slave.c: 251:     MB_Register[1] = SensorAmbient.H.Val16;
  9644     1481  0021               	movlb	1	; select bank1
  9645     1482  085E               	movf	((_SensorAmbient+1)^(0+128)+2),w
  9646     1483  0022               	movlb	2	; select bank2
  9647     1484  00E0               	movwf	((_MB_Register+1)^(0+256)+2)
  9648     1485  0021               	movlb	1	; select bank1
  9649     1486  085D               	movf	(_SensorAmbient^(0+128)+2),w
  9650     1487  0022               	movlb	2	; select bank2
  9651     1488  00DF               	movwf	(_MB_Register^(0+256)+2)
  9652     1489                     l4797:
  9653     1489  3002               	movlw	2
  9654     148A  0020               	movlb	0	; select bank0
  9655     148B  00D4               	movwf	ModbusRTU_Slave_Poll@size
  9656     148C  3000               	movlw	0
  9657     148D  00D5               	movwf	ModbusRTU_Slave_Poll@size+1
  9658     148E  305D               	movlw	(low (_MB_Register| (0+256)))& (0+255)
  9659     148F  3187  2730  3194   	fcall	_ModbusRTU_Slave_Poll
  9660     1492                     l988:
  9661     1492  0008               	return
  9662     1493                     __end_of_ModbusSlave_Process:
  9663                           
  9664                           	psect	text42
  9665     0730                     __ptext42:	
  9666 ;; *************** function _ModbusRTU_Slave_Poll *****************
  9667 ;; Defined at:
  9668 ;;		line 125 in file "Mobbus_Slave.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  reg             1    wreg     PTR unsigned short 
  9671 ;;		 -> MB_Register(4), 
  9672 ;;  size            2   52[BANK0 ] unsigned short 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;  reg             1   62[BANK0 ] PTR unsigned short 
  9675 ;;		 -> MB_Register(4), 
  9676 ;;  u8exception     1   65[BANK0 ] unsigned char 
  9677 ;;  i8state         1   64[BANK0 ] unsigned char 
  9678 ;;  u8Current       1   63[BANK0 ] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  1    wreg      unsigned char 
  9681 ;; Registers used:
  9682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9688 ;;      Params:         0       2       0       0       0       0       0       0
  9689 ;;      Locals:         0       4       0       0       0       0       0       0
  9690 ;;      Temps:          0       8       0       0       0       0       0       0
  9691 ;;      Totals:         0      14       0       0       0       0       0       0
  9692 ;;Total ram usage:       14 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; Hardware stack levels required when called: 10
  9695 ;; This function calls:
  9696 ;;		_Get_millis
  9697 ;;		_ModbusSlaveF04
  9698 ;;		_Modbus_getRxBuff
  9699 ;;		_Modbus_sendTxBuff
  9700 ;;		_buildException
  9701 ;;		_validateRequest
  9702 ;; This function is called by:
  9703 ;;		_ModbusSlave_Process
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707     0730                     _ModbusRTU_Slave_Poll:	
  9708                           ;psect for function _ModbusRTU_Slave_Poll
  9709                           
  9710                           
  9711                           ;incstack = 0
  9712                           ; Regs used in _ModbusRTU_Slave_Poll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9713                           ;ModbusRTU_Slave_Poll@reg stored from wreg
  9714     0730  0020               	movlb	0	; select bank0
  9715     0731  00DE               	movwf	ModbusRTU_Slave_Poll@reg
  9716     0732                     l3967:
  9717                           
  9718                           ;Mobbus_Slave.c: 127:     SES_Modbus.u8regsize = size;
  9719     0732  30EA               	movlw	234
  9720     0733  0086               	movwf	6
  9721     0734  3021               	movlw	33
  9722     0735  0087               	movwf	7
  9723     0736  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9724     0737  3FC0               	movwi [0]fsr1
  9725     0738  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9726     0739  3FC1               	movwi [1]fsr1
  9727     073A                     l3969:
  9728                           
  9729                           ;Mobbus_Slave.c: 128:     uint8_t u8Current;;Mobbus_Slave.c: 130:     u8Current = eusart
      +                          RxCount;
  9730     073A  086A               	movf	_eusartRxCount,w	;volatile
  9731     073B  00DF               	movwf	ModbusRTU_Slave_Poll@u8Current
  9732     073C                     l3971:
  9733                           
  9734                           ;Mobbus_Slave.c: 132:     if (u8Current == 0) return 0;
  9735     073C  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9736     073D  1D03               	btfss	3,2
  9737     073E  2F40               	goto	u2681
  9738     073F  2F41               	goto	u2680
  9739     0740                     u2681:
  9740     0740  2F43               	goto	l3977
  9741     0741                     u2680:
  9742     0741                     l3973:
  9743     0741  3000               	movlw	0
  9744     0742  2FFB               	goto	l943
  9745     0743                     l3977:
  9746                           
  9747                           ;Mobbus_Slave.c: 135:     if (u8Current != SES_Modbus.u8lastRec) {
  9748     0743  30D3               	movlw	211
  9749     0744  0086               	movwf	6
  9750     0745  3021               	movlw	33
  9751     0746  0087               	movwf	7
  9752     0747  0801               	movf	1,w
  9753     0748  065F               	xorwf	ModbusRTU_Slave_Poll@u8Current,w
  9754     0749  1903               	skipnz
  9755     074A  2F4C               	goto	u2691
  9756     074B  2F4D               	goto	u2690
  9757     074C                     u2691:
  9758     074C  2F64               	goto	l3987
  9759     074D                     u2690:
  9760     074D                     l3979:
  9761                           
  9762                           ;Mobbus_Slave.c: 136:         SES_Modbus.u8lastRec = u8Current;
  9763     074D  30D3               	movlw	211
  9764     074E  0086               	movwf	6
  9765     074F  3021               	movlw	33
  9766     0750  0087               	movwf	7
  9767     0751  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9768     0752  0081               	movwf	1
  9769     0753                     l3981:
  9770                           
  9771                           ;Mobbus_Slave.c: 137:         SES_Modbus.u32time = Get_millis();
  9772     0753  3193  23EB  3187   	fcall	_Get_millis
  9773     0756  30DE               	movlw	222
  9774     0757  0086               	movwf	6
  9775     0758  3021               	movlw	33
  9776     0759  0087               	movwf	7
  9777     075A  0020               	movlb	0	; select bank0
  9778     075B  0820               	movf	?_Get_millis,w
  9779     075C  3FC0               	movwi [0]fsr1
  9780     075D  0821               	movf	?_Get_millis+1,w
  9781     075E  3FC1               	movwi [1]fsr1
  9782     075F  0822               	movf	?_Get_millis+2,w
  9783     0760  3FC2               	movwi [2]fsr1
  9784     0761  0823               	movf	?_Get_millis+3,w
  9785     0762  3FC3               	movwi [3]fsr1
  9786     0763  2F41               	goto	l3973
  9787     0764                     l3987:
  9788                           
  9789                           ;Mobbus_Slave.c: 140:     if ((unsigned long) (Get_millis() - SES_Modbus.u32time) < (uns
      +                          igned long) 3) return 0;
  9790     0764  30DE               	movlw	222
  9791     0765  0086               	movwf	6
  9792     0766  3021               	movlw	33
  9793     0767  0087               	movwf	7
  9794     0768  3F40               	moviw [0]fsr1
  9795     0769  00D6               	movwf	??_ModbusRTU_Slave_Poll
  9796     076A  3F41               	moviw [1]fsr1
  9797     076B  00D7               	movwf	??_ModbusRTU_Slave_Poll+1
  9798     076C  3F42               	moviw [2]fsr1
  9799     076D  00D8               	movwf	??_ModbusRTU_Slave_Poll+2
  9800     076E  3F43               	moviw [3]fsr1
  9801     076F  00D9               	movwf	??_ModbusRTU_Slave_Poll+3
  9802     0770  3193  23EB  3187   	fcall	_Get_millis
  9803     0773  0020               	movlb	0	; select bank0
  9804     0774  0820               	movf	?_Get_millis,w
  9805     0775  00DA               	movwf	??_ModbusRTU_Slave_Poll+4
  9806     0776  0821               	movf	?_Get_millis+1,w
  9807     0777  00DB               	movwf	??_ModbusRTU_Slave_Poll+5
  9808     0778  0822               	movf	?_Get_millis+2,w
  9809     0779  00DC               	movwf	??_ModbusRTU_Slave_Poll+6
  9810     077A  0823               	movf	?_Get_millis+3,w
  9811     077B  00DD               	movwf	??_ModbusRTU_Slave_Poll+7
  9812     077C  0856               	movf	??_ModbusRTU_Slave_Poll,w
  9813     077D  02DA               	subwf	??_ModbusRTU_Slave_Poll+4,f
  9814     077E  0857               	movf	??_ModbusRTU_Slave_Poll+1,w
  9815     077F  3BDB               	subwfb	??_ModbusRTU_Slave_Poll+5,f
  9816     0780  0858               	movf	??_ModbusRTU_Slave_Poll+2,w
  9817     0781  3BDC               	subwfb	??_ModbusRTU_Slave_Poll+6,f
  9818     0782  0859               	movf	??_ModbusRTU_Slave_Poll+3,w
  9819     0783  3BDD               	subwfb	??_ModbusRTU_Slave_Poll+7,f
  9820     0784  085D               	movf	??_ModbusRTU_Slave_Poll+7,w
  9821     0785  1D03               	btfss	3,2
  9822     0786  2F92               	goto	u2701
  9823     0787  085C               	movf	??_ModbusRTU_Slave_Poll+6,w
  9824     0788  1D03               	btfss	3,2
  9825     0789  2F92               	goto	u2701
  9826     078A  085B               	movf	??_ModbusRTU_Slave_Poll+5,w
  9827     078B  1D03               	btfss	3,2
  9828     078C  2F92               	goto	u2701
  9829     078D  3003               	movlw	3
  9830     078E  025A               	subwf	??_ModbusRTU_Slave_Poll+4,w
  9831     078F  1803               	btfsc	3,0
  9832     0790  2F92               	goto	u2701
  9833     0791  2F93               	goto	u2700
  9834     0792                     u2701:
  9835     0792  2F94               	goto	l3993
  9836     0793                     u2700:
  9837     0793  2F41               	goto	l3973
  9838     0794                     l3993:
  9839                           
  9840                           ;Mobbus_Slave.c: 142:     SES_Modbus.u8lastRec = 0;
  9841     0794  30D3               	movlw	211
  9842     0795  0086               	movwf	6
  9843     0796  3021               	movlw	33
  9844     0797  0087               	movwf	7
  9845     0798  0181               	clrf	1
  9846     0799                     l3995:
  9847                           
  9848                           ;Mobbus_Slave.c: 143:     uint8_t i8state = Modbus_getRxBuff();
  9849     0799  3189  2109  3187   	fcall	_Modbus_getRxBuff
  9850     079C  0020               	movlb	0	; select bank0
  9851     079D  00E0               	movwf	ModbusRTU_Slave_Poll@i8state
  9852     079E                     l3997:
  9853                           
  9854                           ;Mobbus_Slave.c: 144:     SES_Modbus.u8lastError = i8state;
  9855     079E  306D               	movlw	109
  9856     079F  0086               	movwf	6
  9857     07A0  3021               	movlw	33
  9858     07A1  0087               	movwf	7
  9859     07A2  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9860     07A3  0081               	movwf	1
  9861     07A4                     l3999:
  9862                           
  9863                           ;Mobbus_Slave.c: 145:     if (i8state < 7) return i8state;
  9864     07A4  3007               	movlw	7
  9865     07A5  0260               	subwf	ModbusRTU_Slave_Poll@i8state,w
  9866     07A6  1803               	skipnc
  9867     07A7  2FA9               	goto	u2711
  9868     07A8  2FAA               	goto	u2710
  9869     07A9                     u2711:
  9870     07A9  2FAD               	goto	l4005
  9871     07AA                     u2710:
  9872     07AA                     l4001:
  9873     07AA  0020               	movlb	0	; select bank0
  9874     07AB  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9875     07AC  2FFB               	goto	l943
  9876     07AD                     l4005:
  9877                           
  9878                           ;Mobbus_Slave.c: 148:     if (SES_Modbus.au8Buffer[ ID ] != SES_Modbus.u8id) return 0;
  9879     07AD  306A               	movlw	106
  9880     07AE  0086               	movwf	6
  9881     07AF  3021               	movlw	33
  9882     07B0  0087               	movwf	7
  9883     07B1  306A               	movlw	106
  9884     07B2  0084               	movwf	4
  9885     07B3  3021               	movlw	33
  9886     07B4  0085               	movwf	5
  9887     07B5  3104               	addfsr 0,4
  9888     07B6  0800               	movf	0,w
  9889     07B7  0601               	xorwf	1,w
  9890     07B8  1903               	skipnz
  9891     07B9  2FBB               	goto	u2721
  9892     07BA  2FBC               	goto	u2720
  9893     07BB                     u2721:
  9894     07BB  2FBD               	goto	l4011
  9895     07BC                     u2720:
  9896     07BC  2F41               	goto	l3973
  9897     07BD                     l4011:
  9898                           
  9899                           ;Mobbus_Slave.c: 151:     uint8_t u8exception = validateRequest();
  9900     07BD  318A  22AE  3187   	fcall	_validateRequest
  9901     07C0  0020               	movlb	0	; select bank0
  9902     07C1  00E1               	movwf	ModbusRTU_Slave_Poll@u8exception
  9903     07C2                     l4013:
  9904                           
  9905                           ;Mobbus_Slave.c: 152:     if (u8exception > 0) {
  9906     07C2  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9907     07C3  1903               	btfsc	3,2
  9908     07C4  2FC6               	goto	u2731
  9909     07C5  2FC7               	goto	u2730
  9910     07C6                     u2731:
  9911     07C6  2FDC               	goto	l4025
  9912     07C7                     u2730:
  9913     07C7                     l4015:
  9914                           
  9915                           ;Mobbus_Slave.c: 153:         if (u8exception != NO_REPLY) {
  9916     07C7  0A61               	incf	ModbusRTU_Slave_Poll@u8exception,w
  9917     07C8  1903               	btfsc	3,2
  9918     07C9  2FCB               	goto	u2741
  9919     07CA  2FCC               	goto	u2740
  9920     07CB                     u2741:
  9921     07CB  2FD3               	goto	l4019
  9922     07CC                     u2740:
  9923     07CC                     l4017:
  9924                           
  9925                           ;Mobbus_Slave.c: 154:             buildException(u8exception);
  9926     07CC  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9927     07CD  3196  2642  3187   	fcall	_buildException
  9928                           
  9929                           ;Mobbus_Slave.c: 155:             Modbus_sendTxBuff();
  9930     07D0  318D  2519  3187   	fcall	_Modbus_sendTxBuff
  9931     07D3                     l4019:
  9932                           
  9933                           ;Mobbus_Slave.c: 157:         SES_Modbus.u8lastError = u8exception;
  9934     07D3  306D               	movlw	109
  9935     07D4  0086               	movwf	6
  9936     07D5  3021               	movlw	33
  9937     07D6  0087               	movwf	7
  9938     07D7  0020               	movlb	0	; select bank0
  9939     07D8  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9940     07D9  0081               	movwf	1
  9941     07DA                     l4021:
  9942                           
  9943                           ;Mobbus_Slave.c: 158:         return u8exception;
  9944     07DA  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9945     07DB  2FFB               	goto	l943
  9946     07DC                     l4025:
  9947                           
  9948                           ;Mobbus_Slave.c: 161:     SES_Modbus.u32timeOut = Get_millis();
  9949     07DC  3193  23EB  3187   	fcall	_Get_millis
  9950     07DF  30E2               	movlw	226
  9951     07E0  0086               	movwf	6
  9952     07E1  3021               	movlw	33
  9953     07E2  0087               	movwf	7
  9954     07E3  0020               	movlb	0	; select bank0
  9955     07E4  0820               	movf	?_Get_millis,w
  9956     07E5  3FC0               	movwi [0]fsr1
  9957     07E6  0821               	movf	?_Get_millis+1,w
  9958     07E7  3FC1               	movwi [1]fsr1
  9959     07E8  0822               	movf	?_Get_millis+2,w
  9960     07E9  3FC2               	movwi [2]fsr1
  9961     07EA  0823               	movf	?_Get_millis+3,w
  9962     07EB  3FC3               	movwi [3]fsr1
  9963     07EC                     l4027:
  9964                           
  9965                           ;Mobbus_Slave.c: 162:     SES_Modbus.u8lastError = 0;
  9966     07EC  306A               	movlw	106
  9967     07ED  0086               	movwf	6
  9968     07EE  3021               	movlw	33
  9969     07EF  0087               	movwf	7
  9970     07F0  3143               	addfsr 1,3
  9971     07F1  0181               	clrf	1
  9972     07F2                     l4029:
  9973                           
  9974                           ;Mobbus_Slave.c: 164:     ModbusSlaveF04(reg, size);
  9975     07F2  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9976     07F3  00BF               	movwf	ModbusSlaveF04@size+1
  9977     07F4  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9978     07F5  00BE               	movwf	ModbusSlaveF04@size
  9979     07F6  085E               	movf	ModbusRTU_Slave_Poll@reg,w
  9980     07F7  318B  23CA  3187   	fcall	_ModbusSlaveF04
  9981     07FA  2FAA               	goto	l4001
  9982     07FB                     l943:
  9983     07FB  0008               	return
  9984     07FC                     __end_of_ModbusRTU_Slave_Poll:
  9985                           
  9986                           	psect	text43
  9987     0AAE                     __ptext43:	
  9988 ;; *************** function _validateRequest *****************
  9989 ;; Defined at:
  9990 ;;		line 98 in file "Mobbus_Slave.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;		None
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  u16MsgCRC       2   28[BANK0 ] unsigned short 
  9995 ;;  i               1   31[BANK0 ] unsigned char 
  9996 ;;  isSupported     1   30[BANK0 ] _Bool 
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  1    wreg      unsigned char 
  9999 ;; Registers used:
 10000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10006 ;;      Params:         0       0       0       0       0       0       0       0
 10007 ;;      Locals:         0       4       0       0       0       0       0       0
 10008 ;;      Temps:          0      13       0       0       0       0       0       0
 10009 ;;      Totals:         0      17       0       0       0       0       0       0
 10010 ;;Total ram usage:       17 bytes
 10011 ;; Hardware stack levels used: 1
 10012 ;; Hardware stack levels required when called: 8
 10013 ;; This function calls:
 10014 ;;		_Modbus_calcCRC
 10015 ;; This function is called by:
 10016 ;;		_ModbusRTU_Slave_Poll
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020     0AAE                     _validateRequest:	
 10021                           ;psect for function _validateRequest
 10022                           
 10023     0AAE                     l3793:	
 10024                           ;incstack = 0
 10025                           ; Regs used in _validateRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10026                           
 10027                           
 10028                           ;Mobbus_Slave.c: 100:     uint16_t u16MsgCRC = (uint16_t)
 10029     0AAE  30D2               	movlw	210
 10030     0AAF  0086               	movwf	6
 10031     0AB0  3021               	movlw	33
 10032     0AB1  0087               	movwf	7
 10033     0AB2  0801               	movf	1,w
 10034     0AB3  0020               	movlb	0	; select bank0
 10035     0AB4  00AF               	movwf	??_validateRequest
 10036     0AB5  01B0               	clrf	??_validateRequest+1
 10037     0AB6  306D               	movlw	109
 10038     0AB7  00B1               	movwf	??_validateRequest+2
 10039     0AB8  3021               	movlw	33
 10040     0AB9  00B2               	movwf	??_validateRequest+3
 10041     0ABA  082F               	movf	??_validateRequest,w
 10042     0ABB  0731               	addwf	??_validateRequest+2,w
 10043     0ABC  0086               	movwf	6
 10044     0ABD  0830               	movf	??_validateRequest+1,w
 10045     0ABE  3D32               	addwfc	??_validateRequest+3,w
 10046     0ABF  0087               	movwf	7
 10047     0AC0  0801               	movf	1,w
 10048     0AC1  00B3               	movwf	??_validateRequest+4
 10049     0AC2  01B4               	clrf	??_validateRequest+5
 10050     0AC3  30D2               	movlw	210
 10051     0AC4  0086               	movwf	6
 10052     0AC5  3021               	movlw	33
 10053     0AC6  0087               	movwf	7
 10054     0AC7  0801               	movf	1,w
 10055     0AC8  00B5               	movwf	??_validateRequest+6
 10056     0AC9  01B6               	clrf	??_validateRequest+7
 10057     0ACA  306C               	movlw	108
 10058     0ACB  00B7               	movwf	??_validateRequest+8
 10059     0ACC  3021               	movlw	33
 10060     0ACD  00B8               	movwf	??_validateRequest+9
 10061     0ACE  0835               	movf	??_validateRequest+6,w
 10062     0ACF  0737               	addwf	??_validateRequest+8,w
 10063     0AD0  0086               	movwf	6
 10064     0AD1  0836               	movf	??_validateRequest+7,w
 10065     0AD2  3D38               	addwfc	??_validateRequest+9,w
 10066     0AD3  0087               	movwf	7
 10067     0AD4  0801               	movf	1,w
 10068     0AD5  00B9               	movwf	??_validateRequest+10
 10069     0AD6  01BA               	clrf	??_validateRequest+11
 10070     0AD7  0839               	movf	??_validateRequest+10,w
 10071     0AD8  00BA               	movwf	??_validateRequest+11
 10072     0AD9  01B9               	clrf	??_validateRequest+10
 10073     0ADA  0833               	movf	??_validateRequest+4,w
 10074     0ADB  0439               	iorwf	??_validateRequest+10,w
 10075     0ADC  00BC               	movwf	validateRequest@u16MsgCRC
 10076     0ADD  0834               	movf	??_validateRequest+5,w
 10077     0ADE  043A               	iorwf	??_validateRequest+11,w
 10078     0ADF  00BD               	movwf	validateRequest@u16MsgCRC+1
 10079     0AE0                     l3795:
 10080                           
 10081                           ;Mobbus_Slave.c: 103:     if (Modbus_calcCRC(SES_Modbus.u8BufferSize - 2) != u16MsgCRC) 
      +                          {
 10082     0AE0  30D2               	movlw	210
 10083     0AE1  0086               	movwf	6
 10084     0AE2  3021               	movlw	33
 10085     0AE3  0087               	movwf	7
 10086     0AE4  0801               	movf	1,w
 10087     0AE5  3EFE               	addlw	254
 10088     0AE6  3189  2165  318A   	fcall	_Modbus_calcCRC
 10089     0AE9  0020               	movlb	0	; select bank0
 10090     0AEA  083D               	movf	validateRequest@u16MsgCRC+1,w
 10091     0AEB  0621               	xorwf	?_Modbus_calcCRC+1,w
 10092     0AEC  1D03               	skipz
 10093     0AED  2AF0               	goto	u2565
 10094     0AEE  083C               	movf	validateRequest@u16MsgCRC,w
 10095     0AEF  0620               	xorwf	?_Modbus_calcCRC,w
 10096     0AF0                     u2565:
 10097     0AF0  1903               	skipnz
 10098     0AF1  2AF3               	goto	u2561
 10099     0AF2  2AF4               	goto	u2560
 10100     0AF3                     u2561:
 10101     0AF3  2AFF               	goto	l3803
 10102     0AF4                     u2560:
 10103     0AF4                     l3797:
 10104                           
 10105                           ;Mobbus_Slave.c: 104:         SES_Modbus.u16errCnt++;
 10106     0AF4  30DA               	movlw	218
 10107     0AF5  0086               	movwf	6
 10108     0AF6  3021               	movlw	33
 10109     0AF7  0087               	movwf	7
 10110     0AF8  3001               	movlw	1
 10111     0AF9  0781               	addwf	1,f
 10112     0AFA  3141               	addfsr 1,1
 10113     0AFB  1803               	skipnc
 10114     0AFC  0A81               	incf	1,f
 10115     0AFD                     l3799:
 10116                           
 10117                           ;Mobbus_Slave.c: 105:         return NO_REPLY;
 10118     0AFD  30FF               	movlw	255
 10119     0AFE  2B32               	goto	l935
 10120     0AFF                     l3803:
 10121                           
 10122                           ;Mobbus_Slave.c: 109:     _Bool isSupported = 0;
 10123     0AFF  01BE               	clrf	validateRequest@isSupported
 10124                           
 10125                           ;Mobbus_Slave.c: 110:     uint8_t i = 0;
 10126     0B00  01BF               	clrf	validateRequest@i
 10127                           
 10128                           ;Mobbus_Slave.c: 111:     for (i = 0; i< sizeof ( fctsupported); i++) {
 10129     0B01  01BF               	clrf	validateRequest@i
 10130     0B02                     l3809:
 10131                           
 10132                           ;Mobbus_Slave.c: 112:         if (fctsupported[i] == SES_Modbus.au8Buffer[FUNC]) {
 10133     0B02  306A               	movlw	106
 10134     0B03  0086               	movwf	6
 10135     0B04  3021               	movlw	33
 10136     0B05  0087               	movwf	7
 10137     0B06  3145               	addfsr 1,5
 10138     0B07  083F               	movf	validateRequest@i,w
 10139     0B08  3E20               	addlw	low (_fctsupported| (0+32768))
 10140     0B09  0084               	movwf	4
 10141     0B0A  3098               	movlw	high (_fctsupported| (0+32768))
 10142     0B0B  1803               	skipnc
 10143     0B0C  3E01               	addlw	1
 10144     0B0D  0085               	movwf	5
 10145     0B0E  0800               	movf	0,w	;code access
 10146     0B0F  0601               	xorwf	1,w
 10147     0B10  1D03               	skipz
 10148     0B11  2B13               	goto	u2571
 10149     0B12  2B14               	goto	u2570
 10150     0B13                     u2571:
 10151     0B13  2B17               	goto	l3813
 10152     0B14                     u2570:
 10153     0B14                     l3811:
 10154                           
 10155                           ;Mobbus_Slave.c: 113:             isSupported = 1;
 10156     0B14  01BE               	clrf	validateRequest@isSupported
 10157     0B15  0ABE               	incf	validateRequest@isSupported,f
 10158                           
 10159                           ;Mobbus_Slave.c: 114:             break;
 10160     0B16  2B21               	goto	l3817
 10161     0B17                     l3813:
 10162                           
 10163                           ;Mobbus_Slave.c: 116:     }
 10164     0B17  3001               	movlw	1
 10165     0B18  00AF               	movwf	??_validateRequest
 10166     0B19  082F               	movf	??_validateRequest,w
 10167     0B1A  07BF               	addwf	validateRequest@i,f
 10168     0B1B                     l3815:
 10169     0B1B  3008               	movlw	8
 10170     0B1C  023F               	subwf	validateRequest@i,w
 10171     0B1D  1C03               	skipc
 10172     0B1E  2B20               	goto	u2581
 10173     0B1F  2B21               	goto	u2580
 10174     0B20                     u2581:
 10175     0B20  2B02               	goto	l3809
 10176     0B21                     u2580:
 10177     0B21                     l3817:
 10178                           
 10179                           ;Mobbus_Slave.c: 117:     if (!isSupported) {
 10180     0B21  083E               	movf	validateRequest@isSupported,w
 10181     0B22  1D03               	btfss	3,2
 10182     0B23  2B25               	goto	u2591
 10183     0B24  2B26               	goto	u2590
 10184     0B25                     u2591:
 10185     0B25  2B31               	goto	l3825
 10186     0B26                     u2590:
 10187     0B26                     l3819:
 10188                           
 10189                           ;Mobbus_Slave.c: 118:         SES_Modbus.u16errCnt++;
 10190     0B26  30DA               	movlw	218
 10191     0B27  0086               	movwf	6
 10192     0B28  3021               	movlw	33
 10193     0B29  0087               	movwf	7
 10194     0B2A  3001               	movlw	1
 10195     0B2B  0781               	addwf	1,f
 10196     0B2C  3141               	addfsr 1,1
 10197     0B2D  1803               	skipnc
 10198     0B2E  0A81               	incf	1,f
 10199     0B2F                     l3821:
 10200                           
 10201                           ;Mobbus_Slave.c: 119:         return EXC_FUNC_CODE;
 10202     0B2F  3001               	movlw	1
 10203     0B30  2B32               	goto	l935
 10204     0B31                     l3825:
 10205                           
 10206                           ;Mobbus_Slave.c: 122:     return 0;
 10207     0B31  3000               	movlw	0
 10208     0B32                     l935:
 10209     0B32  0008               	return
 10210     0B33                     __end_of_validateRequest:
 10211                           
 10212                           	psect	text44
 10213     1642                     __ptext44:	
 10214 ;; *************** function _buildException *****************
 10215 ;; Defined at:
 10216 ;;		line 64 in file "Mobbus_Slave.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  exception       1    wreg     unsigned char 
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;  exception       1    1[BANK0 ] unsigned char 
 10221 ;;  u8func          1    2[BANK0 ] unsigned char 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10231 ;;      Params:         0       0       0       0       0       0       0       0
 10232 ;;      Locals:         0       2       0       0       0       0       0       0
 10233 ;;      Temps:          0       1       0       0       0       0       0       0
 10234 ;;      Totals:         0       3       0       0       0       0       0       0
 10235 ;;Total ram usage:        3 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; Hardware stack levels required when called: 7
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_ModbusRTU_Slave_Poll
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245     1642                     _buildException:	
 10246                           ;psect for function _buildException
 10247                           
 10248                           
 10249                           ;incstack = 0
 10250                           ; Regs used in _buildException: [wreg+fsr1l+fsr1h+status,2+status,0]
 10251                           ;buildException@exception stored from wreg
 10252     1642  0020               	movlb	0	; select bank0
 10253     1643  00A1               	movwf	buildException@exception
 10254     1644                     l3755:
 10255                           
 10256                           ;Mobbus_Slave.c: 66:     uint8_t u8func = SES_Modbus.au8Buffer[ FUNC ];
 10257     1644  306A               	movlw	106
 10258     1645  0086               	movwf	6
 10259     1646  3021               	movlw	33
 10260     1647  0087               	movwf	7
 10261     1648  3145               	addfsr 1,5
 10262     1649  0801               	movf	1,w
 10263     164A  00A2               	movwf	buildException@u8func
 10264                           
 10265                           ;Mobbus_Slave.c: 68:     SES_Modbus.au8Buffer[ ID ] = SES_Modbus.u8id;
 10266     164B  306A               	movlw	106
 10267     164C  0086               	movwf	6
 10268     164D  3021               	movlw	33
 10269     164E  0087               	movwf	7
 10270     164F  0801               	movf	1,w
 10271     1650  00A0               	movwf	??_buildException
 10272     1651  306E               	movlw	110
 10273     1652  0086               	movwf	6
 10274     1653  3021               	movlw	33
 10275     1654  0087               	movwf	7
 10276     1655  0820               	movf	??_buildException,w
 10277     1656  0081               	movwf	1
 10278     1657                     l3757:
 10279                           
 10280                           ;Mobbus_Slave.c: 69:     SES_Modbus.au8Buffer[ FUNC ] = u8func + 0x80;
 10281     1657  0822               	movf	buildException@u8func,w
 10282     1658  3E80               	addlw	128
 10283     1659  00A0               	movwf	??_buildException
 10284     165A  306F               	movlw	111
 10285     165B  0086               	movwf	6
 10286     165C  3021               	movlw	33
 10287     165D  0087               	movwf	7
 10288     165E  0820               	movf	??_buildException,w
 10289     165F  0081               	movwf	1
 10290     1660                     l3759:
 10291                           
 10292                           ;Mobbus_Slave.c: 70:     SES_Modbus.au8Buffer[ 2 ] = exception;
 10293     1660  3070               	movlw	112
 10294     1661  0086               	movwf	6
 10295     1662  3021               	movlw	33
 10296     1663  0087               	movwf	7
 10297     1664  0821               	movf	buildException@exception,w
 10298     1665  0081               	movwf	1
 10299     1666                     l3761:
 10300                           
 10301                           ;Mobbus_Slave.c: 71:     SES_Modbus.u8BufferSize = EXCEPTION_SIZE;
 10302     1666  30D2               	movlw	210
 10303     1667  0086               	movwf	6
 10304     1668  3021               	movlw	33
 10305     1669  0087               	movwf	7
 10306     166A  3003               	movlw	3
 10307     166B  0081               	movwf	1
 10308     166C                     l922:
 10309     166C  0008               	return
 10310     166D                     __end_of_buildException:
 10311                           
 10312                           	psect	text45
 10313     0909                     __ptext45:	
 10314 ;; *************** function _Modbus_getRxBuff *****************
 10315 ;; Defined at:
 10316 ;;		line 74 in file "Mobbus_Slave.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;  bBuffOverflo    1    9[BANK0 ] _Bool 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      unsigned char 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10330 ;;      Params:         0       0       0       0       0       0       0       0
 10331 ;;      Locals:         0       1       0       0       0       0       0       0
 10332 ;;      Temps:          0       7       0       0       0       0       0       0
 10333 ;;      Totals:         0       8       0       0       0       0       0       0
 10334 ;;Total ram usage:        8 bytes
 10335 ;; Hardware stack levels used: 1
 10336 ;; Hardware stack levels required when called: 8
 10337 ;; This function calls:
 10338 ;;		_EUSART_Read
 10339 ;; This function is called by:
 10340 ;;		_ModbusRTU_Slave_Poll
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344     0909                     _Modbus_getRxBuff:	
 10345                           ;psect for function _Modbus_getRxBuff
 10346                           
 10347     0909                     l3763:	
 10348                           ;incstack = 0
 10349                           ; Regs used in _Modbus_getRxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10350                           
 10351                           
 10352                           ;Mobbus_Slave.c: 75:     _Bool bBuffOverflow = 0;
 10353     0909  0020               	movlb	0	; select bank0
 10354     090A  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10355     090B                     l3767:
 10356                           
 10357                           ;Mobbus_Slave.c: 81:     SES_Modbus.u8BufferSize = 0;
 10358     090B  30D2               	movlw	210
 10359     090C  0086               	movwf	6
 10360     090D  3021               	movlw	33
 10361     090E  0087               	movwf	7
 10362     090F  0181               	clrf	1
 10363                           
 10364                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10365     0910  2941               	goto	l3777
 10366     0911                     l3769:
 10367                           
 10368                           ;Mobbus_Slave.c: 83:         SES_Modbus.au8Buffer [SES_Modbus.u8BufferSize] = EUSART_Rea
      +                          d();
 10369     0911  3195  25C6  3189   	fcall	_EUSART_Read
 10370     0914  0020               	movlb	0	; select bank0
 10371     0915  00A2               	movwf	??_Modbus_getRxBuff
 10372     0916  30D2               	movlw	210
 10373     0917  0086               	movwf	6
 10374     0918  3021               	movlw	33
 10375     0919  0087               	movwf	7
 10376     091A  0801               	movf	1,w
 10377     091B  00A3               	movwf	??_Modbus_getRxBuff+1
 10378     091C  01A4               	clrf	??_Modbus_getRxBuff+2
 10379     091D  306E               	movlw	110
 10380     091E  00A5               	movwf	??_Modbus_getRxBuff+3
 10381     091F  3021               	movlw	33
 10382     0920  00A6               	movwf	??_Modbus_getRxBuff+4
 10383     0921  0823               	movf	??_Modbus_getRxBuff+1,w
 10384     0922  0725               	addwf	??_Modbus_getRxBuff+3,w
 10385     0923  00A7               	movwf	??_Modbus_getRxBuff+5
 10386     0924  0824               	movf	??_Modbus_getRxBuff+2,w
 10387     0925  3D26               	addwfc	??_Modbus_getRxBuff+4,w
 10388     0926  00A8               	movwf	??_Modbus_getRxBuff+6
 10389     0927  0827               	movf	??_Modbus_getRxBuff+5,w
 10390     0928  0086               	movwf	6
 10391     0929  0828               	movf	??_Modbus_getRxBuff+6,w
 10392     092A  0087               	movwf	7
 10393     092B  0822               	movf	??_Modbus_getRxBuff,w
 10394     092C  0081               	movwf	1
 10395     092D                     l3771:
 10396                           
 10397                           ;Mobbus_Slave.c: 84:         SES_Modbus.u8BufferSize++;
 10398     092D  3001               	movlw	1
 10399     092E  00A2               	movwf	??_Modbus_getRxBuff
 10400     092F  30D2               	movlw	210
 10401     0930  0086               	movwf	6
 10402     0931  3021               	movlw	33
 10403     0932  0087               	movwf	7
 10404     0933  0822               	movf	??_Modbus_getRxBuff,w
 10405     0934  0781               	addwf	1,f
 10406     0935                     l3773:
 10407                           
 10408                           ;Mobbus_Slave.c: 86:         if (SES_Modbus.u8BufferSize >= 100) bBuffOverflow = 1;
 10409     0935  30D2               	movlw	210
 10410     0936  0086               	movwf	6
 10411     0937  3021               	movlw	33
 10412     0938  0087               	movwf	7
 10413     0939  3064               	movlw	100
 10414     093A  0201               	subwf	1,w
 10415     093B  1C03               	skipc
 10416     093C  293E               	goto	u2531
 10417     093D  293F               	goto	u2530
 10418     093E                     u2531:
 10419     093E  2941               	goto	l3777
 10420     093F                     u2530:
 10421     093F                     l3775:
 10422     093F  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10423     0940  0AA9               	incf	Modbus_getRxBuff@bBuffOverflow,f
 10424     0941                     l3777:
 10425                           
 10426                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10427     0941  086A               	movf	_eusartRxCount,w	;volatile
 10428     0942  1D03               	btfss	3,2
 10429     0943  2945               	goto	u2541
 10430     0944  2946               	goto	u2540
 10431     0945                     u2541:
 10432     0945  2911               	goto	l3769
 10433     0946                     u2540:
 10434     0946                     l3779:
 10435                           
 10436                           ;Mobbus_Slave.c: 88:     SES_Modbus.u16InCnt++;
 10437     0946  30D6               	movlw	214
 10438     0947  0086               	movwf	6
 10439     0948  3021               	movlw	33
 10440     0949  0087               	movwf	7
 10441     094A  3001               	movlw	1
 10442     094B  0781               	addwf	1,f
 10443     094C  3141               	addfsr 1,1
 10444     094D  1803               	skipnc
 10445     094E  0A81               	incf	1,f
 10446     094F                     l3781:
 10447                           
 10448                           ;Mobbus_Slave.c: 90:     if (bBuffOverflow) {
 10449     094F  0829               	movf	Modbus_getRxBuff@bBuffOverflow,w
 10450     0950  1903               	btfsc	3,2
 10451     0951  2953               	goto	u2551
 10452     0952  2954               	goto	u2550
 10453     0953                     u2551:
 10454     0953  295F               	goto	l3789
 10455     0954                     u2550:
 10456     0954                     l3783:
 10457                           
 10458                           ;Mobbus_Slave.c: 91:         SES_Modbus.u16errCnt++;
 10459     0954  30DA               	movlw	218
 10460     0955  0086               	movwf	6
 10461     0956  3021               	movlw	33
 10462     0957  0087               	movwf	7
 10463     0958  3001               	movlw	1
 10464     0959  0781               	addwf	1,f
 10465     095A  3141               	addfsr 1,1
 10466     095B  1803               	skipnc
 10467     095C  0A81               	incf	1,f
 10468     095D                     l3785:
 10469                           
 10470                           ;Mobbus_Slave.c: 92:         return (uint8_t) ERR_BUFF_OVERFLOW;
 10471     095D  30FD               	movlw	253
 10472     095E  2964               	goto	l931
 10473     095F                     l3789:
 10474                           
 10475                           ;Mobbus_Slave.c: 95:     return SES_Modbus.u8BufferSize;
 10476     095F  30D2               	movlw	210
 10477     0960  0086               	movwf	6
 10478     0961  3021               	movlw	33
 10479     0962  0087               	movwf	7
 10480     0963  0801               	movf	1,w
 10481     0964                     l931:
 10482     0964  0008               	return
 10483     0965                     __end_of_Modbus_getRxBuff:
 10484                           
 10485                           	psect	text46
 10486     15C6                     __ptext46:	
 10487 ;; *************** function _EUSART_Read *****************
 10488 ;; Defined at:
 10489 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  readValue       1    1[BANK0 ] unsigned char 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      unsigned char 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10503 ;;      Params:         0       0       0       0       0       0       0       0
 10504 ;;      Locals:         0       1       0       0       0       0       0       0
 10505 ;;      Temps:          0       1       0       0       0       0       0       0
 10506 ;;      Totals:         0       2       0       0       0       0       0       0
 10507 ;;Total ram usage:        2 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 7
 10510 ;; This function calls:
 10511 ;;		Nothing
 10512 ;; This function is called by:
 10513 ;;		_Modbus_getRxBuff
 10514 ;;		_getch
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518     15C6                     _EUSART_Read:	
 10519                           ;psect for function _EUSART_Read
 10520                           
 10521     15C6                     l3539:	
 10522                           ;incstack = 0
 10523                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10524                           
 10525     15C6                     l3541:	
 10526                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10527                           
 10528                           
 10529                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10530     15C6  0020               	movlb	0	; select bank0
 10531     15C7  086A               	movf	_eusartRxCount,w	;volatile
 10532     15C8  1903               	btfsc	3,2
 10533     15C9  2DCB               	goto	u2371
 10534     15CA  2DCC               	goto	u2370
 10535     15CB                     u2371:
 10536     15CB  2DC6               	goto	l3541
 10537     15CC                     u2370:
 10538     15CC                     l3543:
 10539                           
 10540                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10541     15CC  086B               	movf	_eusartRxTail,w	;volatile
 10542     15CD  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10543     15CE  0086               	movwf	6
 10544     15CF  3001               	movlw	1	; select bank2/3
 10545     15D0  0087               	movwf	7
 10546     15D1  0801               	movf	1,w
 10547     15D2  00FD               	movwf	_eusartRxLastError	;volatile
 10548                           
 10549                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10550     15D3  086B               	movf	_eusartRxTail,w
 10551     15D4  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10552     15D5  0086               	movwf	6
 10553     15D6  3001               	movlw	1	; select bank2/3
 10554     15D7  0087               	movwf	7
 10555     15D8  0801               	movf	1,w
 10556     15D9  00A1               	movwf	EUSART_Read@readValue
 10557     15DA                     l3545:
 10558     15DA  3001               	movlw	1
 10559     15DB  00A0               	movwf	??_EUSART_Read
 10560     15DC  0820               	movf	??_EUSART_Read,w
 10561     15DD  07EB               	addwf	_eusartRxTail,f	;volatile
 10562     15DE                     l3547:
 10563                           
 10564                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10565     15DE  3008               	movlw	8
 10566     15DF  026B               	subwf	_eusartRxTail,w	;volatile
 10567     15E0  1C03               	skipc
 10568     15E1  2DE3               	goto	u2381
 10569     15E2  2DE4               	goto	u2380
 10570     15E3                     u2381:
 10571     15E3  2DE5               	goto	l3551
 10572     15E4                     u2380:
 10573     15E4                     l3549:
 10574                           
 10575                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10576     15E4  01EB               	clrf	_eusartRxTail	;volatile
 10577     15E5                     l3551:
 10578                           
 10579                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10580     15E5  0021               	movlb	1	; select bank1
 10581     15E6  1291               	bcf	17,5	;volatile
 10582     15E7                     l3553:
 10583                           
 10584                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10585     15E7  3001               	movlw	1
 10586     15E8  0020               	movlb	0	; select bank0
 10587     15E9  02EA               	subwf	_eusartRxCount,f	;volatile
 10588     15EA                     l3555:
 10589                           
 10590                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10591     15EA  0021               	movlb	1	; select bank1
 10592     15EB  1691               	bsf	17,5	;volatile
 10593     15EC                     l3557:
 10594                           
 10595                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10596     15EC  0020               	movlb	0	; select bank0
 10597     15ED  0821               	movf	EUSART_Read@readValue,w
 10598     15EE                     l298:
 10599     15EE  0008               	return
 10600     15EF                     __end_of_EUSART_Read:
 10601                           
 10602                           	psect	text47
 10603     0BCA                     __ptext47:	
 10604 ;; *************** function _ModbusSlaveF04 *****************
 10605 ;; Defined at:
 10606 ;;		line 36 in file "Mobbus_Slave.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  reg             1    wreg     PTR unsigned short 
 10609 ;;		 -> MB_Register(4), 
 10610 ;;  size            2   30[BANK0 ] unsigned short 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  reg             1   45[BANK0 ] PTR unsigned short 
 10613 ;;		 -> MB_Register(4), 
 10614 ;;  i               2   50[BANK0 ] unsigned short 
 10615 ;;  valueRegsno     2   48[BANK0 ] struct .
 10616 ;;  valueAdd        2   46[BANK0 ] struct .
 10617 ;;  u8StartAdd      2   42[BANK0 ] unsigned short 
 10618 ;;  u8regsno        1   44[BANK0 ] unsigned char 
 10619 ;;  u8CopyBuffer    1    0        unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      unsigned char 
 10622 ;; Registers used:
 10623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10629 ;;      Params:         0       2       0       0       0       0       0       0
 10630 ;;      Locals:         0      10       0       0       0       0       0       0
 10631 ;;      Temps:          0      10       0       0       0       0       0       0
 10632 ;;      Totals:         0      22       0       0       0       0       0       0
 10633 ;;Total ram usage:       22 bytes
 10634 ;; Hardware stack levels used: 1
 10635 ;; Hardware stack levels required when called: 9
 10636 ;; This function calls:
 10637 ;;		_Modbus_sendTxBuff
 10638 ;; This function is called by:
 10639 ;;		_ModbusRTU_Slave_Poll
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643     0BCA                     _ModbusSlaveF04:	
 10644                           ;psect for function _ModbusSlaveF04
 10645                           
 10646                           
 10647                           ;incstack = 0
 10648                           ; Regs used in _ModbusSlaveF04: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10649                           ;ModbusSlaveF04@reg stored from wreg
 10650     0BCA  0020               	movlb	0	; select bank0
 10651     0BCB  00CD               	movwf	ModbusSlaveF04@reg
 10652     0BCC                     l3727:
 10653                           
 10654                           ;Mobbus_Slave.c: 37:     VALUE16 valueAdd, valueRegsno;;Mobbus_Slave.c: 38:     valueAdd
      +                          ._Byte[1] = SES_Modbus.au8Buffer[ADD_HI];
 10655     0BCC  306A               	movlw	106
 10656     0BCD  0086               	movwf	6
 10657     0BCE  3021               	movlw	33
 10658     0BCF  0087               	movwf	7
 10659     0BD0  3146               	addfsr 1,6
 10660     0BD1  0801               	movf	1,w
 10661     0BD2  00CF               	movwf	ModbusSlaveF04@valueAdd+1
 10662                           
 10663                           ;Mobbus_Slave.c: 39:     valueAdd._Byte[0] = SES_Modbus.au8Buffer[ADD_LO];
 10664     0BD3  306A               	movlw	106
 10665     0BD4  0086               	movwf	6
 10666     0BD5  3021               	movlw	33
 10667     0BD6  0087               	movwf	7
 10668     0BD7  3147               	addfsr 1,7
 10669     0BD8  0801               	movf	1,w
 10670     0BD9  00CE               	movwf	ModbusSlaveF04@valueAdd
 10671     0BDA                     l3729:
 10672                           
 10673                           ;Mobbus_Slave.c: 40:     uint16_t u8StartAdd = (uint16_t) valueAdd.Val16;
 10674     0BDA  084F               	movf	ModbusSlaveF04@valueAdd+1,w
 10675     0BDB  00CB               	movwf	ModbusSlaveF04@u8StartAdd+1
 10676     0BDC  084E               	movf	ModbusSlaveF04@valueAdd,w
 10677     0BDD  00CA               	movwf	ModbusSlaveF04@u8StartAdd
 10678     0BDE                     l3731:
 10679                           
 10680                           ;Mobbus_Slave.c: 42:     valueRegsno._Byte[1] = SES_Modbus.au8Buffer[ NB_HI];
 10681     0BDE  306A               	movlw	106
 10682     0BDF  0086               	movwf	6
 10683     0BE0  3021               	movlw	33
 10684     0BE1  0087               	movwf	7
 10685     0BE2  3148               	addfsr 1,8
 10686     0BE3  0801               	movf	1,w
 10687     0BE4  00D1               	movwf	ModbusSlaveF04@valueRegsno+1
 10688     0BE5                     l3733:
 10689                           
 10690                           ;Mobbus_Slave.c: 43:     valueRegsno._Byte[0] = SES_Modbus.au8Buffer[ NB_LO];
 10691     0BE5  306A               	movlw	106
 10692     0BE6  0086               	movwf	6
 10693     0BE7  3021               	movlw	33
 10694     0BE8  0087               	movwf	7
 10695     0BE9  3149               	addfsr 1,9
 10696     0BEA  0801               	movf	1,w
 10697     0BEB  00D0               	movwf	ModbusSlaveF04@valueRegsno
 10698     0BEC                     l3735:
 10699                           
 10700                           ;Mobbus_Slave.c: 44:     uint8_t u8regsno = (uint8_t) valueRegsno.Val16;
 10701     0BEC  0850               	movf	ModbusSlaveF04@valueRegsno,w
 10702     0BED  00CC               	movwf	ModbusSlaveF04@u8regsno
 10703     0BEE                     l3737:
 10704                           
 10705                           ;Mobbus_Slave.c: 46:     uint8_t u8CopyBufferSize;;Mobbus_Slave.c: 47:     uint16_t i;;M
      +                          obbus_Slave.c: 49:     SES_Modbus.au8Buffer[ 2 ] = u8regsno * 2;
 10706     0BEE  354C               	lslf	ModbusSlaveF04@u8regsno,w
 10707     0BEF  00C0               	movwf	??_ModbusSlaveF04
 10708     0BF0  3070               	movlw	112
 10709     0BF1  0086               	movwf	6
 10710     0BF2  3021               	movlw	33
 10711     0BF3  0087               	movwf	7
 10712     0BF4  0840               	movf	??_ModbusSlaveF04,w
 10713     0BF5  0081               	movwf	1
 10714     0BF6                     l3739:
 10715                           
 10716                           ;Mobbus_Slave.c: 50:     SES_Modbus.u8BufferSize = 3;
 10717     0BF6  30D2               	movlw	210
 10718     0BF7  0086               	movwf	6
 10719     0BF8  3021               	movlw	33
 10720     0BF9  0087               	movwf	7
 10721     0BFA  3003               	movlw	3
 10722     0BFB  0081               	movwf	1
 10723     0BFC                     l3741:
 10724                           
 10725                           ;Mobbus_Slave.c: 52:     for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++) {
 10726     0BFC  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10727     0BFD  00D3               	movwf	ModbusSlaveF04@i+1
 10728     0BFE  084A               	movf	ModbusSlaveF04@u8StartAdd,w
 10729     0BFF  00D2               	movwf	ModbusSlaveF04@i
 10730     0C00  2C59               	goto	l3747
 10731     0C01                     l3743:
 10732                           
 10733                           ;Mobbus_Slave.c: 53:         SES_Modbus.au8Buffer[SES_Modbus.u8BufferSize ] = ((uint8_t)
      +                           ((reg[i]) >> 8));
 10734     0C01  3552               	lslf	ModbusSlaveF04@i,w
 10735     0C02  074D               	addwf	ModbusSlaveF04@reg,w
 10736     0C03  00C0               	movwf	??_ModbusSlaveF04
 10737     0C04  0840               	movf	??_ModbusSlaveF04,w
 10738     0C05  0086               	movwf	6
 10739     0C06  3001               	movlw	1	; select bank2/3
 10740     0C07  0087               	movwf	7
 10741     0C08  3F40               	moviw [0]fsr1
 10742     0C09  00C1               	movwf	??_ModbusSlaveF04+1
 10743     0C0A  3F41               	moviw [1]fsr1
 10744     0C0B  00C2               	movwf	??_ModbusSlaveF04+2
 10745     0C0C  0842               	movf	??_ModbusSlaveF04+2,w
 10746     0C0D  00C3               	movwf	??_ModbusSlaveF04+3
 10747     0C0E  30D2               	movlw	210
 10748     0C0F  0086               	movwf	6
 10749     0C10  3021               	movlw	33
 10750     0C11  0087               	movwf	7
 10751     0C12  0801               	movf	1,w
 10752     0C13  00C4               	movwf	??_ModbusSlaveF04+4
 10753     0C14  01C5               	clrf	??_ModbusSlaveF04+5
 10754     0C15  306E               	movlw	110
 10755     0C16  00C6               	movwf	??_ModbusSlaveF04+6
 10756     0C17  3021               	movlw	33
 10757     0C18  00C7               	movwf	??_ModbusSlaveF04+7
 10758     0C19  0844               	movf	??_ModbusSlaveF04+4,w
 10759     0C1A  0746               	addwf	??_ModbusSlaveF04+6,w
 10760     0C1B  00C8               	movwf	??_ModbusSlaveF04+8
 10761     0C1C  0845               	movf	??_ModbusSlaveF04+5,w
 10762     0C1D  3D47               	addwfc	??_ModbusSlaveF04+7,w
 10763     0C1E  00C9               	movwf	??_ModbusSlaveF04+9
 10764     0C1F  0848               	movf	??_ModbusSlaveF04+8,w
 10765     0C20  0086               	movwf	6
 10766     0C21  0849               	movf	??_ModbusSlaveF04+9,w
 10767     0C22  0087               	movwf	7
 10768     0C23  0843               	movf	??_ModbusSlaveF04+3,w
 10769     0C24  0081               	movwf	1
 10770                           
 10771                           ;Mobbus_Slave.c: 54:         SES_Modbus.u8BufferSize++;
 10772     0C25  3001               	movlw	1
 10773     0C26  00C0               	movwf	??_ModbusSlaveF04
 10774     0C27  30D2               	movlw	210
 10775     0C28  0086               	movwf	6
 10776     0C29  3021               	movlw	33
 10777     0C2A  0087               	movwf	7
 10778     0C2B  0840               	movf	??_ModbusSlaveF04,w
 10779     0C2C  0781               	addwf	1,f
 10780                           
 10781                           ;Mobbus_Slave.c: 55:         SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = ((uint8_t
      +                          ) ((reg[i]) & 0xff));
 10782     0C2D  3552               	lslf	ModbusSlaveF04@i,w
 10783     0C2E  074D               	addwf	ModbusSlaveF04@reg,w
 10784     0C2F  00C0               	movwf	??_ModbusSlaveF04
 10785     0C30  0840               	movf	??_ModbusSlaveF04,w
 10786     0C31  0086               	movwf	6
 10787     0C32  3001               	movlw	1	; select bank2/3
 10788     0C33  0087               	movwf	7
 10789     0C34  0801               	movf	1,w
 10790     0C35  00C1               	movwf	??_ModbusSlaveF04+1
 10791     0C36  30D2               	movlw	210
 10792     0C37  0086               	movwf	6
 10793     0C38  3021               	movlw	33
 10794     0C39  0087               	movwf	7
 10795     0C3A  0801               	movf	1,w
 10796     0C3B  00C2               	movwf	??_ModbusSlaveF04+2
 10797     0C3C  01C3               	clrf	??_ModbusSlaveF04+3
 10798     0C3D  306E               	movlw	110
 10799     0C3E  00C4               	movwf	??_ModbusSlaveF04+4
 10800     0C3F  3021               	movlw	33
 10801     0C40  00C5               	movwf	??_ModbusSlaveF04+5
 10802     0C41  0842               	movf	??_ModbusSlaveF04+2,w
 10803     0C42  0744               	addwf	??_ModbusSlaveF04+4,w
 10804     0C43  00C6               	movwf	??_ModbusSlaveF04+6
 10805     0C44  0843               	movf	??_ModbusSlaveF04+3,w
 10806     0C45  3D45               	addwfc	??_ModbusSlaveF04+5,w
 10807     0C46  00C7               	movwf	??_ModbusSlaveF04+7
 10808     0C47  0846               	movf	??_ModbusSlaveF04+6,w
 10809     0C48  0086               	movwf	6
 10810     0C49  0847               	movf	??_ModbusSlaveF04+7,w
 10811     0C4A  0087               	movwf	7
 10812     0C4B  0841               	movf	??_ModbusSlaveF04+1,w
 10813     0C4C  0081               	movwf	1
 10814                           
 10815                           ;Mobbus_Slave.c: 56:         SES_Modbus.u8BufferSize++;
 10816     0C4D  3001               	movlw	1
 10817     0C4E  00C0               	movwf	??_ModbusSlaveF04
 10818     0C4F  30D2               	movlw	210
 10819     0C50  0086               	movwf	6
 10820     0C51  3021               	movlw	33
 10821     0C52  0087               	movwf	7
 10822     0C53  0840               	movf	??_ModbusSlaveF04,w
 10823     0C54  0781               	addwf	1,f
 10824     0C55                     l3745:
 10825                           
 10826                           ;Mobbus_Slave.c: 57:     }
 10827     0C55  3001               	movlw	1
 10828     0C56  07D2               	addwf	ModbusSlaveF04@i,f
 10829     0C57  3000               	movlw	0
 10830     0C58  3DD3               	addwfc	ModbusSlaveF04@i+1,f
 10831     0C59                     l3747:
 10832     0C59  084C               	movf	ModbusSlaveF04@u8regsno,w
 10833     0C5A  074A               	addwf	ModbusSlaveF04@u8StartAdd,w
 10834     0C5B  00C0               	movwf	??_ModbusSlaveF04
 10835     0C5C  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10836     0C5D  1803               	skipnc
 10837     0C5E  0A4B               	incf	ModbusSlaveF04@u8StartAdd+1,w
 10838     0C5F  00C1               	movwf	??_ModbusSlaveF04+1
 10839     0C60  0841               	movf	??_ModbusSlaveF04+1,w
 10840     0C61  0253               	subwf	ModbusSlaveF04@i+1,w
 10841     0C62  1D03               	skipz
 10842     0C63  2C66               	goto	u2525
 10843     0C64  0840               	movf	??_ModbusSlaveF04,w
 10844     0C65  0252               	subwf	ModbusSlaveF04@i,w
 10845     0C66                     u2525:
 10846     0C66  1C03               	skipc
 10847     0C67  2C69               	goto	u2521
 10848     0C68  2C6A               	goto	u2520
 10849     0C69                     u2521:
 10850     0C69  2C01               	goto	l3743
 10851     0C6A                     u2520:
 10852     0C6A                     l3749:
 10853     0C6A                     l3751:
 10854                           
 10855                           ;Mobbus_Slave.c: 59:     Modbus_sendTxBuff();
 10856     0C6A  318D  2519  318B   	fcall	_Modbus_sendTxBuff
 10857     0C6D                     l919:
 10858     0C6D  0008               	return
 10859     0C6E                     __end_of_ModbusSlaveF04:
 10860                           
 10861                           	psect	text48
 10862     0D19                     __ptext48:	
 10863 ;; *************** function _Modbus_sendTxBuff *****************
 10864 ;; Defined at:
 10865 ;;		line 169 in file "Mobbus_Slave.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;		None
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  u32overTimec    4   26[BANK0 ] volatile unsigned long 
 10870 ;;  index           2   24[BANK0 ] int 
 10871 ;;  u16crc          2   22[BANK0 ] unsigned short 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10881 ;;      Params:         0       0       0       0       0       0       0       0
 10882 ;;      Locals:         0       8       0       0       0       0       0       0
 10883 ;;      Temps:          0       7       0       0       0       0       0       0
 10884 ;;      Totals:         0      15       0       0       0       0       0       0
 10885 ;;Total ram usage:       15 bytes
 10886 ;; Hardware stack levels used: 1
 10887 ;; Hardware stack levels required when called: 8
 10888 ;; This function calls:
 10889 ;;		_EUSART_Write
 10890 ;;		_EUSART_is_tx_done
 10891 ;;		_Get_millis
 10892 ;;		_Modbus_calcCRC
 10893 ;; This function is called by:
 10894 ;;		_ModbusSlaveF04
 10895 ;;		_ModbusRTU_Slave_Poll
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899     0D19                     _Modbus_sendTxBuff:	
 10900                           ;psect for function _Modbus_sendTxBuff
 10901                           
 10902     0D19                     l3607:	
 10903                           ;incstack = 0
 10904                           ; Regs used in _Modbus_sendTxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10905                           
 10906                           
 10907                           ;Mobbus_Slave.c: 170:     uint16_t u16crc = Modbus_calcCRC(SES_Modbus.u8BufferSize);
 10908     0D19  30D2               	movlw	210
 10909     0D1A  0086               	movwf	6
 10910     0D1B  3021               	movlw	33
 10911     0D1C  0087               	movwf	7
 10912     0D1D  0801               	movf	1,w
 10913     0D1E  3189  2165  318D   	fcall	_Modbus_calcCRC
 10914     0D21  0020               	movlb	0	; select bank0
 10915     0D22  0821               	movf	?_Modbus_calcCRC+1,w
 10916     0D23  00B7               	movwf	Modbus_sendTxBuff@u16crc+1
 10917     0D24  0820               	movf	?_Modbus_calcCRC,w
 10918     0D25  00B6               	movwf	Modbus_sendTxBuff@u16crc
 10919     0D26                     l3609:
 10920                           
 10921                           ;Mobbus_Slave.c: 171:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc >> 8;
 10922     0D26  0837               	movf	Modbus_sendTxBuff@u16crc+1,w
 10923     0D27  00AF               	movwf	??_Modbus_sendTxBuff
 10924     0D28  30D2               	movlw	210
 10925     0D29  0086               	movwf	6
 10926     0D2A  3021               	movlw	33
 10927     0D2B  0087               	movwf	7
 10928     0D2C  0801               	movf	1,w
 10929     0D2D  00B0               	movwf	??_Modbus_sendTxBuff+1
 10930     0D2E  01B1               	clrf	??_Modbus_sendTxBuff+2
 10931     0D2F  306E               	movlw	110
 10932     0D30  00B2               	movwf	??_Modbus_sendTxBuff+3
 10933     0D31  3021               	movlw	33
 10934     0D32  00B3               	movwf	??_Modbus_sendTxBuff+4
 10935     0D33  0830               	movf	??_Modbus_sendTxBuff+1,w
 10936     0D34  0732               	addwf	??_Modbus_sendTxBuff+3,w
 10937     0D35  00B4               	movwf	??_Modbus_sendTxBuff+5
 10938     0D36  0831               	movf	??_Modbus_sendTxBuff+2,w
 10939     0D37  3D33               	addwfc	??_Modbus_sendTxBuff+4,w
 10940     0D38  00B5               	movwf	??_Modbus_sendTxBuff+6
 10941     0D39  0834               	movf	??_Modbus_sendTxBuff+5,w
 10942     0D3A  0086               	movwf	6
 10943     0D3B  0835               	movf	??_Modbus_sendTxBuff+6,w
 10944     0D3C  0087               	movwf	7
 10945     0D3D  082F               	movf	??_Modbus_sendTxBuff,w
 10946     0D3E  0081               	movwf	1
 10947     0D3F                     l3611:
 10948                           
 10949                           ;Mobbus_Slave.c: 172:     SES_Modbus.u8BufferSize++;
 10950     0D3F  3001               	movlw	1
 10951     0D40  00AF               	movwf	??_Modbus_sendTxBuff
 10952     0D41  30D2               	movlw	210
 10953     0D42  0086               	movwf	6
 10954     0D43  3021               	movlw	33
 10955     0D44  0087               	movwf	7
 10956     0D45  082F               	movf	??_Modbus_sendTxBuff,w
 10957     0D46  0781               	addwf	1,f
 10958     0D47                     l3613:
 10959                           
 10960                           ;Mobbus_Slave.c: 173:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc & 0x0
      +                          0ff;
 10961     0D47  30D2               	movlw	210
 10962     0D48  0086               	movwf	6
 10963     0D49  3021               	movlw	33
 10964     0D4A  0087               	movwf	7
 10965     0D4B  0801               	movf	1,w
 10966     0D4C  00AF               	movwf	??_Modbus_sendTxBuff
 10967     0D4D  01B0               	clrf	??_Modbus_sendTxBuff+1
 10968     0D4E  306E               	movlw	110
 10969     0D4F  00B1               	movwf	??_Modbus_sendTxBuff+2
 10970     0D50  3021               	movlw	33
 10971     0D51  00B2               	movwf	??_Modbus_sendTxBuff+3
 10972     0D52  082F               	movf	??_Modbus_sendTxBuff,w
 10973     0D53  0731               	addwf	??_Modbus_sendTxBuff+2,w
 10974     0D54  00B3               	movwf	??_Modbus_sendTxBuff+4
 10975     0D55  0830               	movf	??_Modbus_sendTxBuff+1,w
 10976     0D56  3D32               	addwfc	??_Modbus_sendTxBuff+3,w
 10977     0D57  00B4               	movwf	??_Modbus_sendTxBuff+5
 10978     0D58  0833               	movf	??_Modbus_sendTxBuff+4,w
 10979     0D59  0086               	movwf	6
 10980     0D5A  0834               	movf	??_Modbus_sendTxBuff+5,w
 10981     0D5B  0087               	movwf	7
 10982     0D5C  0836               	movf	Modbus_sendTxBuff@u16crc,w
 10983     0D5D  0081               	movwf	1
 10984     0D5E                     l3615:
 10985                           
 10986                           ;Mobbus_Slave.c: 174:     SES_Modbus.u8BufferSize++;
 10987     0D5E  3001               	movlw	1
 10988     0D5F  00AF               	movwf	??_Modbus_sendTxBuff
 10989     0D60  30D2               	movlw	210
 10990     0D61  0086               	movwf	6
 10991     0D62  3021               	movlw	33
 10992     0D63  0087               	movwf	7
 10993     0D64  082F               	movf	??_Modbus_sendTxBuff,w
 10994     0D65  0781               	addwf	1,f
 10995     0D66                     l3617:
 10996                           
 10997                           ;Mobbus_Slave.c: 177:     if (SES_Modbus.u8txenpin > 1) {
 10998     0D66  306A               	movlw	106
 10999     0D67  0086               	movwf	6
 11000     0D68  3021               	movlw	33
 11001     0D69  0087               	movwf	7
 11002     0D6A  3141               	addfsr 1,1
 11003     0D6B  3002               	movlw	2
 11004     0D6C  0201               	subwf	1,w
 11005     0D6D  1C03               	skipc
 11006     0D6E  2D70               	goto	u2431
 11007     0D6F  2D71               	goto	u2430
 11008     0D70                     u2431:
 11009     0D70  2D73               	goto	l3619
 11010     0D71                     u2430:
 11011     0D71                     l953:	
 11012                           ;Mobbus_Slave.c: 178:         do { LATCbits.LATC5 = 1; } while(0);
 11013                           
 11014     0D71  0022               	movlb	2	; select bank2
 11015     0D72  168E               	bsf	14,5	;volatile
 11016     0D73                     l3619:
 11017                           
 11018                           ;Mobbus_Slave.c: 184:     for (int index = 0; index < SES_Modbus.u8BufferSize; index++) 
      +                          {
 11019     0D73  0020               	movlb	0	; select bank0
 11020     0D74  01B8               	clrf	Modbus_sendTxBuff@index
 11021     0D75  01B9               	clrf	Modbus_sendTxBuff@index+1
 11022     0D76  2D8B               	goto	l3625
 11023     0D77                     l3621:
 11024                           
 11025                           ;Mobbus_Slave.c: 185:         EUSART_Write(SES_Modbus.au8Buffer[index]);
 11026     0D77  306E               	movlw	110
 11027     0D78  0020               	movlb	0	; select bank0
 11028     0D79  00AF               	movwf	??_Modbus_sendTxBuff
 11029     0D7A  3021               	movlw	33
 11030     0D7B  00B0               	movwf	??_Modbus_sendTxBuff+1
 11031     0D7C  0838               	movf	Modbus_sendTxBuff@index,w
 11032     0D7D  072F               	addwf	??_Modbus_sendTxBuff,w
 11033     0D7E  0086               	movwf	6
 11034     0D7F  0839               	movf	Modbus_sendTxBuff@index+1,w
 11035     0D80  3D30               	addwfc	??_Modbus_sendTxBuff+1,w
 11036     0D81  0087               	movwf	7
 11037     0D82  0801               	movf	1,w
 11038     0D83  3196  2618  318D   	fcall	_EUSART_Write
 11039     0D86                     l3623:
 11040                           
 11041                           ;Mobbus_Slave.c: 186:     }
 11042     0D86  3001               	movlw	1
 11043     0D87  0020               	movlb	0	; select bank0
 11044     0D88  07B8               	addwf	Modbus_sendTxBuff@index,f
 11045     0D89  3000               	movlw	0
 11046     0D8A  3DB9               	addwfc	Modbus_sendTxBuff@index+1,f
 11047     0D8B                     l3625:
 11048     0D8B  30D2               	movlw	210
 11049     0D8C  0086               	movwf	6
 11050     0D8D  3021               	movlw	33
 11051     0D8E  0087               	movwf	7
 11052     0D8F  0839               	movf	Modbus_sendTxBuff@index+1,w
 11053     0D90  3A80               	xorlw	128
 11054     0D91  00AF               	movwf	??_Modbus_sendTxBuff
 11055     0D92  3080               	movlw	128
 11056     0D93  022F               	subwf	??_Modbus_sendTxBuff,w
 11057     0D94  1D03               	skipz
 11058     0D95  2D98               	goto	u2445
 11059     0D96  0801               	movf	1,w
 11060     0D97  0238               	subwf	Modbus_sendTxBuff@index,w
 11061     0D98                     u2445:
 11062     0D98  1C03               	skipc
 11063     0D99  2D9B               	goto	u2441
 11064     0D9A  2D9C               	goto	u2440
 11065     0D9B                     u2441:
 11066     0D9B  2D77               	goto	l3621
 11067     0D9C                     u2440:
 11068     0D9C                     l3627:
 11069                           
 11070                           ;Mobbus_Slave.c: 188:     if (SES_Modbus.u8txenpin > 1) {
 11071     0D9C  306A               	movlw	106
 11072     0D9D  0086               	movwf	6
 11073     0D9E  3021               	movlw	33
 11074     0D9F  0087               	movwf	7
 11075     0DA0  3141               	addfsr 1,1
 11076     0DA1  3002               	movlw	2
 11077     0DA2  0201               	subwf	1,w
 11078     0DA3  1C03               	skipc
 11079     0DA4  2DA6               	goto	u2451
 11080     0DA5  2DA7               	goto	u2450
 11081     0DA6                     u2451:
 11082     0DA6  2DDD               	goto	l3637
 11083     0DA7                     u2450:
 11084     0DA7                     l3631:
 11085     0DA7  3192  224C  318D   	fcall	_EUSART_is_tx_done
 11086     0DAA  3A00               	xorlw	0
 11087     0DAB  1903               	skipnz
 11088     0DAC  2DAE               	goto	u2461
 11089     0DAD  2DAF               	goto	u2460
 11090     0DAE                     u2461:
 11091     0DAE  2DA7               	goto	l3631
 11092     0DAF                     u2460:
 11093     0DAF                     l3633:
 11094                           
 11095                           ;Mobbus_Slave.c: 196:         volatile uint32_t u32overTimecountDown = SES_Modbus.u32ove
      +                          rTime;
 11096     0DAF  30E6               	movlw	230
 11097     0DB0  0086               	movwf	6
 11098     0DB1  3021               	movlw	33
 11099     0DB2  0087               	movwf	7
 11100     0DB3  3F40               	moviw [0]fsr1
 11101     0DB4  0020               	movlb	0	; select bank0
 11102     0DB5  00BA               	movwf	Modbus_sendTxBuff@u32overTimecountDown	;volatile
 11103     0DB6  3F41               	moviw [1]fsr1
 11104     0DB7  00BB               	movwf	Modbus_sendTxBuff@u32overTimecountDown+1	;volatile
 11105     0DB8  3F42               	moviw [2]fsr1
 11106     0DB9  00BC               	movwf	Modbus_sendTxBuff@u32overTimecountDown+2	;volatile
 11107     0DBA  3F43               	moviw [3]fsr1
 11108     0DBB  00BD               	movwf	Modbus_sendTxBuff@u32overTimecountDown+3	;volatile
 11109     0DBC                     l3635:	
 11110                           ;Mobbus_Slave.c: 198:         while (u32overTimecountDown-- > 0);
 11111                           
 11112     0DBC  3001               	movlw	1
 11113     0DBD  0020               	movlb	0	; select bank0
 11114     0DBE  00AF               	movwf	??_Modbus_sendTxBuff
 11115     0DBF  3000               	movlw	0
 11116     0DC0  00B0               	movwf	??_Modbus_sendTxBuff+1
 11117     0DC1  3000               	movlw	0
 11118     0DC2  00B1               	movwf	??_Modbus_sendTxBuff+2
 11119     0DC3  3000               	movlw	0
 11120     0DC4  00B2               	movwf	??_Modbus_sendTxBuff+3
 11121     0DC5  082F               	movf	??_Modbus_sendTxBuff,w
 11122     0DC6  02BA               	subwf	Modbus_sendTxBuff@u32overTimecountDown,f	;volatile
 11123     0DC7  0830               	movf	??_Modbus_sendTxBuff+1,w
 11124     0DC8  3BBB               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+1,f	;volatile
 11125     0DC9  0831               	movf	??_Modbus_sendTxBuff+2,w
 11126     0DCA  3BBC               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+2,f	;volatile
 11127     0DCB  0832               	movf	??_Modbus_sendTxBuff+3,w
 11128     0DCC  3BBD               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+3,f	;volatile
 11129     0DCD  0A3A               	incf	Modbus_sendTxBuff@u32overTimecountDown,w	;volatile
 11130     0DCE  1D03               	skipz
 11131     0DCF  2DDA               	goto	u2471
 11132     0DD0  0A3B               	incf	Modbus_sendTxBuff@u32overTimecountDown+1,w	;volatile
 11133     0DD1  1D03               	skipz
 11134     0DD2  2DDA               	goto	u2471
 11135     0DD3  0A3C               	incf	Modbus_sendTxBuff@u32overTimecountDown+2,w	;volatile
 11136     0DD4  1D03               	skipz
 11137     0DD5  2DDA               	goto	u2471
 11138     0DD6  0A3D               	incf	Modbus_sendTxBuff@u32overTimecountDown+3,w	;volatile
 11139     0DD7  1D03               	btfss	3,2
 11140     0DD8  2DDA               	goto	u2471
 11141     0DD9  2DDB               	goto	u2470
 11142     0DDA                     u2471:
 11143     0DDA  2DBC               	goto	l3635
 11144     0DDB                     u2470:
 11145     0DDB                     l965:	
 11146                           ;Mobbus_Slave.c: 199:         do { LATCbits.LATC5 = 0; } while(0);
 11147                           
 11148     0DDB  0022               	movlb	2	; select bank2
 11149     0DDC  128E               	bcf	14,5	;volatile
 11150     0DDD                     l3637:
 11151                           
 11152                           ;Mobbus_Slave.c: 202:     SES_Modbus.u8BufferSize = 0;
 11153     0DDD  30D2               	movlw	210
 11154     0DDE  0086               	movwf	6
 11155     0DDF  3021               	movlw	33
 11156     0DE0  0087               	movwf	7
 11157     0DE1  0181               	clrf	1
 11158     0DE2                     l3639:
 11159                           
 11160                           ;Mobbus_Slave.c: 205:     SES_Modbus.u32timeOut = Get_millis();
 11161     0DE2  3193  23EB  318D   	fcall	_Get_millis
 11162     0DE5  30E2               	movlw	226
 11163     0DE6  0086               	movwf	6
 11164     0DE7  3021               	movlw	33
 11165     0DE8  0087               	movwf	7
 11166     0DE9  0020               	movlb	0	; select bank0
 11167     0DEA  0820               	movf	?_Get_millis,w
 11168     0DEB  3FC0               	movwi [0]fsr1
 11169     0DEC  0821               	movf	?_Get_millis+1,w
 11170     0DED  3FC1               	movwi [1]fsr1
 11171     0DEE  0822               	movf	?_Get_millis+2,w
 11172     0DEF  3FC2               	movwi [2]fsr1
 11173     0DF0  0823               	movf	?_Get_millis+3,w
 11174     0DF1  3FC3               	movwi [3]fsr1
 11175     0DF2                     l3641:
 11176                           
 11177                           ;Mobbus_Slave.c: 208:     SES_Modbus.u16OutCnt++;
 11178     0DF2  30D8               	movlw	216
 11179     0DF3  0086               	movwf	6
 11180     0DF4  3021               	movlw	33
 11181     0DF5  0087               	movwf	7
 11182     0DF6  3001               	movlw	1
 11183     0DF7  0781               	addwf	1,f
 11184     0DF8  3141               	addfsr 1,1
 11185     0DF9  1803               	skipnc
 11186     0DFA  0A81               	incf	1,f
 11187     0DFB                     l967:
 11188     0DFB  0008               	return
 11189     0DFC                     __end_of_Modbus_sendTxBuff:
 11190                           
 11191                           	psect	text49
 11192     0965                     __ptext49:	
 11193 ;; *************** function _Modbus_calcCRC *****************
 11194 ;; Defined at:
 11195 ;;		line 211 in file "Mobbus_Slave.c"
 11196 ;; Parameters:    Size  Location     Type
 11197 ;;  len             1    wreg     unsigned char 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;  len             1   10[BANK0 ] unsigned char 
 11200 ;;  j               1   12[BANK0 ] unsigned char 
 11201 ;;  temp            2   13[BANK0 ] unsigned int 
 11202 ;;  flag            2    8[BANK0 ] unsigned int 
 11203 ;;  temp2           2    6[BANK0 ] unsigned int 
 11204 ;;  i               1   11[BANK0 ] unsigned char 
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  2    0[BANK0 ] unsigned short 
 11207 ;; Registers used:
 11208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11214 ;;      Params:         0       2       0       0       0       0       0       0
 11215 ;;      Locals:         0       9       0       0       0       0       0       0
 11216 ;;      Temps:          0       4       0       0       0       0       0       0
 11217 ;;      Totals:         0      15       0       0       0       0       0       0
 11218 ;;Total ram usage:       15 bytes
 11219 ;; Hardware stack levels used: 1
 11220 ;; Hardware stack levels required when called: 7
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		_validateRequest
 11225 ;;		_Modbus_sendTxBuff
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229     0965                     _Modbus_calcCRC:	
 11230                           ;psect for function _Modbus_calcCRC
 11231                           
 11232                           
 11233                           ;incstack = 0
 11234                           ; Regs used in _Modbus_calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 11235                           ;Modbus_calcCRC@len stored from wreg
 11236     0965  0020               	movlb	0	; select bank0
 11237     0966  00AA               	movwf	Modbus_calcCRC@len
 11238     0967                     l3501:
 11239                           
 11240                           ;Mobbus_Slave.c: 212:     unsigned int temp, temp2, flag;;Mobbus_Slave.c: 213:     temp 
      +                          = 0xFFFF;
 11241     0967  30FF               	movlw	255
 11242     0968  00AD               	movwf	Modbus_calcCRC@temp
 11243     0969  30FF               	movlw	255
 11244     096A  00AE               	movwf	Modbus_calcCRC@temp+1
 11245     096B                     l3503:
 11246                           
 11247                           ;Mobbus_Slave.c: 214:     unsigned char i = 0;
 11248     096B  01AB               	clrf	Modbus_calcCRC@i
 11249                           
 11250                           ;Mobbus_Slave.c: 215:     for (i = 0; i < len; i++) {
 11251     096C  01AB               	clrf	Modbus_calcCRC@i
 11252     096D  29A5               	goto	l3529
 11253     096E                     l3505:
 11254                           
 11255                           ;Mobbus_Slave.c: 216:         temp = temp ^ SES_Modbus.au8Buffer[i];
 11256     096E  082B               	movf	Modbus_calcCRC@i,w
 11257     096F  00A2               	movwf	??_Modbus_calcCRC
 11258     0970  01A3               	clrf	??_Modbus_calcCRC+1
 11259     0971  306E               	movlw	110
 11260     0972  00A4               	movwf	??_Modbus_calcCRC+2
 11261     0973  3021               	movlw	33
 11262     0974  00A5               	movwf	??_Modbus_calcCRC+3
 11263     0975  0822               	movf	??_Modbus_calcCRC,w
 11264     0976  0724               	addwf	??_Modbus_calcCRC+2,w
 11265     0977  0086               	movwf	6
 11266     0978  0823               	movf	??_Modbus_calcCRC+1,w
 11267     0979  3D25               	addwfc	??_Modbus_calcCRC+3,w
 11268     097A  0087               	movwf	7
 11269     097B  082D               	movf	Modbus_calcCRC@temp,w
 11270     097C  0601               	xorwf	1,w
 11271     097D  00AD               	movwf	Modbus_calcCRC@temp
 11272     097E  082E               	movf	Modbus_calcCRC@temp+1,w
 11273     097F  00AE               	movwf	Modbus_calcCRC@temp+1
 11274     0980                     l3507:
 11275     0980                     l3509:
 11276                           
 11277                           ;Mobbus_Slave.c: 218:         for (j = 1; j <= 8; j++) {
 11278     0980  01AC               	clrf	Modbus_calcCRC@j
 11279     0981  0AAC               	incf	Modbus_calcCRC@j,f
 11280     0982                     l3515:
 11281                           
 11282                           ;Mobbus_Slave.c: 219:             flag = temp & 0x0001;
 11283     0982  3001               	movlw	1
 11284     0983  052D               	andwf	Modbus_calcCRC@temp,w
 11285     0984  00A8               	movwf	Modbus_calcCRC@flag
 11286     0985  3000               	movlw	0
 11287     0986  052E               	andwf	Modbus_calcCRC@temp+1,w
 11288     0987  00A9               	movwf	Modbus_calcCRC@flag+1
 11289     0988                     l3517:
 11290                           
 11291                           ;Mobbus_Slave.c: 220:             temp >>= 1;
 11292     0988  3001               	movlw	1
 11293     0989                     u2335:
 11294     0989  36AE               	lsrf	Modbus_calcCRC@temp+1,f
 11295     098A  0CAD               	rrf	Modbus_calcCRC@temp,f
 11296     098B  0B89               	decfsz	9,f
 11297     098C  2989               	goto	u2335
 11298     098D                     l3519:
 11299                           
 11300                           ;Mobbus_Slave.c: 221:             if (flag)
 11301     098D  0828               	movf	Modbus_calcCRC@flag,w
 11302     098E  0429               	iorwf	Modbus_calcCRC@flag+1,w
 11303     098F  1903               	btfsc	3,2
 11304     0990  2992               	goto	u2341
 11305     0991  2993               	goto	u2340
 11306     0992                     u2341:
 11307     0992  2997               	goto	l3523
 11308     0993                     u2340:
 11309     0993                     l3521:
 11310                           
 11311                           ;Mobbus_Slave.c: 222:                 temp ^= 0xA001;
 11312     0993  3001               	movlw	1
 11313     0994  06AD               	xorwf	Modbus_calcCRC@temp,f
 11314     0995  30A0               	movlw	160
 11315     0996  06AE               	xorwf	Modbus_calcCRC@temp+1,f
 11316     0997                     l3523:
 11317                           
 11318                           ;Mobbus_Slave.c: 223:         }
 11319     0997  3001               	movlw	1
 11320     0998  00A2               	movwf	??_Modbus_calcCRC
 11321     0999  0822               	movf	??_Modbus_calcCRC,w
 11322     099A  07AC               	addwf	Modbus_calcCRC@j,f
 11323     099B                     l3525:
 11324     099B  3009               	movlw	9
 11325     099C  022C               	subwf	Modbus_calcCRC@j,w
 11326     099D  1C03               	skipc
 11327     099E  29A0               	goto	u2351
 11328     099F  29A1               	goto	u2350
 11329     09A0                     u2351:
 11330     09A0  2982               	goto	l3515
 11331     09A1                     u2350:
 11332     09A1                     l3527:
 11333                           
 11334                           ;Mobbus_Slave.c: 224:     }
 11335     09A1  3001               	movlw	1
 11336     09A2  00A2               	movwf	??_Modbus_calcCRC
 11337     09A3  0822               	movf	??_Modbus_calcCRC,w
 11338     09A4  07AB               	addwf	Modbus_calcCRC@i,f
 11339     09A5                     l3529:
 11340     09A5  082A               	movf	Modbus_calcCRC@len,w
 11341     09A6  022B               	subwf	Modbus_calcCRC@i,w
 11342     09A7  1C03               	skipc
 11343     09A8  29AA               	goto	u2361
 11344     09A9  29AB               	goto	u2360
 11345     09AA                     u2361:
 11346     09AA  296E               	goto	l3505
 11347     09AB                     u2360:
 11348     09AB                     l3531:
 11349                           
 11350                           ;Mobbus_Slave.c: 226:     temp2 = temp >> 8;
 11351     09AB  082E               	movf	Modbus_calcCRC@temp+1,w
 11352     09AC  00A3               	movwf	??_Modbus_calcCRC+1
 11353     09AD  082D               	movf	Modbus_calcCRC@temp,w
 11354     09AE  00A2               	movwf	??_Modbus_calcCRC
 11355     09AF  0823               	movf	??_Modbus_calcCRC+1,w
 11356     09B0  00A2               	movwf	??_Modbus_calcCRC
 11357     09B1  01A3               	clrf	??_Modbus_calcCRC+1
 11358     09B2  0822               	movf	??_Modbus_calcCRC,w
 11359     09B3  00A6               	movwf	Modbus_calcCRC@temp2
 11360     09B4  0823               	movf	??_Modbus_calcCRC+1,w
 11361     09B5  00A7               	movwf	Modbus_calcCRC@temp2+1
 11362     09B6                     l3533:
 11363                           
 11364                           ;Mobbus_Slave.c: 227:     temp = (temp << 8) | temp2;
 11365     09B6  082D               	movf	Modbus_calcCRC@temp,w
 11366     09B7  00A3               	movwf	??_Modbus_calcCRC+1
 11367     09B8  01A2               	clrf	??_Modbus_calcCRC
 11368     09B9  0826               	movf	Modbus_calcCRC@temp2,w
 11369     09BA  0422               	iorwf	??_Modbus_calcCRC,w
 11370     09BB  00AD               	movwf	Modbus_calcCRC@temp
 11371     09BC  0827               	movf	Modbus_calcCRC@temp2+1,w
 11372     09BD  0423               	iorwf	??_Modbus_calcCRC+1,w
 11373     09BE  00AE               	movwf	Modbus_calcCRC@temp+1
 11374     09BF                     l3535:
 11375                           
 11376                           ;Mobbus_Slave.c: 231:     return temp;
 11377     09BF  082E               	movf	Modbus_calcCRC@temp+1,w
 11378     09C0  00A1               	movwf	?_Modbus_calcCRC+1
 11379     09C1  082D               	movf	Modbus_calcCRC@temp,w
 11380     09C2  00A0               	movwf	?_Modbus_calcCRC
 11381     09C3                     l976:
 11382     09C3  0008               	return
 11383     09C4                     __end_of_Modbus_calcCRC:
 11384                           
 11385                           	psect	text50
 11386     13EB                     __ptext50:	
 11387 ;; *************** function _Get_millis *****************
 11388 ;; Defined at:
 11389 ;;		line 15 in file "tick.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;		None
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  4    0[BANK0 ] unsigned long 
 11396 ;; Registers used:
 11397 ;;		wreg
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11403 ;;      Params:         0       4       0       0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0
 11406 ;;      Totals:         0       4       0       0       0       0       0       0
 11407 ;;Total ram usage:        4 bytes
 11408 ;; Hardware stack levels used: 1
 11409 ;; Hardware stack levels required when called: 7
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_ReadData
 11414 ;;		_Task_Sensor
 11415 ;;		_ModbusRTU_Slave_Poll
 11416 ;;		_Modbus_sendTxBuff
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420     13EB                     _Get_millis:	
 11421                           ;psect for function _Get_millis
 11422                           
 11423     13EB                     l3497:	
 11424                           ;incstack = 0
 11425                           ; Regs used in _Get_millis: [wreg]
 11426                           
 11427                           
 11428                           ;tick.c: 16:     return device_time;
 11429     13EB  0021               	movlb	1	; select bank1
 11430     13EC  085A               	movf	(_device_time+3)^(0+128),w	;volatile
 11431     13ED  0020               	movlb	0	; select bank0
 11432     13EE  00A3               	movwf	?_Get_millis+3
 11433     13EF  0021               	movlb	1	; select bank1
 11434     13F0  0859               	movf	(_device_time+2)^(0+128),w	;volatile
 11435     13F1  0020               	movlb	0	; select bank0
 11436     13F2  00A2               	movwf	?_Get_millis+2
 11437     13F3  0021               	movlb	1	; select bank1
 11438     13F4  0858               	movf	(_device_time+1)^(0+128),w	;volatile
 11439     13F5  0020               	movlb	0	; select bank0
 11440     13F6  00A1               	movwf	?_Get_millis+1
 11441     13F7  0021               	movlb	1	; select bank1
 11442     13F8  0857               	movf	_device_time^(0+128),w	;volatile
 11443     13F9  0020               	movlb	0	; select bank0
 11444     13FA  00A0               	movwf	?_Get_millis
 11445     13FB                     l1012:
 11446     13FB  0008               	return
 11447     13FC                     __end_of_Get_millis:
 11448                           
 11449                           	psect	text51
 11450     124C                     __ptext51:	
 11451 ;; *************** function _EUSART_is_tx_done *****************
 11452 ;; Defined at:
 11453 ;;		line 142 in file "mcc_generated_files/eusart.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;		None
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      _Bool 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11467 ;;      Params:         0       0       0       0       0       0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0
 11470 ;;      Totals:         0       0       0       0       0       0       0       0
 11471 ;;Total ram usage:        0 bytes
 11472 ;; Hardware stack levels used: 1
 11473 ;; Hardware stack levels required when called: 7
 11474 ;; This function calls:
 11475 ;;		Nothing
 11476 ;; This function is called by:
 11477 ;;		_Modbus_sendTxBuff
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481     124C                     _EUSART_is_tx_done:	
 11482                           ;psect for function _EUSART_is_tx_done
 11483                           
 11484     124C                     l3473:	
 11485                           ;incstack = 0
 11486                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
 11487                           
 11488                           
 11489                           ;mcc_generated_files/eusart.c: 144:     return TXSTAbits.TRMT;
 11490     124C  0023               	movlb	3	; select bank3
 11491     124D  0C1E               	rrf	30,w	;volatile
 11492     124E  3901               	andlw	1
 11493     124F                     l288:
 11494     124F  0008               	return
 11495     1250                     __end_of_EUSART_is_tx_done:
 11496                           
 11497                           	psect	text52
 11498     1618                     __ptext52:	
 11499 ;; *************** function _EUSART_Write *****************
 11500 ;; Defined at:
 11501 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  txData          1    wreg     unsigned char 
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;  txData          1    1[BANK0 ] unsigned char 
 11506 ;; Return value:  Size  Location     Type
 11507 ;;                  1    wreg      void 
 11508 ;; Registers used:
 11509 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11515 ;;      Params:         0       0       0       0       0       0       0       0
 11516 ;;      Locals:         0       1       0       0       0       0       0       0
 11517 ;;      Temps:          0       1       0       0       0       0       0       0
 11518 ;;      Totals:         0       2       0       0       0       0       0       0
 11519 ;;Total ram usage:        2 bytes
 11520 ;; Hardware stack levels used: 1
 11521 ;; Hardware stack levels required when called: 7
 11522 ;; This function calls:
 11523 ;;		Nothing
 11524 ;; This function is called by:
 11525 ;;		_Modbus_sendTxBuff
 11526 ;;		_putch
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530     1618                     _EUSART_Write:	
 11531                           ;psect for function _EUSART_Write
 11532                           
 11533                           
 11534                           ;incstack = 0
 11535                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11536                           ;EUSART_Write@txData stored from wreg
 11537     1618  0020               	movlb	0	; select bank0
 11538     1619  00A1               	movwf	EUSART_Write@txData
 11539     161A                     l3477:
 11540     161A                     l3479:	
 11541                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11542                           
 11543                           
 11544                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11545     161A  086D               	movf	_eusartTxBufferRemaining,w	;volatile
 11546     161B  1903               	btfsc	3,2
 11547     161C  2E1E               	goto	u2301
 11548     161D  2E1F               	goto	u2300
 11549     161E                     u2301:
 11550     161E  2E1A               	goto	l3479
 11551     161F                     u2300:
 11552     161F                     l303:
 11553                           
 11554                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 11555     161F  0021               	movlb	1	; select bank1
 11556     1620  1A11               	btfsc	17,4	;volatile
 11557     1621  2E23               	goto	u2311
 11558     1622  2E24               	goto	u2310
 11559     1623                     u2311:
 11560     1623  2E29               	goto	l304
 11561     1624                     u2310:
 11562     1624                     l3481:
 11563                           
 11564                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
 11565     1624  0020               	movlb	0	; select bank0
 11566     1625  0821               	movf	EUSART_Write@txData,w
 11567     1626  0023               	movlb	3	; select bank3
 11568     1627  009A               	movwf	26	;volatile
 11569                           
 11570                           ;mcc_generated_files/eusart.c: 182:     }
 11571     1628  2E3F               	goto	l3493
 11572     1629                     l304:	
 11573                           ;mcc_generated_files/eusart.c: 183:     else
 11574                           
 11575                           
 11576                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 11577     1629  1211               	bcf	17,4	;volatile
 11578     162A                     l3483:
 11579                           
 11580                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11581     162A  0020               	movlb	0	; select bank0
 11582     162B  086F               	movf	_eusartTxHead,w
 11583     162C  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11584     162D  0086               	movwf	6
 11585     162E  3001               	movlw	1	; select bank2/3
 11586     162F  0087               	movwf	7
 11587     1630  0821               	movf	EUSART_Write@txData,w
 11588     1631  0081               	movwf	1
 11589     1632                     l3485:
 11590     1632  3001               	movlw	1
 11591     1633  00A0               	movwf	??_EUSART_Write
 11592     1634  0820               	movf	??_EUSART_Write,w
 11593     1635  07EF               	addwf	_eusartTxHead,f	;volatile
 11594     1636                     l3487:
 11595                           
 11596                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11597     1636  3008               	movlw	8
 11598     1637  026F               	subwf	_eusartTxHead,w	;volatile
 11599     1638  1C03               	skipc
 11600     1639  2E3B               	goto	u2321
 11601     163A  2E3C               	goto	u2320
 11602     163B                     u2321:
 11603     163B  2E3D               	goto	l3491
 11604     163C                     u2320:
 11605     163C                     l3489:
 11606                           
 11607                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11608     163C  01EF               	clrf	_eusartTxHead	;volatile
 11609     163D                     l3491:
 11610                           
 11611                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11612     163D  3001               	movlw	1
 11613     163E  02ED               	subwf	_eusartTxBufferRemaining,f	;volatile
 11614     163F                     l3493:
 11615                           
 11616                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 11617     163F  0021               	movlb	1	; select bank1
 11618     1640  1611               	bsf	17,4	;volatile
 11619     1641                     l307:
 11620     1641  0008               	return
 11621     1642                     __end_of_EUSART_Write:
 11622                           
 11623                           	psect	text53
 11624     0865                     __ptext53:	
 11625 ;; *************** function _ModbusSlave_Init *****************
 11626 ;; Defined at:
 11627 ;;		line 234 in file "Mobbus_Slave.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  _SW_Ad          1    wreg     unsigned char 
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;  _SW_Ad          1    0[BANK0 ] unsigned char 
 11632 ;; Return value:  Size  Location     Type
 11633 ;;                  1    wreg      void 
 11634 ;; Registers used:
 11635 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11636 ;; Tracked objects:
 11637 ;;		On entry : 0/0
 11638 ;;		On exit  : 0/0
 11639 ;;		Unchanged: 0/0
 11640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11641 ;;      Params:         0       0       0       0       0       0       0       0
 11642 ;;      Locals:         0       1       0       0       0       0       0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0
 11644 ;;      Totals:         0       1       0       0       0       0       0       0
 11645 ;;Total ram usage:        1 bytes
 11646 ;; Hardware stack levels used: 1
 11647 ;; Hardware stack levels required when called: 7
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_Task_MB
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655     0865                     _ModbusSlave_Init:	
 11656                           ;psect for function _ModbusSlave_Init
 11657                           
 11658                           
 11659                           ;incstack = 0
 11660                           ; Regs used in _ModbusSlave_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11661                           ;ModbusSlave_Init@_SW_Ad stored from wreg
 11662     0865  0020               	movlb	0	; select bank0
 11663     0866  00A0               	movwf	ModbusSlave_Init@_SW_Ad
 11664     0867                     l4783:
 11665                           
 11666                           ;Mobbus_Slave.c: 235:     SES_Modbus.u8id = (uint8_t) _SW_Ad;
 11667     0867  306A               	movlw	106
 11668     0868  0086               	movwf	6
 11669     0869  3021               	movlw	33
 11670     086A  0087               	movwf	7
 11671     086B  0820               	movf	ModbusSlave_Init@_SW_Ad,w
 11672     086C  3FC0               	movwi [0]fsr1
 11673                           
 11674                           ;Mobbus_Slave.c: 236:     SES_Modbus.u8txenpin = RS485;
 11675     086D  306B               	movlw	107
 11676     086E  0086               	movwf	6
 11677     086F  3021               	movlw	33
 11678     0870  0087               	movwf	7
 11679     0871  3002               	movlw	2
 11680     0872  0081               	movwf	1
 11681     0873                     l4785:
 11682                           
 11683                           ;Mobbus_Slave.c: 237:     SES_Modbus.u16timeOut = 1000;
 11684     0873  30DC               	movlw	220
 11685     0874  0086               	movwf	6
 11686     0875  3021               	movlw	33
 11687     0876  0087               	movwf	7
 11688     0877  30E8               	movlw	232
 11689     0878  3FC0               	movwi [0]fsr1
 11690     0879  3003               	movlw	3
 11691     087A  3FC1               	movwi [1]fsr1
 11692     087B                     l4787:
 11693                           
 11694                           ;Mobbus_Slave.c: 238:     SES_Modbus.u32overTime = 0;
 11695     087B  30E6               	movlw	230
 11696     087C  0086               	movwf	6
 11697     087D  3021               	movlw	33
 11698     087E  0087               	movwf	7
 11699     087F  3000               	movlw	0
 11700     0880  3FC0               	movwi [0]fsr1
 11701     0881  3FC1               	movwi [1]fsr1
 11702     0882  3FC2               	movwi [2]fsr1
 11703     0883  3FC3               	movwi [3]fsr1
 11704                           
 11705                           ;Mobbus_Slave.c: 240:     if (SES_Modbus.u8txenpin > 1) do { LATCbits.LATC5 = 0; } while
      +                          (0);
 11706     0884  306A               	movlw	106
 11707     0885  0086               	movwf	6
 11708     0886  3021               	movlw	33
 11709     0887  0087               	movwf	7
 11710     0888  3141               	addfsr 1,1
 11711     0889  3002               	movlw	2
 11712     088A  0201               	subwf	1,w
 11713     088B  1C03               	skipc
 11714     088C  288E               	goto	u4041
 11715     088D  288F               	goto	u4040
 11716     088E                     u4041:
 11717     088E  2892               	goto	l983
 11718     088F                     u4040:
 11719     088F                     l980:
 11720     088F  0022               	movlb	2	; select bank2
 11721     0890  128E               	bcf	14,5	;volatile
 11722     0891  2894               	goto	l4789
 11723     0892                     l983:
 11724     0892  0022               	movlb	2	; select bank2
 11725     0893  168E               	bsf	14,5	;volatile
 11726     0894                     l4789:
 11727                           
 11728                           ;Mobbus_Slave.c: 243:     SES_Modbus.u8lastRec = SES_Modbus.u8BufferSize = 0;
 11729     0894  30D2               	movlw	210
 11730     0895  0086               	movwf	6
 11731     0896  3021               	movlw	33
 11732     0897  0087               	movwf	7
 11733     0898  0181               	clrf	1
 11734     0899  30D3               	movlw	211
 11735     089A  0086               	movwf	6
 11736     089B  3021               	movlw	33
 11737     089C  0087               	movwf	7
 11738     089D  0181               	clrf	1
 11739                           
 11740                           ;Mobbus_Slave.c: 244:     SES_Modbus.u16InCnt = SES_Modbus.u16OutCnt = SES_Modbus.u16err
      +                          Cnt = 0;
 11741     089E  30DA               	movlw	218
 11742     089F  0086               	movwf	6
 11743     08A0  3021               	movlw	33
 11744     08A1  0087               	movwf	7
 11745     08A2  3000               	movlw	0
 11746     08A3  3FC0               	movwi [0]fsr1
 11747     08A4  3FC1               	movwi [1]fsr1
 11748     08A5  30D8               	movlw	216
 11749     08A6  0086               	movwf	6
 11750     08A7  3021               	movlw	33
 11751     08A8  0087               	movwf	7
 11752     08A9  3000               	movlw	0
 11753     08AA  3FC0               	movwi [0]fsr1
 11754     08AB  3FC1               	movwi [1]fsr1
 11755     08AC  30D6               	movlw	214
 11756     08AD  0086               	movwf	6
 11757     08AE  3021               	movlw	33
 11758     08AF  0087               	movwf	7
 11759     08B0  3000               	movlw	0
 11760     08B1  3FC0               	movwi [0]fsr1
 11761     08B2  3FC1               	movwi [1]fsr1
 11762     08B3                     l985:
 11763     08B3  0008               	return
 11764     08B4                     __end_of_ModbusSlave_Init:
 11765                           
 11766                           	psect	text54
 11767     16C5                     __ptext54:	
 11768 ;; *************** function _Task_Indicator *****************
 11769 ;; Defined at:
 11770 ;;		line 7 in file "MCU.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11784 ;;      Params:         0       0       0       0       0       0       0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0
 11786 ;;      Temps:          0       2       0       0       0       0       0       0
 11787 ;;      Totals:         0       2       0       0       0       0       0       0
 11788 ;;Total ram usage:        2 bytes
 11789 ;; Hardware stack levels used: 1
 11790 ;; Hardware stack levels required when called: 7
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_App_Process
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798     16C5                     _Task_Indicator:	
 11799                           ;psect for function _Task_Indicator
 11800                           
 11801     16C5                     l4939:	
 11802                           ;incstack = 0
 11803                           ; Regs used in _Task_Indicator: [wreg-fsr0h+status,2+status,0]
 11804                           
 11805                           
 11806                           ;MCU.c: 8:     switch (f_Indicator) {
 11807     16C5  2EDC               	goto	l4947
 11808     16C6                     l844:	
 11809                           ;MCU.c: 10:         {;MCU.c: 11:             do { LATCbits.LATC1 = 1; } while(0);
 11810                           
 11811     16C6  0022               	movlb	2	; select bank2
 11812     16C7  148E               	bsf	14,1	;volatile
 11813     16C8                     l846:	
 11814                           ;MCU.c: 12:             do { LATCbits.LATC0 = 1; } while(0);
 11815                           
 11816     16C8  140E               	bsf	14,0	;volatile
 11817     16C9  2EF3               	goto	l859
 11818     16CA                     l4941:
 11819     16CA  1003               	clrc
 11820     16CB  0022               	movlb	2	; select bank2
 11821     16CC  1C8E               	btfss	14,1	;volatile
 11822     16CD  1403               	setc
 11823     16CE  1803               	btfsc	3,0
 11824     16CF  2ED1               	goto	u4121
 11825     16D0  2ED4               	goto	u4120
 11826     16D1                     u4121:
 11827     16D1  0022               	movlb	2	; select bank2
 11828     16D2  148E               	bsf	14,1	;volatile
 11829     16D3  2ED6               	goto	u4134
 11830     16D4                     u4120:
 11831     16D4  0022               	movlb	2	; select bank2
 11832     16D5  108E               	bcf	14,1	;volatile
 11833     16D6                     u4134:
 11834     16D6                     l4943:
 11835     16D6  140E               	bsf	14,0	;volatile
 11836     16D7  2EF3               	goto	l859
 11837     16D8                     l855:	
 11838                           ;MCU.c: 22:         {;MCU.c: 23:             do { LATCbits.LATC1 = 1; } while(0);
 11839                           
 11840     16D8  0022               	movlb	2	; select bank2
 11841     16D9  148E               	bsf	14,1	;volatile
 11842     16DA                     l857:	
 11843                           ;MCU.c: 24:             do { LATCbits.LATC0 = 0; } while(0);
 11844                           
 11845     16DA  100E               	bcf	14,0	;volatile
 11846     16DB  2EF3               	goto	l859
 11847     16DC                     l4947:
 11848     16DC  0021               	movlb	1	; select bank1
 11849     16DD  0863               	movf	_f_Indicator^(0+128),w
 11850     16DE  0020               	movlb	0	; select bank0
 11851     16DF  00A0               	movwf	??_Task_Indicator
 11852     16E0  01A1               	clrf	??_Task_Indicator+1
 11853     16E1  1BA0               	btfsc	??_Task_Indicator,7
 11854     16E2  03A1               	decf	??_Task_Indicator+1,f
 11855                           
 11856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11857                           ; Switch size 1, requested type "simple"
 11858                           ; Number of cases is 1, Range of values is 0 to 0
 11859                           ; switch strategies available:
 11860                           ; Name         Instructions Cycles
 11861                           ; simple_byte            4     3 (average)
 11862                           ; direct_byte            8     6 (fixed)
 11863                           ; jumptable            260     6 (fixed)
 11864                           ;	Chosen strategy is simple_byte
 11865     16E3  0821               	movf	??_Task_Indicator+1,w
 11866     16E4  3A00               	xorlw	0	; case 0
 11867     16E5  1903               	skipnz
 11868     16E6  2EE8               	goto	l5333
 11869     16E7  2EF3               	goto	l859
 11870     16E8                     l5333:
 11871                           
 11872                           ; Switch size 1, requested type "simple"
 11873                           ; Number of cases is 3, Range of values is 0 to 2
 11874                           ; switch strategies available:
 11875                           ; Name         Instructions Cycles
 11876                           ; simple_byte           10     6 (average)
 11877                           ; direct_byte           12     6 (fixed)
 11878                           ; jumptable            260     6 (fixed)
 11879                           ;	Chosen strategy is simple_byte
 11880     16E8  0820               	movf	??_Task_Indicator,w
 11881     16E9  3A00               	xorlw	0	; case 0
 11882     16EA  1903               	skipnz
 11883     16EB  2EC6               	goto	l844
 11884     16EC  3A01               	xorlw	1	; case 1
 11885     16ED  1903               	skipnz
 11886     16EE  2ECA               	goto	l4941
 11887     16EF  3A03               	xorlw	3	; case 2
 11888     16F0  1903               	skipnz
 11889     16F1  2ED8               	goto	l855
 11890     16F2  2EF3               	goto	l859
 11891     16F3                     l859:
 11892     16F3  0008               	return
 11893     16F4                     __end_of_Task_Indicator:
 11894                           
 11895                           	psect	text55
 11896     130F                     __ptext55:	
 11897 ;; *************** function _App_Init *****************
 11898 ;; Defined at:
 11899 ;;		line 54 in file "MCU.c"
 11900 ;; Parameters:    Size  Location     Type
 11901 ;;		None
 11902 ;; Auto vars:     Size  Location     Type
 11903 ;;		None
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  1    wreg      void 
 11906 ;; Registers used:
 11907 ;;		wreg, status,2, status,0, pclath, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11913 ;;      Params:         0       0       0       0       0       0       0       0
 11914 ;;      Locals:         0       0       0       0       0       0       0       0
 11915 ;;      Temps:          0       0       0       0       0       0       0       0
 11916 ;;      Totals:         0       0       0       0       0       0       0       0
 11917 ;;Total ram usage:        0 bytes
 11918 ;; Hardware stack levels used: 1
 11919 ;; Hardware stack levels required when called: 9
 11920 ;; This function calls:
 11921 ;;		_Device_Init
 11922 ;;		_TMR1_StartTimer
 11923 ;;		_Tick_Init_SES
 11924 ;; This function is called by:
 11925 ;;		_main
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929     130F                     _App_Init:	
 11930                           ;psect for function _App_Init
 11931                           
 11932     130F                     l5047:	
 11933                           ;incstack = 0
 11934                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
 11935                           
 11936                           
 11937                           ;MCU.c: 55:     Device_Init();
 11938     130F  318A  2235  3193   	fcall	_Device_Init
 11939     1312                     l5049:
 11940                           
 11941                           ;MCU.c: 56:     TMR1_StartTimer();
 11942     1312  3192  2226  3193   	fcall	_TMR1_StartTimer
 11943     1315                     l5051:
 11944                           
 11945                           ;MCU.c: 57:     Tick_Init_SES();
 11946     1315  3194  240D  3193   	fcall	_Tick_Init_SES
 11947     1318                     l880:
 11948     1318  0008               	return
 11949     1319                     __end_of_App_Init:
 11950                           
 11951                           	psect	text56
 11952     140D                     __ptext56:	
 11953 ;; *************** function _Tick_Init_SES *****************
 11954 ;; Defined at:
 11955 ;;		line 6 in file "tick.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;		None
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  1    wreg      void 
 11962 ;; Registers used:
 11963 ;;		wreg, status,2, status,0, pclath, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11969 ;;      Params:         0       0       0       0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0
 11972 ;;      Totals:         0       0       0       0       0       0       0       0
 11973 ;;Total ram usage:        0 bytes
 11974 ;; Hardware stack levels used: 1
 11975 ;; Hardware stack levels required when called: 8
 11976 ;; This function calls:
 11977 ;;		_TMR1_SetInterruptHandler
 11978 ;; This function is called by:
 11979 ;;		_App_Init
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983     140D                     _Tick_Init_SES:	
 11984                           ;psect for function _Tick_Init_SES
 11985                           
 11986     140D                     l4995:	
 11987                           ;incstack = 0
 11988                           ; Regs used in _Tick_Init_SES: [wreg+status,2+status,0+pclath+cstack]
 11989                           
 11990                           
 11991                           ;tick.c: 7:     device_time = 0;
 11992     140D  3000               	movlw	0
 11993     140E  0021               	movlb	1	; select bank1
 11994     140F  00DA               	movwf	(_device_time+3)^(0+128)	;volatile
 11995     1410  3000               	movlw	0
 11996     1411  00D9               	movwf	(_device_time+2)^(0+128)	;volatile
 11997     1412  3000               	movlw	0
 11998     1413  00D8               	movwf	(_device_time+1)^(0+128)	;volatile
 11999     1414  3000               	movlw	0
 12000     1415  00D7               	movwf	_device_time^(0+128)	;volatile
 12001     1416                     l4997:
 12002                           
 12003                           ;tick.c: 8:     TMR1_SetInterruptHandler(rtcc_handle);
 12004     1416  3005               	movlw	low _rtcc_handle
 12005     1417  0020               	movlb	0	; select bank0
 12006     1418  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 12007     1419  3013               	movlw	high _rtcc_handle
 12008     141A  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 12009     141B  3192  22BD  3194   	fcall	_TMR1_SetInterruptHandler
 12010     141E                     l1006:
 12011     141E  0008               	return
 12012     141F                     __end_of_Tick_Init_SES:
 12013                           
 12014                           	psect	text57
 12015     12BD                     __ptext57:	
 12016 ;; *************** function _TMR1_SetInterruptHandler *****************
 12017 ;; Defined at:
 12018 ;;		line 188 in file "mcc_generated_files/tmr1.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 12021 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  1    wreg      void 
 12026 ;; Registers used:
 12027 ;;		wreg
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12033 ;;      Params:         0       2       0       0       0       0       0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0
 12035 ;;      Temps:          0       0       0       0       0       0       0       0
 12036 ;;      Totals:         0       2       0       0       0       0       0       0
 12037 ;;Total ram usage:        2 bytes
 12038 ;; Hardware stack levels used: 1
 12039 ;; Hardware stack levels required when called: 7
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_TMR1_Initialize
 12044 ;;		_Tick_Init_SES
 12045 ;; This function uses a non-reentrant model
 12046 ;;
 12047                           
 12048     12BD                     _TMR1_SetInterruptHandler:	
 12049                           ;psect for function _TMR1_SetInterruptHandler
 12050                           
 12051     12BD                     l4609:	
 12052                           ;incstack = 0
 12053                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12054                           
 12055                           
 12056                           ;mcc_generated_files/tmr1.c: 189:     TMR1_InterruptHandler = InterruptHandler;
 12057     12BD  0020               	movlb	0	; select bank0
 12058     12BE  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12059     12BF  0022               	movlb	2	; select bank2
 12060     12C0  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 12061     12C1  0020               	movlb	0	; select bank0
 12062     12C2  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12063     12C3  0022               	movlb	2	; select bank2
 12064     12C4  00E1               	movwf	_TMR1_InterruptHandler^(0+256)
 12065     12C5                     l402:
 12066     12C5  0008               	return
 12067     12C6                     __end_of_TMR1_SetInterruptHandler:
 12068                           
 12069                           	psect	text58
 12070     1226                     __ptext58:	
 12071 ;; *************** function _TMR1_StartTimer *****************
 12072 ;; Defined at:
 12073 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;		None
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      void 
 12080 ;; Registers used:
 12081 ;;		None
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12087 ;;      Params:         0       0       0       0       0       0       0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0
 12090 ;;      Totals:         0       0       0       0       0       0       0       0
 12091 ;;Total ram usage:        0 bytes
 12092 ;; Hardware stack levels used: 1
 12093 ;; Hardware stack levels required when called: 7
 12094 ;; This function calls:
 12095 ;;		Nothing
 12096 ;; This function is called by:
 12097 ;;		_App_Init
 12098 ;; This function uses a non-reentrant model
 12099 ;;
 12100                           
 12101     1226                     _TMR1_StartTimer:	
 12102                           ;psect for function _TMR1_StartTimer
 12103                           
 12104     1226                     l4895:	
 12105                           ;incstack = 0
 12106                           ; Regs used in _TMR1_StartTimer: []
 12107                           
 12108                           
 12109                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 12110     1226  0020               	movlb	0	; select bank0
 12111     1227  1418               	bsf	24,0	;volatile
 12112     1228                     l384:
 12113     1228  0008               	return
 12114     1229                     __end_of_TMR1_StartTimer:
 12115                           
 12116                           	psect	text59
 12117     0A35                     __ptext59:	
 12118 ;; *************** function _Device_Init *****************
 12119 ;; Defined at:
 12120 ;;		line 30 in file "MCU.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;		None
 12123 ;; Auto vars:     Size  Location     Type
 12124 ;;		None
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      void 
 12127 ;; Registers used:
 12128 ;;		wreg, status,2, status,0
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12134 ;;      Params:         0       0       0       0       0       0       0       0
 12135 ;;      Locals:         0       0       0       0       0       0       0       0
 12136 ;;      Temps:          0       0       0       0       0       0       0       0
 12137 ;;      Totals:         0       0       0       0       0       0       0       0
 12138 ;;Total ram usage:        0 bytes
 12139 ;; Hardware stack levels used: 1
 12140 ;; Hardware stack levels required when called: 7
 12141 ;; This function calls:
 12142 ;;		Nothing
 12143 ;; This function is called by:
 12144 ;;		_App_Init
 12145 ;; This function uses a non-reentrant model
 12146 ;;
 12147                           
 12148     0A35                     _Device_Init:	
 12149                           ;psect for function _Device_Init
 12150                           
 12151     0A35                     l4953:	
 12152                           ;incstack = 0
 12153                           ; Regs used in _Device_Init: [wreg+status,2+status,0]
 12154                           
 12155                           
 12156                           ;MCU.c: 31:     static int8_t value_SW1, value_SW2, value_SW3, value_SW4;;MCU.c: 33:    
      +                           value_SW1 = PORTAbits.RA0;
 12157     0A35  3000               	movlw	0
 12158     0A36  0020               	movlb	0	; select bank0
 12159     0A37  180C               	btfsc	12,0	;volatile
 12160     0A38  3001               	movlw	1
 12161     0A39  0021               	movlb	1	; select bank1
 12162     0A3A  00EF               	movwf	Device_Init@value_SW1^(0+128)
 12163                           
 12164                           ;MCU.c: 34:     value_SW2 = PORTAbits.RA1;
 12165     0A3B  3000               	movlw	0
 12166     0A3C  0020               	movlb	0	; select bank0
 12167     0A3D  188C               	btfsc	12,1	;volatile
 12168     0A3E  3001               	movlw	1
 12169     0A3F  0021               	movlb	1	; select bank1
 12170     0A40  00EE               	movwf	Device_Init@value_SW2^(0+128)
 12171                           
 12172                           ;MCU.c: 35:     value_SW3 = PORTAbits.RA2;
 12173     0A41  3000               	movlw	0
 12174     0A42  0020               	movlb	0	; select bank0
 12175     0A43  190C               	btfsc	12,2	;volatile
 12176     0A44  3001               	movlw	1
 12177     0A45  0021               	movlb	1	; select bank1
 12178     0A46  00ED               	movwf	Device_Init@value_SW3^(0+128)
 12179                           
 12180                           ;MCU.c: 36:     value_SW4 = PORTAbits.RA3;
 12181     0A47  3000               	movlw	0
 12182     0A48  0020               	movlb	0	; select bank0
 12183     0A49  198C               	btfsc	12,3	;volatile
 12184     0A4A  3001               	movlw	1
 12185     0A4B  0021               	movlb	1	; select bank1
 12186     0A4C  00EC               	movwf	Device_Init@value_SW4^(0+128)
 12187     0A4D                     l4955:
 12188                           
 12189                           ;MCU.c: 39:     if ((value_SW1 == 1) && (value_SW2 == 0) && (value_SW3 == 0) && (value_S
      +                          W4 == 0))
 12190     0A4D  036F               	decf	Device_Init@value_SW1^(0+128),w
 12191     0A4E  1D03               	btfss	3,2
 12192     0A4F  2A51               	goto	u4141
 12193     0A50  2A52               	goto	u4140
 12194     0A51                     u4141:
 12195     0A51  2A65               	goto	l4965
 12196     0A52                     u4140:
 12197     0A52                     l4957:
 12198     0A52  086E               	movf	Device_Init@value_SW2^(0+128),w
 12199     0A53  1D03               	btfss	3,2
 12200     0A54  2A56               	goto	u4151
 12201     0A55  2A57               	goto	u4150
 12202     0A56                     u4151:
 12203     0A56  2A65               	goto	l4965
 12204     0A57                     u4150:
 12205     0A57                     l4959:
 12206     0A57  086D               	movf	Device_Init@value_SW3^(0+128),w
 12207     0A58  1D03               	btfss	3,2
 12208     0A59  2A5B               	goto	u4161
 12209     0A5A  2A5C               	goto	u4160
 12210     0A5B                     u4161:
 12211     0A5B  2A65               	goto	l4965
 12212     0A5C                     u4160:
 12213     0A5C                     l4961:
 12214     0A5C  086C               	movf	Device_Init@value_SW4^(0+128),w
 12215     0A5D  1D03               	btfss	3,2
 12216     0A5E  2A60               	goto	u4171
 12217     0A5F  2A61               	goto	u4170
 12218     0A60                     u4171:
 12219     0A60  2A65               	goto	l4965
 12220     0A61                     u4170:
 12221     0A61                     l4963:
 12222                           
 12223                           ;MCU.c: 40:     {;MCU.c: 41:         SW_Ad = 0x01;
 12224     0A61  0020               	movlb	0	; select bank0
 12225     0A62  01E9               	clrf	_SW_Ad
 12226     0A63  0AE9               	incf	_SW_Ad,f
 12227                           
 12228                           ;MCU.c: 42:     } else if ((value_SW1 == 0) && (value_SW2 == 1) && (value_SW3 == 0) && (
      +                          value_SW4 == 0))
 12229     0A64  2AAD               	goto	l877
 12230     0A65                     l4965:
 12231     0A65  086F               	movf	Device_Init@value_SW1^(0+128),w
 12232     0A66  1D03               	btfss	3,2
 12233     0A67  2A69               	goto	u4181
 12234     0A68  2A6A               	goto	u4180
 12235     0A69                     u4181:
 12236     0A69  2A7D               	goto	l4975
 12237     0A6A                     u4180:
 12238     0A6A                     l4967:
 12239     0A6A  036E               	decf	Device_Init@value_SW2^(0+128),w
 12240     0A6B  1D03               	btfss	3,2
 12241     0A6C  2A6E               	goto	u4191
 12242     0A6D  2A6F               	goto	u4190
 12243     0A6E                     u4191:
 12244     0A6E  2A7D               	goto	l4975
 12245     0A6F                     u4190:
 12246     0A6F                     l4969:
 12247     0A6F  086D               	movf	Device_Init@value_SW3^(0+128),w
 12248     0A70  1D03               	btfss	3,2
 12249     0A71  2A73               	goto	u4201
 12250     0A72  2A74               	goto	u4200
 12251     0A73                     u4201:
 12252     0A73  2A7D               	goto	l4975
 12253     0A74                     u4200:
 12254     0A74                     l4971:
 12255     0A74  086C               	movf	Device_Init@value_SW4^(0+128),w
 12256     0A75  1D03               	btfss	3,2
 12257     0A76  2A78               	goto	u4211
 12258     0A77  2A79               	goto	u4210
 12259     0A78                     u4211:
 12260     0A78  2A7D               	goto	l4975
 12261     0A79                     u4210:
 12262     0A79                     l4973:
 12263                           
 12264                           ;MCU.c: 43:     {;MCU.c: 44:         SW_Ad = 0x02;
 12265     0A79  3002               	movlw	2
 12266     0A7A  0020               	movlb	0	; select bank0
 12267     0A7B  00E9               	movwf	_SW_Ad
 12268                           
 12269                           ;MCU.c: 45:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 1) && (
      +                          value_SW4 == 0))
 12270     0A7C  2AAD               	goto	l877
 12271     0A7D                     l4975:
 12272     0A7D  086F               	movf	Device_Init@value_SW1^(0+128),w
 12273     0A7E  1D03               	btfss	3,2
 12274     0A7F  2A81               	goto	u4221
 12275     0A80  2A82               	goto	u4220
 12276     0A81                     u4221:
 12277     0A81  2A95               	goto	l4985
 12278     0A82                     u4220:
 12279     0A82                     l4977:
 12280     0A82  086E               	movf	Device_Init@value_SW2^(0+128),w
 12281     0A83  1D03               	btfss	3,2
 12282     0A84  2A86               	goto	u4231
 12283     0A85  2A87               	goto	u4230
 12284     0A86                     u4231:
 12285     0A86  2A95               	goto	l4985
 12286     0A87                     u4230:
 12287     0A87                     l4979:
 12288     0A87  036D               	decf	Device_Init@value_SW3^(0+128),w
 12289     0A88  1D03               	btfss	3,2
 12290     0A89  2A8B               	goto	u4241
 12291     0A8A  2A8C               	goto	u4240
 12292     0A8B                     u4241:
 12293     0A8B  2A95               	goto	l4985
 12294     0A8C                     u4240:
 12295     0A8C                     l4981:
 12296     0A8C  086C               	movf	Device_Init@value_SW4^(0+128),w
 12297     0A8D  1D03               	btfss	3,2
 12298     0A8E  2A90               	goto	u4251
 12299     0A8F  2A91               	goto	u4250
 12300     0A90                     u4251:
 12301     0A90  2A95               	goto	l4985
 12302     0A91                     u4250:
 12303     0A91                     l4983:
 12304                           
 12305                           ;MCU.c: 46:     {;MCU.c: 47:         SW_Ad = 0x04;
 12306     0A91  3004               	movlw	4
 12307     0A92  0020               	movlb	0	; select bank0
 12308     0A93  00E9               	movwf	_SW_Ad
 12309                           
 12310                           ;MCU.c: 48:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 0) && (
      +                          value_SW4 == 1))
 12311     0A94  2AAD               	goto	l877
 12312     0A95                     l4985:
 12313     0A95  086F               	movf	Device_Init@value_SW1^(0+128),w
 12314     0A96  1D03               	btfss	3,2
 12315     0A97  2A99               	goto	u4261
 12316     0A98  2A9A               	goto	u4260
 12317     0A99                     u4261:
 12318     0A99  2AAD               	goto	l873
 12319     0A9A                     u4260:
 12320     0A9A                     l4987:
 12321     0A9A  086E               	movf	Device_Init@value_SW2^(0+128),w
 12322     0A9B  1D03               	btfss	3,2
 12323     0A9C  2A9E               	goto	u4271
 12324     0A9D  2A9F               	goto	u4270
 12325     0A9E                     u4271:
 12326     0A9E  2AAD               	goto	l873
 12327     0A9F                     u4270:
 12328     0A9F                     l4989:
 12329     0A9F  086D               	movf	Device_Init@value_SW3^(0+128),w
 12330     0AA0  1D03               	btfss	3,2
 12331     0AA1  2AA3               	goto	u4281
 12332     0AA2  2AA4               	goto	u4280
 12333     0AA3                     u4281:
 12334     0AA3  2AAD               	goto	l873
 12335     0AA4                     u4280:
 12336     0AA4                     l4991:
 12337     0AA4  036C               	decf	Device_Init@value_SW4^(0+128),w
 12338     0AA5  1D03               	btfss	3,2
 12339     0AA6  2AA8               	goto	u4291
 12340     0AA7  2AA9               	goto	u4290
 12341     0AA8                     u4291:
 12342     0AA8  2AAD               	goto	l873
 12343     0AA9                     u4290:
 12344     0AA9                     l4993:
 12345                           
 12346                           ;MCU.c: 49:     {;MCU.c: 50:         SW_Ad = 0x08;
 12347     0AA9  3008               	movlw	8
 12348     0AAA  0020               	movlb	0	; select bank0
 12349     0AAB  00E9               	movwf	_SW_Ad
 12350     0AAC  2AAD               	goto	l877
 12351     0AAD                     l873:
 12352     0AAD                     l877:
 12353     0AAD  0008               	return
 12354     0AAE                     __end_of_Device_Init:
 12355                           
 12356                           	psect	intentry
 12357     0004                     __pintentry:	
 12358 ;; *************** function _INTERRUPT_InterruptManager *****************
 12359 ;; Defined at:
 12360 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12374 ;;      Params:         0       0       0       0       0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 6
 12381 ;; This function calls:
 12382 ;;		NULL
 12383 ;;		_EUSART_Receive_ISR
 12384 ;;		_EUSART_Transmit_ISR
 12385 ;;		_I2C_MasterIsr
 12386 ;;		_TMR1_ISR
 12387 ;; This function is called by:
 12388 ;;		Interrupt level 1
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392     0004                     _INTERRUPT_InterruptManager:
 12393                           
 12394                           ;incstack = 0
 12395     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12396                           
 12397                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12398     0005  3180               	pagesel	$
 12399     0006                     i1l5119:
 12400                           
 12401                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12402     0006  1F0B               	btfss	11,6	;volatile
 12403     0007  2809               	goto	u446_21
 12404     0008  280A               	goto	u446_20
 12405     0009                     u446_21:
 12406     0009  2856               	goto	i1l204
 12407     000A                     u446_20:
 12408     000A                     i1l5121:
 12409                           
 12410                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 12411     000A  0021               	movlb	1	; select bank1
 12412     000B  1E11               	btfss	17,4	;volatile
 12413     000C  280E               	goto	u447_21
 12414     000D  280F               	goto	u447_20
 12415     000E                     u447_21:
 12416     000E  281B               	goto	i1l193
 12417     000F                     u447_20:
 12418     000F                     i1l5123:
 12419     000F  0020               	movlb	0	; select bank0
 12420     0010  1E11               	btfss	17,4	;volatile
 12421     0011  2813               	goto	u448_21
 12422     0012  2814               	goto	u448_20
 12423     0013                     u448_21:
 12424     0013  281B               	goto	i1l193
 12425     0014                     u448_20:
 12426     0014                     i1l5125:
 12427                           
 12428                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 12429     0014  0022               	movlb	2	; select bank2
 12430     0015  086A               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 12431     0016  008A               	movwf	10
 12432     0017  0869               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 12433     0018  000A               	callw
 12434     0019  3180               	pagesel	$
 12435                           
 12436                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12437     001A  2856               	goto	i1l204
 12438     001B                     i1l193:	
 12439                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 12440                           
 12441     001B  0021               	movlb	1	; select bank1
 12442     001C  1E91               	btfss	17,5	;volatile
 12443     001D  281F               	goto	u449_21
 12444     001E  2820               	goto	u449_20
 12445     001F                     u449_21:
 12446     001F  282C               	goto	i1l195
 12447     0020                     u449_20:
 12448     0020                     i1l5127:
 12449     0020  0020               	movlb	0	; select bank0
 12450     0021  1E91               	btfss	17,5	;volatile
 12451     0022  2824               	goto	u450_21
 12452     0023  2825               	goto	u450_20
 12453     0024                     u450_21:
 12454     0024  282C               	goto	i1l195
 12455     0025                     u450_20:
 12456     0025                     i1l5129:
 12457                           
 12458                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 12459     0025  0022               	movlb	2	; select bank2
 12460     0026  0868               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 12461     0027  008A               	movwf	10
 12462     0028  0867               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 12463     0029  000A               	callw
 12464     002A  3180               	pagesel	$
 12465                           
 12466                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12467     002B  2856               	goto	i1l204
 12468     002C                     i1l195:	
 12469                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
 12470                           
 12471     002C  0021               	movlb	1	; select bank1
 12472     002D  1D92               	btfss	18,3	;volatile
 12473     002E  2830               	goto	u451_21
 12474     002F  2831               	goto	u451_20
 12475     0030                     u451_21:
 12476     0030  283D               	goto	i1l197
 12477     0031                     u451_20:
 12478     0031                     i1l5131:
 12479     0031  0020               	movlb	0	; select bank0
 12480     0032  1D92               	btfss	18,3	;volatile
 12481     0033  2835               	goto	u452_21
 12482     0034  2836               	goto	u452_20
 12483     0035                     u452_21:
 12484     0035  283D               	goto	i1l197
 12485     0036                     u452_20:
 12486     0036                     i1l5133:
 12487                           
 12488                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
 12489     0036  0021               	movlb	1	; select bank1
 12490     0037  0862               	movf	(_MSSP_InterruptHandler+1)^(0+128),w
 12491     0038  008A               	movwf	10
 12492     0039  0861               	movf	_MSSP_InterruptHandler^(0+128),w
 12493     003A  000A               	callw
 12494     003B  3180               	pagesel	$
 12495                           
 12496                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12497     003C  2856               	goto	i1l204
 12498     003D                     i1l197:	
 12499                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 12500                           
 12501     003D  0021               	movlb	1	; select bank1
 12502     003E  1D91               	btfss	17,3	;volatile
 12503     003F  2841               	goto	u453_21
 12504     0040  2842               	goto	u453_20
 12505     0041                     u453_21:
 12506     0041  2848               	goto	i1l199
 12507     0042                     u453_20:
 12508     0042                     i1l5135:
 12509     0042  0020               	movlb	0	; select bank0
 12510     0043  1D91               	btfss	17,3	;volatile
 12511     0044  2846               	goto	u454_21
 12512     0045  2847               	goto	u454_20
 12513     0046                     u454_21:
 12514     0046  2848               	goto	i1l199
 12515     0047                     u454_20:
 12516     0047  2836               	goto	i1l5133
 12517     0048                     i1l199:	
 12518                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 12519                           
 12520     0048  0021               	movlb	1	; select bank1
 12521     0049  1C11               	btfss	17,0	;volatile
 12522     004A  284C               	goto	u455_21
 12523     004B  284D               	goto	u455_20
 12524     004C                     u455_21:
 12525     004C  2856               	goto	i1l198
 12526     004D                     u455_20:
 12527     004D                     i1l5139:
 12528     004D  0020               	movlb	0	; select bank0
 12529     004E  1C11               	btfss	17,0	;volatile
 12530     004F  2851               	goto	u456_21
 12531     0050  2852               	goto	u456_20
 12532     0051                     u456_21:
 12533     0051  2856               	goto	i1l198
 12534     0052                     u456_20:
 12535     0052                     i1l5141:
 12536                           
 12537                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 12538     0052  3193  237A  3180   	fcall	_TMR1_ISR
 12539                           
 12540                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12541     0055  2856               	goto	i1l204
 12542     0056                     i1l198:
 12543     0056                     i1l204:
 12544     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12545     0057  0009               	retfie
 12546     0058                     __end_of_INTERRUPT_InterruptManager:
 12547                           
 12548                           	psect	text61
 12549     137A                     __ptext61:	
 12550 ;; *************** function _TMR1_ISR *****************
 12551 ;; Defined at:
 12552 ;;		line 167 in file "mcc_generated_files/tmr1.c"
 12553 ;; Parameters:    Size  Location     Type
 12554 ;;		None
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;		None
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  1    wreg      void 
 12559 ;; Registers used:
 12560 ;;		wreg, status,2, status,0, pclath, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12566 ;;      Params:         0       0       0       0       0       0       0       0
 12567 ;;      Locals:         0       0       0       0       0       0       0       0
 12568 ;;      Temps:          0       0       0       0       0       0       0       0
 12569 ;;      Totals:         0       0       0       0       0       0       0       0
 12570 ;;Total ram usage:        0 bytes
 12571 ;; Hardware stack levels used: 1
 12572 ;; Hardware stack levels required when called: 2
 12573 ;; This function calls:
 12574 ;;		_TMR1_CallBack
 12575 ;;		_TMR1_WriteTimer
 12576 ;; This function is called by:
 12577 ;;		_INTERRUPT_InterruptManager
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581     137A                     _TMR1_ISR:	
 12582                           ;psect for function _TMR1_ISR
 12583                           
 12584     137A                     i1l5009:	
 12585                           ;incstack = 0
 12586                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12587                           
 12588                           
 12589                           ;mcc_generated_files/tmr1.c: 171:     PIR1bits.TMR1IF = 0;
 12590     137A  0020               	movlb	0	; select bank0
 12591     137B  1011               	bcf	17,0	;volatile
 12592     137C                     i1l5011:
 12593                           
 12594                           ;mcc_generated_files/tmr1.c: 172:     TMR1_WriteTimer(timer1ReloadVal);
 12595     137C  0021               	movlb	1	; select bank1
 12596     137D  0860               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 12597     137E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12598     137F  085F               	movf	_timer1ReloadVal^(0+128),w	;volatile
 12599     1380  00F0               	movwf	TMR1_WriteTimer@timerVal
 12600     1381  3193  23DA  3193   	fcall	_TMR1_WriteTimer
 12601                           
 12602                           ;mcc_generated_files/tmr1.c: 176:     TMR1_CallBack();
 12603     1384  3193  2352  3193   	fcall	_TMR1_CallBack
 12604     1387                     i1l395:
 12605     1387  0008               	return
 12606     1388                     __end_of_TMR1_ISR:
 12607                           
 12608                           	psect	text62
 12609     13DA                     __ptext62:	
 12610 ;; *************** function _TMR1_WriteTimer *****************
 12611 ;; Defined at:
 12612 ;;		line 133 in file "mcc_generated_files/tmr1.c"
 12613 ;; Parameters:    Size  Location     Type
 12614 ;;  timerVal        2    0[COMMON] unsigned short 
 12615 ;; Auto vars:     Size  Location     Type
 12616 ;;		None
 12617 ;; Return value:  Size  Location     Type
 12618 ;;                  1    wreg      void 
 12619 ;; Registers used:
 12620 ;;		wreg, status,2
 12621 ;; Tracked objects:
 12622 ;;		On entry : 0/0
 12623 ;;		On exit  : 0/0
 12624 ;;		Unchanged: 0/0
 12625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12626 ;;      Params:         2       0       0       0       0       0       0       0
 12627 ;;      Locals:         0       0       0       0       0       0       0       0
 12628 ;;      Temps:          0       0       0       0       0       0       0       0
 12629 ;;      Totals:         2       0       0       0       0       0       0       0
 12630 ;;Total ram usage:        2 bytes
 12631 ;; Hardware stack levels used: 1
 12632 ;; This function calls:
 12633 ;;		Nothing
 12634 ;; This function is called by:
 12635 ;;		_TMR1_ISR
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639     13DA                     _TMR1_WriteTimer:	
 12640                           ;psect for function _TMR1_WriteTimer
 12641                           
 12642     13DA                     i1l4897:	
 12643                           ;incstack = 0
 12644                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12645                           
 12646                           
 12647                           ;mcc_generated_files/tmr1.c: 133: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 134: {;mcc_generated_files/tmr1.c: 135:     if (T1CONbits.nT1SYNC == 1)
 12648     13DA  0020               	movlb	0	; select bank0
 12649     13DB  1D18               	btfss	24,2	;volatile
 12650     13DC  2BDE               	goto	u405_21
 12651     13DD  2BDF               	goto	u405_20
 12652     13DE                     u405_21:
 12653     13DE  2BE6               	goto	i1l4907
 12654     13DF                     u405_20:
 12655     13DF                     i1l4899:
 12656                           
 12657                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         T1CONbi
      +                          ts.TMR1ON = 0;
 12658     13DF  1018               	bcf	24,0	;volatile
 12659     13E0                     i1l4901:
 12660                           
 12661                           ;mcc_generated_files/tmr1.c: 141:         TMR1H = (uint8_t)(timerVal >> 8);
 12662     13E0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12663     13E1  0097               	movwf	23	;volatile
 12664     13E2                     i1l4903:
 12665                           
 12666                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
 12667     13E2  0870               	movf	TMR1_WriteTimer@timerVal,w
 12668     13E3  0096               	movwf	22	;volatile
 12669     13E4                     i1l4905:
 12670                           
 12671                           ;mcc_generated_files/tmr1.c: 145:         T1CONbits.TMR1ON =1;
 12672     13E4  1418               	bsf	24,0	;volatile
 12673                           
 12674                           ;mcc_generated_files/tmr1.c: 146:     }
 12675     13E5  2BEA               	goto	i1l392
 12676     13E6                     i1l4907:
 12677                           
 12678                           ;mcc_generated_files/tmr1.c: 148:     {;mcc_generated_files/tmr1.c: 150:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12679     13E6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12680     13E7  0097               	movwf	23	;volatile
 12681     13E8                     i1l4909:
 12682                           
 12683                           ;mcc_generated_files/tmr1.c: 151:         TMR1L = (uint8_t)timerVal;
 12684     13E8  0870               	movf	TMR1_WriteTimer@timerVal,w
 12685     13E9  0096               	movwf	22	;volatile
 12686     13EA                     i1l392:
 12687     13EA  0008               	return
 12688     13EB                     __end_of_TMR1_WriteTimer:
 12689                           
 12690                           	psect	text63
 12691     1352                     __ptext63:	
 12692 ;; *************** function _TMR1_CallBack *****************
 12693 ;; Defined at:
 12694 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;		None
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;		None
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      void 
 12701 ;; Registers used:
 12702 ;;		wreg, status,2, status,0, pclath, cstack
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12708 ;;      Params:         0       0       0       0       0       0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0
 12710 ;;      Temps:          0       0       0       0       0       0       0       0
 12711 ;;      Totals:         0       0       0       0       0       0       0       0
 12712 ;;Total ram usage:        0 bytes
 12713 ;; Hardware stack levels used: 1
 12714 ;; Hardware stack levels required when called: 1
 12715 ;; This function calls:
 12716 ;;		NULL
 12717 ;;		_TMR1_DefaultInterruptHandler
 12718 ;;		_rtcc_handle
 12719 ;; This function is called by:
 12720 ;;		_TMR1_ISR
 12721 ;; This function uses a non-reentrant model
 12722 ;;
 12723                           
 12724     1352                     _TMR1_CallBack:	
 12725                           ;psect for function _TMR1_CallBack
 12726                           
 12727     1352                     i1l4911:	
 12728                           ;incstack = 0
 12729                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12730                           
 12731                           
 12732                           ;mcc_generated_files/tmr1.c: 182:     if(TMR1_InterruptHandler)
 12733     1352  0022               	movlb	2	; select bank2
 12734     1353  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 12735     1354  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 12736     1355  1903               	btfsc	3,2
 12737     1356  2B58               	goto	u406_21
 12738     1357  2B59               	goto	u406_20
 12739     1358                     u406_21:
 12740     1358  2B5E               	goto	i1l399
 12741     1359                     u406_20:
 12742     1359                     i1l4913:
 12743                           
 12744                           ;mcc_generated_files/tmr1.c: 183:     {;mcc_generated_files/tmr1.c: 184:         TMR1_In
      +                          terruptHandler();
 12745     1359  0862               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 12746     135A  008A               	movwf	10
 12747     135B  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 12748     135C  000A               	callw
 12749     135D  3193               	pagesel	$
 12750     135E                     i1l399:
 12751     135E  0008               	return
 12752     135F                     __end_of_TMR1_CallBack:
 12753                           
 12754                           	psect	text64
 12755     1211                     __ptext64:	
 12756 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12757 ;; Defined at:
 12758 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 12759 ;; Parameters:    Size  Location     Type
 12760 ;;		None
 12761 ;; Auto vars:     Size  Location     Type
 12762 ;;		None
 12763 ;; Return value:  Size  Location     Type
 12764 ;;                  1    wreg      void 
 12765 ;; Registers used:
 12766 ;;		None
 12767 ;; Tracked objects:
 12768 ;;		On entry : 0/0
 12769 ;;		On exit  : 0/0
 12770 ;;		Unchanged: 0/0
 12771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12772 ;;      Params:         0       0       0       0       0       0       0       0
 12773 ;;      Locals:         0       0       0       0       0       0       0       0
 12774 ;;      Temps:          0       0       0       0       0       0       0       0
 12775 ;;      Totals:         0       0       0       0       0       0       0       0
 12776 ;;Total ram usage:        0 bytes
 12777 ;; Hardware stack levels used: 1
 12778 ;; This function calls:
 12779 ;;		Nothing
 12780 ;; This function is called by:
 12781 ;;		_TMR1_Initialize
 12782 ;;		_TMR1_CallBack
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786     1211                     _TMR1_DefaultInterruptHandler:	
 12787                           ;psect for function _TMR1_DefaultInterruptHandler
 12788                           
 12789     1211                     i1l405:	
 12790                           ;incstack = 0
 12791                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 12792                           
 12793     1211  0008               	return
 12794     1212                     __end_of_TMR1_DefaultInterruptHandler:
 12795                           
 12796                           	psect	text65
 12797     1305                     __ptext65:	
 12798 ;; *************** function _rtcc_handle *****************
 12799 ;; Defined at:
 12800 ;;		line 11 in file "tick.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;		None
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		wreg
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12814 ;;      Params:         0       0       0       0       0       0       0       0
 12815 ;;      Locals:         0       0       0       0       0       0       0       0
 12816 ;;      Temps:          0       0       0       0       0       0       0       0
 12817 ;;      Totals:         0       0       0       0       0       0       0       0
 12818 ;;Total ram usage:        0 bytes
 12819 ;; Hardware stack levels used: 1
 12820 ;; This function calls:
 12821 ;;		Nothing
 12822 ;; This function is called by:
 12823 ;;		_Tick_Init_SES
 12824 ;;		_TMR1_CallBack
 12825 ;; This function uses a non-reentrant model
 12826 ;;
 12827                           
 12828     1305                     _rtcc_handle:	
 12829                           ;psect for function _rtcc_handle
 12830                           
 12831     1305                     i1l4799:	
 12832                           ;incstack = 0
 12833                           ; Regs used in _rtcc_handle: [wreg]
 12834                           
 12835                           
 12836                           ;tick.c: 12:     device_time++;
 12837     1305  3001               	movlw	1
 12838     1306  0021               	movlb	1	; select bank1
 12839     1307  07D7               	addwf	_device_time^(0+128),f	;volatile
 12840     1308  3000               	movlw	0
 12841     1309  3DD8               	addwfc	(_device_time+1)^(0+128),f	;volatile
 12842     130A  3000               	movlw	0
 12843     130B  3DD9               	addwfc	(_device_time+2)^(0+128),f	;volatile
 12844     130C  3000               	movlw	0
 12845     130D  3DDA               	addwfc	(_device_time+3)^(0+128),f	;volatile
 12846     130E                     i1l1009:
 12847     130E  0008               	return
 12848     130F                     __end_of_rtcc_handle:
 12849                           
 12850                           	psect	text66
 12851     1248                     __ptext66:	
 12852 ;; *************** function _I2C_MasterIsr *****************
 12853 ;; Defined at:
 12854 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;		None
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      void 
 12861 ;; Registers used:
 12862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12868 ;;      Params:         0       0       0       0       0       0       0       0
 12869 ;;      Locals:         0       0       0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0
 12871 ;;      Totals:         0       0       0       0       0       0       0       0
 12872 ;;Total ram usage:        0 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 5
 12875 ;; This function calls:
 12876 ;;		_I2C_MasterFsm
 12877 ;; This function is called by:
 12878 ;;		_I2C_Open
 12879 ;;		_INTERRUPT_InterruptManager
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883     1248                     _I2C_MasterIsr:	
 12884                           ;psect for function _I2C_MasterIsr
 12885                           
 12886     1248                     i1l5045:	
 12887                           ;incstack = 0
 12888                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12889                           
 12890                           
 12891                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
 12892     1248  3195  2575  3192   	fcall	_I2C_MasterFsm
 12893     124B                     i1l567:
 12894     124B  0008               	return
 12895     124C                     __end_of_I2C_MasterIsr:
 12896                           
 12897                           	psect	text67
 12898     1575                     __ptext67:	
 12899 ;; *************** function _I2C_MasterFsm *****************
 12900 ;; Defined at:
 12901 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;		None
 12904 ;; Auto vars:     Size  Location     Type
 12905 ;;		None
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12910 ;; Tracked objects:
 12911 ;;		On entry : 0/0
 12912 ;;		On exit  : 0/0
 12913 ;;		Unchanged: 0/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12915 ;;      Params:         0       0       0       0       0       0       0       0
 12916 ;;      Locals:         0       0       0       0       0       0       0       0
 12917 ;;      Temps:          2       0       0       0       0       0       0       0
 12918 ;;      Totals:         2       0       0       0       0       0       0       0
 12919 ;;Total ram usage:        2 bytes
 12920 ;; Hardware stack levels used: 1
 12921 ;; Hardware stack levels required when called: 4
 12922 ;; This function calls:
 12923 ;;		_I2C_DO_ADDRESS_NACK
 12924 ;;		_I2C_DO_IDLE
 12925 ;;		_I2C_DO_RCEN
 12926 ;;		_I2C_DO_RESET
 12927 ;;		_I2C_DO_RX
 12928 ;;		_I2C_DO_RX_ACK
 12929 ;;		_I2C_DO_RX_NACK_RESTART
 12930 ;;		_I2C_DO_RX_NACK_STOP
 12931 ;;		_I2C_DO_SEND_ADR_READ
 12932 ;;		_I2C_DO_SEND_ADR_WRITE
 12933 ;;		_I2C_DO_SEND_RESTART
 12934 ;;		_I2C_DO_SEND_RESTART_READ
 12935 ;;		_I2C_DO_SEND_RESTART_WRITE
 12936 ;;		_I2C_DO_SEND_STOP
 12937 ;;		_I2C_DO_TX
 12938 ;;		_I2C_DO_TX_EMPTY
 12939 ;;		_I2C_MasterIsNack
 12940 ;;		i1_I2C_MasterClearIrq
 12941 ;; This function is called by:
 12942 ;;		_I2C_MasterIsr
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946     1575                     _I2C_MasterFsm:	
 12947                           ;psect for function _I2C_MasterFsm
 12948                           
 12949     1575                     i1l4915:	
 12950                           ;incstack = 0
 12951                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12952                           
 12953                           
 12954                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
 12955     1575  3192  2223  3195   	fcall	i1_I2C_MasterClearIrq
 12956     1578                     i1l4917:
 12957                           
 12958                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12959     1578  0022               	movlb	2	; select bank2
 12960     1579  1C3C               	btfss	(_I2C_Status^(0+256)+28),0
 12961     157A  2D7C               	goto	u407_21
 12962     157B  2D7D               	goto	u407_20
 12963     157C                     u407_21:
 12964     157C  2D88               	goto	i1l4923
 12965     157D                     u407_20:
 12966     157D                     i1l4919:
 12967     157D  3192  2290  3195   	fcall	_I2C_MasterIsNack
 12968     1580  3A00               	xorlw	0
 12969     1581  1903               	skipnz
 12970     1582  2D84               	goto	u408_21
 12971     1583  2D85               	goto	u408_20
 12972     1584                     u408_21:
 12973     1584  2D88               	goto	i1l4923
 12974     1585                     u408_20:
 12975     1585                     i1l4921:
 12976                           
 12977                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12978     1585  300F               	movlw	15
 12979     1586  0022               	movlb	2	; select bank2
 12980     1587  00BA               	movwf	(_I2C_Status^(0+256)+26)
 12981     1588                     i1l4923:
 12982                           
 12983                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12984     1588  0022               	movlb	2	; select bank2
 12985     1589  083A               	movf	(_I2C_Status^(0+256)+26),w
 12986     158A  00FA               	movwf	??_I2C_MasterFsm
 12987     158B  01FB               	clrf	??_I2C_MasterFsm+1
 12988     158C  35FA               	lslf	??_I2C_MasterFsm,f
 12989     158D  0DFB               	rlf	??_I2C_MasterFsm+1,f
 12990     158E  3000               	movlw	low _i2c_fsmStateTable
 12991     158F  077A               	addwf	??_I2C_MasterFsm,w
 12992     1590  0084               	movwf	4
 12993     1591  3018               	movlw	high _i2c_fsmStateTable
 12994     1592  3D7B               	addwfc	??_I2C_MasterFsm+1,w
 12995     1593  3880               	iorlw	128
 12996     1594  0085               	movwf	5
 12997     1595  3F01               	moviw [1]fsr0
 12998     1596  008A               	movwf	10
 12999     1597  3F00               	moviw [0]fsr0
 13000     1598  000A               	callw
 13001     1599  3195               	pagesel	$
 13002     159A  0022               	movlb	2	; select bank2
 13003     159B  00BA               	movwf	(_I2C_Status^(0+256)+26)
 13004     159C                     i1l571:
 13005     159C  0008               	return
 13006     159D                     __end_of_I2C_MasterFsm:
 13007                           
 13008                           	psect	text68
 13009     1223                     __ptext68:	
 13010 ;; *************** function i1_I2C_MasterClearIrq *****************
 13011 ;; Defined at:
 13012 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;		None
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;		None
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		None
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13026 ;;      Params:         0       0       0       0       0       0       0       0
 13027 ;;      Locals:         0       0       0       0       0       0       0       0
 13028 ;;      Temps:          0       0       0       0       0       0       0       0
 13029 ;;      Totals:         0       0       0       0       0       0       0       0
 13030 ;;Total ram usage:        0 bytes
 13031 ;; Hardware stack levels used: 1
 13032 ;; This function calls:
 13033 ;;		Nothing
 13034 ;; This function is called by:
 13035 ;;		_I2C_MasterFsm
 13036 ;; This function uses a non-reentrant model
 13037 ;;
 13038                           
 13039     1223                     i1_I2C_MasterClearIrq:	
 13040                           ;psect for function i1_I2C_MasterClearIrq
 13041                           
 13042     1223                     i1l4801:	
 13043                           ;incstack = 0
 13044                           ; Regs used in i1_I2C_MasterClearIrq: []
 13045                           
 13046                           
 13047                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 13048     1223  0020               	movlb	0	; select bank0
 13049     1224  1191               	bcf	17,3	;volatile
 13050     1225                     i1l734:
 13051     1225  0008               	return
 13052     1226                     __end_ofi1_I2C_MasterClearIrq:
 13053                           
 13054                           	psect	text69
 13055     159D                     __ptext69:	
 13056 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 13057 ;; Defined at:
 13058 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      enum E3112
 13065 ;; Registers used:
 13066 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13072 ;;      Params:         0       0       0       0       0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0
 13074 ;;      Temps:          2       0       0       0       0       0       0       0
 13075 ;;      Totals:         2       0       0       0       0       0       0       0
 13076 ;;Total ram usage:        2 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; Hardware stack levels required when called: 3
 13079 ;; This function calls:
 13080 ;;		NULL
 13081 ;;		_I2C_CallbackReturnReset
 13082 ;;		_I2C_CallbackReturnStop
 13083 ;;		_I2C_DO_SEND_RESTART
 13084 ;;		_I2C_DO_SEND_STOP
 13085 ;;		_rd1RegCompleteHandler
 13086 ;;		_rd2RegCompleteHandler
 13087 ;;		_rdBlkRegCompleteHandler
 13088 ;;		_wr1RegCompleteHandler
 13089 ;;		_wr2RegCompleteHandler
 13090 ;; This function is called by:
 13091 ;;		_I2C_MasterFsm
 13092 ;; This function uses a non-reentrant model
 13093 ;;
 13094                           
 13095     159D                     _I2C_DO_ADDRESS_NACK:	
 13096                           ;psect for function _I2C_DO_ADDRESS_NACK
 13097                           
 13098     159D                     i1l4749:	
 13099                           ;incstack = 0
 13100                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13101                           
 13102                           
 13103                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 13104     159D  0022               	movlb	2	; select bank2
 13105     159E  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13106     159F                     i1l4751:
 13107                           
 13108                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 13109     159F  3002               	movlw	2
 13110     15A0  00BB               	movwf	(_I2C_Status^(0+256)+27)
 13111                           
 13112                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 13113     15A1  2DAA               	goto	i1l4763
 13114     15A2                     i1l4753:
 13115                           
 13116                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 13117     15A2  3192  2268  3195   	fcall	_I2C_DO_SEND_RESTART
 13118     15A5  2DC5               	goto	i1l662
 13119     15A6                     i1l4757:
 13120                           
 13121                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 13122     15A6  3192  226D  3195   	fcall	_I2C_DO_SEND_STOP
 13123     15A9  2DC5               	goto	i1l662
 13124     15AA                     i1l4763:
 13125     15AA  082E               	movf	(low ((_I2C_Status| (0+256)+14)))^0,w
 13126     15AB  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13127     15AC  3004               	movlw	4
 13128     15AD  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13129     15AE  0086               	movwf	6
 13130     15AF  3001               	movlw	1	; select bank2/3
 13131     15B0  0087               	movwf	7
 13132     15B1  3F41               	moviw [1]fsr1
 13133     15B2  008A               	movwf	10
 13134     15B3  3F40               	moviw [0]fsr1
 13135     15B4  000A               	callw
 13136     15B5  3195               	pagesel	$
 13137     15B6  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
 13138     15B7  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
 13139                           
 13140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13141                           ; Switch size 1, requested type "simple"
 13142                           ; Number of cases is 1, Range of values is 0 to 0
 13143                           ; switch strategies available:
 13144                           ; Name         Instructions Cycles
 13145                           ; simple_byte            4     3 (average)
 13146                           ; direct_byte            8     6 (fixed)
 13147                           ; jumptable            260     6 (fixed)
 13148                           ;	Chosen strategy is simple_byte
 13149     15B8  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 13150     15B9  3A00               	xorlw	0	; case 0
 13151     15BA  1903               	skipnz
 13152     15BB  2DBD               	goto	i1l5335
 13153     15BC  2DA6               	goto	i1l4757
 13154     15BD                     i1l5335:
 13155                           
 13156                           ; Switch size 1, requested type "simple"
 13157                           ; Number of cases is 2, Range of values is 2 to 3
 13158                           ; switch strategies available:
 13159                           ; Name         Instructions Cycles
 13160                           ; simple_byte            7     4 (average)
 13161                           ; direct_byte           13     9 (fixed)
 13162                           ; jumptable            263     9 (fixed)
 13163                           ;	Chosen strategy is simple_byte
 13164     15BD  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
 13165     15BE  3A02               	xorlw	2	; case 2
 13166     15BF  1903               	skipnz
 13167     15C0  2DA2               	goto	i1l4753
 13168     15C1  3A01               	xorlw	1	; case 3
 13169     15C2  1903               	skipnz
 13170     15C3  2DA2               	goto	i1l4753
 13171     15C4  2DA6               	goto	i1l4757
 13172     15C5                     i1l662:
 13173     15C5  0008               	return
 13174     15C6                     __end_of_I2C_DO_ADDRESS_NACK:
 13175                           
 13176                           	psect	text70
 13177     1281                     __ptext70:	
 13178 ;; *************** function _I2C_DO_RESET *****************
 13179 ;; Defined at:
 13180 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;		None
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      enum E3112
 13187 ;; Registers used:
 13188 ;;		wreg, status,2
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13194 ;;      Params:         0       0       0       0       0       0       0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0
 13197 ;;      Totals:         0       0       0       0       0       0       0       0
 13198 ;;Total ram usage:        0 bytes
 13199 ;; Hardware stack levels used: 1
 13200 ;; This function calls:
 13201 ;;		Nothing
 13202 ;; This function is called by:
 13203 ;;		_I2C_MasterFsm
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207     1281                     _I2C_DO_RESET:	
 13208                           ;psect for function _I2C_DO_RESET
 13209                           
 13210     1281                     i1l4741:	
 13211                           ;incstack = 0
 13212                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 13213                           
 13214                           
 13215                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 13216     1281  0022               	movlb	2	; select bank2
 13217     1282  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 13218     1283                     i1l4743:
 13219                           
 13220                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 13221     1283  01BB               	clrf	(_I2C_Status^(0+256)+27)
 13222     1284                     i1l4745:
 13223                           
 13224                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 13225     1284  300E               	movlw	14
 13226     1285                     i1l656:
 13227     1285  0008               	return
 13228     1286                     __end_of_I2C_DO_RESET:
 13229                           
 13230                           	psect	text71
 13231     127C                     __ptext71:	
 13232 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13233 ;; Defined at:
 13234 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;		None
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;		None
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      enum E3112
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0, pclath, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13248 ;;      Params:         0       0       0       0       0       0       0       0
 13249 ;;      Locals:         0       0       0       0       0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0
 13251 ;;      Totals:         0       0       0       0       0       0       0       0
 13252 ;;Total ram usage:        0 bytes
 13253 ;; Hardware stack levels used: 1
 13254 ;; Hardware stack levels required when called: 1
 13255 ;; This function calls:
 13256 ;;		_I2C_MasterSendNack
 13257 ;; This function is called by:
 13258 ;;		_I2C_DO_RX
 13259 ;;		_I2C_MasterFsm
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263     127C                     _I2C_DO_RX_NACK_RESTART:	
 13264                           ;psect for function _I2C_DO_RX_NACK_RESTART
 13265                           
 13266     127C                     i1l3937:	
 13267                           ;incstack = 0
 13268                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13269                           
 13270                           
 13271                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 13272     127C  3192  2240  3192   	fcall	_I2C_MasterSendNack
 13273     127F                     i1l3939:
 13274                           
 13275                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 13276     127F  3009               	movlw	9
 13277     1280                     i1l653:
 13278     1280  0008               	return
 13279     1281                     __end_of_I2C_DO_RX_NACK_RESTART:
 13280                           
 13281                           	psect	text72
 13282     1277                     __ptext72:	
 13283 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13284 ;; Defined at:
 13285 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 13286 ;; Parameters:    Size  Location     Type
 13287 ;;		None
 13288 ;; Auto vars:     Size  Location     Type
 13289 ;;		None
 13290 ;; Return value:  Size  Location     Type
 13291 ;;                  1    wreg      enum E3112
 13292 ;; Registers used:
 13293 ;;		wreg, status,2, status,0, pclath, cstack
 13294 ;; Tracked objects:
 13295 ;;		On entry : 0/0
 13296 ;;		On exit  : 0/0
 13297 ;;		Unchanged: 0/0
 13298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13299 ;;      Params:         0       0       0       0       0       0       0       0
 13300 ;;      Locals:         0       0       0       0       0       0       0       0
 13301 ;;      Temps:          0       0       0       0       0       0       0       0
 13302 ;;      Totals:         0       0       0       0       0       0       0       0
 13303 ;;Total ram usage:        0 bytes
 13304 ;; Hardware stack levels used: 1
 13305 ;; Hardware stack levels required when called: 1
 13306 ;; This function calls:
 13307 ;;		_I2C_MasterSendNack
 13308 ;; This function is called by:
 13309 ;;		_I2C_DO_RX
 13310 ;;		_I2C_MasterFsm
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314     1277                     _I2C_DO_RX_NACK_STOP:	
 13315                           ;psect for function _I2C_DO_RX_NACK_STOP
 13316                           
 13317     1277                     i1l3943:	
 13318                           ;incstack = 0
 13319                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13320                           
 13321                           
 13322                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 13323     1277  3192  2240  3192   	fcall	_I2C_MasterSendNack
 13324     127A                     i1l3945:
 13325                           
 13326                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 13327     127A  300A               	movlw	10
 13328     127B                     i1l650:
 13329     127B  0008               	return
 13330     127C                     __end_of_I2C_DO_RX_NACK_STOP:
 13331                           
 13332                           	psect	text73
 13333     1272                     __ptext73:	
 13334 ;; *************** function _I2C_DO_RX_ACK *****************
 13335 ;; Defined at:
 13336 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;		None
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;		None
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      enum E3112
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0, pclath, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 0/0
 13347 ;;		On exit  : 0/0
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13350 ;;      Params:         0       0       0       0       0       0       0       0
 13351 ;;      Locals:         0       0       0       0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0
 13353 ;;      Totals:         0       0       0       0       0       0       0       0
 13354 ;;Total ram usage:        0 bytes
 13355 ;; Hardware stack levels used: 1
 13356 ;; Hardware stack levels required when called: 1
 13357 ;; This function calls:
 13358 ;;		_I2C_MasterSendAck
 13359 ;; This function is called by:
 13360 ;;		_I2C_MasterFsm
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364     1272                     _I2C_DO_RX_ACK:	
 13365                           ;psect for function _I2C_DO_RX_ACK
 13366                           
 13367     1272                     i1l4735:	
 13368                           ;incstack = 0
 13369                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13370                           
 13371                           
 13372                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 13373     1272  3192  2244  3192   	fcall	_I2C_MasterSendAck
 13374     1275                     i1l4737:
 13375                           
 13376                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 13377     1275  3005               	movlw	5
 13378     1276                     i1l647:
 13379     1276  0008               	return
 13380     1277                     __end_of_I2C_DO_RX_ACK:
 13381                           
 13382                           	psect	text74
 13383     126D                     __ptext74:	
 13384 ;; *************** function _I2C_DO_SEND_STOP *****************
 13385 ;; Defined at:
 13386 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;		None
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;		None
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  1    wreg      enum E3112
 13393 ;; Registers used:
 13394 ;;		wreg, status,2, status,0, pclath, cstack
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13400 ;;      Params:         0       0       0       0       0       0       0       0
 13401 ;;      Locals:         0       0       0       0       0       0       0       0
 13402 ;;      Temps:          0       0       0       0       0       0       0       0
 13403 ;;      Totals:         0       0       0       0       0       0       0       0
 13404 ;;Total ram usage:        0 bytes
 13405 ;; Hardware stack levels used: 1
 13406 ;; Hardware stack levels required when called: 1
 13407 ;; This function calls:
 13408 ;;		_I2C_MasterStop
 13409 ;; This function is called by:
 13410 ;;		_I2C_DO_TX
 13411 ;;		_I2C_DO_TX_EMPTY
 13412 ;;		_I2C_DO_ADDRESS_NACK
 13413 ;;		_I2C_MasterFsm
 13414 ;; This function uses a non-reentrant model
 13415 ;;
 13416                           
 13417     126D                     _I2C_DO_SEND_STOP:	
 13418                           ;psect for function _I2C_DO_SEND_STOP
 13419                           
 13420     126D                     i1l3925:	
 13421                           ;incstack = 0
 13422                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13423                           
 13424                           
 13425                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 13426     126D  3192  2217  3192   	fcall	_I2C_MasterStop
 13427     1270                     i1l3927:
 13428                           
 13429                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 13430     1270  3000               	movlw	0
 13431     1271                     i1l644:
 13432     1271  0008               	return
 13433     1272                     __end_of_I2C_DO_SEND_STOP:
 13434                           
 13435                           	psect	text75
 13436     1268                     __ptext75:	
 13437 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13438 ;; Defined at:
 13439 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;		None
 13442 ;; Auto vars:     Size  Location     Type
 13443 ;;		None
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  1    wreg      enum E3112
 13446 ;; Registers used:
 13447 ;;		wreg, status,2, status,0, pclath, cstack
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13453 ;;      Params:         0       0       0       0       0       0       0       0
 13454 ;;      Locals:         0       0       0       0       0       0       0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0
 13456 ;;      Totals:         0       0       0       0       0       0       0       0
 13457 ;;Total ram usage:        0 bytes
 13458 ;; Hardware stack levels used: 1
 13459 ;; Hardware stack levels required when called: 1
 13460 ;; This function calls:
 13461 ;;		_I2C_MasterEnableRestart
 13462 ;; This function is called by:
 13463 ;;		_I2C_DO_TX_EMPTY
 13464 ;;		_I2C_DO_ADDRESS_NACK
 13465 ;;		_I2C_MasterFsm
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469     1268                     _I2C_DO_SEND_RESTART:	
 13470                           ;psect for function _I2C_DO_SEND_RESTART
 13471                           
 13472     1268                     i1l3951:	
 13473                           ;incstack = 0
 13474                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13475                           
 13476                           
 13477                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 13478     1268  3192  2214  3192   	fcall	_I2C_MasterEnableRestart
 13479     126B                     i1l3953:
 13480                           
 13481                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 13482     126B  3001               	movlw	1
 13483     126C                     i1l641:
 13484     126C  0008               	return
 13485     126D                     __end_of_I2C_DO_SEND_RESTART:
 13486                           
 13487                           	psect	text76
 13488     1263                     __ptext76:	
 13489 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13490 ;; Defined at:
 13491 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;		None
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;		None
 13496 ;; Return value:  Size  Location     Type
 13497 ;;                  1    wreg      enum E3112
 13498 ;; Registers used:
 13499 ;;		wreg, status,2, status,0, pclath, cstack
 13500 ;; Tracked objects:
 13501 ;;		On entry : 0/0
 13502 ;;		On exit  : 0/0
 13503 ;;		Unchanged: 0/0
 13504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13505 ;;      Params:         0       0       0       0       0       0       0       0
 13506 ;;      Locals:         0       0       0       0       0       0       0       0
 13507 ;;      Temps:          0       0       0       0       0       0       0       0
 13508 ;;      Totals:         0       0       0       0       0       0       0       0
 13509 ;;Total ram usage:        0 bytes
 13510 ;; Hardware stack levels used: 1
 13511 ;; Hardware stack levels required when called: 1
 13512 ;; This function calls:
 13513 ;;		_I2C_MasterEnableRestart
 13514 ;; This function is called by:
 13515 ;;		_I2C_DO_TX
 13516 ;;		_I2C_MasterFsm
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520     1263                     _I2C_DO_SEND_RESTART_WRITE:	
 13521                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 13522                           
 13523     1263                     i1l3919:	
 13524                           ;incstack = 0
 13525                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13526                           
 13527                           
 13528                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 13529     1263  3192  2214  3192   	fcall	_I2C_MasterEnableRestart
 13530     1266                     i1l3921:
 13531                           
 13532                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 13533     1266  3002               	movlw	2
 13534     1267                     i1l638:
 13535     1267  0008               	return
 13536     1268                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13537                           
 13538                           	psect	text77
 13539     125E                     __ptext77:	
 13540 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13541 ;; Defined at:
 13542 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 13543 ;; Parameters:    Size  Location     Type
 13544 ;;		None
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;		None
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  1    wreg      enum E3112
 13549 ;; Registers used:
 13550 ;;		wreg, status,2, status,0, pclath, cstack
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13556 ;;      Params:         0       0       0       0       0       0       0       0
 13557 ;;      Locals:         0       0       0       0       0       0       0       0
 13558 ;;      Temps:          0       0       0       0       0       0       0       0
 13559 ;;      Totals:         0       0       0       0       0       0       0       0
 13560 ;;Total ram usage:        0 bytes
 13561 ;; Hardware stack levels used: 1
 13562 ;; Hardware stack levels required when called: 1
 13563 ;; This function calls:
 13564 ;;		_I2C_MasterEnableRestart
 13565 ;; This function is called by:
 13566 ;;		_I2C_DO_TX
 13567 ;;		_I2C_MasterFsm
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571     125E                     _I2C_DO_SEND_RESTART_READ:	
 13572                           ;psect for function _I2C_DO_SEND_RESTART_READ
 13573                           
 13574     125E                     i1l3913:	
 13575                           ;incstack = 0
 13576                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13577                           
 13578                           
 13579                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 13580     125E  3192  2214  3192   	fcall	_I2C_MasterEnableRestart
 13581     1261                     i1l3915:
 13582                           
 13583                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 13584     1261  3001               	movlw	1
 13585     1262                     i1l635:
 13586     1262  0008               	return
 13587     1263                     __end_of_I2C_DO_SEND_RESTART_READ:
 13588                           
 13589                           	psect	text78
 13590     1296                     __ptext78:	
 13591 ;; *************** function _I2C_DO_RCEN *****************
 13592 ;; Defined at:
 13593 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;		None
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  1    wreg      enum E3112
 13600 ;; Registers used:
 13601 ;;		wreg, status,2, status,0, pclath, cstack
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13607 ;;      Params:         0       0       0       0       0       0       0       0
 13608 ;;      Locals:         0       0       0       0       0       0       0       0
 13609 ;;      Temps:          0       0       0       0       0       0       0       0
 13610 ;;      Totals:         0       0       0       0       0       0       0       0
 13611 ;;Total ram usage:        0 bytes
 13612 ;; Hardware stack levels used: 1
 13613 ;; Hardware stack levels required when called: 1
 13614 ;; This function calls:
 13615 ;;		_I2C_MasterStartRx
 13616 ;; This function is called by:
 13617 ;;		_I2C_MasterFsm
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621     1296                     _I2C_DO_RCEN:	
 13622                           ;psect for function _I2C_DO_RCEN
 13623                           
 13624     1296                     i1l4701:	
 13625                           ;incstack = 0
 13626                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13627                           
 13628                           
 13629                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 13630     1296  0022               	movlb	2	; select bank2
 13631     1297  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13632     1298                     i1l4703:
 13633                           
 13634                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 13635     1298  3192  221A  3192   	fcall	_I2C_MasterStartRx
 13636     129B                     i1l4705:
 13637                           
 13638                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 13639     129B  3004               	movlw	4
 13640     129C                     i1l611:
 13641     129C  0008               	return
 13642     129D                     __end_of_I2C_DO_RCEN:
 13643                           
 13644                           	psect	text79
 13645     1777                     __ptext79:	
 13646 ;; *************** function _I2C_DO_RX *****************
 13647 ;; Defined at:
 13648 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;		None
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  1    wreg      enum E3112
 13655 ;; Registers used:
 13656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13662 ;;      Params:         0       0       0       0       0       0       0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0
 13664 ;;      Temps:          2       0       0       0       0       0       0       0
 13665 ;;      Totals:         2       0       0       0       0       0       0       0
 13666 ;;Total ram usage:        2 bytes
 13667 ;; Hardware stack levels used: 1
 13668 ;; Hardware stack levels required when called: 3
 13669 ;; This function calls:
 13670 ;;		NULL
 13671 ;;		_I2C_CallbackReturnReset
 13672 ;;		_I2C_CallbackReturnStop
 13673 ;;		_I2C_DO_RX_NACK_RESTART
 13674 ;;		_I2C_DO_RX_NACK_STOP
 13675 ;;		_I2C_MasterGetRxData
 13676 ;;		_I2C_MasterSendAck
 13677 ;;		_rd1RegCompleteHandler
 13678 ;;		_rd2RegCompleteHandler
 13679 ;;		_rdBlkRegCompleteHandler
 13680 ;;		_wr1RegCompleteHandler
 13681 ;;		_wr2RegCompleteHandler
 13682 ;; This function is called by:
 13683 ;;		_I2C_MasterFsm
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687     1777                     _I2C_DO_RX:	
 13688                           ;psect for function _I2C_DO_RX
 13689                           
 13690     1777                     i1l4669:	
 13691                           ;incstack = 0
 13692                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13693                           
 13694                           
 13695                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13696     1777  0022               	movlb	2	; select bank2
 13697     1778  0837               	movf	(low ((_I2C_Status| (0+256)+23)))^0,w
 13698     1779  0086               	movwf	6
 13699     177A  0187               	clrf	7
 13700     177B  3192  221D  3197   	fcall	_I2C_MasterGetRxData
 13701     177E  0081               	movwf	1
 13702     177F                     i1l4671:
 13703     177F  3001               	movlw	1
 13704     1780  00F8               	movwf	??_I2C_DO_RX
 13705     1781  0878               	movf	??_I2C_DO_RX,w
 13706     1782  0022               	movlb	2	; select bank2
 13707     1783  07B7               	addwf	(low ((_I2C_Status| (0+256)+23)))^0,f
 13708     1784                     i1l4673:
 13709                           
 13710                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 13711     1784  3001               	movlw	1
 13712     1785  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13713     1786  3000               	movlw	0
 13714     1787  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13715     1788  0838               	movf	(_I2C_Status^(0+256)+24),w
 13716     1789  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13717     178A  1903               	btfsc	3,2
 13718     178B  2F8D               	goto	u400_21
 13719     178C  2F8E               	goto	u400_20
 13720     178D                     u400_21:
 13721     178D  2F93               	goto	i1l599
 13722     178E                     u400_20:
 13723     178E                     i1l4675:
 13724                           
 13725                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 13726     178E  3192  2244  3197   	fcall	_I2C_MasterSendAck
 13727     1791                     i1l4677:
 13728                           
 13729                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 13730     1791  3005               	movlw	5
 13731     1792  2FB9               	goto	i1l600
 13732     1793                     i1l599:	
 13733                           ;mcc_generated_files/i2c_master.c: 388:     else
 13734                           
 13735                           
 13736                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 13737     1793  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 13738                           
 13739                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13740     1794  2F9D               	goto	i1l4693
 13741     1795                     i1l4683:
 13742                           
 13743                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 13744     1795  3192  227C  3197   	fcall	_I2C_DO_RX_NACK_RESTART
 13745     1798  2FB9               	goto	i1l600
 13746     1799                     i1l4687:
 13747                           
 13748                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 13749     1799  3192  2277  3197   	fcall	_I2C_DO_RX_NACK_STOP
 13750     179C  2FB9               	goto	i1l600
 13751     179D                     i1l4693:
 13752     179D  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 13753     179E  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13754     179F  0821               	movf	(_I2C_Status+1)^(0+256),w
 13755     17A0  008A               	movwf	10
 13756     17A1  0820               	movf	_I2C_Status^(0+256),w
 13757     17A2  000A               	callw
 13758     17A3  3197               	pagesel	$
 13759     17A4  00F8               	movwf	??_I2C_DO_RX
 13760     17A5  01F9               	clrf	??_I2C_DO_RX+1
 13761                           
 13762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13763                           ; Switch size 1, requested type "simple"
 13764                           ; Number of cases is 1, Range of values is 0 to 0
 13765                           ; switch strategies available:
 13766                           ; Name         Instructions Cycles
 13767                           ; simple_byte            4     3 (average)
 13768                           ; direct_byte            8     6 (fixed)
 13769                           ; jumptable            260     6 (fixed)
 13770                           ;	Chosen strategy is simple_byte
 13771     17A6  0879               	movf	??_I2C_DO_RX+1,w
 13772     17A7  3A00               	xorlw	0	; case 0
 13773     17A8  1903               	skipnz
 13774     17A9  2FAB               	goto	i1l5337
 13775     17AA  2F99               	goto	i1l4687
 13776     17AB                     i1l5337:
 13777                           
 13778                           ; Switch size 1, requested type "simple"
 13779                           ; Number of cases is 4, Range of values is 1 to 4
 13780                           ; switch strategies available:
 13781                           ; Name         Instructions Cycles
 13782                           ; simple_byte           13     7 (average)
 13783                           ; direct_byte           17     9 (fixed)
 13784                           ; jumptable            263     9 (fixed)
 13785                           ;	Chosen strategy is simple_byte
 13786     17AB  0878               	movf	??_I2C_DO_RX,w
 13787     17AC  3A01               	xorlw	1	; case 1
 13788     17AD  1903               	skipnz
 13789     17AE  2F99               	goto	i1l4687
 13790     17AF  3A03               	xorlw	3	; case 2
 13791     17B0  1903               	skipnz
 13792     17B1  2F95               	goto	i1l4683
 13793     17B2  3A01               	xorlw	1	; case 3
 13794     17B3  1903               	skipnz
 13795     17B4  2F95               	goto	i1l4683
 13796     17B5  3A07               	xorlw	7	; case 4
 13797     17B6  1903               	skipnz
 13798     17B7  2F99               	goto	i1l4687
 13799     17B8  2F99               	goto	i1l4687
 13800     17B9                     i1l600:
 13801     17B9  0008               	return
 13802     17BA                     __end_of_I2C_DO_RX:
 13803                           
 13804                           	psect	text80
 13805     08B4                     __ptext80:	
 13806 ;; *************** function _I2C_DO_TX *****************
 13807 ;; Defined at:
 13808 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;		None
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;		None
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  1    wreg      enum E3112
 13815 ;; Registers used:
 13816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13822 ;;      Params:         0       0       0       0       0       0       0       0
 13823 ;;      Locals:         0       0       0       0       0       0       0       0
 13824 ;;      Temps:          2       0       0       0       0       0       0       0
 13825 ;;      Totals:         2       0       0       0       0       0       0       0
 13826 ;;Total ram usage:        2 bytes
 13827 ;; Hardware stack levels used: 1
 13828 ;; Hardware stack levels required when called: 3
 13829 ;; This function calls:
 13830 ;;		NULL
 13831 ;;		_I2C_CallbackReturnReset
 13832 ;;		_I2C_CallbackReturnStop
 13833 ;;		_I2C_DO_SEND_RESTART_READ
 13834 ;;		_I2C_DO_SEND_RESTART_WRITE
 13835 ;;		_I2C_DO_SEND_STOP
 13836 ;;		_I2C_MasterIsNack
 13837 ;;		_I2C_MasterSendTxData
 13838 ;;		_rd1RegCompleteHandler
 13839 ;;		_rd2RegCompleteHandler
 13840 ;;		_rdBlkRegCompleteHandler
 13841 ;;		_wr1RegCompleteHandler
 13842 ;;		_wr2RegCompleteHandler
 13843 ;; This function is called by:
 13844 ;;		_I2C_MasterFsm
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848     08B4                     _I2C_DO_TX:	
 13849                           ;psect for function _I2C_DO_TX
 13850                           
 13851     08B4                     i1l4635:	
 13852                           ;incstack = 0
 13853                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13854                           
 13855                           
 13856                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 13857     08B4  3192  2290  3188   	fcall	_I2C_MasterIsNack
 13858     08B7  3A00               	xorlw	0
 13859     08B8  1903               	skipnz
 13860     08B9  28BB               	goto	u398_21
 13861     08BA  28BC               	goto	u398_20
 13862     08BB                     u398_21:
 13863     08BB  28EB               	goto	i1l583
 13864     08BC                     u398_20:
 13865     08BC  28C9               	goto	i1l4653
 13866     08BD                     i1l4639:
 13867                           
 13868                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13869     08BD  3192  225E  3188   	fcall	_I2C_DO_SEND_RESTART_READ
 13870     08C0  2908               	goto	i1l586
 13871     08C1                     i1l4643:
 13872                           
 13873                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13874     08C1  3192  2263  3188   	fcall	_I2C_DO_SEND_RESTART_WRITE
 13875     08C4  2908               	goto	i1l586
 13876     08C5                     i1l4647:
 13877                           
 13878                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 13879     08C5  3192  226D  3188   	fcall	_I2C_DO_SEND_STOP
 13880     08C8  2908               	goto	i1l586
 13881     08C9                     i1l4653:
 13882     08C9  0022               	movlb	2	; select bank2
 13883     08CA  082F               	movf	(low ((_I2C_Status| (0+256)+15)))^0,w
 13884     08CB  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13885     08CC  3006               	movlw	6
 13886     08CD  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13887     08CE  0086               	movwf	6
 13888     08CF  3001               	movlw	1	; select bank2/3
 13889     08D0  0087               	movwf	7
 13890     08D1  3F41               	moviw [1]fsr1
 13891     08D2  008A               	movwf	10
 13892     08D3  3F40               	moviw [0]fsr1
 13893     08D4  000A               	callw
 13894     08D5  3188               	pagesel	$
 13895     08D6  00F8               	movwf	??_I2C_DO_TX
 13896     08D7  01F9               	clrf	??_I2C_DO_TX+1
 13897                           
 13898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13899                           ; Switch size 1, requested type "simple"
 13900                           ; Number of cases is 1, Range of values is 0 to 0
 13901                           ; switch strategies available:
 13902                           ; Name         Instructions Cycles
 13903                           ; simple_byte            4     3 (average)
 13904                           ; direct_byte            8     6 (fixed)
 13905                           ; jumptable            260     6 (fixed)
 13906                           ;	Chosen strategy is simple_byte
 13907     08D8  0879               	movf	??_I2C_DO_TX+1,w
 13908     08D9  3A00               	xorlw	0	; case 0
 13909     08DA  1903               	skipnz
 13910     08DB  28DD               	goto	i1l5339
 13911     08DC  28C5               	goto	i1l4647
 13912     08DD                     i1l5339:
 13913                           
 13914                           ; Switch size 1, requested type "simple"
 13915                           ; Number of cases is 4, Range of values is 1 to 4
 13916                           ; switch strategies available:
 13917                           ; Name         Instructions Cycles
 13918                           ; simple_byte           13     7 (average)
 13919                           ; direct_byte           17     9 (fixed)
 13920                           ; jumptable            263     9 (fixed)
 13921                           ;	Chosen strategy is simple_byte
 13922     08DD  0878               	movf	??_I2C_DO_TX,w
 13923     08DE  3A01               	xorlw	1	; case 1
 13924     08DF  1903               	skipnz
 13925     08E0  28C5               	goto	i1l4647
 13926     08E1  3A03               	xorlw	3	; case 2
 13927     08E2  1903               	skipnz
 13928     08E3  28BD               	goto	i1l4639
 13929     08E4  3A01               	xorlw	1	; case 3
 13930     08E5  1903               	skipnz
 13931     08E6  28C1               	goto	i1l4643
 13932     08E7  3A07               	xorlw	7	; case 4
 13933     08E8  1903               	skipnz
 13934     08E9  28C5               	goto	i1l4647
 13935     08EA  28C5               	goto	i1l4647
 13936     08EB                     i1l583:	
 13937                           ;mcc_generated_files/i2c_master.c: 372:     else
 13938                           
 13939                           
 13940                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 13941     08EB  0022               	movlb	2	; select bank2
 13942     08EC  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13943     08ED                     i1l4655:
 13944                           
 13945                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13946     08ED  3017               	movlw	23
 13947     08EE  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13948     08EF  0086               	movwf	6
 13949     08F0  3001               	movlw	1	; select bank2/3
 13950     08F1  0087               	movwf	7
 13951     08F2  3F40               	moviw [0]fsr1
 13952     08F3  0084               	movwf	4
 13953     08F4  0185               	clrf	5
 13954     08F5  0A81               	incf	1,f
 13955     08F6  0800               	movf	0,w
 13956     08F7  3192  2254  3188   	fcall	_I2C_MasterSendTxData
 13957     08FA                     i1l4657:
 13958                           
 13959                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13960     08FA  3001               	movlw	1
 13961     08FB  0022               	movlb	2	; select bank2
 13962     08FC  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13963     08FD  3000               	movlw	0
 13964     08FE  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13965     08FF  0838               	movf	(_I2C_Status^(0+256)+24),w
 13966     0900  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13967     0901  1D03               	btfss	3,2
 13968     0902  2904               	goto	u399_21
 13969     0903  2905               	goto	u399_20
 13970     0904                     u399_21:
 13971     0904  2907               	goto	i1l4661
 13972     0905                     u399_20:
 13973     0905                     i1l4659:
 13974     0905  3006               	movlw	6
 13975     0906  2908               	goto	i1l586
 13976     0907                     i1l4661:
 13977     0907  3003               	movlw	3
 13978     0908                     i1l586:
 13979     0908  0008               	return
 13980     0909                     __end_of_I2C_DO_TX:
 13981                           
 13982                           	psect	text81
 13983     12A4                     __ptext81:	
 13984 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13985 ;; Defined at:
 13986 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;		None
 13989 ;; Auto vars:     Size  Location     Type
 13990 ;;		None
 13991 ;; Return value:  Size  Location     Type
 13992 ;;                  1    wreg      enum E3112
 13993 ;; Registers used:
 13994 ;;		wreg, status,2, status,0, pclath, cstack
 13995 ;; Tracked objects:
 13996 ;;		On entry : 0/0
 13997 ;;		On exit  : 0/0
 13998 ;;		Unchanged: 0/0
 13999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14000 ;;      Params:         0       0       0       0       0       0       0       0
 14001 ;;      Locals:         0       0       0       0       0       0       0       0
 14002 ;;      Temps:          0       0       0       0       0       0       0       0
 14003 ;;      Totals:         0       0       0       0       0       0       0       0
 14004 ;;Total ram usage:        0 bytes
 14005 ;; Hardware stack levels used: 1
 14006 ;; Hardware stack levels required when called: 1
 14007 ;; This function calls:
 14008 ;;		_I2C_MasterSendTxData
 14009 ;; This function is called by:
 14010 ;;		_I2C_MasterFsm
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014     12A4                     _I2C_DO_SEND_ADR_WRITE:	
 14015                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 14016                           
 14017     12A4                     i1l4627:	
 14018                           ;incstack = 0
 14019                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14020                           
 14021                           
 14022                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 14023     12A4  0022               	movlb	2	; select bank2
 14024     12A5  143C               	bsf	(_I2C_Status^(0+256)+28),0
 14025     12A6                     i1l4629:
 14026                           
 14027                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 14028     12A6  3536               	lslf	(_I2C_Status^(0+256)+22),w
 14029     12A7  3192  2254  3192   	fcall	_I2C_MasterSendTxData
 14030     12AA                     i1l4631:
 14031                           
 14032                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 14033     12AA  3003               	movlw	3
 14034     12AB                     i1l580:
 14035     12AB  0008               	return
 14036     12AC                     __end_of_I2C_DO_SEND_ADR_WRITE:
 14037                           
 14038                           	psect	text82
 14039     12B4                     __ptext82:	
 14040 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 14041 ;; Defined at:
 14042 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;		None
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;		None
 14047 ;; Return value:  Size  Location     Type
 14048 ;;                  1    wreg      enum E3112
 14049 ;; Registers used:
 14050 ;;		wreg, status,2, status,0, pclath, cstack
 14051 ;; Tracked objects:
 14052 ;;		On entry : 0/0
 14053 ;;		On exit  : 0/0
 14054 ;;		Unchanged: 0/0
 14055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14056 ;;      Params:         0       0       0       0       0       0       0       0
 14057 ;;      Locals:         0       0       0       0       0       0       0       0
 14058 ;;      Temps:          0       0       0       0       0       0       0       0
 14059 ;;      Totals:         0       0       0       0       0       0       0       0
 14060 ;;Total ram usage:        0 bytes
 14061 ;; Hardware stack levels used: 1
 14062 ;; Hardware stack levels required when called: 1
 14063 ;; This function calls:
 14064 ;;		_I2C_MasterSendTxData
 14065 ;; This function is called by:
 14066 ;;		_I2C_MasterFsm
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070     12B4                     _I2C_DO_SEND_ADR_READ:	
 14071                           ;psect for function _I2C_DO_SEND_ADR_READ
 14072                           
 14073     12B4                     i1l4619:	
 14074                           ;incstack = 0
 14075                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14076                           
 14077                           
 14078                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 14079     12B4  0022               	movlb	2	; select bank2
 14080     12B5  143C               	bsf	(_I2C_Status^(0+256)+28),0
 14081     12B6                     i1l4621:
 14082                           
 14083                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 14084     12B6  1403               	setc
 14085     12B7  0D36               	rlf	(_I2C_Status^(0+256)+22),w
 14086     12B8  3192  2254  3192   	fcall	_I2C_MasterSendTxData
 14087     12BB                     i1l4623:
 14088                           
 14089                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 14090     12BB  3005               	movlw	5
 14091     12BC                     i1l577:
 14092     12BC  0008               	return
 14093     12BD                     __end_of_I2C_DO_SEND_ADR_READ:
 14094                           
 14095                           	psect	text83
 14096     1259                     __ptext83:	
 14097 ;; *************** function _I2C_DO_IDLE *****************
 14098 ;; Defined at:
 14099 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;		None
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;		None
 14104 ;; Return value:  Size  Location     Type
 14105 ;;                  1    wreg      enum E3112
 14106 ;; Registers used:
 14107 ;;		wreg, status,2
 14108 ;; Tracked objects:
 14109 ;;		On entry : 0/0
 14110 ;;		On exit  : 0/0
 14111 ;;		Unchanged: 0/0
 14112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14113 ;;      Params:         0       0       0       0       0       0       0       0
 14114 ;;      Locals:         0       0       0       0       0       0       0       0
 14115 ;;      Temps:          0       0       0       0       0       0       0       0
 14116 ;;      Totals:         0       0       0       0       0       0       0       0
 14117 ;;Total ram usage:        0 bytes
 14118 ;; Hardware stack levels used: 1
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_I2C_MasterFsm
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126     1259                     _I2C_DO_IDLE:	
 14127                           ;psect for function _I2C_DO_IDLE
 14128                           
 14129     1259                     i1l4611:	
 14130                           ;incstack = 0
 14131                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 14132                           
 14133                           
 14134                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 14135     1259  0022               	movlb	2	; select bank2
 14136     125A  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 14137     125B                     i1l4613:
 14138                           
 14139                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 14140     125B  01BB               	clrf	(_I2C_Status^(0+256)+27)
 14141     125C                     i1l4615:
 14142                           
 14143                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 14144     125C  300E               	movlw	14
 14145     125D                     i1l574:
 14146     125D  0008               	return
 14147     125E                     __end_of_I2C_DO_IDLE:
 14148                           
 14149                           	psect	text84
 14150     1698                     __ptext84:	
 14151 ;; *************** function _I2C_DO_TX_EMPTY *****************
 14152 ;; Defined at:
 14153 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 14154 ;; Parameters:    Size  Location     Type
 14155 ;;		None
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;		None
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  1    wreg      enum E3112
 14160 ;; Registers used:
 14161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14167 ;;      Params:         0       0       0       0       0       0       0       0
 14168 ;;      Locals:         0       0       0       0       0       0       0       0
 14169 ;;      Temps:          2       0       0       0       0       0       0       0
 14170 ;;      Totals:         2       0       0       0       0       0       0       0
 14171 ;;Total ram usage:        2 bytes
 14172 ;; Hardware stack levels used: 1
 14173 ;; Hardware stack levels required when called: 3
 14174 ;; This function calls:
 14175 ;;		NULL
 14176 ;;		_I2C_CallbackReturnReset
 14177 ;;		_I2C_CallbackReturnStop
 14178 ;;		_I2C_DO_SEND_RESTART
 14179 ;;		_I2C_DO_SEND_STOP
 14180 ;;		_I2C_MasterSetIrq
 14181 ;;		_rd1RegCompleteHandler
 14182 ;;		_rd2RegCompleteHandler
 14183 ;;		_rdBlkRegCompleteHandler
 14184 ;;		_wr1RegCompleteHandler
 14185 ;;		_wr2RegCompleteHandler
 14186 ;; This function is called by:
 14187 ;;		_I2C_MasterFsm
 14188 ;; This function uses a non-reentrant model
 14189 ;;
 14190                           
 14191     1698                     _I2C_DO_TX_EMPTY:	
 14192                           ;psect for function _I2C_DO_TX_EMPTY
 14193                           
 14194     1698                     i1l4709:	
 14195                           ;incstack = 0
 14196                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14197                           
 14198                           
 14199                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 14200     1698  0022               	movlb	2	; select bank2
 14201     1699  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 14202                           
 14203                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14204     169A  2EA8               	goto	i1l4727
 14205     169B                     i1l4711:
 14206                           
 14207                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 14208     169B  3192  2268  3196   	fcall	_I2C_DO_SEND_RESTART
 14209     169E  2EC4               	goto	i1l617
 14210     169F                     i1l4715:
 14211                           
 14212                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 14213     169F  3192  2220  3196   	fcall	_I2C_MasterSetIrq
 14214     16A2                     i1l4717:
 14215                           
 14216                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 14217     16A2  3003               	movlw	3
 14218     16A3  2EC4               	goto	i1l617
 14219     16A4                     i1l4721:
 14220                           
 14221                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 14222     16A4  3192  226D  3196   	fcall	_I2C_DO_SEND_STOP
 14223     16A7  2EC4               	goto	i1l617
 14224     16A8                     i1l4727:
 14225     16A8  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 14226     16A9  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 14227     16AA  0821               	movf	(_I2C_Status+1)^(0+256),w
 14228     16AB  008A               	movwf	10
 14229     16AC  0820               	movf	_I2C_Status^(0+256),w
 14230     16AD  000A               	callw
 14231     16AE  3196               	pagesel	$
 14232     16AF  00F8               	movwf	??_I2C_DO_TX_EMPTY
 14233     16B0  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
 14234                           
 14235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14236                           ; Switch size 1, requested type "simple"
 14237                           ; Number of cases is 1, Range of values is 0 to 0
 14238                           ; switch strategies available:
 14239                           ; Name         Instructions Cycles
 14240                           ; simple_byte            4     3 (average)
 14241                           ; direct_byte            8     6 (fixed)
 14242                           ; jumptable            260     6 (fixed)
 14243                           ;	Chosen strategy is simple_byte
 14244     16B1  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
 14245     16B2  3A00               	xorlw	0	; case 0
 14246     16B3  1903               	skipnz
 14247     16B4  2EB6               	goto	i1l5341
 14248     16B5  2EA4               	goto	i1l4721
 14249     16B6                     i1l5341:
 14250                           
 14251                           ; Switch size 1, requested type "simple"
 14252                           ; Number of cases is 4, Range of values is 1 to 4
 14253                           ; switch strategies available:
 14254                           ; Name         Instructions Cycles
 14255                           ; simple_byte           13     7 (average)
 14256                           ; direct_byte           17     9 (fixed)
 14257                           ; jumptable            263     9 (fixed)
 14258                           ;	Chosen strategy is simple_byte
 14259     16B6  0878               	movf	??_I2C_DO_TX_EMPTY,w
 14260     16B7  3A01               	xorlw	1	; case 1
 14261     16B8  1903               	skipnz
 14262     16B9  2EA4               	goto	i1l4721
 14263     16BA  3A03               	xorlw	3	; case 2
 14264     16BB  1903               	skipnz
 14265     16BC  2E9B               	goto	i1l4711
 14266     16BD  3A01               	xorlw	1	; case 3
 14267     16BE  1903               	skipnz
 14268     16BF  2E9B               	goto	i1l4711
 14269     16C0  3A07               	xorlw	7	; case 4
 14270     16C1  1903               	skipnz
 14271     16C2  2E9F               	goto	i1l4715
 14272     16C3  2EA4               	goto	i1l4721
 14273     16C4                     i1l617:
 14274     16C4  0008               	return
 14275     16C5                     __end_of_I2C_DO_TX_EMPTY:
 14276                           
 14277                           	psect	text85
 14278     1220                     __ptext85:	
 14279 ;; *************** function _I2C_MasterSetIrq *****************
 14280 ;; Defined at:
 14281 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;		None
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;		None
 14286 ;; Return value:  Size  Location     Type
 14287 ;;                  1    wreg      void 
 14288 ;; Registers used:
 14289 ;;		None
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 0/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14295 ;;      Params:         0       0       0       0       0       0       0       0
 14296 ;;      Locals:         0       0       0       0       0       0       0       0
 14297 ;;      Temps:          0       0       0       0       0       0       0       0
 14298 ;;      Totals:         0       0       0       0       0       0       0       0
 14299 ;;Total ram usage:        0 bytes
 14300 ;; Hardware stack levels used: 1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_I2C_DO_TX_EMPTY
 14305 ;; This function uses a non-reentrant model
 14306 ;;
 14307                           
 14308     1220                     _I2C_MasterSetIrq:	
 14309                           ;psect for function _I2C_MasterSetIrq
 14310                           
 14311     1220                     i1l3957:	
 14312                           ;incstack = 0
 14313                           ; Regs used in _I2C_MasterSetIrq: []
 14314                           
 14315                           
 14316                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 14317     1220  0020               	movlb	0	; select bank0
 14318     1221  1591               	bsf	17,3	;volatile
 14319     1222                     i1l737:
 14320     1222  0008               	return
 14321     1223                     __end_of_I2C_MasterSetIrq:
 14322                           
 14323                           	psect	text86
 14324     1290                     __ptext86:	
 14325 ;; *************** function _I2C_MasterIsNack *****************
 14326 ;; Defined at:
 14327 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;		None
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;		None
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      _Bool 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14341 ;;      Params:         0       0       0       0       0       0       0       0
 14342 ;;      Locals:         0       0       0       0       0       0       0       0
 14343 ;;      Temps:          0       0       0       0       0       0       0       0
 14344 ;;      Totals:         0       0       0       0       0       0       0       0
 14345 ;;Total ram usage:        0 bytes
 14346 ;; Hardware stack levels used: 1
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_I2C_MasterFsm
 14351 ;;		_I2C_DO_TX
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355     1290                     _I2C_MasterIsNack:	
 14356                           ;psect for function _I2C_MasterIsNack
 14357                           
 14358     1290                     i1l3907:	
 14359                           ;incstack = 0
 14360                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 14361                           
 14362                           
 14363                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 14364     1290  0024               	movlb	4	; select bank4
 14365     1291  0E16               	swapf	22,w	;volatile
 14366     1292  0C89               	rrf	9,f
 14367     1293  0C89               	rrf	9,f
 14368     1294  3901               	andlw	1
 14369     1295                     i1l710:
 14370     1295  0008               	return
 14371     1296                     __end_of_I2C_MasterIsNack:
 14372                           
 14373                           	psect	text87
 14374     1254                     __ptext87:	
 14375 ;; *************** function _I2C_MasterSendTxData *****************
 14376 ;; Defined at:
 14377 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 14378 ;; Parameters:    Size  Location     Type
 14379 ;;  data            1    wreg     unsigned char 
 14380 ;; Auto vars:     Size  Location     Type
 14381 ;;  data            1    0[COMMON] unsigned char 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  1    wreg      void 
 14384 ;; Registers used:
 14385 ;;		wreg
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14391 ;;      Params:         0       0       0       0       0       0       0       0
 14392 ;;      Locals:         1       0       0       0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0
 14394 ;;      Totals:         1       0       0       0       0       0       0       0
 14395 ;;Total ram usage:        1 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; This function calls:
 14398 ;;		Nothing
 14399 ;; This function is called by:
 14400 ;;		_I2C_DO_SEND_ADR_READ
 14401 ;;		_I2C_DO_SEND_ADR_WRITE
 14402 ;;		_I2C_DO_TX
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406     1254                     _I2C_MasterSendTxData:	
 14407                           ;psect for function _I2C_MasterSendTxData
 14408                           
 14409                           
 14410                           ;incstack = 0
 14411                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 14412                           ;I2C_MasterSendTxData@data stored from wreg
 14413     1254  00F0               	movwf	I2C_MasterSendTxData@data
 14414     1255                     i1l3911:
 14415                           
 14416                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 14417     1255  0870               	movf	I2C_MasterSendTxData@data,w
 14418     1256  0024               	movlb	4	; select bank4
 14419     1257  0091               	movwf	17	;volatile
 14420     1258                     i1l692:
 14421     1258  0008               	return
 14422     1259                     __end_of_I2C_MasterSendTxData:
 14423                           
 14424                           	psect	text88
 14425     1244                     __ptext88:	
 14426 ;; *************** function _I2C_MasterSendAck *****************
 14427 ;; Defined at:
 14428 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;		None
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1    wreg      void 
 14435 ;; Registers used:
 14436 ;;		None
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14442 ;;      Params:         0       0       0       0       0       0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0
 14445 ;;      Totals:         0       0       0       0       0       0       0       0
 14446 ;;Total ram usage:        0 bytes
 14447 ;; Hardware stack levels used: 1
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		_I2C_DO_RX
 14452 ;;		_I2C_DO_RX_ACK
 14453 ;; This function uses a non-reentrant model
 14454 ;;
 14455                           
 14456     1244                     _I2C_MasterSendAck:	
 14457                           ;psect for function _I2C_MasterSendAck
 14458                           
 14459     1244                     i1l3935:	
 14460                           ;incstack = 0
 14461                           ; Regs used in _I2C_MasterSendAck: []
 14462                           
 14463                           
 14464                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 14465     1244  0024               	movlb	4	; select bank4
 14466     1245  1296               	bcf	22,5	;volatile
 14467                           
 14468                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 14469     1246  1616               	bsf	22,4	;volatile
 14470     1247                     i1l713:
 14471     1247  0008               	return
 14472     1248                     __end_of_I2C_MasterSendAck:
 14473                           
 14474                           	psect	text89
 14475     121D                     __ptext89:	
 14476 ;; *************** function _I2C_MasterGetRxData *****************
 14477 ;; Defined at:
 14478 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;		None
 14481 ;; Auto vars:     Size  Location     Type
 14482 ;;		None
 14483 ;; Return value:  Size  Location     Type
 14484 ;;                  1    wreg      unsigned char 
 14485 ;; Registers used:
 14486 ;;		wreg
 14487 ;; Tracked objects:
 14488 ;;		On entry : 0/0
 14489 ;;		On exit  : 0/0
 14490 ;;		Unchanged: 0/0
 14491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14492 ;;      Params:         0       0       0       0       0       0       0       0
 14493 ;;      Locals:         0       0       0       0       0       0       0       0
 14494 ;;      Temps:          0       0       0       0       0       0       0       0
 14495 ;;      Totals:         0       0       0       0       0       0       0       0
 14496 ;;Total ram usage:        0 bytes
 14497 ;; Hardware stack levels used: 1
 14498 ;; This function calls:
 14499 ;;		Nothing
 14500 ;; This function is called by:
 14501 ;;		_I2C_DO_RX
 14502 ;; This function uses a non-reentrant model
 14503 ;;
 14504                           
 14505     121D                     _I2C_MasterGetRxData:	
 14506                           ;psect for function _I2C_MasterGetRxData
 14507                           
 14508     121D                     i1l3931:	
 14509                           ;incstack = 0
 14510                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 14511                           
 14512                           
 14513                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 14514     121D  0024               	movlb	4	; select bank4
 14515     121E  0811               	movf	17,w	;volatile
 14516     121F                     i1l689:
 14517     121F  0008               	return
 14518     1220                     __end_of_I2C_MasterGetRxData:
 14519                           
 14520                           	psect	text90
 14521     1240                     __ptext90:	
 14522 ;; *************** function _I2C_MasterSendNack *****************
 14523 ;; Defined at:
 14524 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;		None
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;		None
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      void 
 14531 ;; Registers used:
 14532 ;;		None
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14538 ;;      Params:         0       0       0       0       0       0       0       0
 14539 ;;      Locals:         0       0       0       0       0       0       0       0
 14540 ;;      Temps:          0       0       0       0       0       0       0       0
 14541 ;;      Totals:         0       0       0       0       0       0       0       0
 14542 ;;Total ram usage:        0 bytes
 14543 ;; Hardware stack levels used: 1
 14544 ;; This function calls:
 14545 ;;		Nothing
 14546 ;; This function is called by:
 14547 ;;		_I2C_DO_RX_NACK_STOP
 14548 ;;		_I2C_DO_RX_NACK_RESTART
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552     1240                     _I2C_MasterSendNack:	
 14553                           ;psect for function _I2C_MasterSendNack
 14554                           
 14555     1240                     i1l3725:	
 14556                           ;incstack = 0
 14557                           ; Regs used in _I2C_MasterSendNack: []
 14558                           
 14559                           
 14560                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 14561     1240  0024               	movlb	4	; select bank4
 14562     1241  1696               	bsf	22,5	;volatile
 14563                           
 14564                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 14565     1242  1616               	bsf	22,4	;volatile
 14566     1243                     i1l716:
 14567     1243  0008               	return
 14568     1244                     __end_of_I2C_MasterSendNack:
 14569                           
 14570                           	psect	text91
 14571     121A                     __ptext91:	
 14572 ;; *************** function _I2C_MasterStartRx *****************
 14573 ;; Defined at:
 14574 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 14575 ;; Parameters:    Size  Location     Type
 14576 ;;		None
 14577 ;; Auto vars:     Size  Location     Type
 14578 ;;		None
 14579 ;; Return value:  Size  Location     Type
 14580 ;;                  1    wreg      void 
 14581 ;; Registers used:
 14582 ;;		None
 14583 ;; Tracked objects:
 14584 ;;		On entry : 0/0
 14585 ;;		On exit  : 0/0
 14586 ;;		Unchanged: 0/0
 14587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14588 ;;      Params:         0       0       0       0       0       0       0       0
 14589 ;;      Locals:         0       0       0       0       0       0       0       0
 14590 ;;      Temps:          0       0       0       0       0       0       0       0
 14591 ;;      Totals:         0       0       0       0       0       0       0       0
 14592 ;;Total ram usage:        0 bytes
 14593 ;; Hardware stack levels used: 1
 14594 ;; This function calls:
 14595 ;;		Nothing
 14596 ;; This function is called by:
 14597 ;;		_I2C_DO_RCEN
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601     121A                     _I2C_MasterStartRx:	
 14602                           ;psect for function _I2C_MasterStartRx
 14603                           
 14604     121A                     i1l3949:	
 14605                           ;incstack = 0
 14606                           ; Regs used in _I2C_MasterStartRx: []
 14607                           
 14608                           
 14609                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 14610     121A  0024               	movlb	4	; select bank4
 14611     121B  1596               	bsf	22,3	;volatile
 14612     121C                     i1l701:
 14613     121C  0008               	return
 14614     121D                     __end_of_I2C_MasterStartRx:
 14615                           
 14616                           	psect	text92
 14617     0002                     __ptext92:	
 14618 ;; *************** function _I2C_CallbackReturnReset *****************
 14619 ;; Defined at:
 14620 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 14621 ;; Parameters:    Size  Location     Type
 14622 ;;  funPtr          1    7[COMMON] PTR void 
 14623 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14624 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14625 ;; Auto vars:     Size  Location     Type
 14626 ;;		None
 14627 ;; Return value:  Size  Location     Type
 14628 ;;                  1    wreg      enum E363
 14629 ;; Registers used:
 14630 ;;		wreg
 14631 ;; Tracked objects:
 14632 ;;		On entry : 0/0
 14633 ;;		On exit  : 0/0
 14634 ;;		Unchanged: 0/0
 14635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14636 ;;      Params:         1       0       0       0       0       0       0       0
 14637 ;;      Locals:         0       0       0       0       0       0       0       0
 14638 ;;      Temps:          0       0       0       0       0       0       0       0
 14639 ;;      Totals:         1       0       0       0       0       0       0       0
 14640 ;;Total ram usage:        1 bytes
 14641 ;; Hardware stack levels used: 1
 14642 ;; This function calls:
 14643 ;;		Nothing
 14644 ;; This function is called by:
 14645 ;;		_I2C_Open
 14646 ;;		_I2C_DO_TX
 14647 ;;		_I2C_DO_RX
 14648 ;;		_I2C_DO_TX_EMPTY
 14649 ;;		_I2C_DO_ADDRESS_NACK
 14650 ;;		_I2C_DO_RX_EMPTY
 14651 ;; This function uses a non-reentrant model
 14652 ;;
 14653                           
 14654     0002                     _I2C_CallbackReturnReset:	
 14655                           ;psect for function _I2C_CallbackReturnReset
 14656                           
 14657     0002                     i1l3963:	
 14658                           ;incstack = 0
 14659                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 14660                           
 14661                           
 14662                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 14663     0002  3005               	movlw	5
 14664     0003                     i1l673:
 14665     0003  0008               	return
 14666     0004                     __end_of_I2C_CallbackReturnReset:
 14667                           
 14668                           	psect	text93
 14669     1212                     __ptext93:	
 14670 ;; *************** function _I2C_CallbackReturnStop *****************
 14671 ;; Defined at:
 14672 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;  funPtr          1    7[COMMON] PTR void 
 14675 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14676 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;		None
 14679 ;; Return value:  Size  Location     Type
 14680 ;;                  1    wreg      enum E363
 14681 ;; Registers used:
 14682 ;;		wreg
 14683 ;; Tracked objects:
 14684 ;;		On entry : 0/0
 14685 ;;		On exit  : 0/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14688 ;;      Params:         1       0       0       0       0       0       0       0
 14689 ;;      Locals:         0       0       0       0       0       0       0       0
 14690 ;;      Temps:          0       0       0       0       0       0       0       0
 14691 ;;      Totals:         1       0       0       0       0       0       0       0
 14692 ;;Total ram usage:        1 bytes
 14693 ;; Hardware stack levels used: 1
 14694 ;; This function calls:
 14695 ;;		Nothing
 14696 ;; This function is called by:
 14697 ;;		_I2C_Open
 14698 ;;		_I2C_SetCallback
 14699 ;;		i1_I2C_SetCallback
 14700 ;;		_I2C_DO_TX
 14701 ;;		_I2C_DO_RX
 14702 ;;		_I2C_DO_TX_EMPTY
 14703 ;;		_I2C_DO_ADDRESS_NACK
 14704 ;;		_I2C_DO_RX_EMPTY
 14705 ;; This function uses a non-reentrant model
 14706 ;;
 14707                           
 14708     1212                     _I2C_CallbackReturnStop:	
 14709                           ;psect for function _I2C_CallbackReturnStop
 14710                           
 14711     1212                     i1l3959:	
 14712                           ;incstack = 0
 14713                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 14714                           
 14715                           
 14716                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 14717     1212  3001               	movlw	1
 14718     1213                     i1l670:
 14719     1213  0008               	return
 14720     1214                     __end_of_I2C_CallbackReturnStop:
 14721                           
 14722                           	psect	text94
 14723     1447                     __ptext94:	
 14724 ;; *************** function _rdBlkRegCompleteHandler *****************
 14725 ;; Defined at:
 14726 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  ptr             1    7[COMMON] PTR void 
 14729 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14730 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      enum E363
 14735 ;; Registers used:
 14736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14742 ;;      Params:         1       0       0       0       0       0       0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0       0
 14744 ;;      Temps:          0       0       0       0       0       0       0       0
 14745 ;;      Totals:         1       0       0       0       0       0       0       0
 14746 ;;Total ram usage:        1 bytes
 14747 ;; Hardware stack levels used: 1
 14748 ;; Hardware stack levels required when called: 2
 14749 ;; This function calls:
 14750 ;;		_I2C_SetDataCompleteCallback
 14751 ;;		i1_I2C_SetBuffer
 14752 ;; This function is called by:
 14753 ;;		_I2C_ReadDataBlock
 14754 ;;		_I2C_DO_TX
 14755 ;;		_I2C_DO_RX
 14756 ;;		_I2C_DO_TX_EMPTY
 14757 ;;		_I2C_DO_ADDRESS_NACK
 14758 ;;		_I2C_DO_RX_EMPTY
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762     1447                     _rdBlkRegCompleteHandler:	
 14763                           ;psect for function _rdBlkRegCompleteHandler
 14764                           
 14765     1447                     i1l3901:	
 14766                           ;incstack = 0
 14767                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14768                           
 14769                           
 14770                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14771     1447  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14772     1448  0086               	movwf	6
 14773     1449  0187               	clrf	7
 14774     144A  3F40               	moviw [0]fsr1
 14775     144B  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14776     144C  3F41               	moviw [1]fsr1
 14777     144D  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14778     144E  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14779     144F  3E02               	addlw	2
 14780     1450  0086               	movwf	6
 14781     1451  0187               	clrf	7
 14782     1452  0801               	movf	1,w
 14783     1453  3193  236C  3194   	fcall	i1_I2C_SetBuffer
 14784                           
 14785                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14786     1456  3000               	movlw	0
 14787     1457  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14788     1458  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14789     1459  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14790     145A  3193  2323  3194   	fcall	_I2C_SetDataCompleteCallback
 14791     145D                     i1l3903:
 14792                           
 14793                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14794     145D  3002               	movlw	2
 14795     145E                     i1l104:
 14796     145E  0008               	return
 14797     145F                     __end_of_rdBlkRegCompleteHandler:
 14798                           
 14799                           	psect	text95
 14800     13C9                     __ptext95:	
 14801 ;; *************** function _wr1RegCompleteHandler *****************
 14802 ;; Defined at:
 14803 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;  ptr             1    7[COMMON] PTR void 
 14806 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14807 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;		None
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1    wreg      enum E363
 14812 ;; Registers used:
 14813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14819 ;;      Params:         1       0       0       0       0       0       0       0
 14820 ;;      Locals:         0       0       0       0       0       0       0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0       0
 14822 ;;      Totals:         1       0       0       0       0       0       0       0
 14823 ;;Total ram usage:        1 bytes
 14824 ;; Hardware stack levels used: 1
 14825 ;; Hardware stack levels required when called: 2
 14826 ;; This function calls:
 14827 ;;		_I2C_SetDataCompleteCallback
 14828 ;;		i1_I2C_SetBuffer
 14829 ;; This function is called by:
 14830 ;;		_I2C_Write1ByteRegister
 14831 ;;		_I2C_DO_TX
 14832 ;;		_I2C_DO_RX
 14833 ;;		_I2C_DO_TX_EMPTY
 14834 ;;		_I2C_DO_ADDRESS_NACK
 14835 ;;		_I2C_DO_RX_EMPTY
 14836 ;; This function uses a non-reentrant model
 14837 ;;
 14838                           
 14839     13C9                     _wr1RegCompleteHandler:	
 14840                           ;psect for function _wr1RegCompleteHandler
 14841                           
 14842     13C9                     i1l3885:	
 14843                           ;incstack = 0
 14844                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14845                           
 14846                           
 14847                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14848     13C9  3001               	movlw	1
 14849     13CA  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14850     13CB  3000               	movlw	0
 14851     13CC  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14852     13CD  0877               	movf	wr1RegCompleteHandler@ptr,w
 14853     13CE  3193  236C  3193   	fcall	i1_I2C_SetBuffer
 14854     13D1                     i1l3887:
 14855                           
 14856                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14857     13D1  3000               	movlw	0
 14858     13D2  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14859     13D3  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14860     13D4  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14861     13D5  3193  2323  3193   	fcall	_I2C_SetDataCompleteCallback
 14862     13D8                     i1l3889:
 14863                           
 14864                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14865     13D8  3004               	movlw	4
 14866     13D9                     i1l98:
 14867     13D9  0008               	return
 14868     13DA                     __end_of_wr1RegCompleteHandler:
 14869                           
 14870                           	psect	text96
 14871     13B8                     __ptext96:	
 14872 ;; *************** function _rd2RegCompleteHandler *****************
 14873 ;; Defined at:
 14874 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  ptr             1    7[COMMON] PTR void 
 14877 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14878 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      enum E363
 14883 ;; Registers used:
 14884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14885 ;; Tracked objects:
 14886 ;;		On entry : 0/0
 14887 ;;		On exit  : 0/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14890 ;;      Params:         1       0       0       0       0       0       0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0
 14893 ;;      Totals:         1       0       0       0       0       0       0       0
 14894 ;;Total ram usage:        1 bytes
 14895 ;; Hardware stack levels used: 1
 14896 ;; Hardware stack levels required when called: 2
 14897 ;; This function calls:
 14898 ;;		_I2C_SetDataCompleteCallback
 14899 ;;		i1_I2C_SetBuffer
 14900 ;; This function is called by:
 14901 ;;		_I2C_Read2ByteRegister
 14902 ;;		_I2C_DO_TX
 14903 ;;		_I2C_DO_RX
 14904 ;;		_I2C_DO_TX_EMPTY
 14905 ;;		_I2C_DO_ADDRESS_NACK
 14906 ;;		_I2C_DO_RX_EMPTY
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910     13B8                     _rd2RegCompleteHandler:	
 14911                           ;psect for function _rd2RegCompleteHandler
 14912                           
 14913     13B8                     i1l3877:	
 14914                           ;incstack = 0
 14915                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14916                           
 14917                           
 14918                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14919     13B8  3002               	movlw	2
 14920     13B9  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14921     13BA  3000               	movlw	0
 14922     13BB  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14923     13BC  0877               	movf	rd2RegCompleteHandler@ptr,w
 14924     13BD  3193  236C  3193   	fcall	i1_I2C_SetBuffer
 14925     13C0                     i1l3879:
 14926                           
 14927                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14928     13C0  3000               	movlw	0
 14929     13C1  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14930     13C2  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14931     13C3  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14932     13C4  3193  2323  3193   	fcall	_I2C_SetDataCompleteCallback
 14933     13C7                     i1l3881:
 14934                           
 14935                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14936     13C7  3002               	movlw	2
 14937     13C8                     i1l95:
 14938     13C8  0008               	return
 14939     13C9                     __end_of_rd2RegCompleteHandler:
 14940                           
 14941                           	psect	text97
 14942     13A7                     __ptext97:	
 14943 ;; *************** function _rd1RegCompleteHandler *****************
 14944 ;; Defined at:
 14945 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14946 ;; Parameters:    Size  Location     Type
 14947 ;;  ptr             1    7[COMMON] PTR void 
 14948 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14949 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14950 ;; Auto vars:     Size  Location     Type
 14951 ;;		None
 14952 ;; Return value:  Size  Location     Type
 14953 ;;                  1    wreg      enum E363
 14954 ;; Registers used:
 14955 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14961 ;;      Params:         1       0       0       0       0       0       0       0
 14962 ;;      Locals:         0       0       0       0       0       0       0       0
 14963 ;;      Temps:          0       0       0       0       0       0       0       0
 14964 ;;      Totals:         1       0       0       0       0       0       0       0
 14965 ;;Total ram usage:        1 bytes
 14966 ;; Hardware stack levels used: 1
 14967 ;; Hardware stack levels required when called: 2
 14968 ;; This function calls:
 14969 ;;		_I2C_SetDataCompleteCallback
 14970 ;;		i1_I2C_SetBuffer
 14971 ;; This function is called by:
 14972 ;;		_I2C_Read1ByteRegister
 14973 ;;		_I2C_DO_TX
 14974 ;;		_I2C_DO_RX
 14975 ;;		_I2C_DO_TX_EMPTY
 14976 ;;		_I2C_DO_ADDRESS_NACK
 14977 ;;		_I2C_DO_RX_EMPTY
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981     13A7                     _rd1RegCompleteHandler:	
 14982                           ;psect for function _rd1RegCompleteHandler
 14983                           
 14984     13A7                     i1l3869:	
 14985                           ;incstack = 0
 14986                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14987                           
 14988                           
 14989                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14990     13A7  3001               	movlw	1
 14991     13A8  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14992     13A9  3000               	movlw	0
 14993     13AA  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14994     13AB  0877               	movf	rd1RegCompleteHandler@ptr,w
 14995     13AC  3193  236C  3193   	fcall	i1_I2C_SetBuffer
 14996     13AF                     i1l3871:
 14997                           
 14998                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14999     13AF  3000               	movlw	0
 15000     13B0  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 15001     13B1  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 15002     13B2  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 15003     13B3  3193  2323  3193   	fcall	_I2C_SetDataCompleteCallback
 15004     13B6                     i1l3873:
 15005                           
 15006                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 15007     13B6  3002               	movlw	2
 15008     13B7                     i1l92:
 15009     13B7  0008               	return
 15010     13B8                     __end_of_rd1RegCompleteHandler:
 15011                           
 15012                           	psect	text98
 15013     1396                     __ptext98:	
 15014 ;; *************** function _wr2RegCompleteHandler *****************
 15015 ;; Defined at:
 15016 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  ptr             1    7[COMMON] PTR void 
 15019 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15020 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      enum E363
 15025 ;; Registers used:
 15026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15032 ;;      Params:         1       0       0       0       0       0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0
 15035 ;;      Totals:         1       0       0       0       0       0       0       0
 15036 ;;Total ram usage:        1 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 2
 15039 ;; This function calls:
 15040 ;;		_I2C_SetDataCompleteCallback
 15041 ;;		i1_I2C_SetBuffer
 15042 ;; This function is called by:
 15043 ;;		_I2C_Write2ByteRegister
 15044 ;;		_I2C_DO_TX
 15045 ;;		_I2C_DO_RX
 15046 ;;		_I2C_DO_TX_EMPTY
 15047 ;;		_I2C_DO_ADDRESS_NACK
 15048 ;;		_I2C_DO_RX_EMPTY
 15049 ;; This function uses a non-reentrant model
 15050 ;;
 15051                           
 15052     1396                     _wr2RegCompleteHandler:	
 15053                           ;psect for function _wr2RegCompleteHandler
 15054                           
 15055     1396                     i1l3893:	
 15056                           ;incstack = 0
 15057                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15058                           
 15059                           
 15060                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 15061     1396  3002               	movlw	2
 15062     1397  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 15063     1398  3000               	movlw	0
 15064     1399  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 15065     139A  0877               	movf	wr2RegCompleteHandler@ptr,w
 15066     139B  3193  236C  3193   	fcall	i1_I2C_SetBuffer
 15067     139E                     i1l3895:
 15068                           
 15069                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15070     139E  3000               	movlw	0
 15071     139F  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 15072     13A0  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 15073     13A1  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 15074     13A2  3193  2323  3193   	fcall	_I2C_SetDataCompleteCallback
 15075     13A5                     i1l3897:
 15076                           
 15077                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 15078     13A5  3004               	movlw	4
 15079     13A6                     i1l101:
 15080     13A6  0008               	return
 15081     13A7                     __end_of_wr2RegCompleteHandler:
 15082                           
 15083                           	psect	text99
 15084     136C                     __ptext99:	
 15085 ;; *************** function i1_I2C_SetBuffer *****************
 15086 ;; Defined at:
 15087 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 15088 ;; Parameters:    Size  Location     Type
 15089 ;;  buffer          1    wreg     PTR void 
 15090 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15091 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_M_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15092 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15093 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15094 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15095 ;;  bufferSize      2    0[COMMON] unsigned int 
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;  buffer          1    2[COMMON] PTR void 
 15098 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15099 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_M_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15100 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15101 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15102 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15103 ;; Return value:  Size  Location     Type
 15104 ;;                  1    wreg      void 
 15105 ;; Registers used:
 15106 ;;		wreg
 15107 ;; Tracked objects:
 15108 ;;		On entry : 0/0
 15109 ;;		On exit  : 0/0
 15110 ;;		Unchanged: 0/0
 15111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15112 ;;      Params:         2       0       0       0       0       0       0       0
 15113 ;;      Locals:         1       0       0       0       0       0       0       0
 15114 ;;      Temps:          0       0       0       0       0       0       0       0
 15115 ;;      Totals:         3       0       0       0       0       0       0       0
 15116 ;;Total ram usage:        3 bytes
 15117 ;; Hardware stack levels used: 1
 15118 ;; This function calls:
 15119 ;;		Nothing
 15120 ;; This function is called by:
 15121 ;;		_rd1RegCompleteHandler
 15122 ;;		_rd2RegCompleteHandler
 15123 ;;		_wr1RegCompleteHandler
 15124 ;;		_wr2RegCompleteHandler
 15125 ;;		_rdBlkRegCompleteHandler
 15126 ;; This function uses a non-reentrant model
 15127 ;;
 15128                           
 15129     136C                     i1_I2C_SetBuffer:	
 15130                           ;psect for function i1_I2C_SetBuffer
 15131                           
 15132                           
 15133                           ;incstack = 0
 15134                           ; Regs used in i1_I2C_SetBuffer: [wreg]
 15135                           ;i1I2C_SetBuffer@buffer stored from wreg
 15136     136C  00F2               	movwf	i1I2C_SetBuffer@buffer
 15137     136D                     i1l3843:
 15138                           
 15139                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 15140     136D  0022               	movlb	2	; select bank2
 15141     136E  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
 15142     136F  2B71               	goto	u263_21
 15143     1370  2B72               	goto	u263_20
 15144     1371                     u263_21:
 15145     1371  2B79               	goto	i1l541
 15146     1372                     u263_20:
 15147     1372                     i1l3845:
 15148                           
 15149                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 15150     1372  0872               	movf	i1I2C_SetBuffer@buffer,w
 15151     1373  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
 15152                           
 15153                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 15154     1374  0871               	movf	i1I2C_SetBuffer@bufferSize+1,w
 15155     1375  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
 15156     1376  0870               	movf	i1I2C_SetBuffer@bufferSize,w
 15157     1377  00B8               	movwf	(_I2C_Status^(0+256)+24)
 15158     1378                     i1l3847:
 15159                           
 15160                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 15161     1378  11BC               	bcf	(_I2C_Status^(0+256)+28),3
 15162     1379                     i1l541:
 15163     1379  0008               	return
 15164     137A                     __end_ofi1_I2C_SetBuffer:
 15165                           
 15166                           	psect	text100
 15167     1323                     __ptext100:	
 15168 ;; *************** function _I2C_SetDataCompleteCallback *****************
 15169 ;; Defined at:
 15170 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 15173 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15174 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15175 ;;  ptr             1    6[COMMON] PTR void 
 15176 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15177 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;		None
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1    wreg      void 
 15182 ;; Registers used:
 15183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/0
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15189 ;;      Params:         3       0       0       0       0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0
 15192 ;;      Totals:         3       0       0       0       0       0       0       0
 15193 ;;Total ram usage:        3 bytes
 15194 ;; Hardware stack levels used: 1
 15195 ;; Hardware stack levels required when called: 1
 15196 ;; This function calls:
 15197 ;;		i1_I2C_SetCallback
 15198 ;; This function is called by:
 15199 ;;		_rd1RegCompleteHandler
 15200 ;;		_rd2RegCompleteHandler
 15201 ;;		_wr1RegCompleteHandler
 15202 ;;		_wr2RegCompleteHandler
 15203 ;;		_rdBlkRegCompleteHandler
 15204 ;;		_I2C_Read1ByteRegister
 15205 ;;		_I2C_Read2ByteRegister
 15206 ;;		_I2C_Write1ByteRegister
 15207 ;;		_I2C_Write2ByteRegister
 15208 ;;		_I2C_ReadDataBlock
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212     1323                     _I2C_SetDataCompleteCallback:	
 15213                           ;psect for function _I2C_SetDataCompleteCallback
 15214                           
 15215     1323                     i1l3685:	
 15216                           ;incstack = 0
 15217                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15218                           
 15219                           
 15220                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15221     1323  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
 15222     1324  00F1               	movwf	i1I2C_SetCallback@cb+1
 15223     1325  0874               	movf	I2C_SetDataCompleteCallback@cb,w
 15224     1326  00F0               	movwf	i1I2C_SetCallback@cb
 15225     1327  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
 15226     1328  00F2               	movwf	i1I2C_SetCallback@ptr
 15227     1329  3000               	movlw	0
 15228     132A  3195  254D  3193   	fcall	i1_I2C_SetCallback
 15229     132D                     i1l544:
 15230     132D  0008               	return
 15231     132E                     __end_of_I2C_SetDataCompleteCallback:
 15232                           
 15233                           	psect	text101
 15234     154D                     __ptext101:	
 15235 ;; *************** function i1_I2C_SetCallback *****************
 15236 ;; Defined at:
 15237 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;  idx             1    wreg     enum E3130
 15240 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 15241 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15242 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15243 ;;  ptr             1    2[COMMON] PTR void 
 15244 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15245 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15246 ;; Auto vars:     Size  Location     Type
 15247 ;;  idx             1    3[COMMON] enum E3130
 15248 ;; Return value:  Size  Location     Type
 15249 ;;                  1    wreg      void 
 15250 ;; Registers used:
 15251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15252 ;; Tracked objects:
 15253 ;;		On entry : 0/0
 15254 ;;		On exit  : 0/0
 15255 ;;		Unchanged: 0/0
 15256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15257 ;;      Params:         3       0       0       0       0       0       0       0
 15258 ;;      Locals:         1       0       0       0       0       0       0       0
 15259 ;;      Temps:          0       0       0       0       0       0       0       0
 15260 ;;      Totals:         4       0       0       0       0       0       0       0
 15261 ;;Total ram usage:        4 bytes
 15262 ;; Hardware stack levels used: 1
 15263 ;; This function calls:
 15264 ;;		Nothing
 15265 ;; This function is called by:
 15266 ;;		_I2C_SetDataCompleteCallback
 15267 ;; This function uses a non-reentrant model
 15268 ;;
 15269                           
 15270     154D                     i1_I2C_SetCallback:	
 15271                           ;psect for function i1_I2C_SetCallback
 15272                           
 15273                           
 15274                           ;incstack = 0
 15275                           ; Regs used in i1_I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15276                           ;i1I2C_SetCallback@idx stored from wreg
 15277     154D  00F3               	movwf	i1I2C_SetCallback@idx
 15278     154E                     i1l3643:
 15279                           
 15280                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 15281     154E  0870               	movf	i1I2C_SetCallback@cb,w
 15282     154F  0471               	iorwf	i1I2C_SetCallback@cb+1,w
 15283     1550  1903               	btfsc	3,2
 15284     1551  2D53               	goto	u248_21
 15285     1552  2D54               	goto	u248_20
 15286     1553                     u248_21:
 15287     1553  2D65               	goto	i1l3647
 15288     1554                     u248_20:
 15289     1554                     i1l3645:
 15290                           
 15291                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15292     1554  3573               	lslf	i1I2C_SetCallback@idx,w
 15293     1555  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15294     1556  0086               	movwf	6
 15295     1557  3001               	movlw	1	; select bank2/3
 15296     1558  0087               	movwf	7
 15297     1559  0870               	movf	i1I2C_SetCallback@cb,w
 15298     155A  3FC0               	movwi [0]fsr1
 15299     155B  0871               	movf	i1I2C_SetCallback@cb+1,w
 15300     155C  3FC1               	movwi [1]fsr1
 15301                           
 15302                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 15303     155D  0873               	movf	i1I2C_SetCallback@idx,w
 15304     155E  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15305     155F  0086               	movwf	6
 15306     1560  3001               	movlw	1	; select bank2/3
 15307     1561  0087               	movwf	7
 15308     1562  0872               	movf	i1I2C_SetCallback@ptr,w
 15309     1563  0081               	movwf	1
 15310                           
 15311                           ;mcc_generated_files/i2c_master.c: 310:     }
 15312     1564  2D74               	goto	i1l564
 15313     1565                     i1l3647:
 15314                           
 15315                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15316     1565  3573               	lslf	i1I2C_SetCallback@idx,w
 15317     1566  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15318     1567  0086               	movwf	6
 15319     1568  3001               	movlw	1	; select bank2/3
 15320     1569  0087               	movwf	7
 15321     156A  3012               	movlw	low _I2C_CallbackReturnStop
 15322     156B  3FC0               	movwi [0]fsr1
 15323     156C  3012               	movlw	high _I2C_CallbackReturnStop
 15324     156D  3FC1               	movwi [1]fsr1
 15325                           
 15326                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15327     156E  0873               	movf	i1I2C_SetCallback@idx,w
 15328     156F  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15329     1570  0086               	movwf	6
 15330     1571  3001               	movlw	1	; select bank2/3
 15331     1572  0087               	movwf	7
 15332     1573  0181               	clrf	1
 15333     1574                     i1l564:
 15334     1574  0008               	return
 15335     1575                     __end_ofi1_I2C_SetCallback:
 15336                           
 15337                           	psect	text102
 15338     1217                     __ptext102:	
 15339 ;; *************** function _I2C_MasterStop *****************
 15340 ;; Defined at:
 15341 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 15342 ;; Parameters:    Size  Location     Type
 15343 ;;		None
 15344 ;; Auto vars:     Size  Location     Type
 15345 ;;		None
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  1    wreg      void 
 15348 ;; Registers used:
 15349 ;;		None
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/0
 15352 ;;		On exit  : 0/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15355 ;;      Params:         0       0       0       0       0       0       0       0
 15356 ;;      Locals:         0       0       0       0       0       0       0       0
 15357 ;;      Temps:          0       0       0       0       0       0       0       0
 15358 ;;      Totals:         0       0       0       0       0       0       0       0
 15359 ;;Total ram usage:        0 bytes
 15360 ;; Hardware stack levels used: 1
 15361 ;; This function calls:
 15362 ;;		Nothing
 15363 ;; This function is called by:
 15364 ;;		_I2C_DO_SEND_STOP
 15365 ;; This function uses a non-reentrant model
 15366 ;;
 15367                           
 15368     1217                     _I2C_MasterStop:	
 15369                           ;psect for function _I2C_MasterStop
 15370                           
 15371     1217                     i1l3723:	
 15372                           ;incstack = 0
 15373                           ; Regs used in _I2C_MasterStop: []
 15374                           
 15375                           
 15376                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 15377     1217  0024               	movlb	4	; select bank4
 15378     1218  1516               	bsf	22,2	;volatile
 15379     1219                     i1l707:
 15380     1219  0008               	return
 15381     121A                     __end_of_I2C_MasterStop:
 15382                           
 15383                           	psect	text103
 15384     1214                     __ptext103:	
 15385 ;; *************** function _I2C_MasterEnableRestart *****************
 15386 ;; Defined at:
 15387 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 15388 ;; Parameters:    Size  Location     Type
 15389 ;;		None
 15390 ;; Auto vars:     Size  Location     Type
 15391 ;;		None
 15392 ;; Return value:  Size  Location     Type
 15393 ;;                  1    wreg      void 
 15394 ;; Registers used:
 15395 ;;		None
 15396 ;; Tracked objects:
 15397 ;;		On entry : 0/0
 15398 ;;		On exit  : 0/0
 15399 ;;		Unchanged: 0/0
 15400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15401 ;;      Params:         0       0       0       0       0       0       0       0
 15402 ;;      Locals:         0       0       0       0       0       0       0       0
 15403 ;;      Temps:          0       0       0       0       0       0       0       0
 15404 ;;      Totals:         0       0       0       0       0       0       0       0
 15405 ;;Total ram usage:        0 bytes
 15406 ;; Hardware stack levels used: 1
 15407 ;; This function calls:
 15408 ;;		Nothing
 15409 ;; This function is called by:
 15410 ;;		_I2C_DO_SEND_RESTART_READ
 15411 ;;		_I2C_DO_SEND_RESTART_WRITE
 15412 ;;		_I2C_DO_SEND_RESTART
 15413 ;;		_I2C_DO_RX_EMPTY
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417     1214                     _I2C_MasterEnableRestart:	
 15418                           ;psect for function _I2C_MasterEnableRestart
 15419                           
 15420     1214                     i1l3721:	
 15421                           ;incstack = 0
 15422                           ; Regs used in _I2C_MasterEnableRestart: []
 15423                           
 15424                           
 15425                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 15426     1214  0024               	movlb	4	; select bank4
 15427     1215  1496               	bsf	22,1	;volatile
 15428     1216                     i1l695:
 15429     1216  0008               	return
 15430     1217                     __end_of_I2C_MasterEnableRestart:
 15431                           
 15432                           	psect	text104
 15433     1506                     __ptext104:	
 15434 ;; *************** function _EUSART_Transmit_ISR *****************
 15435 ;; Defined at:
 15436 ;;		line 206 in file "mcc_generated_files/eusart.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;		None
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;		None
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15450 ;;      Params:         0       0       0       0       0       0       0       0
 15451 ;;      Locals:         0       0       0       0       0       0       0       0
 15452 ;;      Temps:          1       0       0       0       0       0       0       0
 15453 ;;      Totals:         1       0       0       0       0       0       0       0
 15454 ;;Total ram usage:        1 bytes
 15455 ;; Hardware stack levels used: 1
 15456 ;; This function calls:
 15457 ;;		Nothing
 15458 ;; This function is called by:
 15459 ;;		_EUSART_Initialize
 15460 ;;		_INTERRUPT_InterruptManager
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464     1506                     _EUSART_Transmit_ISR:	
 15465                           ;psect for function _EUSART_Transmit_ISR
 15466                           
 15467     1506                     i1l5013:	
 15468                           ;incstack = 0
 15469                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15470                           
 15471                           
 15472                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15473     1506  3008               	movlw	8
 15474     1507  0020               	movlb	0	; select bank0
 15475     1508  026D               	subwf	_eusartTxBufferRemaining,w	;volatile
 15476     1509  1803               	skipnc
 15477     150A  2D0C               	goto	u431_21
 15478     150B  2D0D               	goto	u431_20
 15479     150C                     u431_21:
 15480     150C  2D26               	goto	i1l316
 15481     150D                     u431_20:
 15482     150D                     i1l5015:
 15483                           
 15484                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 15485     150D  086E               	movf	_eusartTxTail,w
 15486     150E  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15487     150F  0086               	movwf	6
 15488     1510  3001               	movlw	1	; select bank2/3
 15489     1511  0087               	movwf	7
 15490     1512  0801               	movf	1,w
 15491     1513  0023               	movlb	3	; select bank3
 15492     1514  009A               	movwf	26	;volatile
 15493     1515                     i1l5017:
 15494     1515  3001               	movlw	1
 15495     1516  00F0               	movwf	??_EUSART_Transmit_ISR
 15496     1517  0870               	movf	??_EUSART_Transmit_ISR,w
 15497     1518  0020               	movlb	0	; select bank0
 15498     1519  07EE               	addwf	_eusartTxTail,f	;volatile
 15499     151A                     i1l5019:
 15500                           
 15501                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15502     151A  3008               	movlw	8
 15503     151B  026E               	subwf	_eusartTxTail,w	;volatile
 15504     151C  1C03               	skipc
 15505     151D  2D1F               	goto	u432_21
 15506     151E  2D20               	goto	u432_20
 15507     151F                     u432_21:
 15508     151F  2D21               	goto	i1l5023
 15509     1520                     u432_20:
 15510     1520                     i1l5021:
 15511                           
 15512                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 15513     1520  01EE               	clrf	_eusartTxTail	;volatile
 15514     1521                     i1l5023:
 15515                           
 15516                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 15517     1521  3001               	movlw	1
 15518     1522  00F0               	movwf	??_EUSART_Transmit_ISR
 15519     1523  0870               	movf	??_EUSART_Transmit_ISR,w
 15520     1524  07ED               	addwf	_eusartTxBufferRemaining,f	;volatile
 15521                           
 15522                           ;mcc_generated_files/eusart.c: 218:     }
 15523     1525  2D28               	goto	i1l319
 15524     1526                     i1l316:	
 15525                           ;mcc_generated_files/eusart.c: 219:     else
 15526                           
 15527                           
 15528                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 15529     1526  0021               	movlb	1	; select bank1
 15530     1527  1211               	bcf	17,4	;volatile
 15531     1528                     i1l319:
 15532     1528  0008               	return
 15533     1529                     __end_of_EUSART_Transmit_ISR:
 15534                           
 15535                           	psect	text105
 15536     16F4                     __ptext105:	
 15537 ;; *************** function _EUSART_Receive_ISR *****************
 15538 ;; Defined at:
 15539 ;;		line 225 in file "mcc_generated_files/eusart.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;		None
 15542 ;; Auto vars:     Size  Location     Type
 15543 ;;		None
 15544 ;; Return value:  Size  Location     Type
 15545 ;;                  1    wreg      void 
 15546 ;; Registers used:
 15547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15548 ;; Tracked objects:
 15549 ;;		On entry : 0/0
 15550 ;;		On exit  : 0/0
 15551 ;;		Unchanged: 0/0
 15552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15553 ;;      Params:         0       0       0       0       0       0       0       0
 15554 ;;      Locals:         0       0       0       0       0       0       0       0
 15555 ;;      Temps:          0       0       0       0       0       0       0       0
 15556 ;;      Totals:         0       0       0       0       0       0       0       0
 15557 ;;Total ram usage:        0 bytes
 15558 ;; Hardware stack levels used: 1
 15559 ;; Hardware stack levels required when called: 2
 15560 ;; This function calls:
 15561 ;;		NULL
 15562 ;;		_EUSART_DefaultErrorHandler
 15563 ;;		_EUSART_DefaultFramingErrorHandler
 15564 ;;		_EUSART_DefaultOverrunErrorHandler
 15565 ;;		_EUSART_RxDataHandler
 15566 ;; This function is called by:
 15567 ;;		_EUSART_Initialize
 15568 ;;		_INTERRUPT_InterruptManager
 15569 ;; This function uses a non-reentrant model
 15570 ;;
 15571                           
 15572     16F4                     _EUSART_Receive_ISR:	
 15573                           ;psect for function _EUSART_Receive_ISR
 15574                           
 15575     16F4                     i1l5025:	
 15576                           ;incstack = 0
 15577                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15578                           
 15579                           
 15580                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15581     16F4  0020               	movlb	0	; select bank0
 15582     16F5  086C               	movf	_eusartRxHead,w	;volatile
 15583     16F6  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15584     16F7  0086               	movwf	6
 15585     16F8  3001               	movlw	1	; select bank2/3
 15586     16F9  0087               	movwf	7
 15587     16FA  0181               	clrf	1
 15588     16FB                     i1l5027:
 15589                           
 15590                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 15591     16FB  0023               	movlb	3	; select bank3
 15592     16FC  1D1D               	btfss	29,2	;volatile
 15593     16FD  2EFF               	goto	u433_21
 15594     16FE  2F00               	goto	u433_20
 15595     16FF                     u433_21:
 15596     16FF  2F0D               	goto	i1l5033
 15597     1700                     u433_20:
 15598     1700                     i1l5029:
 15599                           
 15600                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15601     1700  0020               	movlb	0	; select bank0
 15602     1701  086C               	movf	_eusartRxHead,w	;volatile
 15603     1702  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15604     1703  0086               	movwf	6
 15605     1704  3001               	movlw	1	; select bank2/3
 15606     1705  0087               	movwf	7
 15607     1706  1481               	bsf	1,1
 15608     1707                     i1l5031:
 15609                           
 15610                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 15611     1707  0022               	movlb	2	; select bank2
 15612     1708  0866               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 15613     1709  008A               	movwf	10
 15614     170A  0865               	movf	_EUSART_FramingErrorHandler^(0+256),w
 15615     170B  000A               	callw
 15616     170C  3196               	pagesel	$
 15617     170D                     i1l5033:
 15618                           
 15619                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 15620     170D  0023               	movlb	3	; select bank3
 15621     170E  1C9D               	btfss	29,1	;volatile
 15622     170F  2F11               	goto	u434_21
 15623     1710  2F12               	goto	u434_20
 15624     1711                     u434_21:
 15625     1711  2F1F               	goto	i1l5039
 15626     1712                     u434_20:
 15627     1712                     i1l5035:
 15628                           
 15629                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15630     1712  0020               	movlb	0	; select bank0
 15631     1713  086C               	movf	_eusartRxHead,w	;volatile
 15632     1714  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15633     1715  0086               	movwf	6
 15634     1716  3001               	movlw	1	; select bank2/3
 15635     1717  0087               	movwf	7
 15636     1718  1501               	bsf	1,2
 15637     1719                     i1l5037:
 15638                           
 15639                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 15640     1719  0022               	movlb	2	; select bank2
 15641     171A  0864               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 15642     171B  008A               	movwf	10
 15643     171C  0863               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 15644     171D  000A               	callw
 15645     171E  3196               	pagesel	$
 15646     171F                     i1l5039:
 15647                           
 15648                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15649     171F  0020               	movlb	0	; select bank0
 15650     1720  086C               	movf	_eusartRxHead,w	;volatile
 15651     1721  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15652     1722  0086               	movwf	6
 15653     1723  3001               	movlw	1	; select bank2/3
 15654     1724  0087               	movwf	7
 15655     1725  0801               	movf	1,w
 15656     1726  1903               	btfsc	3,2
 15657     1727  2F29               	goto	u435_21
 15658     1728  2F2A               	goto	u435_20
 15659     1729                     u435_21:
 15660     1729  2F31               	goto	i1l5043
 15661     172A                     u435_20:
 15662     172A                     i1l5041:
 15663                           
 15664                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 15665     172A  0023               	movlb	3	; select bank3
 15666     172B  0821               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 15667     172C  008A               	movwf	10
 15668     172D  0820               	movf	_EUSART_ErrorHandler^(0+384),w
 15669     172E  000A               	callw
 15670     172F  3196               	pagesel	$
 15671                           
 15672                           ;mcc_generated_files/eusart.c: 242:     } else {
 15673     1730  2F34               	goto	i1l326
 15674     1731                     i1l5043:
 15675                           
 15676                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 15677     1731  3194  245F  3196   	fcall	_EUSART_RxDataHandler
 15678     1734                     i1l326:
 15679     1734  0008               	return
 15680     1735                     __end_of_EUSART_Receive_ISR:
 15681                           
 15682                           	psect	text106
 15683     123C                     __ptext106:	
 15684 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15685 ;; Defined at:
 15686 ;;		line 261 in file "mcc_generated_files/eusart.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;		None
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;		None
 15691 ;; Return value:  Size  Location     Type
 15692 ;;                  1    wreg      void 
 15693 ;; Registers used:
 15694 ;;		None
 15695 ;; Tracked objects:
 15696 ;;		On entry : 0/0
 15697 ;;		On exit  : 0/0
 15698 ;;		Unchanged: 0/0
 15699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15700 ;;      Params:         0       0       0       0       0       0       0       0
 15701 ;;      Locals:         0       0       0       0       0       0       0       0
 15702 ;;      Temps:          0       0       0       0       0       0       0       0
 15703 ;;      Totals:         0       0       0       0       0       0       0       0
 15704 ;;Total ram usage:        0 bytes
 15705 ;; Hardware stack levels used: 1
 15706 ;; This function calls:
 15707 ;;		Nothing
 15708 ;; This function is called by:
 15709 ;;		_EUSART_Initialize
 15710 ;;		_EUSART_Receive_ISR
 15711 ;; This function uses a non-reentrant model
 15712 ;;
 15713                           
 15714     123C                     _EUSART_DefaultOverrunErrorHandler:	
 15715                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15716                           
 15717     123C                     i1l4891:	
 15718                           ;incstack = 0
 15719                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15720                           
 15721                           
 15722                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 15723     123C  0023               	movlb	3	; select bank3
 15724     123D  121D               	bcf	29,4	;volatile
 15725                           
 15726                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 15727     123E  161D               	bsf	29,4	;volatile
 15728     123F                     i1l336:
 15729     123F  0008               	return
 15730     1240                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15731                           
 15732                           	psect	text107
 15733     1210                     __ptext107:	
 15734 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15735 ;; Defined at:
 15736 ;;		line 259 in file "mcc_generated_files/eusart.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;		None
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;		None
 15741 ;; Return value:  Size  Location     Type
 15742 ;;                  1    wreg      void 
 15743 ;; Registers used:
 15744 ;;		None
 15745 ;; Tracked objects:
 15746 ;;		On entry : 0/0
 15747 ;;		On exit  : 0/0
 15748 ;;		Unchanged: 0/0
 15749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15750 ;;      Params:         0       0       0       0       0       0       0       0
 15751 ;;      Locals:         0       0       0       0       0       0       0       0
 15752 ;;      Temps:          0       0       0       0       0       0       0       0
 15753 ;;      Totals:         0       0       0       0       0       0       0       0
 15754 ;;Total ram usage:        0 bytes
 15755 ;; Hardware stack levels used: 1
 15756 ;; This function calls:
 15757 ;;		Nothing
 15758 ;; This function is called by:
 15759 ;;		_EUSART_Initialize
 15760 ;;		_EUSART_Receive_ISR
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764     1210                     _EUSART_DefaultFramingErrorHandler:	
 15765                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15766                           
 15767     1210                     i1l333:	
 15768                           ;incstack = 0
 15769                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15770                           
 15771     1210  0008               	return
 15772     1211                     __end_of_EUSART_DefaultFramingErrorHandler:
 15773                           
 15774                           	psect	text108
 15775     1238                     __ptext108:	
 15776 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15777 ;; Defined at:
 15778 ;;		line 269 in file "mcc_generated_files/eusart.c"
 15779 ;; Parameters:    Size  Location     Type
 15780 ;;		None
 15781 ;; Auto vars:     Size  Location     Type
 15782 ;;		None
 15783 ;; Return value:  Size  Location     Type
 15784 ;;                  1    wreg      void 
 15785 ;; Registers used:
 15786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15787 ;; Tracked objects:
 15788 ;;		On entry : 0/0
 15789 ;;		On exit  : 0/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15792 ;;      Params:         0       0       0       0       0       0       0       0
 15793 ;;      Locals:         0       0       0       0       0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0
 15795 ;;      Totals:         0       0       0       0       0       0       0       0
 15796 ;;Total ram usage:        0 bytes
 15797 ;; Hardware stack levels used: 1
 15798 ;; Hardware stack levels required when called: 1
 15799 ;; This function calls:
 15800 ;;		_EUSART_RxDataHandler
 15801 ;; This function is called by:
 15802 ;;		_EUSART_Initialize
 15803 ;;		_EUSART_Receive_ISR
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807     1238                     _EUSART_DefaultErrorHandler:	
 15808                           ;psect for function _EUSART_DefaultErrorHandler
 15809                           
 15810     1238                     i1l4893:	
 15811                           ;incstack = 0
 15812                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15813                           
 15814                           
 15815                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 15816     1238  3194  245F  3192   	fcall	_EUSART_RxDataHandler
 15817     123B                     i1l339:
 15818     123B  0008               	return
 15819     123C                     __end_of_EUSART_DefaultErrorHandler:
 15820                           
 15821                           	psect	text109
 15822     145F                     __ptext109:	
 15823 ;; *************** function _EUSART_RxDataHandler *****************
 15824 ;; Defined at:
 15825 ;;		line 249 in file "mcc_generated_files/eusart.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15839 ;;      Params:         0       0       0       0       0       0       0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0
 15841 ;;      Temps:          1       0       0       0       0       0       0       0
 15842 ;;      Totals:         1       0       0       0       0       0       0       0
 15843 ;;Total ram usage:        1 bytes
 15844 ;; Hardware stack levels used: 1
 15845 ;; This function calls:
 15846 ;;		Nothing
 15847 ;; This function is called by:
 15848 ;;		_EUSART_Receive_ISR
 15849 ;;		_EUSART_DefaultErrorHandler
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853     145F                     _EUSART_RxDataHandler:	
 15854                           ;psect for function _EUSART_RxDataHandler
 15855                           
 15856     145F                     i1l4599:	
 15857                           ;incstack = 0
 15858                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15859                           
 15860                           
 15861                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 15862     145F  0020               	movlb	0	; select bank0
 15863     1460  086C               	movf	_eusartRxHead,w
 15864     1461  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15865     1462  0086               	movwf	6
 15866     1463  3001               	movlw	1	; select bank2/3
 15867     1464  0087               	movwf	7
 15868     1465  0023               	movlb	3	; select bank3
 15869     1466  0819               	movf	25,w	;volatile
 15870     1467  0081               	movwf	1
 15871     1468                     i1l4601:
 15872     1468  3001               	movlw	1
 15873     1469  00F0               	movwf	??_EUSART_RxDataHandler
 15874     146A  0870               	movf	??_EUSART_RxDataHandler,w
 15875     146B  0020               	movlb	0	; select bank0
 15876     146C  07EC               	addwf	_eusartRxHead,f	;volatile
 15877     146D                     i1l4603:
 15878                           
 15879                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15880     146D  3008               	movlw	8
 15881     146E  026C               	subwf	_eusartRxHead,w	;volatile
 15882     146F  1C03               	skipc
 15883     1470  2C72               	goto	u397_21
 15884     1471  2C73               	goto	u397_20
 15885     1472                     u397_21:
 15886     1472  2C74               	goto	i1l4607
 15887     1473                     u397_20:
 15888     1473                     i1l4605:
 15889                           
 15890                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 15891     1473  01EC               	clrf	_eusartRxHead	;volatile
 15892     1474                     i1l4607:
 15893                           
 15894                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 15895     1474  3001               	movlw	1
 15896     1475  00F0               	movwf	??_EUSART_RxDataHandler
 15897     1476  0870               	movf	??_EUSART_RxDataHandler,w
 15898     1477  07EA               	addwf	_eusartRxCount,f	;volatile
 15899     1478                     i1l330:
 15900     1478  0008               	return
 15901     1479                     __end_of_EUSART_RxDataHandler:
 15902     007E                     btemp	set	126	;btemp
 15903     007E                     int$flags	set	126
 15904     007E                     wtemp0	set	126
 15905     216A                     
 15906                           	psect	idloc
 15907                           
 15908                           ;Config register IDLOC0 @ 0x8000
 15909                           ;	unspecified, using default values
 15910     8000                     	org	32768
 15911     8000  3FFF               	dw	16383
 15912                           
 15913                           ;Config register IDLOC1 @ 0x8001
 15914                           ;	unspecified, using default values
 15915     8001                     	org	32769
 15916     8001  3FFF               	dw	16383
 15917                           
 15918                           ;Config register IDLOC2 @ 0x8002
 15919                           ;	unspecified, using default values
 15920     8002                     	org	32770
 15921     8002  3FFF               	dw	16383
 15922                           
 15923                           ;Config register IDLOC3 @ 0x8003
 15924                           ;	unspecified, using default values
 15925     8003                     	org	32771
 15926     8003  3FFF               	dw	16383
 15927                           
 15928                           	psect	config
 15929                           
 15930                           ;Config register CONFIG1 @ 0x8007
 15931                           ;	Oscillator Selection
 15932                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15933                           ;	Watchdog Timer Enable
 15934                           ;	WDTE = ON, WDT enabled
 15935                           ;	Power-up Timer Enable
 15936                           ;	PWRTE = OFF, PWRT disabled
 15937                           ;	MCLR Pin Function Select
 15938                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15939                           ;	Flash Program Memory Code Protection
 15940                           ;	CP = OFF, Program memory code protection is disabled
 15941                           ;	Data Memory Code Protection
 15942                           ;	CPD = OFF, Data memory code protection is disabled
 15943                           ;	Brown-out Reset Enable
 15944                           ;	BOREN = ON, Brown-out Reset enabled
 15945                           ;	Clock Out Enable
 15946                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15947                           ;	Internal/External Switchover
 15948                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15949                           ;	Fail-Safe Clock Monitor Enable
 15950                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15951     8007                     	org	32775
 15952     8007  3FFC               	dw	16380
 15953                           
 15954                           ;Config register CONFIG2 @ 0x8008
 15955                           ;	Flash Memory Self-Write Protection
 15956                           ;	WRT = OFF, Write protection off
 15957                           ;	Voltage Regulator Capacitor Enable
 15958                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
 15959                           ;	PLL Enable
 15960                           ;	PLLEN = OFF, 4x PLL disabled
 15961                           ;	Stack Overflow/Underflow Reset Enable
 15962                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15963                           ;	Brown-out Reset Voltage Selection
 15964                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15965                           ;	Low-Voltage Programming Enable
 15966                           ;	LVP = ON, Low-voltage programming enabled
 15967     8008                     	org	32776
 15968     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         87
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     73      80
    BANK1            80     55      80
    BANK2            80      0      79
    BANK3            80      0       2
    BANK4            42      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2364$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2369	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2364	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2363	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ModbusRTU_Slave_Poll@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    ModbusSlaveF04@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    S1479$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1479$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1479$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_M_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_M_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_M_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), NULL(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Transmit_ISR(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> SHT30_CMD_MEASURE_M_Enable(BANK1[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->i1_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _llabs->_Get_millis
    _ReadData->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _I2C_WriteNBytes->_I2C_SetAddressNackCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_ReadNBytes->_I2C_Open
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterRead->_I2C_MasterOperation
    _ModbusSlave_Process->_ModbusRTU_Slave_Poll
    _ModbusRTU_Slave_Poll->_ModbusSlaveF04
    _validateRequest->_Modbus_calcCRC
    _Modbus_getRxBuff->_EUSART_Read
    _ModbusSlaveF04->_Modbus_sendTxBuff
    _Modbus_sendTxBuff->_Modbus_calcCRC
    _Tick_Init_SES->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _App_Process->_Task_Sensor
    _Task_Sensor->_ReadData
    _ReadData->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16769
                           _App_Init
                        _App_Process
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _App_Process                                          0     0      0   15931
                     _Task_Indicator
                            _Task_MB
                        _Task_Sensor
 ---------------------------------------------------------------------------------
 (2) _Task_Sensor                                         12    12      0   13697
                                             43 BANK1     12    12      0
                         _Get_millis
                           _ReadData
                              _llabs
 ---------------------------------------------------------------------------------
 (3) _llabs                                                8     0      8     142
                                              4 BANK0      8     0      8
                         _Get_millis (ARG)
 ---------------------------------------------------------------------------------
 (3) _ReadData                                            30    30      0   13555
                                             13 BANK1     30    30      0
                         _Get_millis
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3177
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2566
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      4     1      3    3472
                                              8 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1818
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      4     1      3     862
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadNBytes                                       4     1      3    1654
                                              4 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        3     1      2    1222
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     144
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterRead                                       0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      46
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Task_MB                                              0     0      0    2234
                   _ModbusSlave_Init
                _ModbusSlave_Process
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Process                                  1     1      0    2212
               _ModbusRTU_Slave_Poll
 ---------------------------------------------------------------------------------
 (4) _ModbusRTU_Slave_Poll                                14    12      2    2210
                                             52 BANK0     14    12      2
                         _Get_millis
                     _ModbusSlaveF04
                   _Modbus_getRxBuff
                  _Modbus_sendTxBuff
                     _buildException
                    _validateRequest
 ---------------------------------------------------------------------------------
 (5) _validateRequest                                     17    17      0     393
                                             15 BANK0     17    17      0
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (5) _buildException                                       3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _Modbus_getRxBuff                                     8     8      0      48
                                              2 BANK0      8     8      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ModbusSlaveF04                                      23    21      2     847
                                             30 BANK0     22    20      2
                  _Modbus_sendTxBuff
 ---------------------------------------------------------------------------------
 (5) _Modbus_sendTxBuff                                   15    15      0     435
                                             15 BANK0     15    15      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                         _Get_millis
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (6) _Modbus_calcCRC                                      15    13      2     277
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (4) _Get_millis                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Init                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Task_Indicator                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     174
                        _Device_Init
                    _TMR1_StartTimer
                      _Tick_Init_SES
 ---------------------------------------------------------------------------------
 (2) _Tick_Init_SES                                        0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Device_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   40698
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     164
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (11) _rtcc_handle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   40534
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       2     2      0   40534
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i1_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i1_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0   10139
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             1     0      1    1988
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (13) i1_I2C_SetBuffer                                     3     1      2     174
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (13) _I2C_SetDataCompleteCallback                         3     0      3    1770
                                              4 COMMON     3     0      3
                  i1_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetCallback                                   4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Device_Init
     _TMR1_StartTimer
     _Tick_Init_SES
       _TMR1_SetInterruptHandler
   _App_Process
     _Task_Indicator
     _Task_MB
       _ModbusSlave_Init
       _ModbusSlave_Process
         _ModbusRTU_Slave_Poll
           _Get_millis
           _ModbusSlaveF04
             _Modbus_sendTxBuff
               _EUSART_Write
               _EUSART_is_tx_done
               _Get_millis
               _Modbus_calcCRC
           _Modbus_getRxBuff
             _EUSART_Read
           _Modbus_sendTxBuff
           _buildException
           _validateRequest
             _Modbus_calcCRC
     _Task_Sensor
       _Get_millis
       _ReadData
         _Get_millis
         _I2C_ReadNBytes
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterRead
             _I2C_MasterOperation
               _I2C_MasterStart
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterEnableIrq
             _I2C_MasterOpen
             _I2C_SetInterruptHandler
           _I2C_SetBuffer
         _I2C_WriteNBytes
           _I2C_Close
           _I2C_MasterWrite
             _I2C_MasterOperation
           _I2C_Open
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___fltol
         ___xxtofl
       _llabs
         _Get_millis (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
             i1_I2C_SetCallback
           i1_I2C_SetBuffer
         _rd2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _rdBlkRegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i1_I2C_MasterClearIrq *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      FF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     37      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       2      12        2.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               2A      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      FF      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Apr 27 15:48:51 2023

                            _Modbus_sendTxBuff 0D19                           ?_ModbusSlave_Process 0070  
                ?_EUSART_SetRxInterruptHandler 0020                         ??_I2C_DO_SEND_ADR_READ 0070  
                                 ___fldiv@aexp 00AC                                   ___fldiv@bexp 00AB  
                                 ___fldiv@sign 00A4                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                             ?_Modbus_sendTxBuff 0070  
                                           l71 1697                                             l80 1505  
                      buildException@exception 0021                                  _ReadData$2361 00C3  
                                _ReadData$2362 00C7                          ??_I2C_DO_SEND_RESTART 0070  
                          __Umul8_16@word_mpld 0026                                            l303 161F  
                                          l135 14E4                                            l304 1629  
                                          l402 12C5                                            l307 1641  
                                          l163 1431                                            l342 12E0  
                                          l166 12A3                                            l351 12FB  
                                          l345 12E9                                            l169 1253  
                                          l522 14AD                                            l354 12F2  
                                          l514 1304                                            l531 128A  
                                          l348 12D7                                            l541 1446  
                                          l381 14C8                                            l518 17FF  
                                          l534 128F                                            l550 1339  
                                          l279 1776                                            l384 1228  
                                          l288 124F                                            l704 1234  
                                          l528 081D                                            l298 15EE  
                                          l731 1231                                            l564 1617  
                                          l725 1237                                            l734 122B  
                                          l559 12CE                                            l808 02EC  
                                          l817 0BC9                                            l922 166C  
                                          l931 0964                                            l683 136B  
                                          l844 16C6                                            l846 16C8  
                                          l686 122E                                            l855 16D8  
                                          l919 0C6D                                            l935 0B32  
                                          l943 07FB                                            l880 1318  
                                          l873 0AAD                                            l857 16DA  
                                          l953 0D71                                            l859 16F3  
                                          l883 1322                                            l980 088F  
                                          l877 0AAD                                            l965 0DDB  
                                          l983 0892                                            l967 0DFB  
                                          l976 09C3                                            l985 08B3  
                                          l995 140C                                            l988 1492  
                          __end_of_App_Process 1323                                _timer1ReloadVal 00DF  
                       ??_EUSART_RxDataHandler 0070                            ??_Modbus_sendTxBuff 002F  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                 ___flmul@aexp 0040                                   ___flmul@bexp 0041  
                          __end_of_Device_Init 0AAE                   ??_I2C_SetAddressNackCallback 0028  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 1281  
                                 ___fltol@exp1 0029                                ?_buildException 0070  
                                         l1012 13FB                                           l1006 141E  
                      ??_rd2RegCompleteHandler 0078                                           l4001 07AA  
                                         l1505 0728                                           l1521 0FFF  
                                         l1506 072F                                           l4011 07BD  
                                         l1363 0A1F                                           l1603 0C91  
                                         l1540 0FC7                                           l1356 0A34  
                                         l4021 07DA                                           l4013 07C2  
                                         l4005 07AD                                           l4101 0560  
                                         l1541 0FE5                                           l1605 0D18  
                                         l1366 0A34                                           l1622 0864  
                                         l4015 07C7                                           l1463 057E  
                                         l4111 0574                                           l4103 0561  
                                         l1543 0FF4                                           l1535 0F74  
                                         l1519 0E5F                                           l1616 0CE4  
                                         l4017 07CC                                           l4025 07DC  
                                         l5001 1401                                           l4201 067A  
                                         l4121 058E                                           l4105 0566  
                                         l4113 0576                                           l4041 09D7  
                                         l1617 0CF0                                           l1609 0CCA  
                                         l1625 0864                                           l4027 07EC  
                                         l4019 07D3                                           l5003 1406  
                                         l4211 06A1                                           l4203 0683  
                                         l1467 05FB                                           l4131 0598  
                                         l4123 0590                                           l4115 0584  
                                         l4107 056B                                           l1571 051B  
                                         l4051 09F7                                           l4043 09E8  
                                         l4035 09C4                                           l1484 068B  
                                         l1476 072F                                           l1580 154C  
                                         l3501 0967                                           l4029 07F2  
                                         l5005 1409                                           l4221 06B6  
                                         l4213 06A8                                           l4205 0693  
                                         l1469 05D9                                           l4141 05A2  
                                         l4133 059A                                           l4125 0592  
                                         l4117 0588                                           l4109 0573  
                                         l4301 0E54                                           l1565 04A7  
                                         l4045 09E9                                           l4037 09CE  
                                         l1494 06CF                                           l3503 096B  
                                         l4231 06C6                                           l4223 06BB  
                                         l4215 06AC                                           l4207 0698  
                                         l4151 05AB                                           l4143 05A4  
                                         l4135 059C                                           l4127 0594  
                                         l4119 058C                                           l4071 0528  
                                         l4303 0E56                                           l1559 0527  
                                         l4047 09F1                                           l5007 141F  
                                         l1488 06AD                                           l3521 0993  
                                         l3505 096E                                           l3601 15F1  
                                         l4241 06E1                                           l1497 0706  
                                         l4233 06CC                                           l4217 06B1  
                                         l4225 06BD                                           l4161 05E7  
                                         l4153 05C2                                           l4145 05A6  
                                         l4137 059E                                           l4129 0596  
                                         l4081 0538                                           l4073 052C  
                                         l4321 0EA8                                           l4305 0E67  
                                         l4313 0E82                                           l4065 0A16  
                                         l4057 09FF                                           l4049 09F3  
                                         l5201 1390                                           l1578 153C  
                                         l5051 1315                                           l3531 09AB  
                                         l3523 0997                                           l3515 0982  
                                         l3507 0980                                           l3611 0D3F  
                                         l3603 15F7                                           l4251 0718  
                                         l4243 06E5                                           l4219 06B4  
                                         l4227 06C1                                           l4171 0604  
                                         l4163 05E8                                           l4155 05DD  
                                         l4147 05A8                                           l4139 05A0  
                                         l4091 0550                                           l4083 053D  
                                         l4075 052E                                           l4331 0ED1  
                                         l4323 0EB8                                           l4315 0E88  
                                         l4307 0E73                                           l4411 02F7  
                                         l4067 0A24                                           l4059 0A0F  
                                         l3533 09B6                                           l3525 099B  
                                         l3517 0988                                           l3509 0980  
                                         l3621 0D77                                           l3613 0D47  
                                         l3541 15C6                                           l3701 149B  
                                         l3605 1608                                           l4261 072A  
                                         l4253 071D                                           l4245 0702  
                                         l4237 06D4                                           l4229 06C2  
                                         l4181 061D                                           l4165 05F0  
                                         l4157 05E1                                           l4149 05AA  
                                         l4093 0553                                           l4085 0545  
                                         l4077 0532                                           l4341 0F09  
                                         l4333 0EE0                                           l4325 0EC1  
                                         l4309 0E79                                           l4501 0487  
                                         l4421 030C                                           l4413 02F8  
                                         l4405 02ED                                           l4069 0A29  
                                         l5053 1319                                           l5047 130F  
                                         l3535 09BF                                           l3527 09A1  
                                         l3519 098D                                           l3631 0DA7  
                                         l3623 0D86                                           l3615 0D5E  
                                         l3607 0D19                                           l3551 15E5  
                                         l3543 15CC                                           l3711 14A7  
                                         l3703 149C                                           l4263 072E  
                                         l4255 071E                                           l4247 070B  
                                         l4239 06D9                                           l4191 0630  
                                         l4183 0621                                           l4175 060D  
                                         l4159 05E3                                           l4167 05F4  
                                         l4095 0559                                           l4087 0546  
                                         l4079 0533                                           l4351 0F2E  
                                         l4343 0F0A                                           l4335 0EE5  
                                         l4327 0ECA                                           l4319 0E92  
                                         l4271 0E0A                                           l4503 048B  
                                         l4431 0320                                           l4423 0314  
                                         l4415 02FD                                           l4407 02F1  
                                         l5055 131C                                           l5049 1312  
                                         l3481 1624                                           l3473 124C  
                                         l3529 09A5                                           l3641 0DF2  
                                         l3633 0DAF                                           l3625 0D8B  
                                         l3617 0D66                                           l3609 0D26  
                                         l3553 15E7                                           l3545 15DA  
                                         l3705 149E                                           l3713 14AB  
                                         l3561 12C6                                           l4257 0722  
                                         l4249 0710                                           l4185 0623  
                                         l4177 0615                                           l4169 05FF  
                                         l4193 0635                                           l4097 055A  
                                         l4089 0548                                           l4361 0F46  
                                         l4353 0F30                                           l4345 0F1A  
                                         l4337 0EE7                                           l4329 0ECC  
                                         l4281 0E22                                           l4273 0E0C  
                                         l4265 0DFC                                           l4521 04D5  
                                         l4513 04AC                                           l4505 048C  
                                         l4441 033C                                           l4433 0325  
                                         l4425 0319                                           l4417 0302  
                                         l4409 02F3                                           l5057 131F  
                                         l3491 163D                                           l3483 162A  
                                         l3635 0DBC                                           l3627 0D9C  
                                         l3619 0D73                                           l3731 0BDE  
                                         l3555 15EA                                           l3547 15DE  
                                         l3539 15C6                                           l3811 0B14  
                                         l3803 0AFF                                           l3563 1229  
                                         l3707 14A1                                           l3571 1367  
                                         l3651 17C3                                           l4259 0724  
                                         l4195 064B                                           l4187 0627  
                                         l4179 0619                                           l4099 055C  
                                         l4371 0F70                                           l4355 0F37  
                                         l4363 0F4A                                           l4339 0EEF  
                                         l4347 0F20                                           l4291 0E3C  
                                         l4275 0E12                                           l4283 0E24  
                                         l4267 0E01                                           l4531 0507  
                                         l4515 04B1                                           l4523 04D9  
                                         l4507 0490                                           l4451 035A  
                                         l4443 0341                                           l4435 032A  
                                         l4427 031B                                           l4419 030A  
                                         l5333 16E8                                           l3485 1632  
                                         l3493 163F                                           l3477 161A  
                                         l3637 0DDD                                           l3741 0BFC  
                                         l3733 0BE5                                           l3557 15EC  
                                         l3549 15E4                                           l3821 0B2F  
                                         l3813 0B17                                           l3581 122C  
                                         l3709 14A4                                           l3717 1286  
                                         l3573 136A                                           l3565 135F  
                                         l3661 17D5                                           l3653 17C7  
                                         l4197 066F                                           l4189 0628  
                                         l4381 0F8C                                           l4365 0F4F  
                                         l4357 0F3C                                           l4349 0F26  
                                         l4293 0E3E                                           l4285 0E2D  
                                         l4277 0E17                                           l4269 0E05  
                                         l4541 051F                                           l4533 0509  
                                         l4525 04E6                                           l4517 04B9  
                                         l4509 04A4                                           l4461 03B1  
                                         l4453 0367                                           l4445 0346  
                                         l4437 0332                                           l4429 031F  
                                         l3487 1636                                           l3479 161A  
                                         l3639 0DE2                                           l3751 0C6A  
                                         l3743 0C01                                           l3735 0BEC  
                                         l3727 0BCC                                           l3815 0B1B  
                                         l3495 1232                                           l3591 0811  
                                         l3583 0802                                           l3567 1364  
                                         l3671 17E5                                           l3663 17D6  
                                         l3655 17C8                                           l4199 0675  
                                         l4391 0FDA                                           l4383 0FA4  
                                         l4375 0F79                                           l4367 0F51  
                                         l4359 0F3E                                           l4295 0E44  
                                         l4287 0E33                                           l4279 0E20  
                                         l3831 152D                                           l4535 0514  
                                         l4527 04F0                                           l4519 04BD  
                                         l4471 03E2                                           l4463 03BE  
                                         l4455 037F                                           l4439 0334  
                                         l4551 0C89                                           l4609 12BD  
                                         l3489 163C                                           l3497 13EB  
                                         l3745 0C55                                           l3737 0BEE  
                                         l3729 0BDA                                           l3761 1666  
                                         l3825 0B31                                           l3817 0B21  
                                         l3809 0B02                                           l3593 0815  
                                         l3585 0809                                           l3577 1235  
                                         l3569 1365                                           l3673 17EA  
                                         l3665 17DB                                           l3657 17C9  
                                         l3681 17FD                                           l3649 17BC  
                                         l4393 0FE3                                           l4377 0F7F  
                                         l4385 0FA9                                           l4369 0F55  
                                         l4297 0E49                                           l4289 0E37  
                                         l3833 1534                                           l4537 0518  
                                         l4529 04FE                                           l4481 041F  
                                         l4473 03E9                                           l4465 03C5  
                                         l4457 038C                                           l4449 034F  
                                         l4561 0CB0                                           l4553 0C99  
                                         l4545 0C70                                           l3747 0C59  
                                         l3739 0BF6                                           l3771 092D  
                                         l3763 0909                                           l3755 1644  
                                         l3819 0B26                                           l3579 122F  
                                         l3595 0818                                           l3587 080A  
                                         l3675 17F2                                           l3667 17DF  
                                         l3659 17D0                                           l3691 1445  
                                         l3851 166F                                           l4395 0FE8  
                                         l4387 0FB9                                           l4379 0F88  
                                         l4299 0E52                                           l3835 1538  
                                         l4539 0519                                           l4491 0470  
                                         l4483 0431                                           l4475 03FB  
                                         l4467 03D0                                           l4459 03A4  
                                         l4571 0CDA                                           l4563 0CB7  
                                         l4547 0C75                                           l4811 14D4  
                                         l4803 14C9                                           l5195 1388  
                                         l3749 0C6A                                           l3781 094F  
                                         l3773 0935                                           l3757 1657  
                                         l3589 080C                                           l3597 081B  
                                         l3677 17F5                                           l3669 17E4  
                                         l3861 14E7                                           l3693 132E  
                                         l3853 1679                                           l4397 0FEC  
                                         l4389 0FD7                                           l3837 1543  
                                         l3829 152B                                           l4493 0477  
                                         l4485 0446                                           l4477 0402  
                                         l4469 03D7                                           l4581 0D0B  
                                         l4573 0CDE                                           l4565 0CBB  
                                         l4557 0CA2                                           l4549 0C79  
                                         l4821 14DF                                           l4813 14D6  
                                         l4805 14CD                                           l5197 138E  
                                         l3783 0954                                           l3775 093F  
                                         l3767 090B                                           l3759 1660  
                                         l3679 17F8                                           l3687 1434  
                                         l3863 14E7                                           l3695 128B  
                                         l3855 1682                                           l4399 0FEF  
                                         l3839 1548                                           l4495 047B  
                                         l4487 045D                                           l4479 0414  
                                         l4583 0D0F                                           l4575 0CE8  
                                         l4567 0CC3                                           l4559 0CA5  
                                         l4591 12F3                                           l4831 1300  
                                         l4823 14E0                                           l4815 14D8  
                                         l4807 14CF                                           l5199 138F  
                                         l3785 095D                                           l3769 0911  
                                         l3777 0941                                           l3793 0AAE  
                                         l3689 1439                                           l3865 14F1  
                                         l3857 168C                                           l3849 166F  
                                         l4497 047C                                           l4489 0464  
                                         l4585 0D10                                           l4577 0CF2  
                                         l4569 0CD1                                           l4593 12D8  
                                         l4833 1303                                           l4825 14E2  
                                         l4817 14DB                                           l4809 14D2  
                                         l4841 1250                                           l3779 0946  
                                         l3795 0AE0                                           l3971 073C  
                                         l3699 1493                                           l3867 14FD  
                                         l3859 168F                                           l4499 0483  
                                         l4579 0D06                                           l4771 00A4  
                                         l4931 0BAF                                           l4595 12E1  
                                         l4827 12FC                                           l4835 129D  
                                         l4819 14DD                                           l4851 14B5  
                                         l4843 14AE                                           l4941 16CA  
                                         l3789 095F                                           l3797 0AF4  
                                         l3981 0753                                           l3973 0741  
                                         l4773 00AF                                           l4781 083C  
                                         l4933 0BB2                                           l4925 0B33  
                                         l4597 12CF                                           l4589 12EA  
                                         l4861 1737                                           l4829 12FE  
                                         l4837 12A0                                           l4853 14BC  
                                         l4845 14B0                                           l4943 16D6  
                                         l4783 0867                                           l3799 0AFD  
                                         l3967 0732                                           l4791 1479  
                                         l4775 00C2                                           l4935 0BB9  
                                         l4927 0B99                                           l4871 1750  
                                         l4863 173F                                           l4839 12A1  
                                         l4855 14BD                                           l4847 14B2  
                                         l4961 0A5C                                           l4953 0A35  
                                         l4785 0873                                           l3993 0794  
                                         l3977 0743                                           l3969 073A  
                                         l4793 1479                                           l4777 00EC  
                                         l4937 0BBF                                           l4929 0BAC  
                                         l4881 176F                                           l4873 1752  
                                         l4865 1749                                           l4857 14C5  
                                         l4849 14B4                                           l4971 0A74  
                                         l4963 0A61                                           l4955 0A4D  
                                         l4947 16DC                                           l4939 16C5  
                                         l4787 087B                                           l3995 0799  
                                         l3979 074D                                           l3987 0764  
                                         l4795 1481                                           l4779 081E  
                                         l4883 1771                                           l4875 1753  
                                         l4867 174C                                           l4859 1735  
                                         l4981 0A8C                                           l4973 0A79  
                                         l4957 0A52                                           l4965 0A65  
                                         l4789 0894                                           l3997 079E  
                                         l4797 1489                                           l4885 1772  
                                         l4877 175B                                           l4869 174E  
                                         l4991 0AA4                                           l4983 0A91  
                                         l4967 0A6A                                           l4975 0A7D  
                                         l4959 0A57                                           l4895 1226  
                                         l3999 07A4                                           l4887 1773  
                                         l4879 1763                                           l4993 0AA9  
                                         l4977 0A82                                           l4985 0A95  
                                         l4969 0A6F                                           l4889 1774  
                                         l4987 0A9A                                           l4979 0A87  
                                         l4995 140D                                           l4989 0A9F  
                                         l4997 1416                                           l4999 13FC  
                                         u3000 05FB                                           u3001 05FA  
                                         u3010 05FF                                           u3011 05FE  
                                         u2300 161F                                           u3100 0698  
                                         u3020 0604                                           u2301 161E  
                                         u3101 0697                                           u3021 0603  
                                         _LATA 010C                                           u2310 1624  
                                         u3030 0619                                           _LATB 010D  
                                         u2311 1623                                           u3031 0618  
                                         _LATC 010E                                           u2320 163C  
                                         u2400 0809                                           u3200 06E5  
                                         u3120 06AC                                           u3040 061D  
                                         u2321 163B                                           u2401 0808  
                                         u3201 06E4                                           u3121 06AB  
                                         u3041 061C                                           _LATE 0110  
                                         u2410 0811                                           u3210 06F3  
                                         u3130 06B1                                           u3050 0627  
                                         u4010 00EC                                           u2411 0810  
                                         u3131 06B0                                           u3115 06A2  
                                         u3051 0626                                           u4011 00EB  
                                         u2340 0993                                           u2500 1439  
                                         u2420 15F7                                           u3220 0702  
                                         u3140 06BB                                           u3300 0E17  
                                         u4020 083C                                           u4100 0BB9  
                                         u2341 0992                                           u2501 1438  
                                         u2421 15F6                                           u3221 0701  
                                         u3141 06BA                                           u3301 0E16  
                                         u4021 083B                                           u4101 0BB8  
                                         u2350 09A1                                           u2430 0D71  
                                         u2510 149B                                           u3230 070B  
                                         u3150 06C1                                           u3070 064B  
                                         u3310 0E3C                                           u4110 0BBF  
                                         u2351 09A0                                           u2335 0989  
                                         u2431 0D70                                           u2511 149A  
                                         u3231 070A                                           u3215 06EF  
                                         u3151 06C0                                           u3071 064A  
                                         u3311 0E3B                                           u4111 0BBE  
                                         u4200 0A74                                           u4120 16D4  
                                         u4040 088F                                           u2360 09AB  
                                         u2440 0D9C                                           u2520 0C6A  
                                         u3240 0710                                           u3160 06C6  
                                         u3080 067A                                           u3320 0E44  
                                         u2600 1538                                           u4201 0A73  
                                         u4121 16D1                                           u4041 088E  
                                         u2361 09AA                                           u2441 0D9B  
                                         u2521 0C69                                           u3241 070F  
                                         u3161 06C5                                           u3081 0679  
                                         u3073 0647                                           u3065 062A  
                                         u3321 0E43                                           u2601 1537  
                                         u4210 0A79                                           u2450 0DA7  
                                         u2370 15CC                                           u2530 093F  
                                         u3250 071D                                           u3170 06CC  
                                         u3090 0693                                           u3410 0F09  
                                         u3330 0E49                                           u4211 0A78  
                                         u2451 0DA6                                           u2371 15CB  
                                         u2531 093E                                           u3251 071C  
                                         u3171 06CB                                           u3091 0692  
                                         u3411 0F08                                           u3331 0E48  
                                         u4220 0A82                                           u4140 0A52  
                                         u2460 0DAF                                           u2380 15E4  
                                         u2540 0946                                           u2700 0793  
                                         u4300 1401                                           u3260 0722  
                                         u3180 06D3                                           u3500 0F78  
                                         u3420 0F26                                           u3340 0E67  
                                         u2620 1548                                           u4221 0A81  
                                         u4141 0A51                                           u2461 0DAE  
                                         u2445 0D98                                           u2525 0C66  
                                         u2381 15E3                                           u2541 0945  
                                         u2701 0792                                           u4301 1400  
                                         u3261 0721                                           u3181 06D2  
                                         u3501 0F77                                           u3421 0F25  
                                         u3405 0EE8                                           u3341 0E66  
                                         u2621 1547                                           u4230 0A87  
                                         u4150 0A57                                           u4134 16D6  
                                         u2470 0DDB                                           u2550 0954  
                                         u2710 07AA                                           u2390 1364  
                                         u3270 072E                                           u3190 06D9  
                                         u3510 0F7F                                           u3430 0F2E  
                                         u3350 0E88                                           u4231 0A86  
                                         u4151 0A56                                           u2471 0DDA  
                                         u2551 0953                                           u2711 07A9  
                                         u2391 1363                                           u3271 072D  
                                         u3191 06D8                                           u3511 0F7E  
                                         u3431 0F2D                                           u3415 0F05  
                                         u3351 0E87                                           u2615 153D  
                                         u4240 0A8C                                           u4160 0A5C  
                                         u2560 0AF4                                           u2720 07BC  
                                         u2640 1679                                           u3520 0F8C  
                                         u3360 0ED1                                           u3280 0E0A  
                                         u3600 031F                                           u2800 0A0E  
                                         u4241 0A8B                                           u4161 0A5B  
                                         u2561 0AF3                                           u2721 07BB  
                                         u2641 1678                                           u3521 0F8B  
                                         u3361 0ED0                                           u3281 0E09  
                                         u3601 031E                                           u2801 0A0D  
                                         u4250 0A91                                           u4170 0A61  
                                         u2570 0B14                                           u2730 07C7  
                                         u2490 17C3                                           u2650 1697  
                                         u3530 0F9A                                           u3450 0F3C  
                                         u3290 0E12                                           u3610 0325  
                                         u2810 0A15                                           u4090 0B99  
                                         u4251 0A90                                           u4171 0A60  
                                         u2571 0B13                                           u2731 07C6  
                                         u2491 17C2                                           u2651 1696  
                                         u3451 0F3B                                           u3291 0E11  
                                         u3611 0324                                           u2811 0A14  
                                         u4091 0B98                                           u4260 0A9A  
                                         u4180 0A6A                                           u2580 0B21  
                                         u2740 07CC                                           u2660 14F1  
                                         u2900 0566                                           u3540 0FB9  
                                         u3620 032A                                           u4261 0A99  
                                         u4181 0A69                                           u2581 0B20  
                                         u2565 0AF0                                           u2741 07CB  
                                         u2661 14F0                                           u2901 0565  
                                         u3541 0FB8                                           u3445 0F31  
                                         u3621 0329                                           u4270 0A9F  
                                         u4190 0A6F                                           u2590 0B26  
                                         u2670 1505                                           u2910 056B  
                                         u3550 0FD7                                           u3470 0F4F  
                                         u3390 0EE5                                           u3710 047B  
                                         u3630 0341                                           u2830 0A24  
                                         u2750 09CE                                           u4271 0A9E  
                                         u4191 0A6E                                           u2591 0B25  
                                         u2671 1504                                           u2911 056A  
                                         u3551 0FD6                                           u3535 0F96  
                                         u3471 0F4E                                           u3391 0EE4  
                                         u3375 0ED2                                           u3711 047A  
                                         u3631 0340                                           u2831 0A23  
                                         u2751 09CD                                           u4280 0AA4  
                                         u2680 0741                                           u2920 0584  
                                         u3560 0FEC                                           u3480 0F55  
                                         u3800 04E6                                           u3640 0346  
                                         u2840 0A29                                           u2760 09E4  
                                         u4281 0AA3                                           u2681 0740  
                                         u2921 0583                                           u3561 0FEB  
                                         u3545 0FB5                                           u3481 0F54  
                                         u3465 0F3F                                           u3385 0ED9  
                                         u3801 04E5                                           u3705 0471  
                                         u3641 0345                                           u2841 0A28  
                                         u2825 0A17                                           u4290 0AA9  
                                         u2690 074D                                           u2930 0588  
                                         u2850 0532                                           u3490 0F70  
                                         u3810 04FE                                           u3730 048B  
                                         u3570 02F7                                           u2770 09F7  
                                         u4291 0AA8                                           u2691 074C  
                                         u2931 0587                                           u2851 0531  
                                         u3555 0FD3                                           u3491 0F6F  
                                         u3811 04FD                                           u3731 048A  
                                         u3571 02F6                                           u2771 09F6  
                                         u2940 05C2                                           u2860 0538  
                                         u3820 0518                                           u3740 0490  
                                         u3580 02FD                                           u2780 09FE  
                                         u2941 05C1                                           u2861 0537  
                                         u3821 0517                                           u3805 04E2  
                                         u3741 048F                                           u3725 047D  
                                         u3581 02FC                                           u2781 09FD  
                                         u2765 09E0                                           u2950 05CC  
                                         u2870 053D                                           u3750 04A4  
                                         u3670 043C                                           u3590 0302  
                                         u3910 0CDE                                           u3830 0C75  
                                         u2951 05CA                                           u2871 053C  
                                         u3815 04FA                                           u3751 04A3  
                                         u3655 03BF                                           u3591 0301  
                                         u3911 0CDD                                           u3831 0C74  
                                         u2960 05CD                                           u2880 0559  
                                         u3760 04AB                                           u3680 0453  
                                         u3920 0CE4                                           u3840 0C79  
                                         u2945 05BE                                           u2881 0558  
                                         u3761 04AA                                           u3665 03EA  
                                         u3921 0CE3                                           u3905 0CD4  
                                         u3841 0C78                                           u2970 05DD  
                                         u2890 0560                                           u3770 04B1  
                                         u3930 0CE8                                           u3850 0C99  
                                         u2971 05DC                                           u2891 055F  
                                         u3771 04B0                                           u3675 0438  
                                         u2795 0A00                                           u3931 0CE7  
                                         u3851 0C98                                           u2980 05E7  
                                         u3780 04BD                                           u3940 0CFC  
                                         u2981 05E6                                           u3781 04BC  
                                         u3685 044F                                           u3790 04CB  
                                         u3950 0D0B                                           u3870 0CB6  
                                         u3695 045E                                           u3951 0D0A  
                                         u3871 0CB5                                           u3960 0D0F  
                                         u3961 0D0E                                           u3945 0CF8  
                                         u3865 0CAA                                           u3890 0CD0  
                                         u2995 05EA                                           u3795 04C7  
                                         u3891 0CCF                                           i1l92 13B7  
                                         u3885 0CC4                                           i1l95 13C8  
                                         i1l98 13D9                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 0078  
                                         _main 1388                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                             __end_of_I2C_Open 1800                                           btemp 007E  
                                         start 0058                      __end_of_Modbus_sendTxBuff 0DFC  
                      _I2C_SetInterruptHandler 12C6                                ___fldiv@new_exp 00A5  
                              ?_Task_Indicator 0070                     ??_TMR1_SetInterruptHandler 0022  
                        ??_ModbusSlave_Process 0062                               ?_I2C_MasterClose 0070  
                              __end_of_Task_MB 140D                                _I2C_WriteNBytes 166D  
                                ?_EUSART_Write 0070                               ?_I2C_MasterStart 0070  
                                _I2C_DO_RX_ACK 1272                               ?_I2C_MasterWrite 0070  
                __end_of_OSCILLATOR_Initialize 12A4                                  ___fltol@sign1 0028  
                              __end_of___fladd 0730                                          ?_main 0070  
                              __end_of___fldiv 1000                                __end_of___flmul 0528  
                              __end_of___fltol 0A35                                _TMR1_StartTimer 1226  
                                        _T1CON 0018                                          i1l101 13A6  
                                        i1l104 145E                                          i1l204 0056  
                                        i1l330 1478                                          i1l316 1526  
                                        i1l333 1210                                          i1l405 1211  
                                        i1l326 1734                                          i1l319 1528  
                                        i1l336 123F                                          i1l600 17B9  
                                        i1l193 001B                                          i1l339 123B  
                                        i1l611 129C                                          i1l195 002C  
                                        i1l541 1379                                          i1l701 121C  
                                        i1l197 003D                                          i1l710 1295  
                                        i1l198 0056                                          i1l199 0048  
                                        i1l544 132D                                          i1l392 13EA  
                                        i1l713 1247                                          i1l617 16C4  
                                        i1l641 126C                                          i1l650 127B  
                                        i1l707 1219                                          i1l635 1262  
                                        i1l571 159C                                          i1l395 1387  
                                        i1l564 1574                                          i1l716 1243  
                                        i1l580 12AB                                          i1l644 1271  
                                        i1l653 1280                                          i1l670 1213  
                                        i1l574 125D                                          i1l638 1267  
                                        i1l662 15C5                                          i1l734 1225  
                                        i1l583 08EB                                          i1l647 1276  
                                        i1l567 124B                                          i1l399 135E  
                                        i1l656 1285                                          i1l673 0003  
                                        i1l737 1222                                          i1l577 12BC  
                                        i1l586 0908                                          i1l692 1258  
                                        i1l695 1216                                          i1l599 1793  
                                        i1l689 121F                                          _RCREG 0199  
                                        _RCSTA 019D                               ?_validateRequest 0070  
                                        _TMR1H 0017                                          _TMR1L 0016  
                            ??_I2C_DO_TX_EMPTY 0078                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                                          _SW_Ad 0069  
                                   _Get_millis 13EB                               __end_of_TMR1_ISR 1388  
                            __end_of_I2C_DO_RX 17BA                              __end_of_I2C_DO_TX 0909  
                               _WDT_Initialize 1250                                          _llabs 081E  
                            __end_of_I2C_Close 14AE                 I2C_MasterOperation@returnValue 0021  
                      _I2C_MasterEnableRestart 1214                        __end_of_TMR1_Initialize 14C9  
                                        pclath 000A                               ?_I2C_SetCallback 0020  
                 I2C_SetAddressNackCallback@cb 0024                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                            ??i1_I2C_SetBuffer 0072                                _TMR1_WriteTimer 13DA  
                             __end_of_App_Init 1319                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 005A                                   __end_of_main 1396  
                                  _App_Process 1319                      ?_I2C_DO_SEND_RESTART_READ 0070  
                             __end_of_ReadData 02ED                                 ??_EUSART_Write 0020  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
                 __end_of_ModbusRTU_Slave_Poll 07FC                 ??_EUSART_SetRxInterruptHandler 0022  
                                  _Device_Init 0A35                                         ??_main 0069  
                 __end_ofi1_I2C_MasterClearIrq 1226                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                         i1I2C_SetCallback@idx 0073                           i1I2C_SetCallback@ptr 0072  
                       __end_of_WDT_Initialize 1254                             ??_I2C_MasterSetIrq 0070  
                                ??_Task_Sensor 00CB      __end_of_EUSART_DefaultFramingErrorHandler 1211  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 1210                     _EUSART_OverrunErrorHandler 0163  
                                       ?_llabs 0024                __end_of_I2C_CallbackReturnReset 0004  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1009 130E                        TMR1_WriteTimer@timerVal 0070  
                                       i1l5011 137C                                         i1l5021 1520  
                                       i1l5013 1506                                         i1l5031 1707  
                                       i1l5023 1521                                         i1l5015 150D  
                                       i1l5041 172A                                         i1l5033 170D  
                                       i1l5025 16F4                                         i1l5017 1515  
                                       i1l5009 137A                                         i1l5121 000A  
                                       i1l5043 1731                                         i1l5035 1712  
                                       i1l5027 16FB                                         i1l5019 151A  
                                       i1l5131 0031                                         i1l5123 000F  
                                       i1l5037 1719                                         i1l5029 1700  
                                       i1l5045 1248                                         i1l5141 0052  
                                       i1l5133 0036                                         i1l5125 0014  
                                       i1l5039 171F                                         i1l5135 0042  
                                       i1l5127 0020                                         i1l5119 0006  
                                       i1l4601 1468                                         i1l3721 1214  
                                       i1l5129 0025                                         i1l4603 146D  
                                       i1l3723 1217                                         i1l3643 154E  
                                       i1l4611 1259                                         i1l5139 004D  
                                       i1l4605 1473                                         i1l3645 1554  
                                       i1l3901 1447                                         i1l3725 1240  
                                       i1l5341 16B6                                         i1l4613 125B  
                                       i1l4621 12B6                                         i1l4701 1296  
                                       i1l4607 1474                                         i1l3647 1565  
                                       i1l3903 145D                                         i1l3911 1255  
                                       i1l4711 169B                                         i1l4615 125C  
                                       i1l4623 12BB                                         i1l4631 12AA  
                                       i1l4703 1298                                         i1l5335 15BD  
                                       i1l4721 16A4                                         i1l5337 17AB  
                                       i1l4705 129B                                         i1l3913 125E  
                                       i1l3921 1266                                         i1l4801 1223  
                                       i1l3843 136D                                         i1l3931 121D  
                                       i1l3907 1290                                         i1l4715 169F  
                                       i1l4619 12B4                                         i1l4627 12A4  
                                       i1l5339 08DD                                         i1l4643 08C1  
                                       i1l4635 08B4                                         i1l3915 1261  
                                       i1l3685 1323                                         i1l3845 1372  
                                       i1l4717 16A2                                         i1l4709 1698  
                                       i1l4629 12A6                                         i1l4661 0907  
                                       i1l4653 08C9                                         i1l3925 126D  
                                       i1l4741 1281                                         i1l4901 13E0  
                                       i1l3847 1378                                         i1l3871 13AF  
                                       i1l3935 1244                                         i1l4727 16A8  
                                       i1l4655 08ED                                         i1l4647 08C5  
                                       i1l4639 08BD                                         i1l4671 177F  
                                       i1l3919 1263                                         i1l3951 1268  
                                       i1l3927 1270                                         i1l4735 1272  
                                       i1l3943 1277                                         i1l4743 1283  
                                       i1l4751 159F                                         i1l4911 1352  
                                       i1l4903 13E2                                         i1l3873 13B6  
                                       i1l3881 13C7                                         i1l4657 08FA  
                                       i1l4673 1784                                         i1l3953 126B  
                                       i1l4737 1275                                         i1l3945 127A  
                                       i1l3937 127C                                         i1l4745 1284  
                                       i1l4753 15A2                                         i1l4921 1585  
                                       i1l4913 1359                                         i1l4905 13E4  
                                       i1l3963 0002                                         i1l4659 0905  
                                       i1l4683 1795                                         i1l4675 178E  
                                       i1l3939 127F                                         i1l4763 15AA  
                                       i1l4923 1588                                         i1l4915 1575  
                                       i1l4907 13E6                                         i1l3893 1396  
                                       i1l3869 13A7                                         i1l3877 13B8  
                                       i1l3885 13C9                                         i1l3949 121A  
                                       i1l3957 1220                                         i1l4693 179D  
                                       i1l4677 1791                                         i1l4669 1777  
                                       i1l4757 15A6                                         i1l4749 159D  
                                       i1l4917 1578                                         i1l4909 13E8  
                                       i1l4599 145F                                         i1l3895 139E  
                                       i1l3879 13C0                                         i1l3887 13D1  
                                       i1l3959 1212                                         i1l4687 1799  
                                       i1l4919 157D                                         i1l3897 13A5  
                                       i1l3889 13D8                                         i1l4891 123C  
                                       i1l4893 1238                                         i1l4799 1305  
                                       i1l4897 13DA                                         i1l4899 13DF  
                                       u400_20 178E                                         u400_21 178D  
                                       u405_20 13DF                                         u405_21 13DE  
                                       u406_20 1359                                         u406_21 1358  
                                       u431_20 150D                                         u263_20 1372  
                                       u407_20 157D                                         u431_21 150C  
                                       u263_21 1371                                         u407_21 157C  
                                       u432_20 1520                                         u248_20 1554  
                                       u408_20 1585                                         u432_21 151F  
                                       u248_21 1553                                         u408_21 1584  
                                       u433_20 1700                                         u433_21 16FF  
                                       u434_20 1712                                         u450_20 0025  
                                       u434_21 1711                                         u450_21 0024  
                                       u435_20 172A                                         u451_20 0031  
                                       u435_21 1729                                         u451_21 0030  
                                       u452_20 0036                                         u452_21 0035  
                                       u453_20 0042                                         u453_21 0041  
                                       u454_20 0047                                         u446_20 000A  
                                       u454_21 0046                                         u446_21 0009  
                                       u455_20 004D                                         u447_20 000F  
                                       u455_21 004C                                         u447_21 000E  
                                       u456_20 0052                                         u448_20 0014  
                                       u456_21 0051                                         u448_21 0013  
                                       u449_20 0020                                         u449_21 001F  
                                       _OSCCON 0099                                         u397_20 1473  
                                       u397_21 1472                                         u398_20 08BC  
                                       u398_21 08BB                                         u399_20 0905  
                                       u399_21 0904                                         u403lld 0863  
                    ??_I2C_SetInterruptHandler 0022                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                             __end_of___xxtofl 0D19                            _I2C_MasterEnableIrq 1235  
                          _I2C_MasterGetRxData 121D                        __end_of_I2C_WriteNBytes 1698  
                                    ??_Task_MB 0062           __end_of_TMR1_DefaultInterruptHandler 1212  
                 _TMR1_DefaultInterruptHandler 1211                        __end_of_TMR1_StartTimer 1229  
                                    ??___fladd 0050                                      ??___fldiv 0064  
                                _I2C_MasterFsm 1575                                  _I2C_MasterIsr 1248  
                                    ??___flmul 0036                                      ??___fltol 0024  
                          _EUSART_Transmit_ISR 1506                              I2C_SetCallback@cb 0020  
                                _I2C_SetBuffer 1432                   __end_of_I2C_MasterDisableIrq 1232  
                                       llabs@a 0024                           ?_I2C_MasterEnableIrq 0070  
                          _I2C_DO_ADDRESS_NACK 159D                           ?_I2C_MasterGetRxData 0070  
                                    ?_I2C_Open 0070             __end_of_I2C_SetAddressNackCallback 133A  
                   _I2C_SetAddressNackCallback 132E                                    ?_Get_millis 0020  
                                 ?_rtcc_handle 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070        I2C_SetInterruptHandler@InterruptHandler 0020  
     TMR1_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 13EB  
                         ?_EUSART_Transmit_ISR 0070                          __end_of_TMR1_CallBack 135F  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 141F  
                                 ___xxtofl@val 0020                        __end_of__initialization 00A0  
                          _I2C_MasterOperation 0800                            __end_of_Task_Sensor 0BCA  
                     validateRequest@u16MsgCRC 003C                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                                     ___fltol@f1 0020  
         __end_of_EUSART_SetTxInterruptHandler 12FC                   _EUSART_SetTxInterruptHandler 12F3  
                      _rdBlkRegCompleteHandler 1447                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK1 12AC  
                                 __pidataBANK2 07FC                         _I2C_CallbackReturnStop 1212  
                          ??_SYSTEM_Initialize 0022                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  __end_of_llabs 0865  
                         __end_of_fctsupported 1828                                 ?_I2C_SetBuffer 0020  
                __end_of_I2C_DO_SEND_ADR_WRITE 12AC                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                         ?_I2C_MasterOperation 0070                          ??_I2C_MasterEnableIrq 0020  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                             ??_buildException 0020                          I2C_ReadNBytes@address 0027  
                                   ??_I2C_Open 0022                           _eusartRxStatusBuffer 013D  
                                    ?_App_Init 0070                     __end_of_I2C_MasterClearIrq 122C  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_llabs 002C  
                    __end_of_SYSTEM_Initialize 1432                          ??_EUSART_Transmit_ISR 0070  
                            _I2C_MasterSendAck 1244                                     __pbssBANK0 0069  
                                   __pbssBANK1 00D7                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 1642                                  ??_I2C_DO_IDLE 0070  
                                    ?_ReadData 0070                                  ??_I2C_DO_RCEN 0070  
                             ??_Task_Indicator 0020                  __end_of_rd2RegCompleteHandler 13C9  
                 __end_of_I2C_MasterSendTxData 1259                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 121A                           _ModbusRTU_Slave_Poll 0730  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 13A7  
                         Task_MB@f_Modbus_Init 007C                            _I2C_DO_RX_NACK_STOP 1277  
                         i1_I2C_MasterClearIrq 1223                          _rd1RegCompleteHandler 13A7  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 1244  
                            __end_of__Umul8_16 154D                               ?_I2C_WriteNBytes 0028  
                       I2C_WriteNBytes@address 002B                          _wr1RegCompleteHandler 13C9  
                     ModbusRTU_Slave_Poll@size 0054                                     __pmaintext 1388  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0077  
                                ReadData@aData 00B5                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 0169                    __end_of_I2C_DO_SEND_RESTART 126D  
                              _I2C_DO_TX_EMPTY 1698                            I2C_SetBuffer@buffer 0022  
                             ?_TMR1_StartTimer 0070                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                            ??_I2C_MasterStartRx 0070  
                                ReadData@ctemp 00BB                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0071                          ??_I2C_MasterOperation 0020  
               I2C_SetDataCompleteCallback@ptr 0076                       ??_I2C_DO_RX_NACK_RESTART 0070  
            __end_of_I2C_DO_SEND_RESTART_WRITE 1268                           ?_I2C_DO_RX_NACK_STOP 0070  
                                _eusartRxCount 006A                                      ?___xxtofl 0020  
                                   ??_App_Init 0022                                i1_I2C_SetBuffer 136C  
                    __end_of_I2C_MasterSendAck 1248                                        _OSCTUNE 0098  
                             _ModbusSlave_Init 0865                                    _Task_Sensor 0B33  
                     ??_EUSART_SetErrorHandler 0022                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                   validateRequest@isSupported 003E                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 121D                           I2C_Close@returnValue 0020  
                 ?_I2C_SetDataCompleteCallback 0074                                      _I2C_DO_RX 1777  
                                    _I2C_DO_TX 08B4                                ReadData@valTime 0159  
             __end_of_I2C_DO_SEND_RESTART_READ 1263                                     ??_ReadData 00AD  
                        ?_ModbusRTU_Slave_Poll 0054                    __end_of_ModbusSlave_Process 1493  
                                    _I2C_Close 1493                      ??_rdBlkRegCompleteHandler 0078  
                        ?i1_I2C_MasterClearIrq 0070                           _I2C_MasterDisableIrq 122F  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                                      _Task_MB 13FC                                 _I2C_ReadNBytes 14E5  
                          __end_of_I2C_DO_IDLE 125E                            __end_of_I2C_DO_RCEN 129D  
                                      ___fladd 0528                                   ?_App_Process 0070  
                                      ___fldiv 0DFC                                        ___flmul 02ED  
                                      ___fltol 09C4                                ??_I2C_SetBuffer 0022  
                      I2C_SetBuffer@bufferSize 0020                             I2C_ReadNBytes@data 0024  
                               _I2C_MasterRead 1286                                 _I2C_MasterOpen 135F  
                               _I2C_MasterStop 1217                                 _I2C_Initialize 12FC  
                                 ?_Device_Init 0070                                        __ptext1 141F  
                                      __ptext2 1250                                        __ptext3 14AE  
                                      __ptext4 14C9                                        __ptext5 129D  
                                      __ptext6 12FC                                        __ptext7 1735  
                                      __ptext8 12F3                                        __ptext9 12EA  
                        ??_I2C_DO_RX_NACK_STOP 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 129D  
                                   ??___xxtofl 0024                             I2C_SetCallback@idx 0023  
                     ??_PIN_MANAGER_Initialize 0020                  I2C_CallbackReturnReset@funPtr 0077  
                    ?_TMR1_SetInterruptHandler 0020                             I2C_SetCallback@ptr 0022  
                     wr1RegCompleteHandler@ptr 0077                     _SHT30_CMD_MEASURE_H_Enable 00E8  
                              ModbusSlaveF04@i 0052                      i1I2C_SetBuffer@bufferSize 0070  
                                      clrloop0 133B                     _SHT30_CMD_MEASURE_L_Enable 00E6  
                         end_of_initialization 00A0                         Modbus_sendTxBuff@index 0038  
                   _SHT30_CMD_MEASURE_M_Enable 00EA                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 12EA  
                _EUSART_SetOverrunErrorHandler 12E1                                        init_ram 1346  
                             _Modbus_getRxBuff 0909                                     ?_I2C_Close 0070  
                       ?_rd1RegCompleteHandler 0077                              i1_I2C_SetCallback 154D  
                                      initloop 1347                        __end_of_I2C_DO_TX_EMPTY 16C5  
                        ?_I2C_MasterDisableIrq 0070                         __end_of_I2C_ReadNBytes 1506  
                            _EUSART_Initialize 1735                    _SHT30_CMD_MEASURE_H_Disable 00E4  
                       ?_wr1RegCompleteHandler 0077                             ?i1_I2C_SetCallback 0070  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                _Tick_Init_SES 140D                         __end_of_I2C_MasterRead 128B  
                       __end_of_I2C_MasterOpen 136C                         __end_of_I2C_MasterStop 121A  
                       __end_of_I2C_Initialize 1305                    _SHT30_CMD_MEASURE_L_Disable 016B  
                          ??i1_I2C_SetCallback 0073                    _SHT30_CMD_MEASURE_M_Disable 016D  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
                    ModbusSlaveF04@valueRegsno 0050                             ModbusSlaveF04@size 003E  
               ??_EUSART_SetTxInterruptHandler 0022                        __end_ofi1_I2C_SetBuffer 137A  
                                    _PORTAbits 000C                __end_of_rdBlkRegCompleteHandler 145F  
                         _I2C_MasterSendTxData 1254                                Modbus_calcCRC@i 002B  
                              Modbus_calcCRC@j 002C                                    ___fladd@grs 005B  
                                 ??_Get_millis 0024                                  ___xxtofl@sign 0028  
                  ?_I2C_SetAddressNackCallback 0024                                    ___fldiv@grs 00A7  
                                  _f_Indicator 00E3                                    ___fldiv@rem 00A0  
                       ??_ModbusRTU_Slave_Poll 0056                  ModbusRTU_Slave_Poll@u8Current 005F  
                    __end_ofi1_I2C_SetCallback 1575                                   _fctsupported 1820  
                       ??i1_I2C_MasterClearIrq 0070                                    ___flmul@grs 003C  
                    __end_of_EUSART_Initialize 1777                                    _I2C_DO_IDLE 1259  
                                  _I2C_DO_RCEN 1296                     rdBlkRegCompleteHandler@ptr 0077  
                             validateRequest@i 003F                                      _TXSTAbits 019E  
                              ?_I2C_ReadNBytes 0024                        ?_I2C_CallbackReturnStop 0077  
                     _I2C_DO_SEND_RESTART_READ 125E                                 ?_Tick_Init_SES 0070  
                           __end_of_Get_millis 13FC                   I2C_CallbackReturnStop@funPtr 0077  
                              ?_I2C_MasterRead 0070                                ?_I2C_MasterOpen 0070  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 0002             __end_of_EUSART_DefaultErrorHandler 123C  
                   _EUSART_DefaultErrorHandler 1238                                   _EUSART_Write 1618  
                        ?_I2C_MasterSendTxData 0070                         ?_OSCILLATOR_Initialize 0070  
                  ??_I2C_DO_SEND_RESTART_WRITE 0070                            start_initialization 005A  
                                ??_EUSART_Read 0020                                  ?_I2C_DO_RESET 0070  
                     ?_I2C_SetInterruptHandler 0020   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                                    ??_I2C_DO_RX 0078  
                                  ??_I2C_DO_TX 0078                            i1I2C_SetCallback@cb 0070  
                            ??_I2C_MasterClose 0020                    ModbusRTU_Slave_Poll@i8state 0060  
                       ??_I2C_MasterDisableIrq 0020                                    ??_I2C_Close 0020  
                            ??_I2C_MasterStart 0020                              ??_I2C_MasterWrite 0022  
               __end_of_I2C_CallbackReturnStop 1214                         _I2C_DO_RX_NACK_RESTART 127C  
                               _ModbusSlaveF04 0BCA                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 1229                              ??_validateRequest 002F  
               ?_EUSART_SetOverrunErrorHandler 0020                     _EUSART_FramingErrorHandler 0165  
                               _Modbus_calcCRC 0965                       __end_of_ModbusSlave_Init 08B4  
                       _EUSART_SetErrorHandler 12CF                    __end_of_I2C_MasterEnableIrq 1238  
                          ?_I2C_MasterClearIrq 0070                                      __Umul8_16 1529  
                  __end_of_I2C_MasterGetRxData 1220                                    __pdataBANK1 00E4  
                                  __pdataBANK2 016B                          __end_of_I2C_DO_RX_ACK 1277  
                       ModbusSlave_Init@_SW_Ad 0020                               _I2C_DO_SEND_STOP 126D  
                            ??_I2C_SetCallback 0023                               ?i1_I2C_SetBuffer 0070  
                          I2C_Open@returnValue 0023                             _I2C_MasterSendNack 1240  
                     ?_I2C_MasterEnableRestart 0070                                      ___fladd@a 004C  
                                    ___fladd@b 0048                              _i2c_fsmStateTable 1800  
                                    ___fldiv@a 005C                                      ___fldiv@b 0060  
                                  __pbssBIGRAM 216A                    __end_of_EUSART_Transmit_ISR 1529  
                        _I2C_DO_SEND_ADR_WRITE 12A4                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                    __pbssCOMMON 007C  
                                    ___latbits 0002                                  _SensorAmbient 00DB  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                               ??_I2C_DO_RESET 0070                            ?_I2C_MasterSendNack 0070  
                                 ?_Task_Sensor 0070                   __end_of_I2C_DO_SEND_ADR_READ 12BD  
                         ??_I2C_MasterClearIrq 0020                    __end_of_I2C_DO_ADDRESS_NACK 15C6  
                       __end_of_ModbusSlaveF04 0C6E                     __end_of_EUSART_Receive_ISR 1735  
                             _I2C_MasterIsNack 1290                      _I2C_DO_SEND_RESTART_WRITE 1263  
             _EUSART_RxDefaultInterruptHandler 0167                            __end_of_EUSART_Read 15EF  
                             _I2C_MasterSetIrq 1220                                      __pnvBANK1 00EC  
                                    __pnvBANK2 0161                                      __pnvBANK3 01A0  
                        _rd2RegCompleteHandler 13B8                                ??_Tick_Init_SES 0022  
                       __end_of_Modbus_calcCRC 09C4                   __end_of_EUSART_RxDataHandler 1479  
                                     ?_Task_MB 0070                         _PIN_MANAGER_Initialize 14C9  
                        _wr2RegCompleteHandler 1396                      ??_I2C_CallbackReturnReset 0078  
                      ModbusRTU_Slave_Poll@reg 005E                           EUSART_Read@readValue 0021  
                  __end_of_I2C_MasterOperation 081E                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 12C6  
                                     ?___fladd 0048                                       ?___fldiv 005C  
                                    __ptext100 1323                                      __ptext101 154D  
                                    __ptext102 1217                                      __ptext103 1214  
                                    __ptext104 1506                                      __ptext105 16F4  
                                    __ptext106 123C                                      __ptext107 1210  
                                    __ptext108 1238                                      __ptext109 145F  
                                     ?___flmul 002E                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                   _eusartRxHead 006C  
                                 _eusartTxHead 006F                                   _eusartRxTail 006B  
                       ??_I2C_MasterSendTxData 0070                                   _eusartTxTail 006E  
                    __end_of_i2c_fsmStateTable 1820                   ??_INTERRUPT_InterruptManager 007C  
                     __end_of_Modbus_getRxBuff 0965                        _eusartTxBufferRemaining 006D  
              __end_of_I2C_SetInterruptHandler 12CF                         ModbusSlaveF04@u8regsno 004C  
                      I2C_MasterOperation@read 0020                                       _I2C_Open 17BA  
                                  _device_time 00D7                              I2C_ReadNBytes@len 0025  
                      ??_rd1RegCompleteHandler 0078                                 _eusartRxBuffer 0145  
                              ?_ModbusSlaveF04 003E                        ??_wr1RegCompleteHandler 0078  
                     ModbusSlaveF04@u8StartAdd 004A                                  _TMR1_CallBack 1352  
                               _eusartTxBuffer 014D         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATCbits 010E                                      clear_ram0 133A  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 007D                                ?_Modbus_calcCRC 0020  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR2bits 0012                         ModbusSlaveF04@valueAdd 004E  
                        __end_of_I2C_MasterFsm 159D                          __end_of_I2C_MasterIsr 124C  
                            _EUSART_is_tx_done 124C                    __end_of_I2C_DO_RX_NACK_STOP 127C  
    __end_of_EUSART_DefaultOverrunErrorHandler 1240            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 123C  
                                     _TMR1_ISR 137A                              ModbusSlaveF04@reg 004D  
              __end_of_I2C_MasterEnableRestart 1217                             ?_EUSART_is_tx_done 0070  
                         buildException@u8func 0022                          __end_of_I2C_SetBuffer 1447  
                            ??_TMR1_Initialize 0022                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                            ??_EUSART_is_tx_done 0020  
                             ReadData@humidity 00BF                                  ??_rtcc_handle 0070  
                                     _App_Init 130F                       wr2RegCompleteHandler@ptr 0077  
                                  _EUSART_Read 15C6                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0077                               ??_I2C_ReadNBytes 0027  
                               ?_TMR1_CallBack 0070          Modbus_sendTxBuff@u32overTimecountDown 003A  
                                   _I2C_Status 0120                                       _ReadData 00A4  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                               ??_I2C_MasterRead 0022  
                          I2C_WriteNBytes@data 0028                               ??_I2C_MasterOpen 0020  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0020                      __end_of_EUSART_is_tx_done 1250  
                        i1I2C_SetBuffer@buffer 0072                           __end_of_I2C_DO_RESET 1286  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                          _EUSART_ErrorHandler 01A0                           _I2C_DO_SEND_ADR_READ 12B4  
                  ?_EUSART_DefaultErrorHandler 0070                       _TMR1_SetInterruptHandler 12BD  
                        _TMR1_InterruptHandler 0161                                _I2C_MasterClose 122C  
                I2C_SetAddressNackCallback@ptr 0026                                I2C_Open@address 0022  
                                     ___xxtofl 0C6E                                _I2C_MasterStart 1232  
                              _I2C_MasterWrite 128B                           _EUSART_RxDataHandler 145F  
                            ??_I2C_WriteNBytes 002B                                       __ptext10 12E1  
                                     __ptext11 12D8                                       __ptext20 1529  
                                     __ptext12 12CF                                       __ptext21 0DFC  
                                     __ptext13 1319                                       __ptext30 12C6  
                                     __ptext22 0528                                       __ptext14 0B33  
                                     __ptext31 135F                                       __ptext23 166D  
                                     __ptext15 081E                                       __ptext40 13FC  
                                     __ptext32 1235                                       __ptext24 132E  
                                     __ptext16 00A4                                       __ptext41 1479  
                                     __ptext33 1286                                       __ptext25 15EF  
                                     __ptext17 0C6E                                       __ptext50 13EB  
                                     __ptext42 0730                                       __ptext34 0800  
                                     __ptext26 128B                                       __ptext18 09C4  
                                     __ptext51 124C                                       __ptext43 0AAE  
                                     __ptext35 1232                                       __ptext27 14E5  
                                     __ptext19 02ED                                       __ptext52 1618  
                                     __ptext44 1642                                       __ptext36 1493  
                                     __ptext28 1432                                       __ptext61 137A  
                                     __ptext53 0865                                       __ptext45 0909  
                                     __ptext37 122F                                       __ptext29 17BA  
                                     __ptext70 1281                                       __ptext62 13DA  
                                     __ptext54 16C5                                       __ptext46 15C6  
                                     __ptext38 122C                                       __ptext71 127C  
                                     __ptext63 1352                                       __ptext55 130F  
                                     __ptext47 0BCA                                       __ptext39 1229  
                                     __ptext80 08B4                                       __ptext72 1277  
                                     __ptext64 1211                                       __ptext56 140D  
                                     __ptext48 0D19                                       __ptext81 12A4  
                                     __ptext73 1272                                       __ptext65 1305  
                                     __ptext57 12BD                                       __ptext49 0965  
                                     __ptext90 1240                                       __ptext82 12B4  
                                     __ptext74 126D                                       __ptext66 1248  
                                     __ptext58 1226                                       __ptext91 121A  
                                     __ptext83 1259                                       __ptext75 1268  
                                     __ptext67 1575                                       __ptext59 0A35  
                                     __ptext92 0002                                       __ptext84 1698  
                                     __ptext76 1263                                       __ptext68 1223  
                                     __ptext93 1212                                       __ptext85 1220  
                                     __ptext77 125E                                       __ptext69 159D  
                                     __ptext94 1447                                       __ptext86 1290  
                                     __ptext78 1296                                       __ptext95 13C9  
                                     __ptext87 1254                                       __ptext79 1777  
                                     __ptext96 13B8                                       __ptext88 1244  
                                     __ptext97 13A7                                       __ptext89 121D  
                                     __ptext98 1396                                       __ptext99 136C  
                              _validateRequest 0AAE            __end_of_I2C_SetDataCompleteCallback 132E  
                  _I2C_SetDataCompleteCallback 1323                              ??_TMR1_StartTimer 0020  
                      ?_I2C_DO_RX_NACK_RESTART 0070                            __end_of_rtcc_handle 130F  
                     __end_of_I2C_DO_SEND_STOP 1272                  Modbus_getRxBuff@bBuffOverflow 0029  
                      ?_EUSART_SetErrorHandler 0020                                _I2C_SetCallback 15EF  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                          Modbus_calcCRC@temp2 0026                        Modbus_sendTxBuff@u16crc 0036  
                                  _MB_Register 015D                                       int$flags 007E  
                            ?_ModbusSlave_Init 0070                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0058                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 12E1                  _EUSART_SetFramingErrorHandler 12D8  
                            ??_TMR1_WriteTimer 0072                             ??_ModbusSlave_Init 0020  
                     __end_of_I2C_MasterIsNack 1296                       __end_of_I2C_MasterSetIrq 1223  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 0029  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 1281  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                               _buildException 1642                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 12D8                            _I2C_DO_SEND_RESTART 1268  
         __end_of_EUSART_SetRxInterruptHandler 12F3                   _EUSART_SetRxInterruptHandler 12EA  
                         Device_Init@value_SW1 00EF                           Device_Init@value_SW2 00EE  
                         Device_Init@value_SW3 00ED                           Device_Init@value_SW4 00EC  
                           Modbus_calcCRC@flag 0028                             Modbus_calcCRC@temp 002D  
                                ??_App_Process 0069                                 _Task_Indicator 16C5  
                           _EUSART_Receive_ISR 16F4  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                      __end_of_I2C_MasterClose 122F                        __end_of_I2C_MasterStart 1235  
              ModbusRTU_Slave_Poll@u8exception 0061                        __end_of_I2C_MasterWrite 1290  
                                ??_Device_Init 0020                                  __pstringtext1 1800  
                                __pstringtext2 1820                         __Umul8_16@multiplicand 0020  
                         ?_I2C_DO_SEND_RESTART 0070                              ?_Modbus_getRxBuff 0070  
                          ?_EUSART_Receive_ISR 0070                        __end_of_validateRequest 0B33  
                           ??_Modbus_getRxBuff 0022                                    _rtcc_handle 1305  
                             ??_ModbusSlaveF04 0040                              Modbus_calcCRC@len 002A  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                          _ModbusSlave_Process 1479                         __end_of_buildException 166D  
                                ___fladd@signs 0058                                     _SES_Modbus 216A  
                           EUSART_Write@txData 0021                        __end_of_I2C_SetCallback 1618  
               __end_of_PIN_MANAGER_Initialize 14E5                               ??_Modbus_calcCRC 0022  
                __end_of_rd1RegCompleteHandler 13B8                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0028                  __end_of_wr1RegCompleteHandler 13DA  
                        _MSSP_InterruptHandler 00E1                                _TMR1_Initialize 14AE  
                           Task_Sensor@valTime 0155                         __end_of_Task_Indicator 16F4  
                            __Umul8_16@product 0024                          __end_of_Tick_Init_SES 141F  
