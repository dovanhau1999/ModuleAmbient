

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 12 15:06:20 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x320,16
    87                           	dabs	1,0x2A0,80
    88                           	dabs	1,0x220,80
    89                           	dabs	1,0x1A0,80
    90                           	dabs	1,0x154,28
    91                           	dabs	1,0x20D4,0,_SES_Modbus
    92                           	dabs	1,0x7E,2
    93     0000                     
    94                           ; Version 2.40
    95                           ; Generated 17/11/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1936 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     0010                     	;# 
   145     0011                     	;# 
   146     0012                     	;# 
   147     0013                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0090                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0095                     	;# 
   167     0096                     	;# 
   168     0097                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009A                     	;# 
   172     009B                     	;# 
   173     009B                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     0110                     	;# 
   181     0111                     	;# 
   182     0112                     	;# 
   183     0113                     	;# 
   184     0114                     	;# 
   185     0115                     	;# 
   186     0116                     	;# 
   187     0117                     	;# 
   188     0118                     	;# 
   189     0119                     	;# 
   190     011A                     	;# 
   191     011B                     	;# 
   192     011D                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195     0191                     	;# 
   196     0191                     	;# 
   197     0192                     	;# 
   198     0193                     	;# 
   199     0193                     	;# 
   200     0193                     	;# 
   201     0194                     	;# 
   202     0195                     	;# 
   203     0196                     	;# 
   204     0199                     	;# 
   205     019A                     	;# 
   206     019B                     	;# 
   207     019B                     	;# 
   208     019B                     	;# 
   209     019B                     	;# 
   210     019C                     	;# 
   211     019C                     	;# 
   212     019D                     	;# 
   213     019E                     	;# 
   214     019F                     	;# 
   215     020D                     	;# 
   216     0210                     	;# 
   217     0211                     	;# 
   218     0212                     	;# 
   219     0213                     	;# 
   220     0214                     	;# 
   221     0215                     	;# 
   222     0215                     	;# 
   223     0216                     	;# 
   224     0217                     	;# 
   225     0291                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0293                     	;# 
   229     0294                     	;# 
   230     0295                     	;# 
   231     0295                     	;# 
   232     0296                     	;# 
   233     0298                     	;# 
   234     0298                     	;# 
   235     0299                     	;# 
   236     029A                     	;# 
   237     029B                     	;# 
   238     029C                     	;# 
   239     029C                     	;# 
   240     029D                     	;# 
   241     029E                     	;# 
   242     029F                     	;# 
   243     0311                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0314                     	;# 
   248     0315                     	;# 
   249     0315                     	;# 
   250     0316                     	;# 
   251     0318                     	;# 
   252     0318                     	;# 
   253     0319                     	;# 
   254     031A                     	;# 
   255     031C                     	;# 
   256     031C                     	;# 
   257     031D                     	;# 
   258     031E                     	;# 
   259     0394                     	;# 
   260     0395                     	;# 
   261     0396                     	;# 
   262     0415                     	;# 
   263     0416                     	;# 
   264     0417                     	;# 
   265     041C                     	;# 
   266     041D                     	;# 
   267     041E                     	;# 
   268     0791                     	;# 
   269     0792                     	;# 
   270     0793                     	;# 
   271     0794                     	;# 
   272     0795                     	;# 
   273     0798                     	;# 
   274     0799                     	;# 
   275     07A0                     	;# 
   276     07A1                     	;# 
   277     07A3                     	;# 
   278     07A4                     	;# 
   279     07A6                     	;# 
   280     07A7                     	;# 
   281     07A9                     	;# 
   282     07AA                     	;# 
   283     0FE4                     	;# 
   284     0FE5                     	;# 
   285     0FE6                     	;# 
   286     0FE7                     	;# 
   287     0FE8                     	;# 
   288     0FE9                     	;# 
   289     0FEA                     	;# 
   290     0FEB                     	;# 
   291     0FED                     	;# 
   292     0FEE                     	;# 
   293     0FEF                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     0010                     	;# 
   310     0011                     	;# 
   311     0012                     	;# 
   312     0013                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     008C                     	;# 
   325     008D                     	;# 
   326     008E                     	;# 
   327     0090                     	;# 
   328     0091                     	;# 
   329     0092                     	;# 
   330     0093                     	;# 
   331     0095                     	;# 
   332     0096                     	;# 
   333     0097                     	;# 
   334     0098                     	;# 
   335     0099                     	;# 
   336     009A                     	;# 
   337     009B                     	;# 
   338     009B                     	;# 
   339     009C                     	;# 
   340     009D                     	;# 
   341     009E                     	;# 
   342     010C                     	;# 
   343     010D                     	;# 
   344     010E                     	;# 
   345     0110                     	;# 
   346     0111                     	;# 
   347     0112                     	;# 
   348     0113                     	;# 
   349     0114                     	;# 
   350     0115                     	;# 
   351     0116                     	;# 
   352     0117                     	;# 
   353     0118                     	;# 
   354     0119                     	;# 
   355     011A                     	;# 
   356     011B                     	;# 
   357     011D                     	;# 
   358     018C                     	;# 
   359     018D                     	;# 
   360     0191                     	;# 
   361     0191                     	;# 
   362     0192                     	;# 
   363     0193                     	;# 
   364     0193                     	;# 
   365     0193                     	;# 
   366     0194                     	;# 
   367     0195                     	;# 
   368     0196                     	;# 
   369     0199                     	;# 
   370     019A                     	;# 
   371     019B                     	;# 
   372     019B                     	;# 
   373     019B                     	;# 
   374     019B                     	;# 
   375     019C                     	;# 
   376     019C                     	;# 
   377     019D                     	;# 
   378     019E                     	;# 
   379     019F                     	;# 
   380     020D                     	;# 
   381     0210                     	;# 
   382     0211                     	;# 
   383     0212                     	;# 
   384     0213                     	;# 
   385     0214                     	;# 
   386     0215                     	;# 
   387     0215                     	;# 
   388     0216                     	;# 
   389     0217                     	;# 
   390     0291                     	;# 
   391     0291                     	;# 
   392     0292                     	;# 
   393     0293                     	;# 
   394     0294                     	;# 
   395     0295                     	;# 
   396     0295                     	;# 
   397     0296                     	;# 
   398     0298                     	;# 
   399     0298                     	;# 
   400     0299                     	;# 
   401     029A                     	;# 
   402     029B                     	;# 
   403     029C                     	;# 
   404     029C                     	;# 
   405     029D                     	;# 
   406     029E                     	;# 
   407     029F                     	;# 
   408     0311                     	;# 
   409     0311                     	;# 
   410     0312                     	;# 
   411     0313                     	;# 
   412     0314                     	;# 
   413     0315                     	;# 
   414     0315                     	;# 
   415     0316                     	;# 
   416     0318                     	;# 
   417     0318                     	;# 
   418     0319                     	;# 
   419     031A                     	;# 
   420     031C                     	;# 
   421     031C                     	;# 
   422     031D                     	;# 
   423     031E                     	;# 
   424     0394                     	;# 
   425     0395                     	;# 
   426     0396                     	;# 
   427     0415                     	;# 
   428     0416                     	;# 
   429     0417                     	;# 
   430     041C                     	;# 
   431     041D                     	;# 
   432     041E                     	;# 
   433     0791                     	;# 
   434     0792                     	;# 
   435     0793                     	;# 
   436     0794                     	;# 
   437     0795                     	;# 
   438     0798                     	;# 
   439     0799                     	;# 
   440     07A0                     	;# 
   441     07A1                     	;# 
   442     07A3                     	;# 
   443     07A4                     	;# 
   444     07A6                     	;# 
   445     07A7                     	;# 
   446     07A9                     	;# 
   447     07AA                     	;# 
   448     0FE4                     	;# 
   449     0FE5                     	;# 
   450     0FE6                     	;# 
   451     0FE7                     	;# 
   452     0FE8                     	;# 
   453     0FE9                     	;# 
   454     0FEA                     	;# 
   455     0FEB                     	;# 
   456     0FED                     	;# 
   457     0FEE                     	;# 
   458     0FEF                     	;# 
   459     0000                     	;# 
   460     0001                     	;# 
   461     0002                     	;# 
   462     0003                     	;# 
   463     0004                     	;# 
   464     0005                     	;# 
   465     0006                     	;# 
   466     0007                     	;# 
   467     0008                     	;# 
   468     0009                     	;# 
   469     000A                     	;# 
   470     000B                     	;# 
   471     000C                     	;# 
   472     000D                     	;# 
   473     000E                     	;# 
   474     0010                     	;# 
   475     0011                     	;# 
   476     0012                     	;# 
   477     0013                     	;# 
   478     0015                     	;# 
   479     0016                     	;# 
   480     0016                     	;# 
   481     0017                     	;# 
   482     0018                     	;# 
   483     0019                     	;# 
   484     001A                     	;# 
   485     001B                     	;# 
   486     001C                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     008C                     	;# 
   490     008D                     	;# 
   491     008E                     	;# 
   492     0090                     	;# 
   493     0091                     	;# 
   494     0092                     	;# 
   495     0093                     	;# 
   496     0095                     	;# 
   497     0096                     	;# 
   498     0097                     	;# 
   499     0098                     	;# 
   500     0099                     	;# 
   501     009A                     	;# 
   502     009B                     	;# 
   503     009B                     	;# 
   504     009C                     	;# 
   505     009D                     	;# 
   506     009E                     	;# 
   507     010C                     	;# 
   508     010D                     	;# 
   509     010E                     	;# 
   510     0110                     	;# 
   511     0111                     	;# 
   512     0112                     	;# 
   513     0113                     	;# 
   514     0114                     	;# 
   515     0115                     	;# 
   516     0116                     	;# 
   517     0117                     	;# 
   518     0118                     	;# 
   519     0119                     	;# 
   520     011A                     	;# 
   521     011B                     	;# 
   522     011D                     	;# 
   523     018C                     	;# 
   524     018D                     	;# 
   525     0191                     	;# 
   526     0191                     	;# 
   527     0192                     	;# 
   528     0193                     	;# 
   529     0193                     	;# 
   530     0193                     	;# 
   531     0194                     	;# 
   532     0195                     	;# 
   533     0196                     	;# 
   534     0199                     	;# 
   535     019A                     	;# 
   536     019B                     	;# 
   537     019B                     	;# 
   538     019B                     	;# 
   539     019B                     	;# 
   540     019C                     	;# 
   541     019C                     	;# 
   542     019D                     	;# 
   543     019E                     	;# 
   544     019F                     	;# 
   545     020D                     	;# 
   546     0210                     	;# 
   547     0211                     	;# 
   548     0212                     	;# 
   549     0213                     	;# 
   550     0214                     	;# 
   551     0215                     	;# 
   552     0215                     	;# 
   553     0216                     	;# 
   554     0217                     	;# 
   555     0291                     	;# 
   556     0291                     	;# 
   557     0292                     	;# 
   558     0293                     	;# 
   559     0294                     	;# 
   560     0295                     	;# 
   561     0295                     	;# 
   562     0296                     	;# 
   563     0298                     	;# 
   564     0298                     	;# 
   565     0299                     	;# 
   566     029A                     	;# 
   567     029B                     	;# 
   568     029C                     	;# 
   569     029C                     	;# 
   570     029D                     	;# 
   571     029E                     	;# 
   572     029F                     	;# 
   573     0311                     	;# 
   574     0311                     	;# 
   575     0312                     	;# 
   576     0313                     	;# 
   577     0314                     	;# 
   578     0315                     	;# 
   579     0315                     	;# 
   580     0316                     	;# 
   581     0318                     	;# 
   582     0318                     	;# 
   583     0319                     	;# 
   584     031A                     	;# 
   585     031C                     	;# 
   586     031C                     	;# 
   587     031D                     	;# 
   588     031E                     	;# 
   589     0394                     	;# 
   590     0395                     	;# 
   591     0396                     	;# 
   592     0415                     	;# 
   593     0416                     	;# 
   594     0417                     	;# 
   595     041C                     	;# 
   596     041D                     	;# 
   597     041E                     	;# 
   598     0791                     	;# 
   599     0792                     	;# 
   600     0793                     	;# 
   601     0794                     	;# 
   602     0795                     	;# 
   603     0798                     	;# 
   604     0799                     	;# 
   605     07A0                     	;# 
   606     07A1                     	;# 
   607     07A3                     	;# 
   608     07A4                     	;# 
   609     07A6                     	;# 
   610     07A7                     	;# 
   611     07A9                     	;# 
   612     07AA                     	;# 
   613     0FE4                     	;# 
   614     0FE5                     	;# 
   615     0FE6                     	;# 
   616     0FE7                     	;# 
   617     0FE8                     	;# 
   618     0FE9                     	;# 
   619     0FEA                     	;# 
   620     0FEB                     	;# 
   621     0FED                     	;# 
   622     0FEE                     	;# 
   623     0FEF                     	;# 
   624     0000                     	;# 
   625     0001                     	;# 
   626     0002                     	;# 
   627     0003                     	;# 
   628     0004                     	;# 
   629     0005                     	;# 
   630     0006                     	;# 
   631     0007                     	;# 
   632     0008                     	;# 
   633     0009                     	;# 
   634     000A                     	;# 
   635     000B                     	;# 
   636     000C                     	;# 
   637     000D                     	;# 
   638     000E                     	;# 
   639     0010                     	;# 
   640     0011                     	;# 
   641     0012                     	;# 
   642     0013                     	;# 
   643     0015                     	;# 
   644     0016                     	;# 
   645     0016                     	;# 
   646     0017                     	;# 
   647     0018                     	;# 
   648     0019                     	;# 
   649     001A                     	;# 
   650     001B                     	;# 
   651     001C                     	;# 
   652     001E                     	;# 
   653     001F                     	;# 
   654     008C                     	;# 
   655     008D                     	;# 
   656     008E                     	;# 
   657     0090                     	;# 
   658     0091                     	;# 
   659     0092                     	;# 
   660     0093                     	;# 
   661     0095                     	;# 
   662     0096                     	;# 
   663     0097                     	;# 
   664     0098                     	;# 
   665     0099                     	;# 
   666     009A                     	;# 
   667     009B                     	;# 
   668     009B                     	;# 
   669     009C                     	;# 
   670     009D                     	;# 
   671     009E                     	;# 
   672     010C                     	;# 
   673     010D                     	;# 
   674     010E                     	;# 
   675     0110                     	;# 
   676     0111                     	;# 
   677     0112                     	;# 
   678     0113                     	;# 
   679     0114                     	;# 
   680     0115                     	;# 
   681     0116                     	;# 
   682     0117                     	;# 
   683     0118                     	;# 
   684     0119                     	;# 
   685     011A                     	;# 
   686     011B                     	;# 
   687     011D                     	;# 
   688     018C                     	;# 
   689     018D                     	;# 
   690     0191                     	;# 
   691     0191                     	;# 
   692     0192                     	;# 
   693     0193                     	;# 
   694     0193                     	;# 
   695     0193                     	;# 
   696     0194                     	;# 
   697     0195                     	;# 
   698     0196                     	;# 
   699     0199                     	;# 
   700     019A                     	;# 
   701     019B                     	;# 
   702     019B                     	;# 
   703     019B                     	;# 
   704     019B                     	;# 
   705     019C                     	;# 
   706     019C                     	;# 
   707     019D                     	;# 
   708     019E                     	;# 
   709     019F                     	;# 
   710     020D                     	;# 
   711     0210                     	;# 
   712     0211                     	;# 
   713     0212                     	;# 
   714     0213                     	;# 
   715     0214                     	;# 
   716     0215                     	;# 
   717     0215                     	;# 
   718     0216                     	;# 
   719     0217                     	;# 
   720     0291                     	;# 
   721     0291                     	;# 
   722     0292                     	;# 
   723     0293                     	;# 
   724     0294                     	;# 
   725     0295                     	;# 
   726     0295                     	;# 
   727     0296                     	;# 
   728     0298                     	;# 
   729     0298                     	;# 
   730     0299                     	;# 
   731     029A                     	;# 
   732     029B                     	;# 
   733     029C                     	;# 
   734     029C                     	;# 
   735     029D                     	;# 
   736     029E                     	;# 
   737     029F                     	;# 
   738     0311                     	;# 
   739     0311                     	;# 
   740     0312                     	;# 
   741     0313                     	;# 
   742     0314                     	;# 
   743     0315                     	;# 
   744     0315                     	;# 
   745     0316                     	;# 
   746     0318                     	;# 
   747     0318                     	;# 
   748     0319                     	;# 
   749     031A                     	;# 
   750     031C                     	;# 
   751     031C                     	;# 
   752     031D                     	;# 
   753     031E                     	;# 
   754     0394                     	;# 
   755     0395                     	;# 
   756     0396                     	;# 
   757     0415                     	;# 
   758     0416                     	;# 
   759     0417                     	;# 
   760     041C                     	;# 
   761     041D                     	;# 
   762     041E                     	;# 
   763     0791                     	;# 
   764     0792                     	;# 
   765     0793                     	;# 
   766     0794                     	;# 
   767     0795                     	;# 
   768     0798                     	;# 
   769     0799                     	;# 
   770     07A0                     	;# 
   771     07A1                     	;# 
   772     07A3                     	;# 
   773     07A4                     	;# 
   774     07A6                     	;# 
   775     07A7                     	;# 
   776     07A9                     	;# 
   777     07AA                     	;# 
   778     0FE4                     	;# 
   779     0FE5                     	;# 
   780     0FE6                     	;# 
   781     0FE7                     	;# 
   782     0FE8                     	;# 
   783     0FE9                     	;# 
   784     0FEA                     	;# 
   785     0FEB                     	;# 
   786     0FED                     	;# 
   787     0FEE                     	;# 
   788     0FEF                     	;# 
   789     0000                     	;# 
   790     0001                     	;# 
   791     0002                     	;# 
   792     0003                     	;# 
   793     0004                     	;# 
   794     0005                     	;# 
   795     0006                     	;# 
   796     0007                     	;# 
   797     0008                     	;# 
   798     0009                     	;# 
   799     000A                     	;# 
   800     000B                     	;# 
   801     000C                     	;# 
   802     000D                     	;# 
   803     000E                     	;# 
   804     0010                     	;# 
   805     0011                     	;# 
   806     0012                     	;# 
   807     0013                     	;# 
   808     0015                     	;# 
   809     0016                     	;# 
   810     0016                     	;# 
   811     0017                     	;# 
   812     0018                     	;# 
   813     0019                     	;# 
   814     001A                     	;# 
   815     001B                     	;# 
   816     001C                     	;# 
   817     001E                     	;# 
   818     001F                     	;# 
   819     008C                     	;# 
   820     008D                     	;# 
   821     008E                     	;# 
   822     0090                     	;# 
   823     0091                     	;# 
   824     0092                     	;# 
   825     0093                     	;# 
   826     0095                     	;# 
   827     0096                     	;# 
   828     0097                     	;# 
   829     0098                     	;# 
   830     0099                     	;# 
   831     009A                     	;# 
   832     009B                     	;# 
   833     009B                     	;# 
   834     009C                     	;# 
   835     009D                     	;# 
   836     009E                     	;# 
   837     010C                     	;# 
   838     010D                     	;# 
   839     010E                     	;# 
   840     0110                     	;# 
   841     0111                     	;# 
   842     0112                     	;# 
   843     0113                     	;# 
   844     0114                     	;# 
   845     0115                     	;# 
   846     0116                     	;# 
   847     0117                     	;# 
   848     0118                     	;# 
   849     0119                     	;# 
   850     011A                     	;# 
   851     011B                     	;# 
   852     011D                     	;# 
   853     018C                     	;# 
   854     018D                     	;# 
   855     0191                     	;# 
   856     0191                     	;# 
   857     0192                     	;# 
   858     0193                     	;# 
   859     0193                     	;# 
   860     0193                     	;# 
   861     0194                     	;# 
   862     0195                     	;# 
   863     0196                     	;# 
   864     0199                     	;# 
   865     019A                     	;# 
   866     019B                     	;# 
   867     019B                     	;# 
   868     019B                     	;# 
   869     019B                     	;# 
   870     019C                     	;# 
   871     019C                     	;# 
   872     019D                     	;# 
   873     019E                     	;# 
   874     019F                     	;# 
   875     020D                     	;# 
   876     0210                     	;# 
   877     0211                     	;# 
   878     0212                     	;# 
   879     0213                     	;# 
   880     0214                     	;# 
   881     0215                     	;# 
   882     0215                     	;# 
   883     0216                     	;# 
   884     0217                     	;# 
   885     0291                     	;# 
   886     0291                     	;# 
   887     0292                     	;# 
   888     0293                     	;# 
   889     0294                     	;# 
   890     0295                     	;# 
   891     0295                     	;# 
   892     0296                     	;# 
   893     0298                     	;# 
   894     0298                     	;# 
   895     0299                     	;# 
   896     029A                     	;# 
   897     029B                     	;# 
   898     029C                     	;# 
   899     029C                     	;# 
   900     029D                     	;# 
   901     029E                     	;# 
   902     029F                     	;# 
   903     0311                     	;# 
   904     0311                     	;# 
   905     0312                     	;# 
   906     0313                     	;# 
   907     0314                     	;# 
   908     0315                     	;# 
   909     0315                     	;# 
   910     0316                     	;# 
   911     0318                     	;# 
   912     0318                     	;# 
   913     0319                     	;# 
   914     031A                     	;# 
   915     031C                     	;# 
   916     031C                     	;# 
   917     031D                     	;# 
   918     031E                     	;# 
   919     0394                     	;# 
   920     0395                     	;# 
   921     0396                     	;# 
   922     0415                     	;# 
   923     0416                     	;# 
   924     0417                     	;# 
   925     041C                     	;# 
   926     041D                     	;# 
   927     041E                     	;# 
   928     0791                     	;# 
   929     0792                     	;# 
   930     0793                     	;# 
   931     0794                     	;# 
   932     0795                     	;# 
   933     0798                     	;# 
   934     0799                     	;# 
   935     07A0                     	;# 
   936     07A1                     	;# 
   937     07A3                     	;# 
   938     07A4                     	;# 
   939     07A6                     	;# 
   940     07A7                     	;# 
   941     07A9                     	;# 
   942     07AA                     	;# 
   943     0FE4                     	;# 
   944     0FE5                     	;# 
   945     0FE6                     	;# 
   946     0FE7                     	;# 
   947     0FE8                     	;# 
   948     0FE9                     	;# 
   949     0FEA                     	;# 
   950     0FEB                     	;# 
   951     0FED                     	;# 
   952     0FEE                     	;# 
   953     0FEF                     	;# 
   954     0000                     	;# 
   955     0001                     	;# 
   956     0002                     	;# 
   957     0003                     	;# 
   958     0004                     	;# 
   959     0005                     	;# 
   960     0006                     	;# 
   961     0007                     	;# 
   962     0008                     	;# 
   963     0009                     	;# 
   964     000A                     	;# 
   965     000B                     	;# 
   966     000C                     	;# 
   967     000D                     	;# 
   968     000E                     	;# 
   969     0010                     	;# 
   970     0011                     	;# 
   971     0012                     	;# 
   972     0013                     	;# 
   973     0015                     	;# 
   974     0016                     	;# 
   975     0016                     	;# 
   976     0017                     	;# 
   977     0018                     	;# 
   978     0019                     	;# 
   979     001A                     	;# 
   980     001B                     	;# 
   981     001C                     	;# 
   982     001E                     	;# 
   983     001F                     	;# 
   984     008C                     	;# 
   985     008D                     	;# 
   986     008E                     	;# 
   987     0090                     	;# 
   988     0091                     	;# 
   989     0092                     	;# 
   990     0093                     	;# 
   991     0095                     	;# 
   992     0096                     	;# 
   993     0097                     	;# 
   994     0098                     	;# 
   995     0099                     	;# 
   996     009A                     	;# 
   997     009B                     	;# 
   998     009B                     	;# 
   999     009C                     	;# 
  1000     009D                     	;# 
  1001     009E                     	;# 
  1002     010C                     	;# 
  1003     010D                     	;# 
  1004     010E                     	;# 
  1005     0110                     	;# 
  1006     0111                     	;# 
  1007     0112                     	;# 
  1008     0113                     	;# 
  1009     0114                     	;# 
  1010     0115                     	;# 
  1011     0116                     	;# 
  1012     0117                     	;# 
  1013     0118                     	;# 
  1014     0119                     	;# 
  1015     011A                     	;# 
  1016     011B                     	;# 
  1017     011D                     	;# 
  1018     018C                     	;# 
  1019     018D                     	;# 
  1020     0191                     	;# 
  1021     0191                     	;# 
  1022     0192                     	;# 
  1023     0193                     	;# 
  1024     0193                     	;# 
  1025     0193                     	;# 
  1026     0194                     	;# 
  1027     0195                     	;# 
  1028     0196                     	;# 
  1029     0199                     	;# 
  1030     019A                     	;# 
  1031     019B                     	;# 
  1032     019B                     	;# 
  1033     019B                     	;# 
  1034     019B                     	;# 
  1035     019C                     	;# 
  1036     019C                     	;# 
  1037     019D                     	;# 
  1038     019E                     	;# 
  1039     019F                     	;# 
  1040     020D                     	;# 
  1041     0210                     	;# 
  1042     0211                     	;# 
  1043     0212                     	;# 
  1044     0213                     	;# 
  1045     0214                     	;# 
  1046     0215                     	;# 
  1047     0215                     	;# 
  1048     0216                     	;# 
  1049     0217                     	;# 
  1050     0291                     	;# 
  1051     0291                     	;# 
  1052     0292                     	;# 
  1053     0293                     	;# 
  1054     0294                     	;# 
  1055     0295                     	;# 
  1056     0295                     	;# 
  1057     0296                     	;# 
  1058     0298                     	;# 
  1059     0298                     	;# 
  1060     0299                     	;# 
  1061     029A                     	;# 
  1062     029B                     	;# 
  1063     029C                     	;# 
  1064     029C                     	;# 
  1065     029D                     	;# 
  1066     029E                     	;# 
  1067     029F                     	;# 
  1068     0311                     	;# 
  1069     0311                     	;# 
  1070     0312                     	;# 
  1071     0313                     	;# 
  1072     0314                     	;# 
  1073     0315                     	;# 
  1074     0315                     	;# 
  1075     0316                     	;# 
  1076     0318                     	;# 
  1077     0318                     	;# 
  1078     0319                     	;# 
  1079     031A                     	;# 
  1080     031C                     	;# 
  1081     031C                     	;# 
  1082     031D                     	;# 
  1083     031E                     	;# 
  1084     0394                     	;# 
  1085     0395                     	;# 
  1086     0396                     	;# 
  1087     0415                     	;# 
  1088     0416                     	;# 
  1089     0417                     	;# 
  1090     041C                     	;# 
  1091     041D                     	;# 
  1092     041E                     	;# 
  1093     0791                     	;# 
  1094     0792                     	;# 
  1095     0793                     	;# 
  1096     0794                     	;# 
  1097     0795                     	;# 
  1098     0798                     	;# 
  1099     0799                     	;# 
  1100     07A0                     	;# 
  1101     07A1                     	;# 
  1102     07A3                     	;# 
  1103     07A4                     	;# 
  1104     07A6                     	;# 
  1105     07A7                     	;# 
  1106     07A9                     	;# 
  1107     07AA                     	;# 
  1108     0FE4                     	;# 
  1109     0FE5                     	;# 
  1110     0FE6                     	;# 
  1111     0FE7                     	;# 
  1112     0FE8                     	;# 
  1113     0FE9                     	;# 
  1114     0FEA                     	;# 
  1115     0FEB                     	;# 
  1116     0FED                     	;# 
  1117     0FEE                     	;# 
  1118     0FEF                     	;# 
  1119     0000                     	;# 
  1120     0001                     	;# 
  1121     0002                     	;# 
  1122     0003                     	;# 
  1123     0004                     	;# 
  1124     0005                     	;# 
  1125     0006                     	;# 
  1126     0007                     	;# 
  1127     0008                     	;# 
  1128     0009                     	;# 
  1129     000A                     	;# 
  1130     000B                     	;# 
  1131     000C                     	;# 
  1132     000D                     	;# 
  1133     000E                     	;# 
  1134     0010                     	;# 
  1135     0011                     	;# 
  1136     0012                     	;# 
  1137     0013                     	;# 
  1138     0015                     	;# 
  1139     0016                     	;# 
  1140     0016                     	;# 
  1141     0017                     	;# 
  1142     0018                     	;# 
  1143     0019                     	;# 
  1144     001A                     	;# 
  1145     001B                     	;# 
  1146     001C                     	;# 
  1147     001E                     	;# 
  1148     001F                     	;# 
  1149     008C                     	;# 
  1150     008D                     	;# 
  1151     008E                     	;# 
  1152     0090                     	;# 
  1153     0091                     	;# 
  1154     0092                     	;# 
  1155     0093                     	;# 
  1156     0095                     	;# 
  1157     0096                     	;# 
  1158     0097                     	;# 
  1159     0098                     	;# 
  1160     0099                     	;# 
  1161     009A                     	;# 
  1162     009B                     	;# 
  1163     009B                     	;# 
  1164     009C                     	;# 
  1165     009D                     	;# 
  1166     009E                     	;# 
  1167     010C                     	;# 
  1168     010D                     	;# 
  1169     010E                     	;# 
  1170     0110                     	;# 
  1171     0111                     	;# 
  1172     0112                     	;# 
  1173     0113                     	;# 
  1174     0114                     	;# 
  1175     0115                     	;# 
  1176     0116                     	;# 
  1177     0117                     	;# 
  1178     0118                     	;# 
  1179     0119                     	;# 
  1180     011A                     	;# 
  1181     011B                     	;# 
  1182     011D                     	;# 
  1183     018C                     	;# 
  1184     018D                     	;# 
  1185     0191                     	;# 
  1186     0191                     	;# 
  1187     0192                     	;# 
  1188     0193                     	;# 
  1189     0193                     	;# 
  1190     0193                     	;# 
  1191     0194                     	;# 
  1192     0195                     	;# 
  1193     0196                     	;# 
  1194     0199                     	;# 
  1195     019A                     	;# 
  1196     019B                     	;# 
  1197     019B                     	;# 
  1198     019B                     	;# 
  1199     019B                     	;# 
  1200     019C                     	;# 
  1201     019C                     	;# 
  1202     019D                     	;# 
  1203     019E                     	;# 
  1204     019F                     	;# 
  1205     020D                     	;# 
  1206     0210                     	;# 
  1207     0211                     	;# 
  1208     0212                     	;# 
  1209     0213                     	;# 
  1210     0214                     	;# 
  1211     0215                     	;# 
  1212     0215                     	;# 
  1213     0216                     	;# 
  1214     0217                     	;# 
  1215     0291                     	;# 
  1216     0291                     	;# 
  1217     0292                     	;# 
  1218     0293                     	;# 
  1219     0294                     	;# 
  1220     0295                     	;# 
  1221     0295                     	;# 
  1222     0296                     	;# 
  1223     0298                     	;# 
  1224     0298                     	;# 
  1225     0299                     	;# 
  1226     029A                     	;# 
  1227     029B                     	;# 
  1228     029C                     	;# 
  1229     029C                     	;# 
  1230     029D                     	;# 
  1231     029E                     	;# 
  1232     029F                     	;# 
  1233     0311                     	;# 
  1234     0311                     	;# 
  1235     0312                     	;# 
  1236     0313                     	;# 
  1237     0314                     	;# 
  1238     0315                     	;# 
  1239     0315                     	;# 
  1240     0316                     	;# 
  1241     0318                     	;# 
  1242     0318                     	;# 
  1243     0319                     	;# 
  1244     031A                     	;# 
  1245     031C                     	;# 
  1246     031C                     	;# 
  1247     031D                     	;# 
  1248     031E                     	;# 
  1249     0394                     	;# 
  1250     0395                     	;# 
  1251     0396                     	;# 
  1252     0415                     	;# 
  1253     0416                     	;# 
  1254     0417                     	;# 
  1255     041C                     	;# 
  1256     041D                     	;# 
  1257     041E                     	;# 
  1258     0791                     	;# 
  1259     0792                     	;# 
  1260     0793                     	;# 
  1261     0794                     	;# 
  1262     0795                     	;# 
  1263     0798                     	;# 
  1264     0799                     	;# 
  1265     07A0                     	;# 
  1266     07A1                     	;# 
  1267     07A3                     	;# 
  1268     07A4                     	;# 
  1269     07A6                     	;# 
  1270     07A7                     	;# 
  1271     07A9                     	;# 
  1272     07AA                     	;# 
  1273     0FE4                     	;# 
  1274     0FE5                     	;# 
  1275     0FE6                     	;# 
  1276     0FE7                     	;# 
  1277     0FE8                     	;# 
  1278     0FE9                     	;# 
  1279     0FEA                     	;# 
  1280     0FEB                     	;# 
  1281     0FED                     	;# 
  1282     0FEE                     	;# 
  1283     0FEF                     	;# 
  1284     0000                     	;# 
  1285     0001                     	;# 
  1286     0002                     	;# 
  1287     0003                     	;# 
  1288     0004                     	;# 
  1289     0005                     	;# 
  1290     0006                     	;# 
  1291     0007                     	;# 
  1292     0008                     	;# 
  1293     0009                     	;# 
  1294     000A                     	;# 
  1295     000B                     	;# 
  1296     000C                     	;# 
  1297     000D                     	;# 
  1298     000E                     	;# 
  1299     0010                     	;# 
  1300     0011                     	;# 
  1301     0012                     	;# 
  1302     0013                     	;# 
  1303     0015                     	;# 
  1304     0016                     	;# 
  1305     0016                     	;# 
  1306     0017                     	;# 
  1307     0018                     	;# 
  1308     0019                     	;# 
  1309     001A                     	;# 
  1310     001B                     	;# 
  1311     001C                     	;# 
  1312     001E                     	;# 
  1313     001F                     	;# 
  1314     008C                     	;# 
  1315     008D                     	;# 
  1316     008E                     	;# 
  1317     0090                     	;# 
  1318     0091                     	;# 
  1319     0092                     	;# 
  1320     0093                     	;# 
  1321     0095                     	;# 
  1322     0096                     	;# 
  1323     0097                     	;# 
  1324     0098                     	;# 
  1325     0099                     	;# 
  1326     009A                     	;# 
  1327     009B                     	;# 
  1328     009B                     	;# 
  1329     009C                     	;# 
  1330     009D                     	;# 
  1331     009E                     	;# 
  1332     010C                     	;# 
  1333     010D                     	;# 
  1334     010E                     	;# 
  1335     0110                     	;# 
  1336     0111                     	;# 
  1337     0112                     	;# 
  1338     0113                     	;# 
  1339     0114                     	;# 
  1340     0115                     	;# 
  1341     0116                     	;# 
  1342     0117                     	;# 
  1343     0118                     	;# 
  1344     0119                     	;# 
  1345     011A                     	;# 
  1346     011B                     	;# 
  1347     011D                     	;# 
  1348     018C                     	;# 
  1349     018D                     	;# 
  1350     0191                     	;# 
  1351     0191                     	;# 
  1352     0192                     	;# 
  1353     0193                     	;# 
  1354     0193                     	;# 
  1355     0193                     	;# 
  1356     0194                     	;# 
  1357     0195                     	;# 
  1358     0196                     	;# 
  1359     0199                     	;# 
  1360     019A                     	;# 
  1361     019B                     	;# 
  1362     019B                     	;# 
  1363     019B                     	;# 
  1364     019B                     	;# 
  1365     019C                     	;# 
  1366     019C                     	;# 
  1367     019D                     	;# 
  1368     019E                     	;# 
  1369     019F                     	;# 
  1370     020D                     	;# 
  1371     0210                     	;# 
  1372     0211                     	;# 
  1373     0212                     	;# 
  1374     0213                     	;# 
  1375     0214                     	;# 
  1376     0215                     	;# 
  1377     0215                     	;# 
  1378     0216                     	;# 
  1379     0217                     	;# 
  1380     0291                     	;# 
  1381     0291                     	;# 
  1382     0292                     	;# 
  1383     0293                     	;# 
  1384     0294                     	;# 
  1385     0295                     	;# 
  1386     0295                     	;# 
  1387     0296                     	;# 
  1388     0298                     	;# 
  1389     0298                     	;# 
  1390     0299                     	;# 
  1391     029A                     	;# 
  1392     029B                     	;# 
  1393     029C                     	;# 
  1394     029C                     	;# 
  1395     029D                     	;# 
  1396     029E                     	;# 
  1397     029F                     	;# 
  1398     0311                     	;# 
  1399     0311                     	;# 
  1400     0312                     	;# 
  1401     0313                     	;# 
  1402     0314                     	;# 
  1403     0315                     	;# 
  1404     0315                     	;# 
  1405     0316                     	;# 
  1406     0318                     	;# 
  1407     0318                     	;# 
  1408     0319                     	;# 
  1409     031A                     	;# 
  1410     031C                     	;# 
  1411     031C                     	;# 
  1412     031D                     	;# 
  1413     031E                     	;# 
  1414     0394                     	;# 
  1415     0395                     	;# 
  1416     0396                     	;# 
  1417     0415                     	;# 
  1418     0416                     	;# 
  1419     0417                     	;# 
  1420     041C                     	;# 
  1421     041D                     	;# 
  1422     041E                     	;# 
  1423     0791                     	;# 
  1424     0792                     	;# 
  1425     0793                     	;# 
  1426     0794                     	;# 
  1427     0795                     	;# 
  1428     0798                     	;# 
  1429     0799                     	;# 
  1430     07A0                     	;# 
  1431     07A1                     	;# 
  1432     07A3                     	;# 
  1433     07A4                     	;# 
  1434     07A6                     	;# 
  1435     07A7                     	;# 
  1436     07A9                     	;# 
  1437     07AA                     	;# 
  1438     0FE4                     	;# 
  1439     0FE5                     	;# 
  1440     0FE6                     	;# 
  1441     0FE7                     	;# 
  1442     0FE8                     	;# 
  1443     0FE9                     	;# 
  1444     0FEA                     	;# 
  1445     0FEB                     	;# 
  1446     0FED                     	;# 
  1447     0FEE                     	;# 
  1448     0FEF                     	;# 
  1449     0000                     	;# 
  1450     0001                     	;# 
  1451     0002                     	;# 
  1452     0003                     	;# 
  1453     0004                     	;# 
  1454     0005                     	;# 
  1455     0006                     	;# 
  1456     0007                     	;# 
  1457     0008                     	;# 
  1458     0009                     	;# 
  1459     000A                     	;# 
  1460     000B                     	;# 
  1461     000C                     	;# 
  1462     000D                     	;# 
  1463     000E                     	;# 
  1464     0010                     	;# 
  1465     0011                     	;# 
  1466     0012                     	;# 
  1467     0013                     	;# 
  1468     0015                     	;# 
  1469     0016                     	;# 
  1470     0016                     	;# 
  1471     0017                     	;# 
  1472     0018                     	;# 
  1473     0019                     	;# 
  1474     001A                     	;# 
  1475     001B                     	;# 
  1476     001C                     	;# 
  1477     001E                     	;# 
  1478     001F                     	;# 
  1479     008C                     	;# 
  1480     008D                     	;# 
  1481     008E                     	;# 
  1482     0090                     	;# 
  1483     0091                     	;# 
  1484     0092                     	;# 
  1485     0093                     	;# 
  1486     0095                     	;# 
  1487     0096                     	;# 
  1488     0097                     	;# 
  1489     0098                     	;# 
  1490     0099                     	;# 
  1491     009A                     	;# 
  1492     009B                     	;# 
  1493     009B                     	;# 
  1494     009C                     	;# 
  1495     009D                     	;# 
  1496     009E                     	;# 
  1497     010C                     	;# 
  1498     010D                     	;# 
  1499     010E                     	;# 
  1500     0110                     	;# 
  1501     0111                     	;# 
  1502     0112                     	;# 
  1503     0113                     	;# 
  1504     0114                     	;# 
  1505     0115                     	;# 
  1506     0116                     	;# 
  1507     0117                     	;# 
  1508     0118                     	;# 
  1509     0119                     	;# 
  1510     011A                     	;# 
  1511     011B                     	;# 
  1512     011D                     	;# 
  1513     018C                     	;# 
  1514     018D                     	;# 
  1515     0191                     	;# 
  1516     0191                     	;# 
  1517     0192                     	;# 
  1518     0193                     	;# 
  1519     0193                     	;# 
  1520     0193                     	;# 
  1521     0194                     	;# 
  1522     0195                     	;# 
  1523     0196                     	;# 
  1524     0199                     	;# 
  1525     019A                     	;# 
  1526     019B                     	;# 
  1527     019B                     	;# 
  1528     019B                     	;# 
  1529     019B                     	;# 
  1530     019C                     	;# 
  1531     019C                     	;# 
  1532     019D                     	;# 
  1533     019E                     	;# 
  1534     019F                     	;# 
  1535     020D                     	;# 
  1536     0210                     	;# 
  1537     0211                     	;# 
  1538     0212                     	;# 
  1539     0213                     	;# 
  1540     0214                     	;# 
  1541     0215                     	;# 
  1542     0215                     	;# 
  1543     0216                     	;# 
  1544     0217                     	;# 
  1545     0291                     	;# 
  1546     0291                     	;# 
  1547     0292                     	;# 
  1548     0293                     	;# 
  1549     0294                     	;# 
  1550     0295                     	;# 
  1551     0295                     	;# 
  1552     0296                     	;# 
  1553     0298                     	;# 
  1554     0298                     	;# 
  1555     0299                     	;# 
  1556     029A                     	;# 
  1557     029B                     	;# 
  1558     029C                     	;# 
  1559     029C                     	;# 
  1560     029D                     	;# 
  1561     029E                     	;# 
  1562     029F                     	;# 
  1563     0311                     	;# 
  1564     0311                     	;# 
  1565     0312                     	;# 
  1566     0313                     	;# 
  1567     0314                     	;# 
  1568     0315                     	;# 
  1569     0315                     	;# 
  1570     0316                     	;# 
  1571     0318                     	;# 
  1572     0318                     	;# 
  1573     0319                     	;# 
  1574     031A                     	;# 
  1575     031C                     	;# 
  1576     031C                     	;# 
  1577     031D                     	;# 
  1578     031E                     	;# 
  1579     0394                     	;# 
  1580     0395                     	;# 
  1581     0396                     	;# 
  1582     0415                     	;# 
  1583     0416                     	;# 
  1584     0417                     	;# 
  1585     041C                     	;# 
  1586     041D                     	;# 
  1587     041E                     	;# 
  1588     0791                     	;# 
  1589     0792                     	;# 
  1590     0793                     	;# 
  1591     0794                     	;# 
  1592     0795                     	;# 
  1593     0798                     	;# 
  1594     0799                     	;# 
  1595     07A0                     	;# 
  1596     07A1                     	;# 
  1597     07A3                     	;# 
  1598     07A4                     	;# 
  1599     07A6                     	;# 
  1600     07A7                     	;# 
  1601     07A9                     	;# 
  1602     07AA                     	;# 
  1603     0FE4                     	;# 
  1604     0FE5                     	;# 
  1605     0FE6                     	;# 
  1606     0FE7                     	;# 
  1607     0FE8                     	;# 
  1608     0FE9                     	;# 
  1609     0FEA                     	;# 
  1610     0FEB                     	;# 
  1611     0FED                     	;# 
  1612     0FEE                     	;# 
  1613     0FEF                     	;# 
  1614     0000                     	;# 
  1615     0001                     	;# 
  1616     0002                     	;# 
  1617     0003                     	;# 
  1618     0004                     	;# 
  1619     0005                     	;# 
  1620     0006                     	;# 
  1621     0007                     	;# 
  1622     0008                     	;# 
  1623     0009                     	;# 
  1624     000A                     	;# 
  1625     000B                     	;# 
  1626     000C                     	;# 
  1627     000D                     	;# 
  1628     000E                     	;# 
  1629     0010                     	;# 
  1630     0011                     	;# 
  1631     0012                     	;# 
  1632     0013                     	;# 
  1633     0015                     	;# 
  1634     0016                     	;# 
  1635     0016                     	;# 
  1636     0017                     	;# 
  1637     0018                     	;# 
  1638     0019                     	;# 
  1639     001A                     	;# 
  1640     001B                     	;# 
  1641     001C                     	;# 
  1642     001E                     	;# 
  1643     001F                     	;# 
  1644     008C                     	;# 
  1645     008D                     	;# 
  1646     008E                     	;# 
  1647     0090                     	;# 
  1648     0091                     	;# 
  1649     0092                     	;# 
  1650     0093                     	;# 
  1651     0095                     	;# 
  1652     0096                     	;# 
  1653     0097                     	;# 
  1654     0098                     	;# 
  1655     0099                     	;# 
  1656     009A                     	;# 
  1657     009B                     	;# 
  1658     009B                     	;# 
  1659     009C                     	;# 
  1660     009D                     	;# 
  1661     009E                     	;# 
  1662     010C                     	;# 
  1663     010D                     	;# 
  1664     010E                     	;# 
  1665     0110                     	;# 
  1666     0111                     	;# 
  1667     0112                     	;# 
  1668     0113                     	;# 
  1669     0114                     	;# 
  1670     0115                     	;# 
  1671     0116                     	;# 
  1672     0117                     	;# 
  1673     0118                     	;# 
  1674     0119                     	;# 
  1675     011A                     	;# 
  1676     011B                     	;# 
  1677     011D                     	;# 
  1678     018C                     	;# 
  1679     018D                     	;# 
  1680     0191                     	;# 
  1681     0191                     	;# 
  1682     0192                     	;# 
  1683     0193                     	;# 
  1684     0193                     	;# 
  1685     0193                     	;# 
  1686     0194                     	;# 
  1687     0195                     	;# 
  1688     0196                     	;# 
  1689     0199                     	;# 
  1690     019A                     	;# 
  1691     019B                     	;# 
  1692     019B                     	;# 
  1693     019B                     	;# 
  1694     019B                     	;# 
  1695     019C                     	;# 
  1696     019C                     	;# 
  1697     019D                     	;# 
  1698     019E                     	;# 
  1699     019F                     	;# 
  1700     020D                     	;# 
  1701     0210                     	;# 
  1702     0211                     	;# 
  1703     0212                     	;# 
  1704     0213                     	;# 
  1705     0214                     	;# 
  1706     0215                     	;# 
  1707     0215                     	;# 
  1708     0216                     	;# 
  1709     0217                     	;# 
  1710     0291                     	;# 
  1711     0291                     	;# 
  1712     0292                     	;# 
  1713     0293                     	;# 
  1714     0294                     	;# 
  1715     0295                     	;# 
  1716     0295                     	;# 
  1717     0296                     	;# 
  1718     0298                     	;# 
  1719     0298                     	;# 
  1720     0299                     	;# 
  1721     029A                     	;# 
  1722     029B                     	;# 
  1723     029C                     	;# 
  1724     029C                     	;# 
  1725     029D                     	;# 
  1726     029E                     	;# 
  1727     029F                     	;# 
  1728     0311                     	;# 
  1729     0311                     	;# 
  1730     0312                     	;# 
  1731     0313                     	;# 
  1732     0314                     	;# 
  1733     0315                     	;# 
  1734     0315                     	;# 
  1735     0316                     	;# 
  1736     0318                     	;# 
  1737     0318                     	;# 
  1738     0319                     	;# 
  1739     031A                     	;# 
  1740     031C                     	;# 
  1741     031C                     	;# 
  1742     031D                     	;# 
  1743     031E                     	;# 
  1744     0394                     	;# 
  1745     0395                     	;# 
  1746     0396                     	;# 
  1747     0415                     	;# 
  1748     0416                     	;# 
  1749     0417                     	;# 
  1750     041C                     	;# 
  1751     041D                     	;# 
  1752     041E                     	;# 
  1753     0791                     	;# 
  1754     0792                     	;# 
  1755     0793                     	;# 
  1756     0794                     	;# 
  1757     0795                     	;# 
  1758     0798                     	;# 
  1759     0799                     	;# 
  1760     07A0                     	;# 
  1761     07A1                     	;# 
  1762     07A3                     	;# 
  1763     07A4                     	;# 
  1764     07A6                     	;# 
  1765     07A7                     	;# 
  1766     07A9                     	;# 
  1767     07AA                     	;# 
  1768     0FE4                     	;# 
  1769     0FE5                     	;# 
  1770     0FE6                     	;# 
  1771     0FE7                     	;# 
  1772     0FE8                     	;# 
  1773     0FE9                     	;# 
  1774     0FEA                     	;# 
  1775     0FEB                     	;# 
  1776     0FED                     	;# 
  1777     0FEE                     	;# 
  1778     0FEF                     	;# 
  1779     0000                     	;# 
  1780     0001                     	;# 
  1781     0002                     	;# 
  1782     0003                     	;# 
  1783     0004                     	;# 
  1784     0005                     	;# 
  1785     0006                     	;# 
  1786     0007                     	;# 
  1787     0008                     	;# 
  1788     0009                     	;# 
  1789     000A                     	;# 
  1790     000B                     	;# 
  1791     000C                     	;# 
  1792     000D                     	;# 
  1793     000E                     	;# 
  1794     0010                     	;# 
  1795     0011                     	;# 
  1796     0012                     	;# 
  1797     0013                     	;# 
  1798     0015                     	;# 
  1799     0016                     	;# 
  1800     0016                     	;# 
  1801     0017                     	;# 
  1802     0018                     	;# 
  1803     0019                     	;# 
  1804     001A                     	;# 
  1805     001B                     	;# 
  1806     001C                     	;# 
  1807     001E                     	;# 
  1808     001F                     	;# 
  1809     008C                     	;# 
  1810     008D                     	;# 
  1811     008E                     	;# 
  1812     0090                     	;# 
  1813     0091                     	;# 
  1814     0092                     	;# 
  1815     0093                     	;# 
  1816     0095                     	;# 
  1817     0096                     	;# 
  1818     0097                     	;# 
  1819     0098                     	;# 
  1820     0099                     	;# 
  1821     009A                     	;# 
  1822     009B                     	;# 
  1823     009B                     	;# 
  1824     009C                     	;# 
  1825     009D                     	;# 
  1826     009E                     	;# 
  1827     010C                     	;# 
  1828     010D                     	;# 
  1829     010E                     	;# 
  1830     0110                     	;# 
  1831     0111                     	;# 
  1832     0112                     	;# 
  1833     0113                     	;# 
  1834     0114                     	;# 
  1835     0115                     	;# 
  1836     0116                     	;# 
  1837     0117                     	;# 
  1838     0118                     	;# 
  1839     0119                     	;# 
  1840     011A                     	;# 
  1841     011B                     	;# 
  1842     011D                     	;# 
  1843     018C                     	;# 
  1844     018D                     	;# 
  1845     0191                     	;# 
  1846     0191                     	;# 
  1847     0192                     	;# 
  1848     0193                     	;# 
  1849     0193                     	;# 
  1850     0193                     	;# 
  1851     0194                     	;# 
  1852     0195                     	;# 
  1853     0196                     	;# 
  1854     0199                     	;# 
  1855     019A                     	;# 
  1856     019B                     	;# 
  1857     019B                     	;# 
  1858     019B                     	;# 
  1859     019B                     	;# 
  1860     019C                     	;# 
  1861     019C                     	;# 
  1862     019D                     	;# 
  1863     019E                     	;# 
  1864     019F                     	;# 
  1865     020D                     	;# 
  1866     0210                     	;# 
  1867     0211                     	;# 
  1868     0212                     	;# 
  1869     0213                     	;# 
  1870     0214                     	;# 
  1871     0215                     	;# 
  1872     0215                     	;# 
  1873     0216                     	;# 
  1874     0217                     	;# 
  1875     0291                     	;# 
  1876     0291                     	;# 
  1877     0292                     	;# 
  1878     0293                     	;# 
  1879     0294                     	;# 
  1880     0295                     	;# 
  1881     0295                     	;# 
  1882     0296                     	;# 
  1883     0298                     	;# 
  1884     0298                     	;# 
  1885     0299                     	;# 
  1886     029A                     	;# 
  1887     029B                     	;# 
  1888     029C                     	;# 
  1889     029C                     	;# 
  1890     029D                     	;# 
  1891     029E                     	;# 
  1892     029F                     	;# 
  1893     0311                     	;# 
  1894     0311                     	;# 
  1895     0312                     	;# 
  1896     0313                     	;# 
  1897     0314                     	;# 
  1898     0315                     	;# 
  1899     0315                     	;# 
  1900     0316                     	;# 
  1901     0318                     	;# 
  1902     0318                     	;# 
  1903     0319                     	;# 
  1904     031A                     	;# 
  1905     031C                     	;# 
  1906     031C                     	;# 
  1907     031D                     	;# 
  1908     031E                     	;# 
  1909     0394                     	;# 
  1910     0395                     	;# 
  1911     0396                     	;# 
  1912     0415                     	;# 
  1913     0416                     	;# 
  1914     0417                     	;# 
  1915     041C                     	;# 
  1916     041D                     	;# 
  1917     041E                     	;# 
  1918     0791                     	;# 
  1919     0792                     	;# 
  1920     0793                     	;# 
  1921     0794                     	;# 
  1922     0795                     	;# 
  1923     0798                     	;# 
  1924     0799                     	;# 
  1925     07A0                     	;# 
  1926     07A1                     	;# 
  1927     07A3                     	;# 
  1928     07A4                     	;# 
  1929     07A6                     	;# 
  1930     07A7                     	;# 
  1931     07A9                     	;# 
  1932     07AA                     	;# 
  1933     0FE4                     	;# 
  1934     0FE5                     	;# 
  1935     0FE6                     	;# 
  1936     0FE7                     	;# 
  1937     0FE8                     	;# 
  1938     0FE9                     	;# 
  1939     0FEA                     	;# 
  1940     0FEB                     	;# 
  1941     0FED                     	;# 
  1942     0FEE                     	;# 
  1943     0FEF                     	;# 
  1944     0000                     	;# 
  1945     0001                     	;# 
  1946     0002                     	;# 
  1947     0003                     	;# 
  1948     0004                     	;# 
  1949     0005                     	;# 
  1950     0006                     	;# 
  1951     0007                     	;# 
  1952     0008                     	;# 
  1953     0009                     	;# 
  1954     000A                     	;# 
  1955     000B                     	;# 
  1956     000C                     	;# 
  1957     000D                     	;# 
  1958     000E                     	;# 
  1959     0010                     	;# 
  1960     0011                     	;# 
  1961     0012                     	;# 
  1962     0013                     	;# 
  1963     0015                     	;# 
  1964     0016                     	;# 
  1965     0016                     	;# 
  1966     0017                     	;# 
  1967     0018                     	;# 
  1968     0019                     	;# 
  1969     001A                     	;# 
  1970     001B                     	;# 
  1971     001C                     	;# 
  1972     001E                     	;# 
  1973     001F                     	;# 
  1974     008C                     	;# 
  1975     008D                     	;# 
  1976     008E                     	;# 
  1977     0090                     	;# 
  1978     0091                     	;# 
  1979     0092                     	;# 
  1980     0093                     	;# 
  1981     0095                     	;# 
  1982     0096                     	;# 
  1983     0097                     	;# 
  1984     0098                     	;# 
  1985     0099                     	;# 
  1986     009A                     	;# 
  1987     009B                     	;# 
  1988     009B                     	;# 
  1989     009C                     	;# 
  1990     009D                     	;# 
  1991     009E                     	;# 
  1992     010C                     	;# 
  1993     010D                     	;# 
  1994     010E                     	;# 
  1995     0110                     	;# 
  1996     0111                     	;# 
  1997     0112                     	;# 
  1998     0113                     	;# 
  1999     0114                     	;# 
  2000     0115                     	;# 
  2001     0116                     	;# 
  2002     0117                     	;# 
  2003     0118                     	;# 
  2004     0119                     	;# 
  2005     011A                     	;# 
  2006     011B                     	;# 
  2007     011D                     	;# 
  2008     018C                     	;# 
  2009     018D                     	;# 
  2010     0191                     	;# 
  2011     0191                     	;# 
  2012     0192                     	;# 
  2013     0193                     	;# 
  2014     0193                     	;# 
  2015     0193                     	;# 
  2016     0194                     	;# 
  2017     0195                     	;# 
  2018     0196                     	;# 
  2019     0199                     	;# 
  2020     019A                     	;# 
  2021     019B                     	;# 
  2022     019B                     	;# 
  2023     019B                     	;# 
  2024     019B                     	;# 
  2025     019C                     	;# 
  2026     019C                     	;# 
  2027     019D                     	;# 
  2028     019E                     	;# 
  2029     019F                     	;# 
  2030     020D                     	;# 
  2031     0210                     	;# 
  2032     0211                     	;# 
  2033     0212                     	;# 
  2034     0213                     	;# 
  2035     0214                     	;# 
  2036     0215                     	;# 
  2037     0215                     	;# 
  2038     0216                     	;# 
  2039     0217                     	;# 
  2040     0291                     	;# 
  2041     0291                     	;# 
  2042     0292                     	;# 
  2043     0293                     	;# 
  2044     0294                     	;# 
  2045     0295                     	;# 
  2046     0295                     	;# 
  2047     0296                     	;# 
  2048     0298                     	;# 
  2049     0298                     	;# 
  2050     0299                     	;# 
  2051     029A                     	;# 
  2052     029B                     	;# 
  2053     029C                     	;# 
  2054     029C                     	;# 
  2055     029D                     	;# 
  2056     029E                     	;# 
  2057     029F                     	;# 
  2058     0311                     	;# 
  2059     0311                     	;# 
  2060     0312                     	;# 
  2061     0313                     	;# 
  2062     0314                     	;# 
  2063     0315                     	;# 
  2064     0315                     	;# 
  2065     0316                     	;# 
  2066     0318                     	;# 
  2067     0318                     	;# 
  2068     0319                     	;# 
  2069     031A                     	;# 
  2070     031C                     	;# 
  2071     031C                     	;# 
  2072     031D                     	;# 
  2073     031E                     	;# 
  2074     0394                     	;# 
  2075     0395                     	;# 
  2076     0396                     	;# 
  2077     0415                     	;# 
  2078     0416                     	;# 
  2079     0417                     	;# 
  2080     041C                     	;# 
  2081     041D                     	;# 
  2082     041E                     	;# 
  2083     0791                     	;# 
  2084     0792                     	;# 
  2085     0793                     	;# 
  2086     0794                     	;# 
  2087     0795                     	;# 
  2088     0798                     	;# 
  2089     0799                     	;# 
  2090     07A0                     	;# 
  2091     07A1                     	;# 
  2092     07A3                     	;# 
  2093     07A4                     	;# 
  2094     07A6                     	;# 
  2095     07A7                     	;# 
  2096     07A9                     	;# 
  2097     07AA                     	;# 
  2098     0FE4                     	;# 
  2099     0FE5                     	;# 
  2100     0FE6                     	;# 
  2101     0FE7                     	;# 
  2102     0FE8                     	;# 
  2103     0FE9                     	;# 
  2104     0FEA                     	;# 
  2105     0FEB                     	;# 
  2106     0FED                     	;# 
  2107     0FEE                     	;# 
  2108     0FEF                     	;_SES_Modbus
  2109                           
  2110                           	psect	idataBANK0
  2111     03B6                     __pidataBANK0:
  2112                           
  2113                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2114     03B6  3424               	retlw	36
  2115     03B7  3416               	retlw	22
  2116                           
  2117                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2118     03B8  3424               	retlw	36
  2119     03B9  340B               	retlw	11
  2120                           
  2121                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2122     03BA  342C               	retlw	44
  2123     03BB  3410               	retlw	16
  2124                           
  2125                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2126     03BC  342C               	retlw	44
  2127     03BD  340D               	retlw	13
  2128                           
  2129                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2130     03BE  342C               	retlw	44
  2131     03BF  3406               	retlw	6
  2132                           
  2133                           ;initializer for Device_Init@pWS_Ad
  2134     03C0  345C               	retlw	low (_SW_Ad| 0)
  2135                           
  2136                           ;initializer for Task_Sensor@_pHumi
  2137     03C1  3458               	retlw	low (_Humidity| 0)
  2138                           
  2139                           ;initializer for Task_Sensor@_pTemp
  2140     03C2  345A               	retlw	low (_Temperature| 0)
  2141                           
  2142                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2143     03C3  3424               	retlw	36
  2144     03C4  3400               	retlw	0
  2145                           
  2146                           	psect	stringtext1
  2147     02B7                     __pstringtext1:
  2148     02B7                     _i2c_fsmStateTable:
  2149     02B7  34B7               	retlw	low _I2C_DO_IDLE
  2150     02B8  3404               	retlw	high _I2C_DO_IDLE
  2151     02B9  345C               	retlw	low _I2C_DO_SEND_ADR_READ
  2152     02BA  3404               	retlw	high _I2C_DO_SEND_ADR_READ
  2153     02BB  346D               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2154     02BC  3404               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2155     02BD  348E               	retlw	low _I2C_DO_TX
  2156     02BE  3400               	retlw	high _I2C_DO_TX
  2157     02BF  3432               	retlw	low _I2C_DO_RX
  2158     02C0  3401               	retlw	high _I2C_DO_RX
  2159     02C1  347C               	retlw	low _I2C_DO_RCEN
  2160     02C2  3404               	retlw	high _I2C_DO_RCEN
  2161     02C3  34F4               	retlw	low _I2C_DO_TX_EMPTY
  2162     02C4  3401               	retlw	high _I2C_DO_TX_EMPTY
  2163     02C5  34B2               	retlw	low _I2C_DO_SEND_RESTART_READ
  2164     02C6  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  2165     02C7  34AD               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2166     02C8  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2167     02C9  34A8               	retlw	low _I2C_DO_SEND_RESTART
  2168     02CA  3404               	retlw	high _I2C_DO_SEND_RESTART
  2169     02CB  34A3               	retlw	low _I2C_DO_SEND_STOP
  2170     02CC  3404               	retlw	high _I2C_DO_SEND_STOP
  2171     02CD  349E               	retlw	low _I2C_DO_RX_ACK
  2172     02CE  3404               	retlw	high _I2C_DO_RX_ACK
  2173     02CF  3499               	retlw	low _I2C_DO_RX_NACK_STOP
  2174     02D0  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  2175     02D1  3494               	retlw	low _I2C_DO_RX_NACK_RESTART
  2176     02D2  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  2177     02D3  348F               	retlw	low _I2C_DO_RESET
  2178     02D4  3404               	retlw	high _I2C_DO_RESET
  2179     02D5  3449               	retlw	low _I2C_DO_ADDRESS_NACK
  2180     02D6  3402               	retlw	high _I2C_DO_ADDRESS_NACK
  2181     02D7                     __end_of_i2c_fsmStateTable:
  2182                           
  2183                           	psect	stringtext2
  2184     0465                     __pstringtext2:
  2185     0465                     _fctsupported:
  2186     0465  3401               	retlw	1
  2187     0466  3402               	retlw	2
  2188     0467  3403               	retlw	3
  2189     0468  3404               	retlw	4
  2190     0469  3405               	retlw	5
  2191     046A  3406               	retlw	6
  2192     046B  340F               	retlw	15
  2193     046C  3410               	retlw	16
  2194     046D                     __end_of_fctsupported:
  2195                           
  2196                           	psect	nvBANK0
  2197     006C                     __pnvBANK0:
  2198     006C                     _TMR1_InterruptHandler:
  2199     006C                     	ds	2
  2200                           
  2201                           	psect	nvBANK1
  2202     00D4                     __pnvBANK1:
  2203     00D4                     _EUSART_ErrorHandler:
  2204     00D4                     	ds	2
  2205     00D6                     _EUSART_OverrunErrorHandler:
  2206     00D6                     	ds	2
  2207     00D8                     _EUSART_FramingErrorHandler:
  2208     00D8                     	ds	2
  2209     00DA                     _EUSART_RxDefaultInterruptHandler:
  2210     00DA                     	ds	2
  2211     00DC                     _EUSART_TxDefaultInterruptHandler:
  2212     00DC                     	ds	2
  2213     00DE                     _MB_UID:
  2214     00DE                     	ds	1
  2215     000C                     _PORTAbits	set	12
  2216     0019                     _T1GCONbits	set	25
  2217     0018                     _T1CONbits	set	24
  2218     0018                     _T1CON	set	24
  2219     0016                     _TMR1L	set	22
  2220     0017                     _TMR1H	set	23
  2221     0019                     _T1GCON	set	25
  2222     000B                     _INTCONbits	set	11
  2223     0011                     _PIR1bits	set	17
  2224     0012                     _PIR2bits	set	18
  2225     0092                     _PIE2bits	set	146
  2226     0091                     _PIE1bits	set	145
  2227     0097                     _WDTCON	set	151
  2228     0098                     _OSCTUNE	set	152
  2229     0099                     _OSCCON	set	153
  2230     0095                     _OPTION_REGbits	set	149
  2231     008E                     _TRISC	set	142
  2232     008D                     _TRISB	set	141
  2233     008C                     _TRISA	set	140
  2234     0090                     _TRISE	set	144
  2235     010E                     _LATCbits	set	270
  2236     0116                     _BORCON	set	278
  2237     011D                     _APFCON	set	285
  2238     010E                     _LATC	set	270
  2239     010D                     _LATB	set	269
  2240     010C                     _LATA	set	268
  2241     0110                     _LATE	set	272
  2242     0199                     _RCREG	set	409
  2243     019D                     _RCSTAbits	set	413
  2244     019A                     _TXREG	set	410
  2245     019E                     _TXSTAbits	set	414
  2246     019C                     _SPBRGH	set	412
  2247     019B                     _SPBRGL	set	411
  2248     019E                     _TXSTA	set	414
  2249     019D                     _RCSTA	set	413
  2250     019F                     _BAUDCON	set	415
  2251     018C                     _ANSELA	set	396
  2252     018D                     _ANSELB	set	397
  2253     0214                     _SSPSTATbits	set	532
  2254     0216                     _SSPCON2bits	set	534
  2255     0211                     _SSPBUF	set	529
  2256     0215                     _SSPCON1bits	set	533
  2257     0212                     _SSPADD	set	530
  2258     0216                     _SSPCON2	set	534
  2259     0215                     _SSPCON1	set	533
  2260     0214                     _SSPSTAT	set	532
  2261     020D                     _WPUB	set	525
  2262     0210                     _WPUE	set	528
  2263                           
  2264                           	psect	cinit
  2265     0059                     start_initialization:	
  2266                           ; #config settings
  2267                           
  2268     0059                     __initialization:	;BIGRAM
  2269                           
  2270                           ; Initialize objects allocated to BANK0
  2271     0059  30B6               	movlw	low __pidataBANK0
  2272     005A  0084               	movwf	4
  2273     005B  3083               	movlw	(high __pidataBANK0)| (0+128)
  2274     005C  0085               	movwf	5
  2275     005D  305D               	movlw	low __pdataBANK0
  2276     005E  0086               	movwf	6
  2277     005F  3000               	movlw	high __pdataBANK0
  2278     0060  0087               	movwf	7
  2279     0061  3000               	movlw	0
  2280     0062  00FF               	movwf	btemp+1
  2281     0063  300F               	movlw	15
  2282     0064  3183  23ED  3180   	fcall	init_ram
  2283                           
  2284                           ; Clear objects allocated to BIGRAM
  2285     0067  30D4               	movlw	low (0+8404)
  2286     0068  0084               	movwf	4
  2287     0069  3020               	movlw	high (0+8404)
  2288     006A  0085               	movwf	5
  2289     006B  301C               	movlw	28
  2290     006C  00FE               	movwf	btemp
  2291     006D  3001               	movlw	1
  2292     006E  00FF               	movwf	btemp+1
  2293     006F  3183  23F9  3180   	fcall	clear_ram0
  2294                           
  2295                           ; Clear objects allocated to COMMON
  2296     0072  01FC               	clrf	__pbssCOMMON& (0+127)
  2297     0073  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2298                           
  2299                           ; Clear objects allocated to BANK0
  2300     0074  3020               	movlw	low __pbssBANK0
  2301     0075  0084               	movwf	4
  2302     0076  3000               	movlw	high __pbssBANK0
  2303     0077  0085               	movwf	5
  2304     0078  303D               	movlw	61
  2305     0079  00FE               	movwf	btemp
  2306     007A  3000               	movlw	0
  2307     007B  00FF               	movwf	btemp+1
  2308     007C  3183  23F9  3180   	fcall	clear_ram0
  2309                           
  2310                           ; Clear objects allocated to BANK1
  2311     007F  30A0               	movlw	low __pbssBANK1
  2312     0080  0084               	movwf	4
  2313     0081  3000               	movlw	high __pbssBANK1
  2314     0082  0085               	movwf	5
  2315     0083  3034               	movlw	52
  2316     0084  00FE               	movwf	btemp
  2317     0085  3000               	movlw	0
  2318     0086  00FF               	movwf	btemp+1
  2319     0087  3183  23F9  3180   	fcall	clear_ram0
  2320     008A                     end_of_initialization:	
  2321                           ;End of C runtime variable initialization code
  2322                           
  2323     008A                     __end_of__initialization:
  2324     008A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2325     008B  0020               	movlb	0
  2326     008C  3184  2C05         	ljmp	_main	;jump to C main() function
  2327                           
  2328                           	psect	bssCOMMON
  2329     007C                     __pbssCOMMON:
  2330     007C                     _eusartRxCount:
  2331     007C                     	ds	1
  2332     007D                     _eusartRxTail:
  2333     007D                     	ds	1
  2334                           
  2335                           	psect	bssBANK0
  2336     0020                     __pbssBANK0:
  2337     0020                     _I2C_Status:
  2338     0020                     	ds	29
  2339     003D                     _device_time:
  2340     003D                     	ds	4
  2341     0041                     Task_Sensor@valTime:
  2342     0041                     	ds	4
  2343     0045                     __Humidity:
  2344     0045                     	ds	2
  2345     0047                     __Temperature:
  2346     0047                     	ds	2
  2347     0049                     _timer1ReloadVal:
  2348     0049                     	ds	2
  2349     004B                     _MSSP_InterruptHandler:
  2350     004B                     	ds	2
  2351     004D                     Device_Init@value_SW4:
  2352     004D                     	ds	1
  2353     004E                     Device_Init@value_SW3:
  2354     004E                     	ds	1
  2355     004F                     Device_Init@value_SW2:
  2356     004F                     	ds	1
  2357     0050                     Device_Init@value_SW1:
  2358     0050                     	ds	1
  2359     0051                     Task_MB@f_Modbus_Init:
  2360     0051                     	ds	1
  2361     0052                     _f_Indicator:
  2362     0052                     	ds	1
  2363     0053                     _eusartRxLastError:
  2364     0053                     	ds	1
  2365     0054                     _eusartRxHead:
  2366     0054                     	ds	1
  2367     0055                     _eusartTxBufferRemaining:
  2368     0055                     	ds	1
  2369     0056                     _eusartTxTail:
  2370     0056                     	ds	1
  2371     0057                     _eusartTxHead:
  2372     0057                     	ds	1
  2373     0058                     _Humidity:
  2374     0058                     	ds	2
  2375     005A                     _Temperature:
  2376     005A                     	ds	2
  2377     005C                     _SW_Ad:
  2378     005C                     	ds	1
  2379                           
  2380                           	psect	dataBANK0
  2381     005D                     __pdataBANK0:
  2382     005D                     _SHT30_CMD_MEASURE_L_Disable:
  2383     005D                     	ds	2
  2384     005F                     _SHT30_CMD_MEASURE_M_Disable:
  2385     005F                     	ds	2
  2386     0061                     _SHT30_CMD_MEASURE_L_Enable:
  2387     0061                     	ds	2
  2388     0063                     _SHT30_CMD_MEASURE_M_Enable:
  2389     0063                     	ds	2
  2390     0065                     _SHT30_CMD_MEASURE_H_Enable:
  2391     0065                     	ds	2
  2392     0067                     Device_Init@pWS_Ad:
  2393     0067                     	ds	1
  2394     0068                     Task_Sensor@_pHumi:
  2395     0068                     	ds	1
  2396     0069                     Task_Sensor@_pTemp:
  2397     0069                     	ds	1
  2398     006A                     _SHT30_CMD_MEASURE_H_Disable:
  2399     006A                     	ds	2
  2400                           
  2401                           	psect	bssBANK1
  2402     00A0                     __pbssBANK1:
  2403     00A0                     _eusartRxStatusBuffer:
  2404     00A0                     	ds	16
  2405     00B0                     _eusartRxBuffer:
  2406     00B0                     	ds	16
  2407     00C0                     _eusartTxBuffer:
  2408     00C0                     	ds	16
  2409     00D0                     _MB_Register:
  2410     00D0                     	ds	4
  2411                           
  2412                           	psect	inittext
  2413     03ED                     init_ram:
  2414     03ED  00FE               	movwf	btemp
  2415     03EE                     initloop:
  2416     03EE  0012               	moviw fsr0++
  2417     03EF  001E               	movwi fsr1++
  2418     03F0  3001               	movlw	1
  2419     03F1  02FE               	subwf	btemp,f
  2420     03F2  3000               	movlw	0
  2421     03F3  3BFF               	subwfb	btemp+1,f
  2422     03F4  087F               	movf	btemp+1,w
  2423     03F5  047E               	iorwf	btemp,w
  2424     03F6  1D03               	skipz
  2425     03F7  2BEE               	goto	initloop
  2426     03F8  3400               	retlw	0
  2427                           
  2428                           	psect	clrtext
  2429     03F9                     clear_ram0:	
  2430                           ;	Called with FSR0 containing the base address, and
  2431                           ;	btemp/btemp+1 has the size to clear
  2432                           
  2433     03F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  2434     03FA                     clrloop0:
  2435     03FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  2436     03FB  3101               	addfsr 0,1
  2437     03FC  3001               	movlw	1
  2438     03FD  02FE               	subwf	btemp,f
  2439     03FE  3000               	movlw	0
  2440     03FF  3BFF               	subwfb	btemp+1,f
  2441     0400  087F               	movf	btemp+1,w
  2442     0401  047E               	iorwf	btemp,w
  2443     0402  1D03               	skipz
  2444     0403  2BFA               	goto	clrloop0	;have we reached the end yet?
  2445     0404  3400               	retlw	0	;all done for this memory range, return
  2446                           
  2447                           	psect	cstackCOMMON
  2448     0070                     __pcstackCOMMON:
  2449     0070                     ?_I2C_SetBuffer:
  2450     0070                     ?_I2C_Initialize:	
  2451                           ; 1 bytes @ 0x0
  2452                           
  2453     0070                     ?_OSCILLATOR_Initialize:	
  2454                           ; 1 bytes @ 0x0
  2455                           
  2456     0070                     ?_WDT_Initialize:	
  2457                           ; 1 bytes @ 0x0
  2458                           
  2459     0070                     ?_TMR1_Initialize:	
  2460                           ; 1 bytes @ 0x0
  2461                           
  2462     0070                     ?_EUSART_Initialize:	
  2463                           ; 1 bytes @ 0x0
  2464                           
  2465     0070                     ?_I2C_DO_IDLE:	
  2466                           ; 1 bytes @ 0x0
  2467                           
  2468     0070                     ??_I2C_DO_IDLE:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480     0070                     ?_I2C_DO_TX:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483     0070                     ?_I2C_DO_RX:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486     0070                     ?_I2C_DO_RCEN:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489     0070                     ??_I2C_DO_RCEN:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492     0070                     ?_I2C_DO_TX_EMPTY:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507     0070                     ?_I2C_DO_SEND_RESTART:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ??_I2C_DO_SEND_RESTART:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_I2C_DO_SEND_STOP:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ??_I2C_DO_SEND_STOP:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ?_I2C_DO_RX_ACK:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ??_I2C_DO_RX_ACK:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ?_I2C_DO_RESET:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ??_I2C_DO_RESET:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ?_I2C_MasterIsr:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ?_I2C_MasterClearIrq:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552     0070                     ??_I2C_MasterClearIrq:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555     0070                     ?_I2C_SetCallback:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558     0070                     ?_I2C_MasterFsm:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561     0070                     ?_I2C_MasterIsNack:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564     0070                     ??_I2C_MasterIsNack:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567     0070                     ?_I2C_MasterSendTxData:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570     0070                     ??_I2C_MasterSendTxData:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573     0070                     ?_I2C_MasterGetRxData:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576     0070                     ??_I2C_MasterGetRxData:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579     0070                     ?_I2C_MasterSendAck:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582     0070                     ??_I2C_MasterSendAck:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585     0070                     ?_I2C_MasterStartRx:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588     0070                     ??_I2C_MasterStartRx:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591     0070                     ?_I2C_MasterSetIrq:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594     0070                     ??_I2C_MasterSetIrq:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0070                     ?_I2C_MasterEnableRestart:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600     0070                     ??_I2C_MasterEnableRestart:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603     0070                     ?_I2C_MasterStop:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606     0070                     ??_I2C_MasterStop:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609     0070                     ?_I2C_MasterSendNack:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612     0070                     ??_I2C_MasterSendNack:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615     0070                     ?_TMR1_ISR:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618     0070                     ?_EUSART_Receive_ISR:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621     0070                     ?_EUSART_Transmit_ISR:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624     0070                     ??_EUSART_Transmit_ISR:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639     0070                     ?_EUSART_DefaultErrorHandler:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642     0070                     ?_EUSART_RxDataHandler:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645     0070                     ??_EUSART_RxDataHandler:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648     0070                     ?_TMR1_DefaultInterruptHandler:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651     0070                     ??_TMR1_DefaultInterruptHandler:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654     0070                     ?_TMR1_CallBack:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657     0070                     ??_TMR1_CallBack:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660     0070                     ?_Tick_Init_SES:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663     0070                     ?_ModbusSlave_Init:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666     0070                     ?_rtcc_handle:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669     0070                     ??_rtcc_handle:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672     0070                     ?_PIN_MANAGER_Initialize:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675     0070                     ?_SYSTEM_Initialize:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678     0070                     ?_INTERRUPT_InterruptManager:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681     0070                     ?_TMR1_WriteTimer:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684     0070                     ?_main:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687     0070                     I2C_MasterSendTxData@data:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690     0070                     I2C_SetBuffer@bufferSize:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693     0070                     I2C_SetCallback@cb:	
  2694                           ; 2 bytes @ 0x0
  2695                           
  2696     0070                     TMR1_WriteTimer@timerVal:	
  2697                           ; 2 bytes @ 0x0
  2698                           
  2699                           
  2700                           ; 2 bytes @ 0x0
  2701     0070                     	ds	1
  2702     0071                     ??_I2C_DO_SEND_ADR_WRITE:
  2703     0071                     ??_EUSART_Receive_ISR:	
  2704                           ; 1 bytes @ 0x1
  2705                           
  2706     0071                     ??_EUSART_DefaultErrorHandler:	
  2707                           ; 1 bytes @ 0x1
  2708                           
  2709                           
  2710                           ; 1 bytes @ 0x1
  2711     0071                     	ds	1
  2712     0072                     ??_I2C_SetBuffer:
  2713     0072                     ??_TMR1_ISR:	
  2714                           ; 1 bytes @ 0x2
  2715                           
  2716     0072                     ??_TMR1_WriteTimer:	
  2717                           ; 1 bytes @ 0x2
  2718                           
  2719     0072                     I2C_SetBuffer@buffer:	
  2720                           ; 1 bytes @ 0x2
  2721                           
  2722     0072                     I2C_SetCallback@ptr:	
  2723                           ; 1 bytes @ 0x2
  2724                           
  2725                           
  2726                           ; 1 bytes @ 0x2
  2727     0072                     	ds	1
  2728     0073                     ??_I2C_SetCallback:
  2729     0073                     I2C_SetCallback@idx:	
  2730                           ; 1 bytes @ 0x3
  2731                           
  2732                           
  2733                           ; 1 bytes @ 0x3
  2734     0073                     	ds	1
  2735     0074                     ?_I2C_SetDataCompleteCallback:
  2736     0074                     I2C_SetDataCompleteCallback@cb:	
  2737                           ; 1 bytes @ 0x4
  2738                           
  2739                           
  2740                           ; 2 bytes @ 0x4
  2741     0074                     	ds	2
  2742     0076                     I2C_SetDataCompleteCallback@ptr:
  2743                           
  2744                           ; 1 bytes @ 0x6
  2745     0076                     	ds	1
  2746     0077                     ??_I2C_SetDataCompleteCallback:
  2747     0077                     ?_rd1RegCompleteHandler:	
  2748                           ; 1 bytes @ 0x7
  2749                           
  2750     0077                     ?_rd2RegCompleteHandler:	
  2751                           ; 1 bytes @ 0x7
  2752                           
  2753     0077                     ?_wr1RegCompleteHandler:	
  2754                           ; 1 bytes @ 0x7
  2755                           
  2756     0077                     ?_wr2RegCompleteHandler:	
  2757                           ; 1 bytes @ 0x7
  2758                           
  2759     0077                     ?_rdBlkRegCompleteHandler:	
  2760                           ; 1 bytes @ 0x7
  2761                           
  2762     0077                     ?_I2C_CallbackReturnStop:	
  2763                           ; 1 bytes @ 0x7
  2764                           
  2765     0077                     ?_I2C_CallbackReturnReset:	
  2766                           ; 1 bytes @ 0x7
  2767                           
  2768     0077                     rd1RegCompleteHandler@ptr:	
  2769                           ; 1 bytes @ 0x7
  2770                           
  2771     0077                     rd2RegCompleteHandler@ptr:	
  2772                           ; 1 bytes @ 0x7
  2773                           
  2774     0077                     wr1RegCompleteHandler@ptr:	
  2775                           ; 1 bytes @ 0x7
  2776                           
  2777     0077                     wr2RegCompleteHandler@ptr:	
  2778                           ; 1 bytes @ 0x7
  2779                           
  2780     0077                     rdBlkRegCompleteHandler@ptr:	
  2781                           ; 1 bytes @ 0x7
  2782                           
  2783     0077                     I2C_CallbackReturnStop@funPtr:	
  2784                           ; 1 bytes @ 0x7
  2785                           
  2786     0077                     I2C_CallbackReturnReset@funPtr:	
  2787                           ; 1 bytes @ 0x7
  2788                           
  2789                           
  2790                           ; 1 bytes @ 0x7
  2791     0077                     	ds	1
  2792     0078                     ??_rd1RegCompleteHandler:
  2793     0078                     ??_rd2RegCompleteHandler:	
  2794                           ; 1 bytes @ 0x8
  2795                           
  2796     0078                     ??_wr1RegCompleteHandler:	
  2797                           ; 1 bytes @ 0x8
  2798                           
  2799     0078                     ??_wr2RegCompleteHandler:	
  2800                           ; 1 bytes @ 0x8
  2801                           
  2802     0078                     ??_rdBlkRegCompleteHandler:	
  2803                           ; 1 bytes @ 0x8
  2804                           
  2805     0078                     ??_I2C_DO_TX:	
  2806                           ; 1 bytes @ 0x8
  2807                           
  2808     0078                     ??_I2C_DO_RX:	
  2809                           ; 1 bytes @ 0x8
  2810                           
  2811     0078                     ??_I2C_DO_TX_EMPTY:	
  2812                           ; 1 bytes @ 0x8
  2813                           
  2814     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2815                           ; 1 bytes @ 0x8
  2816                           
  2817     0078                     ??_I2C_CallbackReturnStop:	
  2818                           ; 1 bytes @ 0x8
  2819                           
  2820     0078                     ??_I2C_CallbackReturnReset:	
  2821                           ; 1 bytes @ 0x8
  2822                           
  2823                           
  2824                           ; 1 bytes @ 0x8
  2825     0078                     	ds	2
  2826     007A                     ??_I2C_MasterFsm:
  2827                           
  2828                           ; 1 bytes @ 0xA
  2829     007A                     	ds	2
  2830     007C                     ??_I2C_MasterIsr:
  2831     007C                     ??_INTERRUPT_InterruptManager:	
  2832                           ; 1 bytes @ 0xC
  2833                           
  2834                           
  2835                           	psect	cstackBANK0
  2836     006E                     __pcstackBANK0:	
  2837                           ; 1 bytes @ 0xC
  2838                           
  2839     006E                     ??_I2C_Initialize:
  2840     006E                     ??_OSCILLATOR_Initialize:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843     006E                     ??_WDT_Initialize:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846     006E                     ?_EUSART_SetRxInterruptHandler:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849     006E                     ?_EUSART_SetTxInterruptHandler:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852     006E                     ?_EUSART_SetFramingErrorHandler:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855     006E                     ?_EUSART_SetOverrunErrorHandler:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858     006E                     ?_EUSART_SetErrorHandler:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861     006E                     ?_TMR1_SetInterruptHandler:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864     006E                     ??_ModbusSlave_Init:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867     006E                     ??_PIN_MANAGER_Initialize:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870     006E                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873     006E                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2874                           ; 2 bytes @ 0x0
  2875                           
  2876     006E                     EUSART_SetErrorHandler@interruptHandler:	
  2877                           ; 2 bytes @ 0x0
  2878                           
  2879     006E                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2880                           ; 2 bytes @ 0x0
  2881                           
  2882     006E                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2883                           ; 2 bytes @ 0x0
  2884                           
  2885     006E                     TMR1_SetInterruptHandler@InterruptHandler:	
  2886                           ; 2 bytes @ 0x0
  2887                           
  2888                           
  2889                           ; 2 bytes @ 0x0
  2890     006E                     	ds	2
  2891     0070                     ??_TMR1_Initialize:
  2892     0070                     ??_EUSART_Initialize:	
  2893                           ; 1 bytes @ 0x2
  2894                           
  2895     0070                     ??_EUSART_SetRxInterruptHandler:	
  2896                           ; 1 bytes @ 0x2
  2897                           
  2898     0070                     ??_EUSART_SetTxInterruptHandler:	
  2899                           ; 1 bytes @ 0x2
  2900                           
  2901     0070                     ??_EUSART_SetFramingErrorHandler:	
  2902                           ; 1 bytes @ 0x2
  2903                           
  2904     0070                     ??_EUSART_SetOverrunErrorHandler:	
  2905                           ; 1 bytes @ 0x2
  2906                           
  2907     0070                     ??_EUSART_SetErrorHandler:	
  2908                           ; 1 bytes @ 0x2
  2909                           
  2910     0070                     ??_TMR1_SetInterruptHandler:	
  2911                           ; 1 bytes @ 0x2
  2912                           
  2913     0070                     ??_Tick_Init_SES:	
  2914                           ; 1 bytes @ 0x2
  2915                           
  2916     0070                     ??_SYSTEM_Initialize:	
  2917                           ; 1 bytes @ 0x2
  2918                           
  2919     0070                     ??_main:	
  2920                           ; 1 bytes @ 0x2
  2921                           
  2922                           
  2923                           	psect	maintext
  2924     0405                     __pmaintext:	
  2925                           ; 1 bytes @ 0x2
  2926 ;;
  2927 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2928 ;;
  2929 ;; *************** function _main *****************
  2930 ;; Defined at:
  2931 ;;		line 49 in file "main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : B1F/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2945 ;;      Params:         0       0       0       0       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0       0
  2948 ;;      Totals:         0       0       0       0       0       0       0       0
  2949 ;;Total ram usage:        0 bytes
  2950 ;; Hardware stack levels required when called: 10
  2951 ;; This function calls:
  2952 ;;		_ModbusSlave_Init
  2953 ;;		_SYSTEM_Initialize
  2954 ;;		_Tick_Init_SES
  2955 ;; This function is called by:
  2956 ;;		Startup code after reset
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960     0405                     _main:	
  2961                           ;psect for function _main
  2962                           
  2963     0405                     l3837:	
  2964                           ;incstack = 0
  2965                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2966                           
  2967                           
  2968                           ;main.c: 52:     SYSTEM_Initialize();
  2969     0405  3183  233D  3184   	fcall	_SYSTEM_Initialize
  2970                           
  2971                           ;main.c: 53:     Tick_Init_SES();
  2972     0408  3183  2350  3184   	fcall	_Tick_Init_SES
  2973     040B                     l3839:
  2974                           
  2975                           ;main.c: 54:     ModbusSlave_Init();
  2976     040B  3180  20E1  3184   	fcall	_ModbusSlave_Init
  2977     040E                     l765:	
  2978                           ;main.c: 70:     while (1)
  2979                           
  2980     040E                     l766:	
  2981                           ;main.c: 71:     {;main.c: 73:     }
  2982                           
  2983     040E  2C0E               	goto	l765
  2984     040F  3180  2857         	ljmp	start
  2985     0411                     __end_of_main:
  2986                           
  2987                           	psect	text1
  2988     0350                     __ptext1:	
  2989 ;; *************** function _Tick_Init_SES *****************
  2990 ;; Defined at:
  2991 ;;		line 6 in file "tick.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3005 ;;      Params:         0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 8
  3012 ;; This function calls:
  3013 ;;		_TMR1_SetInterruptHandler
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019     0350                     _Tick_Init_SES:	
  3020                           ;psect for function _Tick_Init_SES
  3021                           
  3022     0350                     l3603:	
  3023                           ;incstack = 0
  3024                           ; Regs used in _Tick_Init_SES: [wreg+status,2+status,0+pclath+cstack]
  3025                           
  3026                           
  3027                           ;tick.c: 8:     device_time = 0;
  3028     0350  3000               	movlw	0
  3029     0351  0020               	movlb	0	; select bank0
  3030     0352  00C0               	movwf	_device_time+3	;volatile
  3031     0353  3000               	movlw	0
  3032     0354  00BF               	movwf	_device_time+2	;volatile
  3033     0355  3000               	movlw	0
  3034     0356  00BE               	movwf	_device_time+1	;volatile
  3035     0357  3000               	movlw	0
  3036     0358  00BD               	movwf	_device_time	;volatile
  3037     0359                     l3605:
  3038                           
  3039                           ;tick.c: 9:     TMR1_SetInterruptHandler(&rtcc_handle);
  3040     0359  301C               	movlw	low _rtcc_handle
  3041     035A  00EE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3042     035B  3004               	movlw	high _rtcc_handle
  3043     035C  00EF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3044     035D  3184  2483  3183   	fcall	_TMR1_SetInterruptHandler
  3045     0360                     l985:
  3046     0360  0008               	return
  3047     0361                     __end_of_Tick_Init_SES:
  3048                           
  3049                           	psect	text2
  3050     033D                     __ptext2:	
  3051 ;; *************** function _SYSTEM_Initialize *****************
  3052 ;; Defined at:
  3053 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, pclath, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3067 ;;      Params:         0       0       0       0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 9
  3074 ;; This function calls:
  3075 ;;		_EUSART_Initialize
  3076 ;;		_I2C_Initialize
  3077 ;;		_OSCILLATOR_Initialize
  3078 ;;		_PIN_MANAGER_Initialize
  3079 ;;		_TMR1_Initialize
  3080 ;;		_WDT_Initialize
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086     033D                     _SYSTEM_Initialize:	
  3087                           ;psect for function _SYSTEM_Initialize
  3088                           
  3089     033D                     l3563:	
  3090                           ;incstack = 0
  3091                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3092                           
  3093                           
  3094                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3095     033D  3184  2426  3183   	fcall	_I2C_Initialize
  3096                           
  3097                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3098     0340  3182  22D7  3183   	fcall	_PIN_MANAGER_Initialize
  3099                           
  3100                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3101     0343  3184  2475  3183   	fcall	_OSCILLATOR_Initialize
  3102                           
  3103                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3104     0346  3184  24C1  3183   	fcall	_WDT_Initialize
  3105                           
  3106                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  3107     0349  3182  22F3  3183   	fcall	_TMR1_Initialize
  3108                           
  3109                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  3110     034C  3181  2175  3183   	fcall	_EUSART_Initialize
  3111     034F                     l163:
  3112     034F  0008               	return
  3113     0350                     __end_of_SYSTEM_Initialize:
  3114                           
  3115                           	psect	text3
  3116     04C1                     __ptext3:	
  3117 ;; *************** function _WDT_Initialize *****************
  3118 ;; Defined at:
  3119 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3133 ;;      Params:         0       0       0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 7
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_SYSTEM_Initialize
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     04C1                     _WDT_Initialize:	
  3148                           ;psect for function _WDT_Initialize
  3149                           
  3150     04C1                     l3387:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _WDT_Initialize: [wreg]
  3153                           
  3154                           
  3155                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  3156     04C1  3016               	movlw	22
  3157     04C2  0021               	movlb	1	; select bank1
  3158     04C3  0097               	movwf	23	;volatile
  3159     04C4                     l169:
  3160     04C4  0008               	return
  3161     04C5                     __end_of_WDT_Initialize:
  3162                           
  3163                           	psect	text4
  3164     02F3                     __ptext4:	
  3165 ;; *************** function _TMR1_Initialize *****************
  3166 ;; Defined at:
  3167 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3181 ;;      Params:         0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 8
  3188 ;; This function calls:
  3189 ;;		_TMR1_SetInterruptHandler
  3190 ;; This function is called by:
  3191 ;;		_SYSTEM_Initialize
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195     02F3                     _TMR1_Initialize:	
  3196                           ;psect for function _TMR1_Initialize
  3197                           
  3198     02F3                     l3389:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3201                           
  3202                           
  3203                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3204     02F3  0020               	movlb	0	; select bank0
  3205     02F4  0199               	clrf	25	;volatile
  3206     02F5                     l3391:
  3207                           
  3208                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3209     02F5  30E0               	movlw	224
  3210     02F6  0097               	movwf	23	;volatile
  3211     02F7                     l3393:
  3212                           
  3213                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3214     02F7  30C0               	movlw	192
  3215     02F8  0096               	movwf	22	;volatile
  3216     02F9                     l3395:
  3217                           
  3218                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3219     02F9  1011               	bcf	17,0	;volatile
  3220     02FA                     l3397:
  3221                           
  3222                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3223     02FA  0817               	movf	23,w	;volatile
  3224     02FB  00CA               	movwf	_timer1ReloadVal+1	;volatile
  3225     02FC  0816               	movf	22,w	;volatile
  3226     02FD  00C9               	movwf	_timer1ReloadVal	;volatile
  3227     02FE                     l3399:
  3228                           
  3229                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3230     02FE  0021               	movlb	1	; select bank1
  3231     02FF  1411               	bsf	17,0	;volatile
  3232     0300                     l3401:
  3233                           
  3234                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3235     0300  30EF               	movlw	low _TMR1_DefaultInterruptHandler
  3236     0301  0020               	movlb	0	; select bank0
  3237     0302  00EE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3238     0303  3004               	movlw	high _TMR1_DefaultInterruptHandler
  3239     0304  00EF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3240     0305  3184  2483  3182   	fcall	_TMR1_SetInterruptHandler
  3241     0308                     l3403:
  3242                           
  3243                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3244     0308  3041               	movlw	65
  3245     0309  0020               	movlb	0	; select bank0
  3246     030A  0098               	movwf	24	;volatile
  3247     030B                     l716:
  3248     030B  0008               	return
  3249     030C                     __end_of_TMR1_Initialize:
  3250                           
  3251                           	psect	text5
  3252     0483                     __ptext5:	
  3253 ;; *************** function _TMR1_SetInterruptHandler *****************
  3254 ;; Defined at:
  3255 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3258 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3270 ;;      Params:         0       2       0       0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0
  3273 ;;      Totals:         0       2       0       0       0       0       0       0
  3274 ;;Total ram usage:        2 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 7
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_TMR1_Initialize
  3281 ;;		_Tick_Init_SES
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285     0483                     _TMR1_SetInterruptHandler:	
  3286                           ;psect for function _TMR1_SetInterruptHandler
  3287                           
  3288     0483                     l3289:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3291                           
  3292                           
  3293                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  3294     0483  0020               	movlb	0	; select bank0
  3295     0484  086F               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3296     0485  00ED               	movwf	_TMR1_InterruptHandler+1
  3297     0486  086E               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3298     0487  00EC               	movwf	_TMR1_InterruptHandler
  3299     0488                     l749:
  3300     0488  0008               	return
  3301     0489                     __end_of_TMR1_SetInterruptHandler:
  3302                           
  3303                           	psect	text6
  3304     02D7                     __ptext6:	
  3305 ;; *************** function _PIN_MANAGER_Initialize *****************
  3306 ;; Defined at:
  3307 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3321 ;;      Params:         0       0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0
  3324 ;;      Totals:         0       0       0       0       0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 7
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_SYSTEM_Initialize
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335     02D7                     _PIN_MANAGER_Initialize:	
  3336                           ;psect for function _PIN_MANAGER_Initialize
  3337                           
  3338     02D7                     l3349:	
  3339                           ;incstack = 0
  3340                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3341                           
  3342                           
  3343                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3344     02D7  0022               	movlb	2	; select bank2
  3345     02D8  0190               	clrf	16	;volatile
  3346                           
  3347                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3348     02D9  018C               	clrf	12	;volatile
  3349                           
  3350                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3351     02DA  018D               	clrf	13	;volatile
  3352     02DB                     l3351:
  3353                           
  3354                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x40;
  3355     02DB  3040               	movlw	64
  3356     02DC  008E               	movwf	14	;volatile
  3357     02DD                     l3353:
  3358                           
  3359                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3360     02DD  3008               	movlw	8
  3361     02DE  0021               	movlb	1	; select bank1
  3362     02DF  0090               	movwf	16	;volatile
  3363     02E0                     l3355:
  3364                           
  3365                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3366     02E0  30FF               	movlw	255
  3367     02E1  008C               	movwf	12	;volatile
  3368     02E2                     l3357:
  3369                           
  3370                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3371     02E2  30FF               	movlw	255
  3372     02E3  008D               	movwf	13	;volatile
  3373     02E4                     l3359:
  3374                           
  3375                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3376     02E4  309C               	movlw	156
  3377     02E5  008E               	movwf	14	;volatile
  3378     02E6                     l3361:
  3379                           
  3380                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3381     02E6  303F               	movlw	63
  3382     02E7  0023               	movlb	3	; select bank3
  3383     02E8  008D               	movwf	13	;volatile
  3384     02E9                     l3363:
  3385                           
  3386                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3387     02E9  3030               	movlw	48
  3388     02EA  008C               	movwf	12	;volatile
  3389     02EB                     l3365:
  3390                           
  3391                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3392     02EB  0024               	movlb	4	; select bank4
  3393     02EC  0190               	clrf	16	;volatile
  3394     02ED                     l3367:
  3395                           
  3396                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3397     02ED  018D               	clrf	13	;volatile
  3398     02EE                     l3369:
  3399                           
  3400                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3401     02EE  0021               	movlb	1	; select bank1
  3402     02EF  1795               	bsf	21,7	;volatile
  3403     02F0                     l3371:
  3404                           
  3405                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3406     02F0  0022               	movlb	2	; select bank2
  3407     02F1  019D               	clrf	29	;volatile
  3408     02F2                     l135:
  3409     02F2  0008               	return
  3410     02F3                     __end_of_PIN_MANAGER_Initialize:
  3411                           
  3412                           	psect	text7
  3413     0475                     __ptext7:	
  3414 ;; *************** function _OSCILLATOR_Initialize *****************
  3415 ;; Defined at:
  3416 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      void 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3430 ;;      Params:         0       0       0       0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 7
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_SYSTEM_Initialize
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444     0475                     _OSCILLATOR_Initialize:	
  3445                           ;psect for function _OSCILLATOR_Initialize
  3446                           
  3447     0475                     l3381:	
  3448                           ;incstack = 0
  3449                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3450                           
  3451                           
  3452                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3453     0475  3070               	movlw	112
  3454     0476  0021               	movlb	1	; select bank1
  3455     0477  0099               	movwf	25	;volatile
  3456     0478                     l3383:
  3457                           
  3458                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3459     0478  0198               	clrf	24	;volatile
  3460     0479                     l3385:
  3461                           
  3462                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3463     0479  0022               	movlb	2	; select bank2
  3464     047A  0196               	clrf	22	;volatile
  3465     047B                     l166:
  3466     047B  0008               	return
  3467     047C                     __end_of_OSCILLATOR_Initialize:
  3468                           
  3469                           	psect	text8
  3470     0426                     __ptext8:	
  3471 ;; *************** function _I2C_Initialize *****************
  3472 ;; Defined at:
  3473 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3487 ;;      Params:         0       0       0       0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 7
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_SYSTEM_Initialize
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501     0426                     _I2C_Initialize:	
  3502                           ;psect for function _I2C_Initialize
  3503                           
  3504     0426                     l3373:	
  3505                           ;incstack = 0
  3506                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  3507                           
  3508                           
  3509                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3510     0426  0024               	movlb	4	; select bank4
  3511     0427  0194               	clrf	20	;volatile
  3512     0428                     l3375:
  3513                           
  3514                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3515     0428  3008               	movlw	8
  3516     0429  0095               	movwf	21	;volatile
  3517     042A                     l3377:
  3518                           
  3519                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3520     042A  0196               	clrf	22	;volatile
  3521                           
  3522                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3523     042B  3013               	movlw	19
  3524     042C  0092               	movwf	18	;volatile
  3525     042D                     l3379:
  3526                           
  3527                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3528     042D  1295               	bcf	21,5	;volatile
  3529     042E                     l278:
  3530     042E  0008               	return
  3531     042F                     __end_of_I2C_Initialize:
  3532                           
  3533                           	psect	text9
  3534     0175                     __ptext9:	
  3535 ;; *************** function _EUSART_Initialize *****************
  3536 ;; Defined at:
  3537 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0, pclath, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3551 ;;      Params:         0       0       0       0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0
  3554 ;;      Totals:         0       0       0       0       0       0       0       0
  3555 ;;Total ram usage:        0 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 8
  3558 ;; This function calls:
  3559 ;;		_EUSART_SetErrorHandler
  3560 ;;		_EUSART_SetFramingErrorHandler
  3561 ;;		_EUSART_SetOverrunErrorHandler
  3562 ;;		_EUSART_SetRxInterruptHandler
  3563 ;;		_EUSART_SetTxInterruptHandler
  3564 ;; This function is called by:
  3565 ;;		_SYSTEM_Initialize
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569     0175                     _EUSART_Initialize:	
  3570                           ;psect for function _EUSART_Initialize
  3571                           
  3572     0175                     l3405:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3575                           
  3576                           
  3577                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3578     0175  0021               	movlb	1	; select bank1
  3579     0176  1291               	bcf	17,5	;volatile
  3580     0177                     l3407:
  3581                           
  3582                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3583     0177  30B7               	movlw	low _EUSART_Receive_ISR
  3584     0178  0020               	movlb	0	; select bank0
  3585     0179  00EE               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3586     017A  3001               	movlw	high _EUSART_Receive_ISR
  3587     017B  00EF               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3588     017C  3184  2438  3181   	fcall	_EUSART_SetRxInterruptHandler
  3589     017F                     l3409:
  3590                           
  3591                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3592     017F  0021               	movlb	1	; select bank1
  3593     0180  1211               	bcf	17,4	;volatile
  3594                           
  3595                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3596     0181  3095               	movlw	low _EUSART_Transmit_ISR
  3597     0182  0020               	movlb	0	; select bank0
  3598     0183  00EE               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3599     0184  3002               	movlw	high _EUSART_Transmit_ISR
  3600     0185  00EF               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3601     0186  3184  242F  3181   	fcall	_EUSART_SetTxInterruptHandler
  3602     0189                     l3411:
  3603                           
  3604                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3605     0189  3008               	movlw	8
  3606     018A  0023               	movlb	3	; select bank3
  3607     018B  009F               	movwf	31	;volatile
  3608     018C                     l3413:
  3609                           
  3610                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3611     018C  3090               	movlw	144
  3612     018D  009D               	movwf	29	;volatile
  3613     018E                     l3415:
  3614                           
  3615                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3616     018E  3024               	movlw	36
  3617     018F  009E               	movwf	30	;volatile
  3618     0190                     l3417:
  3619                           
  3620                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  3621     0190  30CF               	movlw	207
  3622     0191  009B               	movwf	27	;volatile
  3623     0192                     l3419:
  3624                           
  3625                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3626     0192  019C               	clrf	28	;volatile
  3627     0193                     l3421:
  3628                           
  3629                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3630     0193  30F0               	movlw	low _EUSART_DefaultFramingErrorHandler
  3631     0194  0020               	movlb	0	; select bank0
  3632     0195  00EE               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3633     0196  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  3634     0197  00EF               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3635     0198  3184  244A  3181   	fcall	_EUSART_SetFramingErrorHandler
  3636     019B                     l3423:
  3637                           
  3638                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3639     019B  30D1               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3640     019C  0020               	movlb	0	; select bank0
  3641     019D  00EE               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3642     019E  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3643     019F  00EF               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3644     01A0  3184  2441  3181   	fcall	_EUSART_SetOverrunErrorHandler
  3645     01A3                     l3425:
  3646                           
  3647                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3648     01A3  30D5               	movlw	low _EUSART_DefaultErrorHandler
  3649     01A4  0020               	movlb	0	; select bank0
  3650     01A5  00EE               	movwf	EUSART_SetErrorHandler@interruptHandler
  3651     01A6  3004               	movlw	high _EUSART_DefaultErrorHandler
  3652     01A7  00EF               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3653     01A8  3184  2453  3181   	fcall	_EUSART_SetErrorHandler
  3654                           
  3655                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3656     01AB  0020               	movlb	0	; select bank0
  3657     01AC  01D3               	clrf	_eusartRxLastError	;volatile
  3658                           
  3659                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3660     01AD  01D7               	clrf	_eusartTxHead	;volatile
  3661                           
  3662                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3663     01AE  01D6               	clrf	_eusartTxTail	;volatile
  3664     01AF                     l3427:
  3665                           
  3666                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3667     01AF  3010               	movlw	16
  3668     01B0  00D5               	movwf	_eusartTxBufferRemaining	;volatile
  3669     01B1                     l3429:
  3670                           
  3671                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3672     01B1  01D4               	clrf	_eusartRxHead	;volatile
  3673     01B2                     l3431:
  3674                           
  3675                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3676     01B2  01FD               	clrf	_eusartRxTail	;volatile
  3677     01B3                     l3433:
  3678                           
  3679                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3680     01B3  01FC               	clrf	_eusartRxCount	;volatile
  3681     01B4                     l3435:
  3682                           
  3683                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3684     01B4  0021               	movlb	1	; select bank1
  3685     01B5  1691               	bsf	17,5	;volatile
  3686     01B6                     l618:
  3687     01B6  0008               	return
  3688     01B7                     __end_of_EUSART_Initialize:
  3689                           
  3690                           	psect	text10
  3691     042F                     __ptext10:	
  3692 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3693 ;; Defined at:
  3694 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3697 ;;		 -> EUSART_Transmit_ISR(1), 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3709 ;;      Params:         0       2       0       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0
  3712 ;;      Totals:         0       2       0       0       0       0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 7
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_EUSART_Initialize
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     042F                     _EUSART_SetTxInterruptHandler:	
  3724                           ;psect for function _EUSART_SetTxInterruptHandler
  3725                           
  3726     042F                     l3249:	
  3727                           ;incstack = 0
  3728                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3729                           
  3730                           
  3731                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3732     042F  0020               	movlb	0	; select bank0
  3733     0430  086F               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3734     0431  0021               	movlb	1	; select bank1
  3735     0432  00DD               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  3736     0433  0020               	movlb	0	; select bank0
  3737     0434  086E               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3738     0435  0021               	movlb	1	; select bank1
  3739     0436  00DC               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  3740     0437                     l684:
  3741     0437  0008               	return
  3742     0438                     __end_of_EUSART_SetTxInterruptHandler:
  3743                           
  3744                           	psect	text11
  3745     0438                     __ptext11:	
  3746 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3747 ;; Defined at:
  3748 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3751 ;;		 -> EUSART_Receive_ISR(1), 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3763 ;;      Params:         0       2       0       0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0
  3766 ;;      Totals:         0       2       0       0       0       0       0       0
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 7
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_EUSART_Initialize
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777     0438                     _EUSART_SetRxInterruptHandler:	
  3778                           ;psect for function _EUSART_SetRxInterruptHandler
  3779                           
  3780     0438                     l3247:	
  3781                           ;incstack = 0
  3782                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3783                           
  3784                           
  3785                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3786     0438  0020               	movlb	0	; select bank0
  3787     0439  086F               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3788     043A  0021               	movlb	1	; select bank1
  3789     043B  00DB               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  3790     043C  0020               	movlb	0	; select bank0
  3791     043D  086E               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3792     043E  0021               	movlb	1	; select bank1
  3793     043F  00DA               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  3794     0440                     l687:
  3795     0440  0008               	return
  3796     0441                     __end_of_EUSART_SetRxInterruptHandler:
  3797                           
  3798                           	psect	text12
  3799     0441                     __ptext12:	
  3800 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3801 ;; Defined at:
  3802 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3805 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3817 ;;      Params:         0       2       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0
  3820 ;;      Totals:         0       2       0       0       0       0       0       0
  3821 ;;Total ram usage:        2 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 7
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_EUSART_Initialize
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831     0441                     _EUSART_SetOverrunErrorHandler:	
  3832                           ;psect for function _EUSART_SetOverrunErrorHandler
  3833                           
  3834     0441                     l3253:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3837                           
  3838                           
  3839                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3840     0441  0020               	movlb	0	; select bank0
  3841     0442  086F               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3842     0443  0021               	movlb	1	; select bank1
  3843     0444  00D7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  3844     0445  0020               	movlb	0	; select bank0
  3845     0446  086E               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3846     0447  0021               	movlb	1	; select bank1
  3847     0448  00D6               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  3848     0449                     l678:
  3849     0449  0008               	return
  3850     044A                     __end_of_EUSART_SetOverrunErrorHandler:
  3851                           
  3852                           	psect	text13
  3853     044A                     __ptext13:	
  3854 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3855 ;; Defined at:
  3856 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3859 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3871 ;;      Params:         0       2       0       0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0
  3874 ;;      Totals:         0       2       0       0       0       0       0       0
  3875 ;;Total ram usage:        2 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 7
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_EUSART_Initialize
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885     044A                     _EUSART_SetFramingErrorHandler:	
  3886                           ;psect for function _EUSART_SetFramingErrorHandler
  3887                           
  3888     044A                     l3251:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3891                           
  3892                           
  3893                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3894     044A  0020               	movlb	0	; select bank0
  3895     044B  086F               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3896     044C  0021               	movlb	1	; select bank1
  3897     044D  00D9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  3898     044E  0020               	movlb	0	; select bank0
  3899     044F  086E               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3900     0450  0021               	movlb	1	; select bank1
  3901     0451  00D8               	movwf	_EUSART_FramingErrorHandler^(0+128)
  3902     0452                     l675:
  3903     0452  0008               	return
  3904     0453                     __end_of_EUSART_SetFramingErrorHandler:
  3905                           
  3906                           	psect	text14
  3907     0453                     __ptext14:	
  3908 ;; *************** function _EUSART_SetErrorHandler *****************
  3909 ;; Defined at:
  3910 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3913 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3925 ;;      Params:         0       2       0       0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0
  3928 ;;      Totals:         0       2       0       0       0       0       0       0
  3929 ;;Total ram usage:        2 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 7
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_EUSART_Initialize
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939     0453                     _EUSART_SetErrorHandler:	
  3940                           ;psect for function _EUSART_SetErrorHandler
  3941                           
  3942     0453                     l3255:	
  3943                           ;incstack = 0
  3944                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3945                           
  3946                           
  3947                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3948     0453  0020               	movlb	0	; select bank0
  3949     0454  086F               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3950     0455  0021               	movlb	1	; select bank1
  3951     0456  00D5               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  3952     0457  0020               	movlb	0	; select bank0
  3953     0458  086E               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3954     0459  0021               	movlb	1	; select bank1
  3955     045A  00D4               	movwf	_EUSART_ErrorHandler^(0+128)
  3956     045B                     l681:
  3957     045B  0008               	return
  3958     045C                     __end_of_EUSART_SetErrorHandler:
  3959                           
  3960                           	psect	text15
  3961     00E1                     __ptext15:	
  3962 ;; *************** function _ModbusSlave_Init *****************
  3963 ;; Defined at:
  3964 ;;		line 289 in file "Mobbus_Slave.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3978 ;;      Params:         0       0       0       0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 7
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_main
  3989 ;;		_Task_MB
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993     00E1                     _ModbusSlave_Init:	
  3994                           ;psect for function _ModbusSlave_Init
  3995                           
  3996     00E1                     l3607:	
  3997                           ;incstack = 0
  3998                           ; Regs used in _ModbusSlave_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
  3999                           
  4000                           
  4001                           ;Mobbus_Slave.c: 291:     MB_UID = SW_Ad;
  4002     00E1  0020               	movlb	0	; select bank0
  4003     00E2  085C               	movf	_SW_Ad,w
  4004     00E3  0021               	movlb	1	; select bank1
  4005     00E4  00DE               	movwf	_MB_UID^(0+128)
  4006                           
  4007                           ;Mobbus_Slave.c: 292:     MB_Register[0] = Temperature;
  4008     00E5  0020               	movlb	0	; select bank0
  4009     00E6  085B               	movf	_Temperature+1,w
  4010     00E7  0021               	movlb	1	; select bank1
  4011     00E8  00D1               	movwf	(_MB_Register+1)^(0+128)
  4012     00E9  0020               	movlb	0	; select bank0
  4013     00EA  085A               	movf	_Temperature,w
  4014     00EB  0021               	movlb	1	; select bank1
  4015     00EC  00D0               	movwf	_MB_Register^(0+128)
  4016                           
  4017                           ;Mobbus_Slave.c: 293:     MB_Register[1] = Humidity;
  4018     00ED  0020               	movlb	0	; select bank0
  4019     00EE  0859               	movf	_Humidity+1,w
  4020     00EF  0021               	movlb	1	; select bank1
  4021     00F0  00D3               	movwf	((_MB_Register+1)^(0+128)+2)
  4022     00F1  0020               	movlb	0	; select bank0
  4023     00F2  0858               	movf	_Humidity,w
  4024     00F3  0021               	movlb	1	; select bank1
  4025     00F4  00D2               	movwf	(_MB_Register^(0+128)+2)
  4026     00F5                     l3609:
  4027                           
  4028                           ;Mobbus_Slave.c: 294:     SES_Modbus.u8id = (uint8_t) MB_UID;
  4029     00F5  30D4               	movlw	212
  4030     00F6  0086               	movwf	6
  4031     00F7  3020               	movlw	32
  4032     00F8  0087               	movwf	7
  4033     00F9  085E               	movf	_MB_UID^(0+128),w
  4034     00FA  3FC0               	movwi [0]fsr1
  4035     00FB                     l3611:
  4036                           
  4037                           ;Mobbus_Slave.c: 295:     SES_Modbus.u8txenpin = RS485;
  4038     00FB  30D5               	movlw	213
  4039     00FC  0086               	movwf	6
  4040     00FD  3020               	movlw	32
  4041     00FE  0087               	movwf	7
  4042     00FF  3002               	movlw	2
  4043     0100  0081               	movwf	1
  4044     0101                     l3613:
  4045                           
  4046                           ;Mobbus_Slave.c: 296:     SES_Modbus.u16timeOut = 1000;
  4047     0101  30DC               	movlw	220
  4048     0102  0086               	movwf	6
  4049     0103  3021               	movlw	33
  4050     0104  0087               	movwf	7
  4051     0105  30E8               	movlw	232
  4052     0106  3FC0               	movwi [0]fsr1
  4053     0107  3003               	movlw	3
  4054     0108  3FC1               	movwi [1]fsr1
  4055     0109                     l3615:
  4056                           
  4057                           ;Mobbus_Slave.c: 297:     SES_Modbus.u32overTime = 0;
  4058     0109  30E6               	movlw	230
  4059     010A  0086               	movwf	6
  4060     010B  3021               	movlw	33
  4061     010C  0087               	movwf	7
  4062     010D  3000               	movlw	0
  4063     010E  3FC0               	movwi [0]fsr1
  4064     010F  3FC1               	movwi [1]fsr1
  4065     0110  3FC2               	movwi [2]fsr1
  4066     0111  3FC3               	movwi [3]fsr1
  4067     0112                     l3617:
  4068                           
  4069                           ;Mobbus_Slave.c: 301:     SES_Modbus.u8lastRec = SES_Modbus.u8BufferSize = 0;
  4070     0112  30D2               	movlw	210
  4071     0113  0086               	movwf	6
  4072     0114  3021               	movlw	33
  4073     0115  0087               	movwf	7
  4074     0116  0181               	clrf	1
  4075     0117  30D3               	movlw	211
  4076     0118  0086               	movwf	6
  4077     0119  3021               	movlw	33
  4078     011A  0087               	movwf	7
  4079     011B  0181               	clrf	1
  4080     011C                     l3619:
  4081                           
  4082                           ;Mobbus_Slave.c: 302:     SES_Modbus.u16InCnt = SES_Modbus.u16OutCnt = SES_Modbus.u16err
      +                          Cnt = 0;
  4083     011C  30DA               	movlw	218
  4084     011D  0086               	movwf	6
  4085     011E  3021               	movlw	33
  4086     011F  0087               	movwf	7
  4087     0120  3000               	movlw	0
  4088     0121  3FC0               	movwi [0]fsr1
  4089     0122  3FC1               	movwi [1]fsr1
  4090     0123  30D8               	movlw	216
  4091     0124  0086               	movwf	6
  4092     0125  3021               	movlw	33
  4093     0126  0087               	movwf	7
  4094     0127  3000               	movlw	0
  4095     0128  3FC0               	movwi [0]fsr1
  4096     0129  3FC1               	movwi [1]fsr1
  4097     012A  30D6               	movlw	214
  4098     012B  0086               	movwf	6
  4099     012C  3021               	movlw	33
  4100     012D  0087               	movwf	7
  4101     012E  3000               	movlw	0
  4102     012F  3FC0               	movwi [0]fsr1
  4103     0130  3FC1               	movwi [1]fsr1
  4104     0131                     l971:
  4105     0131  0008               	return
  4106     0132                     __end_of_ModbusSlave_Init:
  4107                           
  4108                           	psect	intentry
  4109     0004                     __pintentry:	
  4110 ;; *************** function _INTERRUPT_InterruptManager *****************
  4111 ;; Defined at:
  4112 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4126 ;;      Params:         0       0       0       0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 6
  4133 ;; This function calls:
  4134 ;;		NULL
  4135 ;;		_EUSART_Receive_ISR
  4136 ;;		_EUSART_Transmit_ISR
  4137 ;;		_I2C_MasterIsr
  4138 ;;		_TMR1_ISR
  4139 ;; This function is called by:
  4140 ;;		Interrupt level 1
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144     0004                     _INTERRUPT_InterruptManager:
  4145                           
  4146                           ;incstack = 0
  4147     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4148                           
  4149                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4150     0005  3180               	pagesel	$
  4151     0006                     i1l3811:
  4152                           
  4153                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4154     0006  1F0B               	btfss	11,6	;volatile
  4155     0007  2809               	goto	u148_21
  4156     0008  280A               	goto	u148_20
  4157     0009                     u148_21:
  4158     0009  2855               	goto	i1l543
  4159     000A                     u148_20:
  4160     000A                     i1l3813:
  4161                           
  4162                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4163     000A  0021               	movlb	1	; select bank1
  4164     000B  1E11               	btfss	17,4	;volatile
  4165     000C  280E               	goto	u149_21
  4166     000D  280F               	goto	u149_20
  4167     000E                     u149_21:
  4168     000E  281B               	goto	i1l532
  4169     000F                     u149_20:
  4170     000F                     i1l3815:
  4171     000F  0020               	movlb	0	; select bank0
  4172     0010  1E11               	btfss	17,4	;volatile
  4173     0011  2813               	goto	u150_21
  4174     0012  2814               	goto	u150_20
  4175     0013                     u150_21:
  4176     0013  281B               	goto	i1l532
  4177     0014                     u150_20:
  4178     0014                     i1l3817:
  4179                           
  4180                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4181     0014  0021               	movlb	1	; select bank1
  4182     0015  085D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  4183     0016  008A               	movwf	10
  4184     0017  085C               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  4185     0018  000A               	callw
  4186     0019  3180               	pagesel	$
  4187                           
  4188                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4189     001A  2855               	goto	i1l543
  4190     001B                     i1l532:	
  4191                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4192                           
  4193     001B  0021               	movlb	1	; select bank1
  4194     001C  1E91               	btfss	17,5	;volatile
  4195     001D  281F               	goto	u151_21
  4196     001E  2820               	goto	u151_20
  4197     001F                     u151_21:
  4198     001F  282C               	goto	i1l534
  4199     0020                     u151_20:
  4200     0020                     i1l3819:
  4201     0020  0020               	movlb	0	; select bank0
  4202     0021  1E91               	btfss	17,5	;volatile
  4203     0022  2824               	goto	u152_21
  4204     0023  2825               	goto	u152_20
  4205     0024                     u152_21:
  4206     0024  282C               	goto	i1l534
  4207     0025                     u152_20:
  4208     0025                     i1l3821:
  4209                           
  4210                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4211     0025  0021               	movlb	1	; select bank1
  4212     0026  085B               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  4213     0027  008A               	movwf	10
  4214     0028  085A               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  4215     0029  000A               	callw
  4216     002A  3180               	pagesel	$
  4217                           
  4218                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4219     002B  2855               	goto	i1l543
  4220     002C                     i1l534:	
  4221                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  4222                           
  4223     002C  0021               	movlb	1	; select bank1
  4224     002D  1D92               	btfss	18,3	;volatile
  4225     002E  2830               	goto	u153_21
  4226     002F  2831               	goto	u153_20
  4227     0030                     u153_21:
  4228     0030  283C               	goto	i1l536
  4229     0031                     u153_20:
  4230     0031                     i1l3823:
  4231     0031  0020               	movlb	0	; select bank0
  4232     0032  1D92               	btfss	18,3	;volatile
  4233     0033  2835               	goto	u154_21
  4234     0034  2836               	goto	u154_20
  4235     0035                     u154_21:
  4236     0035  283C               	goto	i1l536
  4237     0036                     u154_20:
  4238     0036                     i1l3825:
  4239                           
  4240                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  4241     0036  084C               	movf	_MSSP_InterruptHandler+1,w
  4242     0037  008A               	movwf	10
  4243     0038  084B               	movf	_MSSP_InterruptHandler,w
  4244     0039  000A               	callw
  4245     003A  3180               	pagesel	$
  4246                           
  4247                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  4248     003B  2855               	goto	i1l543
  4249     003C                     i1l536:	
  4250                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  4251                           
  4252     003C  0021               	movlb	1	; select bank1
  4253     003D  1D91               	btfss	17,3	;volatile
  4254     003E  2840               	goto	u155_21
  4255     003F  2841               	goto	u155_20
  4256     0040                     u155_21:
  4257     0040  2847               	goto	i1l538
  4258     0041                     u155_20:
  4259     0041                     i1l3827:
  4260     0041  0020               	movlb	0	; select bank0
  4261     0042  1D91               	btfss	17,3	;volatile
  4262     0043  2845               	goto	u156_21
  4263     0044  2846               	goto	u156_20
  4264     0045                     u156_21:
  4265     0045  2847               	goto	i1l538
  4266     0046                     u156_20:
  4267     0046  2836               	goto	i1l3825
  4268     0047                     i1l538:	
  4269                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  4270                           
  4271     0047  0021               	movlb	1	; select bank1
  4272     0048  1C11               	btfss	17,0	;volatile
  4273     0049  284B               	goto	u157_21
  4274     004A  284C               	goto	u157_20
  4275     004B                     u157_21:
  4276     004B  2855               	goto	i1l537
  4277     004C                     u157_20:
  4278     004C                     i1l3831:
  4279     004C  0020               	movlb	0	; select bank0
  4280     004D  1C11               	btfss	17,0	;volatile
  4281     004E  2850               	goto	u158_21
  4282     004F  2851               	goto	u158_20
  4283     0050                     u158_21:
  4284     0050  2855               	goto	i1l537
  4285     0051                     u158_20:
  4286     0051                     i1l3833:
  4287                           
  4288                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
  4289     0051  3183  23D3  3180   	fcall	_TMR1_ISR
  4290                           
  4291                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  4292     0054  2855               	goto	i1l543
  4293     0055                     i1l537:
  4294     0055                     i1l543:
  4295     0055  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4296     0056  0009               	retfie
  4297     0057                     __end_of_INTERRUPT_InterruptManager:
  4298                           
  4299                           	psect	text17
  4300     03D3                     __ptext17:	
  4301 ;; *************** function _TMR1_ISR *****************
  4302 ;; Defined at:
  4303 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4317 ;;      Params:         0       0       0       0       0       0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0
  4320 ;;      Totals:         0       0       0       0       0       0       0       0
  4321 ;;Total ram usage:        0 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 2
  4324 ;; This function calls:
  4325 ;;		_TMR1_CallBack
  4326 ;;		_TMR1_WriteTimer
  4327 ;; This function is called by:
  4328 ;;		_INTERRUPT_InterruptManager
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332     03D3                     _TMR1_ISR:	
  4333                           ;psect for function _TMR1_ISR
  4334                           
  4335     03D3                     i1l3567:	
  4336                           ;incstack = 0
  4337                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4338                           
  4339                           
  4340                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  4341     03D3  0020               	movlb	0	; select bank0
  4342     03D4  1011               	bcf	17,0	;volatile
  4343     03D5                     i1l3569:
  4344                           
  4345                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  4346     03D5  084A               	movf	_timer1ReloadVal+1,w	;volatile
  4347     03D6  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4348     03D7  0849               	movf	_timer1ReloadVal,w	;volatile
  4349     03D8  00F0               	movwf	TMR1_WriteTimer@timerVal
  4350     03D9  3183  2361  3183   	fcall	_TMR1_WriteTimer
  4351                           
  4352                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  4353     03DC  3183  23E0  3183   	fcall	_TMR1_CallBack
  4354     03DF                     i1l742:
  4355     03DF  0008               	return
  4356     03E0                     __end_of_TMR1_ISR:
  4357                           
  4358                           	psect	text18
  4359     0361                     __ptext18:	
  4360 ;; *************** function _TMR1_WriteTimer *****************
  4361 ;; Defined at:
  4362 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  timerVal        2    0[COMMON] unsigned short 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4376 ;;      Params:         2       0       0       0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0       0
  4379 ;;      Totals:         2       0       0       0       0       0       0       0
  4380 ;;Total ram usage:        2 bytes
  4381 ;; Hardware stack levels used: 1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_TMR1_ISR
  4386 ;;		_TMR1_Reload
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390     0361                     _TMR1_WriteTimer:	
  4391                           ;psect for function _TMR1_WriteTimer
  4392                           
  4393     0361                     i1l3451:	
  4394                           ;incstack = 0
  4395                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4396                           
  4397                           
  4398                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4399     0361  0020               	movlb	0	; select bank0
  4400     0362  1D18               	btfss	24,2	;volatile
  4401     0363  2B65               	goto	u114_21
  4402     0364  2B66               	goto	u114_20
  4403     0365                     u114_21:
  4404     0365  2B6D               	goto	i1l3461
  4405     0366                     u114_20:
  4406     0366                     i1l3453:
  4407                           
  4408                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4409     0366  1018               	bcf	24,0	;volatile
  4410     0367                     i1l3455:
  4411                           
  4412                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4413     0367  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4414     0368  0097               	movwf	23	;volatile
  4415     0369                     i1l3457:
  4416                           
  4417                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4418     0369  0870               	movf	TMR1_WriteTimer@timerVal,w
  4419     036A  0096               	movwf	22	;volatile
  4420     036B                     i1l3459:
  4421                           
  4422                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4423     036B  1418               	bsf	24,0	;volatile
  4424                           
  4425                           ;mcc_generated_files/tmr1.c: 133:     }
  4426     036C  2B71               	goto	i1l730
  4427     036D                     i1l3461:
  4428                           
  4429                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4430     036D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4431     036E  0097               	movwf	23	;volatile
  4432     036F                     i1l3463:
  4433                           
  4434                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4435     036F  0870               	movf	TMR1_WriteTimer@timerVal,w
  4436     0370  0096               	movwf	22	;volatile
  4437     0371                     i1l730:
  4438     0371  0008               	return
  4439     0372                     __end_of_TMR1_WriteTimer:
  4440                           
  4441                           	psect	text19
  4442     03E0                     __ptext19:	
  4443 ;; *************** function _TMR1_CallBack *****************
  4444 ;; Defined at:
  4445 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4459 ;;      Params:         0       0       0       0       0       0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0
  4462 ;;      Totals:         0       0       0       0       0       0       0       0
  4463 ;;Total ram usage:        0 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 1
  4466 ;; This function calls:
  4467 ;;		NULL
  4468 ;;		_TMR1_DefaultInterruptHandler
  4469 ;;		_rtcc_handle
  4470 ;; This function is called by:
  4471 ;;		_TMR1_ISR
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475     03E0                     _TMR1_CallBack:	
  4476                           ;psect for function _TMR1_CallBack
  4477                           
  4478     03E0                     i1l3465:	
  4479                           ;incstack = 0
  4480                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4481                           
  4482                           
  4483                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  4484     03E0  0020               	movlb	0	; select bank0
  4485     03E1  086C               	movf	_TMR1_InterruptHandler,w
  4486     03E2  046D               	iorwf	_TMR1_InterruptHandler+1,w
  4487     03E3  1903               	btfsc	3,2
  4488     03E4  2BE6               	goto	u115_21
  4489     03E5  2BE7               	goto	u115_20
  4490     03E6                     u115_21:
  4491     03E6  2BEC               	goto	i1l746
  4492     03E7                     u115_20:
  4493     03E7                     i1l3467:
  4494                           
  4495                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  4496     03E7  086D               	movf	_TMR1_InterruptHandler+1,w
  4497     03E8  008A               	movwf	10
  4498     03E9  086C               	movf	_TMR1_InterruptHandler,w
  4499     03EA  000A               	callw
  4500     03EB  3183               	pagesel	$
  4501     03EC                     i1l746:
  4502     03EC  0008               	return
  4503     03ED                     __end_of_TMR1_CallBack:
  4504                           
  4505                           	psect	text20
  4506     04EF                     __ptext20:	
  4507 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4508 ;; Defined at:
  4509 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		None
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4523 ;;      Params:         0       0       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0
  4526 ;;      Totals:         0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_TMR1_Initialize
  4533 ;;		_TMR1_CallBack
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537     04EF                     _TMR1_DefaultInterruptHandler:	
  4538                           ;psect for function _TMR1_DefaultInterruptHandler
  4539                           
  4540     04EF                     i1l752:	
  4541                           ;incstack = 0
  4542                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4543                           
  4544     04EF  0008               	return
  4545     04F0                     __end_of_TMR1_DefaultInterruptHandler:
  4546                           
  4547                           	psect	text21
  4548     041C                     __ptext21:	
  4549 ;; *************** function _rtcc_handle *****************
  4550 ;; Defined at:
  4551 ;;		line 12 in file "tick.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4565 ;;      Params:         0       0       0       0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_Tick_Init_SES
  4575 ;;		_TMR1_CallBack
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579     041C                     _rtcc_handle:	
  4580                           ;psect for function _rtcc_handle
  4581                           
  4582     041C                     i1l3327:	
  4583                           ;incstack = 0
  4584                           ; Regs used in _rtcc_handle: [wreg]
  4585                           
  4586                           
  4587                           ;tick.c: 14:     device_time++;
  4588     041C  3001               	movlw	1
  4589     041D  0020               	movlb	0	; select bank0
  4590     041E  07BD               	addwf	_device_time,f	;volatile
  4591     041F  3000               	movlw	0
  4592     0420  3DBE               	addwfc	_device_time+1,f	;volatile
  4593     0421  3000               	movlw	0
  4594     0422  3DBF               	addwfc	_device_time+2,f	;volatile
  4595     0423  3000               	movlw	0
  4596     0424  3DC0               	addwfc	_device_time+3,f	;volatile
  4597     0425                     i1l988:
  4598     0425  0008               	return
  4599     0426                     __end_of_rtcc_handle:
  4600                           
  4601                           	psect	text22
  4602     04C5                     __ptext22:	
  4603 ;; *************** function _I2C_MasterIsr *****************
  4604 ;; Defined at:
  4605 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4619 ;;      Params:         0       0       0       0       0       0       0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0
  4622 ;;      Totals:         0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 5
  4626 ;; This function calls:
  4627 ;;		_I2C_MasterFsm
  4628 ;; This function is called by:
  4629 ;;		_I2C_Open
  4630 ;;		_INTERRUPT_InterruptManager
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     04C5                     _I2C_MasterIsr:	
  4635                           ;psect for function _I2C_MasterIsr
  4636                           
  4637     04C5                     i1l3565:	
  4638                           ;incstack = 0
  4639                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4640                           
  4641                           
  4642                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  4643     04C5  3182  2221  3184   	fcall	_I2C_MasterFsm
  4644     04C8                     i1l331:
  4645     04C8  0008               	return
  4646     04C9                     __end_of_I2C_MasterIsr:
  4647                           
  4648                           	psect	text23
  4649     0221                     __ptext23:	
  4650 ;; *************** function _I2C_MasterFsm *****************
  4651 ;; Defined at:
  4652 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4666 ;;      Params:         0       0       0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0
  4668 ;;      Temps:          2       0       0       0       0       0       0       0
  4669 ;;      Totals:         2       0       0       0       0       0       0       0
  4670 ;;Total ram usage:        2 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 4
  4673 ;; This function calls:
  4674 ;;		_I2C_DO_ADDRESS_NACK
  4675 ;;		_I2C_DO_IDLE
  4676 ;;		_I2C_DO_RCEN
  4677 ;;		_I2C_DO_RESET
  4678 ;;		_I2C_DO_RX
  4679 ;;		_I2C_DO_RX_ACK
  4680 ;;		_I2C_DO_RX_NACK_RESTART
  4681 ;;		_I2C_DO_RX_NACK_STOP
  4682 ;;		_I2C_DO_SEND_ADR_READ
  4683 ;;		_I2C_DO_SEND_ADR_WRITE
  4684 ;;		_I2C_DO_SEND_RESTART
  4685 ;;		_I2C_DO_SEND_RESTART_READ
  4686 ;;		_I2C_DO_SEND_RESTART_WRITE
  4687 ;;		_I2C_DO_SEND_STOP
  4688 ;;		_I2C_DO_TX
  4689 ;;		_I2C_DO_TX_EMPTY
  4690 ;;		_I2C_MasterClearIrq
  4691 ;;		_I2C_MasterIsNack
  4692 ;; This function is called by:
  4693 ;;		_I2C_MasterIsr
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697     0221                     _I2C_MasterFsm:	
  4698                           ;psect for function _I2C_MasterFsm
  4699                           
  4700     0221                     i1l3437:	
  4701                           ;incstack = 0
  4702                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4703                           
  4704                           
  4705                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  4706     0221  3184  24D9  3182   	fcall	_I2C_MasterClearIrq
  4707     0224                     i1l3439:
  4708                           
  4709                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4710     0224  0020               	movlb	0	; select bank0
  4711     0225  1C3C               	btfss	_I2C_Status+28,0
  4712     0226  2A28               	goto	u112_21
  4713     0227  2A29               	goto	u112_20
  4714     0228                     u112_21:
  4715     0228  2A34               	goto	i1l3445
  4716     0229                     u112_20:
  4717     0229                     i1l3441:
  4718     0229  3184  2489  3182   	fcall	_I2C_MasterIsNack
  4719     022C  3A00               	xorlw	0
  4720     022D  1903               	skipnz
  4721     022E  2A30               	goto	u113_21
  4722     022F  2A31               	goto	u113_20
  4723     0230                     u113_21:
  4724     0230  2A34               	goto	i1l3445
  4725     0231                     u113_20:
  4726     0231                     i1l3443:
  4727                           
  4728                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4729     0231  300F               	movlw	15
  4730     0232  0020               	movlb	0	; select bank0
  4731     0233  00BA               	movwf	_I2C_Status+26
  4732     0234                     i1l3445:
  4733                           
  4734                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  4735     0234  0020               	movlb	0	; select bank0
  4736     0235  083A               	movf	_I2C_Status+26,w
  4737     0236  00FA               	movwf	??_I2C_MasterFsm
  4738     0237  01FB               	clrf	??_I2C_MasterFsm+1
  4739     0238  35FA               	lslf	??_I2C_MasterFsm,f
  4740     0239  0DFB               	rlf	??_I2C_MasterFsm+1,f
  4741     023A  30B7               	movlw	low _i2c_fsmStateTable
  4742     023B  077A               	addwf	??_I2C_MasterFsm,w
  4743     023C  0084               	movwf	4
  4744     023D  3002               	movlw	high _i2c_fsmStateTable
  4745     023E  3D7B               	addwfc	??_I2C_MasterFsm+1,w
  4746     023F  3880               	iorlw	128
  4747     0240  0085               	movwf	5
  4748     0241  3F01               	moviw [1]fsr0
  4749     0242  008A               	movwf	10
  4750     0243  3F00               	moviw [0]fsr0
  4751     0244  000A               	callw
  4752     0245  3182               	pagesel	$
  4753     0246  0020               	movlb	0	; select bank0
  4754     0247  00BA               	movwf	_I2C_Status+26
  4755     0248                     i1l335:
  4756     0248  0008               	return
  4757     0249                     __end_of_I2C_MasterFsm:
  4758                           
  4759                           	psect	text24
  4760     04D9                     __ptext24:	
  4761 ;; *************** function _I2C_MasterClearIrq *****************
  4762 ;; Defined at:
  4763 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		None
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4777 ;;      Params:         0       0       0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0
  4780 ;;      Totals:         0       0       0       0       0       0       0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_I2C_MasterFsm
  4787 ;;		_I2C_Open
  4788 ;;		_I2C_Close
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792     04D9                     _I2C_MasterClearIrq:	
  4793                           ;psect for function _I2C_MasterClearIrq
  4794                           
  4795     04D9                     i1l3091:	
  4796                           ;incstack = 0
  4797                           ; Regs used in _I2C_MasterClearIrq: []
  4798                           
  4799                           
  4800                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  4801     04D9  0020               	movlb	0	; select bank0
  4802     04DA  1191               	bcf	17,3	;volatile
  4803     04DB                     i1l498:
  4804     04DB  0008               	return
  4805     04DC                     __end_of_I2C_MasterClearIrq:
  4806                           
  4807                           	psect	text25
  4808     0249                     __ptext25:	
  4809 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4810 ;; Defined at:
  4811 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      enum E3112
  4818 ;; Registers used:
  4819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4825 ;;      Params:         0       0       0       0       0       0       0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0
  4827 ;;      Temps:          2       0       0       0       0       0       0       0
  4828 ;;      Totals:         2       0       0       0       0       0       0       0
  4829 ;;Total ram usage:        2 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 3
  4832 ;; This function calls:
  4833 ;;		NULL
  4834 ;;		_I2C_CallbackReturnReset
  4835 ;;		_I2C_CallbackReturnStop
  4836 ;;		_I2C_DO_SEND_RESTART
  4837 ;;		_I2C_DO_SEND_STOP
  4838 ;;		_rd1RegCompleteHandler
  4839 ;;		_rd2RegCompleteHandler
  4840 ;;		_rdBlkRegCompleteHandler
  4841 ;;		_wr1RegCompleteHandler
  4842 ;;		_wr2RegCompleteHandler
  4843 ;; This function is called by:
  4844 ;;		_I2C_MasterFsm
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848     0249                     _I2C_DO_ADDRESS_NACK:	
  4849                           ;psect for function _I2C_DO_ADDRESS_NACK
  4850                           
  4851     0249                     i1l3227:	
  4852                           ;incstack = 0
  4853                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4854                           
  4855                           
  4856                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  4857     0249  0020               	movlb	0	; select bank0
  4858     024A  103C               	bcf	_I2C_Status+28,0
  4859     024B                     i1l3229:
  4860                           
  4861                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  4862     024B  3002               	movlw	2
  4863     024C  00BB               	movwf	_I2C_Status+27
  4864                           
  4865                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4866     024D  2A56               	goto	i1l3241
  4867     024E                     i1l3231:
  4868                           
  4869                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  4870     024E  3184  24A8  3182   	fcall	_I2C_DO_SEND_RESTART
  4871     0251  2A70               	goto	i1l426
  4872     0252                     i1l3235:
  4873                           
  4874                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  4875     0252  3184  24A3  3182   	fcall	_I2C_DO_SEND_STOP
  4876     0255  2A70               	goto	i1l426
  4877     0256                     i1l3241:
  4878     0256  082E               	movf	low ((_I2C_Status| 0+14)),w
  4879     0257  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  4880     0258  3004               	movlw	4
  4881     0259  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  4882     025A  0086               	movwf	6
  4883     025B  0187               	clrf	7
  4884     025C  3F41               	moviw [1]fsr1
  4885     025D  008A               	movwf	10
  4886     025E  3F40               	moviw [0]fsr1
  4887     025F  000A               	callw
  4888     0260  3182               	pagesel	$
  4889     0261  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
  4890     0262  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
  4891                           
  4892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4893                           ; Switch size 1, requested type "simple"
  4894                           ; Number of cases is 1, Range of values is 0 to 0
  4895                           ; switch strategies available:
  4896                           ; Name         Instructions Cycles
  4897                           ; simple_byte            4     3 (average)
  4898                           ; direct_byte            8     6 (fixed)
  4899                           ; jumptable            260     6 (fixed)
  4900                           ;	Chosen strategy is simple_byte
  4901     0263  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  4902     0264  3A00               	xorlw	0	; case 0
  4903     0265  1903               	skipnz
  4904     0266  2A68               	goto	i1l3967
  4905     0267  2A52               	goto	i1l3235
  4906     0268                     i1l3967:
  4907                           
  4908                           ; Switch size 1, requested type "simple"
  4909                           ; Number of cases is 2, Range of values is 2 to 3
  4910                           ; switch strategies available:
  4911                           ; Name         Instructions Cycles
  4912                           ; simple_byte            7     4 (average)
  4913                           ; direct_byte           13     9 (fixed)
  4914                           ; jumptable            263     9 (fixed)
  4915                           ;	Chosen strategy is simple_byte
  4916     0268  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
  4917     0269  3A02               	xorlw	2	; case 2
  4918     026A  1903               	skipnz
  4919     026B  2A4E               	goto	i1l3231
  4920     026C  3A01               	xorlw	1	; case 3
  4921     026D  1903               	skipnz
  4922     026E  2A4E               	goto	i1l3231
  4923     026F  2A52               	goto	i1l3235
  4924     0270                     i1l426:
  4925     0270  0008               	return
  4926     0271                     __end_of_I2C_DO_ADDRESS_NACK:
  4927                           
  4928                           	psect	text26
  4929     048F                     __ptext26:	
  4930 ;; *************** function _I2C_DO_RESET *****************
  4931 ;; Defined at:
  4932 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      enum E3112
  4939 ;; Registers used:
  4940 ;;		wreg, status,2
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4946 ;;      Params:         0       0       0       0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0
  4949 ;;      Totals:         0       0       0       0       0       0       0       0
  4950 ;;Total ram usage:        0 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_I2C_MasterFsm
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959     048F                     _I2C_DO_RESET:	
  4960                           ;psect for function _I2C_DO_RESET
  4961                           
  4962     048F                     i1l3219:	
  4963                           ;incstack = 0
  4964                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  4965                           
  4966                           
  4967                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  4968     048F  0020               	movlb	0	; select bank0
  4969     0490  10BC               	bcf	_I2C_Status+28,1
  4970     0491                     i1l3221:
  4971                           
  4972                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  4973     0491  01BB               	clrf	_I2C_Status+27
  4974     0492                     i1l3223:
  4975                           
  4976                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  4977     0492  300E               	movlw	14
  4978     0493                     i1l420:
  4979     0493  0008               	return
  4980     0494                     __end_of_I2C_DO_RESET:
  4981                           
  4982                           	psect	text27
  4983     0494                     __ptext27:	
  4984 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4985 ;; Defined at:
  4986 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      enum E3112
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5000 ;;      Params:         0       0       0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 1
  5007 ;; This function calls:
  5008 ;;		_I2C_MasterSendNack
  5009 ;; This function is called by:
  5010 ;;		_I2C_DO_RX
  5011 ;;		_I2C_MasterFsm
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015     0494                     _I2C_DO_RX_NACK_RESTART:	
  5016                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5017                           
  5018     0494                     i1l2937:	
  5019                           ;incstack = 0
  5020                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5021                           
  5022                           
  5023                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  5024     0494  3184  24CD  3184   	fcall	_I2C_MasterSendNack
  5025     0497                     i1l2939:
  5026                           
  5027                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  5028     0497  3009               	movlw	9
  5029     0498                     i1l417:
  5030     0498  0008               	return
  5031     0499                     __end_of_I2C_DO_RX_NACK_RESTART:
  5032                           
  5033                           	psect	text28
  5034     0499                     __ptext28:	
  5035 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5036 ;; Defined at:
  5037 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      enum E3112
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5051 ;;      Params:         0       0       0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 1
  5058 ;; This function calls:
  5059 ;;		_I2C_MasterSendNack
  5060 ;; This function is called by:
  5061 ;;		_I2C_DO_RX
  5062 ;;		_I2C_MasterFsm
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066     0499                     _I2C_DO_RX_NACK_STOP:	
  5067                           ;psect for function _I2C_DO_RX_NACK_STOP
  5068                           
  5069     0499                     i1l2943:	
  5070                           ;incstack = 0
  5071                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5072                           
  5073                           
  5074                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  5075     0499  3184  24CD  3184   	fcall	_I2C_MasterSendNack
  5076     049C                     i1l2945:
  5077                           
  5078                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  5079     049C  300A               	movlw	10
  5080     049D                     i1l414:
  5081     049D  0008               	return
  5082     049E                     __end_of_I2C_DO_RX_NACK_STOP:
  5083                           
  5084                           	psect	text29
  5085     049E                     __ptext29:	
  5086 ;; *************** function _I2C_DO_RX_ACK *****************
  5087 ;; Defined at:
  5088 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      enum E3112
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5102 ;;      Params:         0       0       0       0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 1
  5109 ;; This function calls:
  5110 ;;		_I2C_MasterSendAck
  5111 ;; This function is called by:
  5112 ;;		_I2C_MasterFsm
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116     049E                     _I2C_DO_RX_ACK:	
  5117                           ;psect for function _I2C_DO_RX_ACK
  5118                           
  5119     049E                     i1l3213:	
  5120                           ;incstack = 0
  5121                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5122                           
  5123                           
  5124                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  5125     049E  3184  24C9  3184   	fcall	_I2C_MasterSendAck
  5126     04A1                     i1l3215:
  5127                           
  5128                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  5129     04A1  3005               	movlw	5
  5130     04A2                     i1l411:
  5131     04A2  0008               	return
  5132     04A3                     __end_of_I2C_DO_RX_ACK:
  5133                           
  5134                           	psect	text30
  5135     04A3                     __ptext30:	
  5136 ;; *************** function _I2C_DO_SEND_STOP *****************
  5137 ;; Defined at:
  5138 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      enum E3112
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, pclath, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5152 ;;      Params:         0       0       0       0       0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 1
  5159 ;; This function calls:
  5160 ;;		_I2C_MasterStop
  5161 ;; This function is called by:
  5162 ;;		_I2C_DO_TX
  5163 ;;		_I2C_DO_TX_EMPTY
  5164 ;;		_I2C_DO_ADDRESS_NACK
  5165 ;;		_I2C_MasterFsm
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     04A3                     _I2C_DO_SEND_STOP:	
  5170                           ;psect for function _I2C_DO_SEND_STOP
  5171                           
  5172     04A3                     i1l2925:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5175                           
  5176                           
  5177                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  5178     04A3  3184  24E5  3184   	fcall	_I2C_MasterStop
  5179     04A6                     i1l2927:
  5180                           
  5181                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  5182     04A6  3000               	movlw	0
  5183     04A7                     i1l408:
  5184     04A7  0008               	return
  5185     04A8                     __end_of_I2C_DO_SEND_STOP:
  5186                           
  5187                           	psect	text31
  5188     04A8                     __ptext31:	
  5189 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5190 ;; Defined at:
  5191 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      enum E3112
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0, pclath, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5205 ;;      Params:         0       0       0       0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0
  5208 ;;      Totals:         0       0       0       0       0       0       0       0
  5209 ;;Total ram usage:        0 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 1
  5212 ;; This function calls:
  5213 ;;		_I2C_MasterEnableRestart
  5214 ;; This function is called by:
  5215 ;;		_I2C_DO_TX_EMPTY
  5216 ;;		_I2C_DO_ADDRESS_NACK
  5217 ;;		_I2C_MasterFsm
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221     04A8                     _I2C_DO_SEND_RESTART:	
  5222                           ;psect for function _I2C_DO_SEND_RESTART
  5223                           
  5224     04A8                     i1l2951:	
  5225                           ;incstack = 0
  5226                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5227                           
  5228                           
  5229                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  5230     04A8  3184  24E8  3184   	fcall	_I2C_MasterEnableRestart
  5231     04AB                     i1l2953:
  5232                           
  5233                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  5234     04AB  3001               	movlw	1
  5235     04AC                     i1l405:
  5236     04AC  0008               	return
  5237     04AD                     __end_of_I2C_DO_SEND_RESTART:
  5238                           
  5239                           	psect	text32
  5240     04AD                     __ptext32:	
  5241 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5242 ;; Defined at:
  5243 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      enum E3112
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5257 ;;      Params:         0       0       0       0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 1
  5264 ;; This function calls:
  5265 ;;		_I2C_MasterEnableRestart
  5266 ;; This function is called by:
  5267 ;;		_I2C_DO_TX
  5268 ;;		_I2C_MasterFsm
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272     04AD                     _I2C_DO_SEND_RESTART_WRITE:	
  5273                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5274                           
  5275     04AD                     i1l2919:	
  5276                           ;incstack = 0
  5277                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5278                           
  5279                           
  5280                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  5281     04AD  3184  24E8  3184   	fcall	_I2C_MasterEnableRestart
  5282     04B0                     i1l2921:
  5283                           
  5284                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  5285     04B0  3002               	movlw	2
  5286     04B1                     i1l402:
  5287     04B1  0008               	return
  5288     04B2                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5289                           
  5290                           	psect	text33
  5291     04B2                     __ptext33:	
  5292 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5293 ;; Defined at:
  5294 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      enum E3112
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0, pclath, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5308 ;;      Params:         0       0       0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 1
  5315 ;; This function calls:
  5316 ;;		_I2C_MasterEnableRestart
  5317 ;; This function is called by:
  5318 ;;		_I2C_DO_TX
  5319 ;;		_I2C_MasterFsm
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323     04B2                     _I2C_DO_SEND_RESTART_READ:	
  5324                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5325                           
  5326     04B2                     i1l2913:	
  5327                           ;incstack = 0
  5328                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5329                           
  5330                           
  5331                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  5332     04B2  3184  24E8  3184   	fcall	_I2C_MasterEnableRestart
  5333     04B5                     i1l2915:
  5334                           
  5335                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  5336     04B5  3001               	movlw	1
  5337     04B6                     i1l399:
  5338     04B6  0008               	return
  5339     04B7                     __end_of_I2C_DO_SEND_RESTART_READ:
  5340                           
  5341                           	psect	text34
  5342     047C                     __ptext34:	
  5343 ;; *************** function _I2C_DO_RCEN *****************
  5344 ;; Defined at:
  5345 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      enum E3112
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0, pclath, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5359 ;;      Params:         0       0       0       0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used: 1
  5365 ;; Hardware stack levels required when called: 1
  5366 ;; This function calls:
  5367 ;;		_I2C_MasterStartRx
  5368 ;; This function is called by:
  5369 ;;		_I2C_MasterFsm
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373     047C                     _I2C_DO_RCEN:	
  5374                           ;psect for function _I2C_DO_RCEN
  5375                           
  5376     047C                     i1l3181:	
  5377                           ;incstack = 0
  5378                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5379                           
  5380                           
  5381                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  5382     047C  0020               	movlb	0	; select bank0
  5383     047D  103C               	bcf	_I2C_Status+28,0
  5384     047E                     i1l3183:
  5385                           
  5386                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  5387     047E  3184  24E2  3184   	fcall	_I2C_MasterStartRx
  5388     0481                     i1l3185:
  5389                           
  5390                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  5391     0481  3004               	movlw	4
  5392     0482                     i1l375:
  5393     0482  0008               	return
  5394     0483                     __end_of_I2C_DO_RCEN:
  5395                           
  5396                           	psect	text35
  5397     0132                     __ptext35:	
  5398 ;; *************** function _I2C_DO_RX *****************
  5399 ;; Defined at:
  5400 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      enum E3112
  5407 ;; Registers used:
  5408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5414 ;;      Params:         0       0       0       0       0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0
  5416 ;;      Temps:          2       0       0       0       0       0       0       0
  5417 ;;      Totals:         2       0       0       0       0       0       0       0
  5418 ;;Total ram usage:        2 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 3
  5421 ;; This function calls:
  5422 ;;		NULL
  5423 ;;		_I2C_CallbackReturnReset
  5424 ;;		_I2C_CallbackReturnStop
  5425 ;;		_I2C_DO_RX_NACK_RESTART
  5426 ;;		_I2C_DO_RX_NACK_STOP
  5427 ;;		_I2C_MasterGetRxData
  5428 ;;		_I2C_MasterSendAck
  5429 ;;		_rd1RegCompleteHandler
  5430 ;;		_rd2RegCompleteHandler
  5431 ;;		_rdBlkRegCompleteHandler
  5432 ;;		_wr1RegCompleteHandler
  5433 ;;		_wr2RegCompleteHandler
  5434 ;; This function is called by:
  5435 ;;		_I2C_MasterFsm
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439     0132                     _I2C_DO_RX:	
  5440                           ;psect for function _I2C_DO_RX
  5441                           
  5442     0132                     i1l3151:	
  5443                           ;incstack = 0
  5444                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5445                           
  5446                           
  5447                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5448     0132  0020               	movlb	0	; select bank0
  5449     0133  0837               	movf	low ((_I2C_Status| 0+23)),w
  5450     0134  0086               	movwf	6
  5451     0135  0187               	clrf	7
  5452     0136  3184  24DF  3181   	fcall	_I2C_MasterGetRxData
  5453     0139  0081               	movwf	1
  5454     013A                     i1l3153:
  5455     013A  3001               	movlw	1
  5456     013B  00F8               	movwf	??_I2C_DO_RX
  5457     013C  0878               	movf	??_I2C_DO_RX,w
  5458     013D  0020               	movlb	0	; select bank0
  5459     013E  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  5460     013F                     i1l3155:
  5461                           
  5462                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  5463     013F  3001               	movlw	1
  5464     0140  02B8               	subwf	_I2C_Status+24,f
  5465     0141  3000               	movlw	0
  5466     0142  3BB9               	subwfb	_I2C_Status+25,f
  5467     0143  0838               	movf	_I2C_Status+24,w
  5468     0144  0439               	iorwf	_I2C_Status+25,w
  5469     0145  1903               	btfsc	3,2
  5470     0146  2948               	goto	u99_21
  5471     0147  2949               	goto	u99_20
  5472     0148                     u99_21:
  5473     0148  294E               	goto	i1l363
  5474     0149                     u99_20:
  5475     0149                     i1l3157:
  5476                           
  5477                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  5478     0149  3184  24C9  3181   	fcall	_I2C_MasterSendAck
  5479     014C                     i1l3159:
  5480                           
  5481                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  5482     014C  3005               	movlw	5
  5483     014D  2974               	goto	i1l364
  5484     014E                     i1l363:	
  5485                           ;mcc_generated_files/i2c_master.c: 388:     else
  5486                           
  5487                           
  5488                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  5489     014E  15BC               	bsf	_I2C_Status+28,3
  5490                           
  5491                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5492     014F  2958               	goto	i1l3175
  5493     0150                     i1l3165:
  5494                           
  5495                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  5496     0150  3184  2494  3181   	fcall	_I2C_DO_RX_NACK_RESTART
  5497     0153  2974               	goto	i1l364
  5498     0154                     i1l3169:
  5499                           
  5500                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  5501     0154  3184  2499  3181   	fcall	_I2C_DO_RX_NACK_STOP
  5502     0157  2974               	goto	i1l364
  5503     0158                     i1l3175:
  5504     0158  082C               	movf	low ((_I2C_Status| 0+12)),w
  5505     0159  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5506     015A  0821               	movf	_I2C_Status+1,w
  5507     015B  008A               	movwf	10
  5508     015C  0820               	movf	_I2C_Status,w
  5509     015D  000A               	callw
  5510     015E  3181               	pagesel	$
  5511     015F  00F8               	movwf	??_I2C_DO_RX
  5512     0160  01F9               	clrf	??_I2C_DO_RX+1
  5513                           
  5514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5515                           ; Switch size 1, requested type "simple"
  5516                           ; Number of cases is 1, Range of values is 0 to 0
  5517                           ; switch strategies available:
  5518                           ; Name         Instructions Cycles
  5519                           ; simple_byte            4     3 (average)
  5520                           ; direct_byte            8     6 (fixed)
  5521                           ; jumptable            260     6 (fixed)
  5522                           ;	Chosen strategy is simple_byte
  5523     0161  0879               	movf	??_I2C_DO_RX+1,w
  5524     0162  3A00               	xorlw	0	; case 0
  5525     0163  1903               	skipnz
  5526     0164  2966               	goto	i1l3969
  5527     0165  2954               	goto	i1l3169
  5528     0166                     i1l3969:
  5529                           
  5530                           ; Switch size 1, requested type "simple"
  5531                           ; Number of cases is 4, Range of values is 1 to 4
  5532                           ; switch strategies available:
  5533                           ; Name         Instructions Cycles
  5534                           ; simple_byte           13     7 (average)
  5535                           ; direct_byte           17     9 (fixed)
  5536                           ; jumptable            263     9 (fixed)
  5537                           ;	Chosen strategy is simple_byte
  5538     0166  0878               	movf	??_I2C_DO_RX,w
  5539     0167  3A01               	xorlw	1	; case 1
  5540     0168  1903               	skipnz
  5541     0169  2954               	goto	i1l3169
  5542     016A  3A03               	xorlw	3	; case 2
  5543     016B  1903               	skipnz
  5544     016C  2950               	goto	i1l3165
  5545     016D  3A01               	xorlw	1	; case 3
  5546     016E  1903               	skipnz
  5547     016F  2950               	goto	i1l3165
  5548     0170  3A07               	xorlw	7	; case 4
  5549     0171  1903               	skipnz
  5550     0172  2954               	goto	i1l3169
  5551     0173  2954               	goto	i1l3169
  5552     0174                     i1l364:
  5553     0174  0008               	return
  5554     0175                     __end_of_I2C_DO_RX:
  5555                           
  5556                           	psect	text36
  5557     008E                     __ptext36:	
  5558 ;; *************** function _I2C_DO_TX *****************
  5559 ;; Defined at:
  5560 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      enum E3112
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5574 ;;      Params:         0       0       0       0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0
  5576 ;;      Temps:          2       0       0       0       0       0       0       0
  5577 ;;      Totals:         2       0       0       0       0       0       0       0
  5578 ;;Total ram usage:        2 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 3
  5581 ;; This function calls:
  5582 ;;		NULL
  5583 ;;		_I2C_CallbackReturnReset
  5584 ;;		_I2C_CallbackReturnStop
  5585 ;;		_I2C_DO_SEND_RESTART_READ
  5586 ;;		_I2C_DO_SEND_RESTART_WRITE
  5587 ;;		_I2C_DO_SEND_STOP
  5588 ;;		_I2C_MasterIsNack
  5589 ;;		_I2C_MasterSendTxData
  5590 ;;		_rd1RegCompleteHandler
  5591 ;;		_rd2RegCompleteHandler
  5592 ;;		_rdBlkRegCompleteHandler
  5593 ;;		_wr1RegCompleteHandler
  5594 ;;		_wr2RegCompleteHandler
  5595 ;; This function is called by:
  5596 ;;		_I2C_MasterFsm
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600     008E                     _I2C_DO_TX:	
  5601                           ;psect for function _I2C_DO_TX
  5602                           
  5603     008E                     i1l3117:	
  5604                           ;incstack = 0
  5605                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5606                           
  5607                           
  5608                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  5609     008E  3184  2489  3180   	fcall	_I2C_MasterIsNack
  5610     0091  3A00               	xorlw	0
  5611     0092  1903               	skipnz
  5612     0093  2895               	goto	u97_21
  5613     0094  2896               	goto	u97_20
  5614     0095                     u97_21:
  5615     0095  28C4               	goto	i1l347
  5616     0096                     u97_20:
  5617     0096  28A3               	goto	i1l3135
  5618     0097                     i1l3121:
  5619                           
  5620                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5621     0097  3184  24B2  3180   	fcall	_I2C_DO_SEND_RESTART_READ
  5622     009A  28E0               	goto	i1l350
  5623     009B                     i1l3125:
  5624                           
  5625                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5626     009B  3184  24AD  3180   	fcall	_I2C_DO_SEND_RESTART_WRITE
  5627     009E  28E0               	goto	i1l350
  5628     009F                     i1l3129:
  5629                           
  5630                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  5631     009F  3184  24A3  3180   	fcall	_I2C_DO_SEND_STOP
  5632     00A2  28E0               	goto	i1l350
  5633     00A3                     i1l3135:
  5634     00A3  0020               	movlb	0	; select bank0
  5635     00A4  082F               	movf	low ((_I2C_Status| 0+15)),w
  5636     00A5  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5637     00A6  3006               	movlw	6
  5638     00A7  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5639     00A8  0086               	movwf	6
  5640     00A9  0187               	clrf	7
  5641     00AA  3F41               	moviw [1]fsr1
  5642     00AB  008A               	movwf	10
  5643     00AC  3F40               	moviw [0]fsr1
  5644     00AD  000A               	callw
  5645     00AE  3180               	pagesel	$
  5646     00AF  00F8               	movwf	??_I2C_DO_TX
  5647     00B0  01F9               	clrf	??_I2C_DO_TX+1
  5648                           
  5649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5650                           ; Switch size 1, requested type "simple"
  5651                           ; Number of cases is 1, Range of values is 0 to 0
  5652                           ; switch strategies available:
  5653                           ; Name         Instructions Cycles
  5654                           ; simple_byte            4     3 (average)
  5655                           ; direct_byte            8     6 (fixed)
  5656                           ; jumptable            260     6 (fixed)
  5657                           ;	Chosen strategy is simple_byte
  5658     00B1  0879               	movf	??_I2C_DO_TX+1,w
  5659     00B2  3A00               	xorlw	0	; case 0
  5660     00B3  1903               	skipnz
  5661     00B4  28B6               	goto	i1l3971
  5662     00B5  289F               	goto	i1l3129
  5663     00B6                     i1l3971:
  5664                           
  5665                           ; Switch size 1, requested type "simple"
  5666                           ; Number of cases is 4, Range of values is 1 to 4
  5667                           ; switch strategies available:
  5668                           ; Name         Instructions Cycles
  5669                           ; simple_byte           13     7 (average)
  5670                           ; direct_byte           17     9 (fixed)
  5671                           ; jumptable            263     9 (fixed)
  5672                           ;	Chosen strategy is simple_byte
  5673     00B6  0878               	movf	??_I2C_DO_TX,w
  5674     00B7  3A01               	xorlw	1	; case 1
  5675     00B8  1903               	skipnz
  5676     00B9  289F               	goto	i1l3129
  5677     00BA  3A03               	xorlw	3	; case 2
  5678     00BB  1903               	skipnz
  5679     00BC  2897               	goto	i1l3121
  5680     00BD  3A01               	xorlw	1	; case 3
  5681     00BE  1903               	skipnz
  5682     00BF  289B               	goto	i1l3125
  5683     00C0  3A07               	xorlw	7	; case 4
  5684     00C1  1903               	skipnz
  5685     00C2  289F               	goto	i1l3129
  5686     00C3  289F               	goto	i1l3129
  5687     00C4                     i1l347:	
  5688                           ;mcc_generated_files/i2c_master.c: 372:     else
  5689                           
  5690                           
  5691                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  5692     00C4  0020               	movlb	0	; select bank0
  5693     00C5  103C               	bcf	_I2C_Status+28,0
  5694     00C6                     i1l3137:
  5695                           
  5696                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5697     00C6  3017               	movlw	23
  5698     00C7  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5699     00C8  0086               	movwf	6
  5700     00C9  0187               	clrf	7
  5701     00CA  3F40               	moviw [0]fsr1
  5702     00CB  0084               	movwf	4
  5703     00CC  0185               	clrf	5
  5704     00CD  0A81               	incf	1,f
  5705     00CE  0800               	movf	0,w
  5706     00CF  3184  24BC  3180   	fcall	_I2C_MasterSendTxData
  5707     00D2                     i1l3139:
  5708                           
  5709                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5710     00D2  3001               	movlw	1
  5711     00D3  0020               	movlb	0	; select bank0
  5712     00D4  02B8               	subwf	_I2C_Status+24,f
  5713     00D5  3000               	movlw	0
  5714     00D6  3BB9               	subwfb	_I2C_Status+25,f
  5715     00D7  0838               	movf	_I2C_Status+24,w
  5716     00D8  0439               	iorwf	_I2C_Status+25,w
  5717     00D9  1D03               	btfss	3,2
  5718     00DA  28DC               	goto	u98_21
  5719     00DB  28DD               	goto	u98_20
  5720     00DC                     u98_21:
  5721     00DC  28DF               	goto	i1l3143
  5722     00DD                     u98_20:
  5723     00DD                     i1l3141:
  5724     00DD  3006               	movlw	6
  5725     00DE  28E0               	goto	i1l350
  5726     00DF                     i1l3143:
  5727     00DF  3003               	movlw	3
  5728     00E0                     i1l350:
  5729     00E0  0008               	return
  5730     00E1                     __end_of_I2C_DO_TX:
  5731                           
  5732                           	psect	text37
  5733     046D                     __ptext37:	
  5734 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5735 ;; Defined at:
  5736 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      enum E3112
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, pclath, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5750 ;;      Params:         0       0       0       0       0       0       0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used: 1
  5756 ;; Hardware stack levels required when called: 1
  5757 ;; This function calls:
  5758 ;;		_I2C_MasterSendTxData
  5759 ;; This function is called by:
  5760 ;;		_I2C_MasterFsm
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764     046D                     _I2C_DO_SEND_ADR_WRITE:	
  5765                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  5766                           
  5767     046D                     i1l3109:	
  5768                           ;incstack = 0
  5769                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5770                           
  5771                           
  5772                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  5773     046D  0020               	movlb	0	; select bank0
  5774     046E  143C               	bsf	_I2C_Status+28,0
  5775     046F                     i1l3111:
  5776                           
  5777                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  5778     046F  3536               	lslf	_I2C_Status+22,w
  5779     0470  3184  24BC  3184   	fcall	_I2C_MasterSendTxData
  5780     0473                     i1l3113:
  5781                           
  5782                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  5783     0473  3003               	movlw	3
  5784     0474                     i1l344:
  5785     0474  0008               	return
  5786     0475                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5787                           
  5788                           	psect	text38
  5789     045C                     __ptext38:	
  5790 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5791 ;; Defined at:
  5792 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      enum E3112
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, pclath, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5806 ;;      Params:         0       0       0       0       0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used: 1
  5812 ;; Hardware stack levels required when called: 1
  5813 ;; This function calls:
  5814 ;;		_I2C_MasterSendTxData
  5815 ;; This function is called by:
  5816 ;;		_I2C_MasterFsm
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820     045C                     _I2C_DO_SEND_ADR_READ:	
  5821                           ;psect for function _I2C_DO_SEND_ADR_READ
  5822                           
  5823     045C                     i1l3101:	
  5824                           ;incstack = 0
  5825                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  5826                           
  5827                           
  5828                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  5829     045C  0020               	movlb	0	; select bank0
  5830     045D  143C               	bsf	_I2C_Status+28,0
  5831     045E                     i1l3103:
  5832                           
  5833                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  5834     045E  1403               	setc
  5835     045F  0D36               	rlf	_I2C_Status+22,w
  5836     0460  3184  24BC  3184   	fcall	_I2C_MasterSendTxData
  5837     0463                     i1l3105:
  5838                           
  5839                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  5840     0463  3005               	movlw	5
  5841     0464                     i1l341:
  5842     0464  0008               	return
  5843     0465                     __end_of_I2C_DO_SEND_ADR_READ:
  5844                           
  5845                           	psect	text39
  5846     04B7                     __ptext39:	
  5847 ;; *************** function _I2C_DO_IDLE *****************
  5848 ;; Defined at:
  5849 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      enum E3112
  5856 ;; Registers used:
  5857 ;;		wreg, status,2
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5863 ;;      Params:         0       0       0       0       0       0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_I2C_MasterFsm
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876     04B7                     _I2C_DO_IDLE:	
  5877                           ;psect for function _I2C_DO_IDLE
  5878                           
  5879     04B7                     i1l3093:	
  5880                           ;incstack = 0
  5881                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  5882                           
  5883                           
  5884                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  5885     04B7  0020               	movlb	0	; select bank0
  5886     04B8  10BC               	bcf	_I2C_Status+28,1
  5887     04B9                     i1l3095:
  5888                           
  5889                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  5890     04B9  01BB               	clrf	_I2C_Status+27
  5891     04BA                     i1l3097:
  5892                           
  5893                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  5894     04BA  300E               	movlw	14
  5895     04BB                     i1l338:
  5896     04BB  0008               	return
  5897     04BC                     __end_of_I2C_DO_IDLE:
  5898                           
  5899                           	psect	text40
  5900     01F4                     __ptext40:	
  5901 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5902 ;; Defined at:
  5903 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      enum E3112
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5917 ;;      Params:         0       0       0       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0
  5919 ;;      Temps:          2       0       0       0       0       0       0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 3
  5924 ;; This function calls:
  5925 ;;		NULL
  5926 ;;		_I2C_CallbackReturnReset
  5927 ;;		_I2C_CallbackReturnStop
  5928 ;;		_I2C_DO_SEND_RESTART
  5929 ;;		_I2C_DO_SEND_STOP
  5930 ;;		_I2C_MasterSetIrq
  5931 ;;		_rd1RegCompleteHandler
  5932 ;;		_rd2RegCompleteHandler
  5933 ;;		_rdBlkRegCompleteHandler
  5934 ;;		_wr1RegCompleteHandler
  5935 ;;		_wr2RegCompleteHandler
  5936 ;; This function is called by:
  5937 ;;		_I2C_MasterFsm
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941     01F4                     _I2C_DO_TX_EMPTY:	
  5942                           ;psect for function _I2C_DO_TX_EMPTY
  5943                           
  5944     01F4                     i1l3189:	
  5945                           ;incstack = 0
  5946                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5947                           
  5948                           
  5949                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  5950     01F4  0020               	movlb	0	; select bank0
  5951     01F5  15BC               	bsf	_I2C_Status+28,3
  5952                           
  5953                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5954     01F6  2A04               	goto	i1l3207
  5955     01F7                     i1l3191:
  5956                           
  5957                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  5958     01F7  3184  24A8  3181   	fcall	_I2C_DO_SEND_RESTART
  5959     01FA  2A20               	goto	i1l381
  5960     01FB                     i1l3195:
  5961                           
  5962                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  5963     01FB  3184  24DC  3181   	fcall	_I2C_MasterSetIrq
  5964     01FE                     i1l3197:
  5965                           
  5966                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  5967     01FE  3003               	movlw	3
  5968     01FF  2A20               	goto	i1l381
  5969     0200                     i1l3201:
  5970                           
  5971                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  5972     0200  3184  24A3  3181   	fcall	_I2C_DO_SEND_STOP
  5973     0203  2A20               	goto	i1l381
  5974     0204                     i1l3207:
  5975     0204  082C               	movf	low ((_I2C_Status| 0+12)),w
  5976     0205  00F7               	movwf	I2C_CallbackReturnReset@funPtr
  5977     0206  0821               	movf	_I2C_Status+1,w
  5978     0207  008A               	movwf	10
  5979     0208  0820               	movf	_I2C_Status,w
  5980     0209  000A               	callw
  5981     020A  3181               	pagesel	$
  5982     020B  00F8               	movwf	??_I2C_DO_TX_EMPTY
  5983     020C  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
  5984                           
  5985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5986                           ; Switch size 1, requested type "simple"
  5987                           ; Number of cases is 1, Range of values is 0 to 0
  5988                           ; switch strategies available:
  5989                           ; Name         Instructions Cycles
  5990                           ; simple_byte            4     3 (average)
  5991                           ; direct_byte            8     6 (fixed)
  5992                           ; jumptable            260     6 (fixed)
  5993                           ;	Chosen strategy is simple_byte
  5994     020D  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
  5995     020E  3A00               	xorlw	0	; case 0
  5996     020F  1903               	skipnz
  5997     0210  2A12               	goto	i1l3973
  5998     0211  2A00               	goto	i1l3201
  5999     0212                     i1l3973:
  6000                           
  6001                           ; Switch size 1, requested type "simple"
  6002                           ; Number of cases is 4, Range of values is 1 to 4
  6003                           ; switch strategies available:
  6004                           ; Name         Instructions Cycles
  6005                           ; simple_byte           13     7 (average)
  6006                           ; direct_byte           17     9 (fixed)
  6007                           ; jumptable            263     9 (fixed)
  6008                           ;	Chosen strategy is simple_byte
  6009     0212  0878               	movf	??_I2C_DO_TX_EMPTY,w
  6010     0213  3A01               	xorlw	1	; case 1
  6011     0214  1903               	skipnz
  6012     0215  2A00               	goto	i1l3201
  6013     0216  3A03               	xorlw	3	; case 2
  6014     0217  1903               	skipnz
  6015     0218  29F7               	goto	i1l3191
  6016     0219  3A01               	xorlw	1	; case 3
  6017     021A  1903               	skipnz
  6018     021B  29F7               	goto	i1l3191
  6019     021C  3A07               	xorlw	7	; case 4
  6020     021D  1903               	skipnz
  6021     021E  29FB               	goto	i1l3195
  6022     021F  2A00               	goto	i1l3201
  6023     0220                     i1l381:
  6024     0220  0008               	return
  6025     0221                     __end_of_I2C_DO_TX_EMPTY:
  6026                           
  6027                           	psect	text41
  6028     04DC                     __ptext41:	
  6029 ;; *************** function _I2C_MasterSetIrq *****************
  6030 ;; Defined at:
  6031 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		None
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6045 ;;      Params:         0       0       0       0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_I2C_DO_TX_EMPTY
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058     04DC                     _I2C_MasterSetIrq:	
  6059                           ;psect for function _I2C_MasterSetIrq
  6060                           
  6061     04DC                     i1l2957:	
  6062                           ;incstack = 0
  6063                           ; Regs used in _I2C_MasterSetIrq: []
  6064                           
  6065                           
  6066                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  6067     04DC  0020               	movlb	0	; select bank0
  6068     04DD  1591               	bsf	17,3	;volatile
  6069     04DE                     i1l501:
  6070     04DE  0008               	return
  6071     04DF                     __end_of_I2C_MasterSetIrq:
  6072                           
  6073                           	psect	text42
  6074     0489                     __ptext42:	
  6075 ;; *************** function _I2C_MasterIsNack *****************
  6076 ;; Defined at:
  6077 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      _Bool 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6091 ;;      Params:         0       0       0       0       0       0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0
  6094 ;;      Totals:         0       0       0       0       0       0       0       0
  6095 ;;Total ram usage:        0 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_I2C_MasterFsm
  6101 ;;		_I2C_DO_TX
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105     0489                     _I2C_MasterIsNack:	
  6106                           ;psect for function _I2C_MasterIsNack
  6107                           
  6108     0489                     i1l2907:	
  6109                           ;incstack = 0
  6110                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6111                           
  6112                           
  6113                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  6114     0489  0024               	movlb	4	; select bank4
  6115     048A  0E16               	swapf	22,w	;volatile
  6116     048B  0C89               	rrf	9,f
  6117     048C  0C89               	rrf	9,f
  6118     048D  3901               	andlw	1
  6119     048E                     i1l474:
  6120     048E  0008               	return
  6121     048F                     __end_of_I2C_MasterIsNack:
  6122                           
  6123                           	psect	text43
  6124     04BC                     __ptext43:	
  6125 ;; *************** function _I2C_MasterSendTxData *****************
  6126 ;; Defined at:
  6127 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  data            1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  data            1    0[COMMON] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6141 ;;      Params:         0       0       0       0       0       0       0       0
  6142 ;;      Locals:         1       0       0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0
  6144 ;;      Totals:         1       0       0       0       0       0       0       0
  6145 ;;Total ram usage:        1 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_I2C_DO_SEND_ADR_READ
  6151 ;;		_I2C_DO_SEND_ADR_WRITE
  6152 ;;		_I2C_DO_TX
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156     04BC                     _I2C_MasterSendTxData:	
  6157                           ;psect for function _I2C_MasterSendTxData
  6158                           
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6162                           ;I2C_MasterSendTxData@data stored from wreg
  6163     04BC  00F0               	movwf	I2C_MasterSendTxData@data
  6164     04BD                     i1l2911:
  6165                           
  6166                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  6167     04BD  0870               	movf	I2C_MasterSendTxData@data,w
  6168     04BE  0024               	movlb	4	; select bank4
  6169     04BF  0091               	movwf	17	;volatile
  6170     04C0                     i1l456:
  6171     04C0  0008               	return
  6172     04C1                     __end_of_I2C_MasterSendTxData:
  6173                           
  6174                           	psect	text44
  6175     04C9                     __ptext44:	
  6176 ;; *************** function _I2C_MasterSendAck *****************
  6177 ;; Defined at:
  6178 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		None
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6192 ;;      Params:         0       0       0       0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_I2C_DO_RX
  6202 ;;		_I2C_DO_RX_ACK
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206     04C9                     _I2C_MasterSendAck:	
  6207                           ;psect for function _I2C_MasterSendAck
  6208                           
  6209     04C9                     i1l2935:	
  6210                           ;incstack = 0
  6211                           ; Regs used in _I2C_MasterSendAck: []
  6212                           
  6213                           
  6214                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  6215     04C9  0024               	movlb	4	; select bank4
  6216     04CA  1296               	bcf	22,5	;volatile
  6217                           
  6218                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  6219     04CB  1616               	bsf	22,4	;volatile
  6220     04CC                     i1l477:
  6221     04CC  0008               	return
  6222     04CD                     __end_of_I2C_MasterSendAck:
  6223                           
  6224                           	psect	text45
  6225     04DF                     __ptext45:	
  6226 ;; *************** function _I2C_MasterGetRxData *****************
  6227 ;; Defined at:
  6228 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      unsigned char 
  6235 ;; Registers used:
  6236 ;;		wreg
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6242 ;;      Params:         0       0       0       0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_I2C_DO_RX
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255     04DF                     _I2C_MasterGetRxData:	
  6256                           ;psect for function _I2C_MasterGetRxData
  6257                           
  6258     04DF                     i1l2931:	
  6259                           ;incstack = 0
  6260                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6261                           
  6262                           
  6263                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  6264     04DF  0024               	movlb	4	; select bank4
  6265     04E0  0811               	movf	17,w	;volatile
  6266     04E1                     i1l453:
  6267     04E1  0008               	return
  6268     04E2                     __end_of_I2C_MasterGetRxData:
  6269                           
  6270                           	psect	text46
  6271     04CD                     __ptext46:	
  6272 ;; *************** function _I2C_MasterSendNack *****************
  6273 ;; Defined at:
  6274 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		None
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6288 ;;      Params:         0       0       0       0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_I2C_DO_RX_NACK_STOP
  6298 ;;		_I2C_DO_RX_NACK_RESTART
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302     04CD                     _I2C_MasterSendNack:	
  6303                           ;psect for function _I2C_MasterSendNack
  6304                           
  6305     04CD                     i1l2829:	
  6306                           ;incstack = 0
  6307                           ; Regs used in _I2C_MasterSendNack: []
  6308                           
  6309                           
  6310                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  6311     04CD  0024               	movlb	4	; select bank4
  6312     04CE  1696               	bsf	22,5	;volatile
  6313                           
  6314                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  6315     04CF  1616               	bsf	22,4	;volatile
  6316     04D0                     i1l480:
  6317     04D0  0008               	return
  6318     04D1                     __end_of_I2C_MasterSendNack:
  6319                           
  6320                           	psect	text47
  6321     04E2                     __ptext47:	
  6322 ;; *************** function _I2C_MasterStartRx *****************
  6323 ;; Defined at:
  6324 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		None
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6338 ;;      Params:         0       0       0       0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		_I2C_DO_RCEN
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350                           
  6351     04E2                     _I2C_MasterStartRx:	
  6352                           ;psect for function _I2C_MasterStartRx
  6353                           
  6354     04E2                     i1l2949:	
  6355                           ;incstack = 0
  6356                           ; Regs used in _I2C_MasterStartRx: []
  6357                           
  6358                           
  6359                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  6360     04E2  0024               	movlb	4	; select bank4
  6361     04E3  1596               	bsf	22,3	;volatile
  6362     04E4                     i1l465:
  6363     04E4  0008               	return
  6364     04E5                     __end_of_I2C_MasterStartRx:
  6365                           
  6366                           	psect	text48
  6367     04EB                     __ptext48:	
  6368 ;; *************** function _I2C_CallbackReturnReset *****************
  6369 ;; Defined at:
  6370 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  funPtr          1    7[COMMON] PTR void 
  6373 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6374 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      enum E363
  6379 ;; Registers used:
  6380 ;;		wreg
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6386 ;;      Params:         1       0       0       0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0
  6389 ;;      Totals:         1       0       0       0       0       0       0       0
  6390 ;;Total ram usage:        1 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_I2C_Open
  6396 ;;		_I2C_DO_TX
  6397 ;;		_I2C_DO_RX
  6398 ;;		_I2C_DO_TX_EMPTY
  6399 ;;		_I2C_DO_ADDRESS_NACK
  6400 ;;		_I2C_DO_RX_EMPTY
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404     04EB                     _I2C_CallbackReturnReset:	
  6405                           ;psect for function _I2C_CallbackReturnReset
  6406                           
  6407     04EB                     i1l2963:	
  6408                           ;incstack = 0
  6409                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  6410                           
  6411                           
  6412                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  6413     04EB  3005               	movlw	5
  6414     04EC                     i1l437:
  6415     04EC  0008               	return
  6416     04ED                     __end_of_I2C_CallbackReturnReset:
  6417                           
  6418                           	psect	text49
  6419     04ED                     __ptext49:	
  6420 ;; *************** function _I2C_CallbackReturnStop *****************
  6421 ;; Defined at:
  6422 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  funPtr          1    7[COMMON] PTR void 
  6425 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6426 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      enum E363
  6431 ;; Registers used:
  6432 ;;		wreg
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6438 ;;      Params:         1       0       0       0       0       0       0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0
  6441 ;;      Totals:         1       0       0       0       0       0       0       0
  6442 ;;Total ram usage:        1 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_I2C_SetCallback
  6448 ;;		_I2C_Open
  6449 ;;		_I2C_DO_TX
  6450 ;;		_I2C_DO_RX
  6451 ;;		_I2C_DO_TX_EMPTY
  6452 ;;		_I2C_DO_ADDRESS_NACK
  6453 ;;		_I2C_DO_RX_EMPTY
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457     04ED                     _I2C_CallbackReturnStop:	
  6458                           ;psect for function _I2C_CallbackReturnStop
  6459                           
  6460     04ED                     i1l2959:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  6463                           
  6464                           
  6465                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  6466     04ED  3001               	movlw	1
  6467     04EE                     i1l434:
  6468     04EE  0008               	return
  6469     04EF                     __end_of_I2C_CallbackReturnStop:
  6470                           
  6471                           	psect	text50
  6472     0325                     __ptext50:	
  6473 ;; *************** function _rdBlkRegCompleteHandler *****************
  6474 ;; Defined at:
  6475 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  ptr             1    7[COMMON] PTR void 
  6478 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6479 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      enum E363
  6484 ;; Registers used:
  6485 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6491 ;;      Params:         1       0       0       0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0
  6494 ;;      Totals:         1       0       0       0       0       0       0       0
  6495 ;;Total ram usage:        1 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 2
  6498 ;; This function calls:
  6499 ;;		_I2C_SetBuffer
  6500 ;;		_I2C_SetDataCompleteCallback
  6501 ;; This function is called by:
  6502 ;;		_I2C_ReadDataBlock
  6503 ;;		_I2C_DO_TX
  6504 ;;		_I2C_DO_RX
  6505 ;;		_I2C_DO_TX_EMPTY
  6506 ;;		_I2C_DO_ADDRESS_NACK
  6507 ;;		_I2C_DO_RX_EMPTY
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511     0325                     _rdBlkRegCompleteHandler:	
  6512                           ;psect for function _rdBlkRegCompleteHandler
  6513                           
  6514     0325                     i1l2863:	
  6515                           ;incstack = 0
  6516                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  6517                           
  6518                           
  6519                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6520     0325  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6521     0326  0086               	movwf	6
  6522     0327  0187               	clrf	7
  6523     0328  3F40               	moviw [0]fsr1
  6524     0329  00F0               	movwf	I2C_SetBuffer@bufferSize
  6525     032A  3F41               	moviw [1]fsr1
  6526     032B  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6527     032C  0877               	movf	rdBlkRegCompleteHandler@ptr,w
  6528     032D  3E02               	addlw	2
  6529     032E  0086               	movwf	6
  6530     032F  0187               	clrf	7
  6531     0330  0801               	movf	1,w
  6532     0331  3183  23C5  3183   	fcall	_I2C_SetBuffer
  6533                           
  6534                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6535     0334  3000               	movlw	0
  6536     0335  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6537     0336  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6538     0337  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6539     0338  3184  2411  3183   	fcall	_I2C_SetDataCompleteCallback
  6540     033B                     i1l2865:
  6541                           
  6542                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6543     033B  3002               	movlw	2
  6544     033C                     i1l104:
  6545     033C  0008               	return
  6546     033D                     __end_of_rdBlkRegCompleteHandler:
  6547                           
  6548                           	psect	text51
  6549     0372                     __ptext51:	
  6550 ;; *************** function _wr1RegCompleteHandler *****************
  6551 ;; Defined at:
  6552 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  ptr             1    7[COMMON] PTR void 
  6555 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6556 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      enum E363
  6561 ;; Registers used:
  6562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6568 ;;      Params:         1       0       0       0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0
  6571 ;;      Totals:         1       0       0       0       0       0       0       0
  6572 ;;Total ram usage:        1 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 2
  6575 ;; This function calls:
  6576 ;;		_I2C_SetBuffer
  6577 ;;		_I2C_SetDataCompleteCallback
  6578 ;; This function is called by:
  6579 ;;		_I2C_Write1ByteRegister
  6580 ;;		_I2C_DO_TX
  6581 ;;		_I2C_DO_RX
  6582 ;;		_I2C_DO_TX_EMPTY
  6583 ;;		_I2C_DO_ADDRESS_NACK
  6584 ;;		_I2C_DO_RX_EMPTY
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588     0372                     _wr1RegCompleteHandler:	
  6589                           ;psect for function _wr1RegCompleteHandler
  6590                           
  6591     0372                     i1l2847:	
  6592                           ;incstack = 0
  6593                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6594                           
  6595                           
  6596                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6597     0372  3001               	movlw	1
  6598     0373  00F0               	movwf	I2C_SetBuffer@bufferSize
  6599     0374  3000               	movlw	0
  6600     0375  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6601     0376  0877               	movf	wr1RegCompleteHandler@ptr,w
  6602     0377  3183  23C5  3183   	fcall	_I2C_SetBuffer
  6603     037A                     i1l2849:
  6604                           
  6605                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6606     037A  3000               	movlw	0
  6607     037B  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6608     037C  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6609     037D  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6610     037E  3184  2411  3183   	fcall	_I2C_SetDataCompleteCallback
  6611     0381                     i1l2851:
  6612                           
  6613                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6614     0381  3004               	movlw	4
  6615     0382                     i1l98:
  6616     0382  0008               	return
  6617     0383                     __end_of_wr1RegCompleteHandler:
  6618                           
  6619                           	psect	text52
  6620     0383                     __ptext52:	
  6621 ;; *************** function _rd2RegCompleteHandler *****************
  6622 ;; Defined at:
  6623 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  ptr             1    7[COMMON] PTR void 
  6626 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6627 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      enum E363
  6632 ;; Registers used:
  6633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6639 ;;      Params:         1       0       0       0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0
  6642 ;;      Totals:         1       0       0       0       0       0       0       0
  6643 ;;Total ram usage:        1 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 2
  6646 ;; This function calls:
  6647 ;;		_I2C_SetBuffer
  6648 ;;		_I2C_SetDataCompleteCallback
  6649 ;; This function is called by:
  6650 ;;		_I2C_Read2ByteRegister
  6651 ;;		_I2C_DO_TX
  6652 ;;		_I2C_DO_RX
  6653 ;;		_I2C_DO_TX_EMPTY
  6654 ;;		_I2C_DO_ADDRESS_NACK
  6655 ;;		_I2C_DO_RX_EMPTY
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659     0383                     _rd2RegCompleteHandler:	
  6660                           ;psect for function _rd2RegCompleteHandler
  6661                           
  6662     0383                     i1l2839:	
  6663                           ;incstack = 0
  6664                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6665                           
  6666                           
  6667                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6668     0383  3002               	movlw	2
  6669     0384  00F0               	movwf	I2C_SetBuffer@bufferSize
  6670     0385  3000               	movlw	0
  6671     0386  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6672     0387  0877               	movf	rd2RegCompleteHandler@ptr,w
  6673     0388  3183  23C5  3183   	fcall	_I2C_SetBuffer
  6674     038B                     i1l2841:
  6675                           
  6676                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6677     038B  3000               	movlw	0
  6678     038C  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6679     038D  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6680     038E  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6681     038F  3184  2411  3183   	fcall	_I2C_SetDataCompleteCallback
  6682     0392                     i1l2843:
  6683                           
  6684                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6685     0392  3002               	movlw	2
  6686     0393                     i1l95:
  6687     0393  0008               	return
  6688     0394                     __end_of_rd2RegCompleteHandler:
  6689                           
  6690                           	psect	text53
  6691     0394                     __ptext53:	
  6692 ;; *************** function _rd1RegCompleteHandler *****************
  6693 ;; Defined at:
  6694 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  ptr             1    7[COMMON] PTR void 
  6697 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6698 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      enum E363
  6703 ;; Registers used:
  6704 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6710 ;;      Params:         1       0       0       0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0
  6713 ;;      Totals:         1       0       0       0       0       0       0       0
  6714 ;;Total ram usage:        1 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		_I2C_SetBuffer
  6719 ;;		_I2C_SetDataCompleteCallback
  6720 ;; This function is called by:
  6721 ;;		_I2C_Read1ByteRegister
  6722 ;;		_I2C_DO_TX
  6723 ;;		_I2C_DO_RX
  6724 ;;		_I2C_DO_TX_EMPTY
  6725 ;;		_I2C_DO_ADDRESS_NACK
  6726 ;;		_I2C_DO_RX_EMPTY
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730     0394                     _rd1RegCompleteHandler:	
  6731                           ;psect for function _rd1RegCompleteHandler
  6732                           
  6733     0394                     i1l2831:	
  6734                           ;incstack = 0
  6735                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6736                           
  6737                           
  6738                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6739     0394  3001               	movlw	1
  6740     0395  00F0               	movwf	I2C_SetBuffer@bufferSize
  6741     0396  3000               	movlw	0
  6742     0397  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6743     0398  0877               	movf	rd1RegCompleteHandler@ptr,w
  6744     0399  3183  23C5  3183   	fcall	_I2C_SetBuffer
  6745     039C                     i1l2833:
  6746                           
  6747                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6748     039C  3000               	movlw	0
  6749     039D  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6750     039E  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6751     039F  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6752     03A0  3184  2411  3183   	fcall	_I2C_SetDataCompleteCallback
  6753     03A3                     i1l2835:
  6754                           
  6755                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6756     03A3  3002               	movlw	2
  6757     03A4                     i1l92:
  6758     03A4  0008               	return
  6759     03A5                     __end_of_rd1RegCompleteHandler:
  6760                           
  6761                           	psect	text54
  6762     03A5                     __ptext54:	
  6763 ;; *************** function _wr2RegCompleteHandler *****************
  6764 ;; Defined at:
  6765 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  ptr             1    7[COMMON] PTR void 
  6768 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6769 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      enum E363
  6774 ;; Registers used:
  6775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6781 ;;      Params:         1       0       0       0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0
  6784 ;;      Totals:         1       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        1 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 2
  6788 ;; This function calls:
  6789 ;;		_I2C_SetBuffer
  6790 ;;		_I2C_SetDataCompleteCallback
  6791 ;; This function is called by:
  6792 ;;		_I2C_Write2ByteRegister
  6793 ;;		_I2C_DO_TX
  6794 ;;		_I2C_DO_RX
  6795 ;;		_I2C_DO_TX_EMPTY
  6796 ;;		_I2C_DO_ADDRESS_NACK
  6797 ;;		_I2C_DO_RX_EMPTY
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801     03A5                     _wr2RegCompleteHandler:	
  6802                           ;psect for function _wr2RegCompleteHandler
  6803                           
  6804     03A5                     i1l2855:	
  6805                           ;incstack = 0
  6806                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6807                           
  6808                           
  6809                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6810     03A5  3002               	movlw	2
  6811     03A6  00F0               	movwf	I2C_SetBuffer@bufferSize
  6812     03A7  3000               	movlw	0
  6813     03A8  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6814     03A9  0877               	movf	wr2RegCompleteHandler@ptr,w
  6815     03AA  3183  23C5  3183   	fcall	_I2C_SetBuffer
  6816     03AD                     i1l2857:
  6817                           
  6818                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6819     03AD  3000               	movlw	0
  6820     03AE  00F4               	movwf	I2C_SetDataCompleteCallback@cb
  6821     03AF  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
  6822     03B0  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
  6823     03B1  3184  2411  3183   	fcall	_I2C_SetDataCompleteCallback
  6824     03B4                     i1l2859:
  6825                           
  6826                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6827     03B4  3004               	movlw	4
  6828     03B5                     i1l101:
  6829     03B5  0008               	return
  6830     03B6                     __end_of_wr2RegCompleteHandler:
  6831                           
  6832                           	psect	text55
  6833     0411                     __ptext55:	
  6834 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6835 ;; Defined at:
  6836 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
  6839 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6840 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6841 ;;  ptr             1    6[COMMON] PTR void 
  6842 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6843 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6855 ;;      Params:         3       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0
  6858 ;;      Totals:         3       0       0       0       0       0       0       0
  6859 ;;Total ram usage:        3 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 1
  6862 ;; This function calls:
  6863 ;;		_I2C_SetCallback
  6864 ;; This function is called by:
  6865 ;;		_rd1RegCompleteHandler
  6866 ;;		_rd2RegCompleteHandler
  6867 ;;		_wr1RegCompleteHandler
  6868 ;;		_wr2RegCompleteHandler
  6869 ;;		_rdBlkRegCompleteHandler
  6870 ;;		_I2C_Read1ByteRegister
  6871 ;;		_I2C_Read2ByteRegister
  6872 ;;		_I2C_Write1ByteRegister
  6873 ;;		_I2C_Write2ByteRegister
  6874 ;;		_I2C_ReadDataBlock
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878     0411                     _I2C_SetDataCompleteCallback:	
  6879                           ;psect for function _I2C_SetDataCompleteCallback
  6880                           
  6881     0411                     i1l2815:	
  6882                           ;incstack = 0
  6883                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6884                           
  6885                           
  6886                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6887     0411  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
  6888     0412  00F1               	movwf	I2C_SetCallback@cb+1
  6889     0413  0874               	movf	I2C_SetDataCompleteCallback@cb,w
  6890     0414  00F0               	movwf	I2C_SetCallback@cb
  6891     0415  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
  6892     0416  00F2               	movwf	I2C_SetCallback@ptr
  6893     0417  3000               	movlw	0
  6894     0418  3182  2271  3184   	fcall	_I2C_SetCallback
  6895     041B                     i1l308:
  6896     041B  0008               	return
  6897     041C                     __end_of_I2C_SetDataCompleteCallback:
  6898                           
  6899                           	psect	text56
  6900     0271                     __ptext56:	
  6901 ;; *************** function _I2C_SetCallback *****************
  6902 ;; Defined at:
  6903 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  idx             1    wreg     enum E3130
  6906 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  6907 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6908 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6909 ;;  ptr             1    2[COMMON] PTR void 
  6910 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6911 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  idx             1    3[COMMON] enum E3130
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6923 ;;      Params:         3       0       0       0       0       0       0       0
  6924 ;;      Locals:         1       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0
  6926 ;;      Totals:         4       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used: 1
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_I2C_SetDataCompleteCallback
  6933 ;;		_I2C_SetWriteCollisionCallback
  6934 ;;		_I2C_SetAddressNackCallback
  6935 ;;		_I2C_SetDataNackCallback
  6936 ;;		_I2C_SetTimeoutCallback
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940     0271                     _I2C_SetCallback:	
  6941                           ;psect for function _I2C_SetCallback
  6942                           
  6943                           
  6944                           ;incstack = 0
  6945                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  6946                           ;I2C_SetCallback@idx stored from wreg
  6947     0271  00F3               	movwf	I2C_SetCallback@idx
  6948     0272                     i1l2809:
  6949                           
  6950                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  6951     0272  0870               	movf	I2C_SetCallback@cb,w
  6952     0273  0471               	iorwf	I2C_SetCallback@cb+1,w
  6953     0274  1903               	btfsc	3,2
  6954     0275  2A77               	goto	u83_21
  6955     0276  2A78               	goto	u83_20
  6956     0277                     u83_21:
  6957     0277  2A87               	goto	i1l2813
  6958     0278                     u83_20:
  6959     0278                     i1l2811:
  6960                           
  6961                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6962     0278  3573               	lslf	I2C_SetCallback@idx,w
  6963     0279  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6964     027A  0086               	movwf	6
  6965     027B  0187               	clrf	7
  6966     027C  0870               	movf	I2C_SetCallback@cb,w
  6967     027D  3FC0               	movwi [0]fsr1
  6968     027E  0871               	movf	I2C_SetCallback@cb+1,w
  6969     027F  3FC1               	movwi [1]fsr1
  6970                           
  6971                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  6972     0280  0873               	movf	I2C_SetCallback@idx,w
  6973     0281  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6974     0282  0086               	movwf	6
  6975     0283  0187               	clrf	7
  6976     0284  0872               	movf	I2C_SetCallback@ptr,w
  6977     0285  0081               	movwf	1
  6978                           
  6979                           ;mcc_generated_files/i2c_master.c: 310:     }
  6980     0286  2A94               	goto	i1l328
  6981     0287                     i1l2813:
  6982                           
  6983                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6984     0287  3573               	lslf	I2C_SetCallback@idx,w
  6985     0288  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6986     0289  0086               	movwf	6
  6987     028A  0187               	clrf	7
  6988     028B  30ED               	movlw	low _I2C_CallbackReturnStop
  6989     028C  3FC0               	movwi [0]fsr1
  6990     028D  3004               	movlw	high _I2C_CallbackReturnStop
  6991     028E  3FC1               	movwi [1]fsr1
  6992                           
  6993                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6994     028F  0873               	movf	I2C_SetCallback@idx,w
  6995     0290  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  6996     0291  0086               	movwf	6
  6997     0292  0187               	clrf	7
  6998     0293  0181               	clrf	1
  6999     0294                     i1l328:
  7000     0294  0008               	return
  7001     0295                     __end_of_I2C_SetCallback:
  7002                           
  7003                           	psect	text57
  7004     03C5                     __ptext57:	
  7005 ;; *************** function _I2C_SetBuffer *****************
  7006 ;; Defined at:
  7007 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  buffer          1    wreg     PTR void 
  7010 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  7011 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  7012 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  7013 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  7014 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7015 ;;  bufferSize      2    0[COMMON] unsigned int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  buffer          1    2[COMMON] PTR void 
  7018 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  7019 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Disable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  7020 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
  7021 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
  7022 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7032 ;;      Params:         2       0       0       0       0       0       0       0
  7033 ;;      Locals:         1       0       0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0
  7035 ;;      Totals:         3       0       0       0       0       0       0       0
  7036 ;;Total ram usage:        3 bytes
  7037 ;; Hardware stack levels used: 1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_rd1RegCompleteHandler
  7042 ;;		_rd2RegCompleteHandler
  7043 ;;		_wr1RegCompleteHandler
  7044 ;;		_wr2RegCompleteHandler
  7045 ;;		_rdBlkRegCompleteHandler
  7046 ;;		_I2C_Read1ByteRegister
  7047 ;;		_I2C_Read2ByteRegister
  7048 ;;		_I2C_Write1ByteRegister
  7049 ;;		_I2C_Write2ByteRegister
  7050 ;;		_I2C_WriteNBytes
  7051 ;;		_I2C_ReadNBytes
  7052 ;;		_I2C_ReadDataBlock
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056     03C5                     _I2C_SetBuffer:	
  7057                           ;psect for function _I2C_SetBuffer
  7058                           
  7059                           
  7060                           ;incstack = 0
  7061                           ; Regs used in _I2C_SetBuffer: [wreg]
  7062                           ;I2C_SetBuffer@buffer stored from wreg
  7063     03C5  00F2               	movwf	I2C_SetBuffer@buffer
  7064     03C6                     i1l2817:
  7065                           
  7066                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  7067     03C6  0020               	movlb	0	; select bank0
  7068     03C7  1DBC               	btfss	_I2C_Status+28,3
  7069     03C8  2BCA               	goto	u84_21
  7070     03C9  2BCB               	goto	u84_20
  7071     03CA                     u84_21:
  7072     03CA  2BD2               	goto	i1l305
  7073     03CB                     u84_20:
  7074     03CB                     i1l2819:
  7075                           
  7076                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  7077     03CB  0872               	movf	I2C_SetBuffer@buffer,w
  7078     03CC  00B7               	movwf	low ((_I2C_Status| 0+23))
  7079                           
  7080                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  7081     03CD  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  7082     03CE  00B9               	movwf	_I2C_Status+25
  7083     03CF  0870               	movf	I2C_SetBuffer@bufferSize,w
  7084     03D0  00B8               	movwf	_I2C_Status+24
  7085     03D1                     i1l2821:
  7086                           
  7087                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  7088     03D1  11BC               	bcf	_I2C_Status+28,3
  7089     03D2                     i1l305:
  7090     03D2  0008               	return
  7091     03D3                     __end_of_I2C_SetBuffer:
  7092                           
  7093                           	psect	text58
  7094     04E5                     __ptext58:	
  7095 ;; *************** function _I2C_MasterStop *****************
  7096 ;; Defined at:
  7097 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		None
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7111 ;;      Params:         0       0       0       0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_I2C_DO_SEND_STOP
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124     04E5                     _I2C_MasterStop:	
  7125                           ;psect for function _I2C_MasterStop
  7126                           
  7127     04E5                     i1l2827:	
  7128                           ;incstack = 0
  7129                           ; Regs used in _I2C_MasterStop: []
  7130                           
  7131                           
  7132                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  7133     04E5  0024               	movlb	4	; select bank4
  7134     04E6  1516               	bsf	22,2	;volatile
  7135     04E7                     i1l471:
  7136     04E7  0008               	return
  7137     04E8                     __end_of_I2C_MasterStop:
  7138                           
  7139                           	psect	text59
  7140     04E8                     __ptext59:	
  7141 ;; *************** function _I2C_MasterEnableRestart *****************
  7142 ;; Defined at:
  7143 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		None
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7157 ;;      Params:         0       0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_I2C_DO_SEND_RESTART_READ
  7167 ;;		_I2C_DO_SEND_RESTART_WRITE
  7168 ;;		_I2C_DO_SEND_RESTART
  7169 ;;		_I2C_DO_RX_EMPTY
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173     04E8                     _I2C_MasterEnableRestart:	
  7174                           ;psect for function _I2C_MasterEnableRestart
  7175                           
  7176     04E8                     i1l2825:	
  7177                           ;incstack = 0
  7178                           ; Regs used in _I2C_MasterEnableRestart: []
  7179                           
  7180                           
  7181                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  7182     04E8  0024               	movlb	4	; select bank4
  7183     04E9  1496               	bsf	22,1	;volatile
  7184     04EA                     i1l459:
  7185     04EA  0008               	return
  7186     04EB                     __end_of_I2C_MasterEnableRestart:
  7187                           
  7188                           	psect	text60
  7189     0295                     __ptext60:	
  7190 ;; *************** function _EUSART_Transmit_ISR *****************
  7191 ;; Defined at:
  7192 ;;		line 197 in file "mcc_generated_files/eusart.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7206 ;;      Params:         0       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0
  7208 ;;      Temps:          1       0       0       0       0       0       0       0
  7209 ;;      Totals:         1       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        1 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_EUSART_Initialize
  7216 ;;		_INTERRUPT_InterruptManager
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220     0295                     _EUSART_Transmit_ISR:	
  7221                           ;psect for function _EUSART_Transmit_ISR
  7222                           
  7223     0295                     i1l3571:	
  7224                           ;incstack = 0
  7225                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7226                           
  7227                           
  7228                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7229     0295  3010               	movlw	16
  7230     0296  0020               	movlb	0	; select bank0
  7231     0297  0255               	subwf	_eusartTxBufferRemaining,w	;volatile
  7232     0298  1803               	skipnc
  7233     0299  2A9B               	goto	u124_21
  7234     029A  2A9C               	goto	u124_20
  7235     029B                     u124_21:
  7236     029B  2AB4               	goto	i1l649
  7237     029C                     u124_20:
  7238     029C                     i1l3573:
  7239                           
  7240                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7241     029C  0856               	movf	_eusartTxTail,w
  7242     029D  3EC0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7243     029E  0086               	movwf	6
  7244     029F  0187               	clrf	7
  7245     02A0  0801               	movf	1,w
  7246     02A1  0023               	movlb	3	; select bank3
  7247     02A2  009A               	movwf	26	;volatile
  7248     02A3                     i1l3575:
  7249     02A3  3001               	movlw	1
  7250     02A4  00F0               	movwf	??_EUSART_Transmit_ISR
  7251     02A5  0870               	movf	??_EUSART_Transmit_ISR,w
  7252     02A6  0020               	movlb	0	; select bank0
  7253     02A7  07D6               	addwf	_eusartTxTail,f	;volatile
  7254     02A8                     i1l3577:
  7255                           
  7256                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7257     02A8  3010               	movlw	16
  7258     02A9  0256               	subwf	_eusartTxTail,w	;volatile
  7259     02AA  1C03               	skipc
  7260     02AB  2AAD               	goto	u125_21
  7261     02AC  2AAE               	goto	u125_20
  7262     02AD                     u125_21:
  7263     02AD  2AAF               	goto	i1l3581
  7264     02AE                     u125_20:
  7265     02AE                     i1l3579:
  7266                           
  7267                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  7268     02AE  01D6               	clrf	_eusartTxTail	;volatile
  7269     02AF                     i1l3581:
  7270                           
  7271                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  7272     02AF  3001               	movlw	1
  7273     02B0  00F0               	movwf	??_EUSART_Transmit_ISR
  7274     02B1  0870               	movf	??_EUSART_Transmit_ISR,w
  7275     02B2  07D5               	addwf	_eusartTxBufferRemaining,f	;volatile
  7276                           
  7277                           ;mcc_generated_files/eusart.c: 209:     }
  7278     02B3  2AB6               	goto	i1l652
  7279     02B4                     i1l649:	
  7280                           ;mcc_generated_files/eusart.c: 210:     else
  7281                           
  7282                           
  7283                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  7284     02B4  0021               	movlb	1	; select bank1
  7285     02B5  1211               	bcf	17,4	;volatile
  7286     02B6                     i1l652:
  7287     02B6  0008               	return
  7288     02B7                     __end_of_EUSART_Transmit_ISR:
  7289                           
  7290                           	psect	text61
  7291     01B7                     __ptext61:	
  7292 ;; *************** function _EUSART_Receive_ISR *****************
  7293 ;; Defined at:
  7294 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7308 ;;      Params:         0       0       0       0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0
  7311 ;;      Totals:         0       0       0       0       0       0       0       0
  7312 ;;Total ram usage:        0 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 2
  7315 ;; This function calls:
  7316 ;;		NULL
  7317 ;;		_EUSART_DefaultErrorHandler
  7318 ;;		_EUSART_DefaultFramingErrorHandler
  7319 ;;		_EUSART_DefaultOverrunErrorHandler
  7320 ;;		_EUSART_RxDataHandler
  7321 ;; This function is called by:
  7322 ;;		_EUSART_Initialize
  7323 ;;		_INTERRUPT_InterruptManager
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327     01B7                     _EUSART_Receive_ISR:	
  7328                           ;psect for function _EUSART_Receive_ISR
  7329                           
  7330     01B7                     i1l3583:	
  7331                           ;incstack = 0
  7332                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7333                           
  7334                           
  7335                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7336     01B7  0020               	movlb	0	; select bank0
  7337     01B8  0854               	movf	_eusartRxHead,w	;volatile
  7338     01B9  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7339     01BA  0086               	movwf	6
  7340     01BB  0187               	clrf	7
  7341     01BC  0181               	clrf	1
  7342     01BD                     i1l3585:
  7343                           
  7344                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7345     01BD  0023               	movlb	3	; select bank3
  7346     01BE  1D1D               	btfss	29,2	;volatile
  7347     01BF  29C1               	goto	u126_21
  7348     01C0  29C2               	goto	u126_20
  7349     01C1                     u126_21:
  7350     01C1  29CE               	goto	i1l3591
  7351     01C2                     u126_20:
  7352     01C2                     i1l3587:
  7353                           
  7354                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7355     01C2  0020               	movlb	0	; select bank0
  7356     01C3  0854               	movf	_eusartRxHead,w	;volatile
  7357     01C4  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7358     01C5  0086               	movwf	6
  7359     01C6  0187               	clrf	7
  7360     01C7  1481               	bsf	1,1
  7361     01C8                     i1l3589:
  7362                           
  7363                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7364     01C8  0021               	movlb	1	; select bank1
  7365     01C9  0859               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  7366     01CA  008A               	movwf	10
  7367     01CB  0858               	movf	_EUSART_FramingErrorHandler^(0+128),w
  7368     01CC  000A               	callw
  7369     01CD  3181               	pagesel	$
  7370     01CE                     i1l3591:
  7371                           
  7372                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7373     01CE  0023               	movlb	3	; select bank3
  7374     01CF  1C9D               	btfss	29,1	;volatile
  7375     01D0  29D2               	goto	u127_21
  7376     01D1  29D3               	goto	u127_20
  7377     01D2                     u127_21:
  7378     01D2  29DF               	goto	i1l3597
  7379     01D3                     u127_20:
  7380     01D3                     i1l3593:
  7381                           
  7382                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7383     01D3  0020               	movlb	0	; select bank0
  7384     01D4  0854               	movf	_eusartRxHead,w	;volatile
  7385     01D5  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7386     01D6  0086               	movwf	6
  7387     01D7  0187               	clrf	7
  7388     01D8  1501               	bsf	1,2
  7389     01D9                     i1l3595:
  7390                           
  7391                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7392     01D9  0021               	movlb	1	; select bank1
  7393     01DA  0857               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  7394     01DB  008A               	movwf	10
  7395     01DC  0856               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  7396     01DD  000A               	callw
  7397     01DE  3181               	pagesel	$
  7398     01DF                     i1l3597:
  7399                           
  7400                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7401     01DF  0020               	movlb	0	; select bank0
  7402     01E0  0854               	movf	_eusartRxHead,w	;volatile
  7403     01E1  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  7404     01E2  0086               	movwf	6
  7405     01E3  0187               	clrf	7
  7406     01E4  0801               	movf	1,w
  7407     01E5  1903               	btfsc	3,2
  7408     01E6  29E8               	goto	u128_21
  7409     01E7  29E9               	goto	u128_20
  7410     01E8                     u128_21:
  7411     01E8  29F0               	goto	i1l3601
  7412     01E9                     u128_20:
  7413     01E9                     i1l3599:
  7414                           
  7415                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7416     01E9  0021               	movlb	1	; select bank1
  7417     01EA  0855               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  7418     01EB  008A               	movwf	10
  7419     01EC  0854               	movf	_EUSART_ErrorHandler^(0+128),w
  7420     01ED  000A               	callw
  7421     01EE  3181               	pagesel	$
  7422                           
  7423                           ;mcc_generated_files/eusart.c: 233:     } else {
  7424     01EF  29F3               	goto	i1l659
  7425     01F0                     i1l3601:
  7426                           
  7427                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7428     01F0  3183  230C  3181   	fcall	_EUSART_RxDataHandler
  7429     01F3                     i1l659:
  7430     01F3  0008               	return
  7431     01F4                     __end_of_EUSART_Receive_ISR:
  7432                           
  7433                           	psect	text62
  7434     04D1                     __ptext62:	
  7435 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7436 ;; Defined at:
  7437 ;;		line 252 in file "mcc_generated_files/eusart.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		None
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7451 ;;      Params:         0       0       0       0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_EUSART_Initialize
  7461 ;;		_EUSART_Receive_ISR
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465     04D1                     _EUSART_DefaultOverrunErrorHandler:	
  7466                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  7467                           
  7468     04D1                     i1l3447:	
  7469                           ;incstack = 0
  7470                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  7471                           
  7472                           
  7473                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  7474     04D1  0023               	movlb	3	; select bank3
  7475     04D2  121D               	bcf	29,4	;volatile
  7476                           
  7477                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  7478     04D3  161D               	bsf	29,4	;volatile
  7479     04D4                     i1l669:
  7480     04D4  0008               	return
  7481     04D5                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7482                           
  7483                           	psect	text63
  7484     04F0                     __ptext63:	
  7485 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7486 ;; Defined at:
  7487 ;;		line 250 in file "mcc_generated_files/eusart.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  1    wreg      void 
  7494 ;; Registers used:
  7495 ;;		None
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7501 ;;      Params:         0       0       0       0       0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0
  7504 ;;      Totals:         0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:        0 bytes
  7506 ;; Hardware stack levels used: 1
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_EUSART_Initialize
  7511 ;;		_EUSART_Receive_ISR
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515     04F0                     _EUSART_DefaultFramingErrorHandler:	
  7516                           ;psect for function _EUSART_DefaultFramingErrorHandler
  7517                           
  7518     04F0                     i1l666:	
  7519                           ;incstack = 0
  7520                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  7521                           
  7522     04F0  0008               	return
  7523     04F1                     __end_of_EUSART_DefaultFramingErrorHandler:
  7524                           
  7525                           	psect	text64
  7526     04D5                     __ptext64:	
  7527 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7528 ;; Defined at:
  7529 ;;		line 260 in file "mcc_generated_files/eusart.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;		None
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7543 ;;      Params:         0       0       0       0       0       0       0       0
  7544 ;;      Locals:         0       0       0       0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0
  7546 ;;      Totals:         0       0       0       0       0       0       0       0
  7547 ;;Total ram usage:        0 bytes
  7548 ;; Hardware stack levels used: 1
  7549 ;; Hardware stack levels required when called: 1
  7550 ;; This function calls:
  7551 ;;		_EUSART_RxDataHandler
  7552 ;; This function is called by:
  7553 ;;		_EUSART_Initialize
  7554 ;;		_EUSART_Receive_ISR
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558     04D5                     _EUSART_DefaultErrorHandler:	
  7559                           ;psect for function _EUSART_DefaultErrorHandler
  7560                           
  7561     04D5                     i1l3449:	
  7562                           ;incstack = 0
  7563                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7564                           
  7565                           
  7566                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  7567     04D5  3183  230C  3184   	fcall	_EUSART_RxDataHandler
  7568     04D8                     i1l672:
  7569     04D8  0008               	return
  7570     04D9                     __end_of_EUSART_DefaultErrorHandler:
  7571                           
  7572                           	psect	text65
  7573     030C                     __ptext65:	
  7574 ;; *************** function _EUSART_RxDataHandler *****************
  7575 ;; Defined at:
  7576 ;;		line 240 in file "mcc_generated_files/eusart.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      void 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7590 ;;      Params:         0       0       0       0       0       0       0       0
  7591 ;;      Locals:         0       0       0       0       0       0       0       0
  7592 ;;      Temps:          1       0       0       0       0       0       0       0
  7593 ;;      Totals:         1       0       0       0       0       0       0       0
  7594 ;;Total ram usage:        1 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_EUSART_Receive_ISR
  7600 ;;		_EUSART_DefaultErrorHandler
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604     030C                     _EUSART_RxDataHandler:	
  7605                           ;psect for function _EUSART_RxDataHandler
  7606                           
  7607     030C                     i1l3279:	
  7608                           ;incstack = 0
  7609                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7610                           
  7611                           
  7612                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7613     030C  0020               	movlb	0	; select bank0
  7614     030D  0854               	movf	_eusartRxHead,w
  7615     030E  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7616     030F  0086               	movwf	6
  7617     0310  0187               	clrf	7
  7618     0311  0023               	movlb	3	; select bank3
  7619     0312  0819               	movf	25,w	;volatile
  7620     0313  0081               	movwf	1
  7621     0314                     i1l3281:
  7622     0314  3001               	movlw	1
  7623     0315  00F0               	movwf	??_EUSART_RxDataHandler
  7624     0316  0870               	movf	??_EUSART_RxDataHandler,w
  7625     0317  0020               	movlb	0	; select bank0
  7626     0318  07D4               	addwf	_eusartRxHead,f	;volatile
  7627     0319                     i1l3283:
  7628                           
  7629                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7630     0319  3010               	movlw	16
  7631     031A  0254               	subwf	_eusartRxHead,w	;volatile
  7632     031B  1C03               	skipc
  7633     031C  2B1E               	goto	u102_21
  7634     031D  2B1F               	goto	u102_20
  7635     031E                     u102_21:
  7636     031E  2B20               	goto	i1l3287
  7637     031F                     u102_20:
  7638     031F                     i1l3285:
  7639                           
  7640                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7641     031F  01D4               	clrf	_eusartRxHead	;volatile
  7642     0320                     i1l3287:
  7643                           
  7644                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7645     0320  3001               	movlw	1
  7646     0321  00F0               	movwf	??_EUSART_RxDataHandler
  7647     0322  0870               	movf	??_EUSART_RxDataHandler,w
  7648     0323  07FC               	addwf	_eusartRxCount,f	;volatile
  7649     0324                     i1l663:
  7650     0324  0008               	return
  7651     0325                     __end_of_EUSART_RxDataHandler:
  7652     007E                     btemp	set	126	;btemp
  7653     007E                     int$flags	set	126
  7654     007E                     wtemp0	set	126
  7655     20D4                     
  7656                           	psect	idloc
  7657                           
  7658                           ;Config register IDLOC0 @ 0x8000
  7659                           ;	unspecified, using default values
  7660     8000                     	org	32768
  7661     8000  3FFF               	dw	16383
  7662                           
  7663                           ;Config register IDLOC1 @ 0x8001
  7664                           ;	unspecified, using default values
  7665     8001                     	org	32769
  7666     8001  3FFF               	dw	16383
  7667                           
  7668                           ;Config register IDLOC2 @ 0x8002
  7669                           ;	unspecified, using default values
  7670     8002                     	org	32770
  7671     8002  3FFF               	dw	16383
  7672                           
  7673                           ;Config register IDLOC3 @ 0x8003
  7674                           ;	unspecified, using default values
  7675     8003                     	org	32771
  7676     8003  3FFF               	dw	16383
  7677                           
  7678                           	psect	config
  7679                           
  7680                           ;Config register CONFIG1 @ 0x8007
  7681                           ;	Oscillator Selection
  7682                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7683                           ;	Watchdog Timer Enable
  7684                           ;	WDTE = SWDTEN, WDT controlled by the SWDTEN bit in the WDTCON register
  7685                           ;	Power-up Timer Enable
  7686                           ;	PWRTE = OFF, PWRT disabled
  7687                           ;	MCLR Pin Function Select
  7688                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7689                           ;	Flash Program Memory Code Protection
  7690                           ;	CP = OFF, Program memory code protection is disabled
  7691                           ;	Data Memory Code Protection
  7692                           ;	CPD = OFF, Data memory code protection is disabled
  7693                           ;	Brown-out Reset Enable
  7694                           ;	BOREN = ON, Brown-out Reset enabled
  7695                           ;	Clock Out Enable
  7696                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7697                           ;	Internal/External Switchover
  7698                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7699                           ;	Fail-Safe Clock Monitor Enable
  7700                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7701     8007                     	org	32775
  7702     8007  3FEC               	dw	16364
  7703                           
  7704                           ;Config register CONFIG2 @ 0x8008
  7705                           ;	Flash Memory Self-Write Protection
  7706                           ;	WRT = OFF, Write protection off
  7707                           ;	Voltage Regulator Capacitor Enable
  7708                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
  7709                           ;	PLL Enable
  7710                           ;	PLLEN = OFF, 4x PLL disabled
  7711                           ;	Stack Overflow/Underflow Reset Enable
  7712                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7713                           ;	Brown-out Reset Voltage Selection
  7714                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7715                           ;	Low-Voltage Programming Enable
  7716                           ;	LVP = ON, Low-voltage programming enabled
  7717     8008                     	org	32776
  7718     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        15
    BSS         115
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      2      80
    BANK1            80      0      63
    BANK2            52      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2347$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2352	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2347	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2346	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S1459$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1459$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1459$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    Device_Init@pWS_Ad	PTR char  size(1) Largest target is 1
		 -> SW_Ad(BANK0[1]), 

    Task_Sensor@_pHumi	PTR short  size(1) Largest target is 2
		 -> Humidity(BANK0[2]), 

    Task_Sensor@_pTemp	PTR short  size(1) Largest target is 2
		 -> Temperature(BANK0[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), NULL(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(COMMON[6]), SHT30_CMD_MEASURE_H_Disable(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S335$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _Tick_Init_SES->_TMR1_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     838
                   _ModbusSlave_Init
                  _SYSTEM_Initialize
                      _Tick_Init_SES
 ---------------------------------------------------------------------------------
 (1) _Tick_Init_SES                                        0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ModbusSlave_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   78494
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (7) _rtcc_handle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   78254
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   19569
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   19547
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                              7 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          3     0      3    2478
                                              4 COMMON     3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     4     1      3     914
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _I2C_SetBuffer                                        3     1      2    1352
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ModbusSlave_Init
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _Tick_Init_SES
     _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      9D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3F       8       78.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               34      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      9D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 12 15:06:20 2023

                ?_EUSART_SetRxInterruptHandler 006E                         ??_I2C_DO_SEND_ADR_READ 0070  
                      ??_I2C_DO_SEND_ADR_WRITE 0071                                    _SSPSTATbits 0214  
                        ??_I2C_DO_SEND_RESTART 0070                                            l135 02F2  
                                          l163 034F                                            l166 047B  
                                          l169 04C4                                            l278 042E  
                                          l618 01B6                                            l716 030B  
                                          l681 045B                                            l675 0452  
                                          l684 0437                                            l749 0488  
                                          l765 040E                                            l678 0449  
                                          l766 040E                                            l687 0440  
                                          l971 0131                                            l985 0360  
                              _timer1ReloadVal 0049                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 006E                                            wreg 0009  
                     ??_I2C_CallbackReturnStop 0078                                   _I2C_DO_RESET 048F  
                      ??_rd2RegCompleteHandler 0078                                           l3401 0300  
                                         l3251 044A                                           l3411 0189  
                                         l3403 0308                                           l3253 0441  
                                         l3421 0193                                           l3413 018C  
                                         l3405 0175                                           l3255 0453  
                                         l3247 0438                                           l3431 01B2  
                                         l3423 019B                                           l3415 018E  
                                         l3407 0177                                           l3351 02DB  
                                         l3249 042F                                           l3433 01B3  
                                         l3425 01A3                                           l3417 0190  
                                         l3409 017F                                           l3361 02E6  
                                         l3353 02DD                                           l3611 00FB  
                                         l3435 01B4                                           l3427 01AF  
                                         l3419 0192                                           l3371 02F0  
                                         l3363 02E9                                           l3355 02E0  
                                         l3603 0350                                           l3613 0101  
                                         l3429 01B1                                           l3373 0426  
                                         l3381 0475                                           l3365 02EB  
                                         l3357 02E2                                           l3349 02D7  
                                         l3605 0359                                           l3615 0109  
                                         l3607 00E1                                           l3375 0428  
                                         l3383 0478                                           l3367 02ED  
                                         l3359 02E4                                           l3391 02F5  
                                         l3617 0112                                           l3609 00F5  
                                         l3377 042A                                           l3385 0479  
                                         l3369 02EE                                           l3289 0483  
                                         l3393 02F7                                           l3619 011C  
                                         l3379 042D                                           l3395 02F9  
                                         l3387 04C1                                           l3563 033D  
                                         l3397 02FA                                           l3389 02F3  
                                         l3399 02FE                                           l3837 0405  
                                         l3839 040B                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _LATE 0110                                           i1l92 03A4  
                                         i1l95 0393                                           i1l98 0382  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 0078                                           _main 0405  
                     ?_I2C_CallbackReturnReset 0077                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0057                     ??_TMR1_SetInterruptHandler 0070  
                                _I2C_DO_RX_ACK 049E                  __end_of_OSCILLATOR_Initialize 047C  
                                        ?_main 0070                                          _T1CON 0018  
                                        i1l101 03B5                                          i1l104 033C  
                                        i1l305 03D2                                          i1l402 04B1  
                                        i1l411 04A2                                          i1l331 04C8  
                                        i1l308 041B                                          i1l420 0493  
                                        i1l501 04DE                                          i1l341 0464  
                                        i1l405 04AC                                          i1l350 00E0  
                                        i1l414 049D                                          i1l335 0248  
                                        i1l328 0294                                          i1l344 0474  
                                        i1l408 04A7                                          i1l417 0498  
                                        i1l434 04EE                                          i1l338 04BB  
                                        i1l426 0270                                          i1l347 00C4  
                                        i1l363 014E                                          i1l364 0174  
                                        i1l532 001B                                          i1l437 04EC  
                                        i1l453 04E1                                          i1l381 0220  
                                        i1l534 002C                                          i1l471 04E7  
                                        i1l375 0482                                          i1l543 0055  
                                        i1l480 04D0                                          i1l456 04C0  
                                        i1l536 003C                                          i1l465 04E4  
                                        i1l537 0055                                          i1l474 048E  
                                        i1l730 0371                                          i1l538 0047  
                                        i1l459 04EA                                          i1l652 02B6  
                                        i1l477 04CC                                          i1l742 03DF  
                                        i1l663 0324                                          i1l399 04B6  
                                        i1l672 04D8                                          i1l752 04EF  
                                        i1l649 02B4                                          i1l666 04F0  
                                        i1l498 04DB                                          i1l746 03EC  
                                        i1l659 01F3                                          i1l669 04D4  
                                        i1l988 0425                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                              ??_I2C_DO_TX_EMPTY 0078  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _TRISE 0090  
                                        u83_20 0278                                          u83_21 0277  
                                        u84_20 03CB                                          u84_21 03CA  
                                        u97_20 0096                                          u97_21 0095  
                                        _TXREG 019A                                          u98_20 00DD  
                                        u98_21 00DC                                          u99_20 0149  
                                        u99_21 0148                                          _TXSTA 019E  
                                        _SW_Ad 005C                               __end_of_TMR1_ISR 03E0  
                            __end_of_I2C_DO_RX 0175                              __end_of_I2C_DO_TX 00E1  
                               _WDT_Initialize 04C1                        _I2C_MasterEnableRestart 04E8  
                      __end_of_TMR1_Initialize 030C                                          pclath 000A  
                             ?_I2C_SetCallback 0070                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                              _TMR1_WriteTimer 0361                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 0059                                   __end_of_main 0411  
                    ?_I2C_DO_SEND_RESTART_READ 0070                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0070  
                                       ??_main 0070                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 04C5                             ??_I2C_MasterSetIrq 0070  
    __end_of_EUSART_DefaultFramingErrorHandler 04F1            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 04F0  
                   _EUSART_OverrunErrorHandler 00D6                __end_of_I2C_CallbackReturnReset 04ED  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       u102_20 031F                                         u102_21 031E  
                      TMR1_WriteTimer@timerVal 0070                                         i1l3101 045C  
                                       i1l3103 045E                                         i1l3111 046F  
                                       u112_20 0229                                         i1l3201 0200  
                                       i1l3105 0463                                         i1l3113 0473  
                                       i1l3121 0097                                         u112_21 0228  
                                       i1l3109 046D                                         i1l3141 00DD  
                                       i1l3125 009B                                         i1l3117 008E  
                                       i1l3213 049E                                         i1l3221 0491  
                                       i1l3207 0204                                         i1l3143 00DF  
                                       i1l3135 00A3                                         i1l3151 0132  
                                       i1l3215 04A1                                         i1l3223 0492  
                                       i1l3231 024E                                         u113_20 0231  
                                       i1l3137 00C6                                         i1l3129 009F  
                                       i1l3153 013A                                         i1l3241 0256  
                                       u113_21 0230                                         i1l3139 00D2  
                                       i1l3155 013F                                         i1l3219 048F  
                                       i1l3235 0252                                         i1l3227 0249  
                                       i1l3091 04D9                                         i1l3093 04B7  
                                       i1l3165 0150                                         i1l3157 0149  
                                       i1l3181 047C                                         i1l3229 024B  
                                       i1l3191 01F7                                         i1l3095 04B9  
                                       i1l3175 0158                                         i1l3159 014C  
                                       i1l3183 047E                                         i1l3327 041C  
                                       u114_20 0366                                         i1l3281 0314  
                                       i1l3601 01F0                                         i1l3097 04BA  
                                       i1l3169 0154                                         i1l3185 0481  
                                       i1l3441 0229                                         u114_21 0365  
                                       i1l3283 0319                                         i1l2811 0278  
                                       i1l3195 01FB                                         i1l3443 0231  
                                       i1l3451 0361                                         i1l3285 031F  
                                       i1l2821 03D1                                         i1l2813 0287  
                                       i1l3197 01FE                                         i1l3189 01F4  
                                       i1l3445 0234                                         i1l3437 0221  
                                       i1l3453 0366                                         i1l3461 036D  
                                       i1l3287 0320                                         i1l3279 030C  
                                       i1l3447 04D1                                         i1l2815 0411  
                                       i1l2831 0394                                         i1l2911 04BD  
                                       i1l3439 0224                                         i1l3463 036F  
                                       i1l3455 0367                                         u115_20 03E7  
                                       i1l3449 04D5                                         i1l2825 04E8  
                                       i1l2817 03C6                                         i1l2809 0272  
                                       i1l2833 039C                                         i1l2841 038B  
                                       i1l2913 04B2                                         i1l2921 04B0  
                                       u115_21 03E6                                         i1l3465 03E0  
                                       i1l3457 0369                                         i1l3571 0295  
                                       i1l2827 04E5                                         i1l2819 03CB  
                                       i1l2835 03A3                                         i1l2843 0392  
                                       i1l2851 0381                                         i1l2931 04DF  
                                       i1l2907 0489                                         i1l2915 04B5  
                                       i1l3467 03E7                                         i1l3459 036B  
                                       i1l3811 0006                                         i1l3581 02AF  
                                       i1l3573 029C                                         i1l2829 04CD  
                                       i1l2925 04A3                                         i1l3565 04C5  
                                       i1l3821 0025                                         i1l3813 000A  
                                       i1l3591 01CE                                         i1l3583 01B7  
                                       i1l3575 02A3                                         i1l2855 03A5  
                                       i1l2839 0383                                         i1l2847 0372  
                                       i1l2863 0325                                         i1l2935 04C9  
                                       i1l2919 04AD                                         i1l2951 04A8  
                                       i1l2927 04A6                                         i1l2943 0499  
                                       i1l3567 03D3                                         i1l3831 004C  
                                       i1l3823 0031                                         i1l3815 000F  
                                       u124_20 029C                                         i1l3593 01D3  
                                       i1l3585 01BD                                         i1l3577 02A8  
                                       u124_21 029B                                         i1l2857 03AD  
                                       i1l2849 037A                                         i1l2865 033B  
                                       i1l2953 04AB                                         i1l2945 049C  
                                       i1l2937 0494                                         i1l3569 03D5  
                                       i1l3833 0051                                         i1l3825 0036  
                                       i1l3817 0014                                         i1l3595 01D9  
                                       i1l3587 01C2                                         i1l3579 02AE  
                                       i1l2859 03B4                                         i1l2963 04EB  
                                       i1l2939 0497                                         i1l3827 0041  
                                       i1l3819 0020                                         i1l3597 01DF  
                                       i1l3589 01C8                                         i1l2949 04E2  
                                       i1l2957 04DC                                         i1l3599 01E9  
                                       i1l2959 04ED                                         u125_20 02AE  
                                       u125_21 02AD                                         i1l3971 00B6  
                                       i1l3973 0212                                         i1l3967 0268  
                                       u126_20 01C2                                         u150_20 0014  
                                       u126_21 01C1                                         i1l3969 0166  
                                       u150_21 0013                                         u127_20 01D3  
                                       u151_20 0020                                         u127_21 01D2  
                                       u151_21 001F                                         u128_20 01E9  
                                       u152_20 0025                                         u128_21 01E8  
                                       u152_21 0024                                         u153_20 0031  
                                       u153_21 0030                                         u154_20 0036  
                                       u154_21 0035                                         u155_20 0041  
                                       u155_21 0040                                         u156_20 0046  
                                       u148_20 000A                                         u156_21 0045  
                                       u148_21 0009                                         u157_20 004C  
                                       u149_20 000F                                         u157_21 004B  
                                       u149_21 000E                                         u158_20 0051  
                                       u158_21 0050                                         _MB_UID 00DE  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                          _I2C_MasterGetRxData 04DF           __end_of_TMR1_DefaultInterruptHandler 04F0  
                 _TMR1_DefaultInterruptHandler 04EF                                  _I2C_MasterFsm 0221  
                                _I2C_MasterIsr 04C5                            _EUSART_Transmit_ISR 0295  
                            I2C_SetCallback@cb 0070                                  _I2C_SetBuffer 03C5  
                          _I2C_DO_ADDRESS_NACK 0249                           ?_I2C_MasterGetRxData 0070  
                                 ?_rtcc_handle 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070       TMR1_SetInterruptHandler@InterruptHandler 006E  
                      __end_of_TMR1_WriteTimer 0372                           ?_EUSART_Transmit_ISR 0070  
                        __end_of_TMR1_CallBack 03ED                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 033D                        __end_of__initialization 008A  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
         __end_of_EUSART_SetTxInterruptHandler 0438                   _EUSART_SetTxInterruptHandler 042F  
                      _rdBlkRegCompleteHandler 0325                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK0 03B6  
                       _I2C_CallbackReturnStop 04ED                            ??_SYSTEM_Initialize 0070  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                         __end_of_fctsupported 046D                                 ?_I2C_SetBuffer 0070  
                __end_of_I2C_DO_SEND_ADR_WRITE 0475                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 00A0                     __end_of_I2C_MasterClearIrq 04DC  
              ??_EUSART_SetOverrunErrorHandler 0070                      __end_of_SYSTEM_Initialize 0350  
                        ??_EUSART_Transmit_ISR 0070                              _I2C_MasterSendAck 04C9  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                ??_I2C_DO_IDLE 0070                                  ??_I2C_DO_RCEN 0070  
                __end_of_rd2RegCompleteHandler 0394                   __end_of_I2C_MasterSendTxData 04C1  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 04E2  
                        ??_I2C_DO_ADDRESS_NACK 0078                  __end_of_wr2RegCompleteHandler 03B6  
                         Task_MB@f_Modbus_Init 0051                            _I2C_DO_RX_NACK_STOP 0499  
                        _rd1RegCompleteHandler 0394                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 04D1                          _wr1RegCompleteHandler 0372  
                                   __pmaintext 0405                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0077                  ?_EUSART_SetTxInterruptHandler 006E  
             _EUSART_TxDefaultInterruptHandler 00DC                    __end_of_I2C_DO_SEND_RESTART 04AD  
                              _I2C_DO_TX_EMPTY 01F4                            I2C_SetBuffer@buffer 0072  
                                   ??_TMR1_ISR 0072                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0070                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0071                 I2C_SetDataCompleteCallback@ptr 0076  
                     ??_I2C_DO_RX_NACK_RESTART 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 04B2  
                         ?_I2C_DO_RX_NACK_STOP 0070                                  _eusartRxCount 007C  
                    __end_of_I2C_MasterSendAck 04CD                                        _OSCTUNE 0098  
                             _ModbusSlave_Init 00E1                       ??_EUSART_SetErrorHandler 0070  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                               ?_TMR1_WriteTimer 0070  
                    __end_of_I2C_MasterStartRx 04E5                   ?_I2C_SetDataCompleteCallback 0074  
                                    _I2C_DO_RX 0132                                      _I2C_DO_TX 008E  
             __end_of_I2C_DO_SEND_RESTART_READ 04B7                      ??_rdBlkRegCompleteHandler 0078  
                              ??_I2C_MasterFsm 007A                                ??_I2C_MasterIsr 007C  
                          __end_of_I2C_DO_IDLE 04BC                            __end_of_I2C_DO_RCEN 0483  
                              ??_I2C_SetBuffer 0072                        I2C_SetBuffer@bufferSize 0070  
                                  _Temperature 005A                                 _I2C_MasterStop 04E5  
                               _I2C_Initialize 0426                                        __ptext1 0350  
                                      __ptext2 033D                                        __ptext3 04C1  
                                      __ptext4 02F3                                        __ptext5 0483  
                                      __ptext6 02D7                                        __ptext7 0475  
                                      __ptext8 0426                                        __ptext9 0175  
                        ??_I2C_DO_RX_NACK_STOP 0070                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0475  
                           I2C_SetCallback@idx 0073                       ??_PIN_MANAGER_Initialize 006E  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 006E  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 0065                                        clrloop0 03FA  
                   _SHT30_CMD_MEASURE_L_Enable 0061                           end_of_initialization 008A  
                   _SHT30_CMD_MEASURE_M_Enable 0063                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 044A  
                _EUSART_SetOverrunErrorHandler 0441                                        init_ram 03ED  
                       ?_rd1RegCompleteHandler 0077                                        initloop 03EE  
                      __end_of_I2C_DO_TX_EMPTY 0221                              _EUSART_Initialize 0175  
                  _SHT30_CMD_MEASURE_H_Disable 006A                         ?_wr1RegCompleteHandler 0077  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                _Tick_Init_SES 0350                         __end_of_I2C_MasterStop 04E8  
                       __end_of_I2C_Initialize 042F                    _SHT30_CMD_MEASURE_L_Disable 005D  
                  _SHT30_CMD_MEASURE_M_Disable 005F                            ??_EUSART_Initialize 0070  
                             ??_WDT_Initialize 006E                 ??_EUSART_SetTxInterruptHandler 0070  
                                    _PORTAbits 000C                __end_of_rdBlkRegCompleteHandler 033D  
                         _I2C_MasterSendTxData 04BC                                    _f_Indicator 0052  
                                 _fctsupported 0465                      __end_of_EUSART_Initialize 01B7  
                                  _I2C_DO_IDLE 04B7                                    _I2C_DO_RCEN 047C  
                   rdBlkRegCompleteHandler@ptr 0077                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 04B2  
                               ?_Tick_Init_SES 0070                   I2C_CallbackReturnStop@funPtr 0077  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 04EB             __end_of_EUSART_DefaultErrorHandler 04D9  
                   _EUSART_DefaultErrorHandler 04D5                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 0059                                  ?_I2C_DO_RESET 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 006E   EUSART_SetTxInterruptHandler@interruptHandler 006E  
                                  ??_I2C_DO_RX 0078                                    ??_I2C_DO_TX 0078  
               __end_of_I2C_CallbackReturnStop 04EF                         _I2C_DO_RX_NACK_RESTART 0494  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 04D9  
                                    __Humidity 0045                 ?_EUSART_SetOverrunErrorHandler 006E  
                   _EUSART_FramingErrorHandler 00D8                       __end_of_ModbusSlave_Init 0132  
                            Device_Init@pWS_Ad 0067                         _EUSART_SetErrorHandler 0453  
                          ?_I2C_MasterClearIrq 0070                    __end_of_I2C_MasterGetRxData 04E2  
                                  __pdataBANK0 005D                          __end_of_I2C_DO_RX_ACK 04A3  
                             _I2C_DO_SEND_STOP 04A3                              ??_I2C_SetCallback 0073  
                           _I2C_MasterSendNack 04CD                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 02B7                                    __pbssBIGRAM 20D4  
                  __end_of_EUSART_Transmit_ISR 02B7                          _I2C_DO_SEND_ADR_WRITE 046D  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 006E                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 0465  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 0271  
                   __end_of_EUSART_Receive_ISR 01F4                               _I2C_MasterIsNack 0489  
                    _I2C_DO_SEND_RESTART_WRITE 04AD               _EUSART_RxDefaultInterruptHandler 00DA  
                             _I2C_MasterSetIrq 04DC                                      __pnvBANK0 006C  
                                    __pnvBANK1 00D4                          _rd2RegCompleteHandler 0383  
                              ??_Tick_Init_SES 0070                   __end_of_EUSART_RxDataHandler 0325  
                       _PIN_MANAGER_Initialize 02D7                          _wr2RegCompleteHandler 03A5  
                    ??_I2C_CallbackReturnReset 0078                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 0489  
                                 _eusartRxHead 0054                                   _eusartTxHead 0057  
                                 _eusartRxTail 007D                         ??_I2C_MasterSendTxData 0070  
                                 _eusartTxTail 0056                      __end_of_i2c_fsmStateTable 02D7  
                 ??_INTERRUPT_InterruptManager 007C                        _eusartTxBufferRemaining 0055  
                                  _device_time 003D                        ??_rd1RegCompleteHandler 0078  
                               _eusartRxBuffer 00B0                        ??_wr1RegCompleteHandler 0078  
                                _TMR1_CallBack 03E0                                 _eusartTxBuffer 00C0  
       EUSART_SetErrorHandler@interruptHandler 006E                                       _LATCbits 010E  
                                    clear_ram0 03F9                                       _PIE1bits 0091  
                                     _PIE2bits 0092                              _eusartRxLastError 0053  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0070  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 0249  
                        __end_of_I2C_MasterIsr 04C9                    __end_of_I2C_DO_RX_NACK_STOP 049E  
    __end_of_EUSART_DefaultOverrunErrorHandler 04D5            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 04D1  
                                     _TMR1_ISR 03D3                __end_of_I2C_MasterEnableRestart 04EB  
                        __end_of_I2C_SetBuffer 03D3                              ??_TMR1_Initialize 0070  
                       ?_I2C_DO_SEND_ADR_WRITE 0070                       I2C_MasterSendTxData@data 0070  
                                ??_rtcc_handle 0070                       wr2RegCompleteHandler@ptr 0077  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0077  
                               ?_TMR1_CallBack 0070                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                                       _Humidity 0058  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 006E                           __end_of_I2C_DO_RESET 0494  
                      ??_OSCILLATOR_Initialize 006E                            _EUSART_ErrorHandler 00D4  
                         _I2C_DO_SEND_ADR_READ 045C                    ?_EUSART_DefaultErrorHandler 0070  
                     _TMR1_SetInterruptHandler 0483                          _TMR1_InterruptHandler 006C  
                         _EUSART_RxDataHandler 030C                                       __ptext10 042F  
                                     __ptext11 0438                                       __ptext20 04EF  
                                     __ptext12 0441                                       __ptext21 041C  
                                     __ptext13 044A                                     _T1GCONbits 0019  
                                     __ptext30 04A3                                       __ptext22 04C5  
                                     __ptext14 0453                                       __ptext31 04A8  
                                     __ptext23 0221                                       __ptext15 00E1  
                                     __ptext40 01F4                                       __ptext32 04AD  
                                     __ptext24 04D9                                       __ptext41 04DC  
                                     __ptext33 04B2                                       __ptext25 0249  
                                     __ptext17 03D3                                       __ptext50 0325  
                                     __ptext42 0489                                       __ptext34 047C  
                                     __ptext26 048F                                       __ptext18 0361  
                                     __ptext51 0372                                       __ptext43 04BC  
                                     __ptext35 0132                                       __ptext27 0494  
                                     __ptext19 03E0                                       __ptext60 0295  
                                     __ptext52 0383                                       __ptext44 04C9  
                                     __ptext36 008E                                       __ptext28 0499  
                                     __ptext61 01B7                                       __ptext53 0394  
                                     __ptext45 04DF                                       __ptext37 046D  
                                     __ptext29 049E                                       __ptext62 04D1  
                                     __ptext54 03A5                                       __ptext46 04CD  
                                     __ptext38 045C                                       __ptext63 04F0  
                                     __ptext55 0411                                       __ptext47 04E2  
                                     __ptext39 04B7                                       __ptext64 04D5  
                                     __ptext56 0271                                       __ptext48 04EB  
                                     __ptext65 030C                                       __ptext57 03C5  
                                     __ptext49 04ED                                       __ptext58 04E5  
                                     __ptext59 04E8            __end_of_I2C_SetDataCompleteCallback 041C  
                  _I2C_SetDataCompleteCallback 0411                        ?_I2C_DO_RX_NACK_RESTART 0070  
                                 __Temperature 0047                            __end_of_rtcc_handle 0426  
                     __end_of_I2C_DO_SEND_STOP 04A8                        ?_EUSART_SetErrorHandler 006E  
                              _I2C_SetCallback 0271                  ??_I2C_SetDataCompleteCallback 0077  
EUSART_SetOverrunErrorHandler@interruptHandler 006E                                    _MB_Register 00D0  
                                     int$flags 007E                              ?_ModbusSlave_Init 0070  
                        ?_I2C_DO_SEND_ADR_READ 0070             __end_of_INTERRUPT_InterruptManager 0057  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0453  
                _EUSART_SetFramingErrorHandler 044A                              ??_TMR1_WriteTimer 0072  
                           ??_ModbusSlave_Init 006E                       __end_of_I2C_MasterIsNack 048F  
                     __end_of_I2C_MasterSetIrq 04DF                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 0499  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 045C  
                          _I2C_DO_SEND_RESTART 04A8           __end_of_EUSART_SetRxInterruptHandler 0441  
                 _EUSART_SetRxInterruptHandler 0438                           Device_Init@value_SW1 0050  
                         Device_Init@value_SW2 004F                           Device_Init@value_SW3 004E  
                         Device_Init@value_SW4 004D                             _EUSART_Receive_ISR 01B7  
EUSART_SetFramingErrorHandler@interruptHandler 006E                                  __pstringtext1 02B7  
                                __pstringtext2 0465                           ?_I2C_DO_SEND_RESTART 0070  
                          ?_EUSART_Receive_ISR 0070                                    _rtcc_handle 041C  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                                   _SES_Modbus 20D4                        __end_of_I2C_SetCallback 0295  
               __end_of_PIN_MANAGER_Initialize 02F3                  __end_of_rd1RegCompleteHandler 03A5  
                            Task_Sensor@_pHumi 0068                              Task_Sensor@_pTemp 0069  
                         ??_EUSART_Receive_ISR 0071                  __end_of_wr1RegCompleteHandler 0383  
                        _MSSP_InterruptHandler 004B                                _TMR1_Initialize 02F3  
                           Task_Sensor@valTime 0041                          __end_of_Tick_Init_SES 0361  
