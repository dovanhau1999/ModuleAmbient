

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Apr 28 10:17:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	intentry,global,class=CODE,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   130                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   131                           	dabs	1,0x320,16
   132                           	dabs	1,0x2A0,80
   133                           	dabs	1,0x220,80
   134                           	dabs	1,0x1E8,8
   135                           	dabs	1,0x2138,0,_SES_Modbus
   136                           	dabs	1,0x7E,2
   137     0000                     
   138                           ; Version 2.40
   139                           ; Generated 17/11/2021 GMT
   140                           ; 
   141                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   142                           ; All rights reserved.
   143                           ; 
   144                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   145                           ; 
   146                           ; Redistribution and use in source and binary forms, with or without modification, are
   147                           ; permitted provided that the following conditions are met:
   148                           ; 
   149                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   150                           ;        conditions and the following disclaimer.
   151                           ; 
   152                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   153                           ;        of conditions and the following disclaimer in the documentation and/or other
   154                           ;        materials provided with the distribution. Publication is not required when
   155                           ;        this file is used in an embedded application.
   156                           ; 
   157                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   158                           ;        software without specific prior written permission.
   159                           ; 
   160                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   161                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   162                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   163                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   164                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   165                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   166                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   167                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   168                           ; 
   169                           ; 
   170                           ; Code-generator required, PIC16F1936 Definitions
   171                           ; 
   172                           ; SFR Addresses
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     0010                     	;# 
   189     0011                     	;# 
   190     0012                     	;# 
   191     0013                     	;# 
   192     0015                     	;# 
   193     0016                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001C                     	;# 
   201     001E                     	;# 
   202     001F                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     0090                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     0110                     	;# 
   225     0111                     	;# 
   226     0112                     	;# 
   227     0113                     	;# 
   228     0114                     	;# 
   229     0115                     	;# 
   230     0116                     	;# 
   231     0117                     	;# 
   232     0118                     	;# 
   233     0119                     	;# 
   234     011A                     	;# 
   235     011B                     	;# 
   236     011D                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0191                     	;# 
   240     0191                     	;# 
   241     0192                     	;# 
   242     0193                     	;# 
   243     0193                     	;# 
   244     0193                     	;# 
   245     0194                     	;# 
   246     0195                     	;# 
   247     0196                     	;# 
   248     0199                     	;# 
   249     019A                     	;# 
   250     019B                     	;# 
   251     019B                     	;# 
   252     019B                     	;# 
   253     019B                     	;# 
   254     019C                     	;# 
   255     019C                     	;# 
   256     019D                     	;# 
   257     019E                     	;# 
   258     019F                     	;# 
   259     020D                     	;# 
   260     0210                     	;# 
   261     0211                     	;# 
   262     0212                     	;# 
   263     0213                     	;# 
   264     0214                     	;# 
   265     0215                     	;# 
   266     0215                     	;# 
   267     0216                     	;# 
   268     0217                     	;# 
   269     0291                     	;# 
   270     0291                     	;# 
   271     0292                     	;# 
   272     0293                     	;# 
   273     0294                     	;# 
   274     0295                     	;# 
   275     0295                     	;# 
   276     0296                     	;# 
   277     0298                     	;# 
   278     0298                     	;# 
   279     0299                     	;# 
   280     029A                     	;# 
   281     029B                     	;# 
   282     029C                     	;# 
   283     029C                     	;# 
   284     029D                     	;# 
   285     029E                     	;# 
   286     029F                     	;# 
   287     0311                     	;# 
   288     0311                     	;# 
   289     0312                     	;# 
   290     0313                     	;# 
   291     0314                     	;# 
   292     0315                     	;# 
   293     0315                     	;# 
   294     0316                     	;# 
   295     0318                     	;# 
   296     0318                     	;# 
   297     0319                     	;# 
   298     031A                     	;# 
   299     031C                     	;# 
   300     031C                     	;# 
   301     031D                     	;# 
   302     031E                     	;# 
   303     0394                     	;# 
   304     0395                     	;# 
   305     0396                     	;# 
   306     0415                     	;# 
   307     0416                     	;# 
   308     0417                     	;# 
   309     041C                     	;# 
   310     041D                     	;# 
   311     041E                     	;# 
   312     0791                     	;# 
   313     0792                     	;# 
   314     0793                     	;# 
   315     0794                     	;# 
   316     0795                     	;# 
   317     0798                     	;# 
   318     0799                     	;# 
   319     07A0                     	;# 
   320     07A1                     	;# 
   321     07A3                     	;# 
   322     07A4                     	;# 
   323     07A6                     	;# 
   324     07A7                     	;# 
   325     07A9                     	;# 
   326     07AA                     	;# 
   327     0FE4                     	;# 
   328     0FE5                     	;# 
   329     0FE6                     	;# 
   330     0FE7                     	;# 
   331     0FE8                     	;# 
   332     0FE9                     	;# 
   333     0FEA                     	;# 
   334     0FEB                     	;# 
   335     0FED                     	;# 
   336     0FEE                     	;# 
   337     0FEF                     	;# 
   338     0000                     	;# 
   339     0001                     	;# 
   340     0002                     	;# 
   341     0003                     	;# 
   342     0004                     	;# 
   343     0005                     	;# 
   344     0006                     	;# 
   345     0007                     	;# 
   346     0008                     	;# 
   347     0009                     	;# 
   348     000A                     	;# 
   349     000B                     	;# 
   350     000C                     	;# 
   351     000D                     	;# 
   352     000E                     	;# 
   353     0010                     	;# 
   354     0011                     	;# 
   355     0012                     	;# 
   356     0013                     	;# 
   357     0015                     	;# 
   358     0016                     	;# 
   359     0016                     	;# 
   360     0017                     	;# 
   361     0018                     	;# 
   362     0019                     	;# 
   363     001A                     	;# 
   364     001B                     	;# 
   365     001C                     	;# 
   366     001E                     	;# 
   367     001F                     	;# 
   368     008C                     	;# 
   369     008D                     	;# 
   370     008E                     	;# 
   371     0090                     	;# 
   372     0091                     	;# 
   373     0092                     	;# 
   374     0093                     	;# 
   375     0095                     	;# 
   376     0096                     	;# 
   377     0097                     	;# 
   378     0098                     	;# 
   379     0099                     	;# 
   380     009A                     	;# 
   381     009B                     	;# 
   382     009B                     	;# 
   383     009C                     	;# 
   384     009D                     	;# 
   385     009E                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     0110                     	;# 
   390     0111                     	;# 
   391     0112                     	;# 
   392     0113                     	;# 
   393     0114                     	;# 
   394     0115                     	;# 
   395     0116                     	;# 
   396     0117                     	;# 
   397     0118                     	;# 
   398     0119                     	;# 
   399     011A                     	;# 
   400     011B                     	;# 
   401     011D                     	;# 
   402     018C                     	;# 
   403     018D                     	;# 
   404     0191                     	;# 
   405     0191                     	;# 
   406     0192                     	;# 
   407     0193                     	;# 
   408     0193                     	;# 
   409     0193                     	;# 
   410     0194                     	;# 
   411     0195                     	;# 
   412     0196                     	;# 
   413     0199                     	;# 
   414     019A                     	;# 
   415     019B                     	;# 
   416     019B                     	;# 
   417     019B                     	;# 
   418     019B                     	;# 
   419     019C                     	;# 
   420     019C                     	;# 
   421     019D                     	;# 
   422     019E                     	;# 
   423     019F                     	;# 
   424     020D                     	;# 
   425     0210                     	;# 
   426     0211                     	;# 
   427     0212                     	;# 
   428     0213                     	;# 
   429     0214                     	;# 
   430     0215                     	;# 
   431     0215                     	;# 
   432     0216                     	;# 
   433     0217                     	;# 
   434     0291                     	;# 
   435     0291                     	;# 
   436     0292                     	;# 
   437     0293                     	;# 
   438     0294                     	;# 
   439     0295                     	;# 
   440     0295                     	;# 
   441     0296                     	;# 
   442     0298                     	;# 
   443     0298                     	;# 
   444     0299                     	;# 
   445     029A                     	;# 
   446     029B                     	;# 
   447     029C                     	;# 
   448     029C                     	;# 
   449     029D                     	;# 
   450     029E                     	;# 
   451     029F                     	;# 
   452     0311                     	;# 
   453     0311                     	;# 
   454     0312                     	;# 
   455     0313                     	;# 
   456     0314                     	;# 
   457     0315                     	;# 
   458     0315                     	;# 
   459     0316                     	;# 
   460     0318                     	;# 
   461     0318                     	;# 
   462     0319                     	;# 
   463     031A                     	;# 
   464     031C                     	;# 
   465     031C                     	;# 
   466     031D                     	;# 
   467     031E                     	;# 
   468     0394                     	;# 
   469     0395                     	;# 
   470     0396                     	;# 
   471     0415                     	;# 
   472     0416                     	;# 
   473     0417                     	;# 
   474     041C                     	;# 
   475     041D                     	;# 
   476     041E                     	;# 
   477     0791                     	;# 
   478     0792                     	;# 
   479     0793                     	;# 
   480     0794                     	;# 
   481     0795                     	;# 
   482     0798                     	;# 
   483     0799                     	;# 
   484     07A0                     	;# 
   485     07A1                     	;# 
   486     07A3                     	;# 
   487     07A4                     	;# 
   488     07A6                     	;# 
   489     07A7                     	;# 
   490     07A9                     	;# 
   491     07AA                     	;# 
   492     0FE4                     	;# 
   493     0FE5                     	;# 
   494     0FE6                     	;# 
   495     0FE7                     	;# 
   496     0FE8                     	;# 
   497     0FE9                     	;# 
   498     0FEA                     	;# 
   499     0FEB                     	;# 
   500     0FED                     	;# 
   501     0FEE                     	;# 
   502     0FEF                     	;# 
   503     0000                     	;# 
   504     0001                     	;# 
   505     0002                     	;# 
   506     0003                     	;# 
   507     0004                     	;# 
   508     0005                     	;# 
   509     0006                     	;# 
   510     0007                     	;# 
   511     0008                     	;# 
   512     0009                     	;# 
   513     000A                     	;# 
   514     000B                     	;# 
   515     000C                     	;# 
   516     000D                     	;# 
   517     000E                     	;# 
   518     0010                     	;# 
   519     0011                     	;# 
   520     0012                     	;# 
   521     0013                     	;# 
   522     0015                     	;# 
   523     0016                     	;# 
   524     0016                     	;# 
   525     0017                     	;# 
   526     0018                     	;# 
   527     0019                     	;# 
   528     001A                     	;# 
   529     001B                     	;# 
   530     001C                     	;# 
   531     001E                     	;# 
   532     001F                     	;# 
   533     008C                     	;# 
   534     008D                     	;# 
   535     008E                     	;# 
   536     0090                     	;# 
   537     0091                     	;# 
   538     0092                     	;# 
   539     0093                     	;# 
   540     0095                     	;# 
   541     0096                     	;# 
   542     0097                     	;# 
   543     0098                     	;# 
   544     0099                     	;# 
   545     009A                     	;# 
   546     009B                     	;# 
   547     009B                     	;# 
   548     009C                     	;# 
   549     009D                     	;# 
   550     009E                     	;# 
   551     010C                     	;# 
   552     010D                     	;# 
   553     010E                     	;# 
   554     0110                     	;# 
   555     0111                     	;# 
   556     0112                     	;# 
   557     0113                     	;# 
   558     0114                     	;# 
   559     0115                     	;# 
   560     0116                     	;# 
   561     0117                     	;# 
   562     0118                     	;# 
   563     0119                     	;# 
   564     011A                     	;# 
   565     011B                     	;# 
   566     011D                     	;# 
   567     018C                     	;# 
   568     018D                     	;# 
   569     0191                     	;# 
   570     0191                     	;# 
   571     0192                     	;# 
   572     0193                     	;# 
   573     0193                     	;# 
   574     0193                     	;# 
   575     0194                     	;# 
   576     0195                     	;# 
   577     0196                     	;# 
   578     0199                     	;# 
   579     019A                     	;# 
   580     019B                     	;# 
   581     019B                     	;# 
   582     019B                     	;# 
   583     019B                     	;# 
   584     019C                     	;# 
   585     019C                     	;# 
   586     019D                     	;# 
   587     019E                     	;# 
   588     019F                     	;# 
   589     020D                     	;# 
   590     0210                     	;# 
   591     0211                     	;# 
   592     0212                     	;# 
   593     0213                     	;# 
   594     0214                     	;# 
   595     0215                     	;# 
   596     0215                     	;# 
   597     0216                     	;# 
   598     0217                     	;# 
   599     0291                     	;# 
   600     0291                     	;# 
   601     0292                     	;# 
   602     0293                     	;# 
   603     0294                     	;# 
   604     0295                     	;# 
   605     0295                     	;# 
   606     0296                     	;# 
   607     0298                     	;# 
   608     0298                     	;# 
   609     0299                     	;# 
   610     029A                     	;# 
   611     029B                     	;# 
   612     029C                     	;# 
   613     029C                     	;# 
   614     029D                     	;# 
   615     029E                     	;# 
   616     029F                     	;# 
   617     0311                     	;# 
   618     0311                     	;# 
   619     0312                     	;# 
   620     0313                     	;# 
   621     0314                     	;# 
   622     0315                     	;# 
   623     0315                     	;# 
   624     0316                     	;# 
   625     0318                     	;# 
   626     0318                     	;# 
   627     0319                     	;# 
   628     031A                     	;# 
   629     031C                     	;# 
   630     031C                     	;# 
   631     031D                     	;# 
   632     031E                     	;# 
   633     0394                     	;# 
   634     0395                     	;# 
   635     0396                     	;# 
   636     0415                     	;# 
   637     0416                     	;# 
   638     0417                     	;# 
   639     041C                     	;# 
   640     041D                     	;# 
   641     041E                     	;# 
   642     0791                     	;# 
   643     0792                     	;# 
   644     0793                     	;# 
   645     0794                     	;# 
   646     0795                     	;# 
   647     0798                     	;# 
   648     0799                     	;# 
   649     07A0                     	;# 
   650     07A1                     	;# 
   651     07A3                     	;# 
   652     07A4                     	;# 
   653     07A6                     	;# 
   654     07A7                     	;# 
   655     07A9                     	;# 
   656     07AA                     	;# 
   657     0FE4                     	;# 
   658     0FE5                     	;# 
   659     0FE6                     	;# 
   660     0FE7                     	;# 
   661     0FE8                     	;# 
   662     0FE9                     	;# 
   663     0FEA                     	;# 
   664     0FEB                     	;# 
   665     0FED                     	;# 
   666     0FEE                     	;# 
   667     0FEF                     	;# 
   668     0000                     	;# 
   669     0001                     	;# 
   670     0002                     	;# 
   671     0003                     	;# 
   672     0004                     	;# 
   673     0005                     	;# 
   674     0006                     	;# 
   675     0007                     	;# 
   676     0008                     	;# 
   677     0009                     	;# 
   678     000A                     	;# 
   679     000B                     	;# 
   680     000C                     	;# 
   681     000D                     	;# 
   682     000E                     	;# 
   683     0010                     	;# 
   684     0011                     	;# 
   685     0012                     	;# 
   686     0013                     	;# 
   687     0015                     	;# 
   688     0016                     	;# 
   689     0016                     	;# 
   690     0017                     	;# 
   691     0018                     	;# 
   692     0019                     	;# 
   693     001A                     	;# 
   694     001B                     	;# 
   695     001C                     	;# 
   696     001E                     	;# 
   697     001F                     	;# 
   698     008C                     	;# 
   699     008D                     	;# 
   700     008E                     	;# 
   701     0090                     	;# 
   702     0091                     	;# 
   703     0092                     	;# 
   704     0093                     	;# 
   705     0095                     	;# 
   706     0096                     	;# 
   707     0097                     	;# 
   708     0098                     	;# 
   709     0099                     	;# 
   710     009A                     	;# 
   711     009B                     	;# 
   712     009B                     	;# 
   713     009C                     	;# 
   714     009D                     	;# 
   715     009E                     	;# 
   716     010C                     	;# 
   717     010D                     	;# 
   718     010E                     	;# 
   719     0110                     	;# 
   720     0111                     	;# 
   721     0112                     	;# 
   722     0113                     	;# 
   723     0114                     	;# 
   724     0115                     	;# 
   725     0116                     	;# 
   726     0117                     	;# 
   727     0118                     	;# 
   728     0119                     	;# 
   729     011A                     	;# 
   730     011B                     	;# 
   731     011D                     	;# 
   732     018C                     	;# 
   733     018D                     	;# 
   734     0191                     	;# 
   735     0191                     	;# 
   736     0192                     	;# 
   737     0193                     	;# 
   738     0193                     	;# 
   739     0193                     	;# 
   740     0194                     	;# 
   741     0195                     	;# 
   742     0196                     	;# 
   743     0199                     	;# 
   744     019A                     	;# 
   745     019B                     	;# 
   746     019B                     	;# 
   747     019B                     	;# 
   748     019B                     	;# 
   749     019C                     	;# 
   750     019C                     	;# 
   751     019D                     	;# 
   752     019E                     	;# 
   753     019F                     	;# 
   754     020D                     	;# 
   755     0210                     	;# 
   756     0211                     	;# 
   757     0212                     	;# 
   758     0213                     	;# 
   759     0214                     	;# 
   760     0215                     	;# 
   761     0215                     	;# 
   762     0216                     	;# 
   763     0217                     	;# 
   764     0291                     	;# 
   765     0291                     	;# 
   766     0292                     	;# 
   767     0293                     	;# 
   768     0294                     	;# 
   769     0295                     	;# 
   770     0295                     	;# 
   771     0296                     	;# 
   772     0298                     	;# 
   773     0298                     	;# 
   774     0299                     	;# 
   775     029A                     	;# 
   776     029B                     	;# 
   777     029C                     	;# 
   778     029C                     	;# 
   779     029D                     	;# 
   780     029E                     	;# 
   781     029F                     	;# 
   782     0311                     	;# 
   783     0311                     	;# 
   784     0312                     	;# 
   785     0313                     	;# 
   786     0314                     	;# 
   787     0315                     	;# 
   788     0315                     	;# 
   789     0316                     	;# 
   790     0318                     	;# 
   791     0318                     	;# 
   792     0319                     	;# 
   793     031A                     	;# 
   794     031C                     	;# 
   795     031C                     	;# 
   796     031D                     	;# 
   797     031E                     	;# 
   798     0394                     	;# 
   799     0395                     	;# 
   800     0396                     	;# 
   801     0415                     	;# 
   802     0416                     	;# 
   803     0417                     	;# 
   804     041C                     	;# 
   805     041D                     	;# 
   806     041E                     	;# 
   807     0791                     	;# 
   808     0792                     	;# 
   809     0793                     	;# 
   810     0794                     	;# 
   811     0795                     	;# 
   812     0798                     	;# 
   813     0799                     	;# 
   814     07A0                     	;# 
   815     07A1                     	;# 
   816     07A3                     	;# 
   817     07A4                     	;# 
   818     07A6                     	;# 
   819     07A7                     	;# 
   820     07A9                     	;# 
   821     07AA                     	;# 
   822     0FE4                     	;# 
   823     0FE5                     	;# 
   824     0FE6                     	;# 
   825     0FE7                     	;# 
   826     0FE8                     	;# 
   827     0FE9                     	;# 
   828     0FEA                     	;# 
   829     0FEB                     	;# 
   830     0FED                     	;# 
   831     0FEE                     	;# 
   832     0FEF                     	;# 
   833     0000                     	;# 
   834     0001                     	;# 
   835     0002                     	;# 
   836     0003                     	;# 
   837     0004                     	;# 
   838     0005                     	;# 
   839     0006                     	;# 
   840     0007                     	;# 
   841     0008                     	;# 
   842     0009                     	;# 
   843     000A                     	;# 
   844     000B                     	;# 
   845     000C                     	;# 
   846     000D                     	;# 
   847     000E                     	;# 
   848     0010                     	;# 
   849     0011                     	;# 
   850     0012                     	;# 
   851     0013                     	;# 
   852     0015                     	;# 
   853     0016                     	;# 
   854     0016                     	;# 
   855     0017                     	;# 
   856     0018                     	;# 
   857     0019                     	;# 
   858     001A                     	;# 
   859     001B                     	;# 
   860     001C                     	;# 
   861     001E                     	;# 
   862     001F                     	;# 
   863     008C                     	;# 
   864     008D                     	;# 
   865     008E                     	;# 
   866     0090                     	;# 
   867     0091                     	;# 
   868     0092                     	;# 
   869     0093                     	;# 
   870     0095                     	;# 
   871     0096                     	;# 
   872     0097                     	;# 
   873     0098                     	;# 
   874     0099                     	;# 
   875     009A                     	;# 
   876     009B                     	;# 
   877     009B                     	;# 
   878     009C                     	;# 
   879     009D                     	;# 
   880     009E                     	;# 
   881     010C                     	;# 
   882     010D                     	;# 
   883     010E                     	;# 
   884     0110                     	;# 
   885     0111                     	;# 
   886     0112                     	;# 
   887     0113                     	;# 
   888     0114                     	;# 
   889     0115                     	;# 
   890     0116                     	;# 
   891     0117                     	;# 
   892     0118                     	;# 
   893     0119                     	;# 
   894     011A                     	;# 
   895     011B                     	;# 
   896     011D                     	;# 
   897     018C                     	;# 
   898     018D                     	;# 
   899     0191                     	;# 
   900     0191                     	;# 
   901     0192                     	;# 
   902     0193                     	;# 
   903     0193                     	;# 
   904     0193                     	;# 
   905     0194                     	;# 
   906     0195                     	;# 
   907     0196                     	;# 
   908     0199                     	;# 
   909     019A                     	;# 
   910     019B                     	;# 
   911     019B                     	;# 
   912     019B                     	;# 
   913     019B                     	;# 
   914     019C                     	;# 
   915     019C                     	;# 
   916     019D                     	;# 
   917     019E                     	;# 
   918     019F                     	;# 
   919     020D                     	;# 
   920     0210                     	;# 
   921     0211                     	;# 
   922     0212                     	;# 
   923     0213                     	;# 
   924     0214                     	;# 
   925     0215                     	;# 
   926     0215                     	;# 
   927     0216                     	;# 
   928     0217                     	;# 
   929     0291                     	;# 
   930     0291                     	;# 
   931     0292                     	;# 
   932     0293                     	;# 
   933     0294                     	;# 
   934     0295                     	;# 
   935     0295                     	;# 
   936     0296                     	;# 
   937     0298                     	;# 
   938     0298                     	;# 
   939     0299                     	;# 
   940     029A                     	;# 
   941     029B                     	;# 
   942     029C                     	;# 
   943     029C                     	;# 
   944     029D                     	;# 
   945     029E                     	;# 
   946     029F                     	;# 
   947     0311                     	;# 
   948     0311                     	;# 
   949     0312                     	;# 
   950     0313                     	;# 
   951     0314                     	;# 
   952     0315                     	;# 
   953     0315                     	;# 
   954     0316                     	;# 
   955     0318                     	;# 
   956     0318                     	;# 
   957     0319                     	;# 
   958     031A                     	;# 
   959     031C                     	;# 
   960     031C                     	;# 
   961     031D                     	;# 
   962     031E                     	;# 
   963     0394                     	;# 
   964     0395                     	;# 
   965     0396                     	;# 
   966     0415                     	;# 
   967     0416                     	;# 
   968     0417                     	;# 
   969     041C                     	;# 
   970     041D                     	;# 
   971     041E                     	;# 
   972     0791                     	;# 
   973     0792                     	;# 
   974     0793                     	;# 
   975     0794                     	;# 
   976     0795                     	;# 
   977     0798                     	;# 
   978     0799                     	;# 
   979     07A0                     	;# 
   980     07A1                     	;# 
   981     07A3                     	;# 
   982     07A4                     	;# 
   983     07A6                     	;# 
   984     07A7                     	;# 
   985     07A9                     	;# 
   986     07AA                     	;# 
   987     0FE4                     	;# 
   988     0FE5                     	;# 
   989     0FE6                     	;# 
   990     0FE7                     	;# 
   991     0FE8                     	;# 
   992     0FE9                     	;# 
   993     0FEA                     	;# 
   994     0FEB                     	;# 
   995     0FED                     	;# 
   996     0FEE                     	;# 
   997     0FEF                     	;# 
   998     0000                     	;# 
   999     0001                     	;# 
  1000     0002                     	;# 
  1001     0003                     	;# 
  1002     0004                     	;# 
  1003     0005                     	;# 
  1004     0006                     	;# 
  1005     0007                     	;# 
  1006     0008                     	;# 
  1007     0009                     	;# 
  1008     000A                     	;# 
  1009     000B                     	;# 
  1010     000C                     	;# 
  1011     000D                     	;# 
  1012     000E                     	;# 
  1013     0010                     	;# 
  1014     0011                     	;# 
  1015     0012                     	;# 
  1016     0013                     	;# 
  1017     0015                     	;# 
  1018     0016                     	;# 
  1019     0016                     	;# 
  1020     0017                     	;# 
  1021     0018                     	;# 
  1022     0019                     	;# 
  1023     001A                     	;# 
  1024     001B                     	;# 
  1025     001C                     	;# 
  1026     001E                     	;# 
  1027     001F                     	;# 
  1028     008C                     	;# 
  1029     008D                     	;# 
  1030     008E                     	;# 
  1031     0090                     	;# 
  1032     0091                     	;# 
  1033     0092                     	;# 
  1034     0093                     	;# 
  1035     0095                     	;# 
  1036     0096                     	;# 
  1037     0097                     	;# 
  1038     0098                     	;# 
  1039     0099                     	;# 
  1040     009A                     	;# 
  1041     009B                     	;# 
  1042     009B                     	;# 
  1043     009C                     	;# 
  1044     009D                     	;# 
  1045     009E                     	;# 
  1046     010C                     	;# 
  1047     010D                     	;# 
  1048     010E                     	;# 
  1049     0110                     	;# 
  1050     0111                     	;# 
  1051     0112                     	;# 
  1052     0113                     	;# 
  1053     0114                     	;# 
  1054     0115                     	;# 
  1055     0116                     	;# 
  1056     0117                     	;# 
  1057     0118                     	;# 
  1058     0119                     	;# 
  1059     011A                     	;# 
  1060     011B                     	;# 
  1061     011D                     	;# 
  1062     018C                     	;# 
  1063     018D                     	;# 
  1064     0191                     	;# 
  1065     0191                     	;# 
  1066     0192                     	;# 
  1067     0193                     	;# 
  1068     0193                     	;# 
  1069     0193                     	;# 
  1070     0194                     	;# 
  1071     0195                     	;# 
  1072     0196                     	;# 
  1073     0199                     	;# 
  1074     019A                     	;# 
  1075     019B                     	;# 
  1076     019B                     	;# 
  1077     019B                     	;# 
  1078     019B                     	;# 
  1079     019C                     	;# 
  1080     019C                     	;# 
  1081     019D                     	;# 
  1082     019E                     	;# 
  1083     019F                     	;# 
  1084     020D                     	;# 
  1085     0210                     	;# 
  1086     0211                     	;# 
  1087     0212                     	;# 
  1088     0213                     	;# 
  1089     0214                     	;# 
  1090     0215                     	;# 
  1091     0215                     	;# 
  1092     0216                     	;# 
  1093     0217                     	;# 
  1094     0291                     	;# 
  1095     0291                     	;# 
  1096     0292                     	;# 
  1097     0293                     	;# 
  1098     0294                     	;# 
  1099     0295                     	;# 
  1100     0295                     	;# 
  1101     0296                     	;# 
  1102     0298                     	;# 
  1103     0298                     	;# 
  1104     0299                     	;# 
  1105     029A                     	;# 
  1106     029B                     	;# 
  1107     029C                     	;# 
  1108     029C                     	;# 
  1109     029D                     	;# 
  1110     029E                     	;# 
  1111     029F                     	;# 
  1112     0311                     	;# 
  1113     0311                     	;# 
  1114     0312                     	;# 
  1115     0313                     	;# 
  1116     0314                     	;# 
  1117     0315                     	;# 
  1118     0315                     	;# 
  1119     0316                     	;# 
  1120     0318                     	;# 
  1121     0318                     	;# 
  1122     0319                     	;# 
  1123     031A                     	;# 
  1124     031C                     	;# 
  1125     031C                     	;# 
  1126     031D                     	;# 
  1127     031E                     	;# 
  1128     0394                     	;# 
  1129     0395                     	;# 
  1130     0396                     	;# 
  1131     0415                     	;# 
  1132     0416                     	;# 
  1133     0417                     	;# 
  1134     041C                     	;# 
  1135     041D                     	;# 
  1136     041E                     	;# 
  1137     0791                     	;# 
  1138     0792                     	;# 
  1139     0793                     	;# 
  1140     0794                     	;# 
  1141     0795                     	;# 
  1142     0798                     	;# 
  1143     0799                     	;# 
  1144     07A0                     	;# 
  1145     07A1                     	;# 
  1146     07A3                     	;# 
  1147     07A4                     	;# 
  1148     07A6                     	;# 
  1149     07A7                     	;# 
  1150     07A9                     	;# 
  1151     07AA                     	;# 
  1152     0FE4                     	;# 
  1153     0FE5                     	;# 
  1154     0FE6                     	;# 
  1155     0FE7                     	;# 
  1156     0FE8                     	;# 
  1157     0FE9                     	;# 
  1158     0FEA                     	;# 
  1159     0FEB                     	;# 
  1160     0FED                     	;# 
  1161     0FEE                     	;# 
  1162     0FEF                     	;# 
  1163     0000                     	;# 
  1164     0001                     	;# 
  1165     0002                     	;# 
  1166     0003                     	;# 
  1167     0004                     	;# 
  1168     0005                     	;# 
  1169     0006                     	;# 
  1170     0007                     	;# 
  1171     0008                     	;# 
  1172     0009                     	;# 
  1173     000A                     	;# 
  1174     000B                     	;# 
  1175     000C                     	;# 
  1176     000D                     	;# 
  1177     000E                     	;# 
  1178     0010                     	;# 
  1179     0011                     	;# 
  1180     0012                     	;# 
  1181     0013                     	;# 
  1182     0015                     	;# 
  1183     0016                     	;# 
  1184     0016                     	;# 
  1185     0017                     	;# 
  1186     0018                     	;# 
  1187     0019                     	;# 
  1188     001A                     	;# 
  1189     001B                     	;# 
  1190     001C                     	;# 
  1191     001E                     	;# 
  1192     001F                     	;# 
  1193     008C                     	;# 
  1194     008D                     	;# 
  1195     008E                     	;# 
  1196     0090                     	;# 
  1197     0091                     	;# 
  1198     0092                     	;# 
  1199     0093                     	;# 
  1200     0095                     	;# 
  1201     0096                     	;# 
  1202     0097                     	;# 
  1203     0098                     	;# 
  1204     0099                     	;# 
  1205     009A                     	;# 
  1206     009B                     	;# 
  1207     009B                     	;# 
  1208     009C                     	;# 
  1209     009D                     	;# 
  1210     009E                     	;# 
  1211     010C                     	;# 
  1212     010D                     	;# 
  1213     010E                     	;# 
  1214     0110                     	;# 
  1215     0111                     	;# 
  1216     0112                     	;# 
  1217     0113                     	;# 
  1218     0114                     	;# 
  1219     0115                     	;# 
  1220     0116                     	;# 
  1221     0117                     	;# 
  1222     0118                     	;# 
  1223     0119                     	;# 
  1224     011A                     	;# 
  1225     011B                     	;# 
  1226     011D                     	;# 
  1227     018C                     	;# 
  1228     018D                     	;# 
  1229     0191                     	;# 
  1230     0191                     	;# 
  1231     0192                     	;# 
  1232     0193                     	;# 
  1233     0193                     	;# 
  1234     0193                     	;# 
  1235     0194                     	;# 
  1236     0195                     	;# 
  1237     0196                     	;# 
  1238     0199                     	;# 
  1239     019A                     	;# 
  1240     019B                     	;# 
  1241     019B                     	;# 
  1242     019B                     	;# 
  1243     019B                     	;# 
  1244     019C                     	;# 
  1245     019C                     	;# 
  1246     019D                     	;# 
  1247     019E                     	;# 
  1248     019F                     	;# 
  1249     020D                     	;# 
  1250     0210                     	;# 
  1251     0211                     	;# 
  1252     0212                     	;# 
  1253     0213                     	;# 
  1254     0214                     	;# 
  1255     0215                     	;# 
  1256     0215                     	;# 
  1257     0216                     	;# 
  1258     0217                     	;# 
  1259     0291                     	;# 
  1260     0291                     	;# 
  1261     0292                     	;# 
  1262     0293                     	;# 
  1263     0294                     	;# 
  1264     0295                     	;# 
  1265     0295                     	;# 
  1266     0296                     	;# 
  1267     0298                     	;# 
  1268     0298                     	;# 
  1269     0299                     	;# 
  1270     029A                     	;# 
  1271     029B                     	;# 
  1272     029C                     	;# 
  1273     029C                     	;# 
  1274     029D                     	;# 
  1275     029E                     	;# 
  1276     029F                     	;# 
  1277     0311                     	;# 
  1278     0311                     	;# 
  1279     0312                     	;# 
  1280     0313                     	;# 
  1281     0314                     	;# 
  1282     0315                     	;# 
  1283     0315                     	;# 
  1284     0316                     	;# 
  1285     0318                     	;# 
  1286     0318                     	;# 
  1287     0319                     	;# 
  1288     031A                     	;# 
  1289     031C                     	;# 
  1290     031C                     	;# 
  1291     031D                     	;# 
  1292     031E                     	;# 
  1293     0394                     	;# 
  1294     0395                     	;# 
  1295     0396                     	;# 
  1296     0415                     	;# 
  1297     0416                     	;# 
  1298     0417                     	;# 
  1299     041C                     	;# 
  1300     041D                     	;# 
  1301     041E                     	;# 
  1302     0791                     	;# 
  1303     0792                     	;# 
  1304     0793                     	;# 
  1305     0794                     	;# 
  1306     0795                     	;# 
  1307     0798                     	;# 
  1308     0799                     	;# 
  1309     07A0                     	;# 
  1310     07A1                     	;# 
  1311     07A3                     	;# 
  1312     07A4                     	;# 
  1313     07A6                     	;# 
  1314     07A7                     	;# 
  1315     07A9                     	;# 
  1316     07AA                     	;# 
  1317     0FE4                     	;# 
  1318     0FE5                     	;# 
  1319     0FE6                     	;# 
  1320     0FE7                     	;# 
  1321     0FE8                     	;# 
  1322     0FE9                     	;# 
  1323     0FEA                     	;# 
  1324     0FEB                     	;# 
  1325     0FED                     	;# 
  1326     0FEE                     	;# 
  1327     0FEF                     	;# 
  1328     0000                     	;# 
  1329     0001                     	;# 
  1330     0002                     	;# 
  1331     0003                     	;# 
  1332     0004                     	;# 
  1333     0005                     	;# 
  1334     0006                     	;# 
  1335     0007                     	;# 
  1336     0008                     	;# 
  1337     0009                     	;# 
  1338     000A                     	;# 
  1339     000B                     	;# 
  1340     000C                     	;# 
  1341     000D                     	;# 
  1342     000E                     	;# 
  1343     0010                     	;# 
  1344     0011                     	;# 
  1345     0012                     	;# 
  1346     0013                     	;# 
  1347     0015                     	;# 
  1348     0016                     	;# 
  1349     0016                     	;# 
  1350     0017                     	;# 
  1351     0018                     	;# 
  1352     0019                     	;# 
  1353     001A                     	;# 
  1354     001B                     	;# 
  1355     001C                     	;# 
  1356     001E                     	;# 
  1357     001F                     	;# 
  1358     008C                     	;# 
  1359     008D                     	;# 
  1360     008E                     	;# 
  1361     0090                     	;# 
  1362     0091                     	;# 
  1363     0092                     	;# 
  1364     0093                     	;# 
  1365     0095                     	;# 
  1366     0096                     	;# 
  1367     0097                     	;# 
  1368     0098                     	;# 
  1369     0099                     	;# 
  1370     009A                     	;# 
  1371     009B                     	;# 
  1372     009B                     	;# 
  1373     009C                     	;# 
  1374     009D                     	;# 
  1375     009E                     	;# 
  1376     010C                     	;# 
  1377     010D                     	;# 
  1378     010E                     	;# 
  1379     0110                     	;# 
  1380     0111                     	;# 
  1381     0112                     	;# 
  1382     0113                     	;# 
  1383     0114                     	;# 
  1384     0115                     	;# 
  1385     0116                     	;# 
  1386     0117                     	;# 
  1387     0118                     	;# 
  1388     0119                     	;# 
  1389     011A                     	;# 
  1390     011B                     	;# 
  1391     011D                     	;# 
  1392     018C                     	;# 
  1393     018D                     	;# 
  1394     0191                     	;# 
  1395     0191                     	;# 
  1396     0192                     	;# 
  1397     0193                     	;# 
  1398     0193                     	;# 
  1399     0193                     	;# 
  1400     0194                     	;# 
  1401     0195                     	;# 
  1402     0196                     	;# 
  1403     0199                     	;# 
  1404     019A                     	;# 
  1405     019B                     	;# 
  1406     019B                     	;# 
  1407     019B                     	;# 
  1408     019B                     	;# 
  1409     019C                     	;# 
  1410     019C                     	;# 
  1411     019D                     	;# 
  1412     019E                     	;# 
  1413     019F                     	;# 
  1414     020D                     	;# 
  1415     0210                     	;# 
  1416     0211                     	;# 
  1417     0212                     	;# 
  1418     0213                     	;# 
  1419     0214                     	;# 
  1420     0215                     	;# 
  1421     0215                     	;# 
  1422     0216                     	;# 
  1423     0217                     	;# 
  1424     0291                     	;# 
  1425     0291                     	;# 
  1426     0292                     	;# 
  1427     0293                     	;# 
  1428     0294                     	;# 
  1429     0295                     	;# 
  1430     0295                     	;# 
  1431     0296                     	;# 
  1432     0298                     	;# 
  1433     0298                     	;# 
  1434     0299                     	;# 
  1435     029A                     	;# 
  1436     029B                     	;# 
  1437     029C                     	;# 
  1438     029C                     	;# 
  1439     029D                     	;# 
  1440     029E                     	;# 
  1441     029F                     	;# 
  1442     0311                     	;# 
  1443     0311                     	;# 
  1444     0312                     	;# 
  1445     0313                     	;# 
  1446     0314                     	;# 
  1447     0315                     	;# 
  1448     0315                     	;# 
  1449     0316                     	;# 
  1450     0318                     	;# 
  1451     0318                     	;# 
  1452     0319                     	;# 
  1453     031A                     	;# 
  1454     031C                     	;# 
  1455     031C                     	;# 
  1456     031D                     	;# 
  1457     031E                     	;# 
  1458     0394                     	;# 
  1459     0395                     	;# 
  1460     0396                     	;# 
  1461     0415                     	;# 
  1462     0416                     	;# 
  1463     0417                     	;# 
  1464     041C                     	;# 
  1465     041D                     	;# 
  1466     041E                     	;# 
  1467     0791                     	;# 
  1468     0792                     	;# 
  1469     0793                     	;# 
  1470     0794                     	;# 
  1471     0795                     	;# 
  1472     0798                     	;# 
  1473     0799                     	;# 
  1474     07A0                     	;# 
  1475     07A1                     	;# 
  1476     07A3                     	;# 
  1477     07A4                     	;# 
  1478     07A6                     	;# 
  1479     07A7                     	;# 
  1480     07A9                     	;# 
  1481     07AA                     	;# 
  1482     0FE4                     	;# 
  1483     0FE5                     	;# 
  1484     0FE6                     	;# 
  1485     0FE7                     	;# 
  1486     0FE8                     	;# 
  1487     0FE9                     	;# 
  1488     0FEA                     	;# 
  1489     0FEB                     	;# 
  1490     0FED                     	;# 
  1491     0FEE                     	;# 
  1492     0FEF                     	;# 
  1493     0000                     	;# 
  1494     0001                     	;# 
  1495     0002                     	;# 
  1496     0003                     	;# 
  1497     0004                     	;# 
  1498     0005                     	;# 
  1499     0006                     	;# 
  1500     0007                     	;# 
  1501     0008                     	;# 
  1502     0009                     	;# 
  1503     000A                     	;# 
  1504     000B                     	;# 
  1505     000C                     	;# 
  1506     000D                     	;# 
  1507     000E                     	;# 
  1508     0010                     	;# 
  1509     0011                     	;# 
  1510     0012                     	;# 
  1511     0013                     	;# 
  1512     0015                     	;# 
  1513     0016                     	;# 
  1514     0016                     	;# 
  1515     0017                     	;# 
  1516     0018                     	;# 
  1517     0019                     	;# 
  1518     001A                     	;# 
  1519     001B                     	;# 
  1520     001C                     	;# 
  1521     001E                     	;# 
  1522     001F                     	;# 
  1523     008C                     	;# 
  1524     008D                     	;# 
  1525     008E                     	;# 
  1526     0090                     	;# 
  1527     0091                     	;# 
  1528     0092                     	;# 
  1529     0093                     	;# 
  1530     0095                     	;# 
  1531     0096                     	;# 
  1532     0097                     	;# 
  1533     0098                     	;# 
  1534     0099                     	;# 
  1535     009A                     	;# 
  1536     009B                     	;# 
  1537     009B                     	;# 
  1538     009C                     	;# 
  1539     009D                     	;# 
  1540     009E                     	;# 
  1541     010C                     	;# 
  1542     010D                     	;# 
  1543     010E                     	;# 
  1544     0110                     	;# 
  1545     0111                     	;# 
  1546     0112                     	;# 
  1547     0113                     	;# 
  1548     0114                     	;# 
  1549     0115                     	;# 
  1550     0116                     	;# 
  1551     0117                     	;# 
  1552     0118                     	;# 
  1553     0119                     	;# 
  1554     011A                     	;# 
  1555     011B                     	;# 
  1556     011D                     	;# 
  1557     018C                     	;# 
  1558     018D                     	;# 
  1559     0191                     	;# 
  1560     0191                     	;# 
  1561     0192                     	;# 
  1562     0193                     	;# 
  1563     0193                     	;# 
  1564     0193                     	;# 
  1565     0194                     	;# 
  1566     0195                     	;# 
  1567     0196                     	;# 
  1568     0199                     	;# 
  1569     019A                     	;# 
  1570     019B                     	;# 
  1571     019B                     	;# 
  1572     019B                     	;# 
  1573     019B                     	;# 
  1574     019C                     	;# 
  1575     019C                     	;# 
  1576     019D                     	;# 
  1577     019E                     	;# 
  1578     019F                     	;# 
  1579     020D                     	;# 
  1580     0210                     	;# 
  1581     0211                     	;# 
  1582     0212                     	;# 
  1583     0213                     	;# 
  1584     0214                     	;# 
  1585     0215                     	;# 
  1586     0215                     	;# 
  1587     0216                     	;# 
  1588     0217                     	;# 
  1589     0291                     	;# 
  1590     0291                     	;# 
  1591     0292                     	;# 
  1592     0293                     	;# 
  1593     0294                     	;# 
  1594     0295                     	;# 
  1595     0295                     	;# 
  1596     0296                     	;# 
  1597     0298                     	;# 
  1598     0298                     	;# 
  1599     0299                     	;# 
  1600     029A                     	;# 
  1601     029B                     	;# 
  1602     029C                     	;# 
  1603     029C                     	;# 
  1604     029D                     	;# 
  1605     029E                     	;# 
  1606     029F                     	;# 
  1607     0311                     	;# 
  1608     0311                     	;# 
  1609     0312                     	;# 
  1610     0313                     	;# 
  1611     0314                     	;# 
  1612     0315                     	;# 
  1613     0315                     	;# 
  1614     0316                     	;# 
  1615     0318                     	;# 
  1616     0318                     	;# 
  1617     0319                     	;# 
  1618     031A                     	;# 
  1619     031C                     	;# 
  1620     031C                     	;# 
  1621     031D                     	;# 
  1622     031E                     	;# 
  1623     0394                     	;# 
  1624     0395                     	;# 
  1625     0396                     	;# 
  1626     0415                     	;# 
  1627     0416                     	;# 
  1628     0417                     	;# 
  1629     041C                     	;# 
  1630     041D                     	;# 
  1631     041E                     	;# 
  1632     0791                     	;# 
  1633     0792                     	;# 
  1634     0793                     	;# 
  1635     0794                     	;# 
  1636     0795                     	;# 
  1637     0798                     	;# 
  1638     0799                     	;# 
  1639     07A0                     	;# 
  1640     07A1                     	;# 
  1641     07A3                     	;# 
  1642     07A4                     	;# 
  1643     07A6                     	;# 
  1644     07A7                     	;# 
  1645     07A9                     	;# 
  1646     07AA                     	;# 
  1647     0FE4                     	;# 
  1648     0FE5                     	;# 
  1649     0FE6                     	;# 
  1650     0FE7                     	;# 
  1651     0FE8                     	;# 
  1652     0FE9                     	;# 
  1653     0FEA                     	;# 
  1654     0FEB                     	;# 
  1655     0FED                     	;# 
  1656     0FEE                     	;# 
  1657     0FEF                     	;# 
  1658     0000                     	;# 
  1659     0001                     	;# 
  1660     0002                     	;# 
  1661     0003                     	;# 
  1662     0004                     	;# 
  1663     0005                     	;# 
  1664     0006                     	;# 
  1665     0007                     	;# 
  1666     0008                     	;# 
  1667     0009                     	;# 
  1668     000A                     	;# 
  1669     000B                     	;# 
  1670     000C                     	;# 
  1671     000D                     	;# 
  1672     000E                     	;# 
  1673     0010                     	;# 
  1674     0011                     	;# 
  1675     0012                     	;# 
  1676     0013                     	;# 
  1677     0015                     	;# 
  1678     0016                     	;# 
  1679     0016                     	;# 
  1680     0017                     	;# 
  1681     0018                     	;# 
  1682     0019                     	;# 
  1683     001A                     	;# 
  1684     001B                     	;# 
  1685     001C                     	;# 
  1686     001E                     	;# 
  1687     001F                     	;# 
  1688     008C                     	;# 
  1689     008D                     	;# 
  1690     008E                     	;# 
  1691     0090                     	;# 
  1692     0091                     	;# 
  1693     0092                     	;# 
  1694     0093                     	;# 
  1695     0095                     	;# 
  1696     0096                     	;# 
  1697     0097                     	;# 
  1698     0098                     	;# 
  1699     0099                     	;# 
  1700     009A                     	;# 
  1701     009B                     	;# 
  1702     009B                     	;# 
  1703     009C                     	;# 
  1704     009D                     	;# 
  1705     009E                     	;# 
  1706     010C                     	;# 
  1707     010D                     	;# 
  1708     010E                     	;# 
  1709     0110                     	;# 
  1710     0111                     	;# 
  1711     0112                     	;# 
  1712     0113                     	;# 
  1713     0114                     	;# 
  1714     0115                     	;# 
  1715     0116                     	;# 
  1716     0117                     	;# 
  1717     0118                     	;# 
  1718     0119                     	;# 
  1719     011A                     	;# 
  1720     011B                     	;# 
  1721     011D                     	;# 
  1722     018C                     	;# 
  1723     018D                     	;# 
  1724     0191                     	;# 
  1725     0191                     	;# 
  1726     0192                     	;# 
  1727     0193                     	;# 
  1728     0193                     	;# 
  1729     0193                     	;# 
  1730     0194                     	;# 
  1731     0195                     	;# 
  1732     0196                     	;# 
  1733     0199                     	;# 
  1734     019A                     	;# 
  1735     019B                     	;# 
  1736     019B                     	;# 
  1737     019B                     	;# 
  1738     019B                     	;# 
  1739     019C                     	;# 
  1740     019C                     	;# 
  1741     019D                     	;# 
  1742     019E                     	;# 
  1743     019F                     	;# 
  1744     020D                     	;# 
  1745     0210                     	;# 
  1746     0211                     	;# 
  1747     0212                     	;# 
  1748     0213                     	;# 
  1749     0214                     	;# 
  1750     0215                     	;# 
  1751     0215                     	;# 
  1752     0216                     	;# 
  1753     0217                     	;# 
  1754     0291                     	;# 
  1755     0291                     	;# 
  1756     0292                     	;# 
  1757     0293                     	;# 
  1758     0294                     	;# 
  1759     0295                     	;# 
  1760     0295                     	;# 
  1761     0296                     	;# 
  1762     0298                     	;# 
  1763     0298                     	;# 
  1764     0299                     	;# 
  1765     029A                     	;# 
  1766     029B                     	;# 
  1767     029C                     	;# 
  1768     029C                     	;# 
  1769     029D                     	;# 
  1770     029E                     	;# 
  1771     029F                     	;# 
  1772     0311                     	;# 
  1773     0311                     	;# 
  1774     0312                     	;# 
  1775     0313                     	;# 
  1776     0314                     	;# 
  1777     0315                     	;# 
  1778     0315                     	;# 
  1779     0316                     	;# 
  1780     0318                     	;# 
  1781     0318                     	;# 
  1782     0319                     	;# 
  1783     031A                     	;# 
  1784     031C                     	;# 
  1785     031C                     	;# 
  1786     031D                     	;# 
  1787     031E                     	;# 
  1788     0394                     	;# 
  1789     0395                     	;# 
  1790     0396                     	;# 
  1791     0415                     	;# 
  1792     0416                     	;# 
  1793     0417                     	;# 
  1794     041C                     	;# 
  1795     041D                     	;# 
  1796     041E                     	;# 
  1797     0791                     	;# 
  1798     0792                     	;# 
  1799     0793                     	;# 
  1800     0794                     	;# 
  1801     0795                     	;# 
  1802     0798                     	;# 
  1803     0799                     	;# 
  1804     07A0                     	;# 
  1805     07A1                     	;# 
  1806     07A3                     	;# 
  1807     07A4                     	;# 
  1808     07A6                     	;# 
  1809     07A7                     	;# 
  1810     07A9                     	;# 
  1811     07AA                     	;# 
  1812     0FE4                     	;# 
  1813     0FE5                     	;# 
  1814     0FE6                     	;# 
  1815     0FE7                     	;# 
  1816     0FE8                     	;# 
  1817     0FE9                     	;# 
  1818     0FEA                     	;# 
  1819     0FEB                     	;# 
  1820     0FED                     	;# 
  1821     0FEE                     	;# 
  1822     0FEF                     	;# 
  1823     0000                     	;# 
  1824     0001                     	;# 
  1825     0002                     	;# 
  1826     0003                     	;# 
  1827     0004                     	;# 
  1828     0005                     	;# 
  1829     0006                     	;# 
  1830     0007                     	;# 
  1831     0008                     	;# 
  1832     0009                     	;# 
  1833     000A                     	;# 
  1834     000B                     	;# 
  1835     000C                     	;# 
  1836     000D                     	;# 
  1837     000E                     	;# 
  1838     0010                     	;# 
  1839     0011                     	;# 
  1840     0012                     	;# 
  1841     0013                     	;# 
  1842     0015                     	;# 
  1843     0016                     	;# 
  1844     0016                     	;# 
  1845     0017                     	;# 
  1846     0018                     	;# 
  1847     0019                     	;# 
  1848     001A                     	;# 
  1849     001B                     	;# 
  1850     001C                     	;# 
  1851     001E                     	;# 
  1852     001F                     	;# 
  1853     008C                     	;# 
  1854     008D                     	;# 
  1855     008E                     	;# 
  1856     0090                     	;# 
  1857     0091                     	;# 
  1858     0092                     	;# 
  1859     0093                     	;# 
  1860     0095                     	;# 
  1861     0096                     	;# 
  1862     0097                     	;# 
  1863     0098                     	;# 
  1864     0099                     	;# 
  1865     009A                     	;# 
  1866     009B                     	;# 
  1867     009B                     	;# 
  1868     009C                     	;# 
  1869     009D                     	;# 
  1870     009E                     	;# 
  1871     010C                     	;# 
  1872     010D                     	;# 
  1873     010E                     	;# 
  1874     0110                     	;# 
  1875     0111                     	;# 
  1876     0112                     	;# 
  1877     0113                     	;# 
  1878     0114                     	;# 
  1879     0115                     	;# 
  1880     0116                     	;# 
  1881     0117                     	;# 
  1882     0118                     	;# 
  1883     0119                     	;# 
  1884     011A                     	;# 
  1885     011B                     	;# 
  1886     011D                     	;# 
  1887     018C                     	;# 
  1888     018D                     	;# 
  1889     0191                     	;# 
  1890     0191                     	;# 
  1891     0192                     	;# 
  1892     0193                     	;# 
  1893     0193                     	;# 
  1894     0193                     	;# 
  1895     0194                     	;# 
  1896     0195                     	;# 
  1897     0196                     	;# 
  1898     0199                     	;# 
  1899     019A                     	;# 
  1900     019B                     	;# 
  1901     019B                     	;# 
  1902     019B                     	;# 
  1903     019B                     	;# 
  1904     019C                     	;# 
  1905     019C                     	;# 
  1906     019D                     	;# 
  1907     019E                     	;# 
  1908     019F                     	;# 
  1909     020D                     	;# 
  1910     0210                     	;# 
  1911     0211                     	;# 
  1912     0212                     	;# 
  1913     0213                     	;# 
  1914     0214                     	;# 
  1915     0215                     	;# 
  1916     0215                     	;# 
  1917     0216                     	;# 
  1918     0217                     	;# 
  1919     0291                     	;# 
  1920     0291                     	;# 
  1921     0292                     	;# 
  1922     0293                     	;# 
  1923     0294                     	;# 
  1924     0295                     	;# 
  1925     0295                     	;# 
  1926     0296                     	;# 
  1927     0298                     	;# 
  1928     0298                     	;# 
  1929     0299                     	;# 
  1930     029A                     	;# 
  1931     029B                     	;# 
  1932     029C                     	;# 
  1933     029C                     	;# 
  1934     029D                     	;# 
  1935     029E                     	;# 
  1936     029F                     	;# 
  1937     0311                     	;# 
  1938     0311                     	;# 
  1939     0312                     	;# 
  1940     0313                     	;# 
  1941     0314                     	;# 
  1942     0315                     	;# 
  1943     0315                     	;# 
  1944     0316                     	;# 
  1945     0318                     	;# 
  1946     0318                     	;# 
  1947     0319                     	;# 
  1948     031A                     	;# 
  1949     031C                     	;# 
  1950     031C                     	;# 
  1951     031D                     	;# 
  1952     031E                     	;# 
  1953     0394                     	;# 
  1954     0395                     	;# 
  1955     0396                     	;# 
  1956     0415                     	;# 
  1957     0416                     	;# 
  1958     0417                     	;# 
  1959     041C                     	;# 
  1960     041D                     	;# 
  1961     041E                     	;# 
  1962     0791                     	;# 
  1963     0792                     	;# 
  1964     0793                     	;# 
  1965     0794                     	;# 
  1966     0795                     	;# 
  1967     0798                     	;# 
  1968     0799                     	;# 
  1969     07A0                     	;# 
  1970     07A1                     	;# 
  1971     07A3                     	;# 
  1972     07A4                     	;# 
  1973     07A6                     	;# 
  1974     07A7                     	;# 
  1975     07A9                     	;# 
  1976     07AA                     	;# 
  1977     0FE4                     	;# 
  1978     0FE5                     	;# 
  1979     0FE6                     	;# 
  1980     0FE7                     	;# 
  1981     0FE8                     	;# 
  1982     0FE9                     	;# 
  1983     0FEA                     	;# 
  1984     0FEB                     	;# 
  1985     0FED                     	;# 
  1986     0FEE                     	;# 
  1987     0FEF                     	;# 
  1988     0000                     	;# 
  1989     0001                     	;# 
  1990     0002                     	;# 
  1991     0003                     	;# 
  1992     0004                     	;# 
  1993     0005                     	;# 
  1994     0006                     	;# 
  1995     0007                     	;# 
  1996     0008                     	;# 
  1997     0009                     	;# 
  1998     000A                     	;# 
  1999     000B                     	;# 
  2000     000C                     	;# 
  2001     000D                     	;# 
  2002     000E                     	;# 
  2003     0010                     	;# 
  2004     0011                     	;# 
  2005     0012                     	;# 
  2006     0013                     	;# 
  2007     0015                     	;# 
  2008     0016                     	;# 
  2009     0016                     	;# 
  2010     0017                     	;# 
  2011     0018                     	;# 
  2012     0019                     	;# 
  2013     001A                     	;# 
  2014     001B                     	;# 
  2015     001C                     	;# 
  2016     001E                     	;# 
  2017     001F                     	;# 
  2018     008C                     	;# 
  2019     008D                     	;# 
  2020     008E                     	;# 
  2021     0090                     	;# 
  2022     0091                     	;# 
  2023     0092                     	;# 
  2024     0093                     	;# 
  2025     0095                     	;# 
  2026     0096                     	;# 
  2027     0097                     	;# 
  2028     0098                     	;# 
  2029     0099                     	;# 
  2030     009A                     	;# 
  2031     009B                     	;# 
  2032     009B                     	;# 
  2033     009C                     	;# 
  2034     009D                     	;# 
  2035     009E                     	;# 
  2036     010C                     	;# 
  2037     010D                     	;# 
  2038     010E                     	;# 
  2039     0110                     	;# 
  2040     0111                     	;# 
  2041     0112                     	;# 
  2042     0113                     	;# 
  2043     0114                     	;# 
  2044     0115                     	;# 
  2045     0116                     	;# 
  2046     0117                     	;# 
  2047     0118                     	;# 
  2048     0119                     	;# 
  2049     011A                     	;# 
  2050     011B                     	;# 
  2051     011D                     	;# 
  2052     018C                     	;# 
  2053     018D                     	;# 
  2054     0191                     	;# 
  2055     0191                     	;# 
  2056     0192                     	;# 
  2057     0193                     	;# 
  2058     0193                     	;# 
  2059     0193                     	;# 
  2060     0194                     	;# 
  2061     0195                     	;# 
  2062     0196                     	;# 
  2063     0199                     	;# 
  2064     019A                     	;# 
  2065     019B                     	;# 
  2066     019B                     	;# 
  2067     019B                     	;# 
  2068     019B                     	;# 
  2069     019C                     	;# 
  2070     019C                     	;# 
  2071     019D                     	;# 
  2072     019E                     	;# 
  2073     019F                     	;# 
  2074     020D                     	;# 
  2075     0210                     	;# 
  2076     0211                     	;# 
  2077     0212                     	;# 
  2078     0213                     	;# 
  2079     0214                     	;# 
  2080     0215                     	;# 
  2081     0215                     	;# 
  2082     0216                     	;# 
  2083     0217                     	;# 
  2084     0291                     	;# 
  2085     0291                     	;# 
  2086     0292                     	;# 
  2087     0293                     	;# 
  2088     0294                     	;# 
  2089     0295                     	;# 
  2090     0295                     	;# 
  2091     0296                     	;# 
  2092     0298                     	;# 
  2093     0298                     	;# 
  2094     0299                     	;# 
  2095     029A                     	;# 
  2096     029B                     	;# 
  2097     029C                     	;# 
  2098     029C                     	;# 
  2099     029D                     	;# 
  2100     029E                     	;# 
  2101     029F                     	;# 
  2102     0311                     	;# 
  2103     0311                     	;# 
  2104     0312                     	;# 
  2105     0313                     	;# 
  2106     0314                     	;# 
  2107     0315                     	;# 
  2108     0315                     	;# 
  2109     0316                     	;# 
  2110     0318                     	;# 
  2111     0318                     	;# 
  2112     0319                     	;# 
  2113     031A                     	;# 
  2114     031C                     	;# 
  2115     031C                     	;# 
  2116     031D                     	;# 
  2117     031E                     	;# 
  2118     0394                     	;# 
  2119     0395                     	;# 
  2120     0396                     	;# 
  2121     0415                     	;# 
  2122     0416                     	;# 
  2123     0417                     	;# 
  2124     041C                     	;# 
  2125     041D                     	;# 
  2126     041E                     	;# 
  2127     0791                     	;# 
  2128     0792                     	;# 
  2129     0793                     	;# 
  2130     0794                     	;# 
  2131     0795                     	;# 
  2132     0798                     	;# 
  2133     0799                     	;# 
  2134     07A0                     	;# 
  2135     07A1                     	;# 
  2136     07A3                     	;# 
  2137     07A4                     	;# 
  2138     07A6                     	;# 
  2139     07A7                     	;# 
  2140     07A9                     	;# 
  2141     07AA                     	;# 
  2142     0FE4                     	;# 
  2143     0FE5                     	;# 
  2144     0FE6                     	;# 
  2145     0FE7                     	;# 
  2146     0FE8                     	;# 
  2147     0FE9                     	;# 
  2148     0FEA                     	;# 
  2149     0FEB                     	;# 
  2150     0FED                     	;# 
  2151     0FEE                     	;# 
  2152     0FEF                     	;_SES_Modbus
  2153                           
  2154                           	psect	idataBANK1
  2155     1363                     __pidataBANK1:
  2156                           
  2157                           ;initializer for _SHT30_CMD_MEASURE_L_Disable
  2158     1363  3424               	retlw	36
  2159     1364  3416               	retlw	22
  2160                           
  2161                           ;initializer for _SHT30_CMD_MEASURE_M_Disable
  2162     1365  3424               	retlw	36
  2163     1366  340B               	retlw	11
  2164                           
  2165                           ;initializer for _SHT30_CMD_MEASURE_H_Disable
  2166     1367  3424               	retlw	36
  2167     1368  3400               	retlw	0
  2168                           
  2169                           ;initializer for _SHT30_CMD_MEASURE_L_Enable
  2170     1369  342C               	retlw	44
  2171     136A  3410               	retlw	16
  2172                           
  2173                           ;initializer for _SHT30_CMD_MEASURE_M_Enable
  2174     136B  342C               	retlw	44
  2175     136C  340D               	retlw	13
  2176                           
  2177                           ;initializer for _SHT30_CMD_MEASURE_H_Enable
  2178     136D  342C               	retlw	44
  2179     136E  3406               	retlw	6
  2180                           
  2181                           	psect	stringtext1
  2182     1800                     __pstringtext1:
  2183     1800                     _i2c_fsmStateTable:
  2184     1800  3472               	retlw	low _I2C_DO_IDLE
  2185     1801  3412               	retlw	high _I2C_DO_IDLE
  2186     1802  34C5               	retlw	low _I2C_DO_SEND_ADR_READ
  2187     1803  3412               	retlw	high _I2C_DO_SEND_ADR_READ
  2188     1804  34BD               	retlw	low _I2C_DO_SEND_ADR_WRITE
  2189     1805  3412               	retlw	high _I2C_DO_SEND_ADR_WRITE
  2190     1806  34BF               	retlw	low _I2C_DO_TX
  2191     1807  3408               	retlw	high _I2C_DO_TX
  2192     1808  3477               	retlw	low _I2C_DO_RX
  2193     1809  3417               	retlw	high _I2C_DO_RX
  2194     180A  34AF               	retlw	low _I2C_DO_RCEN
  2195     180B  3412               	retlw	high _I2C_DO_RCEN
  2196     180C  3498               	retlw	low _I2C_DO_TX_EMPTY
  2197     180D  3416               	retlw	high _I2C_DO_TX_EMPTY
  2198     180E  3477               	retlw	low _I2C_DO_SEND_RESTART_READ
  2199     180F  3412               	retlw	high _I2C_DO_SEND_RESTART_READ
  2200     1810  347C               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  2201     1811  3412               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  2202     1812  3481               	retlw	low _I2C_DO_SEND_RESTART
  2203     1813  3412               	retlw	high _I2C_DO_SEND_RESTART
  2204     1814  3486               	retlw	low _I2C_DO_SEND_STOP
  2205     1815  3412               	retlw	high _I2C_DO_SEND_STOP
  2206     1816  348B               	retlw	low _I2C_DO_RX_ACK
  2207     1817  3412               	retlw	high _I2C_DO_RX_ACK
  2208     1818  3490               	retlw	low _I2C_DO_RX_NACK_STOP
  2209     1819  3412               	retlw	high _I2C_DO_RX_NACK_STOP
  2210     181A  3495               	retlw	low _I2C_DO_RX_NACK_RESTART
  2211     181B  3412               	retlw	high _I2C_DO_RX_NACK_RESTART
  2212     181C  349A               	retlw	low _I2C_DO_RESET
  2213     181D  3412               	retlw	high _I2C_DO_RESET
  2214     181E  34C6               	retlw	low _I2C_DO_ADDRESS_NACK
  2215     181F  3415               	retlw	high _I2C_DO_ADDRESS_NACK
  2216     1820                     __end_of_i2c_fsmStateTable:
  2217                           
  2218                           	psect	stringtext2
  2219     1820                     __pstringtext2:
  2220     1820                     _fctsupported:
  2221     1820  3401               	retlw	1
  2222     1821  3402               	retlw	2
  2223     1822  3403               	retlw	3
  2224     1823  3404               	retlw	4
  2225     1824  3405               	retlw	5
  2226     1825  3406               	retlw	6
  2227     1826  340F               	retlw	15
  2228     1827  3410               	retlw	16
  2229     1828                     __end_of_fctsupported:
  2230                           
  2231                           	psect	nvBANK2
  2232     0161                     __pnvBANK2:
  2233     0161                     _TMR1_InterruptHandler:
  2234     0161                     	ds	2
  2235     0163                     _EUSART_ErrorHandler:
  2236     0163                     	ds	2
  2237     0165                     _EUSART_OverrunErrorHandler:
  2238     0165                     	ds	2
  2239     0167                     _EUSART_FramingErrorHandler:
  2240     0167                     	ds	2
  2241     0169                     _EUSART_RxDefaultInterruptHandler:
  2242     0169                     	ds	2
  2243     016B                     _EUSART_TxDefaultInterruptHandler:
  2244     016B                     	ds	2
  2245     000C                     _PORTAbits	set	12
  2246     0018                     _T1CONbits	set	24
  2247     0018                     _T1CON	set	24
  2248     0016                     _TMR1L	set	22
  2249     0017                     _TMR1H	set	23
  2250     0019                     _T1GCON	set	25
  2251     0012                     _PIR2bits	set	18
  2252     0011                     _PIR1bits	set	17
  2253     000B                     _INTCONbits	set	11
  2254     0092                     _PIE2bits	set	146
  2255     0091                     _PIE1bits	set	145
  2256     0097                     _WDTCON	set	151
  2257     0098                     _OSCTUNE	set	152
  2258     0099                     _OSCCON	set	153
  2259     0095                     _OPTION_REGbits	set	149
  2260     008E                     _TRISC	set	142
  2261     008D                     _TRISB	set	141
  2262     008C                     _TRISA	set	140
  2263     0090                     _TRISE	set	144
  2264     010E                     _LATCbits	set	270
  2265     0116                     _BORCON	set	278
  2266     011D                     _APFCON	set	285
  2267     010E                     _LATC	set	270
  2268     010D                     _LATB	set	269
  2269     010C                     _LATA	set	268
  2270     0110                     _LATE	set	272
  2271     0199                     _RCREG	set	409
  2272     019D                     _RCSTAbits	set	413
  2273     019A                     _TXREG	set	410
  2274     019E                     _TXSTAbits	set	414
  2275     019C                     _SPBRGH	set	412
  2276     019B                     _SPBRGL	set	411
  2277     019E                     _TXSTA	set	414
  2278     019D                     _RCSTA	set	413
  2279     019F                     _BAUDCON	set	415
  2280     018C                     _ANSELA	set	396
  2281     018D                     _ANSELB	set	397
  2282     0214                     _SSPSTATbits	set	532
  2283     0216                     _SSPCON2bits	set	534
  2284     0211                     _SSPBUF	set	529
  2285     0215                     _SSPCON1bits	set	533
  2286     0212                     _SSPADD	set	530
  2287     0216                     _SSPCON2	set	534
  2288     0215                     _SSPCON1	set	533
  2289     0214                     _SSPSTAT	set	532
  2290     020D                     _WPUB	set	525
  2291     0210                     _WPUE	set	528
  2292                           
  2293                           	psect	cinit
  2294     005A                     start_initialization:	
  2295                           ; #config settings
  2296                           
  2297     005A                     __initialization:	;BIGRAM
  2298                           
  2299                           ; Initialize objects allocated to BANK1
  2300     005A  3063               	movlw	low __pidataBANK1
  2301     005B  0084               	movwf	4
  2302     005C  3093               	movlw	(high __pidataBANK1)| (0+128)
  2303     005D  0085               	movwf	5
  2304     005E  30E4               	movlw	low __pdataBANK1
  2305     005F  0086               	movwf	6
  2306     0060  3000               	movlw	high __pdataBANK1
  2307     0061  0087               	movwf	7
  2308     0062  3000               	movlw	0
  2309     0063  00FF               	movwf	btemp+1
  2310     0064  300C               	movlw	12
  2311     0065  3193  2357  3180   	fcall	init_ram
  2312                           
  2313                           ; Clear objects allocated to BIGRAM
  2314     0068  3038               	movlw	low (0+8504)
  2315     0069  0084               	movwf	4
  2316     006A  3021               	movlw	high (0+8504)
  2317     006B  0085               	movwf	5
  2318     006C  30B8               	movlw	184
  2319     006D  00FE               	movwf	btemp
  2320     006E  3000               	movlw	0
  2321     006F  00FF               	movwf	btemp+1
  2322     0070  3193  234B  3180   	fcall	clear_ram0
  2323                           
  2324                           ; Clear objects allocated to COMMON
  2325     0073  01FC               	clrf	__pbssCOMMON& (0+127)
  2326     0074  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  2327                           
  2328                           ; Clear objects allocated to BANK0
  2329     0075  01E9               	clrf	__pbssBANK0& (0+127)
  2330     0076  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  2331     0077  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  2332     0078  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  2333     0079  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  2334     007A  01EE               	clrf	(__pbssBANK0+5)& (0+127)
  2335     007B  01EF               	clrf	(__pbssBANK0+6)& (0+127)
  2336                           
  2337                           ; Clear objects allocated to BANK1
  2338     007C  30D7               	movlw	low __pbssBANK1
  2339     007D  0084               	movwf	4
  2340     007E  3000               	movlw	high __pbssBANK1
  2341     007F  0085               	movwf	5
  2342     0080  300D               	movlw	13
  2343     0081  00FE               	movwf	btemp
  2344     0082  3000               	movlw	0
  2345     0083  00FF               	movwf	btemp+1
  2346     0084  3193  234B  3180   	fcall	clear_ram0
  2347                           
  2348                           ; Clear objects allocated to BANK2
  2349     0087  3020               	movlw	low __pbssBANK2
  2350     0088  0084               	movwf	4
  2351     0089  3001               	movlw	high __pbssBANK2
  2352     008A  0085               	movwf	5
  2353     008B  3041               	movlw	65
  2354     008C  00FE               	movwf	btemp
  2355     008D  3000               	movlw	0
  2356     008E  00FF               	movwf	btemp+1
  2357     008F  3193  234B  3180   	fcall	clear_ram0
  2358     0092                     end_of_initialization:	
  2359                           ;End of C runtime variable initialization code
  2360                           
  2361     0092                     __end_of__initialization:
  2362     0092  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2363     0093  0020               	movlb	0
  2364     0094  3193  2BA5         	ljmp	_main	;jump to C main() function
  2365                           
  2366                           	psect	bssCOMMON
  2367     007C                     __pbssCOMMON:
  2368     007C                     Task_MB@f_Modbus_Init:
  2369     007C                     	ds	1
  2370     007D                     _eusartRxLastError:
  2371     007D                     	ds	1
  2372                           
  2373                           	psect	bssBANK0
  2374     0069                     __pbssBANK0:
  2375     0069                     _SW_Ad:
  2376     0069                     	ds	1
  2377     006A                     _eusartRxCount:
  2378     006A                     	ds	1
  2379     006B                     _eusartRxTail:
  2380     006B                     	ds	1
  2381     006C                     _eusartRxHead:
  2382     006C                     	ds	1
  2383     006D                     _eusartTxBufferRemaining:
  2384     006D                     	ds	1
  2385     006E                     _eusartTxTail:
  2386     006E                     	ds	1
  2387     006F                     _eusartTxHead:
  2388     006F                     	ds	1
  2389                           
  2390                           	psect	bssBANK1
  2391     00D7                     __pbssBANK1:
  2392     00D7                     _device_time:
  2393     00D7                     	ds	4
  2394     00DB                     _SensorAmbient:
  2395     00DB                     	ds	4
  2396     00DF                     _timer1ReloadVal:
  2397     00DF                     	ds	2
  2398     00E1                     _MSSP_InterruptHandler:
  2399     00E1                     	ds	2
  2400     00E3                     _f_Indicator:
  2401     00E3                     	ds	1
  2402                           
  2403                           	psect	dataBANK1
  2404     00E4                     __pdataBANK1:
  2405     00E4                     _SHT30_CMD_MEASURE_L_Disable:
  2406     00E4                     	ds	2
  2407     00E6                     _SHT30_CMD_MEASURE_M_Disable:
  2408     00E6                     	ds	2
  2409     00E8                     _SHT30_CMD_MEASURE_H_Disable:
  2410     00E8                     	ds	2
  2411     00EA                     _SHT30_CMD_MEASURE_L_Enable:
  2412     00EA                     	ds	2
  2413     00EC                     _SHT30_CMD_MEASURE_M_Enable:
  2414     00EC                     	ds	2
  2415     00EE                     _SHT30_CMD_MEASURE_H_Enable:
  2416     00EE                     	ds	2
  2417                           
  2418                           	psect	bssBANK2
  2419     0120                     __pbssBANK2:
  2420     0120                     _I2C_Status:
  2421     0120                     	ds	29
  2422     013D                     _eusartRxStatusBuffer:
  2423     013D                     	ds	8
  2424     0145                     _eusartRxBuffer:
  2425     0145                     	ds	8
  2426     014D                     _eusartTxBuffer:
  2427     014D                     	ds	8
  2428     0155                     Task_Sensor@valTime:
  2429     0155                     	ds	4
  2430     0159                     ReadData@valTime:
  2431     0159                     	ds	4
  2432     015D                     _MB_Register:
  2433     015D                     	ds	4
  2434                           
  2435                           	psect	inittext
  2436     1357                     init_ram:
  2437     1357  00FE               	movwf	btemp
  2438     1358                     initloop:
  2439     1358  0012               	moviw fsr0++
  2440     1359  001E               	movwi fsr1++
  2441     135A  3001               	movlw	1
  2442     135B  02FE               	subwf	btemp,f
  2443     135C  3000               	movlw	0
  2444     135D  3BFF               	subwfb	btemp+1,f
  2445     135E  087F               	movf	btemp+1,w
  2446     135F  047E               	iorwf	btemp,w
  2447     1360  1D03               	skipz
  2448     1361  2B58               	goto	initloop
  2449     1362  3400               	retlw	0
  2450                           
  2451                           	psect	clrtext
  2452     134B                     clear_ram0:	
  2453                           ;	Called with FSR0 containing the base address, and
  2454                           ;	btemp/btemp+1 has the size to clear
  2455                           
  2456     134B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2457     134C                     clrloop0:
  2458     134C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2459     134D  3101               	addfsr 0,1
  2460     134E  3001               	movlw	1
  2461     134F  02FE               	subwf	btemp,f
  2462     1350  3000               	movlw	0
  2463     1351  3BFF               	subwfb	btemp+1,f
  2464     1352  087F               	movf	btemp+1,w
  2465     1353  047E               	iorwf	btemp,w
  2466     1354  1D03               	skipz
  2467     1355  2B4C               	goto	clrloop0	;have we reached the end yet?
  2468     1356  3400               	retlw	0	;all done for this memory range, return
  2469                           
  2470                           	psect	cstackBANK1
  2471     00A0                     __pcstackBANK1:
  2472     00A0                     ___fldiv@rem:
  2473                           
  2474                           ; 4 bytes @ 0x0
  2475     00A0                     	ds	4
  2476     00A4                     ___fldiv@sign:
  2477                           
  2478                           ; 1 bytes @ 0x4
  2479     00A4                     	ds	1
  2480     00A5                     ___fldiv@new_exp:
  2481                           
  2482                           ; 2 bytes @ 0x5
  2483     00A5                     	ds	2
  2484     00A7                     ___fldiv@grs:
  2485                           
  2486                           ; 4 bytes @ 0x7
  2487     00A7                     	ds	4
  2488     00AB                     ___fldiv@bexp:
  2489                           
  2490                           ; 1 bytes @ 0xB
  2491     00AB                     	ds	1
  2492     00AC                     ___fldiv@aexp:
  2493                           
  2494                           ; 1 bytes @ 0xC
  2495     00AC                     	ds	1
  2496     00AD                     ??_ReadData:
  2497                           
  2498                           ; 1 bytes @ 0xD
  2499     00AD                     	ds	8
  2500     00B5                     ReadData@aData:
  2501                           
  2502                           ; 6 bytes @ 0x15
  2503     00B5                     	ds	6
  2504     00BB                     ReadData@ctemp:
  2505                           
  2506                           ; 4 bytes @ 0x1B
  2507     00BB                     	ds	4
  2508     00BF                     ReadData@humidity:
  2509                           
  2510                           ; 4 bytes @ 0x1F
  2511     00BF                     	ds	4
  2512     00C3                     _ReadData$2361:
  2513                           
  2514                           ; 4 bytes @ 0x23
  2515     00C3                     	ds	4
  2516     00C7                     _ReadData$2362:
  2517                           
  2518                           ; 4 bytes @ 0x27
  2519     00C7                     	ds	4
  2520     00CB                     ??_Task_Sensor:
  2521                           
  2522                           ; 1 bytes @ 0x2B
  2523     00CB                     	ds	12
  2524                           
  2525                           	psect	cstackCOMMON
  2526     0070                     __pcstackCOMMON:
  2527     0070                     ?_I2C_Open:
  2528     0070                     ?_I2C_MasterWrite:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ?_I2C_Close:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ?_I2C_MasterRead:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ?_I2C_Initialize:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ?_OSCILLATOR_Initialize:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ?_WDT_Initialize:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ?_TMR1_Initialize:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ?_EUSART_Initialize:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552     0070                     ?_TMR1_ISR:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555     0070                     ?_EUSART_Receive_ISR:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558     0070                     ?_EUSART_Transmit_ISR:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561     0070                     ??_EUSART_Transmit_ISR:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576     0070                     ?_EUSART_DefaultErrorHandler:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579     0070                     ?_EUSART_RxDataHandler:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582     0070                     ??_EUSART_RxDataHandler:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585     0070                     ?_TMR1_DefaultInterruptHandler:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588     0070                     ??_TMR1_DefaultInterruptHandler:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591     0070                     ?_TMR1_CallBack:	
  2592                           ; 1 bytes @ 0x0
  2593                           
  2594     0070                     ??_TMR1_CallBack:	
  2595                           ; 1 bytes @ 0x0
  2596                           
  2597     0070                     ?_I2C_DO_IDLE:	
  2598                           ; 1 bytes @ 0x0
  2599                           
  2600     0070                     ??_I2C_DO_IDLE:	
  2601                           ; 1 bytes @ 0x0
  2602                           
  2603     0070                     ?_I2C_DO_SEND_ADR_READ:	
  2604                           ; 1 bytes @ 0x0
  2605                           
  2606     0070                     ??_I2C_DO_SEND_ADR_READ:	
  2607                           ; 1 bytes @ 0x0
  2608                           
  2609     0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2610                           ; 1 bytes @ 0x0
  2611                           
  2612     0070                     ?_I2C_DO_TX:	
  2613                           ; 1 bytes @ 0x0
  2614                           
  2615     0070                     ?_I2C_DO_RX:	
  2616                           ; 1 bytes @ 0x0
  2617                           
  2618     0070                     ?_I2C_DO_RCEN:	
  2619                           ; 1 bytes @ 0x0
  2620                           
  2621     0070                     ??_I2C_DO_RCEN:	
  2622                           ; 1 bytes @ 0x0
  2623                           
  2624     0070                     ?_I2C_DO_TX_EMPTY:	
  2625                           ; 1 bytes @ 0x0
  2626                           
  2627     0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2628                           ; 1 bytes @ 0x0
  2629                           
  2630     0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2631                           ; 1 bytes @ 0x0
  2632                           
  2633     0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2634                           ; 1 bytes @ 0x0
  2635                           
  2636     0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2637                           ; 1 bytes @ 0x0
  2638                           
  2639     0070                     ?_I2C_DO_SEND_RESTART:	
  2640                           ; 1 bytes @ 0x0
  2641                           
  2642     0070                     ??_I2C_DO_SEND_RESTART:	
  2643                           ; 1 bytes @ 0x0
  2644                           
  2645     0070                     ?_I2C_DO_SEND_STOP:	
  2646                           ; 1 bytes @ 0x0
  2647                           
  2648     0070                     ??_I2C_DO_SEND_STOP:	
  2649                           ; 1 bytes @ 0x0
  2650                           
  2651     0070                     ?_I2C_DO_RX_ACK:	
  2652                           ; 1 bytes @ 0x0
  2653                           
  2654     0070                     ??_I2C_DO_RX_ACK:	
  2655                           ; 1 bytes @ 0x0
  2656                           
  2657     0070                     ?_I2C_DO_RX_NACK_STOP:	
  2658                           ; 1 bytes @ 0x0
  2659                           
  2660     0070                     ??_I2C_DO_RX_NACK_STOP:	
  2661                           ; 1 bytes @ 0x0
  2662                           
  2663     0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2664                           ; 1 bytes @ 0x0
  2665                           
  2666     0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2667                           ; 1 bytes @ 0x0
  2668                           
  2669     0070                     ?_I2C_DO_RESET:	
  2670                           ; 1 bytes @ 0x0
  2671                           
  2672     0070                     ??_I2C_DO_RESET:	
  2673                           ; 1 bytes @ 0x0
  2674                           
  2675     0070                     ?_I2C_DO_ADDRESS_NACK:	
  2676                           ; 1 bytes @ 0x0
  2677                           
  2678     0070                     ?_I2C_MasterIsr:	
  2679                           ; 1 bytes @ 0x0
  2680                           
  2681     0070                     ?_I2C_MasterClearIrq:	
  2682                           ; 1 bytes @ 0x0
  2683                           
  2684     0070                     ?_I2C_MasterOpen:	
  2685                           ; 1 bytes @ 0x0
  2686                           
  2687     0070                     ?_I2C_MasterEnableIrq:	
  2688                           ; 1 bytes @ 0x0
  2689                           
  2690     0070                     ?_I2C_MasterDisableIrq:	
  2691                           ; 1 bytes @ 0x0
  2692                           
  2693     0070                     ?_I2C_MasterClose:	
  2694                           ; 1 bytes @ 0x0
  2695                           
  2696     0070                     ?_I2C_MasterStart:	
  2697                           ; 1 bytes @ 0x0
  2698                           
  2699     0070                     ?_I2C_MasterFsm:	
  2700                           ; 1 bytes @ 0x0
  2701                           
  2702     0070                     ?_I2C_MasterIsNack:	
  2703                           ; 1 bytes @ 0x0
  2704                           
  2705     0070                     ??_I2C_MasterIsNack:	
  2706                           ; 1 bytes @ 0x0
  2707                           
  2708     0070                     ?_I2C_MasterSendTxData:	
  2709                           ; 1 bytes @ 0x0
  2710                           
  2711     0070                     ??_I2C_MasterSendTxData:	
  2712                           ; 1 bytes @ 0x0
  2713                           
  2714     0070                     ?_I2C_MasterGetRxData:	
  2715                           ; 1 bytes @ 0x0
  2716                           
  2717     0070                     ??_I2C_MasterGetRxData:	
  2718                           ; 1 bytes @ 0x0
  2719                           
  2720     0070                     ?_I2C_MasterSendAck:	
  2721                           ; 1 bytes @ 0x0
  2722                           
  2723     0070                     ??_I2C_MasterSendAck:	
  2724                           ; 1 bytes @ 0x0
  2725                           
  2726     0070                     ?_I2C_MasterStartRx:	
  2727                           ; 1 bytes @ 0x0
  2728                           
  2729     0070                     ??_I2C_MasterStartRx:	
  2730                           ; 1 bytes @ 0x0
  2731                           
  2732     0070                     ?_I2C_MasterSetIrq:	
  2733                           ; 1 bytes @ 0x0
  2734                           
  2735     0070                     ??_I2C_MasterSetIrq:	
  2736                           ; 1 bytes @ 0x0
  2737                           
  2738     0070                     ?_I2C_MasterEnableRestart:	
  2739                           ; 1 bytes @ 0x0
  2740                           
  2741     0070                     ??_I2C_MasterEnableRestart:	
  2742                           ; 1 bytes @ 0x0
  2743                           
  2744     0070                     ?_I2C_MasterStop:	
  2745                           ; 1 bytes @ 0x0
  2746                           
  2747     0070                     ??_I2C_MasterStop:	
  2748                           ; 1 bytes @ 0x0
  2749                           
  2750     0070                     ?_I2C_MasterSendNack:	
  2751                           ; 1 bytes @ 0x0
  2752                           
  2753     0070                     ??_I2C_MasterSendNack:	
  2754                           ; 1 bytes @ 0x0
  2755                           
  2756     0070                     ?_App_Init:	
  2757                           ; 1 bytes @ 0x0
  2758                           
  2759     0070                     ?_App_Process:	
  2760                           ; 1 bytes @ 0x0
  2761                           
  2762     0070                     ?_Tick_Init_SES:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765     0070                     ?_Task_MB:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768     0070                     ?_Modbus_sendTxBuff:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771     0070                     ?_rtcc_handle:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774     0070                     ??_rtcc_handle:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777     0070                     ?_PIN_MANAGER_Initialize:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780     0070                     ?_SYSTEM_Initialize:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783     0070                     ?_INTERRUPT_InterruptManager:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786     0070                     ?_EUSART_is_tx_done:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789     0070                     ?_EUSART_Read:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792     0070                     ?_EUSART_Write:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795     0070                     ?_TMR1_StartTimer:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798     0070                     ?_TMR1_WriteTimer:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801     0070                     ?_I2C_MasterOperation:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804     0070                     ?_main:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807     0070                     ?_ReadData:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     0070                     ?_Task_Sensor:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     0070                     ?_Task_Indicator:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816     0070                     ?_Device_Init:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     0070                     ?_buildException:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     0070                     ?_Modbus_getRxBuff:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     0070                     ?_validateRequest:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     0070                     ?_ModbusSlave_Init:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831     0070                     ?_ModbusSlave_Process:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834     0070                     ?i1_I2C_SetBuffer:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837     0070                     ?i1_I2C_SetCallback:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840     0070                     ?i1_I2C_MasterClearIrq:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843     0070                     ??i1_I2C_MasterClearIrq:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846     0070                     I2C_MasterSendTxData@data:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849     0070                     TMR1_WriteTimer@timerVal:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852     0070                     i1I2C_SetBuffer@bufferSize:	
  2853                           ; 2 bytes @ 0x0
  2854                           
  2855     0070                     i1I2C_SetCallback@cb:	
  2856                           ; 2 bytes @ 0x0
  2857                           
  2858                           
  2859                           ; 2 bytes @ 0x0
  2860     0070                     	ds	1
  2861     0071                     ??_EUSART_Receive_ISR:
  2862     0071                     ??_EUSART_DefaultErrorHandler:	
  2863                           ; 1 bytes @ 0x1
  2864                           
  2865     0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2866                           ; 1 bytes @ 0x1
  2867                           
  2868                           
  2869                           ; 1 bytes @ 0x1
  2870     0071                     	ds	1
  2871     0072                     ??_TMR1_ISR:
  2872     0072                     ??_TMR1_WriteTimer:	
  2873                           ; 1 bytes @ 0x2
  2874                           
  2875     0072                     ??i1_I2C_SetBuffer:	
  2876                           ; 1 bytes @ 0x2
  2877                           
  2878     0072                     i1I2C_SetBuffer@buffer:	
  2879                           ; 1 bytes @ 0x2
  2880                           
  2881     0072                     i1I2C_SetCallback@ptr:	
  2882                           ; 1 bytes @ 0x2
  2883                           
  2884                           
  2885                           ; 1 bytes @ 0x2
  2886     0072                     	ds	1
  2887     0073                     ??i1_I2C_SetCallback:
  2888     0073                     i1I2C_SetCallback@idx:	
  2889                           ; 1 bytes @ 0x3
  2890                           
  2891                           
  2892                           ; 1 bytes @ 0x3
  2893     0073                     	ds	1
  2894     0074                     ?_I2C_SetDataCompleteCallback:
  2895     0074                     I2C_SetDataCompleteCallback@cb:	
  2896                           ; 1 bytes @ 0x4
  2897                           
  2898                           
  2899                           ; 2 bytes @ 0x4
  2900     0074                     	ds	2
  2901     0076                     I2C_SetDataCompleteCallback@ptr:
  2902                           
  2903                           ; 1 bytes @ 0x6
  2904     0076                     	ds	1
  2905     0077                     ??_I2C_SetDataCompleteCallback:
  2906     0077                     ?_rd1RegCompleteHandler:	
  2907                           ; 1 bytes @ 0x7
  2908                           
  2909     0077                     ?_rd2RegCompleteHandler:	
  2910                           ; 1 bytes @ 0x7
  2911                           
  2912     0077                     ?_wr1RegCompleteHandler:	
  2913                           ; 1 bytes @ 0x7
  2914                           
  2915     0077                     ?_wr2RegCompleteHandler:	
  2916                           ; 1 bytes @ 0x7
  2917                           
  2918     0077                     ?_rdBlkRegCompleteHandler:	
  2919                           ; 1 bytes @ 0x7
  2920                           
  2921     0077                     ?_I2C_CallbackReturnStop:	
  2922                           ; 1 bytes @ 0x7
  2923                           
  2924     0077                     ?_I2C_CallbackReturnReset:	
  2925                           ; 1 bytes @ 0x7
  2926                           
  2927     0077                     rd1RegCompleteHandler@ptr:	
  2928                           ; 1 bytes @ 0x7
  2929                           
  2930     0077                     rd2RegCompleteHandler@ptr:	
  2931                           ; 1 bytes @ 0x7
  2932                           
  2933     0077                     wr1RegCompleteHandler@ptr:	
  2934                           ; 1 bytes @ 0x7
  2935                           
  2936     0077                     wr2RegCompleteHandler@ptr:	
  2937                           ; 1 bytes @ 0x7
  2938                           
  2939     0077                     rdBlkRegCompleteHandler@ptr:	
  2940                           ; 1 bytes @ 0x7
  2941                           
  2942     0077                     I2C_CallbackReturnStop@funPtr:	
  2943                           ; 1 bytes @ 0x7
  2944                           
  2945     0077                     I2C_CallbackReturnReset@funPtr:	
  2946                           ; 1 bytes @ 0x7
  2947                           
  2948                           
  2949                           ; 1 bytes @ 0x7
  2950     0077                     	ds	1
  2951     0078                     ??_rd1RegCompleteHandler:
  2952     0078                     ??_rd2RegCompleteHandler:	
  2953                           ; 1 bytes @ 0x8
  2954                           
  2955     0078                     ??_wr1RegCompleteHandler:	
  2956                           ; 1 bytes @ 0x8
  2957                           
  2958     0078                     ??_wr2RegCompleteHandler:	
  2959                           ; 1 bytes @ 0x8
  2960                           
  2961     0078                     ??_rdBlkRegCompleteHandler:	
  2962                           ; 1 bytes @ 0x8
  2963                           
  2964     0078                     ??_I2C_DO_TX:	
  2965                           ; 1 bytes @ 0x8
  2966                           
  2967     0078                     ??_I2C_DO_RX:	
  2968                           ; 1 bytes @ 0x8
  2969                           
  2970     0078                     ??_I2C_DO_TX_EMPTY:	
  2971                           ; 1 bytes @ 0x8
  2972                           
  2973     0078                     ??_I2C_DO_ADDRESS_NACK:	
  2974                           ; 1 bytes @ 0x8
  2975                           
  2976     0078                     ??_I2C_CallbackReturnStop:	
  2977                           ; 1 bytes @ 0x8
  2978                           
  2979     0078                     ??_I2C_CallbackReturnReset:	
  2980                           ; 1 bytes @ 0x8
  2981                           
  2982                           
  2983                           ; 1 bytes @ 0x8
  2984     0078                     	ds	2
  2985     007A                     ??_I2C_MasterFsm:
  2986                           
  2987                           ; 1 bytes @ 0xA
  2988     007A                     	ds	2
  2989     007C                     ??_I2C_MasterIsr:
  2990     007C                     ??_INTERRUPT_InterruptManager:	
  2991                           ; 1 bytes @ 0xC
  2992                           
  2993                           
  2994                           	psect	cstackBANK0
  2995     0020                     __pcstackBANK0:	
  2996                           ; 1 bytes @ 0xC
  2997                           
  2998     0020                     ?_I2C_SetBuffer:
  2999     0020                     ??_I2C_Close:	
  3000                           ; 1 bytes @ 0x0
  3001                           
  3002     0020                     ??_I2C_Initialize:	
  3003                           ; 1 bytes @ 0x0
  3004                           
  3005     0020                     ??_OSCILLATOR_Initialize:	
  3006                           ; 1 bytes @ 0x0
  3007                           
  3008     0020                     ??_WDT_Initialize:	
  3009                           ; 1 bytes @ 0x0
  3010                           
  3011     0020                     ?_EUSART_SetRxInterruptHandler:	
  3012                           ; 1 bytes @ 0x0
  3013                           
  3014     0020                     ?_EUSART_SetTxInterruptHandler:	
  3015                           ; 1 bytes @ 0x0
  3016                           
  3017     0020                     ?_EUSART_SetFramingErrorHandler:	
  3018                           ; 1 bytes @ 0x0
  3019                           
  3020     0020                     ?_EUSART_SetOverrunErrorHandler:	
  3021                           ; 1 bytes @ 0x0
  3022                           
  3023     0020                     ?_EUSART_SetErrorHandler:	
  3024                           ; 1 bytes @ 0x0
  3025                           
  3026     0020                     ?_TMR1_SetInterruptHandler:	
  3027                           ; 1 bytes @ 0x0
  3028                           
  3029     0020                     ?_I2C_SetInterruptHandler:	
  3030                           ; 1 bytes @ 0x0
  3031                           
  3032     0020                     ??_I2C_MasterClearIrq:	
  3033                           ; 1 bytes @ 0x0
  3034                           
  3035     0020                     ??_I2C_MasterOpen:	
  3036                           ; 1 bytes @ 0x0
  3037                           
  3038     0020                     ??_I2C_MasterEnableIrq:	
  3039                           ; 1 bytes @ 0x0
  3040                           
  3041     0020                     ??_I2C_MasterDisableIrq:	
  3042                           ; 1 bytes @ 0x0
  3043                           
  3044     0020                     ??_I2C_MasterClose:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047     0020                     ??_I2C_MasterStart:	
  3048                           ; 1 bytes @ 0x0
  3049                           
  3050     0020                     ?_I2C_SetCallback:	
  3051                           ; 1 bytes @ 0x0
  3052                           
  3053     0020                     ??_PIN_MANAGER_Initialize:	
  3054                           ; 1 bytes @ 0x0
  3055                           
  3056     0020                     ??_EUSART_is_tx_done:	
  3057                           ; 1 bytes @ 0x0
  3058                           
  3059     0020                     ??_EUSART_Read:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062     0020                     ??_EUSART_Write:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065     0020                     ??_TMR1_StartTimer:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068     0020                     ??_I2C_MasterOperation:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071     0020                     ??_Task_Indicator:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074     0020                     ??_Device_Init:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077     0020                     ??_buildException:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080     0020                     ??_ModbusSlave_Init:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083     0020                     ?_Modbus_calcCRC:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086     0020                     ?__Umul8_16:	
  3087                           ; 2 bytes @ 0x0
  3088                           
  3089     0020                     ?_Get_millis:	
  3090                           ; 2 bytes @ 0x0
  3091                           
  3092     0020                     ?___fltol:	
  3093                           ; 4 bytes @ 0x0
  3094                           
  3095     0020                     ?___xxtofl:	
  3096                           ; 4 bytes @ 0x0
  3097                           
  3098     0020                     I2C_Close@returnValue:	
  3099                           ; 4 bytes @ 0x0
  3100                           
  3101     0020                     I2C_MasterOperation@read:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104     0020                     Device_Init@value_SW1:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107     0020                     ModbusSlave_Init@_SW_Ad:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110     0020                     __Umul8_16@multiplicand:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113     0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116     0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3117                           ; 2 bytes @ 0x0
  3118                           
  3119     0020                     EUSART_SetErrorHandler@interruptHandler:	
  3120                           ; 2 bytes @ 0x0
  3121                           
  3122     0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3123                           ; 2 bytes @ 0x0
  3124                           
  3125     0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3126                           ; 2 bytes @ 0x0
  3127                           
  3128     0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  3129                           ; 2 bytes @ 0x0
  3130                           
  3131     0020                     I2C_SetBuffer@bufferSize:	
  3132                           ; 2 bytes @ 0x0
  3133                           
  3134     0020                     I2C_SetInterruptHandler@InterruptHandler:	
  3135                           ; 2 bytes @ 0x0
  3136                           
  3137     0020                     I2C_SetCallback@cb:	
  3138                           ; 2 bytes @ 0x0
  3139                           
  3140     0020                     ___fltol@f1:	
  3141                           ; 2 bytes @ 0x0
  3142                           
  3143     0020                     ___xxtofl@val:	
  3144                           ; 4 bytes @ 0x0
  3145                           
  3146                           
  3147                           ; 4 bytes @ 0x0
  3148     0020                     	ds	1
  3149     0021                     EUSART_Read@readValue:
  3150     0021                     EUSART_Write@txData:	
  3151                           ; 1 bytes @ 0x1
  3152                           
  3153     0021                     I2C_MasterOperation@returnValue:	
  3154                           ; 1 bytes @ 0x1
  3155                           
  3156     0021                     Device_Init@value_SW2:	
  3157                           ; 1 bytes @ 0x1
  3158                           
  3159     0021                     buildException@exception:	
  3160                           ; 1 bytes @ 0x1
  3161                           
  3162                           
  3163                           ; 1 bytes @ 0x1
  3164     0021                     	ds	1
  3165     0022                     ??_I2C_Open:
  3166     0022                     ??_I2C_SetBuffer:	
  3167                           ; 1 bytes @ 0x2
  3168                           
  3169     0022                     ??_I2C_MasterWrite:	
  3170                           ; 1 bytes @ 0x2
  3171                           
  3172     0022                     ??_I2C_MasterRead:	
  3173                           ; 1 bytes @ 0x2
  3174                           
  3175     0022                     ??_TMR1_Initialize:	
  3176                           ; 1 bytes @ 0x2
  3177                           
  3178     0022                     ??_EUSART_Initialize:	
  3179                           ; 1 bytes @ 0x2
  3180                           
  3181     0022                     ??_EUSART_SetRxInterruptHandler:	
  3182                           ; 1 bytes @ 0x2
  3183                           
  3184     0022                     ??_EUSART_SetTxInterruptHandler:	
  3185                           ; 1 bytes @ 0x2
  3186                           
  3187     0022                     ??_EUSART_SetFramingErrorHandler:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190     0022                     ??_EUSART_SetOverrunErrorHandler:	
  3191                           ; 1 bytes @ 0x2
  3192                           
  3193     0022                     ??_EUSART_SetErrorHandler:	
  3194                           ; 1 bytes @ 0x2
  3195                           
  3196     0022                     ??_TMR1_SetInterruptHandler:	
  3197                           ; 1 bytes @ 0x2
  3198                           
  3199     0022                     ??_I2C_SetInterruptHandler:	
  3200                           ; 1 bytes @ 0x2
  3201                           
  3202     0022                     ??_Tick_Init_SES:	
  3203                           ; 1 bytes @ 0x2
  3204                           
  3205     0022                     ??_Modbus_calcCRC:	
  3206                           ; 1 bytes @ 0x2
  3207                           
  3208     0022                     ??__Umul8_16:	
  3209                           ; 1 bytes @ 0x2
  3210                           
  3211     0022                     ??_SYSTEM_Initialize:	
  3212                           ; 1 bytes @ 0x2
  3213                           
  3214     0022                     ??_Modbus_getRxBuff:	
  3215                           ; 1 bytes @ 0x2
  3216                           
  3217     0022                     I2C_Open@address:	
  3218                           ; 1 bytes @ 0x2
  3219                           
  3220     0022                     I2C_SetBuffer@buffer:	
  3221                           ; 1 bytes @ 0x2
  3222                           
  3223     0022                     I2C_SetCallback@ptr:	
  3224                           ; 1 bytes @ 0x2
  3225                           
  3226     0022                     Device_Init@value_SW3:	
  3227                           ; 1 bytes @ 0x2
  3228                           
  3229     0022                     buildException@u8func:	
  3230                           ; 1 bytes @ 0x2
  3231                           
  3232                           
  3233                           ; 1 bytes @ 0x2
  3234     0022                     	ds	1
  3235     0023                     ??_I2C_SetCallback:
  3236     0023                     I2C_Open@returnValue:	
  3237                           ; 1 bytes @ 0x3
  3238                           
  3239     0023                     I2C_SetCallback@idx:	
  3240                           ; 1 bytes @ 0x3
  3241                           
  3242     0023                     Device_Init@value_SW4:	
  3243                           ; 1 bytes @ 0x3
  3244                           
  3245                           
  3246                           ; 1 bytes @ 0x3
  3247     0023                     	ds	1
  3248     0024                     ?_I2C_SetAddressNackCallback:
  3249     0024                     ??_App_Init:	
  3250                           ; 1 bytes @ 0x4
  3251                           
  3252     0024                     ??_Get_millis:	
  3253                           ; 1 bytes @ 0x4
  3254                           
  3255     0024                     ?_I2C_ReadNBytes:	
  3256                           ; 1 bytes @ 0x4
  3257                           
  3258     0024                     ??___fltol:	
  3259                           ; 1 bytes @ 0x4
  3260                           
  3261     0024                     ??___xxtofl:	
  3262                           ; 1 bytes @ 0x4
  3263                           
  3264     0024                     ?_llabs:	
  3265                           ; 1 bytes @ 0x4
  3266                           
  3267     0024                     I2C_ReadNBytes@data:	
  3268                           ; 8 bytes @ 0x4
  3269                           
  3270     0024                     I2C_SetAddressNackCallback@cb:	
  3271                           ; 1 bytes @ 0x4
  3272                           
  3273     0024                     __Umul8_16@product:	
  3274                           ; 2 bytes @ 0x4
  3275                           
  3276     0024                     llabs@a:	
  3277                           ; 2 bytes @ 0x4
  3278                           
  3279                           
  3280                           ; 8 bytes @ 0x4
  3281     0024                     	ds	1
  3282     0025                     I2C_ReadNBytes@len:
  3283                           
  3284                           ; 2 bytes @ 0x5
  3285     0025                     	ds	1
  3286     0026                     I2C_SetAddressNackCallback@ptr:
  3287     0026                     Modbus_calcCRC@temp2:	
  3288                           ; 2 bytes @ 0x6
  3289                           
  3290     0026                     __Umul8_16@word_mpld:	
  3291                           ; 2 bytes @ 0x6
  3292                           
  3293                           
  3294                           ; 2 bytes @ 0x6
  3295     0026                     	ds	1
  3296     0027                     ??_I2C_ReadNBytes:
  3297     0027                     I2C_ReadNBytes@address:	
  3298                           ; 1 bytes @ 0x7
  3299                           
  3300                           
  3301                           ; 1 bytes @ 0x7
  3302     0027                     	ds	1
  3303     0028                     ??_I2C_SetAddressNackCallback:
  3304     0028                     ?_I2C_WriteNBytes:	
  3305                           ; 1 bytes @ 0x8
  3306                           
  3307     0028                     I2C_WriteNBytes@data:	
  3308                           ; 1 bytes @ 0x8
  3309                           
  3310     0028                     ___fltol@sign1:	
  3311                           ; 1 bytes @ 0x8
  3312                           
  3313     0028                     __Umul8_16@multiplier:	
  3314                           ; 1 bytes @ 0x8
  3315                           
  3316     0028                     ___xxtofl@sign:	
  3317                           ; 1 bytes @ 0x8
  3318                           
  3319     0028                     Modbus_calcCRC@flag:	
  3320                           ; 1 bytes @ 0x8
  3321                           
  3322                           
  3323                           ; 2 bytes @ 0x8
  3324     0028                     	ds	1
  3325     0029                     Modbus_getRxBuff@bBuffOverflow:
  3326     0029                     ___fltol@exp1:	
  3327                           ; 1 bytes @ 0x9
  3328                           
  3329     0029                     ___xxtofl@exp:	
  3330                           ; 1 bytes @ 0x9
  3331                           
  3332     0029                     I2C_WriteNBytes@len:	
  3333                           ; 1 bytes @ 0x9
  3334                           
  3335                           
  3336                           ; 2 bytes @ 0x9
  3337     0029                     	ds	1
  3338     002A                     Modbus_calcCRC@len:
  3339     002A                     ___xxtofl@arg:	
  3340                           ; 1 bytes @ 0xA
  3341                           
  3342                           
  3343                           ; 4 bytes @ 0xA
  3344     002A                     	ds	1
  3345     002B                     ??_I2C_WriteNBytes:
  3346     002B                     I2C_WriteNBytes@address:	
  3347                           ; 1 bytes @ 0xB
  3348                           
  3349     002B                     Modbus_calcCRC@i:	
  3350                           ; 1 bytes @ 0xB
  3351                           
  3352                           
  3353                           ; 1 bytes @ 0xB
  3354     002B                     	ds	1
  3355     002C                     ??_llabs:
  3356     002C                     Modbus_calcCRC@j:	
  3357                           ; 1 bytes @ 0xC
  3358                           
  3359                           
  3360                           ; 1 bytes @ 0xC
  3361     002C                     	ds	1
  3362     002D                     Modbus_calcCRC@temp:
  3363                           
  3364                           ; 2 bytes @ 0xD
  3365     002D                     	ds	1
  3366     002E                     ?___flmul:
  3367     002E                     ___flmul@b:	
  3368                           ; 4 bytes @ 0xE
  3369                           
  3370                           
  3371                           ; 4 bytes @ 0xE
  3372     002E                     	ds	1
  3373     002F                     ??_Modbus_sendTxBuff:
  3374     002F                     ??_validateRequest:	
  3375                           ; 1 bytes @ 0xF
  3376                           
  3377                           
  3378                           ; 1 bytes @ 0xF
  3379     002F                     	ds	3
  3380     0032                     ___flmul@a:
  3381                           
  3382                           ; 4 bytes @ 0x12
  3383     0032                     	ds	4
  3384     0036                     ??___flmul:
  3385     0036                     Modbus_sendTxBuff@u16crc:	
  3386                           ; 1 bytes @ 0x16
  3387                           
  3388                           
  3389                           ; 2 bytes @ 0x16
  3390     0036                     	ds	2
  3391     0038                     Modbus_sendTxBuff@index:
  3392                           
  3393                           ; 2 bytes @ 0x18
  3394     0038                     	ds	2
  3395     003A                     Modbus_sendTxBuff@u32overTimecountDown:
  3396                           
  3397                           ; 4 bytes @ 0x1A
  3398     003A                     	ds	1
  3399     003B                     ___flmul@sign:
  3400                           
  3401                           ; 1 bytes @ 0x1B
  3402     003B                     	ds	1
  3403     003C                     validateRequest@u16MsgCRC:
  3404     003C                     ___flmul@grs:	
  3405                           ; 2 bytes @ 0x1C
  3406                           
  3407                           
  3408                           ; 4 bytes @ 0x1C
  3409     003C                     	ds	2
  3410     003E                     ?_ModbusSlaveF04:
  3411     003E                     validateRequest@isSupported:	
  3412                           ; 1 bytes @ 0x1E
  3413                           
  3414     003E                     ModbusSlaveF04@size:	
  3415                           ; 1 bytes @ 0x1E
  3416                           
  3417                           
  3418                           ; 2 bytes @ 0x1E
  3419     003E                     	ds	1
  3420     003F                     validateRequest@i:
  3421                           
  3422                           ; 1 bytes @ 0x1F
  3423     003F                     	ds	1
  3424     0040                     ??_ModbusSlaveF04:
  3425     0040                     ___flmul@aexp:	
  3426                           ; 1 bytes @ 0x20
  3427                           
  3428                           
  3429                           ; 1 bytes @ 0x20
  3430     0040                     	ds	1
  3431     0041                     ___flmul@bexp:
  3432                           
  3433                           ; 1 bytes @ 0x21
  3434     0041                     	ds	1
  3435     0042                     ___flmul@prod:
  3436                           
  3437                           ; 4 bytes @ 0x22
  3438     0042                     	ds	4
  3439     0046                     ___flmul@temp:
  3440                           
  3441                           ; 2 bytes @ 0x26
  3442     0046                     	ds	2
  3443     0048                     ?___fladd:
  3444     0048                     ___fladd@b:	
  3445                           ; 4 bytes @ 0x28
  3446                           
  3447                           
  3448                           ; 4 bytes @ 0x28
  3449     0048                     	ds	2
  3450     004A                     ModbusSlaveF04@u8StartAdd:
  3451                           
  3452                           ; 2 bytes @ 0x2A
  3453     004A                     	ds	2
  3454     004C                     ModbusSlaveF04@u8regsno:
  3455     004C                     ___fladd@a:	
  3456                           ; 1 bytes @ 0x2C
  3457                           
  3458                           
  3459                           ; 4 bytes @ 0x2C
  3460     004C                     	ds	1
  3461     004D                     ModbusSlaveF04@reg:
  3462                           
  3463                           ; 1 bytes @ 0x2D
  3464     004D                     	ds	1
  3465     004E                     ModbusSlaveF04@valueAdd:
  3466                           
  3467                           ; 2 bytes @ 0x2E
  3468     004E                     	ds	2
  3469     0050                     ??___fladd:
  3470     0050                     ModbusSlaveF04@valueRegsno:	
  3471                           ; 1 bytes @ 0x30
  3472                           
  3473                           
  3474                           ; 2 bytes @ 0x30
  3475     0050                     	ds	2
  3476     0052                     ModbusSlaveF04@i:
  3477                           
  3478                           ; 2 bytes @ 0x32
  3479     0052                     	ds	2
  3480     0054                     ?_ModbusRTU_Slave_Poll:
  3481     0054                     ModbusRTU_Slave_Poll@size:	
  3482                           ; 1 bytes @ 0x34
  3483                           
  3484                           
  3485                           ; 2 bytes @ 0x34
  3486     0054                     	ds	2
  3487     0056                     ??_ModbusRTU_Slave_Poll:
  3488                           
  3489                           ; 1 bytes @ 0x36
  3490     0056                     	ds	2
  3491     0058                     ___fladd@signs:
  3492                           
  3493                           ; 1 bytes @ 0x38
  3494     0058                     	ds	1
  3495     0059                     ___fladd@aexp:
  3496                           
  3497                           ; 1 bytes @ 0x39
  3498     0059                     	ds	1
  3499     005A                     ___fladd@bexp:
  3500                           
  3501                           ; 1 bytes @ 0x3A
  3502     005A                     	ds	1
  3503     005B                     ___fladd@grs:
  3504                           
  3505                           ; 1 bytes @ 0x3B
  3506     005B                     	ds	1
  3507     005C                     ?___fldiv:
  3508     005C                     ___fldiv@a:	
  3509                           ; 4 bytes @ 0x3C
  3510                           
  3511                           
  3512                           ; 4 bytes @ 0x3C
  3513     005C                     	ds	2
  3514     005E                     ModbusRTU_Slave_Poll@reg:
  3515                           
  3516                           ; 1 bytes @ 0x3E
  3517     005E                     	ds	1
  3518     005F                     ModbusRTU_Slave_Poll@u8Current:
  3519                           
  3520                           ; 1 bytes @ 0x3F
  3521     005F                     	ds	1
  3522     0060                     ModbusRTU_Slave_Poll@i8state:
  3523     0060                     ___fldiv@b:	
  3524                           ; 1 bytes @ 0x40
  3525                           
  3526                           
  3527                           ; 4 bytes @ 0x40
  3528     0060                     	ds	1
  3529     0061                     ModbusRTU_Slave_Poll@u8exception:
  3530                           
  3531                           ; 1 bytes @ 0x41
  3532     0061                     	ds	1
  3533     0062                     ??_Task_MB:
  3534     0062                     ??_ModbusSlave_Process:	
  3535                           ; 1 bytes @ 0x42
  3536                           
  3537                           
  3538                           ; 1 bytes @ 0x42
  3539     0062                     	ds	2
  3540     0064                     ??___fldiv:
  3541                           
  3542                           ; 1 bytes @ 0x44
  3543     0064                     	ds	5
  3544     0069                     ??_App_Process:
  3545     0069                     ??_main:	
  3546                           ; 1 bytes @ 0x49
  3547                           
  3548                           
  3549                           	psect	maintext
  3550     13A5                     __pmaintext:	
  3551                           ; 1 bytes @ 0x49
  3552 ;;
  3553 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3554 ;;
  3555 ;; *************** function _main *****************
  3556 ;; Defined at:
  3557 ;;		line 49 in file "main.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : B1F/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3571 ;;      Params:         0       0       0       0       0       0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0
  3574 ;;      Totals:         0       0       0       0       0       0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels required when called: 14
  3577 ;; This function calls:
  3578 ;;		_App_Init
  3579 ;;		_App_Process
  3580 ;;		_SYSTEM_Initialize
  3581 ;; This function is called by:
  3582 ;;		Startup code after reset
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586     13A5                     _main:	
  3587                           ;psect for function _main
  3588                           
  3589     13A5                     l5187:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3592                           
  3593                           
  3594                           ;main.c: 51:     SYSTEM_Initialize();
  3595     13A5  3194  242A  3193   	fcall	_SYSTEM_Initialize
  3596                           
  3597                           ;main.c: 52:     App_Init();
  3598     13A8  3193  2320  3193   	fcall	_App_Init
  3599     13AB                     l5189:
  3600                           
  3601                           ;main.c: 57:     (INTCONbits.GIE = 1);
  3602     13AB  178B               	bsf	11,7	;volatile
  3603     13AC                     l5191:
  3604                           
  3605                           ;main.c: 60:     (INTCONbits.PEIE = 1);
  3606     13AC  170B               	bsf	11,6	;volatile
  3607     13AD                     l5193:
  3608                           
  3609                           ;main.c: 70:         App_Process();
  3610     13AD  3193  232A  3193   	fcall	_App_Process
  3611     13B0  2BAD               	goto	l5193
  3612     13B1  3180  2858         	ljmp	start
  3613     13B3                     __end_of_main:
  3614                           
  3615                           	psect	text1
  3616     142A                     __ptext1:	
  3617 ;; *************** function _SYSTEM_Initialize *****************
  3618 ;; Defined at:
  3619 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, pclath, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3633 ;;      Params:         0       0       0       0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 9
  3640 ;; This function calls:
  3641 ;;		_EUSART_Initialize
  3642 ;;		_I2C_Initialize
  3643 ;;		_OSCILLATOR_Initialize
  3644 ;;		_PIN_MANAGER_Initialize
  3645 ;;		_TMR1_Initialize
  3646 ;;		_WDT_Initialize
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652     142A                     _SYSTEM_Initialize:	
  3653                           ;psect for function _SYSTEM_Initialize
  3654                           
  3655     142A                     l4999:	
  3656                           ;incstack = 0
  3657                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3658                           
  3659                           
  3660                           ;mcc_generated_files/mcc.c: 52:     I2C_Initialize();
  3661     142A  3193  230D  3194   	fcall	_I2C_Initialize
  3662                           
  3663                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3664     142D  3194  24D4  3194   	fcall	_PIN_MANAGER_Initialize
  3665                           
  3666                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3667     1430  3192  22B6  3194   	fcall	_OSCILLATOR_Initialize
  3668                           
  3669                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3670     1433  3192  2269  3194   	fcall	_WDT_Initialize
  3671                           
  3672                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  3673     1436  3194  24B9  3194   	fcall	_TMR1_Initialize
  3674                           
  3675                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3676     1439  3197  2735  3194   	fcall	_EUSART_Initialize
  3677     143C                     l163:
  3678     143C  0008               	return
  3679     143D                     __end_of_SYSTEM_Initialize:
  3680                           
  3681                           	psect	text2
  3682     1269                     __ptext2:	
  3683 ;; *************** function _WDT_Initialize *****************
  3684 ;; Defined at:
  3685 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3699 ;;      Params:         0       0       0       0       0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 7
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_SYSTEM_Initialize
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     1269                     _WDT_Initialize:	
  3714                           ;psect for function _WDT_Initialize
  3715                           
  3716     1269                     l4833:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _WDT_Initialize: [wreg]
  3719                           
  3720                           
  3721                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x24;
  3722     1269  3024               	movlw	36
  3723     126A  0021               	movlb	1	; select bank1
  3724     126B  0097               	movwf	23	;volatile
  3725     126C                     l169:
  3726     126C  0008               	return
  3727     126D                     __end_of_WDT_Initialize:
  3728                           
  3729                           	psect	text3
  3730     14B9                     __ptext3:	
  3731 ;; *************** function _TMR1_Initialize *****************
  3732 ;; Defined at:
  3733 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3747 ;;      Params:         0       0       0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 8
  3754 ;; This function calls:
  3755 ;;		_TMR1_SetInterruptHandler
  3756 ;; This function is called by:
  3757 ;;		_SYSTEM_Initialize
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     14B9                     _TMR1_Initialize:	
  3762                           ;psect for function _TMR1_Initialize
  3763                           
  3764     14B9                     l4835:	
  3765                           ;incstack = 0
  3766                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3767                           
  3768                           
  3769                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  3770     14B9  0020               	movlb	0	; select bank0
  3771     14BA  0199               	clrf	25	;volatile
  3772     14BB                     l4837:
  3773                           
  3774                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xE0;
  3775     14BB  30E0               	movlw	224
  3776     14BC  0097               	movwf	23	;volatile
  3777     14BD                     l4839:
  3778                           
  3779                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0xC0;
  3780     14BD  30C0               	movlw	192
  3781     14BE  0096               	movwf	22	;volatile
  3782     14BF                     l4841:
  3783                           
  3784                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  3785     14BF  1011               	bcf	17,0	;volatile
  3786     14C0                     l4843:
  3787                           
  3788                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  3789     14C0  0817               	movf	23,w	;volatile
  3790     14C1  0021               	movlb	1	; select bank1
  3791     14C2  00E0               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3792     14C3  0020               	movlb	0	; select bank0
  3793     14C4  0816               	movf	22,w	;volatile
  3794     14C5  0021               	movlb	1	; select bank1
  3795     14C6  00DF               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3796     14C7                     l4845:
  3797                           
  3798                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  3799     14C7  1411               	bsf	17,0	;volatile
  3800     14C8                     l4847:
  3801                           
  3802                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  3803     14C8  302A               	movlw	low _TMR1_DefaultInterruptHandler
  3804     14C9  0020               	movlb	0	; select bank0
  3805     14CA  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3806     14CB  3012               	movlw	high _TMR1_DefaultInterruptHandler
  3807     14CC  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3808     14CD  3192  22CE  3194   	fcall	_TMR1_SetInterruptHandler
  3809     14D0                     l4849:
  3810                           
  3811                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  3812     14D0  3041               	movlw	65
  3813     14D1  0020               	movlb	0	; select bank0
  3814     14D2  0098               	movwf	24	;volatile
  3815     14D3                     l381:
  3816     14D3  0008               	return
  3817     14D4                     __end_of_TMR1_Initialize:
  3818                           
  3819                           	psect	text4
  3820     14D4                     __ptext4:	
  3821 ;; *************** function _PIN_MANAGER_Initialize *****************
  3822 ;; Defined at:
  3823 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3837 ;;      Params:         0       0       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 7
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_SYSTEM_Initialize
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851     14D4                     _PIN_MANAGER_Initialize:	
  3852                           ;psect for function _PIN_MANAGER_Initialize
  3853                           
  3854     14D4                     l4795:	
  3855                           ;incstack = 0
  3856                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3857                           
  3858                           
  3859                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3860     14D4  0022               	movlb	2	; select bank2
  3861     14D5  0190               	clrf	16	;volatile
  3862                           
  3863                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  3864     14D6  018C               	clrf	12	;volatile
  3865                           
  3866                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  3867     14D7  018D               	clrf	13	;volatile
  3868     14D8                     l4797:
  3869                           
  3870                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x63;
  3871     14D8  3063               	movlw	99
  3872     14D9  008E               	movwf	14	;volatile
  3873     14DA                     l4799:
  3874                           
  3875                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  3876     14DA  3008               	movlw	8
  3877     14DB  0021               	movlb	1	; select bank1
  3878     14DC  0090               	movwf	16	;volatile
  3879     14DD                     l4801:
  3880                           
  3881                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  3882     14DD  30FF               	movlw	255
  3883     14DE  008C               	movwf	12	;volatile
  3884     14DF                     l4803:
  3885                           
  3886                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xFF;
  3887     14DF  30FF               	movlw	255
  3888     14E0  008D               	movwf	13	;volatile
  3889     14E1                     l4805:
  3890                           
  3891                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x9C;
  3892     14E1  309C               	movlw	156
  3893     14E2  008E               	movwf	14	;volatile
  3894     14E3                     l4807:
  3895                           
  3896                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x3F;
  3897     14E3  303F               	movlw	63
  3898     14E4  0023               	movlb	3	; select bank3
  3899     14E5  008D               	movwf	13	;volatile
  3900     14E6                     l4809:
  3901                           
  3902                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x30;
  3903     14E6  3030               	movlw	48
  3904     14E7  008C               	movwf	12	;volatile
  3905     14E8                     l4811:
  3906                           
  3907                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  3908     14E8  0024               	movlb	4	; select bank4
  3909     14E9  0190               	clrf	16	;volatile
  3910     14EA                     l4813:
  3911                           
  3912                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3913     14EA  018D               	clrf	13	;volatile
  3914     14EB                     l4815:
  3915                           
  3916                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  3917     14EB  0021               	movlb	1	; select bank1
  3918     14EC  1795               	bsf	21,7	;volatile
  3919     14ED                     l4817:
  3920                           
  3921                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  3922     14ED  0022               	movlb	2	; select bank2
  3923     14EE  019D               	clrf	29	;volatile
  3924     14EF                     l135:
  3925     14EF  0008               	return
  3926     14F0                     __end_of_PIN_MANAGER_Initialize:
  3927                           
  3928                           	psect	text5
  3929     12B6                     __ptext5:	
  3930 ;; *************** function _OSCILLATOR_Initialize *****************
  3931 ;; Defined at:
  3932 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3946 ;;      Params:         0       0       0       0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0
  3949 ;;      Totals:         0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:        0 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 7
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_SYSTEM_Initialize
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960     12B6                     _OSCILLATOR_Initialize:	
  3961                           ;psect for function _OSCILLATOR_Initialize
  3962                           
  3963     12B6                     l4827:	
  3964                           ;incstack = 0
  3965                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3966                           
  3967                           
  3968                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  3969     12B6  3070               	movlw	112
  3970     12B7  0021               	movlb	1	; select bank1
  3971     12B8  0099               	movwf	25	;volatile
  3972     12B9                     l4829:
  3973                           
  3974                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3975     12B9  0198               	clrf	24	;volatile
  3976     12BA                     l4831:
  3977                           
  3978                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  3979     12BA  0022               	movlb	2	; select bank2
  3980     12BB  0196               	clrf	22	;volatile
  3981     12BC                     l166:
  3982     12BC  0008               	return
  3983     12BD                     __end_of_OSCILLATOR_Initialize:
  3984                           
  3985                           	psect	text6
  3986     130D                     __ptext6:	
  3987 ;; *************** function _I2C_Initialize *****************
  3988 ;; Defined at:
  3989 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4003 ;;      Params:         0       0       0       0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 7
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_SYSTEM_Initialize
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017     130D                     _I2C_Initialize:	
  4018                           ;psect for function _I2C_Initialize
  4019                           
  4020     130D                     l4819:	
  4021                           ;incstack = 0
  4022                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4023                           
  4024                           
  4025                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  4026     130D  0024               	movlb	4	; select bank4
  4027     130E  0194               	clrf	20	;volatile
  4028     130F                     l4821:
  4029                           
  4030                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4031     130F  3008               	movlw	8
  4032     1310  0095               	movwf	21	;volatile
  4033     1311                     l4823:
  4034                           
  4035                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4036     1311  0196               	clrf	22	;volatile
  4037                           
  4038                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  4039     1312  3013               	movlw	19
  4040     1313  0092               	movwf	18	;volatile
  4041     1314                     l4825:
  4042                           
  4043                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4044     1314  1295               	bcf	21,5	;volatile
  4045     1315                     l514:
  4046     1315  0008               	return
  4047     1316                     __end_of_I2C_Initialize:
  4048                           
  4049                           	psect	text7
  4050     1735                     __ptext7:	
  4051 ;; *************** function _EUSART_Initialize *****************
  4052 ;; Defined at:
  4053 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4067 ;;      Params:         0       0       0       0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 8
  4074 ;; This function calls:
  4075 ;;		_EUSART_SetErrorHandler
  4076 ;;		_EUSART_SetFramingErrorHandler
  4077 ;;		_EUSART_SetOverrunErrorHandler
  4078 ;;		_EUSART_SetRxInterruptHandler
  4079 ;;		_EUSART_SetTxInterruptHandler
  4080 ;; This function is called by:
  4081 ;;		_SYSTEM_Initialize
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085     1735                     _EUSART_Initialize:	
  4086                           ;psect for function _EUSART_Initialize
  4087                           
  4088     1735                     l4851:	
  4089                           ;incstack = 0
  4090                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4091                           
  4092                           
  4093                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4094     1735  0021               	movlb	1	; select bank1
  4095     1736  1291               	bcf	17,5	;volatile
  4096     1737                     l4853:
  4097                           
  4098                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4099     1737  30F4               	movlw	low _EUSART_Receive_ISR
  4100     1738  0020               	movlb	0	; select bank0
  4101     1739  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4102     173A  3016               	movlw	high _EUSART_Receive_ISR
  4103     173B  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4104     173C  3192  22FB  3197   	fcall	_EUSART_SetRxInterruptHandler
  4105     173F                     l4855:
  4106                           
  4107                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4108     173F  0021               	movlb	1	; select bank1
  4109     1740  1211               	bcf	17,4	;volatile
  4110                           
  4111                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4112     1741  302F               	movlw	low _EUSART_Transmit_ISR
  4113     1742  0020               	movlb	0	; select bank0
  4114     1743  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4115     1744  3015               	movlw	high _EUSART_Transmit_ISR
  4116     1745  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4117     1746  3193  2304  3197   	fcall	_EUSART_SetTxInterruptHandler
  4118     1749                     l4857:
  4119                           
  4120                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4121     1749  3008               	movlw	8
  4122     174A  0023               	movlb	3	; select bank3
  4123     174B  009F               	movwf	31	;volatile
  4124     174C                     l4859:
  4125                           
  4126                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4127     174C  3090               	movlw	144
  4128     174D  009D               	movwf	29	;volatile
  4129     174E                     l4861:
  4130                           
  4131                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4132     174E  3024               	movlw	36
  4133     174F  009E               	movwf	30	;volatile
  4134     1750                     l4863:
  4135                           
  4136                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  4137     1750  30CF               	movlw	207
  4138     1751  009B               	movwf	27	;volatile
  4139     1752                     l4865:
  4140                           
  4141                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4142     1752  019C               	clrf	28	;volatile
  4143     1753                     l4867:
  4144                           
  4145                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4146     1753  3029               	movlw	low _EUSART_DefaultFramingErrorHandler
  4147     1754  0020               	movlb	0	; select bank0
  4148     1755  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4149     1756  3012               	movlw	high _EUSART_DefaultFramingErrorHandler
  4150     1757  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4151     1758  3192  22E9  3197   	fcall	_EUSART_SetFramingErrorHandler
  4152     175B                     l4869:
  4153                           
  4154                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4155     175B  3055               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4156     175C  0020               	movlb	0	; select bank0
  4157     175D  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4158     175E  3012               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4159     175F  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4160     1760  3192  22F2  3197   	fcall	_EUSART_SetOverrunErrorHandler
  4161     1763                     l4871:
  4162                           
  4163                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4164     1763  3051               	movlw	low _EUSART_DefaultErrorHandler
  4165     1764  0020               	movlb	0	; select bank0
  4166     1765  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4167     1766  3012               	movlw	high _EUSART_DefaultErrorHandler
  4168     1767  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4169     1768  3192  22E0  3197   	fcall	_EUSART_SetErrorHandler
  4170                           
  4171                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4172     176B  01FD               	clrf	_eusartRxLastError	;volatile
  4173                           
  4174                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4175     176C  0020               	movlb	0	; select bank0
  4176     176D  01EF               	clrf	_eusartTxHead	;volatile
  4177                           
  4178                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4179     176E  01EE               	clrf	_eusartTxTail	;volatile
  4180     176F                     l4873:
  4181                           
  4182                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4183     176F  3008               	movlw	8
  4184     1770  00ED               	movwf	_eusartTxBufferRemaining	;volatile
  4185     1771                     l4875:
  4186                           
  4187                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4188     1771  01EC               	clrf	_eusartRxHead	;volatile
  4189     1772                     l4877:
  4190                           
  4191                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4192     1772  01EB               	clrf	_eusartRxTail	;volatile
  4193     1773                     l4879:
  4194                           
  4195                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4196     1773  01EA               	clrf	_eusartRxCount	;volatile
  4197     1774                     l4881:
  4198                           
  4199                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4200     1774  0021               	movlb	1	; select bank1
  4201     1775  1691               	bsf	17,5	;volatile
  4202     1776                     l279:
  4203     1776  0008               	return
  4204     1777                     __end_of_EUSART_Initialize:
  4205                           
  4206                           	psect	text8
  4207     1304                     __ptext8:	
  4208 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4209 ;; Defined at:
  4210 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4213 ;;		 -> EUSART_Transmit_ISR(1), 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4225 ;;      Params:         0       2       0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0
  4228 ;;      Totals:         0       2       0       0       0       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 7
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_EUSART_Initialize
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239     1304                     _EUSART_SetTxInterruptHandler:	
  4240                           ;psect for function _EUSART_SetTxInterruptHandler
  4241                           
  4242     1304                     l4583:	
  4243                           ;incstack = 0
  4244                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4245                           
  4246                           
  4247                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4248     1304  0020               	movlb	0	; select bank0
  4249     1305  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4250     1306  0022               	movlb	2	; select bank2
  4251     1307  00EC               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
  4252     1308  0020               	movlb	0	; select bank0
  4253     1309  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4254     130A  0022               	movlb	2	; select bank2
  4255     130B  00EB               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
  4256     130C                     l351:
  4257     130C  0008               	return
  4258     130D                     __end_of_EUSART_SetTxInterruptHandler:
  4259                           
  4260                           	psect	text9
  4261     12FB                     __ptext9:	
  4262 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4263 ;; Defined at:
  4264 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4267 ;;		 -> EUSART_Receive_ISR(1), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4279 ;;      Params:         0       2       0       0       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0
  4282 ;;      Totals:         0       2       0       0       0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 7
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_EUSART_Initialize
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293     12FB                     _EUSART_SetRxInterruptHandler:	
  4294                           ;psect for function _EUSART_SetRxInterruptHandler
  4295                           
  4296     12FB                     l4581:	
  4297                           ;incstack = 0
  4298                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4299                           
  4300                           
  4301                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4302     12FB  0020               	movlb	0	; select bank0
  4303     12FC  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4304     12FD  0022               	movlb	2	; select bank2
  4305     12FE  00EA               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
  4306     12FF  0020               	movlb	0	; select bank0
  4307     1300  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4308     1301  0022               	movlb	2	; select bank2
  4309     1302  00E9               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
  4310     1303                     l354:
  4311     1303  0008               	return
  4312     1304                     __end_of_EUSART_SetRxInterruptHandler:
  4313                           
  4314                           	psect	text10
  4315     12F2                     __ptext10:	
  4316 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4317 ;; Defined at:
  4318 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4321 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4333 ;;      Params:         0       2       0       0       0       0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0
  4336 ;;      Totals:         0       2       0       0       0       0       0       0
  4337 ;;Total ram usage:        2 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 7
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_EUSART_Initialize
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347     12F2                     _EUSART_SetOverrunErrorHandler:	
  4348                           ;psect for function _EUSART_SetOverrunErrorHandler
  4349                           
  4350     12F2                     l4587:	
  4351                           ;incstack = 0
  4352                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4353                           
  4354                           
  4355                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4356     12F2  0020               	movlb	0	; select bank0
  4357     12F3  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4358     12F4  0022               	movlb	2	; select bank2
  4359     12F5  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  4360     12F6  0020               	movlb	0	; select bank0
  4361     12F7  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4362     12F8  0022               	movlb	2	; select bank2
  4363     12F9  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  4364     12FA                     l345:
  4365     12FA  0008               	return
  4366     12FB                     __end_of_EUSART_SetOverrunErrorHandler:
  4367                           
  4368                           	psect	text11
  4369     12E9                     __ptext11:	
  4370 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4371 ;; Defined at:
  4372 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4375 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4387 ;;      Params:         0       2       0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0
  4390 ;;      Totals:         0       2       0       0       0       0       0       0
  4391 ;;Total ram usage:        2 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 7
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_EUSART_Initialize
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401     12E9                     _EUSART_SetFramingErrorHandler:	
  4402                           ;psect for function _EUSART_SetFramingErrorHandler
  4403                           
  4404     12E9                     l4585:	
  4405                           ;incstack = 0
  4406                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4407                           
  4408                           
  4409                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4410     12E9  0020               	movlb	0	; select bank0
  4411     12EA  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4412     12EB  0022               	movlb	2	; select bank2
  4413     12EC  00E8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  4414     12ED  0020               	movlb	0	; select bank0
  4415     12EE  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4416     12EF  0022               	movlb	2	; select bank2
  4417     12F0  00E7               	movwf	_EUSART_FramingErrorHandler^(0+256)
  4418     12F1                     l342:
  4419     12F1  0008               	return
  4420     12F2                     __end_of_EUSART_SetFramingErrorHandler:
  4421                           
  4422                           	psect	text12
  4423     12E0                     __ptext12:	
  4424 ;; *************** function _EUSART_SetErrorHandler *****************
  4425 ;; Defined at:
  4426 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4429 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4441 ;;      Params:         0       2       0       0       0       0       0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0
  4444 ;;      Totals:         0       2       0       0       0       0       0       0
  4445 ;;Total ram usage:        2 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 7
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_EUSART_Initialize
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455     12E0                     _EUSART_SetErrorHandler:	
  4456                           ;psect for function _EUSART_SetErrorHandler
  4457                           
  4458     12E0                     l4589:	
  4459                           ;incstack = 0
  4460                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4461                           
  4462                           
  4463                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4464     12E0  0020               	movlb	0	; select bank0
  4465     12E1  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4466     12E2  0022               	movlb	2	; select bank2
  4467     12E3  00E4               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  4468     12E4  0020               	movlb	0	; select bank0
  4469     12E5  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4470     12E6  0022               	movlb	2	; select bank2
  4471     12E7  00E3               	movwf	_EUSART_ErrorHandler^(0+256)
  4472     12E8                     l348:
  4473     12E8  0008               	return
  4474     12E9                     __end_of_EUSART_SetErrorHandler:
  4475                           
  4476                           	psect	text13
  4477     132A                     __ptext13:	
  4478 ;; *************** function _App_Process *****************
  4479 ;; Defined at:
  4480 ;;		line 61 in file "MCU.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4494 ;;      Params:         0       0       0       0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 13
  4501 ;; This function calls:
  4502 ;;		_Task_Indicator
  4503 ;;		_Task_MB
  4504 ;;		_Task_Sensor
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510     132A                     _App_Process:	
  4511                           ;psect for function _App_Process
  4512                           
  4513     132A                     l5045:	
  4514                           ;incstack = 0
  4515                           ; Regs used in _App_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4516                           
  4517                           
  4518                           ;MCU.c: 62:     Task_Sensor();
  4519     132A  318B  2333  3193   	fcall	_Task_Sensor
  4520     132D                     l5047:
  4521                           
  4522                           ;MCU.c: 63:     Task_MB();
  4523     132D  3194  2419  3193   	fcall	_Task_MB
  4524     1330                     l5049:
  4525                           
  4526                           ;MCU.c: 64:     Task_Indicator();
  4527     1330  3196  26C5  3193   	fcall	_Task_Indicator
  4528     1333                     l875:
  4529     1333  0008               	return
  4530     1334                     __end_of_App_Process:
  4531                           
  4532                           	psect	text14
  4533     0B33                     __ptext14:	
  4534 ;; *************** function _Task_Sensor *****************
  4535 ;; Defined at:
  4536 ;;		line 47 in file "I2C_SHT30.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4550 ;;      Params:         0       0       0       0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0
  4552 ;;      Temps:          0       0      12       0       0       0       0       0
  4553 ;;      Totals:         0       0      12       0       0       0       0       0
  4554 ;;Total ram usage:       12 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 12
  4557 ;; This function calls:
  4558 ;;		_Get_millis
  4559 ;;		_ReadData
  4560 ;;		_llabs
  4561 ;; This function is called by:
  4562 ;;		_App_Process
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566     0B33                     _Task_Sensor:	
  4567                           ;psect for function _Task_Sensor
  4568                           
  4569     0B33                     l4917:	
  4570                           ;incstack = 0
  4571                           ; Regs used in _Task_Sensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4572                           
  4573                           
  4574                           ;I2C_SHT30.c: 48:     static uint32_t valTime = 0;;I2C_SHT30.c: 51:     if ((llabs(((uin
      +                          t32_t) Get_millis() - valTime)) >= (uint32_t) 2 * 1000)) {
  4575     0B33  3194  2408  318B   	fcall	_Get_millis
  4576     0B36  0022               	movlb	2	; select bank2
  4577     0B37  0855               	movf	Task_Sensor@valTime^(0+256),w
  4578     0B38  0020               	movlb	0	; select bank0
  4579     0B39  0220               	subwf	?_Get_millis,w
  4580     0B3A  0021               	movlb	1	; select bank1
  4581     0B3B  00CB               	movwf	??_Task_Sensor^(0+128)
  4582     0B3C  0022               	movlb	2	; select bank2
  4583     0B3D  0856               	movf	(Task_Sensor@valTime+1)^(0+256),w
  4584     0B3E  0020               	movlb	0	; select bank0
  4585     0B3F  3B21               	subwfb	?_Get_millis+1,w
  4586     0B40  0021               	movlb	1	; select bank1
  4587     0B41  00CC               	movwf	(??_Task_Sensor^(0+128)+1)
  4588     0B42  0022               	movlb	2	; select bank2
  4589     0B43  0857               	movf	(Task_Sensor@valTime+2)^(0+256),w
  4590     0B44  0020               	movlb	0	; select bank0
  4591     0B45  3B22               	subwfb	?_Get_millis+2,w
  4592     0B46  0021               	movlb	1	; select bank1
  4593     0B47  00CD               	movwf	(??_Task_Sensor^(0+128)+2)
  4594     0B48  0022               	movlb	2	; select bank2
  4595     0B49  0858               	movf	(Task_Sensor@valTime+3)^(0+256),w
  4596     0B4A  0020               	movlb	0	; select bank0
  4597     0B4B  3B23               	subwfb	?_Get_millis+3,w
  4598     0B4C  0021               	movlb	1	; select bank1
  4599     0B4D  00CE               	movwf	(??_Task_Sensor^(0+128)+3)
  4600     0B4E  084B               	movf	??_Task_Sensor^(0+128),w
  4601     0B4F  00CF               	movwf	(??_Task_Sensor+4)^(0+128)
  4602     0B50  084C               	movf	(??_Task_Sensor+1)^(0+128),w
  4603     0B51  00D0               	movwf	((??_Task_Sensor+4)^(0+128)+1)
  4604     0B52  084D               	movf	(??_Task_Sensor+2)^(0+128),w
  4605     0B53  00D1               	movwf	((??_Task_Sensor+4)^(0+128)+2)
  4606     0B54  084E               	movf	(??_Task_Sensor+3)^(0+128),w
  4607     0B55  00D2               	movwf	((??_Task_Sensor+4)^(0+128)+3)
  4608     0B56  01D3               	clrf	((??_Task_Sensor+4)^(0+128)+4)
  4609     0B57  01D4               	clrf	((??_Task_Sensor+4)^(0+128)+5)
  4610     0B58  01D5               	clrf	((??_Task_Sensor+4)^(0+128)+6)
  4611     0B59  01D6               	clrf	((??_Task_Sensor+4)^(0+128)+7)
  4612     0B5A  0856               	movf	((??_Task_Sensor+4)^(0+128)+7),w
  4613     0B5B  0020               	movlb	0	; select bank0
  4614     0B5C  00AB               	movwf	llabs@a+7
  4615     0B5D  0021               	movlb	1	; select bank1
  4616     0B5E  0855               	movf	((??_Task_Sensor+4)^(0+128)+6),w
  4617     0B5F  0020               	movlb	0	; select bank0
  4618     0B60  00AA               	movwf	llabs@a+6
  4619     0B61  0021               	movlb	1	; select bank1
  4620     0B62  0854               	movf	((??_Task_Sensor+4)^(0+128)+5),w
  4621     0B63  0020               	movlb	0	; select bank0
  4622     0B64  00A9               	movwf	llabs@a+5
  4623     0B65  0021               	movlb	1	; select bank1
  4624     0B66  0853               	movf	((??_Task_Sensor+4)^(0+128)+4),w
  4625     0B67  0020               	movlb	0	; select bank0
  4626     0B68  00A8               	movwf	llabs@a+4
  4627     0B69  0021               	movlb	1	; select bank1
  4628     0B6A  0852               	movf	((??_Task_Sensor+4)^(0+128)+3),w
  4629     0B6B  0020               	movlb	0	; select bank0
  4630     0B6C  00A7               	movwf	llabs@a+3
  4631     0B6D  0021               	movlb	1	; select bank1
  4632     0B6E  0851               	movf	((??_Task_Sensor+4)^(0+128)+2),w
  4633     0B6F  0020               	movlb	0	; select bank0
  4634     0B70  00A6               	movwf	llabs@a+2
  4635     0B71  0021               	movlb	1	; select bank1
  4636     0B72  0850               	movf	((??_Task_Sensor+4)^(0+128)+1),w
  4637     0B73  0020               	movlb	0	; select bank0
  4638     0B74  00A5               	movwf	llabs@a+1
  4639     0B75  0021               	movlb	1	; select bank1
  4640     0B76  084F               	movf	(??_Task_Sensor+4)^(0+128),w
  4641     0B77  0020               	movlb	0	; select bank0
  4642     0B78  00A4               	movwf	llabs@a
  4643     0B79  3188  2029  318B   	fcall	_llabs
  4644     0B7C  0020               	movlb	0	; select bank0
  4645     0B7D  1BAB               	btfsc	?_llabs+7,7
  4646     0B7E  2B98               	goto	u4091
  4647     0B7F  082B               	movf	?_llabs+7,w
  4648     0B80  1D03               	btfss	3,2
  4649     0B81  2B99               	goto	u4090
  4650     0B82  082A               	movf	?_llabs+6,w
  4651     0B83  1D03               	btfss	3,2
  4652     0B84  2B99               	goto	u4090
  4653     0B85  0829               	movf	?_llabs+5,w
  4654     0B86  1D03               	btfss	3,2
  4655     0B87  2B99               	goto	u4090
  4656     0B88  0828               	movf	?_llabs+4,w
  4657     0B89  1D03               	btfss	3,2
  4658     0B8A  2B99               	goto	u4090
  4659     0B8B  0827               	movf	?_llabs+3,w
  4660     0B8C  1D03               	btfss	3,2
  4661     0B8D  2B99               	goto	u4090
  4662     0B8E  0826               	movf	?_llabs+2,w
  4663     0B8F  1D03               	btfss	3,2
  4664     0B90  2B99               	goto	u4090
  4665     0B91  30D0               	movlw	208
  4666     0B92  0224               	subwf	?_llabs,w
  4667     0B93  3007               	movlw	7
  4668     0B94  3B25               	subwfb	?_llabs+1,w
  4669     0B95  1C03               	btfss	3,0
  4670     0B96  2B98               	goto	u4091
  4671     0B97  2B99               	goto	u4090
  4672     0B98                     u4091:
  4673     0B98  2BC9               	goto	l817
  4674     0B99                     u4090:
  4675     0B99                     l4919:
  4676                           
  4677                           ;I2C_SHT30.c: 52:         valTime = Get_millis();
  4678     0B99  3194  2408  318B   	fcall	_Get_millis
  4679     0B9C  0020               	movlb	0	; select bank0
  4680     0B9D  0823               	movf	?_Get_millis+3,w
  4681     0B9E  0022               	movlb	2	; select bank2
  4682     0B9F  00D8               	movwf	(Task_Sensor@valTime+3)^(0+256)
  4683     0BA0  0020               	movlb	0	; select bank0
  4684     0BA1  0822               	movf	?_Get_millis+2,w
  4685     0BA2  0022               	movlb	2	; select bank2
  4686     0BA3  00D7               	movwf	(Task_Sensor@valTime+2)^(0+256)
  4687     0BA4  0020               	movlb	0	; select bank0
  4688     0BA5  0821               	movf	?_Get_millis+1,w
  4689     0BA6  0022               	movlb	2	; select bank2
  4690     0BA7  00D6               	movwf	(Task_Sensor@valTime+1)^(0+256)
  4691     0BA8  0020               	movlb	0	; select bank0
  4692     0BA9  0820               	movf	?_Get_millis,w
  4693     0BAA  0022               	movlb	2	; select bank2
  4694     0BAB  00D5               	movwf	Task_Sensor@valTime^(0+256)
  4695     0BAC                     l4921:
  4696                           
  4697                           ;I2C_SHT30.c: 53:         f_Indicator = ON_Sensor;
  4698     0BAC  0021               	movlb	1	; select bank1
  4699     0BAD  01E3               	clrf	_f_Indicator^(0+128)
  4700     0BAE  0AE3               	incf	_f_Indicator^(0+128),f
  4701     0BAF                     l4923:
  4702                           
  4703                           ;I2C_SHT30.c: 54:         ReadData();
  4704     0BAF  3180  2096  318B   	fcall	_ReadData
  4705     0BB2                     l4925:
  4706                           
  4707                           ;I2C_SHT30.c: 55:         if ((SensorAmbient.T.Val16 <= 0) || (SensorAmbient.H.Val16 <= 
      +                          0)) {
  4708     0BB2  0021               	movlb	1	; select bank1
  4709     0BB3  085B               	movf	_SensorAmbient^(0+128),w
  4710     0BB4  045C               	iorwf	(_SensorAmbient+1)^(0+128),w
  4711     0BB5  1903               	btfsc	3,2
  4712     0BB6  2BB8               	goto	u4101
  4713     0BB7  2BB9               	goto	u4100
  4714     0BB8                     u4101:
  4715     0BB8  2BBF               	goto	l4929
  4716     0BB9                     u4100:
  4717     0BB9                     l4927:
  4718     0BB9  085D               	movf	(_SensorAmbient^(0+128)+2),w
  4719     0BBA  045E               	iorwf	((_SensorAmbient+1)^(0+128)+2),w
  4720     0BBB  1D03               	btfss	3,2
  4721     0BBC  2BBE               	goto	u4111
  4722     0BBD  2BBF               	goto	u4110
  4723     0BBE                     u4111:
  4724     0BBE  2BC9               	goto	l817
  4725     0BBF                     u4110:
  4726     0BBF                     l4929:
  4727                           
  4728                           ;I2C_SHT30.c: 56:             SensorAmbient.T.Val16 = 0xFFFF;
  4729     0BBF  30FF               	movlw	255
  4730     0BC0  00DB               	movwf	_SensorAmbient^(0+128)
  4731     0BC1  30FF               	movlw	255
  4732     0BC2  00DC               	movwf	(_SensorAmbient^(0+128)+1)
  4733                           
  4734                           ;I2C_SHT30.c: 57:             SensorAmbient.H.Val16 = 0xFFFF;
  4735     0BC3  30FF               	movlw	255
  4736     0BC4  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  4737     0BC5  30FF               	movlw	255
  4738     0BC6  00DE               	movwf	(_SensorAmbient^(0+128)+3)
  4739                           
  4740                           ;I2C_SHT30.c: 58:             f_Indicator = ERR_Sensor;
  4741     0BC7  3002               	movlw	2
  4742     0BC8  00E3               	movwf	_f_Indicator^(0+128)
  4743     0BC9                     l817:
  4744     0BC9  0008               	return
  4745     0BCA                     __end_of_Task_Sensor:
  4746                           
  4747                           	psect	text15
  4748     0829                     __ptext15:	
  4749 ;; *************** function _llabs *****************
  4750 ;; Defined at:
  4751 ;;		line 1 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\llabs.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  a               8    4[BANK0 ] long long 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  8    4[BANK0 ] long long 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4765 ;;      Params:         0       8       0       0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0
  4768 ;;      Totals:         0       8       0       0       0       0       0       0
  4769 ;;Total ram usage:        8 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 7
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_Task_Sensor
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779     0829                     _llabs:	
  4780                           ;psect for function _llabs
  4781                           
  4782     0829                     l4771:	
  4783                           ;incstack = 0
  4784                           ; Regs used in _llabs: [wreg+status,2+status,0]
  4785                           
  4786     0829  0020               	movlb	0	; select bank0
  4787     082A  1BAB               	btfsc	llabs@a+7,7
  4788     082B  2847               	goto	u4020
  4789     082C  082B               	movf	llabs@a+7,w
  4790     082D  1D03               	btfss	3,2
  4791     082E  2846               	goto	u4021
  4792     082F  082A               	movf	llabs@a+6,w
  4793     0830  1D03               	btfss	3,2
  4794     0831  2846               	goto	u4021
  4795     0832  0829               	movf	llabs@a+5,w
  4796     0833  1D03               	btfss	3,2
  4797     0834  2846               	goto	u4021
  4798     0835  0828               	movf	llabs@a+4,w
  4799     0836  1D03               	btfss	3,2
  4800     0837  2846               	goto	u4021
  4801     0838  0827               	movf	llabs@a+3,w
  4802     0839  1D03               	btfss	3,2
  4803     083A  2846               	goto	u4021
  4804     083B  0826               	movf	llabs@a+2,w
  4805     083C  1D03               	btfss	3,2
  4806     083D  2846               	goto	u4021
  4807     083E  0825               	movf	llabs@a+1,w
  4808     083F  1D03               	btfss	3,2
  4809     0840  2846               	goto	u4021
  4810     0841  3001               	movlw	1
  4811     0842  0224               	subwf	llabs@a,w
  4812     0843  1803               	btfsc	3,0
  4813     0844  2846               	goto	u4021
  4814     0845  2847               	goto	u4020
  4815     0846                     u4021:
  4816     0846  286F               	goto	l1614
  4817     0847                     u4020:
  4818     0847                     l4773:
  4819     0847  0020               	movlb	0	; select bank0
  4820     0848  0924               	comf	llabs@a,w
  4821     0849  00A4               	movwf	?_llabs
  4822     084A  0925               	comf	llabs@a+1,w
  4823     084B  00A5               	movwf	?_llabs+1
  4824     084C  0926               	comf	llabs@a+2,w
  4825     084D  00A6               	movwf	?_llabs+2
  4826     084E  0927               	comf	llabs@a+3,w
  4827     084F  00A7               	movwf	?_llabs+3
  4828     0850  0928               	comf	llabs@a+4,w
  4829     0851  00A8               	movwf	?_llabs+4
  4830     0852  0929               	comf	llabs@a+5,w
  4831     0853  00A9               	movwf	?_llabs+5
  4832     0854  092A               	comf	llabs@a+6,w
  4833     0855  00AA               	movwf	?_llabs+6
  4834     0856  092B               	comf	llabs@a+7,w
  4835     0857  00AB               	movwf	?_llabs+7
  4836     0858  0AA4               	incf	?_llabs,f
  4837     0859  1D03               	skipz
  4838     085A  286E               	goto	u403lld
  4839     085B  0AA5               	incf	?_llabs+1,f
  4840     085C  1D03               	skipz
  4841     085D  286E               	goto	u403lld
  4842     085E  0AA6               	incf	?_llabs+2,f
  4843     085F  1D03               	skipz
  4844     0860  286E               	goto	u403lld
  4845     0861  0AA7               	incf	?_llabs+3,f
  4846     0862  1D03               	skipz
  4847     0863  286E               	goto	u403lld
  4848     0864  0AA8               	incf	?_llabs+4,f
  4849     0865  1D03               	skipz
  4850     0866  286E               	goto	u403lld
  4851     0867  0AA9               	incf	?_llabs+5,f
  4852     0868  1D03               	skipz
  4853     0869  286E               	goto	u403lld
  4854     086A  0AAA               	incf	?_llabs+6,f
  4855     086B  1D03               	skipz
  4856     086C  286E               	goto	u403lld
  4857     086D  0AAB               	incf	?_llabs+7,f
  4858     086E                     u403lld:
  4859     086E  286F               	goto	l1617
  4860     086F                     l1614:
  4861     086F                     l1617:
  4862     086F  0008               	return
  4863     0870                     __end_of_llabs:
  4864                           
  4865                           	psect	text16
  4866     0096                     __ptext16:	
  4867 ;; *************** function _ReadData *****************
  4868 ;; Defined at:
  4869 ;;		line 26 in file "I2C_SHT30.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  aData           6   21[BANK1 ] unsigned char [6]
  4874 ;;  humidity        4   31[BANK1 ] unsigned char [6]
  4875 ;;  ctemp           4   27[BANK1 ] unsigned char [6]
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4885 ;;      Params:         0       0       0       0       0       0       0       0
  4886 ;;      Locals:         0       0      22       0       0       0       0       0
  4887 ;;      Temps:          0       0       8       0       0       0       0       0
  4888 ;;      Totals:         0       0      30       0       0       0       0       0
  4889 ;;Total ram usage:       30 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 11
  4892 ;; This function calls:
  4893 ;;		_Get_millis
  4894 ;;		_I2C_ReadNBytes
  4895 ;;		_I2C_WriteNBytes
  4896 ;;		___fladd
  4897 ;;		___fldiv
  4898 ;;		___flmul
  4899 ;;		___fltol
  4900 ;;		___xxtofl
  4901 ;; This function is called by:
  4902 ;;		_Task_Sensor
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906     0096                     _ReadData:	
  4907                           ;psect for function _ReadData
  4908                           
  4909     0096                     l4763:	
  4910                           ;incstack = 0
  4911                           ; Regs used in _ReadData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4912                           
  4913                           
  4914                           ;I2C_SHT30.c: 27:     uint8_t aData[6];;I2C_SHT30.c: 28:     static uint32_t valTime = 0
      +                          ;;I2C_SHT30.c: 29:     I2C_WriteNBytes(0x44, SHT30_CMD_MEASURE_H_Enable, 2);
  4915     0096  30EE               	movlw	(low (_SHT30_CMD_MEASURE_H_Enable| 0))& (0+255)
  4916     0097  0020               	movlb	0	; select bank0
  4917     0098  00A8               	movwf	I2C_WriteNBytes@data
  4918     0099  3002               	movlw	2
  4919     009A  00A9               	movwf	I2C_WriteNBytes@len
  4920     009B  3000               	movlw	0
  4921     009C  00AA               	movwf	I2C_WriteNBytes@len+1
  4922     009D  3044               	movlw	68
  4923     009E  3196  266D  3180   	fcall	_I2C_WriteNBytes
  4924     00A1                     l4765:
  4925                           
  4926                           ;I2C_SHT30.c: 30:     valTime = Get_millis();
  4927     00A1  3194  2408  3180   	fcall	_Get_millis
  4928     00A4  0020               	movlb	0	; select bank0
  4929     00A5  0823               	movf	?_Get_millis+3,w
  4930     00A6  0022               	movlb	2	; select bank2
  4931     00A7  00DC               	movwf	(ReadData@valTime+3)^(0+256)
  4932     00A8  0020               	movlb	0	; select bank0
  4933     00A9  0822               	movf	?_Get_millis+2,w
  4934     00AA  0022               	movlb	2	; select bank2
  4935     00AB  00DB               	movwf	(ReadData@valTime+2)^(0+256)
  4936     00AC  0020               	movlb	0	; select bank0
  4937     00AD  0821               	movf	?_Get_millis+1,w
  4938     00AE  0022               	movlb	2	; select bank2
  4939     00AF  00DA               	movwf	(ReadData@valTime+1)^(0+256)
  4940     00B0  0020               	movlb	0	; select bank0
  4941     00B1  0820               	movf	?_Get_millis,w
  4942     00B2  0022               	movlb	2	; select bank2
  4943     00B3  00D9               	movwf	ReadData@valTime^(0+256)
  4944     00B4                     l4767:	
  4945                           ;I2C_SHT30.c: 31:     while (((uint32_t) Get_millis() - valTime) < (uint32_t) 2 * 1);
  4946                           
  4947     00B4  3194  2408  3180   	fcall	_Get_millis
  4948     00B7  0022               	movlb	2	; select bank2
  4949     00B8  0859               	movf	ReadData@valTime^(0+256),w
  4950     00B9  0020               	movlb	0	; select bank0
  4951     00BA  0220               	subwf	?_Get_millis,w
  4952     00BB  0021               	movlb	1	; select bank1
  4953     00BC  00AD               	movwf	??_ReadData^(0+128)
  4954     00BD  0022               	movlb	2	; select bank2
  4955     00BE  085A               	movf	(ReadData@valTime+1)^(0+256),w
  4956     00BF  0020               	movlb	0	; select bank0
  4957     00C0  3B21               	subwfb	?_Get_millis+1,w
  4958     00C1  0021               	movlb	1	; select bank1
  4959     00C2  00AE               	movwf	(??_ReadData^(0+128)+1)
  4960     00C3  0022               	movlb	2	; select bank2
  4961     00C4  085B               	movf	(ReadData@valTime+2)^(0+256),w
  4962     00C5  0020               	movlb	0	; select bank0
  4963     00C6  3B22               	subwfb	?_Get_millis+2,w
  4964     00C7  0021               	movlb	1	; select bank1
  4965     00C8  00AF               	movwf	(??_ReadData^(0+128)+2)
  4966     00C9  0022               	movlb	2	; select bank2
  4967     00CA  085C               	movf	(ReadData@valTime+3)^(0+256),w
  4968     00CB  0020               	movlb	0	; select bank0
  4969     00CC  3B23               	subwfb	?_Get_millis+3,w
  4970     00CD  0021               	movlb	1	; select bank1
  4971     00CE  00B0               	movwf	(??_ReadData^(0+128)+3)
  4972     00CF  0830               	movf	(??_ReadData^(0+128)+3),w
  4973     00D0  1D03               	btfss	3,2
  4974     00D1  28DE               	goto	u4010
  4975     00D2  082F               	movf	(??_ReadData^(0+128)+2),w
  4976     00D3  1D03               	btfss	3,2
  4977     00D4  28DE               	goto	u4010
  4978     00D5  082E               	movf	(??_ReadData^(0+128)+1),w
  4979     00D6  1D03               	btfss	3,2
  4980     00D7  28DE               	goto	u4010
  4981     00D8  3002               	movlw	2
  4982     00D9  022D               	subwf	??_ReadData^(0+128),w
  4983     00DA  1C03               	btfss	3,0
  4984     00DB  28DD               	goto	u4011
  4985     00DC  28DE               	goto	u4010
  4986     00DD                     u4011:
  4987     00DD  28B4               	goto	l4767
  4988     00DE                     u4010:
  4989     00DE                     l4769:
  4990                           
  4991                           ;I2C_SHT30.c: 33:     I2C_ReadNBytes(0x44, aData, 6);
  4992     00DE  30B5               	movlw	(low (ReadData@aData| 0))& (0+255)
  4993     00DF  0020               	movlb	0	; select bank0
  4994     00E0  00A4               	movwf	I2C_ReadNBytes@data
  4995     00E1  3006               	movlw	6
  4996     00E2  00A5               	movwf	I2C_ReadNBytes@len
  4997     00E3  3000               	movlw	0
  4998     00E4  00A6               	movwf	I2C_ReadNBytes@len+1
  4999     00E5  3044               	movlw	68
  5000     00E6  3195  250E  3180   	fcall	_I2C_ReadNBytes
  5001                           
  5002                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5003     00E9  0021               	movlb	1	; select bank1
  5004     00EA  0836               	movf	(ReadData@aData^(0+128)+1),w
  5005     00EB  00AD               	movwf	??_ReadData^(0+128)
  5006     00EC  01AE               	clrf	(??_ReadData^(0+128)+1)
  5007     00ED  01AF               	clrf	(??_ReadData^(0+128)+2)
  5008     00EE  01B0               	clrf	(??_ReadData^(0+128)+3)
  5009     00EF  0830               	movf	(??_ReadData+3)^(0+128),w
  5010     00F0  0020               	movlb	0	; select bank0
  5011     00F1  00A3               	movwf	___xxtofl@val+3
  5012     00F2  0021               	movlb	1	; select bank1
  5013     00F3  082F               	movf	(??_ReadData+2)^(0+128),w
  5014     00F4  0020               	movlb	0	; select bank0
  5015     00F5  00A2               	movwf	___xxtofl@val+2
  5016     00F6  0021               	movlb	1	; select bank1
  5017     00F7  082E               	movf	(??_ReadData+1)^(0+128),w
  5018     00F8  0020               	movlb	0	; select bank0
  5019     00F9  00A1               	movwf	___xxtofl@val+1
  5020     00FA  0021               	movlb	1	; select bank1
  5021     00FB  082D               	movf	??_ReadData^(0+128),w
  5022     00FC  0020               	movlb	0	; select bank0
  5023     00FD  00A0               	movwf	___xxtofl@val
  5024     00FE  3001               	movlw	1
  5025     00FF  318C  246E  3180   	fcall	___xxtofl
  5026     0102  0020               	movlb	0	; select bank0
  5027     0103  0823               	movf	?___xxtofl+3,w
  5028     0104  00CB               	movwf	___fladd@b+3
  5029     0105  0822               	movf	?___xxtofl+2,w
  5030     0106  00CA               	movwf	___fladd@b+2
  5031     0107  0821               	movf	?___xxtofl+1,w
  5032     0108  00C9               	movwf	___fladd@b+1
  5033     0109  0820               	movf	?___xxtofl,w
  5034     010A  00C8               	movwf	___fladd@b
  5035     010B  3043               	movlw	67
  5036     010C  00B1               	movwf	___flmul@b+3
  5037     010D  3080               	movlw	128
  5038     010E  00B0               	movwf	___flmul@b+2
  5039     010F  3000               	movlw	0
  5040     0110  00AF               	movwf	___flmul@b+1
  5041     0111  3000               	movlw	0
  5042     0112  00AE               	movwf	___flmul@b
  5043     0113  0021               	movlb	1	; select bank1
  5044     0114  0835               	movf	ReadData@aData^(0+128),w
  5045     0115  00B1               	movwf	(??_ReadData+4)^(0+128)
  5046     0116  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5047     0117  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5048     0118  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5049     0119  0834               	movf	(??_ReadData+7)^(0+128),w
  5050     011A  0020               	movlb	0	; select bank0
  5051     011B  00A3               	movwf	___xxtofl@val+3
  5052     011C  0021               	movlb	1	; select bank1
  5053     011D  0833               	movf	(??_ReadData+6)^(0+128),w
  5054     011E  0020               	movlb	0	; select bank0
  5055     011F  00A2               	movwf	___xxtofl@val+2
  5056     0120  0021               	movlb	1	; select bank1
  5057     0121  0832               	movf	(??_ReadData+5)^(0+128),w
  5058     0122  0020               	movlb	0	; select bank0
  5059     0123  00A1               	movwf	___xxtofl@val+1
  5060     0124  0021               	movlb	1	; select bank1
  5061     0125  0831               	movf	(??_ReadData+4)^(0+128),w
  5062     0126  0020               	movlb	0	; select bank0
  5063     0127  00A0               	movwf	___xxtofl@val
  5064     0128  3001               	movlw	1
  5065     0129  318C  246E  3180   	fcall	___xxtofl
  5066     012C  0020               	movlb	0	; select bank0
  5067     012D  0823               	movf	?___xxtofl+3,w
  5068     012E  00B5               	movwf	___flmul@a+3
  5069     012F  0822               	movf	?___xxtofl+2,w
  5070     0130  00B4               	movwf	___flmul@a+2
  5071     0131  0821               	movf	?___xxtofl+1,w
  5072     0132  00B3               	movwf	___flmul@a+1
  5073     0133  0820               	movf	?___xxtofl,w
  5074     0134  00B2               	movwf	___flmul@a
  5075     0135  3182  22DF  3180   	fcall	___flmul
  5076     0138  0020               	movlb	0	; select bank0
  5077     0139  0831               	movf	?___flmul+3,w
  5078     013A  00CF               	movwf	___fladd@a+3
  5079     013B  0830               	movf	?___flmul+2,w
  5080     013C  00CE               	movwf	___fladd@a+2
  5081     013D  082F               	movf	?___flmul+1,w
  5082     013E  00CD               	movwf	___fladd@a+1
  5083     013F  082E               	movf	?___flmul,w
  5084     0140  00CC               	movwf	___fladd@a
  5085     0141  3185  251A  3180   	fcall	___fladd
  5086     0144  0020               	movlb	0	; select bank0
  5087     0145  084B               	movf	?___fladd+3,w
  5088     0146  0021               	movlb	1	; select bank1
  5089     0147  00C6               	movwf	(_ReadData$2361+3)^(0+128)
  5090     0148  0020               	movlb	0	; select bank0
  5091     0149  084A               	movf	?___fladd+2,w
  5092     014A  0021               	movlb	1	; select bank1
  5093     014B  00C5               	movwf	(_ReadData$2361+2)^(0+128)
  5094     014C  0020               	movlb	0	; select bank0
  5095     014D  0849               	movf	?___fladd+1,w
  5096     014E  0021               	movlb	1	; select bank1
  5097     014F  00C4               	movwf	(_ReadData$2361+1)^(0+128)
  5098     0150  0020               	movlb	0	; select bank0
  5099     0151  0848               	movf	?___fladd,w
  5100     0152  0021               	movlb	1	; select bank1
  5101     0153  00C3               	movwf	_ReadData$2361^(0+128)
  5102                           
  5103                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5104     0154  30C2               	movlw	194
  5105     0155  0020               	movlb	0	; select bank0
  5106     0156  00CB               	movwf	___fladd@b+3
  5107     0157  3034               	movlw	52
  5108     0158  00CA               	movwf	___fladd@b+2
  5109     0159  3000               	movlw	0
  5110     015A  00C9               	movwf	___fladd@b+1
  5111     015B  3000               	movlw	0
  5112     015C  00C8               	movwf	___fladd@b
  5113     015D  3047               	movlw	71
  5114     015E  00DF               	movwf	___fldiv@a+3
  5115     015F  307F               	movlw	127
  5116     0160  00DE               	movwf	___fldiv@a+2
  5117     0161  30FF               	movlw	255
  5118     0162  00DD               	movwf	___fldiv@a+1
  5119     0163  3000               	movlw	0
  5120     0164  00DC               	movwf	___fldiv@a
  5121     0165  3043               	movlw	67
  5122     0166  00B1               	movwf	___flmul@b+3
  5123     0167  302F               	movlw	47
  5124     0168  00B0               	movwf	___flmul@b+2
  5125     0169  3000               	movlw	0
  5126     016A  00AF               	movwf	___flmul@b+1
  5127     016B  3000               	movlw	0
  5128     016C  00AE               	movwf	___flmul@b
  5129     016D  0021               	movlb	1	; select bank1
  5130     016E  0846               	movf	(_ReadData$2361+3)^(0+128),w
  5131     016F  0020               	movlb	0	; select bank0
  5132     0170  00B5               	movwf	___flmul@a+3
  5133     0171  0021               	movlb	1	; select bank1
  5134     0172  0845               	movf	(_ReadData$2361+2)^(0+128),w
  5135     0173  0020               	movlb	0	; select bank0
  5136     0174  00B4               	movwf	___flmul@a+2
  5137     0175  0021               	movlb	1	; select bank1
  5138     0176  0844               	movf	(_ReadData$2361+1)^(0+128),w
  5139     0177  0020               	movlb	0	; select bank0
  5140     0178  00B3               	movwf	___flmul@a+1
  5141     0179  0021               	movlb	1	; select bank1
  5142     017A  0843               	movf	_ReadData$2361^(0+128),w
  5143     017B  0020               	movlb	0	; select bank0
  5144     017C  00B2               	movwf	___flmul@a
  5145     017D  3182  22DF  3180   	fcall	___flmul
  5146     0180  0020               	movlb	0	; select bank0
  5147     0181  0831               	movf	?___flmul+3,w
  5148     0182  00E3               	movwf	___fldiv@b+3
  5149     0183  0830               	movf	?___flmul+2,w
  5150     0184  00E2               	movwf	___fldiv@b+2
  5151     0185  082F               	movf	?___flmul+1,w
  5152     0186  00E1               	movwf	___fldiv@b+1
  5153     0187  082E               	movf	?___flmul,w
  5154     0188  00E0               	movwf	___fldiv@b
  5155     0189  318D  25FC  3180   	fcall	___fldiv
  5156     018C  0020               	movlb	0	; select bank0
  5157     018D  085F               	movf	?___fldiv+3,w
  5158     018E  00CF               	movwf	___fladd@a+3
  5159     018F  085E               	movf	?___fldiv+2,w
  5160     0190  00CE               	movwf	___fladd@a+2
  5161     0191  085D               	movf	?___fldiv+1,w
  5162     0192  00CD               	movwf	___fladd@a+1
  5163     0193  085C               	movf	?___fldiv,w
  5164     0194  00CC               	movwf	___fladd@a
  5165     0195  3185  251A  3180   	fcall	___fladd
  5166     0198  0020               	movlb	0	; select bank0
  5167     0199  084B               	movf	?___fladd+3,w
  5168     019A  0021               	movlb	1	; select bank1
  5169     019B  00CA               	movwf	(_ReadData$2362+3)^(0+128)
  5170     019C  0020               	movlb	0	; select bank0
  5171     019D  084A               	movf	?___fladd+2,w
  5172     019E  0021               	movlb	1	; select bank1
  5173     019F  00C9               	movwf	(_ReadData$2362+2)^(0+128)
  5174     01A0  0020               	movlb	0	; select bank0
  5175     01A1  0849               	movf	?___fladd+1,w
  5176     01A2  0021               	movlb	1	; select bank1
  5177     01A3  00C8               	movwf	(_ReadData$2362+1)^(0+128)
  5178     01A4  0020               	movlb	0	; select bank0
  5179     01A5  0848               	movf	?___fladd,w
  5180     01A6  0021               	movlb	1	; select bank1
  5181     01A7  00C7               	movwf	_ReadData$2362^(0+128)
  5182                           
  5183                           ;I2C_SHT30.c: 37:     double ctemp = (((((aData[0] * 256.0) + aData[1]) * 175) / 65535.0
      +                          ) - 45) * 10;
  5184     01A8  3041               	movlw	65
  5185     01A9  0020               	movlb	0	; select bank0
  5186     01AA  00B1               	movwf	___flmul@b+3
  5187     01AB  3020               	movlw	32
  5188     01AC  00B0               	movwf	___flmul@b+2
  5189     01AD  3000               	movlw	0
  5190     01AE  00AF               	movwf	___flmul@b+1
  5191     01AF  3000               	movlw	0
  5192     01B0  00AE               	movwf	___flmul@b
  5193     01B1  0021               	movlb	1	; select bank1
  5194     01B2  084A               	movf	(_ReadData$2362+3)^(0+128),w
  5195     01B3  0020               	movlb	0	; select bank0
  5196     01B4  00B5               	movwf	___flmul@a+3
  5197     01B5  0021               	movlb	1	; select bank1
  5198     01B6  0849               	movf	(_ReadData$2362+2)^(0+128),w
  5199     01B7  0020               	movlb	0	; select bank0
  5200     01B8  00B4               	movwf	___flmul@a+2
  5201     01B9  0021               	movlb	1	; select bank1
  5202     01BA  0848               	movf	(_ReadData$2362+1)^(0+128),w
  5203     01BB  0020               	movlb	0	; select bank0
  5204     01BC  00B3               	movwf	___flmul@a+1
  5205     01BD  0021               	movlb	1	; select bank1
  5206     01BE  0847               	movf	_ReadData$2362^(0+128),w
  5207     01BF  0020               	movlb	0	; select bank0
  5208     01C0  00B2               	movwf	___flmul@a
  5209     01C1  3182  22DF  3180   	fcall	___flmul
  5210     01C4  0020               	movlb	0	; select bank0
  5211     01C5  0831               	movf	?___flmul+3,w
  5212     01C6  0021               	movlb	1	; select bank1
  5213     01C7  00BE               	movwf	(ReadData@ctemp+3)^(0+128)
  5214     01C8  0020               	movlb	0	; select bank0
  5215     01C9  0830               	movf	?___flmul+2,w
  5216     01CA  0021               	movlb	1	; select bank1
  5217     01CB  00BD               	movwf	(ReadData@ctemp+2)^(0+128)
  5218     01CC  0020               	movlb	0	; select bank0
  5219     01CD  082F               	movf	?___flmul+1,w
  5220     01CE  0021               	movlb	1	; select bank1
  5221     01CF  00BC               	movwf	(ReadData@ctemp+1)^(0+128)
  5222     01D0  0020               	movlb	0	; select bank0
  5223     01D1  082E               	movf	?___flmul,w
  5224     01D2  0021               	movlb	1	; select bank1
  5225     01D3  00BB               	movwf	ReadData@ctemp^(0+128)
  5226                           
  5227                           ;I2C_SHT30.c: 38:     SensorAmbient.T.Val16 = (uint16_t) ctemp;
  5228     01D4  083E               	movf	(ReadData@ctemp+3)^(0+128),w
  5229     01D5  0020               	movlb	0	; select bank0
  5230     01D6  00A3               	movwf	___fltol@f1+3
  5231     01D7  0021               	movlb	1	; select bank1
  5232     01D8  083D               	movf	(ReadData@ctemp+2)^(0+128),w
  5233     01D9  0020               	movlb	0	; select bank0
  5234     01DA  00A2               	movwf	___fltol@f1+2
  5235     01DB  0021               	movlb	1	; select bank1
  5236     01DC  083C               	movf	(ReadData@ctemp+1)^(0+128),w
  5237     01DD  0020               	movlb	0	; select bank0
  5238     01DE  00A1               	movwf	___fltol@f1+1
  5239     01DF  0021               	movlb	1	; select bank1
  5240     01E0  083B               	movf	ReadData@ctemp^(0+128),w
  5241     01E1  0020               	movlb	0	; select bank0
  5242     01E2  00A0               	movwf	___fltol@f1
  5243     01E3  318A  223D  3180   	fcall	___fltol
  5244     01E6  0020               	movlb	0	; select bank0
  5245     01E7  0821               	movf	?___fltol+1,w
  5246     01E8  0021               	movlb	1	; select bank1
  5247     01E9  00DC               	movwf	(_SensorAmbient+1)^(0+128)
  5248     01EA  0020               	movlb	0	; select bank0
  5249     01EB  0820               	movf	?___fltol,w
  5250     01EC  0021               	movlb	1	; select bank1
  5251     01ED  00DB               	movwf	_SensorAmbient^(0+128)
  5252                           
  5253                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5254     01EE  0839               	movf	(ReadData@aData^(0+128)+4),w
  5255     01EF  00AD               	movwf	??_ReadData^(0+128)
  5256     01F0  01AE               	clrf	(??_ReadData^(0+128)+1)
  5257     01F1  01AF               	clrf	(??_ReadData^(0+128)+2)
  5258     01F2  01B0               	clrf	(??_ReadData^(0+128)+3)
  5259     01F3  0830               	movf	(??_ReadData+3)^(0+128),w
  5260     01F4  0020               	movlb	0	; select bank0
  5261     01F5  00A3               	movwf	___xxtofl@val+3
  5262     01F6  0021               	movlb	1	; select bank1
  5263     01F7  082F               	movf	(??_ReadData+2)^(0+128),w
  5264     01F8  0020               	movlb	0	; select bank0
  5265     01F9  00A2               	movwf	___xxtofl@val+2
  5266     01FA  0021               	movlb	1	; select bank1
  5267     01FB  082E               	movf	(??_ReadData+1)^(0+128),w
  5268     01FC  0020               	movlb	0	; select bank0
  5269     01FD  00A1               	movwf	___xxtofl@val+1
  5270     01FE  0021               	movlb	1	; select bank1
  5271     01FF  082D               	movf	??_ReadData^(0+128),w
  5272     0200  0020               	movlb	0	; select bank0
  5273     0201  00A0               	movwf	___xxtofl@val
  5274     0202  3001               	movlw	1
  5275     0203  318C  246E  3180   	fcall	___xxtofl
  5276     0206  0020               	movlb	0	; select bank0
  5277     0207  0823               	movf	?___xxtofl+3,w
  5278     0208  00CB               	movwf	___fladd@b+3
  5279     0209  0822               	movf	?___xxtofl+2,w
  5280     020A  00CA               	movwf	___fladd@b+2
  5281     020B  0821               	movf	?___xxtofl+1,w
  5282     020C  00C9               	movwf	___fladd@b+1
  5283     020D  0820               	movf	?___xxtofl,w
  5284     020E  00C8               	movwf	___fladd@b
  5285     020F  3043               	movlw	67
  5286     0210  00B1               	movwf	___flmul@b+3
  5287     0211  3080               	movlw	128
  5288     0212  00B0               	movwf	___flmul@b+2
  5289     0213  3000               	movlw	0
  5290     0214  00AF               	movwf	___flmul@b+1
  5291     0215  3000               	movlw	0
  5292     0216  00AE               	movwf	___flmul@b
  5293     0217  0021               	movlb	1	; select bank1
  5294     0218  0838               	movf	(ReadData@aData^(0+128)+3),w
  5295     0219  00B1               	movwf	(??_ReadData+4)^(0+128)
  5296     021A  01B2               	clrf	((??_ReadData+4)^(0+128)+1)
  5297     021B  01B3               	clrf	((??_ReadData+4)^(0+128)+2)
  5298     021C  01B4               	clrf	((??_ReadData+4)^(0+128)+3)
  5299     021D  0834               	movf	(??_ReadData+7)^(0+128),w
  5300     021E  0020               	movlb	0	; select bank0
  5301     021F  00A3               	movwf	___xxtofl@val+3
  5302     0220  0021               	movlb	1	; select bank1
  5303     0221  0833               	movf	(??_ReadData+6)^(0+128),w
  5304     0222  0020               	movlb	0	; select bank0
  5305     0223  00A2               	movwf	___xxtofl@val+2
  5306     0224  0021               	movlb	1	; select bank1
  5307     0225  0832               	movf	(??_ReadData+5)^(0+128),w
  5308     0226  0020               	movlb	0	; select bank0
  5309     0227  00A1               	movwf	___xxtofl@val+1
  5310     0228  0021               	movlb	1	; select bank1
  5311     0229  0831               	movf	(??_ReadData+4)^(0+128),w
  5312     022A  0020               	movlb	0	; select bank0
  5313     022B  00A0               	movwf	___xxtofl@val
  5314     022C  3001               	movlw	1
  5315     022D  318C  246E  3180   	fcall	___xxtofl
  5316     0230  0020               	movlb	0	; select bank0
  5317     0231  0823               	movf	?___xxtofl+3,w
  5318     0232  00B5               	movwf	___flmul@a+3
  5319     0233  0822               	movf	?___xxtofl+2,w
  5320     0234  00B4               	movwf	___flmul@a+2
  5321     0235  0821               	movf	?___xxtofl+1,w
  5322     0236  00B3               	movwf	___flmul@a+1
  5323     0237  0820               	movf	?___xxtofl,w
  5324     0238  00B2               	movwf	___flmul@a
  5325     0239  3182  22DF  3180   	fcall	___flmul
  5326     023C  0020               	movlb	0	; select bank0
  5327     023D  0831               	movf	?___flmul+3,w
  5328     023E  00CF               	movwf	___fladd@a+3
  5329     023F  0830               	movf	?___flmul+2,w
  5330     0240  00CE               	movwf	___fladd@a+2
  5331     0241  082F               	movf	?___flmul+1,w
  5332     0242  00CD               	movwf	___fladd@a+1
  5333     0243  082E               	movf	?___flmul,w
  5334     0244  00CC               	movwf	___fladd@a
  5335     0245  3185  251A  3180   	fcall	___fladd
  5336     0248  0020               	movlb	0	; select bank0
  5337     0249  084B               	movf	?___fladd+3,w
  5338     024A  0021               	movlb	1	; select bank1
  5339     024B  00C6               	movwf	(_ReadData$2361+3)^(0+128)
  5340     024C  0020               	movlb	0	; select bank0
  5341     024D  084A               	movf	?___fladd+2,w
  5342     024E  0021               	movlb	1	; select bank1
  5343     024F  00C5               	movwf	(_ReadData$2361+2)^(0+128)
  5344     0250  0020               	movlb	0	; select bank0
  5345     0251  0849               	movf	?___fladd+1,w
  5346     0252  0021               	movlb	1	; select bank1
  5347     0253  00C4               	movwf	(_ReadData$2361+1)^(0+128)
  5348     0254  0020               	movlb	0	; select bank0
  5349     0255  0848               	movf	?___fladd,w
  5350     0256  0021               	movlb	1	; select bank1
  5351     0257  00C3               	movwf	_ReadData$2361^(0+128)
  5352                           
  5353                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5354     0258  3047               	movlw	71
  5355     0259  0020               	movlb	0	; select bank0
  5356     025A  00DF               	movwf	___fldiv@a+3
  5357     025B  307F               	movlw	127
  5358     025C  00DE               	movwf	___fldiv@a+2
  5359     025D  30FF               	movlw	255
  5360     025E  00DD               	movwf	___fldiv@a+1
  5361     025F  3000               	movlw	0
  5362     0260  00DC               	movwf	___fldiv@a
  5363     0261  3042               	movlw	66
  5364     0262  00B1               	movwf	___flmul@b+3
  5365     0263  30C8               	movlw	200
  5366     0264  00B0               	movwf	___flmul@b+2
  5367     0265  3000               	movlw	0
  5368     0266  00AF               	movwf	___flmul@b+1
  5369     0267  3000               	movlw	0
  5370     0268  00AE               	movwf	___flmul@b
  5371     0269  0021               	movlb	1	; select bank1
  5372     026A  0846               	movf	(_ReadData$2361+3)^(0+128),w
  5373     026B  0020               	movlb	0	; select bank0
  5374     026C  00B5               	movwf	___flmul@a+3
  5375     026D  0021               	movlb	1	; select bank1
  5376     026E  0845               	movf	(_ReadData$2361+2)^(0+128),w
  5377     026F  0020               	movlb	0	; select bank0
  5378     0270  00B4               	movwf	___flmul@a+2
  5379     0271  0021               	movlb	1	; select bank1
  5380     0272  0844               	movf	(_ReadData$2361+1)^(0+128),w
  5381     0273  0020               	movlb	0	; select bank0
  5382     0274  00B3               	movwf	___flmul@a+1
  5383     0275  0021               	movlb	1	; select bank1
  5384     0276  0843               	movf	_ReadData$2361^(0+128),w
  5385     0277  0020               	movlb	0	; select bank0
  5386     0278  00B2               	movwf	___flmul@a
  5387     0279  3182  22DF  3180   	fcall	___flmul
  5388     027C  0020               	movlb	0	; select bank0
  5389     027D  0831               	movf	?___flmul+3,w
  5390     027E  00E3               	movwf	___fldiv@b+3
  5391     027F  0830               	movf	?___flmul+2,w
  5392     0280  00E2               	movwf	___fldiv@b+2
  5393     0281  082F               	movf	?___flmul+1,w
  5394     0282  00E1               	movwf	___fldiv@b+1
  5395     0283  082E               	movf	?___flmul,w
  5396     0284  00E0               	movwf	___fldiv@b
  5397     0285  318D  25FC  3180   	fcall	___fldiv
  5398     0288  0020               	movlb	0	; select bank0
  5399     0289  085F               	movf	?___fldiv+3,w
  5400     028A  0021               	movlb	1	; select bank1
  5401     028B  00CA               	movwf	(_ReadData$2362+3)^(0+128)
  5402     028C  0020               	movlb	0	; select bank0
  5403     028D  085E               	movf	?___fldiv+2,w
  5404     028E  0021               	movlb	1	; select bank1
  5405     028F  00C9               	movwf	(_ReadData$2362+2)^(0+128)
  5406     0290  0020               	movlb	0	; select bank0
  5407     0291  085D               	movf	?___fldiv+1,w
  5408     0292  0021               	movlb	1	; select bank1
  5409     0293  00C8               	movwf	(_ReadData$2362+1)^(0+128)
  5410     0294  0020               	movlb	0	; select bank0
  5411     0295  085C               	movf	?___fldiv,w
  5412     0296  0021               	movlb	1	; select bank1
  5413     0297  00C7               	movwf	_ReadData$2362^(0+128)
  5414                           
  5415                           ;I2C_SHT30.c: 42:     double humidity = ((((aData[3] * 256.0) + aData[4]) * 100) / 65535
      +                          .0) * 10;
  5416     0298  3041               	movlw	65
  5417     0299  0020               	movlb	0	; select bank0
  5418     029A  00B1               	movwf	___flmul@b+3
  5419     029B  3020               	movlw	32
  5420     029C  00B0               	movwf	___flmul@b+2
  5421     029D  3000               	movlw	0
  5422     029E  00AF               	movwf	___flmul@b+1
  5423     029F  3000               	movlw	0
  5424     02A0  00AE               	movwf	___flmul@b
  5425     02A1  0021               	movlb	1	; select bank1
  5426     02A2  084A               	movf	(_ReadData$2362+3)^(0+128),w
  5427     02A3  0020               	movlb	0	; select bank0
  5428     02A4  00B5               	movwf	___flmul@a+3
  5429     02A5  0021               	movlb	1	; select bank1
  5430     02A6  0849               	movf	(_ReadData$2362+2)^(0+128),w
  5431     02A7  0020               	movlb	0	; select bank0
  5432     02A8  00B4               	movwf	___flmul@a+2
  5433     02A9  0021               	movlb	1	; select bank1
  5434     02AA  0848               	movf	(_ReadData$2362+1)^(0+128),w
  5435     02AB  0020               	movlb	0	; select bank0
  5436     02AC  00B3               	movwf	___flmul@a+1
  5437     02AD  0021               	movlb	1	; select bank1
  5438     02AE  0847               	movf	_ReadData$2362^(0+128),w
  5439     02AF  0020               	movlb	0	; select bank0
  5440     02B0  00B2               	movwf	___flmul@a
  5441     02B1  3182  22DF  3180   	fcall	___flmul
  5442     02B4  0020               	movlb	0	; select bank0
  5443     02B5  0831               	movf	?___flmul+3,w
  5444     02B6  0021               	movlb	1	; select bank1
  5445     02B7  00C2               	movwf	(ReadData@humidity+3)^(0+128)
  5446     02B8  0020               	movlb	0	; select bank0
  5447     02B9  0830               	movf	?___flmul+2,w
  5448     02BA  0021               	movlb	1	; select bank1
  5449     02BB  00C1               	movwf	(ReadData@humidity+2)^(0+128)
  5450     02BC  0020               	movlb	0	; select bank0
  5451     02BD  082F               	movf	?___flmul+1,w
  5452     02BE  0021               	movlb	1	; select bank1
  5453     02BF  00C0               	movwf	(ReadData@humidity+1)^(0+128)
  5454     02C0  0020               	movlb	0	; select bank0
  5455     02C1  082E               	movf	?___flmul,w
  5456     02C2  0021               	movlb	1	; select bank1
  5457     02C3  00BF               	movwf	ReadData@humidity^(0+128)
  5458                           
  5459                           ;I2C_SHT30.c: 43:     SensorAmbient.H.Val16 = (uint16_t) humidity;
  5460     02C4  0842               	movf	(ReadData@humidity+3)^(0+128),w
  5461     02C5  0020               	movlb	0	; select bank0
  5462     02C6  00A3               	movwf	___fltol@f1+3
  5463     02C7  0021               	movlb	1	; select bank1
  5464     02C8  0841               	movf	(ReadData@humidity+2)^(0+128),w
  5465     02C9  0020               	movlb	0	; select bank0
  5466     02CA  00A2               	movwf	___fltol@f1+2
  5467     02CB  0021               	movlb	1	; select bank1
  5468     02CC  0840               	movf	(ReadData@humidity+1)^(0+128),w
  5469     02CD  0020               	movlb	0	; select bank0
  5470     02CE  00A1               	movwf	___fltol@f1+1
  5471     02CF  0021               	movlb	1	; select bank1
  5472     02D0  083F               	movf	ReadData@humidity^(0+128),w
  5473     02D1  0020               	movlb	0	; select bank0
  5474     02D2  00A0               	movwf	___fltol@f1
  5475     02D3  318A  223D  3180   	fcall	___fltol
  5476     02D6  0020               	movlb	0	; select bank0
  5477     02D7  0821               	movf	?___fltol+1,w
  5478     02D8  0021               	movlb	1	; select bank1
  5479     02D9  00DE               	movwf	((_SensorAmbient+1)^(0+128)+2)
  5480     02DA  0020               	movlb	0	; select bank0
  5481     02DB  0820               	movf	?___fltol,w
  5482     02DC  0021               	movlb	1	; select bank1
  5483     02DD  00DD               	movwf	(_SensorAmbient^(0+128)+2)
  5484     02DE                     l808:
  5485     02DE  0008               	return
  5486     02DF                     __end_of_ReadData:
  5487                           
  5488                           	psect	text17
  5489     0C6E                     __ptext17:	
  5490 ;; *************** function ___xxtofl *****************
  5491 ;; Defined at:
  5492 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\xxtofl.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  sign            1    wreg     unsigned char 
  5495 ;;  val             4    0[BANK0 ] long 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  sign            1    8[BANK0 ] unsigned char 
  5498 ;;  arg             4   10[BANK0 ] unsigned long 
  5499 ;;  exp             1    9[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4    0[BANK0 ] unsigned char 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5509 ;;      Params:         0       4       0       0       0       0       0       0
  5510 ;;      Locals:         0       6       0       0       0       0       0       0
  5511 ;;      Temps:          0       4       0       0       0       0       0       0
  5512 ;;      Totals:         0      14       0       0       0       0       0       0
  5513 ;;Total ram usage:       14 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 7
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_ReadData
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523     0C6E                     ___xxtofl:	
  5524                           ;psect for function ___xxtofl
  5525                           
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5529                           ;___xxtofl@sign stored from wreg
  5530     0C6E  0020               	movlb	0	; select bank0
  5531     0C6F  00A8               	movwf	___xxtofl@sign
  5532     0C70                     l4537:
  5533     0C70  0828               	movf	___xxtofl@sign,w
  5534     0C71  1903               	btfsc	3,2
  5535     0C72  2C74               	goto	u3831
  5536     0C73  2C75               	goto	u3830
  5537     0C74                     u3831:
  5538     0C74  2C89               	goto	l4543
  5539     0C75                     u3830:
  5540     0C75                     l4539:
  5541     0C75  1FA3               	btfss	___xxtofl@val+3,7
  5542     0C76  2C78               	goto	u3841
  5543     0C77  2C79               	goto	u3840
  5544     0C78                     u3841:
  5545     0C78  2C89               	goto	l4543
  5546     0C79                     u3840:
  5547     0C79                     l4541:
  5548     0C79  0920               	comf	___xxtofl@val,w
  5549     0C7A  00AA               	movwf	___xxtofl@arg
  5550     0C7B  0921               	comf	___xxtofl@val+1,w
  5551     0C7C  00AB               	movwf	___xxtofl@arg+1
  5552     0C7D  0922               	comf	___xxtofl@val+2,w
  5553     0C7E  00AC               	movwf	___xxtofl@arg+2
  5554     0C7F  0923               	comf	___xxtofl@val+3,w
  5555     0C80  00AD               	movwf	___xxtofl@arg+3
  5556     0C81  0AAA               	incf	___xxtofl@arg,f
  5557     0C82  1903               	skipnz
  5558     0C83  0AAB               	incf	___xxtofl@arg+1,f
  5559     0C84  1903               	skipnz
  5560     0C85  0AAC               	incf	___xxtofl@arg+2,f
  5561     0C86  1903               	skipnz
  5562     0C87  0AAD               	incf	___xxtofl@arg+3,f
  5563     0C88  2C91               	goto	l1595
  5564     0C89                     l4543:
  5565     0C89  0823               	movf	___xxtofl@val+3,w
  5566     0C8A  00AD               	movwf	___xxtofl@arg+3
  5567     0C8B  0822               	movf	___xxtofl@val+2,w
  5568     0C8C  00AC               	movwf	___xxtofl@arg+2
  5569     0C8D  0821               	movf	___xxtofl@val+1,w
  5570     0C8E  00AB               	movwf	___xxtofl@arg+1
  5571     0C8F  0820               	movf	___xxtofl@val,w
  5572     0C90  00AA               	movwf	___xxtofl@arg
  5573     0C91                     l1595:
  5574     0C91  0823               	movf	___xxtofl@val+3,w
  5575     0C92  0422               	iorwf	___xxtofl@val+2,w
  5576     0C93  0421               	iorwf	___xxtofl@val+1,w
  5577     0C94  0420               	iorwf	___xxtofl@val,w
  5578     0C95  1D03               	skipz
  5579     0C96  2C98               	goto	u3851
  5580     0C97  2C99               	goto	u3850
  5581     0C98                     u3851:
  5582     0C98  2CA2               	goto	l4549
  5583     0C99                     u3850:
  5584     0C99                     l4545:
  5585     0C99  3000               	movlw	0
  5586     0C9A  00A3               	movwf	?___xxtofl+3
  5587     0C9B  3000               	movlw	0
  5588     0C9C  00A2               	movwf	?___xxtofl+2
  5589     0C9D  3000               	movlw	0
  5590     0C9E  00A1               	movwf	?___xxtofl+1
  5591     0C9F  3000               	movlw	0
  5592     0CA0  00A0               	movwf	?___xxtofl
  5593     0CA1  2D18               	goto	l1597
  5594     0CA2                     l4549:
  5595     0CA2  3096               	movlw	150
  5596     0CA3  00A9               	movwf	___xxtofl@exp
  5597     0CA4  2CB0               	goto	l4553
  5598     0CA5                     l4551:
  5599     0CA5  3001               	movlw	1
  5600     0CA6  00A4               	movwf	??___xxtofl
  5601     0CA7  0824               	movf	??___xxtofl,w
  5602     0CA8  07A9               	addwf	___xxtofl@exp,f
  5603     0CA9  3001               	movlw	1
  5604     0CAA                     u3865:
  5605     0CAA  36AD               	lsrf	___xxtofl@arg+3,f
  5606     0CAB  0CAC               	rrf	___xxtofl@arg+2,f
  5607     0CAC  0CAB               	rrf	___xxtofl@arg+1,f
  5608     0CAD  0CAA               	rrf	___xxtofl@arg,f
  5609     0CAE  0B89               	decfsz	9,f
  5610     0CAF  2CAA               	goto	u3865
  5611     0CB0                     l4553:
  5612     0CB0  30FE               	movlw	254
  5613     0CB1  052D               	andwf	___xxtofl@arg+3,w
  5614     0CB2  1D03               	btfss	3,2
  5615     0CB3  2CB5               	goto	u3871
  5616     0CB4  2CB6               	goto	u3870
  5617     0CB5                     u3871:
  5618     0CB5  2CA5               	goto	l4551
  5619     0CB6                     u3870:
  5620     0CB6  2CCA               	goto	l1601
  5621     0CB7                     l4555:
  5622     0CB7  3001               	movlw	1
  5623     0CB8  00A4               	movwf	??___xxtofl
  5624     0CB9  0824               	movf	??___xxtofl,w
  5625     0CBA  07A9               	addwf	___xxtofl@exp,f
  5626     0CBB                     l4557:
  5627     0CBB  3001               	movlw	1
  5628     0CBC  07AA               	addwf	___xxtofl@arg,f
  5629     0CBD  3000               	movlw	0
  5630     0CBE  3DAB               	addwfc	___xxtofl@arg+1,f
  5631     0CBF  3000               	movlw	0
  5632     0CC0  3DAC               	addwfc	___xxtofl@arg+2,f
  5633     0CC1  3000               	movlw	0
  5634     0CC2  3DAD               	addwfc	___xxtofl@arg+3,f
  5635     0CC3                     l4559:
  5636     0CC3  3001               	movlw	1
  5637     0CC4                     u3885:
  5638     0CC4  36AD               	lsrf	___xxtofl@arg+3,f
  5639     0CC5  0CAC               	rrf	___xxtofl@arg+2,f
  5640     0CC6  0CAB               	rrf	___xxtofl@arg+1,f
  5641     0CC7  0CAA               	rrf	___xxtofl@arg,f
  5642     0CC8  0B89               	decfsz	9,f
  5643     0CC9  2CC4               	goto	u3885
  5644     0CCA                     l1601:
  5645     0CCA  30FF               	movlw	255
  5646     0CCB  052D               	andwf	___xxtofl@arg+3,w
  5647     0CCC  1D03               	btfss	3,2
  5648     0CCD  2CCF               	goto	u3891
  5649     0CCE  2CD0               	goto	u3890
  5650     0CCF                     u3891:
  5651     0CCF  2CB7               	goto	l4555
  5652     0CD0                     u3890:
  5653     0CD0  2CDA               	goto	l4563
  5654     0CD1                     l4561:
  5655     0CD1  3001               	movlw	1
  5656     0CD2  02A9               	subwf	___xxtofl@exp,f
  5657     0CD3  3001               	movlw	1
  5658     0CD4                     u3905:
  5659     0CD4  35AA               	lslf	___xxtofl@arg,f
  5660     0CD5  0DAB               	rlf	___xxtofl@arg+1,f
  5661     0CD6  0DAC               	rlf	___xxtofl@arg+2,f
  5662     0CD7  0DAD               	rlf	___xxtofl@arg+3,f
  5663     0CD8  0B89               	decfsz	9,f
  5664     0CD9  2CD4               	goto	u3905
  5665     0CDA                     l4563:
  5666     0CDA  1BAC               	btfsc	___xxtofl@arg+2,7
  5667     0CDB  2CDD               	goto	u3911
  5668     0CDC  2CDE               	goto	u3910
  5669     0CDD                     u3911:
  5670     0CDD  2CE4               	goto	l1608
  5671     0CDE                     u3910:
  5672     0CDE                     l4565:
  5673     0CDE  3002               	movlw	2
  5674     0CDF  0229               	subwf	___xxtofl@exp,w
  5675     0CE0  1803               	skipnc
  5676     0CE1  2CE3               	goto	u3921
  5677     0CE2  2CE4               	goto	u3920
  5678     0CE3                     u3921:
  5679     0CE3  2CD1               	goto	l4561
  5680     0CE4                     u3920:
  5681     0CE4                     l1608:
  5682     0CE4  1829               	btfsc	___xxtofl@exp,0
  5683     0CE5  2CE7               	goto	u3931
  5684     0CE6  2CE8               	goto	u3930
  5685     0CE7                     u3931:
  5686     0CE7  2CF0               	goto	l1609
  5687     0CE8                     u3930:
  5688     0CE8                     l4567:
  5689     0CE8  30FF               	movlw	255
  5690     0CE9  05AA               	andwf	___xxtofl@arg,f
  5691     0CEA  30FF               	movlw	255
  5692     0CEB  05AB               	andwf	___xxtofl@arg+1,f
  5693     0CEC  307F               	movlw	127
  5694     0CED  05AC               	andwf	___xxtofl@arg+2,f
  5695     0CEE  30FF               	movlw	255
  5696     0CEF  05AD               	andwf	___xxtofl@arg+3,f
  5697     0CF0                     l1609:
  5698     0CF0  1003               	clrc
  5699     0CF1  0CA9               	rrf	___xxtofl@exp,f
  5700     0CF2                     l4569:
  5701     0CF2  0829               	movf	___xxtofl@exp,w
  5702     0CF3  00A4               	movwf	??___xxtofl
  5703     0CF4  01A5               	clrf	??___xxtofl+1
  5704     0CF5  01A6               	clrf	??___xxtofl+2
  5705     0CF6  01A7               	clrf	??___xxtofl+3
  5706     0CF7  3018               	movlw	24
  5707     0CF8                     u3945:
  5708     0CF8  35A4               	lslf	??___xxtofl,f
  5709     0CF9  0DA5               	rlf	??___xxtofl+1,f
  5710     0CFA  0DA6               	rlf	??___xxtofl+2,f
  5711     0CFB  0DA7               	rlf	??___xxtofl+3,f
  5712     0CFC                     u3940:
  5713     0CFC  0B89               	decfsz	9,f
  5714     0CFD  2CF8               	goto	u3945
  5715     0CFE  0824               	movf	??___xxtofl,w
  5716     0CFF  04AA               	iorwf	___xxtofl@arg,f
  5717     0D00  0825               	movf	??___xxtofl+1,w
  5718     0D01  04AB               	iorwf	___xxtofl@arg+1,f
  5719     0D02  0826               	movf	??___xxtofl+2,w
  5720     0D03  04AC               	iorwf	___xxtofl@arg+2,f
  5721     0D04  0827               	movf	??___xxtofl+3,w
  5722     0D05  04AD               	iorwf	___xxtofl@arg+3,f
  5723     0D06                     l4571:
  5724     0D06  0828               	movf	___xxtofl@sign,w
  5725     0D07  1903               	btfsc	3,2
  5726     0D08  2D0A               	goto	u3951
  5727     0D09  2D0B               	goto	u3950
  5728     0D0A                     u3951:
  5729     0D0A  2D10               	goto	l4577
  5730     0D0B                     u3950:
  5731     0D0B                     l4573:
  5732     0D0B  1FA3               	btfss	___xxtofl@val+3,7
  5733     0D0C  2D0E               	goto	u3961
  5734     0D0D  2D0F               	goto	u3960
  5735     0D0E                     u3961:
  5736     0D0E  2D10               	goto	l4577
  5737     0D0F                     u3960:
  5738     0D0F                     l4575:
  5739     0D0F  17AD               	bsf	___xxtofl@arg+3,7
  5740     0D10                     l4577:
  5741     0D10  082D               	movf	___xxtofl@arg+3,w
  5742     0D11  00A3               	movwf	?___xxtofl+3
  5743     0D12  082C               	movf	___xxtofl@arg+2,w
  5744     0D13  00A2               	movwf	?___xxtofl+2
  5745     0D14  082B               	movf	___xxtofl@arg+1,w
  5746     0D15  00A1               	movwf	?___xxtofl+1
  5747     0D16  082A               	movf	___xxtofl@arg,w
  5748     0D17  00A0               	movwf	?___xxtofl
  5749     0D18                     l1597:
  5750     0D18  0008               	return
  5751     0D19                     __end_of___xxtofl:
  5752                           
  5753                           	psect	text18
  5754     0A3D                     __ptext18:	
  5755 ;; *************** function ___fltol *****************
  5756 ;; Defined at:
  5757 ;;		line 43 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\fltol.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  f1              4    0[BANK0 ] unsigned char 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  exp1            1    9[BANK0 ] unsigned char 
  5762 ;;  sign1           1    8[BANK0 ] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  4    0[BANK0 ] long 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5772 ;;      Params:         0       4       0       0       0       0       0       0
  5773 ;;      Locals:         0       2       0       0       0       0       0       0
  5774 ;;      Temps:          0       4       0       0       0       0       0       0
  5775 ;;      Totals:         0      10       0       0       0       0       0       0
  5776 ;;Total ram usage:       10 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 7
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_ReadData
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786     0A3D                     ___fltol:	
  5787                           ;psect for function ___fltol
  5788                           
  5789     0A3D                     l4027:	
  5790                           ;incstack = 0
  5791                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5792                           
  5793     0A3D  1003               	clrc
  5794     0A3E  0020               	movlb	0	; select bank0
  5795     0A3F  0D22               	rlf	___fltol@f1+2,w
  5796     0A40  0D23               	rlf	___fltol@f1+3,w
  5797     0A41  00A9               	movwf	___fltol@exp1
  5798     0A42  0829               	movf	___fltol@exp1,w
  5799     0A43  1D03               	btfss	3,2
  5800     0A44  2A46               	goto	u2751
  5801     0A45  2A47               	goto	u2750
  5802     0A46                     u2751:
  5803     0A46  2A50               	goto	l4033
  5804     0A47                     u2750:
  5805     0A47                     l4029:
  5806     0A47  3000               	movlw	0
  5807     0A48  00A3               	movwf	?___fltol+3
  5808     0A49  3000               	movlw	0
  5809     0A4A  00A2               	movwf	?___fltol+2
  5810     0A4B  3000               	movlw	0
  5811     0A4C  00A1               	movwf	?___fltol+1
  5812     0A4D  3000               	movlw	0
  5813     0A4E  00A0               	movwf	?___fltol
  5814     0A4F  2AAD               	goto	l1348
  5815     0A50                     l4033:
  5816     0A50  0820               	movf	___fltol@f1,w
  5817     0A51  00A4               	movwf	??___fltol
  5818     0A52  0821               	movf	___fltol@f1+1,w
  5819     0A53  00A5               	movwf	??___fltol+1
  5820     0A54  0822               	movf	___fltol@f1+2,w
  5821     0A55  00A6               	movwf	??___fltol+2
  5822     0A56  0823               	movf	___fltol@f1+3,w
  5823     0A57  00A7               	movwf	??___fltol+3
  5824     0A58  301F               	movlw	31
  5825     0A59                     u2765:
  5826     0A59  36A7               	lsrf	??___fltol+3,f
  5827     0A5A  0CA6               	rrf	??___fltol+2,f
  5828     0A5B  0CA5               	rrf	??___fltol+1,f
  5829     0A5C  0CA4               	rrf	??___fltol,f
  5830     0A5D                     u2760:
  5831     0A5D  0B89               	decfsz	9,f
  5832     0A5E  2A59               	goto	u2765
  5833     0A5F  0824               	movf	??___fltol,w
  5834     0A60  00A8               	movwf	___fltol@sign1
  5835     0A61                     l4035:
  5836     0A61  17A2               	bsf	___fltol@f1+2,7
  5837     0A62                     l4037:
  5838     0A62  30FF               	movlw	255
  5839     0A63  05A0               	andwf	___fltol@f1,f
  5840     0A64  30FF               	movlw	255
  5841     0A65  05A1               	andwf	___fltol@f1+1,f
  5842     0A66  30FF               	movlw	255
  5843     0A67  05A2               	andwf	___fltol@f1+2,f
  5844     0A68  3000               	movlw	0
  5845     0A69  05A3               	andwf	___fltol@f1+3,f
  5846     0A6A                     l4039:
  5847     0A6A  3096               	movlw	150
  5848     0A6B  02A9               	subwf	___fltol@exp1,f
  5849     0A6C                     l4041:
  5850     0A6C  1FA9               	btfss	___fltol@exp1,7
  5851     0A6D  2A6F               	goto	u2771
  5852     0A6E  2A70               	goto	u2770
  5853     0A6F                     u2771:
  5854     0A6F  2A88               	goto	l4051
  5855     0A70                     u2770:
  5856     0A70                     l4043:
  5857     0A70  0829               	movf	___fltol@exp1,w
  5858     0A71  3A80               	xorlw	128
  5859     0A72  3E97               	addlw	151
  5860     0A73  1803               	skipnc
  5861     0A74  2A76               	goto	u2781
  5862     0A75  2A77               	goto	u2780
  5863     0A76                     u2781:
  5864     0A76  2A78               	goto	l4049
  5865     0A77                     u2780:
  5866     0A77  2A47               	goto	l4029
  5867     0A78                     l4049:
  5868     0A78  3001               	movlw	1
  5869     0A79                     u2795:
  5870     0A79  36A3               	lsrf	___fltol@f1+3,f
  5871     0A7A  0CA2               	rrf	___fltol@f1+2,f
  5872     0A7B  0CA1               	rrf	___fltol@f1+1,f
  5873     0A7C  0CA0               	rrf	___fltol@f1,f
  5874     0A7D  0B89               	decfsz	9,f
  5875     0A7E  2A79               	goto	u2795
  5876     0A7F  3001               	movlw	1
  5877     0A80  00A4               	movwf	??___fltol
  5878     0A81  0824               	movf	??___fltol,w
  5879     0A82  07A9               	addwf	___fltol@exp1,f
  5880     0A83  1D03               	btfss	3,2
  5881     0A84  2A86               	goto	u2801
  5882     0A85  2A87               	goto	u2800
  5883     0A86                     u2801:
  5884     0A86  2A78               	goto	l4049
  5885     0A87                     u2800:
  5886     0A87  2A9D               	goto	l4059
  5887     0A88                     l4051:
  5888     0A88  3020               	movlw	32
  5889     0A89  0229               	subwf	___fltol@exp1,w
  5890     0A8A  1C03               	skipc
  5891     0A8B  2A8D               	goto	u2811
  5892     0A8C  2A8E               	goto	u2810
  5893     0A8D                     u2811:
  5894     0A8D  2A98               	goto	l1355
  5895     0A8E                     u2810:
  5896     0A8E  2A47               	goto	l4029
  5897     0A8F                     l4057:
  5898     0A8F  3001               	movlw	1
  5899     0A90                     u2825:
  5900     0A90  35A0               	lslf	___fltol@f1,f
  5901     0A91  0DA1               	rlf	___fltol@f1+1,f
  5902     0A92  0DA2               	rlf	___fltol@f1+2,f
  5903     0A93  0DA3               	rlf	___fltol@f1+3,f
  5904     0A94  0B89               	decfsz	9,f
  5905     0A95  2A90               	goto	u2825
  5906     0A96  3001               	movlw	1
  5907     0A97  02A9               	subwf	___fltol@exp1,f
  5908     0A98                     l1355:
  5909     0A98  0829               	movf	___fltol@exp1,w
  5910     0A99  1D03               	btfss	3,2
  5911     0A9A  2A9C               	goto	u2831
  5912     0A9B  2A9D               	goto	u2830
  5913     0A9C                     u2831:
  5914     0A9C  2A8F               	goto	l4057
  5915     0A9D                     u2830:
  5916     0A9D                     l4059:
  5917     0A9D  0828               	movf	___fltol@sign1,w
  5918     0A9E  1903               	btfsc	3,2
  5919     0A9F  2AA1               	goto	u2841
  5920     0AA0  2AA2               	goto	u2840
  5921     0AA1                     u2841:
  5922     0AA1  2AAD               	goto	l1358
  5923     0AA2                     u2840:
  5924     0AA2                     l4061:
  5925     0AA2  09A0               	comf	___fltol@f1,f
  5926     0AA3  09A1               	comf	___fltol@f1+1,f
  5927     0AA4  09A2               	comf	___fltol@f1+2,f
  5928     0AA5  09A3               	comf	___fltol@f1+3,f
  5929     0AA6  0AA0               	incf	___fltol@f1,f
  5930     0AA7  1903               	skipnz
  5931     0AA8  0AA1               	incf	___fltol@f1+1,f
  5932     0AA9  1903               	skipnz
  5933     0AAA  0AA2               	incf	___fltol@f1+2,f
  5934     0AAB  1903               	skipnz
  5935     0AAC  0AA3               	incf	___fltol@f1+3,f
  5936     0AAD                     l1358:
  5937     0AAD                     l1348:
  5938     0AAD  0008               	return
  5939     0AAE                     __end_of___fltol:
  5940                           
  5941                           	psect	text19
  5942     02DF                     __ptext19:	
  5943 ;; *************** function ___flmul *****************
  5944 ;; Defined at:
  5945 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcmul.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  b               4   14[BANK0 ] long 
  5948 ;;  a               4   18[BANK0 ] long 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  prod            4   34[BANK0 ] struct .
  5951 ;;  grs             4   28[BANK0 ] unsigned long 
  5952 ;;  temp            2   38[BANK0 ] struct .
  5953 ;;  bexp            1   33[BANK0 ] unsigned char 
  5954 ;;  aexp            1   32[BANK0 ] unsigned char 
  5955 ;;  sign            1   27[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  4   14[BANK0 ] unsigned char 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0, pclath, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5965 ;;      Params:         0       8       0       0       0       0       0       0
  5966 ;;      Locals:         0      13       0       0       0       0       0       0
  5967 ;;      Temps:          0       5       0       0       0       0       0       0
  5968 ;;      Totals:         0      26       0       0       0       0       0       0
  5969 ;;Total ram usage:       26 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 8
  5972 ;; This function calls:
  5973 ;;		__Umul8_16
  5974 ;; This function is called by:
  5975 ;;		_ReadData
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979     02DF                     ___flmul:	
  5980                           ;psect for function ___flmul
  5981                           
  5982     02DF                     l4397:	
  5983                           ;incstack = 0
  5984                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5985                           
  5986     02DF  0020               	movlb	0	; select bank0
  5987     02E0  0831               	movf	___flmul@b+3,w
  5988     02E1  3980               	andlw	128
  5989     02E2  00BB               	movwf	___flmul@sign
  5990     02E3                     l4399:
  5991     02E3  3531               	lslf	___flmul@b+3,w
  5992     02E4  00C1               	movwf	___flmul@bexp
  5993     02E5                     l4401:
  5994     02E5  1FB0               	btfss	___flmul@b+2,7
  5995     02E6  2AE8               	goto	u3571
  5996     02E7  2AE9               	goto	u3570
  5997     02E8                     u3571:
  5998     02E8  2AEA               	goto	l4405
  5999     02E9                     u3570:
  6000     02E9                     l4403:
  6001     02E9  1441               	bsf	___flmul@bexp,0
  6002     02EA                     l4405:
  6003     02EA  0841               	movf	___flmul@bexp,w
  6004     02EB  1903               	btfsc	3,2
  6005     02EC  2AEE               	goto	u3581
  6006     02ED  2AEF               	goto	u3580
  6007     02EE                     u3581:
  6008     02EE  2AFE               	goto	l4413
  6009     02EF                     u3580:
  6010     02EF                     l4407:
  6011     02EF  0A41               	incf	___flmul@bexp,w
  6012     02F0  1D03               	btfss	3,2
  6013     02F1  2AF3               	goto	u3591
  6014     02F2  2AF4               	goto	u3590
  6015     02F3                     u3591:
  6016     02F3  2AFC               	goto	l4411
  6017     02F4                     u3590:
  6018     02F4                     l4409:
  6019     02F4  3000               	movlw	0
  6020     02F5  00B1               	movwf	___flmul@b+3
  6021     02F6  3000               	movlw	0
  6022     02F7  00B0               	movwf	___flmul@b+2
  6023     02F8  3000               	movlw	0
  6024     02F9  00AF               	movwf	___flmul@b+1
  6025     02FA  3000               	movlw	0
  6026     02FB  00AE               	movwf	___flmul@b
  6027     02FC                     l4411:
  6028     02FC  17B0               	bsf	___flmul@b+2,7
  6029     02FD  2B06               	goto	l4415
  6030     02FE                     l4413:
  6031     02FE  3000               	movlw	0
  6032     02FF  00B1               	movwf	___flmul@b+3
  6033     0300  3000               	movlw	0
  6034     0301  00B0               	movwf	___flmul@b+2
  6035     0302  3000               	movlw	0
  6036     0303  00AF               	movwf	___flmul@b+1
  6037     0304  3000               	movlw	0
  6038     0305  00AE               	movwf	___flmul@b
  6039     0306                     l4415:
  6040     0306  0835               	movf	___flmul@a+3,w
  6041     0307  3980               	andlw	128
  6042     0308  00B6               	movwf	??___flmul
  6043     0309  0836               	movf	??___flmul,w
  6044     030A  06BB               	xorwf	___flmul@sign,f
  6045     030B                     l4417:
  6046     030B  3535               	lslf	___flmul@a+3,w
  6047     030C  00C0               	movwf	___flmul@aexp
  6048     030D                     l4419:
  6049     030D  1FB4               	btfss	___flmul@a+2,7
  6050     030E  2B10               	goto	u3601
  6051     030F  2B11               	goto	u3600
  6052     0310                     u3601:
  6053     0310  2B12               	goto	l4423
  6054     0311                     u3600:
  6055     0311                     l4421:
  6056     0311  1440               	bsf	___flmul@aexp,0
  6057     0312                     l4423:
  6058     0312  0840               	movf	___flmul@aexp,w
  6059     0313  1903               	btfsc	3,2
  6060     0314  2B16               	goto	u3611
  6061     0315  2B17               	goto	u3610
  6062     0316                     u3611:
  6063     0316  2B26               	goto	l4431
  6064     0317                     u3610:
  6065     0317                     l4425:
  6066     0317  0A40               	incf	___flmul@aexp,w
  6067     0318  1D03               	btfss	3,2
  6068     0319  2B1B               	goto	u3621
  6069     031A  2B1C               	goto	u3620
  6070     031B                     u3621:
  6071     031B  2B24               	goto	l4429
  6072     031C                     u3620:
  6073     031C                     l4427:
  6074     031C  3000               	movlw	0
  6075     031D  00B5               	movwf	___flmul@a+3
  6076     031E  3000               	movlw	0
  6077     031F  00B4               	movwf	___flmul@a+2
  6078     0320  3000               	movlw	0
  6079     0321  00B3               	movwf	___flmul@a+1
  6080     0322  3000               	movlw	0
  6081     0323  00B2               	movwf	___flmul@a
  6082     0324                     l4429:
  6083     0324  17B4               	bsf	___flmul@a+2,7
  6084     0325  2B2E               	goto	l4433
  6085     0326                     l4431:
  6086     0326  3000               	movlw	0
  6087     0327  00B5               	movwf	___flmul@a+3
  6088     0328  3000               	movlw	0
  6089     0329  00B4               	movwf	___flmul@a+2
  6090     032A  3000               	movlw	0
  6091     032B  00B3               	movwf	___flmul@a+1
  6092     032C  3000               	movlw	0
  6093     032D  00B2               	movwf	___flmul@a
  6094     032E                     l4433:
  6095     032E  0840               	movf	___flmul@aexp,w
  6096     032F  1903               	btfsc	3,2
  6097     0330  2B32               	goto	u3631
  6098     0331  2B33               	goto	u3630
  6099     0332                     u3631:
  6100     0332  2B38               	goto	l4437
  6101     0333                     u3630:
  6102     0333                     l4435:
  6103     0333  0841               	movf	___flmul@bexp,w
  6104     0334  1D03               	btfss	3,2
  6105     0335  2B37               	goto	u3641
  6106     0336  2B38               	goto	u3640
  6107     0337                     u3641:
  6108     0337  2B41               	goto	l4441
  6109     0338                     u3640:
  6110     0338                     l4437:
  6111     0338  3000               	movlw	0
  6112     0339  00B1               	movwf	?___flmul+3
  6113     033A  3000               	movlw	0
  6114     033B  00B0               	movwf	?___flmul+2
  6115     033C  3000               	movlw	0
  6116     033D  00AF               	movwf	?___flmul+1
  6117     033E  3000               	movlw	0
  6118     033F  00AE               	movwf	?___flmul
  6119     0340  2D19               	goto	l1551
  6120     0341                     l4441:
  6121     0341  082E               	movf	___flmul@b,w
  6122     0342  00A0               	movwf	__Umul8_16@multiplicand
  6123     0343  0834               	movf	___flmul@a+2,w
  6124     0344  3195  2552  3182   	fcall	__Umul8_16
  6125     0347  0020               	movlb	0	; select bank0
  6126     0348  0821               	movf	?__Umul8_16+1,w
  6127     0349  00C7               	movwf	___flmul@temp+1
  6128     034A  0820               	movf	?__Umul8_16,w
  6129     034B  00C6               	movwf	___flmul@temp
  6130     034C                     l4443:
  6131     034C  0846               	movf	___flmul@temp,w
  6132     034D  00B6               	movwf	??___flmul
  6133     034E  01B7               	clrf	??___flmul+1
  6134     034F  01B8               	clrf	??___flmul+2
  6135     0350  01B9               	clrf	??___flmul+3
  6136     0351  0839               	movf	??___flmul+3,w
  6137     0352  00BF               	movwf	___flmul@grs+3
  6138     0353  0838               	movf	??___flmul+2,w
  6139     0354  00BE               	movwf	___flmul@grs+2
  6140     0355  0837               	movf	??___flmul+1,w
  6141     0356  00BD               	movwf	___flmul@grs+1
  6142     0357  0836               	movf	??___flmul,w
  6143     0358  00BC               	movwf	___flmul@grs
  6144     0359                     l4445:
  6145     0359  0847               	movf	___flmul@temp+1,w
  6146     035A  00B6               	movwf	??___flmul
  6147     035B  01B7               	clrf	??___flmul+1
  6148     035C  01B8               	clrf	??___flmul+2
  6149     035D  01B9               	clrf	??___flmul+3
  6150     035E  0839               	movf	??___flmul+3,w
  6151     035F  00C5               	movwf	___flmul@prod+3
  6152     0360  0838               	movf	??___flmul+2,w
  6153     0361  00C4               	movwf	___flmul@prod+2
  6154     0362  0837               	movf	??___flmul+1,w
  6155     0363  00C3               	movwf	___flmul@prod+1
  6156     0364  0836               	movf	??___flmul,w
  6157     0365  00C2               	movwf	___flmul@prod
  6158     0366  082F               	movf	___flmul@b+1,w
  6159     0367  00A0               	movwf	__Umul8_16@multiplicand
  6160     0368  0833               	movf	___flmul@a+1,w
  6161     0369  3195  2552  3182   	fcall	__Umul8_16
  6162     036C  0020               	movlb	0	; select bank0
  6163     036D  0821               	movf	?__Umul8_16+1,w
  6164     036E  00C7               	movwf	___flmul@temp+1
  6165     036F  0820               	movf	?__Umul8_16,w
  6166     0370  00C6               	movwf	___flmul@temp
  6167     0371                     l4447:
  6168     0371  0846               	movf	___flmul@temp,w
  6169     0372  00B6               	movwf	??___flmul
  6170     0373  01B7               	clrf	??___flmul+1
  6171     0374  01B8               	clrf	??___flmul+2
  6172     0375  01B9               	clrf	??___flmul+3
  6173     0376  0836               	movf	??___flmul,w
  6174     0377  07BC               	addwf	___flmul@grs,f
  6175     0378  0837               	movf	??___flmul+1,w
  6176     0379  3DBD               	addwfc	___flmul@grs+1,f
  6177     037A  0838               	movf	??___flmul+2,w
  6178     037B  3DBE               	addwfc	___flmul@grs+2,f
  6179     037C  0839               	movf	??___flmul+3,w
  6180     037D  3DBF               	addwfc	___flmul@grs+3,f
  6181     037E                     l4449:
  6182     037E  0847               	movf	___flmul@temp+1,w
  6183     037F  00B6               	movwf	??___flmul
  6184     0380  01B7               	clrf	??___flmul+1
  6185     0381  01B8               	clrf	??___flmul+2
  6186     0382  01B9               	clrf	??___flmul+3
  6187     0383  0836               	movf	??___flmul,w
  6188     0384  07C2               	addwf	___flmul@prod,f
  6189     0385  0837               	movf	??___flmul+1,w
  6190     0386  3DC3               	addwfc	___flmul@prod+1,f
  6191     0387  0838               	movf	??___flmul+2,w
  6192     0388  3DC4               	addwfc	___flmul@prod+2,f
  6193     0389  0839               	movf	??___flmul+3,w
  6194     038A  3DC5               	addwfc	___flmul@prod+3,f
  6195     038B  0830               	movf	___flmul@b+2,w
  6196     038C  00A0               	movwf	__Umul8_16@multiplicand
  6197     038D  0832               	movf	___flmul@a,w
  6198     038E  3195  2552  3182   	fcall	__Umul8_16
  6199     0391  0020               	movlb	0	; select bank0
  6200     0392  0821               	movf	?__Umul8_16+1,w
  6201     0393  00C7               	movwf	___flmul@temp+1
  6202     0394  0820               	movf	?__Umul8_16,w
  6203     0395  00C6               	movwf	___flmul@temp
  6204     0396                     l4451:
  6205     0396  0846               	movf	___flmul@temp,w
  6206     0397  00B6               	movwf	??___flmul
  6207     0398  01B7               	clrf	??___flmul+1
  6208     0399  01B8               	clrf	??___flmul+2
  6209     039A  01B9               	clrf	??___flmul+3
  6210     039B  0836               	movf	??___flmul,w
  6211     039C  07BC               	addwf	___flmul@grs,f
  6212     039D  0837               	movf	??___flmul+1,w
  6213     039E  3DBD               	addwfc	___flmul@grs+1,f
  6214     039F  0838               	movf	??___flmul+2,w
  6215     03A0  3DBE               	addwfc	___flmul@grs+2,f
  6216     03A1  0839               	movf	??___flmul+3,w
  6217     03A2  3DBF               	addwfc	___flmul@grs+3,f
  6218     03A3                     l4453:
  6219     03A3  0847               	movf	___flmul@temp+1,w
  6220     03A4  00B6               	movwf	??___flmul
  6221     03A5  01B7               	clrf	??___flmul+1
  6222     03A6  01B8               	clrf	??___flmul+2
  6223     03A7  01B9               	clrf	??___flmul+3
  6224     03A8  0836               	movf	??___flmul,w
  6225     03A9  07C2               	addwf	___flmul@prod,f
  6226     03AA  0837               	movf	??___flmul+1,w
  6227     03AB  3DC3               	addwfc	___flmul@prod+1,f
  6228     03AC  0838               	movf	??___flmul+2,w
  6229     03AD  3DC4               	addwfc	___flmul@prod+2,f
  6230     03AE  0839               	movf	??___flmul+3,w
  6231     03AF  3DC5               	addwfc	___flmul@prod+3,f
  6232     03B0                     l4455:
  6233     03B0  3008               	movlw	8
  6234     03B1                     u3655:
  6235     03B1  35BC               	lslf	___flmul@grs,f
  6236     03B2  0DBD               	rlf	___flmul@grs+1,f
  6237     03B3  0DBE               	rlf	___flmul@grs+2,f
  6238     03B4  0DBF               	rlf	___flmul@grs+3,f
  6239     03B5  0B89               	decfsz	9,f
  6240     03B6  2BB1               	goto	u3655
  6241     03B7                     l4457:
  6242     03B7  082F               	movf	___flmul@b+1,w
  6243     03B8  00A0               	movwf	__Umul8_16@multiplicand
  6244     03B9  0832               	movf	___flmul@a,w
  6245     03BA  3195  2552  3182   	fcall	__Umul8_16
  6246     03BD  0020               	movlb	0	; select bank0
  6247     03BE  0821               	movf	?__Umul8_16+1,w
  6248     03BF  00C7               	movwf	___flmul@temp+1
  6249     03C0  0820               	movf	?__Umul8_16,w
  6250     03C1  00C6               	movwf	___flmul@temp
  6251     03C2                     l4459:
  6252     03C2  0846               	movf	___flmul@temp,w
  6253     03C3  07BC               	addwf	___flmul@grs,f
  6254     03C4  0847               	movf	___flmul@temp+1,w
  6255     03C5  3DBD               	addwfc	___flmul@grs+1,f
  6256     03C6  3000               	movlw	0
  6257     03C7  3DBE               	addwfc	___flmul@grs+2,f
  6258     03C8  3DBF               	addwfc	___flmul@grs+3,f
  6259     03C9                     l4461:
  6260     03C9  082E               	movf	___flmul@b,w
  6261     03CA  00A0               	movwf	__Umul8_16@multiplicand
  6262     03CB  0833               	movf	___flmul@a+1,w
  6263     03CC  3195  2552  3182   	fcall	__Umul8_16
  6264     03CF  0020               	movlb	0	; select bank0
  6265     03D0  0821               	movf	?__Umul8_16+1,w
  6266     03D1  00C7               	movwf	___flmul@temp+1
  6267     03D2  0820               	movf	?__Umul8_16,w
  6268     03D3  00C6               	movwf	___flmul@temp
  6269     03D4                     l4463:
  6270     03D4  0846               	movf	___flmul@temp,w
  6271     03D5  07BC               	addwf	___flmul@grs,f
  6272     03D6  0847               	movf	___flmul@temp+1,w
  6273     03D7  3DBD               	addwfc	___flmul@grs+1,f
  6274     03D8  3000               	movlw	0
  6275     03D9  3DBE               	addwfc	___flmul@grs+2,f
  6276     03DA  3DBF               	addwfc	___flmul@grs+3,f
  6277     03DB                     l4465:
  6278     03DB  3008               	movlw	8
  6279     03DC                     u3665:
  6280     03DC  35BC               	lslf	___flmul@grs,f
  6281     03DD  0DBD               	rlf	___flmul@grs+1,f
  6282     03DE  0DBE               	rlf	___flmul@grs+2,f
  6283     03DF  0DBF               	rlf	___flmul@grs+3,f
  6284     03E0  0B89               	decfsz	9,f
  6285     03E1  2BDC               	goto	u3665
  6286     03E2  082E               	movf	___flmul@b,w
  6287     03E3  00A0               	movwf	__Umul8_16@multiplicand
  6288     03E4  0832               	movf	___flmul@a,w
  6289     03E5  3195  2552  3182   	fcall	__Umul8_16
  6290     03E8  0020               	movlb	0	; select bank0
  6291     03E9  0821               	movf	?__Umul8_16+1,w
  6292     03EA  00C7               	movwf	___flmul@temp+1
  6293     03EB  0820               	movf	?__Umul8_16,w
  6294     03EC  00C6               	movwf	___flmul@temp
  6295     03ED                     l4467:
  6296     03ED  0846               	movf	___flmul@temp,w
  6297     03EE  07BC               	addwf	___flmul@grs,f
  6298     03EF  0847               	movf	___flmul@temp+1,w
  6299     03F0  3DBD               	addwfc	___flmul@grs+1,f
  6300     03F1  3000               	movlw	0
  6301     03F2  3DBE               	addwfc	___flmul@grs+2,f
  6302     03F3  3DBF               	addwfc	___flmul@grs+3,f
  6303     03F4                     l4469:
  6304     03F4  082F               	movf	___flmul@b+1,w
  6305     03F5  00A0               	movwf	__Umul8_16@multiplicand
  6306     03F6  0834               	movf	___flmul@a+2,w
  6307     03F7  3195  2552  3182   	fcall	__Umul8_16
  6308     03FA  0020               	movlb	0	; select bank0
  6309     03FB  0821               	movf	?__Umul8_16+1,w
  6310     03FC  00C7               	movwf	___flmul@temp+1
  6311     03FD  0820               	movf	?__Umul8_16,w
  6312     03FE  00C6               	movwf	___flmul@temp
  6313     03FF  0846               	movf	___flmul@temp,w
  6314     0400  07C2               	addwf	___flmul@prod,f
  6315     0401  0847               	movf	___flmul@temp+1,w
  6316     0402  3DC3               	addwfc	___flmul@prod+1,f
  6317     0403  3000               	movlw	0
  6318     0404  3DC4               	addwfc	___flmul@prod+2,f
  6319     0405  3DC5               	addwfc	___flmul@prod+3,f
  6320     0406                     l4471:
  6321     0406  0830               	movf	___flmul@b+2,w
  6322     0407  00A0               	movwf	__Umul8_16@multiplicand
  6323     0408  0833               	movf	___flmul@a+1,w
  6324     0409  3195  2552  3182   	fcall	__Umul8_16
  6325     040C  0020               	movlb	0	; select bank0
  6326     040D  0821               	movf	?__Umul8_16+1,w
  6327     040E  00C7               	movwf	___flmul@temp+1
  6328     040F  0820               	movf	?__Umul8_16,w
  6329     0410  00C6               	movwf	___flmul@temp
  6330     0411                     l4473:
  6331     0411  0846               	movf	___flmul@temp,w
  6332     0412  07C2               	addwf	___flmul@prod,f
  6333     0413  0847               	movf	___flmul@temp+1,w
  6334     0414  3DC3               	addwfc	___flmul@prod+1,f
  6335     0415  3000               	movlw	0
  6336     0416  3DC4               	addwfc	___flmul@prod+2,f
  6337     0417  3DC5               	addwfc	___flmul@prod+3,f
  6338     0418  0830               	movf	___flmul@b+2,w
  6339     0419  00A0               	movwf	__Umul8_16@multiplicand
  6340     041A  0834               	movf	___flmul@a+2,w
  6341     041B  3195  2552  3182   	fcall	__Umul8_16
  6342     041E  0020               	movlb	0	; select bank0
  6343     041F  0821               	movf	?__Umul8_16+1,w
  6344     0420  00C7               	movwf	___flmul@temp+1
  6345     0421  0820               	movf	?__Umul8_16,w
  6346     0422  00C6               	movwf	___flmul@temp
  6347     0423                     l4475:
  6348     0423  0846               	movf	___flmul@temp,w
  6349     0424  00B6               	movwf	??___flmul
  6350     0425  0847               	movf	___flmul@temp+1,w
  6351     0426  00B7               	movwf	??___flmul+1
  6352     0427  01B8               	clrf	??___flmul+2
  6353     0428  01B9               	clrf	??___flmul+3
  6354     0429  3008               	movlw	8
  6355     042A                     u3675:
  6356     042A  35B6               	lslf	??___flmul,f
  6357     042B  0DB7               	rlf	??___flmul+1,f
  6358     042C  0DB8               	rlf	??___flmul+2,f
  6359     042D  0DB9               	rlf	??___flmul+3,f
  6360     042E                     u3670:
  6361     042E  0B89               	decfsz	9,f
  6362     042F  2C2A               	goto	u3675
  6363     0430  0836               	movf	??___flmul,w
  6364     0431  07C2               	addwf	___flmul@prod,f
  6365     0432  0837               	movf	??___flmul+1,w
  6366     0433  3DC3               	addwfc	___flmul@prod+1,f
  6367     0434  0838               	movf	??___flmul+2,w
  6368     0435  3DC4               	addwfc	___flmul@prod+2,f
  6369     0436  0839               	movf	??___flmul+3,w
  6370     0437  3DC5               	addwfc	___flmul@prod+3,f
  6371     0438                     l4477:
  6372     0438  083C               	movf	___flmul@grs,w
  6373     0439  00B6               	movwf	??___flmul
  6374     043A  083D               	movf	___flmul@grs+1,w
  6375     043B  00B7               	movwf	??___flmul+1
  6376     043C  083E               	movf	___flmul@grs+2,w
  6377     043D  00B8               	movwf	??___flmul+2
  6378     043E  083F               	movf	___flmul@grs+3,w
  6379     043F  00B9               	movwf	??___flmul+3
  6380     0440  3018               	movlw	24
  6381     0441                     u3685:
  6382     0441  36B9               	lsrf	??___flmul+3,f
  6383     0442  0CB8               	rrf	??___flmul+2,f
  6384     0443  0CB7               	rrf	??___flmul+1,f
  6385     0444  0CB6               	rrf	??___flmul,f
  6386     0445                     u3680:
  6387     0445  0B89               	decfsz	9,f
  6388     0446  2C41               	goto	u3685
  6389     0447  0836               	movf	??___flmul,w
  6390     0448  07C2               	addwf	___flmul@prod,f
  6391     0449  0837               	movf	??___flmul+1,w
  6392     044A  3DC3               	addwfc	___flmul@prod+1,f
  6393     044B  0838               	movf	??___flmul+2,w
  6394     044C  3DC4               	addwfc	___flmul@prod+2,f
  6395     044D  0839               	movf	??___flmul+3,w
  6396     044E  3DC5               	addwfc	___flmul@prod+3,f
  6397     044F                     l4479:
  6398     044F  3008               	movlw	8
  6399     0450                     u3695:
  6400     0450  35BC               	lslf	___flmul@grs,f
  6401     0451  0DBD               	rlf	___flmul@grs+1,f
  6402     0452  0DBE               	rlf	___flmul@grs+2,f
  6403     0453  0DBF               	rlf	___flmul@grs+3,f
  6404     0454  0B89               	decfsz	9,f
  6405     0455  2C50               	goto	u3695
  6406     0456                     l4481:
  6407     0456  0841               	movf	___flmul@bexp,w
  6408     0457  0740               	addwf	___flmul@aexp,w
  6409     0458  00B6               	movwf	??___flmul
  6410     0459  01B7               	clrf	??___flmul+1
  6411     045A  0DB7               	rlf	??___flmul+1,f
  6412     045B  0836               	movf	??___flmul,w
  6413     045C  3E82               	addlw	130
  6414     045D  00C6               	movwf	___flmul@temp
  6415     045E  30FF               	movlw	255
  6416     045F  3D37               	addwfc	??___flmul+1,w
  6417     0460  00C7               	movwf	___flmul@temp+1
  6418     0461  2C79               	goto	l4493
  6419     0462                     l4483:
  6420     0462  3001               	movlw	1
  6421     0463                     u3705:
  6422     0463  35C2               	lslf	___flmul@prod,f
  6423     0464  0DC3               	rlf	___flmul@prod+1,f
  6424     0465  0DC4               	rlf	___flmul@prod+2,f
  6425     0466  0DC5               	rlf	___flmul@prod+3,f
  6426     0467  0B89               	decfsz	9,f
  6427     0468  2C63               	goto	u3705
  6428     0469                     l4485:
  6429     0469  1FBF               	btfss	___flmul@grs+3,7
  6430     046A  2C6C               	goto	u3711
  6431     046B  2C6D               	goto	u3710
  6432     046C                     u3711:
  6433     046C  2C6E               	goto	l4489
  6434     046D                     u3710:
  6435     046D                     l4487:
  6436     046D  1442               	bsf	___flmul@prod,0
  6437     046E                     l4489:
  6438     046E  3001               	movlw	1
  6439     046F                     u3725:
  6440     046F  35BC               	lslf	___flmul@grs,f
  6441     0470  0DBD               	rlf	___flmul@grs+1,f
  6442     0471  0DBE               	rlf	___flmul@grs+2,f
  6443     0472  0DBF               	rlf	___flmul@grs+3,f
  6444     0473  0B89               	decfsz	9,f
  6445     0474  2C6F               	goto	u3725
  6446     0475                     l4491:
  6447     0475  30FF               	movlw	255
  6448     0476  07C6               	addwf	___flmul@temp,f
  6449     0477  30FF               	movlw	255
  6450     0478  3DC7               	addwfc	___flmul@temp+1,f
  6451     0479                     l4493:
  6452     0479  1FC4               	btfss	___flmul@prod+2,7
  6453     047A  2C7C               	goto	u3731
  6454     047B  2C7D               	goto	u3730
  6455     047C                     u3731:
  6456     047C  2C62               	goto	l4483
  6457     047D                     u3730:
  6458     047D                     l4495:
  6459     047D  01C0               	clrf	___flmul@aexp
  6460     047E                     l4497:
  6461     047E  1FBF               	btfss	___flmul@grs+3,7
  6462     047F  2C81               	goto	u3741
  6463     0480  2C82               	goto	u3740
  6464     0481                     u3741:
  6465     0481  2C9E               	goto	l4505
  6466     0482                     u3740:
  6467     0482                     l4499:
  6468     0482  30FF               	movlw	255
  6469     0483  053C               	andwf	___flmul@grs,w
  6470     0484  00B6               	movwf	??___flmul
  6471     0485  30FF               	movlw	255
  6472     0486  053D               	andwf	___flmul@grs+1,w
  6473     0487  00B7               	movwf	??___flmul+1
  6474     0488  30FF               	movlw	255
  6475     0489  053E               	andwf	___flmul@grs+2,w
  6476     048A  00B8               	movwf	??___flmul+2
  6477     048B  307F               	movlw	127
  6478     048C  053F               	andwf	___flmul@grs+3,w
  6479     048D  00B9               	movwf	??___flmul+3
  6480     048E  0839               	movf	??___flmul+3,w
  6481     048F  0438               	iorwf	??___flmul+2,w
  6482     0490  0437               	iorwf	??___flmul+1,w
  6483     0491  0436               	iorwf	??___flmul,w
  6484     0492  1903               	skipnz
  6485     0493  2C95               	goto	u3751
  6486     0494  2C96               	goto	u3750
  6487     0495                     u3751:
  6488     0495  2C99               	goto	l1557
  6489     0496                     u3750:
  6490     0496                     l4501:
  6491     0496  01C0               	clrf	___flmul@aexp
  6492     0497  0AC0               	incf	___flmul@aexp,f
  6493     0498  2C9E               	goto	l4505
  6494     0499                     l1557:
  6495     0499  1C42               	btfss	___flmul@prod,0
  6496     049A  2C9C               	goto	u3761
  6497     049B  2C9D               	goto	u3760
  6498     049C                     u3761:
  6499     049C  2C9E               	goto	l4505
  6500     049D                     u3760:
  6501     049D  2C96               	goto	l4501
  6502     049E                     l4505:
  6503     049E  0840               	movf	___flmul@aexp,w
  6504     049F  1903               	btfsc	3,2
  6505     04A0  2CA2               	goto	u3771
  6506     04A1  2CA3               	goto	u3770
  6507     04A2                     u3771:
  6508     04A2  2CCB               	goto	l4515
  6509     04A3                     u3770:
  6510     04A3                     l4507:
  6511     04A3  3001               	movlw	1
  6512     04A4  07C2               	addwf	___flmul@prod,f
  6513     04A5  3000               	movlw	0
  6514     04A6  3DC3               	addwfc	___flmul@prod+1,f
  6515     04A7  3000               	movlw	0
  6516     04A8  3DC4               	addwfc	___flmul@prod+2,f
  6517     04A9  3000               	movlw	0
  6518     04AA  3DC5               	addwfc	___flmul@prod+3,f
  6519     04AB                     l4509:
  6520     04AB  1C45               	btfss	___flmul@prod+3,0
  6521     04AC  2CAE               	goto	u3781
  6522     04AD  2CAF               	goto	u3780
  6523     04AE                     u3781:
  6524     04AE  2CCB               	goto	l4515
  6525     04AF                     u3780:
  6526     04AF                     l4511:
  6527     04AF  0842               	movf	___flmul@prod,w
  6528     04B0  00B6               	movwf	??___flmul
  6529     04B1  0843               	movf	___flmul@prod+1,w
  6530     04B2  00B7               	movwf	??___flmul+1
  6531     04B3  0844               	movf	___flmul@prod+2,w
  6532     04B4  00B8               	movwf	??___flmul+2
  6533     04B5  0845               	movf	___flmul@prod+3,w
  6534     04B6  00B9               	movwf	??___flmul+3
  6535     04B7  3001               	movlw	1
  6536     04B8  00BA               	movwf	??___flmul+4
  6537     04B9                     u3795:
  6538     04B9  37B9               	asrf	??___flmul+3,f
  6539     04BA  0CB8               	rrf	??___flmul+2,f
  6540     04BB  0CB7               	rrf	??___flmul+1,f
  6541     04BC  0CB6               	rrf	??___flmul,f
  6542     04BD                     u3790:
  6543     04BD  0BBA               	decfsz	??___flmul+4,f
  6544     04BE  2CB9               	goto	u3795
  6545     04BF  0839               	movf	??___flmul+3,w
  6546     04C0  00C5               	movwf	___flmul@prod+3
  6547     04C1  0838               	movf	??___flmul+2,w
  6548     04C2  00C4               	movwf	___flmul@prod+2
  6549     04C3  0837               	movf	??___flmul+1,w
  6550     04C4  00C3               	movwf	___flmul@prod+1
  6551     04C5  0836               	movf	??___flmul,w
  6552     04C6  00C2               	movwf	___flmul@prod
  6553     04C7                     l4513:
  6554     04C7  3001               	movlw	1
  6555     04C8  07C6               	addwf	___flmul@temp,f
  6556     04C9  3000               	movlw	0
  6557     04CA  3DC7               	addwfc	___flmul@temp+1,f
  6558     04CB                     l4515:
  6559     04CB  0847               	movf	___flmul@temp+1,w
  6560     04CC  3A80               	xorlw	128
  6561     04CD  00B6               	movwf	??___flmul
  6562     04CE  3080               	movlw	128
  6563     04CF  0236               	subwf	??___flmul,w
  6564     04D0  1D03               	skipz
  6565     04D1  2CD4               	goto	u3805
  6566     04D2  30FF               	movlw	255
  6567     04D3  0246               	subwf	___flmul@temp,w
  6568     04D4                     u3805:
  6569     04D4  1C03               	skipc
  6570     04D5  2CD7               	goto	u3801
  6571     04D6  2CD8               	goto	u3800
  6572     04D7                     u3801:
  6573     04D7  2CE2               	goto	l4519
  6574     04D8                     u3800:
  6575     04D8                     l4517:
  6576     04D8  307F               	movlw	127
  6577     04D9  0020               	movlb	0	; select bank0
  6578     04DA  00C5               	movwf	___flmul@prod+3
  6579     04DB  3080               	movlw	128
  6580     04DC  00C4               	movwf	___flmul@prod+2
  6581     04DD  3000               	movlw	0
  6582     04DE  00C3               	movwf	___flmul@prod+1
  6583     04DF  3000               	movlw	0
  6584     04E0  00C2               	movwf	___flmul@prod
  6585     04E1  2D0D               	goto	l1563
  6586     04E2                     l4519:
  6587     04E2  0020               	movlb	0	; select bank0
  6588     04E3  0847               	movf	___flmul@temp+1,w
  6589     04E4  3A80               	xorlw	128
  6590     04E5  00B6               	movwf	??___flmul
  6591     04E6  3080               	movlw	128
  6592     04E7  0236               	subwf	??___flmul,w
  6593     04E8  1D03               	skipz
  6594     04E9  2CEC               	goto	u3815
  6595     04EA  3001               	movlw	1
  6596     04EB  0246               	subwf	___flmul@temp,w
  6597     04EC                     u3815:
  6598     04EC  1803               	skipnc
  6599     04ED  2CEF               	goto	u3811
  6600     04EE  2CF0               	goto	u3810
  6601     04EF                     u3811:
  6602     04EF  2CFB               	goto	l4525
  6603     04F0                     u3810:
  6604     04F0                     l4521:
  6605     04F0  3000               	movlw	0
  6606     04F1  0020               	movlb	0	; select bank0
  6607     04F2  00C5               	movwf	___flmul@prod+3
  6608     04F3  3000               	movlw	0
  6609     04F4  00C4               	movwf	___flmul@prod+2
  6610     04F5  3000               	movlw	0
  6611     04F6  00C3               	movwf	___flmul@prod+1
  6612     04F7  3000               	movlw	0
  6613     04F8  00C2               	movwf	___flmul@prod
  6614     04F9                     l4523:
  6615     04F9  01BB               	clrf	___flmul@sign
  6616     04FA  2D0D               	goto	l1563
  6617     04FB                     l4525:
  6618     04FB  0020               	movlb	0	; select bank0
  6619     04FC  0846               	movf	___flmul@temp,w
  6620     04FD  00C1               	movwf	___flmul@bexp
  6621     04FE  30FF               	movlw	255
  6622     04FF  05C2               	andwf	___flmul@prod,f
  6623     0500  30FF               	movlw	255
  6624     0501  05C3               	andwf	___flmul@prod+1,f
  6625     0502  307F               	movlw	127
  6626     0503  05C4               	andwf	___flmul@prod+2,f
  6627     0504  3000               	movlw	0
  6628     0505  05C5               	andwf	___flmul@prod+3,f
  6629     0506                     l4527:
  6630     0506  1C41               	btfss	___flmul@bexp,0
  6631     0507  2D09               	goto	u3821
  6632     0508  2D0A               	goto	u3820
  6633     0509                     u3821:
  6634     0509  2D0B               	goto	l4531
  6635     050A                     u3820:
  6636     050A                     l4529:
  6637     050A  17C4               	bsf	___flmul@prod+2,7
  6638     050B                     l4531:
  6639     050B  3641               	lsrf	___flmul@bexp,w
  6640     050C  00C5               	movwf	___flmul@prod+3
  6641     050D                     l1563:
  6642     050D  083B               	movf	___flmul@sign,w
  6643     050E  00B6               	movwf	??___flmul
  6644     050F  0836               	movf	??___flmul,w
  6645     0510  04C5               	iorwf	___flmul@prod+3,f
  6646     0511                     l4533:
  6647     0511  0845               	movf	___flmul@prod+3,w
  6648     0512  00B1               	movwf	?___flmul+3
  6649     0513  0844               	movf	___flmul@prod+2,w
  6650     0514  00B0               	movwf	?___flmul+2
  6651     0515  0843               	movf	___flmul@prod+1,w
  6652     0516  00AF               	movwf	?___flmul+1
  6653     0517  0842               	movf	___flmul@prod,w
  6654     0518  00AE               	movwf	?___flmul
  6655     0519                     l1551:
  6656     0519  0008               	return
  6657     051A                     __end_of___flmul:
  6658                           
  6659                           	psect	text20
  6660     1552                     __ptext20:	
  6661 ;; *************** function __Umul8_16 *****************
  6662 ;; Defined at:
  6663 ;;		line 4 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\Umul8_16.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  multiplier      1    wreg     unsigned char 
  6666 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6669 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6670 ;;  product         2    4[BANK0 ] unsigned int 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2    0[BANK0 ] unsigned int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6680 ;;      Params:         0       2       0       0       0       0       0       0
  6681 ;;      Locals:         0       5       0       0       0       0       0       0
  6682 ;;      Temps:          0       2       0       0       0       0       0       0
  6683 ;;      Totals:         0       9       0       0       0       0       0       0
  6684 ;;Total ram usage:        9 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 7
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		___flmul
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694     1552                     __Umul8_16:	
  6695                           ;psect for function __Umul8_16
  6696                           
  6697                           
  6698                           ;incstack = 0
  6699                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6700                           ;__Umul8_16@multiplier stored from wreg
  6701     1552  0020               	movlb	0	; select bank0
  6702     1553  00A8               	movwf	__Umul8_16@multiplier
  6703     1554                     l3821:
  6704     1554  01A4               	clrf	__Umul8_16@product
  6705     1555  01A5               	clrf	__Umul8_16@product+1
  6706     1556                     l3823:
  6707     1556  0820               	movf	__Umul8_16@multiplicand,w
  6708     1557  00A2               	movwf	??__Umul8_16
  6709     1558  01A3               	clrf	??__Umul8_16+1
  6710     1559  0822               	movf	??__Umul8_16,w
  6711     155A  00A6               	movwf	__Umul8_16@word_mpld
  6712     155B  0823               	movf	??__Umul8_16+1,w
  6713     155C  00A7               	movwf	__Umul8_16@word_mpld+1
  6714     155D                     l3825:
  6715     155D  1C28               	btfss	__Umul8_16@multiplier,0
  6716     155E  2D60               	goto	u2601
  6717     155F  2D61               	goto	u2600
  6718     1560                     u2601:
  6719     1560  2D65               	goto	l1570
  6720     1561                     u2600:
  6721     1561                     l3827:
  6722     1561  0826               	movf	__Umul8_16@word_mpld,w
  6723     1562  07A4               	addwf	__Umul8_16@product,f
  6724     1563  0827               	movf	__Umul8_16@word_mpld+1,w
  6725     1564  3DA5               	addwfc	__Umul8_16@product+1,f
  6726     1565                     l1570:
  6727     1565  3001               	movlw	1
  6728     1566                     u2615:
  6729     1566  35A6               	lslf	__Umul8_16@word_mpld,f
  6730     1567  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6731     1568  0B89               	decfsz	9,f
  6732     1569  2D66               	goto	u2615
  6733     156A  1003               	clrc
  6734     156B  0CA8               	rrf	__Umul8_16@multiplier,f
  6735     156C                     l3829:
  6736     156C  0828               	movf	__Umul8_16@multiplier,w
  6737     156D  1D03               	btfss	3,2
  6738     156E  2D70               	goto	u2621
  6739     156F  2D71               	goto	u2620
  6740     1570                     u2621:
  6741     1570  2D5D               	goto	l3825
  6742     1571                     u2620:
  6743     1571                     l3831:
  6744     1571  0825               	movf	__Umul8_16@product+1,w
  6745     1572  00A1               	movwf	?__Umul8_16+1
  6746     1573  0824               	movf	__Umul8_16@product,w
  6747     1574  00A0               	movwf	?__Umul8_16
  6748     1575                     l1572:
  6749     1575  0008               	return
  6750     1576                     __end_of__Umul8_16:
  6751                           
  6752                           	psect	text21
  6753     0DFC                     __ptext21:	
  6754 ;; *************** function ___fldiv *****************
  6755 ;; Defined at:
  6756 ;;		line 8 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcdiv.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  a               4   60[BANK0 ] unsigned int 
  6759 ;;  b               4   64[BANK0 ] unsigned int 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  grs             4    7[BANK1 ] unsigned long 
  6762 ;;  rem             4    0[BANK1 ] unsigned long 
  6763 ;;  new_exp         2    5[BANK1 ] int 
  6764 ;;  aexp            1   12[BANK1 ] unsigned char 
  6765 ;;  bexp            1   11[BANK1 ] unsigned char 
  6766 ;;  sign            1    4[BANK1 ] unsigned char 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  4   60[BANK0 ] unsigned char 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6776 ;;      Params:         0       8       0       0       0       0       0       0
  6777 ;;      Locals:         0       0      13       0       0       0       0       0
  6778 ;;      Temps:          0       5       0       0       0       0       0       0
  6779 ;;      Totals:         0      13      13       0       0       0       0       0
  6780 ;;Total ram usage:       26 bytes
  6781 ;; Hardware stack levels used: 1
  6782 ;; Hardware stack levels required when called: 7
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_ReadData
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790     0DFC                     ___fldiv:	
  6791                           ;psect for function ___fldiv
  6792                           
  6793     0DFC                     l4257:	
  6794                           ;incstack = 0
  6795                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6796                           
  6797     0DFC  0020               	movlb	0	; select bank0
  6798     0DFD  0863               	movf	___fldiv@b+3,w
  6799     0DFE  3980               	andlw	128
  6800     0DFF  0021               	movlb	1	; select bank1
  6801     0E00  00A4               	movwf	___fldiv@sign^(0+128)
  6802     0E01                     l4259:
  6803     0E01  0020               	movlb	0	; select bank0
  6804     0E02  3563               	lslf	___fldiv@b+3,w
  6805     0E03  0021               	movlb	1	; select bank1
  6806     0E04  00AB               	movwf	___fldiv@bexp^(0+128)
  6807     0E05                     l4261:
  6808     0E05  0020               	movlb	0	; select bank0
  6809     0E06  1FE2               	btfss	___fldiv@b+2,7
  6810     0E07  2E09               	goto	u3281
  6811     0E08  2E0A               	goto	u3280
  6812     0E09                     u3281:
  6813     0E09  2E0C               	goto	l4265
  6814     0E0A                     u3280:
  6815     0E0A                     l4263:
  6816     0E0A  0021               	movlb	1	; select bank1
  6817     0E0B  142B               	bsf	___fldiv@bexp^(0+128),0
  6818     0E0C                     l4265:
  6819     0E0C  0021               	movlb	1	; select bank1
  6820     0E0D  082B               	movf	___fldiv@bexp^(0+128),w
  6821     0E0E  1903               	btfsc	3,2
  6822     0E0F  2E11               	goto	u3291
  6823     0E10  2E12               	goto	u3290
  6824     0E11                     u3291:
  6825     0E11  2E24               	goto	l4275
  6826     0E12                     u3290:
  6827     0E12                     l4267:
  6828     0E12  0A2B               	incf	___fldiv@bexp^(0+128),w
  6829     0E13  1D03               	btfss	3,2
  6830     0E14  2E16               	goto	u3301
  6831     0E15  2E17               	goto	u3300
  6832     0E16                     u3301:
  6833     0E16  2E20               	goto	l4271
  6834     0E17                     u3300:
  6835     0E17                     l4269:
  6836     0E17  3000               	movlw	0
  6837     0E18  0020               	movlb	0	; select bank0
  6838     0E19  00E3               	movwf	___fldiv@b+3
  6839     0E1A  3000               	movlw	0
  6840     0E1B  00E2               	movwf	___fldiv@b+2
  6841     0E1C  3000               	movlw	0
  6842     0E1D  00E1               	movwf	___fldiv@b+1
  6843     0E1E  3000               	movlw	0
  6844     0E1F  00E0               	movwf	___fldiv@b
  6845     0E20                     l4271:
  6846     0E20  0020               	movlb	0	; select bank0
  6847     0E21  17E2               	bsf	___fldiv@b+2,7
  6848     0E22                     l4273:
  6849     0E22  01E3               	clrf	___fldiv@b+3
  6850     0E23  2E2D               	goto	l4277
  6851     0E24                     l4275:
  6852     0E24  3000               	movlw	0
  6853     0E25  0020               	movlb	0	; select bank0
  6854     0E26  00E3               	movwf	___fldiv@b+3
  6855     0E27  3000               	movlw	0
  6856     0E28  00E2               	movwf	___fldiv@b+2
  6857     0E29  3000               	movlw	0
  6858     0E2A  00E1               	movwf	___fldiv@b+1
  6859     0E2B  3000               	movlw	0
  6860     0E2C  00E0               	movwf	___fldiv@b
  6861     0E2D                     l4277:
  6862     0E2D  085F               	movf	___fldiv@a+3,w
  6863     0E2E  3980               	andlw	128
  6864     0E2F  00E4               	movwf	??___fldiv
  6865     0E30  0864               	movf	??___fldiv,w
  6866     0E31  0021               	movlb	1	; select bank1
  6867     0E32  06A4               	xorwf	___fldiv@sign^(0+128),f
  6868     0E33                     l4279:
  6869     0E33  0020               	movlb	0	; select bank0
  6870     0E34  355F               	lslf	___fldiv@a+3,w
  6871     0E35  0021               	movlb	1	; select bank1
  6872     0E36  00AC               	movwf	___fldiv@aexp^(0+128)
  6873     0E37                     l4281:
  6874     0E37  0020               	movlb	0	; select bank0
  6875     0E38  1FDE               	btfss	___fldiv@a+2,7
  6876     0E39  2E3B               	goto	u3311
  6877     0E3A  2E3C               	goto	u3310
  6878     0E3B                     u3311:
  6879     0E3B  2E3E               	goto	l4285
  6880     0E3C                     u3310:
  6881     0E3C                     l4283:
  6882     0E3C  0021               	movlb	1	; select bank1
  6883     0E3D  142C               	bsf	___fldiv@aexp^(0+128),0
  6884     0E3E                     l4285:
  6885     0E3E  0021               	movlb	1	; select bank1
  6886     0E3F  082C               	movf	___fldiv@aexp^(0+128),w
  6887     0E40  1903               	btfsc	3,2
  6888     0E41  2E43               	goto	u3321
  6889     0E42  2E44               	goto	u3320
  6890     0E43                     u3321:
  6891     0E43  2E56               	goto	l4295
  6892     0E44                     u3320:
  6893     0E44                     l4287:
  6894     0E44  0A2C               	incf	___fldiv@aexp^(0+128),w
  6895     0E45  1D03               	btfss	3,2
  6896     0E46  2E48               	goto	u3331
  6897     0E47  2E49               	goto	u3330
  6898     0E48                     u3331:
  6899     0E48  2E52               	goto	l4291
  6900     0E49                     u3330:
  6901     0E49                     l4289:
  6902     0E49  3000               	movlw	0
  6903     0E4A  0020               	movlb	0	; select bank0
  6904     0E4B  00DF               	movwf	___fldiv@a+3
  6905     0E4C  3000               	movlw	0
  6906     0E4D  00DE               	movwf	___fldiv@a+2
  6907     0E4E  3000               	movlw	0
  6908     0E4F  00DD               	movwf	___fldiv@a+1
  6909     0E50  3000               	movlw	0
  6910     0E51  00DC               	movwf	___fldiv@a
  6911     0E52                     l4291:
  6912     0E52  0020               	movlb	0	; select bank0
  6913     0E53  17DE               	bsf	___fldiv@a+2,7
  6914     0E54                     l4293:
  6915     0E54  01DF               	clrf	___fldiv@a+3
  6916     0E55  2E5F               	goto	l1511
  6917     0E56                     l4295:
  6918     0E56  3000               	movlw	0
  6919     0E57  0020               	movlb	0	; select bank0
  6920     0E58  00DF               	movwf	___fldiv@a+3
  6921     0E59  3000               	movlw	0
  6922     0E5A  00DE               	movwf	___fldiv@a+2
  6923     0E5B  3000               	movlw	0
  6924     0E5C  00DD               	movwf	___fldiv@a+1
  6925     0E5D  3000               	movlw	0
  6926     0E5E  00DC               	movwf	___fldiv@a
  6927     0E5F                     l1511:
  6928     0E5F  085F               	movf	___fldiv@a+3,w
  6929     0E60  045E               	iorwf	___fldiv@a+2,w
  6930     0E61  045D               	iorwf	___fldiv@a+1,w
  6931     0E62  045C               	iorwf	___fldiv@a,w
  6932     0E63  1D03               	skipz
  6933     0E64  2E66               	goto	u3341
  6934     0E65  2E67               	goto	u3340
  6935     0E66                     u3341:
  6936     0E66  2E82               	goto	l4305
  6937     0E67                     u3340:
  6938     0E67                     l4297:
  6939     0E67  3000               	movlw	0
  6940     0E68  00E3               	movwf	___fldiv@b+3
  6941     0E69  3000               	movlw	0
  6942     0E6A  00E2               	movwf	___fldiv@b+2
  6943     0E6B  3000               	movlw	0
  6944     0E6C  00E1               	movwf	___fldiv@b+1
  6945     0E6D  3000               	movlw	0
  6946     0E6E  00E0               	movwf	___fldiv@b
  6947     0E6F  3080               	movlw	128
  6948     0E70  04E2               	iorwf	___fldiv@b+2,f
  6949     0E71  307F               	movlw	127
  6950     0E72  04E3               	iorwf	___fldiv@b+3,f
  6951     0E73                     l4299:
  6952     0E73  0021               	movlb	1	; select bank1
  6953     0E74  0824               	movf	___fldiv@sign^(0+128),w
  6954     0E75  0020               	movlb	0	; select bank0
  6955     0E76  00E4               	movwf	??___fldiv
  6956     0E77  0864               	movf	??___fldiv,w
  6957     0E78  04E3               	iorwf	___fldiv@b+3,f
  6958     0E79                     l4301:
  6959     0E79  0863               	movf	___fldiv@b+3,w
  6960     0E7A  00DF               	movwf	?___fldiv+3
  6961     0E7B  0862               	movf	___fldiv@b+2,w
  6962     0E7C  00DE               	movwf	?___fldiv+2
  6963     0E7D  0861               	movf	___fldiv@b+1,w
  6964     0E7E  00DD               	movwf	?___fldiv+1
  6965     0E7F  0860               	movf	___fldiv@b,w
  6966     0E80  00DC               	movwf	?___fldiv
  6967     0E81  2FFF               	goto	l1513
  6968     0E82                     l4305:
  6969     0E82  0021               	movlb	1	; select bank1
  6970     0E83  082B               	movf	___fldiv@bexp^(0+128),w
  6971     0E84  1D03               	btfss	3,2
  6972     0E85  2E87               	goto	u3351
  6973     0E86  2E88               	goto	u3350
  6974     0E87                     u3351:
  6975     0E87  2E92               	goto	l4311
  6976     0E88                     u3350:
  6977     0E88                     l4307:
  6978     0E88  3000               	movlw	0
  6979     0E89  0020               	movlb	0	; select bank0
  6980     0E8A  00DF               	movwf	?___fldiv+3
  6981     0E8B  3000               	movlw	0
  6982     0E8C  00DE               	movwf	?___fldiv+2
  6983     0E8D  3000               	movlw	0
  6984     0E8E  00DD               	movwf	?___fldiv+1
  6985     0E8F  3000               	movlw	0
  6986     0E90  00DC               	movwf	?___fldiv
  6987     0E91  2FFF               	goto	l1513
  6988     0E92                     l4311:
  6989     0E92  082B               	movf	___fldiv@bexp^(0+128),w
  6990     0E93  0020               	movlb	0	; select bank0
  6991     0E94  00E4               	movwf	??___fldiv
  6992     0E95  01E5               	clrf	??___fldiv+1
  6993     0E96  0865               	movf	??___fldiv+1,w
  6994     0E97  00E7               	movwf	??___fldiv+3
  6995     0E98  0021               	movlb	1	; select bank1
  6996     0E99  082C               	movf	___fldiv@aexp^(0+128),w
  6997     0E9A  0020               	movlb	0	; select bank0
  6998     0E9B  0264               	subwf	??___fldiv,w
  6999     0E9C  00E6               	movwf	??___fldiv+2
  7000     0E9D  1C03               	skipc
  7001     0E9E  03E7               	decf	??___fldiv+3,f
  7002     0E9F  0866               	movf	??___fldiv+2,w
  7003     0EA0  3E7F               	addlw	127
  7004     0EA1  0021               	movlb	1	; select bank1
  7005     0EA2  00A5               	movwf	___fldiv@new_exp^(0+128)
  7006     0EA3  3000               	movlw	0
  7007     0EA4  0020               	movlb	0	; select bank0
  7008     0EA5  3D67               	addwfc	??___fldiv+3,w
  7009     0EA6  0021               	movlb	1	; select bank1
  7010     0EA7  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  7011     0EA8                     l4313:
  7012     0EA8  0020               	movlb	0	; select bank0
  7013     0EA9  0863               	movf	___fldiv@b+3,w
  7014     0EAA  0021               	movlb	1	; select bank1
  7015     0EAB  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  7016     0EAC  0020               	movlb	0	; select bank0
  7017     0EAD  0862               	movf	___fldiv@b+2,w
  7018     0EAE  0021               	movlb	1	; select bank1
  7019     0EAF  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  7020     0EB0  0020               	movlb	0	; select bank0
  7021     0EB1  0861               	movf	___fldiv@b+1,w
  7022     0EB2  0021               	movlb	1	; select bank1
  7023     0EB3  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  7024     0EB4  0020               	movlb	0	; select bank0
  7025     0EB5  0860               	movf	___fldiv@b,w
  7026     0EB6  0021               	movlb	1	; select bank1
  7027     0EB7  00A0               	movwf	___fldiv@rem^(0+128)
  7028     0EB8                     l4315:
  7029     0EB8  3000               	movlw	0
  7030     0EB9  0020               	movlb	0	; select bank0
  7031     0EBA  00E3               	movwf	___fldiv@b+3
  7032     0EBB  3000               	movlw	0
  7033     0EBC  00E2               	movwf	___fldiv@b+2
  7034     0EBD  3000               	movlw	0
  7035     0EBE  00E1               	movwf	___fldiv@b+1
  7036     0EBF  3000               	movlw	0
  7037     0EC0  00E0               	movwf	___fldiv@b
  7038     0EC1                     l4317:
  7039     0EC1  3000               	movlw	0
  7040     0EC2  0021               	movlb	1	; select bank1
  7041     0EC3  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  7042     0EC4  3000               	movlw	0
  7043     0EC5  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  7044     0EC6  3000               	movlw	0
  7045     0EC7  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  7046     0EC8  3000               	movlw	0
  7047     0EC9  00A7               	movwf	___fldiv@grs^(0+128)
  7048     0ECA                     l4319:
  7049     0ECA  01AC               	clrf	___fldiv@aexp^(0+128)
  7050     0ECB  2F20               	goto	l4339
  7051     0ECC                     l4321:
  7052     0ECC  082C               	movf	___fldiv@aexp^(0+128),w
  7053     0ECD  1903               	btfsc	3,2
  7054     0ECE  2ED0               	goto	u3361
  7055     0ECF  2ED1               	goto	u3360
  7056     0ED0                     u3361:
  7057     0ED0  2EEF               	goto	l4331
  7058     0ED1                     u3360:
  7059     0ED1                     l4323:
  7060     0ED1  3001               	movlw	1
  7061     0ED2                     u3375:
  7062     0ED2  35A0               	lslf	___fldiv@rem^(0+128),f
  7063     0ED3  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  7064     0ED4  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  7065     0ED5  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  7066     0ED6  0B89               	decfsz	9,f
  7067     0ED7  2ED2               	goto	u3375
  7068     0ED8  3001               	movlw	1
  7069     0ED9                     u3385:
  7070     0ED9  0020               	movlb	0	; select bank0
  7071     0EDA  35E0               	lslf	___fldiv@b,f
  7072     0EDB  0DE1               	rlf	___fldiv@b+1,f
  7073     0EDC  0DE2               	rlf	___fldiv@b+2,f
  7074     0EDD  0DE3               	rlf	___fldiv@b+3,f
  7075     0EDE  0B89               	decfsz	9,f
  7076     0EDF  2ED9               	goto	u3385
  7077     0EE0                     l4325:
  7078     0EE0  0021               	movlb	1	; select bank1
  7079     0EE1  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7080     0EE2  2EE4               	goto	u3391
  7081     0EE3  2EE5               	goto	u3390
  7082     0EE4                     u3391:
  7083     0EE4  2EE7               	goto	l4329
  7084     0EE5                     u3390:
  7085     0EE5                     l4327:
  7086     0EE5  0020               	movlb	0	; select bank0
  7087     0EE6  1460               	bsf	___fldiv@b,0
  7088     0EE7                     l4329:
  7089     0EE7  3001               	movlw	1
  7090     0EE8                     u3405:
  7091     0EE8  0021               	movlb	1	; select bank1
  7092     0EE9  35A7               	lslf	___fldiv@grs^(0+128),f
  7093     0EEA  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7094     0EEB  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7095     0EEC  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7096     0EED  0B89               	decfsz	9,f
  7097     0EEE  2EE8               	goto	u3405
  7098     0EEF                     l4331:
  7099     0EEF  0020               	movlb	0	; select bank0
  7100     0EF0  085F               	movf	___fldiv@a+3,w
  7101     0EF1  0021               	movlb	1	; select bank1
  7102     0EF2  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  7103     0EF3  1D03               	skipz
  7104     0EF4  2F05               	goto	u3415
  7105     0EF5  0020               	movlb	0	; select bank0
  7106     0EF6  085E               	movf	___fldiv@a+2,w
  7107     0EF7  0021               	movlb	1	; select bank1
  7108     0EF8  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  7109     0EF9  1D03               	skipz
  7110     0EFA  2F05               	goto	u3415
  7111     0EFB  0020               	movlb	0	; select bank0
  7112     0EFC  085D               	movf	___fldiv@a+1,w
  7113     0EFD  0021               	movlb	1	; select bank1
  7114     0EFE  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  7115     0EFF  1D03               	skipz
  7116     0F00  2F05               	goto	u3415
  7117     0F01  0020               	movlb	0	; select bank0
  7118     0F02  085C               	movf	___fldiv@a,w
  7119     0F03  0021               	movlb	1	; select bank1
  7120     0F04  0220               	subwf	___fldiv@rem^(0+128),w
  7121     0F05                     u3415:
  7122     0F05  1C03               	skipc
  7123     0F06  2F08               	goto	u3411
  7124     0F07  2F09               	goto	u3410
  7125     0F08                     u3411:
  7126     0F08  2F1A               	goto	l4337
  7127     0F09                     u3410:
  7128     0F09                     l4333:
  7129     0F09  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  7130     0F0A                     l4335:
  7131     0F0A  0020               	movlb	0	; select bank0
  7132     0F0B  085C               	movf	___fldiv@a,w
  7133     0F0C  0021               	movlb	1	; select bank1
  7134     0F0D  02A0               	subwf	___fldiv@rem^(0+128),f
  7135     0F0E  0020               	movlb	0	; select bank0
  7136     0F0F  085D               	movf	___fldiv@a+1,w
  7137     0F10  0021               	movlb	1	; select bank1
  7138     0F11  3BA1               	subwfb	(___fldiv@rem+1)^(0+128),f
  7139     0F12  0020               	movlb	0	; select bank0
  7140     0F13  085E               	movf	___fldiv@a+2,w
  7141     0F14  0021               	movlb	1	; select bank1
  7142     0F15  3BA2               	subwfb	(___fldiv@rem+2)^(0+128),f
  7143     0F16  0020               	movlb	0	; select bank0
  7144     0F17  085F               	movf	___fldiv@a+3,w
  7145     0F18  0021               	movlb	1	; select bank1
  7146     0F19  3BA3               	subwfb	(___fldiv@rem+3)^(0+128),f
  7147     0F1A                     l4337:
  7148     0F1A  3001               	movlw	1
  7149     0F1B  0020               	movlb	0	; select bank0
  7150     0F1C  00E4               	movwf	??___fldiv
  7151     0F1D  0864               	movf	??___fldiv,w
  7152     0F1E  0021               	movlb	1	; select bank1
  7153     0F1F  07AC               	addwf	___fldiv@aexp^(0+128),f
  7154     0F20                     l4339:
  7155     0F20  301A               	movlw	26
  7156     0F21  022C               	subwf	___fldiv@aexp^(0+128),w
  7157     0F22  1C03               	skipc
  7158     0F23  2F25               	goto	u3421
  7159     0F24  2F26               	goto	u3420
  7160     0F25                     u3421:
  7161     0F25  2ECC               	goto	l4321
  7162     0F26                     u3420:
  7163     0F26                     l4341:
  7164     0F26  0823               	movf	(___fldiv@rem+3)^(0+128),w
  7165     0F27  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  7166     0F28  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  7167     0F29  0420               	iorwf	___fldiv@rem^(0+128),w
  7168     0F2A  1903               	skipnz
  7169     0F2B  2F2D               	goto	u3431
  7170     0F2C  2F2E               	goto	u3430
  7171     0F2D                     u3431:
  7172     0F2D  2F4A               	goto	l4355
  7173     0F2E                     u3430:
  7174     0F2E                     l4343:
  7175     0F2E  1427               	bsf	___fldiv@grs^(0+128),0
  7176     0F2F  2F4A               	goto	l4355
  7177     0F30                     l4345:
  7178     0F30  3001               	movlw	1
  7179     0F31                     u3445:
  7180     0F31  35E0               	lslf	___fldiv@b,f
  7181     0F32  0DE1               	rlf	___fldiv@b+1,f
  7182     0F33  0DE2               	rlf	___fldiv@b+2,f
  7183     0F34  0DE3               	rlf	___fldiv@b+3,f
  7184     0F35  0B89               	decfsz	9,f
  7185     0F36  2F31               	goto	u3445
  7186     0F37                     l4347:
  7187     0F37  0021               	movlb	1	; select bank1
  7188     0F38  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7189     0F39  2F3B               	goto	u3451
  7190     0F3A  2F3C               	goto	u3450
  7191     0F3B                     u3451:
  7192     0F3B  2F3E               	goto	l4351
  7193     0F3C                     u3450:
  7194     0F3C                     l4349:
  7195     0F3C  0020               	movlb	0	; select bank0
  7196     0F3D  1460               	bsf	___fldiv@b,0
  7197     0F3E                     l4351:
  7198     0F3E  3001               	movlw	1
  7199     0F3F                     u3465:
  7200     0F3F  0021               	movlb	1	; select bank1
  7201     0F40  35A7               	lslf	___fldiv@grs^(0+128),f
  7202     0F41  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7203     0F42  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7204     0F43  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7205     0F44  0B89               	decfsz	9,f
  7206     0F45  2F3F               	goto	u3465
  7207     0F46                     l4353:
  7208     0F46  30FF               	movlw	255
  7209     0F47  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7210     0F48  30FF               	movlw	255
  7211     0F49  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7212     0F4A                     l4355:
  7213     0F4A  0020               	movlb	0	; select bank0
  7214     0F4B  1FE2               	btfss	___fldiv@b+2,7
  7215     0F4C  2F4E               	goto	u3471
  7216     0F4D  2F4F               	goto	u3470
  7217     0F4E                     u3471:
  7218     0F4E  2F30               	goto	l4345
  7219     0F4F                     u3470:
  7220     0F4F                     l4357:
  7221     0F4F  0021               	movlb	1	; select bank1
  7222     0F50  01AC               	clrf	___fldiv@aexp^(0+128)
  7223     0F51                     l4359:
  7224     0F51  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7225     0F52  2F54               	goto	u3481
  7226     0F53  2F55               	goto	u3480
  7227     0F54                     u3481:
  7228     0F54  2F79               	goto	l4367
  7229     0F55                     u3480:
  7230     0F55                     l4361:
  7231     0F55  30FF               	movlw	255
  7232     0F56  0527               	andwf	___fldiv@grs^(0+128),w
  7233     0F57  0020               	movlb	0	; select bank0
  7234     0F58  00E4               	movwf	??___fldiv
  7235     0F59  30FF               	movlw	255
  7236     0F5A  0021               	movlb	1	; select bank1
  7237     0F5B  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  7238     0F5C  0020               	movlb	0	; select bank0
  7239     0F5D  00E5               	movwf	??___fldiv+1
  7240     0F5E  30FF               	movlw	255
  7241     0F5F  0021               	movlb	1	; select bank1
  7242     0F60  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  7243     0F61  0020               	movlb	0	; select bank0
  7244     0F62  00E6               	movwf	??___fldiv+2
  7245     0F63  307F               	movlw	127
  7246     0F64  0021               	movlb	1	; select bank1
  7247     0F65  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  7248     0F66  0020               	movlb	0	; select bank0
  7249     0F67  00E7               	movwf	??___fldiv+3
  7250     0F68  0867               	movf	??___fldiv+3,w
  7251     0F69  0466               	iorwf	??___fldiv+2,w
  7252     0F6A  0465               	iorwf	??___fldiv+1,w
  7253     0F6B  0464               	iorwf	??___fldiv,w
  7254     0F6C  1903               	skipnz
  7255     0F6D  2F6F               	goto	u3491
  7256     0F6E  2F70               	goto	u3490
  7257     0F6F                     u3491:
  7258     0F6F  2F74               	goto	l1527
  7259     0F70                     u3490:
  7260     0F70                     l4363:
  7261     0F70  0021               	movlb	1	; select bank1
  7262     0F71  01AC               	clrf	___fldiv@aexp^(0+128)
  7263     0F72  0AAC               	incf	___fldiv@aexp^(0+128),f
  7264     0F73  2F79               	goto	l4367
  7265     0F74                     l1527:
  7266     0F74  1C60               	btfss	___fldiv@b,0
  7267     0F75  2F77               	goto	u3501
  7268     0F76  2F78               	goto	u3500
  7269     0F77                     u3501:
  7270     0F77  2F79               	goto	l4367
  7271     0F78                     u3500:
  7272     0F78  2F70               	goto	l4363
  7273     0F79                     l4367:
  7274     0F79  0021               	movlb	1	; select bank1
  7275     0F7A  082C               	movf	___fldiv@aexp^(0+128),w
  7276     0F7B  1903               	btfsc	3,2
  7277     0F7C  2F7E               	goto	u3511
  7278     0F7D  2F7F               	goto	u3510
  7279     0F7E                     u3511:
  7280     0F7E  2FA9               	goto	l4377
  7281     0F7F                     u3510:
  7282     0F7F                     l4369:
  7283     0F7F  3001               	movlw	1
  7284     0F80  0020               	movlb	0	; select bank0
  7285     0F81  07E0               	addwf	___fldiv@b,f
  7286     0F82  3000               	movlw	0
  7287     0F83  3DE1               	addwfc	___fldiv@b+1,f
  7288     0F84  3000               	movlw	0
  7289     0F85  3DE2               	addwfc	___fldiv@b+2,f
  7290     0F86  3000               	movlw	0
  7291     0F87  3DE3               	addwfc	___fldiv@b+3,f
  7292     0F88                     l4371:
  7293     0F88  1C63               	btfss	___fldiv@b+3,0
  7294     0F89  2F8B               	goto	u3521
  7295     0F8A  2F8C               	goto	u3520
  7296     0F8B                     u3521:
  7297     0F8B  2FA9               	goto	l4377
  7298     0F8C                     u3520:
  7299     0F8C                     l4373:
  7300     0F8C  0860               	movf	___fldiv@b,w
  7301     0F8D  00E4               	movwf	??___fldiv
  7302     0F8E  0861               	movf	___fldiv@b+1,w
  7303     0F8F  00E5               	movwf	??___fldiv+1
  7304     0F90  0862               	movf	___fldiv@b+2,w
  7305     0F91  00E6               	movwf	??___fldiv+2
  7306     0F92  0863               	movf	___fldiv@b+3,w
  7307     0F93  00E7               	movwf	??___fldiv+3
  7308     0F94  3001               	movlw	1
  7309     0F95  00E8               	movwf	??___fldiv+4
  7310     0F96                     u3535:
  7311     0F96  37E7               	asrf	??___fldiv+3,f
  7312     0F97  0CE6               	rrf	??___fldiv+2,f
  7313     0F98  0CE5               	rrf	??___fldiv+1,f
  7314     0F99  0CE4               	rrf	??___fldiv,f
  7315     0F9A                     u3530:
  7316     0F9A  0BE8               	decfsz	??___fldiv+4,f
  7317     0F9B  2F96               	goto	u3535
  7318     0F9C  0867               	movf	??___fldiv+3,w
  7319     0F9D  00E3               	movwf	___fldiv@b+3
  7320     0F9E  0866               	movf	??___fldiv+2,w
  7321     0F9F  00E2               	movwf	___fldiv@b+2
  7322     0FA0  0865               	movf	??___fldiv+1,w
  7323     0FA1  00E1               	movwf	___fldiv@b+1
  7324     0FA2  0864               	movf	??___fldiv,w
  7325     0FA3  00E0               	movwf	___fldiv@b
  7326     0FA4                     l4375:
  7327     0FA4  3001               	movlw	1
  7328     0FA5  0021               	movlb	1	; select bank1
  7329     0FA6  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7330     0FA7  3000               	movlw	0
  7331     0FA8  3DA6               	addwfc	(___fldiv@new_exp+1)^(0+128),f
  7332     0FA9                     l4377:
  7333     0FA9  0021               	movlb	1	; select bank1
  7334     0FAA  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7335     0FAB  3A80               	xorlw	128
  7336     0FAC  0020               	movlb	0	; select bank0
  7337     0FAD  00E4               	movwf	??___fldiv
  7338     0FAE  3080               	movlw	128
  7339     0FAF  0264               	subwf	??___fldiv,w
  7340     0FB0  1D03               	skipz
  7341     0FB1  2FB5               	goto	u3545
  7342     0FB2  30FF               	movlw	255
  7343     0FB3  0021               	movlb	1	; select bank1
  7344     0FB4  0225               	subwf	___fldiv@new_exp^(0+128),w
  7345     0FB5                     u3545:
  7346     0FB5  1C03               	skipc
  7347     0FB6  2FB8               	goto	u3541
  7348     0FB7  2FB9               	goto	u3540
  7349     0FB8                     u3541:
  7350     0FB8  2FC7               	goto	l1532
  7351     0FB9                     u3540:
  7352     0FB9                     l4379:
  7353     0FB9  30FF               	movlw	255
  7354     0FBA  0021               	movlb	1	; select bank1
  7355     0FBB  00A5               	movwf	___fldiv@new_exp^(0+128)
  7356     0FBC  3000               	movlw	0
  7357     0FBD  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  7358     0FBE  3000               	movlw	0
  7359     0FBF  0020               	movlb	0	; select bank0
  7360     0FC0  00E3               	movwf	___fldiv@b+3
  7361     0FC1  3000               	movlw	0
  7362     0FC2  00E2               	movwf	___fldiv@b+2
  7363     0FC3  3000               	movlw	0
  7364     0FC4  00E1               	movwf	___fldiv@b+1
  7365     0FC5  3000               	movlw	0
  7366     0FC6  00E0               	movwf	___fldiv@b
  7367     0FC7                     l1532:
  7368     0FC7  0021               	movlb	1	; select bank1
  7369     0FC8  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  7370     0FC9  3A80               	xorlw	128
  7371     0FCA  0020               	movlb	0	; select bank0
  7372     0FCB  00E4               	movwf	??___fldiv
  7373     0FCC  3080               	movlw	128
  7374     0FCD  0264               	subwf	??___fldiv,w
  7375     0FCE  1D03               	skipz
  7376     0FCF  2FD3               	goto	u3555
  7377     0FD0  3001               	movlw	1
  7378     0FD1  0021               	movlb	1	; select bank1
  7379     0FD2  0225               	subwf	___fldiv@new_exp^(0+128),w
  7380     0FD3                     u3555:
  7381     0FD3  1803               	skipnc
  7382     0FD4  2FD6               	goto	u3551
  7383     0FD5  2FD7               	goto	u3550
  7384     0FD6                     u3551:
  7385     0FD6  2FE5               	goto	l1533
  7386     0FD7                     u3550:
  7387     0FD7                     l4381:
  7388     0FD7  0021               	movlb	1	; select bank1
  7389     0FD8  01A5               	clrf	___fldiv@new_exp^(0+128)
  7390     0FD9  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  7391     0FDA                     l4383:
  7392     0FDA  3000               	movlw	0
  7393     0FDB  0020               	movlb	0	; select bank0
  7394     0FDC  00E3               	movwf	___fldiv@b+3
  7395     0FDD  3000               	movlw	0
  7396     0FDE  00E2               	movwf	___fldiv@b+2
  7397     0FDF  3000               	movlw	0
  7398     0FE0  00E1               	movwf	___fldiv@b+1
  7399     0FE1  3000               	movlw	0
  7400     0FE2  00E0               	movwf	___fldiv@b
  7401     0FE3                     l4385:
  7402     0FE3  0021               	movlb	1	; select bank1
  7403     0FE4  01A4               	clrf	___fldiv@sign^(0+128)
  7404     0FE5                     l1533:
  7405     0FE5  0021               	movlb	1	; select bank1
  7406     0FE6  0825               	movf	___fldiv@new_exp^(0+128),w
  7407     0FE7  00AB               	movwf	___fldiv@bexp^(0+128)
  7408     0FE8                     l4387:
  7409     0FE8  1C2B               	btfss	___fldiv@bexp^(0+128),0
  7410     0FE9  2FEB               	goto	u3561
  7411     0FEA  2FEC               	goto	u3560
  7412     0FEB                     u3561:
  7413     0FEB  2FEF               	goto	l4391
  7414     0FEC                     u3560:
  7415     0FEC                     l4389:
  7416     0FEC  0020               	movlb	0	; select bank0
  7417     0FED  17E2               	bsf	___fldiv@b+2,7
  7418     0FEE  2FF4               	goto	l1535
  7419     0FEF                     l4391:
  7420     0FEF  307F               	movlw	127
  7421     0FF0  0020               	movlb	0	; select bank0
  7422     0FF1  00E4               	movwf	??___fldiv
  7423     0FF2  0864               	movf	??___fldiv,w
  7424     0FF3  05E2               	andwf	___fldiv@b+2,f
  7425     0FF4                     l1535:
  7426     0FF4  0021               	movlb	1	; select bank1
  7427     0FF5  362B               	lsrf	___fldiv@bexp^(0+128),w
  7428     0FF6  0020               	movlb	0	; select bank0
  7429     0FF7  00E3               	movwf	___fldiv@b+3
  7430     0FF8  0021               	movlb	1	; select bank1
  7431     0FF9  0824               	movf	___fldiv@sign^(0+128),w
  7432     0FFA  0020               	movlb	0	; select bank0
  7433     0FFB  00E4               	movwf	??___fldiv
  7434     0FFC  0864               	movf	??___fldiv,w
  7435     0FFD  04E3               	iorwf	___fldiv@b+3,f
  7436     0FFE  2E79               	goto	l4301
  7437     0FFF                     l1513:
  7438     0FFF  0008               	return
  7439     1000                     __end_of___fldiv:
  7440                           
  7441                           	psect	text22
  7442     051A                     __ptext22:	
  7443 ;; *************** function ___fladd *****************
  7444 ;; Defined at:
  7445 ;;		line 10 in file "C:\Program Files\Microchip\XC8_Ver2.41\pic\sources\c99\common\sprcadd.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  b               4   40[BANK0 ] unsigned char 
  7448 ;;  a               4   44[BANK0 ] unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  grs             1   59[BANK0 ] unsigned char 
  7451 ;;  bexp            1   58[BANK0 ] unsigned char 
  7452 ;;  aexp            1   57[BANK0 ] unsigned char 
  7453 ;;  signs           1   56[BANK0 ] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  4   40[BANK0 ] unsigned char 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7463 ;;      Params:         0       8       0       0       0       0       0       0
  7464 ;;      Locals:         0       4       0       0       0       0       0       0
  7465 ;;      Temps:          0       8       0       0       0       0       0       0
  7466 ;;      Totals:         0      20       0       0       0       0       0       0
  7467 ;;Total ram usage:       20 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 7
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_ReadData
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477     051A                     ___fladd:	
  7478                           ;psect for function ___fladd
  7479                           
  7480     051A                     l4063:	
  7481                           ;incstack = 0
  7482                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7483                           
  7484     051A  0020               	movlb	0	; select bank0
  7485     051B  084B               	movf	___fladd@b+3,w
  7486     051C  3980               	andlw	128
  7487     051D  00D8               	movwf	___fladd@signs
  7488     051E                     l4065:
  7489     051E  354B               	lslf	___fladd@b+3,w
  7490     051F  00DA               	movwf	___fladd@bexp
  7491     0520                     l4067:
  7492     0520  1FCA               	btfss	___fladd@b+2,7
  7493     0521  2D23               	goto	u2851
  7494     0522  2D24               	goto	u2850
  7495     0523                     u2851:
  7496     0523  2D25               	goto	l4071
  7497     0524                     u2850:
  7498     0524                     l4069:
  7499     0524  145A               	bsf	___fladd@bexp,0
  7500     0525                     l4071:
  7501     0525  085A               	movf	___fladd@bexp,w
  7502     0526  1903               	btfsc	3,2
  7503     0527  2D29               	goto	u2861
  7504     0528  2D2A               	goto	u2860
  7505     0529                     u2861:
  7506     0529  2D3A               	goto	l4081
  7507     052A                     u2860:
  7508     052A                     l4073:
  7509     052A  0A5A               	incf	___fladd@bexp,w
  7510     052B  1D03               	btfss	3,2
  7511     052C  2D2E               	goto	u2871
  7512     052D  2D2F               	goto	u2870
  7513     052E                     u2871:
  7514     052E  2D37               	goto	l4077
  7515     052F                     u2870:
  7516     052F                     l4075:
  7517     052F  3000               	movlw	0
  7518     0530  00CB               	movwf	___fladd@b+3
  7519     0531  3000               	movlw	0
  7520     0532  00CA               	movwf	___fladd@b+2
  7521     0533  3000               	movlw	0
  7522     0534  00C9               	movwf	___fladd@b+1
  7523     0535  3000               	movlw	0
  7524     0536  00C8               	movwf	___fladd@b
  7525     0537                     l4077:
  7526     0537  17CA               	bsf	___fladd@b+2,7
  7527     0538                     l4079:
  7528     0538  01CB               	clrf	___fladd@b+3
  7529     0539  2D42               	goto	l4083
  7530     053A                     l4081:
  7531     053A  3000               	movlw	0
  7532     053B  00CB               	movwf	___fladd@b+3
  7533     053C  3000               	movlw	0
  7534     053D  00CA               	movwf	___fladd@b+2
  7535     053E  3000               	movlw	0
  7536     053F  00C9               	movwf	___fladd@b+1
  7537     0540  3000               	movlw	0
  7538     0541  00C8               	movwf	___fladd@b
  7539     0542                     l4083:
  7540     0542  084F               	movf	___fladd@a+3,w
  7541     0543  3980               	andlw	128
  7542     0544  00D9               	movwf	___fladd@aexp
  7543     0545                     l4085:
  7544     0545  0859               	movf	___fladd@aexp,w
  7545     0546  0658               	xorwf	___fladd@signs,w
  7546     0547  1903               	skipnz
  7547     0548  2D4A               	goto	u2881
  7548     0549  2D4B               	goto	u2880
  7549     054A                     u2881:
  7550     054A  2D4C               	goto	l4089
  7551     054B                     u2880:
  7552     054B                     l4087:
  7553     054B  1758               	bsf	___fladd@signs,6
  7554     054C                     l4089:
  7555     054C  354F               	lslf	___fladd@a+3,w
  7556     054D  00D9               	movwf	___fladd@aexp
  7557     054E                     l4091:
  7558     054E  1FCE               	btfss	___fladd@a+2,7
  7559     054F  2D51               	goto	u2891
  7560     0550  2D52               	goto	u2890
  7561     0551                     u2891:
  7562     0551  2D53               	goto	l4095
  7563     0552                     u2890:
  7564     0552                     l4093:
  7565     0552  1459               	bsf	___fladd@aexp,0
  7566     0553                     l4095:
  7567     0553  0859               	movf	___fladd@aexp,w
  7568     0554  1903               	btfsc	3,2
  7569     0555  2D57               	goto	u2901
  7570     0556  2D58               	goto	u2900
  7571     0557                     u2901:
  7572     0557  2D68               	goto	l4105
  7573     0558                     u2900:
  7574     0558                     l4097:
  7575     0558  0A59               	incf	___fladd@aexp,w
  7576     0559  1D03               	btfss	3,2
  7577     055A  2D5C               	goto	u2911
  7578     055B  2D5D               	goto	u2910
  7579     055C                     u2911:
  7580     055C  2D65               	goto	l4101
  7581     055D                     u2910:
  7582     055D                     l4099:
  7583     055D  3000               	movlw	0
  7584     055E  00CF               	movwf	___fladd@a+3
  7585     055F  3000               	movlw	0
  7586     0560  00CE               	movwf	___fladd@a+2
  7587     0561  3000               	movlw	0
  7588     0562  00CD               	movwf	___fladd@a+1
  7589     0563  3000               	movlw	0
  7590     0564  00CC               	movwf	___fladd@a
  7591     0565                     l4101:
  7592     0565  17CE               	bsf	___fladd@a+2,7
  7593     0566                     l4103:
  7594     0566  01CF               	clrf	___fladd@a+3
  7595     0567  2D70               	goto	l1455
  7596     0568                     l4105:
  7597     0568  3000               	movlw	0
  7598     0569  00CF               	movwf	___fladd@a+3
  7599     056A  3000               	movlw	0
  7600     056B  00CE               	movwf	___fladd@a+2
  7601     056C  3000               	movlw	0
  7602     056D  00CD               	movwf	___fladd@a+1
  7603     056E  3000               	movlw	0
  7604     056F  00CC               	movwf	___fladd@a
  7605     0570                     l1455:
  7606     0570  085A               	movf	___fladd@bexp,w
  7607     0571  0259               	subwf	___fladd@aexp,w
  7608     0572  1803               	skipnc
  7609     0573  2D75               	goto	u2921
  7610     0574  2D76               	goto	u2920
  7611     0575                     u2921:
  7612     0575  2D9C               	goto	l4141
  7613     0576                     u2920:
  7614     0576                     l4107:
  7615     0576  1F58               	btfss	___fladd@signs,6
  7616     0577  2D79               	goto	u2931
  7617     0578  2D7A               	goto	u2930
  7618     0579                     u2931:
  7619     0579  2D7E               	goto	l4111
  7620     057A                     u2930:
  7621     057A                     l4109:
  7622     057A  3080               	movlw	128
  7623     057B  00D0               	movwf	??___fladd
  7624     057C  0850               	movf	??___fladd,w
  7625     057D  06D8               	xorwf	___fladd@signs,f
  7626     057E                     l4111:
  7627     057E  085A               	movf	___fladd@bexp,w
  7628     057F  00DB               	movwf	___fladd@grs
  7629     0580                     l4113:
  7630     0580  0859               	movf	___fladd@aexp,w
  7631     0581  00DA               	movwf	___fladd@bexp
  7632     0582                     l4115:
  7633     0582  085B               	movf	___fladd@grs,w
  7634     0583  00D9               	movwf	___fladd@aexp
  7635     0584                     l4117:
  7636     0584  0848               	movf	___fladd@b,w
  7637     0585  00DB               	movwf	___fladd@grs
  7638     0586                     l4119:
  7639     0586  084C               	movf	___fladd@a,w
  7640     0587  00C8               	movwf	___fladd@b
  7641     0588                     l4121:
  7642     0588  085B               	movf	___fladd@grs,w
  7643     0589  00CC               	movwf	___fladd@a
  7644     058A                     l4123:
  7645     058A  0849               	movf	___fladd@b+1,w
  7646     058B  00DB               	movwf	___fladd@grs
  7647     058C                     l4125:
  7648     058C  084D               	movf	___fladd@a+1,w
  7649     058D  00C9               	movwf	___fladd@b+1
  7650     058E                     l4127:
  7651     058E  085B               	movf	___fladd@grs,w
  7652     058F  00CD               	movwf	___fladd@a+1
  7653     0590                     l4129:
  7654     0590  084A               	movf	___fladd@b+2,w
  7655     0591  00DB               	movwf	___fladd@grs
  7656     0592                     l4131:
  7657     0592  084E               	movf	___fladd@a+2,w
  7658     0593  00CA               	movwf	___fladd@b+2
  7659     0594                     l4133:
  7660     0594  085B               	movf	___fladd@grs,w
  7661     0595  00CE               	movwf	___fladd@a+2
  7662     0596                     l4135:
  7663     0596  084B               	movf	___fladd@b+3,w
  7664     0597  00DB               	movwf	___fladd@grs
  7665     0598                     l4137:
  7666     0598  084F               	movf	___fladd@a+3,w
  7667     0599  00CB               	movwf	___fladd@b+3
  7668     059A                     l4139:
  7669     059A  085B               	movf	___fladd@grs,w
  7670     059B  00CF               	movwf	___fladd@a+3
  7671     059C                     l4141:
  7672     059C  01DB               	clrf	___fladd@grs
  7673     059D                     l4143:
  7674     059D  0859               	movf	___fladd@aexp,w
  7675     059E  00D0               	movwf	??___fladd
  7676     059F  01D1               	clrf	??___fladd+1
  7677     05A0  0851               	movf	??___fladd+1,w
  7678     05A1  00D3               	movwf	??___fladd+3
  7679     05A2  085A               	movf	___fladd@bexp,w
  7680     05A3  0250               	subwf	??___fladd,w
  7681     05A4  00D2               	movwf	??___fladd+2
  7682     05A5  1C03               	skipc
  7683     05A6  03D3               	decf	??___fladd+3,f
  7684     05A7  0853               	movf	??___fladd+3,w
  7685     05A8  3A80               	xorlw	128
  7686     05A9  00D4               	movwf	??___fladd+4
  7687     05AA  3080               	movlw	128
  7688     05AB  0254               	subwf	??___fladd+4,w
  7689     05AC  1D03               	skipz
  7690     05AD  2DB0               	goto	u2945
  7691     05AE  301A               	movlw	26
  7692     05AF  0252               	subwf	??___fladd+2,w
  7693     05B0                     u2945:
  7694     05B0  1C03               	skipc
  7695     05B1  2DB3               	goto	u2941
  7696     05B2  2DB4               	goto	u2940
  7697     05B3                     u2941:
  7698     05B3  2DE6               	goto	l4159
  7699     05B4                     u2940:
  7700     05B4                     l4145:
  7701     05B4  0020               	movlb	0	; select bank0
  7702     05B5  084B               	movf	___fladd@b+3,w
  7703     05B6  044A               	iorwf	___fladd@b+2,w
  7704     05B7  0449               	iorwf	___fladd@b+1,w
  7705     05B8  0448               	iorwf	___fladd@b,w
  7706     05B9  1D03               	skipz
  7707     05BA  2DBC               	goto	u2951
  7708     05BB  2DBE               	goto	u2950
  7709     05BC                     u2951:
  7710     05BC  3001               	movlw	1
  7711     05BD  2DBF               	goto	u2960
  7712     05BE                     u2950:
  7713     05BE  3000               	movlw	0
  7714     05BF                     u2960:
  7715     05BF  00DB               	movwf	___fladd@grs
  7716     05C0  3000               	movlw	0
  7717     05C1  00CB               	movwf	___fladd@b+3
  7718     05C2  3000               	movlw	0
  7719     05C3  00CA               	movwf	___fladd@b+2
  7720     05C4  3000               	movlw	0
  7721     05C5  00C9               	movwf	___fladd@b+1
  7722     05C6  3000               	movlw	0
  7723     05C7  00C8               	movwf	___fladd@b
  7724     05C8  0859               	movf	___fladd@aexp,w
  7725     05C9  00DA               	movwf	___fladd@bexp
  7726     05CA  2DED               	goto	l1459
  7727     05CB                     l1461:
  7728     05CB  1C5B               	btfss	___fladd@grs,0
  7729     05CC  2DCE               	goto	u2971
  7730     05CD  2DCF               	goto	u2970
  7731     05CE                     u2971:
  7732     05CE  2DD3               	goto	l4149
  7733     05CF                     u2970:
  7734     05CF                     l4147:
  7735     05CF  365B               	lsrf	___fladd@grs,w
  7736     05D0  3801               	iorlw	1
  7737     05D1  00DB               	movwf	___fladd@grs
  7738     05D2  2DD5               	goto	l4151
  7739     05D3                     l4149:
  7740     05D3  1003               	clrc
  7741     05D4  0CDB               	rrf	___fladd@grs,f
  7742     05D5                     l4151:
  7743     05D5  1C48               	btfss	___fladd@b,0
  7744     05D6  2DD8               	goto	u2981
  7745     05D7  2DD9               	goto	u2980
  7746     05D8                     u2981:
  7747     05D8  2DDA               	goto	l4155
  7748     05D9                     u2980:
  7749     05D9                     l4153:
  7750     05D9  17DB               	bsf	___fladd@grs,7
  7751     05DA                     l4155:
  7752     05DA  3001               	movlw	1
  7753     05DB  00D0               	movwf	??___fladd
  7754     05DC                     u2995:
  7755     05DC  37CB               	asrf	___fladd@b+3,f
  7756     05DD  0CCA               	rrf	___fladd@b+2,f
  7757     05DE  0CC9               	rrf	___fladd@b+1,f
  7758     05DF  0CC8               	rrf	___fladd@b,f
  7759     05E0  0BD0               	decfsz	??___fladd& (0+127),f
  7760     05E1  2DDC               	goto	u2995
  7761     05E2                     l4157:
  7762     05E2  3001               	movlw	1
  7763     05E3  00D0               	movwf	??___fladd
  7764     05E4  0850               	movf	??___fladd,w
  7765     05E5  07DA               	addwf	___fladd@bexp,f
  7766     05E6                     l4159:
  7767     05E6  0020               	movlb	0	; select bank0
  7768     05E7  0859               	movf	___fladd@aexp,w
  7769     05E8  025A               	subwf	___fladd@bexp,w
  7770     05E9  1C03               	skipc
  7771     05EA  2DEC               	goto	u3001
  7772     05EB  2DED               	goto	u3000
  7773     05EC                     u3001:
  7774     05EC  2DCB               	goto	l1461
  7775     05ED                     u3000:
  7776     05ED                     l1459:
  7777     05ED  1B58               	btfsc	___fladd@signs,6
  7778     05EE  2DF0               	goto	u3011
  7779     05EF  2DF1               	goto	u3010
  7780     05F0                     u3011:
  7781     05F0  2E27               	goto	l4185
  7782     05F1                     u3010:
  7783     05F1                     l4161:
  7784     05F1  085A               	movf	___fladd@bexp,w
  7785     05F2  1D03               	btfss	3,2
  7786     05F3  2DF5               	goto	u3021
  7787     05F4  2DF6               	goto	u3020
  7788     05F5                     u3021:
  7789     05F5  2DFF               	goto	l4167
  7790     05F6                     u3020:
  7791     05F6                     l4163:
  7792     05F6  3000               	movlw	0
  7793     05F7  00CB               	movwf	?___fladd+3
  7794     05F8  3000               	movlw	0
  7795     05F9  00CA               	movwf	?___fladd+2
  7796     05FA  3000               	movlw	0
  7797     05FB  00C9               	movwf	?___fladd+1
  7798     05FC  3000               	movlw	0
  7799     05FD  00C8               	movwf	?___fladd
  7800     05FE  2F21               	goto	l1468
  7801     05FF                     l4167:
  7802     05FF  084C               	movf	___fladd@a,w
  7803     0600  07C8               	addwf	___fladd@b,f
  7804     0601  084D               	movf	___fladd@a+1,w
  7805     0602  3DC9               	addwfc	___fladd@b+1,f
  7806     0603  084E               	movf	___fladd@a+2,w
  7807     0604  3DCA               	addwfc	___fladd@b+2,f
  7808     0605  084F               	movf	___fladd@a+3,w
  7809     0606  3DCB               	addwfc	___fladd@b+3,f
  7810     0607                     l4169:
  7811     0607  1C4B               	btfss	___fladd@b+3,0
  7812     0608  2E0A               	goto	u3031
  7813     0609  2E0B               	goto	u3030
  7814     060A                     u3031:
  7815     060A  2EB3               	goto	l4219
  7816     060B                     u3030:
  7817     060B                     l4171:
  7818     060B  1C5B               	btfss	___fladd@grs,0
  7819     060C  2E0E               	goto	u3041
  7820     060D  2E0F               	goto	u3040
  7821     060E                     u3041:
  7822     060E  2E13               	goto	l4175
  7823     060F                     u3040:
  7824     060F                     l4173:
  7825     060F  365B               	lsrf	___fladd@grs,w
  7826     0610  3801               	iorlw	1
  7827     0611  00DB               	movwf	___fladd@grs
  7828     0612  2E15               	goto	l4177
  7829     0613                     l4175:
  7830     0613  1003               	clrc
  7831     0614  0CDB               	rrf	___fladd@grs,f
  7832     0615                     l4177:
  7833     0615  1C48               	btfss	___fladd@b,0
  7834     0616  2E18               	goto	u3051
  7835     0617  2E19               	goto	u3050
  7836     0618                     u3051:
  7837     0618  2E1A               	goto	l4181
  7838     0619                     u3050:
  7839     0619                     l4179:
  7840     0619  17DB               	bsf	___fladd@grs,7
  7841     061A                     l4181:
  7842     061A  3001               	movlw	1
  7843     061B  00D0               	movwf	??___fladd
  7844     061C                     u3065:
  7845     061C  37CB               	asrf	___fladd@b+3,f
  7846     061D  0CCA               	rrf	___fladd@b+2,f
  7847     061E  0CC9               	rrf	___fladd@b+1,f
  7848     061F  0CC8               	rrf	___fladd@b,f
  7849     0620  0BD0               	decfsz	??___fladd& (0+127),f
  7850     0621  2E1C               	goto	u3065
  7851     0622                     l4183:
  7852     0622  3001               	movlw	1
  7853     0623  00D0               	movwf	??___fladd
  7854     0624  0850               	movf	??___fladd,w
  7855     0625  07DA               	addwf	___fladd@bexp,f
  7856     0626  2EB3               	goto	l4219
  7857     0627                     l4185:
  7858     0627  084B               	movf	___fladd@b+3,w
  7859     0628  3A80               	xorlw	128
  7860     0629  00D0               	movwf	??___fladd
  7861     062A  084F               	movf	___fladd@a+3,w
  7862     062B  3A80               	xorlw	128
  7863     062C  0250               	subwf	??___fladd,w
  7864     062D  1D03               	skipz
  7865     062E  2E39               	goto	u3073
  7866     062F  084E               	movf	___fladd@a+2,w
  7867     0630  024A               	subwf	___fladd@b+2,w
  7868     0631  1D03               	skipz
  7869     0632  2E39               	goto	u3073
  7870     0633  084D               	movf	___fladd@a+1,w
  7871     0634  0249               	subwf	___fladd@b+1,w
  7872     0635  1D03               	skipz
  7873     0636  2E39               	goto	u3073
  7874     0637  084C               	movf	___fladd@a,w
  7875     0638  0248               	subwf	___fladd@b,w
  7876     0639                     u3073:
  7877     0639  1803               	skipnc
  7878     063A  2E3C               	goto	u3071
  7879     063B  2E3D               	goto	u3070
  7880     063C                     u3071:
  7881     063C  2E75               	goto	l4195
  7882     063D                     u3070:
  7883     063D                     l4187:
  7884     063D  30FF               	movlw	255
  7885     063E  00D0               	movwf	??___fladd
  7886     063F  30FF               	movlw	255
  7887     0640  00D1               	movwf	??___fladd+1
  7888     0641  30FF               	movlw	255
  7889     0642  00D2               	movwf	??___fladd+2
  7890     0643  30FF               	movlw	255
  7891     0644  00D3               	movwf	??___fladd+3
  7892     0645  0848               	movf	___fladd@b,w
  7893     0646  024C               	subwf	___fladd@a,w
  7894     0647  00D4               	movwf	??___fladd+4
  7895     0648  0849               	movf	___fladd@b+1,w
  7896     0649  3B4D               	subwfb	___fladd@a+1,w
  7897     064A  00D5               	movwf	??___fladd+5
  7898     064B  084A               	movf	___fladd@b+2,w
  7899     064C  3B4E               	subwfb	___fladd@a+2,w
  7900     064D  00D6               	movwf	??___fladd+6
  7901     064E  084B               	movf	___fladd@b+3,w
  7902     064F  3B4F               	subwfb	___fladd@a+3,w
  7903     0650  00D7               	movwf	??___fladd+7
  7904     0651  0854               	movf	??___fladd+4,w
  7905     0652  07D0               	addwf	??___fladd,f
  7906     0653  0855               	movf	??___fladd+5,w
  7907     0654  3DD1               	addwfc	??___fladd+1,f
  7908     0655  0856               	movf	??___fladd+6,w
  7909     0656  3DD2               	addwfc	??___fladd+2,f
  7910     0657  0857               	movf	??___fladd+7,w
  7911     0658  3DD3               	addwfc	??___fladd+3,f
  7912     0659  0853               	movf	??___fladd+3,w
  7913     065A  00CB               	movwf	___fladd@b+3
  7914     065B  0852               	movf	??___fladd+2,w
  7915     065C  00CA               	movwf	___fladd@b+2
  7916     065D  0851               	movf	??___fladd+1,w
  7917     065E  00C9               	movwf	___fladd@b+1
  7918     065F  0850               	movf	??___fladd,w
  7919     0660  00C8               	movwf	___fladd@b
  7920     0661                     l4189:
  7921     0661  3080               	movlw	128
  7922     0662  00D0               	movwf	??___fladd
  7923     0663  0850               	movf	??___fladd,w
  7924     0664  06D8               	xorwf	___fladd@signs,f
  7925     0665  09DB               	comf	___fladd@grs,f
  7926     0666  0ADB               	incf	___fladd@grs,f
  7927     0667                     l4191:
  7928     0667  085B               	movf	___fladd@grs,w
  7929     0668  1D03               	btfss	3,2
  7930     0669  2E6B               	goto	u3081
  7931     066A  2E6C               	goto	u3080
  7932     066B                     u3081:
  7933     066B  2E7D               	goto	l1476
  7934     066C                     u3080:
  7935     066C                     l4193:
  7936     066C  3001               	movlw	1
  7937     066D  07C8               	addwf	___fladd@b,f
  7938     066E  3000               	movlw	0
  7939     066F  3DC9               	addwfc	___fladd@b+1,f
  7940     0670  3000               	movlw	0
  7941     0671  3DCA               	addwfc	___fladd@b+2,f
  7942     0672  3000               	movlw	0
  7943     0673  3DCB               	addwfc	___fladd@b+3,f
  7944     0674  2E7D               	goto	l1476
  7945     0675                     l4195:
  7946     0675  084C               	movf	___fladd@a,w
  7947     0676  02C8               	subwf	___fladd@b,f
  7948     0677  084D               	movf	___fladd@a+1,w
  7949     0678  3BC9               	subwfb	___fladd@b+1,f
  7950     0679  084E               	movf	___fladd@a+2,w
  7951     067A  3BCA               	subwfb	___fladd@b+2,f
  7952     067B  084F               	movf	___fladd@a+3,w
  7953     067C  3BCB               	subwfb	___fladd@b+3,f
  7954     067D                     l1476:
  7955     067D  084B               	movf	___fladd@b+3,w
  7956     067E  044A               	iorwf	___fladd@b+2,w
  7957     067F  0449               	iorwf	___fladd@b+1,w
  7958     0680  0448               	iorwf	___fladd@b,w
  7959     0681  1D03               	skipz
  7960     0682  2E84               	goto	u3091
  7961     0683  2E85               	goto	u3090
  7962     0684                     u3091:
  7963     0684  2EAF               	goto	l4217
  7964     0685                     u3090:
  7965     0685                     l4197:
  7966     0685  085B               	movf	___fladd@grs,w
  7967     0686  1D03               	btfss	3,2
  7968     0687  2E89               	goto	u3101
  7969     0688  2E8A               	goto	u3100
  7970     0689                     u3101:
  7971     0689  2EAF               	goto	l4217
  7972     068A                     u3100:
  7973     068A                     l4199:
  7974     068A  3000               	movlw	0
  7975     068B  00CB               	movwf	?___fladd+3
  7976     068C  3000               	movlw	0
  7977     068D  00CA               	movwf	?___fladd+2
  7978     068E  3000               	movlw	0
  7979     068F  00C9               	movwf	?___fladd+1
  7980     0690  3000               	movlw	0
  7981     0691  00C8               	movwf	?___fladd
  7982     0692  2F21               	goto	l1468
  7983     0693                     l4203:
  7984     0693  3001               	movlw	1
  7985     0694                     u3115:
  7986     0694  35C8               	lslf	___fladd@b,f
  7987     0695  0DC9               	rlf	___fladd@b+1,f
  7988     0696  0DCA               	rlf	___fladd@b+2,f
  7989     0697  0DCB               	rlf	___fladd@b+3,f
  7990     0698  0B89               	decfsz	9,f
  7991     0699  2E94               	goto	u3115
  7992     069A                     l4205:
  7993     069A  1FDB               	btfss	___fladd@grs,7
  7994     069B  2E9D               	goto	u3121
  7995     069C  2E9E               	goto	u3120
  7996     069D                     u3121:
  7997     069D  2E9F               	goto	l1480
  7998     069E                     u3120:
  7999     069E                     l4207:
  8000     069E  1448               	bsf	___fladd@b,0
  8001     069F                     l1480:
  8002     069F  1C5B               	btfss	___fladd@grs,0
  8003     06A0  2EA2               	goto	u3131
  8004     06A1  2EA3               	goto	u3130
  8005     06A2                     u3131:
  8006     06A2  2EA6               	goto	l4211
  8007     06A3                     u3130:
  8008     06A3                     l4209:
  8009     06A3  1403               	setc
  8010     06A4  0DDB               	rlf	___fladd@grs,f
  8011     06A5  2EA8               	goto	l4213
  8012     06A6                     l4211:
  8013     06A6  1003               	clrc
  8014     06A7  0DDB               	rlf	___fladd@grs,f
  8015     06A8                     l4213:
  8016     06A8  085A               	movf	___fladd@bexp,w
  8017     06A9  1903               	btfsc	3,2
  8018     06AA  2EAC               	goto	u3141
  8019     06AB  2EAD               	goto	u3140
  8020     06AC                     u3141:
  8021     06AC  2EAF               	goto	l4217
  8022     06AD                     u3140:
  8023     06AD                     l4215:
  8024     06AD  3001               	movlw	1
  8025     06AE  02DA               	subwf	___fladd@bexp,f
  8026     06AF                     l4217:
  8027     06AF  1FCA               	btfss	___fladd@b+2,7
  8028     06B0  2EB2               	goto	u3151
  8029     06B1  2EB3               	goto	u3150
  8030     06B2                     u3151:
  8031     06B2  2E93               	goto	l4203
  8032     06B3                     u3150:
  8033     06B3                     l4219:
  8034     06B3  01D9               	clrf	___fladd@aexp
  8035     06B4                     l4221:
  8036     06B4  1FDB               	btfss	___fladd@grs,7
  8037     06B5  2EB7               	goto	u3161
  8038     06B6  2EB8               	goto	u3160
  8039     06B7                     u3161:
  8040     06B7  2EC6               	goto	l4229
  8041     06B8                     u3160:
  8042     06B8                     l4223:
  8043     06B8  085B               	movf	___fladd@grs,w
  8044     06B9  397F               	andlw	127
  8045     06BA  1903               	btfsc	3,2
  8046     06BB  2EBD               	goto	u3171
  8047     06BC  2EBE               	goto	u3170
  8048     06BD                     u3171:
  8049     06BD  2EC1               	goto	l1486
  8050     06BE                     u3170:
  8051     06BE                     l4225:
  8052     06BE  01D9               	clrf	___fladd@aexp
  8053     06BF  0AD9               	incf	___fladd@aexp,f
  8054     06C0  2EC6               	goto	l4229
  8055     06C1                     l1486:
  8056     06C1  1C48               	btfss	___fladd@b,0
  8057     06C2  2EC4               	goto	u3181
  8058     06C3  2EC5               	goto	u3180
  8059     06C4                     u3181:
  8060     06C4  2EC6               	goto	l4229
  8061     06C5                     u3180:
  8062     06C5  2EBE               	goto	l4225
  8063     06C6                     l4229:
  8064     06C6  0859               	movf	___fladd@aexp,w
  8065     06C7  1903               	btfsc	3,2
  8066     06C8  2ECA               	goto	u3191
  8067     06C9  2ECB               	goto	u3190
  8068     06CA                     u3191:
  8069     06CA  2EF8               	goto	l1489
  8070     06CB                     u3190:
  8071     06CB                     l4231:
  8072     06CB  3001               	movlw	1
  8073     06CC  07C8               	addwf	___fladd@b,f
  8074     06CD  3000               	movlw	0
  8075     06CE  3DC9               	addwfc	___fladd@b+1,f
  8076     06CF  3000               	movlw	0
  8077     06D0  3DCA               	addwfc	___fladd@b+2,f
  8078     06D1  3000               	movlw	0
  8079     06D2  3DCB               	addwfc	___fladd@b+3,f
  8080     06D3                     l4233:
  8081     06D3  1C4B               	btfss	___fladd@b+3,0
  8082     06D4  2ED6               	goto	u3201
  8083     06D5  2ED7               	goto	u3200
  8084     06D6                     u3201:
  8085     06D6  2EF8               	goto	l1489
  8086     06D7                     u3200:
  8087     06D7                     l4235:
  8088     06D7  0848               	movf	___fladd@b,w
  8089     06D8  00D0               	movwf	??___fladd
  8090     06D9  0849               	movf	___fladd@b+1,w
  8091     06DA  00D1               	movwf	??___fladd+1
  8092     06DB  084A               	movf	___fladd@b+2,w
  8093     06DC  00D2               	movwf	??___fladd+2
  8094     06DD  084B               	movf	___fladd@b+3,w
  8095     06DE  00D3               	movwf	??___fladd+3
  8096     06DF  3001               	movlw	1
  8097     06E0  00D4               	movwf	??___fladd+4
  8098     06E1                     u3215:
  8099     06E1  37D3               	asrf	??___fladd+3,f
  8100     06E2  0CD2               	rrf	??___fladd+2,f
  8101     06E3  0CD1               	rrf	??___fladd+1,f
  8102     06E4  0CD0               	rrf	??___fladd,f
  8103     06E5                     u3210:
  8104     06E5  0BD4               	decfsz	??___fladd+4,f
  8105     06E6  2EE1               	goto	u3215
  8106     06E7  0853               	movf	??___fladd+3,w
  8107     06E8  00CB               	movwf	___fladd@b+3
  8108     06E9  0852               	movf	??___fladd+2,w
  8109     06EA  00CA               	movwf	___fladd@b+2
  8110     06EB  0851               	movf	??___fladd+1,w
  8111     06EC  00C9               	movwf	___fladd@b+1
  8112     06ED  0850               	movf	??___fladd,w
  8113     06EE  00C8               	movwf	___fladd@b
  8114     06EF  0A5A               	incf	___fladd@bexp,w
  8115     06F0  1903               	btfsc	3,2
  8116     06F1  2EF3               	goto	u3221
  8117     06F2  2EF4               	goto	u3220
  8118     06F3                     u3221:
  8119     06F3  2EF8               	goto	l1489
  8120     06F4                     u3220:
  8121     06F4                     l4237:
  8122     06F4  3001               	movlw	1
  8123     06F5  00D0               	movwf	??___fladd
  8124     06F6  0850               	movf	??___fladd,w
  8125     06F7  07DA               	addwf	___fladd@bexp,f
  8126     06F8                     l1489:
  8127     06F8  0A5A               	incf	___fladd@bexp,w
  8128     06F9  1903               	btfsc	3,2
  8129     06FA  2EFC               	goto	u3231
  8130     06FB  2EFD               	goto	u3230
  8131     06FC                     u3231:
  8132     06FC  2F02               	goto	l4241
  8133     06FD                     u3230:
  8134     06FD                     l4239:
  8135     06FD  085A               	movf	___fladd@bexp,w
  8136     06FE  1D03               	btfss	3,2
  8137     06FF  2F01               	goto	u3241
  8138     0700  2F02               	goto	u3240
  8139     0701                     u3241:
  8140     0701  2F10               	goto	l4247
  8141     0702                     u3240:
  8142     0702                     l4241:
  8143     0702  3000               	movlw	0
  8144     0703  00CB               	movwf	___fladd@b+3
  8145     0704  3000               	movlw	0
  8146     0705  00CA               	movwf	___fladd@b+2
  8147     0706  3000               	movlw	0
  8148     0707  00C9               	movwf	___fladd@b+1
  8149     0708  3000               	movlw	0
  8150     0709  00C8               	movwf	___fladd@b
  8151     070A                     l4243:
  8152     070A  085A               	movf	___fladd@bexp,w
  8153     070B  1D03               	btfss	3,2
  8154     070C  2F0E               	goto	u3251
  8155     070D  2F0F               	goto	u3250
  8156     070E                     u3251:
  8157     070E  2F10               	goto	l4247
  8158     070F                     u3250:
  8159     070F                     l4245:
  8160     070F  01D8               	clrf	___fladd@signs
  8161     0710                     l4247:
  8162     0710  1C5A               	btfss	___fladd@bexp,0
  8163     0711  2F13               	goto	u3261
  8164     0712  2F14               	goto	u3260
  8165     0713                     u3261:
  8166     0713  2F16               	goto	l4251
  8167     0714                     u3260:
  8168     0714                     l4249:
  8169     0714  17CA               	bsf	___fladd@b+2,7
  8170     0715  2F1A               	goto	l1497
  8171     0716                     l4251:
  8172     0716  307F               	movlw	127
  8173     0717  00D0               	movwf	??___fladd
  8174     0718  0850               	movf	??___fladd,w
  8175     0719  05CA               	andwf	___fladd@b+2,f
  8176     071A                     l1497:
  8177     071A  365A               	lsrf	___fladd@bexp,w
  8178     071B  00CB               	movwf	___fladd@b+3
  8179     071C                     l4253:
  8180     071C  1FD8               	btfss	___fladd@signs,7
  8181     071D  2F1F               	goto	u3271
  8182     071E  2F20               	goto	u3270
  8183     071F                     u3271:
  8184     071F  2F21               	goto	l1498
  8185     0720                     u3270:
  8186     0720                     l4255:
  8187     0720  17CB               	bsf	___fladd@b+3,7
  8188     0721                     l1498:
  8189     0721                     l1468:
  8190     0721  0008               	return
  8191     0722                     __end_of___fladd:
  8192                           
  8193                           	psect	text23
  8194     166D                     __ptext23:	
  8195 ;; *************** function _I2C_WriteNBytes *****************
  8196 ;; Defined at:
  8197 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  address         1    wreg     unsigned char 
  8200 ;;  data            1    8[BANK0 ] PTR unsigned char 
  8201 ;;		 -> SHT30_CMD_MEASURE_H_Enable(2), 
  8202 ;;  len             2    9[BANK0 ] unsigned int 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  address         1   11[BANK0 ] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8214 ;;      Params:         0       3       0       0       0       0       0       0
  8215 ;;      Locals:         0       1       0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0       0
  8217 ;;      Totals:         0       4       0       0       0       0       0       0
  8218 ;;Total ram usage:        4 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 10
  8221 ;; This function calls:
  8222 ;;		_I2C_Close
  8223 ;;		_I2C_MasterWrite
  8224 ;;		_I2C_Open
  8225 ;;		_I2C_SetAddressNackCallback
  8226 ;;		_I2C_SetBuffer
  8227 ;; This function is called by:
  8228 ;;		_ReadData
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232     166D                     _I2C_WriteNBytes:	
  8233                           ;psect for function _I2C_WriteNBytes
  8234                           
  8235                           
  8236                           ;incstack = 0
  8237                           ; Regs used in _I2C_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8238                           ;I2C_WriteNBytes@address stored from wreg
  8239     166D  0020               	movlb	0	; select bank0
  8240     166E  00AB               	movwf	I2C_WriteNBytes@address
  8241     166F                     l3841:
  8242     166F                     l3843:	
  8243                           ;mcc_generated_files/examples/i2c_master_example.c: 111: void I2C_WriteNBytes(i2c_addres
      +                          s_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c_master_example.
      +                          c: 112: {;mcc_generated_files/examples/i2c_master_example.c: 113:     while(!I2C_Open(ad
      +                          dress));
  8244                           
  8245     166F  0020               	movlb	0	; select bank0
  8246     1670  082B               	movf	I2C_WriteNBytes@address,w
  8247     1671  3197  27BA  3196   	fcall	_I2C_Open
  8248     1674  3A00               	xorlw	0
  8249     1675  1903               	skipnz
  8250     1676  2E78               	goto	u2641
  8251     1677  2E79               	goto	u2640
  8252     1678                     u2641:
  8253     1678  2E6F               	goto	l3843
  8254     1679                     u2640:
  8255     1679                     l3845:
  8256                           
  8257                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8258     1679  0020               	movlb	0	; select bank0
  8259     167A  082A               	movf	I2C_WriteNBytes@len+1,w
  8260     167B  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8261     167C  0829               	movf	I2C_WriteNBytes@len,w
  8262     167D  00A0               	movwf	I2C_SetBuffer@bufferSize
  8263     167E  0828               	movf	I2C_WriteNBytes@data,w
  8264     167F  3194  243D  3196   	fcall	_I2C_SetBuffer
  8265     1682                     l3847:
  8266                           
  8267                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8268     1682  3000               	movlw	0
  8269     1683  0020               	movlb	0	; select bank0
  8270     1684  00A4               	movwf	I2C_SetAddressNackCallback@cb
  8271     1685  00A5               	movwf	I2C_SetAddressNackCallback@cb+1
  8272     1686  3000               	movlw	0
  8273     1687  00A6               	movwf	I2C_SetAddressNackCallback@ptr
  8274     1688  00A7               	movwf	I2C_SetAddressNackCallback@ptr+1
  8275     1689  3193  233F  3196   	fcall	_I2C_SetAddressNackCallback
  8276     168C                     l3849:
  8277                           
  8278                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8279     168C  3192  22A4  3196   	fcall	_I2C_MasterWrite
  8280     168F                     l3851:	
  8281                           ;mcc_generated_files/examples/i2c_master_example.c: 117:     while(I2C_BUSY == I2C_Close
      +                          ());
  8282                           
  8283     168F  3194  249E  3196   	fcall	_I2C_Close
  8284     1692  3A01               	xorlw	1
  8285     1693  1903               	skipnz
  8286     1694  2E96               	goto	u2651
  8287     1695  2E97               	goto	u2650
  8288     1696                     u2651:
  8289     1696  2E8F               	goto	l3851
  8290     1697                     u2650:
  8291     1697                     l71:
  8292     1697  0008               	return
  8293     1698                     __end_of_I2C_WriteNBytes:
  8294                           
  8295                           	psect	text24
  8296     133F                     __ptext24:	
  8297 ;; *************** function _I2C_SetAddressNackCallback *****************
  8298 ;; Defined at:
  8299 ;;		line 284 in file "mcc_generated_files/i2c_master.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
  8302 ;;		 -> NULL(1), 
  8303 ;;  ptr             2    6[BANK0 ] PTR void 
  8304 ;;		 -> NULL(0), 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8316 ;;      Params:         0       4       0       0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0
  8319 ;;      Totals:         0       4       0       0       0       0       0       0
  8320 ;;Total ram usage:        4 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 8
  8323 ;; This function calls:
  8324 ;;		_I2C_SetCallback
  8325 ;; This function is called by:
  8326 ;;		_I2C_WriteNBytes
  8327 ;;		_I2C_Read1ByteRegister
  8328 ;;		_I2C_Read2ByteRegister
  8329 ;;		_I2C_Write1ByteRegister
  8330 ;;		_I2C_Write2ByteRegister
  8331 ;;		_I2C_ReadDataBlock
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335     133F                     _I2C_SetAddressNackCallback:	
  8336                           ;psect for function _I2C_SetAddressNackCallback
  8337                           
  8338     133F                     l3685:	
  8339                           ;incstack = 0
  8340                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8341                           
  8342                           
  8343                           ;mcc_generated_files/i2c_master.c: 284: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 285: {;mcc_generated_files/i2c_master.c:
      +                           286:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8344     133F  0020               	movlb	0	; select bank0
  8345     1340  0825               	movf	I2C_SetAddressNackCallback@cb+1,w
  8346     1341  00A1               	movwf	I2C_SetCallback@cb+1
  8347     1342  0824               	movf	I2C_SetAddressNackCallback@cb,w
  8348     1343  00A0               	movwf	I2C_SetCallback@cb
  8349     1344  0826               	movf	I2C_SetAddressNackCallback@ptr,w
  8350     1345  00A2               	movwf	I2C_SetCallback@ptr
  8351     1346  3002               	movlw	2
  8352     1347  3188  2000  3193   	fcall	_I2C_SetCallback
  8353     134A                     l550:
  8354     134A  0008               	return
  8355     134B                     __end_of_I2C_SetAddressNackCallback:
  8356                           
  8357                           	psect	text25
  8358     0800                     __ptext25:	
  8359 ;; *************** function _I2C_SetCallback *****************
  8360 ;; Defined at:
  8361 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  idx             1    wreg     enum E3130
  8364 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
  8365 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8366 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8367 ;;  ptr             1    2[BANK0 ] PTR void 
  8368 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8369 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;  idx             1    3[BANK0 ] enum E3130
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8381 ;;      Params:         0       3       0       0       0       0       0       0
  8382 ;;      Locals:         0       1       0       0       0       0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0
  8384 ;;      Totals:         0       4       0       0       0       0       0       0
  8385 ;;Total ram usage:        4 bytes
  8386 ;; Hardware stack levels used: 1
  8387 ;; Hardware stack levels required when called: 7
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_I2C_SetAddressNackCallback
  8392 ;;		_I2C_SetWriteCollisionCallback
  8393 ;;		_I2C_SetDataNackCallback
  8394 ;;		_I2C_SetTimeoutCallback
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398     0800                     _I2C_SetCallback:	
  8399                           ;psect for function _I2C_SetCallback
  8400                           
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8404                           ;I2C_SetCallback@idx stored from wreg
  8405     0800  0020               	movlb	0	; select bank0
  8406     0801  00A3               	movwf	I2C_SetCallback@idx
  8407     0802                     l3593:
  8408                           
  8409                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8410     0802  0820               	movf	I2C_SetCallback@cb,w
  8411     0803  0421               	iorwf	I2C_SetCallback@cb+1,w
  8412     0804  1903               	btfsc	3,2
  8413     0805  2807               	goto	u2421
  8414     0806  2808               	goto	u2420
  8415     0807                     u2421:
  8416     0807  2819               	goto	l3597
  8417     0808                     u2420:
  8418     0808                     l3595:
  8419                           
  8420                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8421     0808  3523               	lslf	I2C_SetCallback@idx,w
  8422     0809  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8423     080A  0086               	movwf	6
  8424     080B  3001               	movlw	1	; select bank2/3
  8425     080C  0087               	movwf	7
  8426     080D  0820               	movf	I2C_SetCallback@cb,w
  8427     080E  3FC0               	movwi [0]fsr1
  8428     080F  0821               	movf	I2C_SetCallback@cb+1,w
  8429     0810  3FC1               	movwi [1]fsr1
  8430                           
  8431                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8432     0811  0823               	movf	I2C_SetCallback@idx,w
  8433     0812  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8434     0813  0086               	movwf	6
  8435     0814  3001               	movlw	1	; select bank2/3
  8436     0815  0087               	movwf	7
  8437     0816  0822               	movf	I2C_SetCallback@ptr,w
  8438     0817  0081               	movwf	1
  8439                           
  8440                           ;mcc_generated_files/i2c_master.c: 310:     }
  8441     0818  2828               	goto	l564
  8442     0819                     l3597:
  8443                           
  8444                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8445     0819  3523               	lslf	I2C_SetCallback@idx,w
  8446     081A  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
  8447     081B  0086               	movwf	6
  8448     081C  3001               	movlw	1	; select bank2/3
  8449     081D  0087               	movwf	7
  8450     081E  302B               	movlw	low _I2C_CallbackReturnStop
  8451     081F  3FC0               	movwi [0]fsr1
  8452     0820  3012               	movlw	high _I2C_CallbackReturnStop
  8453     0821  3FC1               	movwi [1]fsr1
  8454                           
  8455                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8456     0822  0823               	movf	I2C_SetCallback@idx,w
  8457     0823  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
  8458     0824  0086               	movwf	6
  8459     0825  3001               	movlw	1	; select bank2/3
  8460     0826  0087               	movwf	7
  8461     0827  0181               	clrf	1
  8462     0828                     l564:
  8463     0828  0008               	return
  8464     0829                     __end_of_I2C_SetCallback:
  8465                           
  8466                           	psect	text26
  8467     12A4                     __ptext26:	
  8468 ;; *************** function _I2C_MasterWrite *****************
  8469 ;; Defined at:
  8470 ;;		line 252 in file "mcc_generated_files/i2c_master.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      enum E358
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8484 ;;      Params:         0       0       0       0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0       0       0       0
  8487 ;;      Totals:         0       0       0       0       0       0       0       0
  8488 ;;Total ram usage:        0 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 9
  8491 ;; This function calls:
  8492 ;;		_I2C_MasterOperation
  8493 ;; This function is called by:
  8494 ;;		_I2C_WriteNBytes
  8495 ;;		_I2C_Read1ByteRegister
  8496 ;;		_I2C_Read2ByteRegister
  8497 ;;		_I2C_Write1ByteRegister
  8498 ;;		_I2C_Write2ByteRegister
  8499 ;;		_I2C_ReadDataBlock
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503     12A4                     _I2C_MasterWrite:	
  8504                           ;psect for function _I2C_MasterWrite
  8505                           
  8506     12A4                     l3687:	
  8507                           ;incstack = 0
  8508                           ; Regs used in _I2C_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
  8509                           
  8510                           
  8511                           ;mcc_generated_files/i2c_master.c: 254:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8512     12A4  3000               	movlw	0
  8513     12A5  3194  24F0  3192   	fcall	_I2C_MasterOperation
  8514     12A8                     l534:
  8515     12A8  0008               	return
  8516     12A9                     __end_of_I2C_MasterWrite:
  8517                           
  8518                           	psect	text27
  8519     150E                     __ptext27:	
  8520 ;; *************** function _I2C_ReadNBytes *****************
  8521 ;; Defined at:
  8522 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  address         1    wreg     unsigned char 
  8525 ;;  data            1    4[BANK0 ] PTR unsigned char 
  8526 ;;		 -> ReadData@aData(6), 
  8527 ;;  len             2    5[BANK0 ] unsigned int 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  address         1    7[BANK0 ] unsigned char 
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2, status,0, pclath, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8539 ;;      Params:         0       3       0       0       0       0       0       0
  8540 ;;      Locals:         0       1       0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0
  8542 ;;      Totals:         0       4       0       0       0       0       0       0
  8543 ;;Total ram usage:        4 bytes
  8544 ;; Hardware stack levels used: 1
  8545 ;; Hardware stack levels required when called: 10
  8546 ;; This function calls:
  8547 ;;		_I2C_Close
  8548 ;;		_I2C_MasterRead
  8549 ;;		_I2C_Open
  8550 ;;		_I2C_SetBuffer
  8551 ;; This function is called by:
  8552 ;;		_ReadData
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556     150E                     _I2C_ReadNBytes:	
  8557                           ;psect for function _I2C_ReadNBytes
  8558                           
  8559                           
  8560                           ;incstack = 0
  8561                           ; Regs used in _I2C_ReadNBytes: [wreg+status,2+status,0+pclath+cstack]
  8562                           ;I2C_ReadNBytes@address stored from wreg
  8563     150E  0020               	movlb	0	; select bank0
  8564     150F  00A7               	movwf	I2C_ReadNBytes@address
  8565     1510                     l3853:
  8566     1510                     l3855:	
  8567                           ;mcc_generated_files/examples/i2c_master_example.c: 120: void I2C_ReadNBytes(i2c_address
      +                          _t address, uint8_t *data, size_t len);mcc_generated_files/examples/i2c_master_example.c
      +                          : 121: {;mcc_generated_files/examples/i2c_master_example.c: 122:     while(!I2C_Open(add
      +                          ress));
  8568                           
  8569     1510  0020               	movlb	0	; select bank0
  8570     1511  0827               	movf	I2C_ReadNBytes@address,w
  8571     1512  3197  27BA  3195   	fcall	_I2C_Open
  8572     1515  3A00               	xorlw	0
  8573     1516  1903               	skipnz
  8574     1517  2D19               	goto	u2661
  8575     1518  2D1A               	goto	u2660
  8576     1519                     u2661:
  8577     1519  2D10               	goto	l3855
  8578     151A                     u2660:
  8579     151A                     l3857:
  8580                           
  8581                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  8582     151A  0020               	movlb	0	; select bank0
  8583     151B  0826               	movf	I2C_ReadNBytes@len+1,w
  8584     151C  00A1               	movwf	I2C_SetBuffer@bufferSize+1
  8585     151D  0825               	movf	I2C_ReadNBytes@len,w
  8586     151E  00A0               	movwf	I2C_SetBuffer@bufferSize
  8587     151F  0824               	movf	I2C_ReadNBytes@data,w
  8588     1520  3194  243D  3195   	fcall	_I2C_SetBuffer
  8589                           
  8590                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  8591     1523  3192  229F  3195   	fcall	_I2C_MasterRead
  8592     1526                     l3859:	
  8593                           ;mcc_generated_files/examples/i2c_master_example.c: 125:     while(I2C_BUSY == I2C_Close
      +                          ());
  8594                           
  8595     1526  3194  249E  3195   	fcall	_I2C_Close
  8596     1529  3A01               	xorlw	1
  8597     152A  1903               	skipnz
  8598     152B  2D2D               	goto	u2671
  8599     152C  2D2E               	goto	u2670
  8600     152D                     u2671:
  8601     152D  2D26               	goto	l3859
  8602     152E                     u2670:
  8603     152E                     l80:
  8604     152E  0008               	return
  8605     152F                     __end_of_I2C_ReadNBytes:
  8606                           
  8607                           	psect	text28
  8608     143D                     __ptext28:	
  8609 ;; *************** function _I2C_SetBuffer *****************
  8610 ;; Defined at:
  8611 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  buffer          1    wreg     PTR void 
  8614 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8615 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8616 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8617 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8618 ;;  bufferSize      2    0[BANK0 ] unsigned int 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  buffer          1    2[BANK0 ] PTR void 
  8621 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
  8622 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  8623 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  8624 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  8625 ;; Return value:  Size  Location     Type
  8626 ;;                  1    wreg      void 
  8627 ;; Registers used:
  8628 ;;		wreg
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8634 ;;      Params:         0       2       0       0       0       0       0       0
  8635 ;;      Locals:         0       1       0       0       0       0       0       0
  8636 ;;      Temps:          0       0       0       0       0       0       0       0
  8637 ;;      Totals:         0       3       0       0       0       0       0       0
  8638 ;;Total ram usage:        3 bytes
  8639 ;; Hardware stack levels used: 1
  8640 ;; Hardware stack levels required when called: 7
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		_I2C_WriteNBytes
  8645 ;;		_I2C_ReadNBytes
  8646 ;;		_I2C_Read1ByteRegister
  8647 ;;		_I2C_Read2ByteRegister
  8648 ;;		_I2C_Write1ByteRegister
  8649 ;;		_I2C_Write2ByteRegister
  8650 ;;		_I2C_ReadDataBlock
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654     143D                     _I2C_SetBuffer:	
  8655                           ;psect for function _I2C_SetBuffer
  8656                           
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _I2C_SetBuffer: [wreg]
  8660                           ;I2C_SetBuffer@buffer stored from wreg
  8661     143D  0020               	movlb	0	; select bank0
  8662     143E  00A2               	movwf	I2C_SetBuffer@buffer
  8663     143F                     l3679:
  8664                           
  8665                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8666     143F  0022               	movlb	2	; select bank2
  8667     1440  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
  8668     1441  2C43               	goto	u2501
  8669     1442  2C44               	goto	u2500
  8670     1443                     u2501:
  8671     1443  2C51               	goto	l541
  8672     1444                     u2500:
  8673     1444                     l3681:
  8674                           
  8675                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8676     1444  0020               	movlb	0	; select bank0
  8677     1445  0822               	movf	I2C_SetBuffer@buffer,w
  8678     1446  0022               	movlb	2	; select bank2
  8679     1447  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
  8680                           
  8681                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8682     1448  0020               	movlb	0	; select bank0
  8683     1449  0821               	movf	I2C_SetBuffer@bufferSize+1,w
  8684     144A  0022               	movlb	2	; select bank2
  8685     144B  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
  8686     144C  0020               	movlb	0	; select bank0
  8687     144D  0820               	movf	I2C_SetBuffer@bufferSize,w
  8688     144E  0022               	movlb	2	; select bank2
  8689     144F  00B8               	movwf	(_I2C_Status^(0+256)+24)
  8690     1450                     l3683:
  8691                           
  8692                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8693     1450  11BC               	bcf	(_I2C_Status^(0+256)+28),3
  8694     1451                     l541:
  8695     1451  0008               	return
  8696     1452                     __end_of_I2C_SetBuffer:
  8697                           
  8698                           	psect	text29
  8699     17BA                     __ptext29:	
  8700 ;; *************** function _I2C_Open *****************
  8701 ;; Defined at:
  8702 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  address         1    wreg     unsigned char 
  8705 ;; Auto vars:     Size  Location     Type
  8706 ;;  address         1    2[BANK0 ] unsigned char 
  8707 ;;  returnValue     1    3[BANK0 ] enum E358
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      enum E358
  8710 ;; Registers used:
  8711 ;;		wreg, status,2, status,0, pclath, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8717 ;;      Params:         0       0       0       0       0       0       0       0
  8718 ;;      Locals:         0       2       0       0       0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0
  8720 ;;      Totals:         0       2       0       0       0       0       0       0
  8721 ;;Total ram usage:        2 bytes
  8722 ;; Hardware stack levels used: 1
  8723 ;; Hardware stack levels required when called: 8
  8724 ;; This function calls:
  8725 ;;		_I2C_MasterClearIrq
  8726 ;;		_I2C_MasterEnableIrq
  8727 ;;		_I2C_MasterOpen
  8728 ;;		_I2C_SetInterruptHandler
  8729 ;; This function is called by:
  8730 ;;		_I2C_WriteNBytes
  8731 ;;		_I2C_ReadNBytes
  8732 ;;		_I2C_Read1ByteRegister
  8733 ;;		_I2C_Read2ByteRegister
  8734 ;;		_I2C_Write1ByteRegister
  8735 ;;		_I2C_Write2ByteRegister
  8736 ;;		_I2C_ReadDataBlock
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740     17BA                     _I2C_Open:	
  8741                           ;psect for function _I2C_Open
  8742                           
  8743                           
  8744                           ;incstack = 0
  8745                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  8746                           ;I2C_Open@address stored from wreg
  8747     17BA  0020               	movlb	0	; select bank0
  8748     17BB  00A2               	movwf	I2C_Open@address
  8749     17BC                     l3641:
  8750                           
  8751                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8752     17BC  01A3               	clrf	I2C_Open@returnValue
  8753     17BD  0AA3               	incf	I2C_Open@returnValue,f
  8754                           
  8755                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8756     17BE  0022               	movlb	2	; select bank2
  8757     17BF  193C               	btfsc	(_I2C_Status^(0+256)+28),2
  8758     17C0  2FC2               	goto	u2491
  8759     17C1  2FC3               	goto	u2490
  8760     17C2                     u2491:
  8761     17C2  2FFD               	goto	l3673
  8762     17C3                     u2490:
  8763     17C3                     l3643:
  8764                           
  8765                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8766     17C3  0020               	movlb	0	; select bank0
  8767     17C4  0822               	movf	I2C_Open@address,w
  8768     17C5  0022               	movlb	2	; select bank2
  8769     17C6  00B6               	movwf	(_I2C_Status^(0+256)+22)
  8770     17C7                     l3645:
  8771                           
  8772                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8773     17C7  10BC               	bcf	(_I2C_Status^(0+256)+28),1
  8774     17C8                     l3647:
  8775                           
  8776                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8777     17C8  153C               	bsf	(_I2C_Status^(0+256)+28),2
  8778     17C9                     l3649:
  8779                           
  8780                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8781     17C9  103C               	bcf	(_I2C_Status^(0+256)+28),0
  8782                           
  8783                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8784     17CA  300E               	movlw	14
  8785     17CB  00BA               	movwf	(_I2C_Status^(0+256)+26)
  8786                           
  8787                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8788     17CC  30F4               	movlw	244
  8789     17CD  00B4               	movwf	(_I2C_Status^(0+256)+20)
  8790     17CE  3001               	movlw	1
  8791     17CF  00B5               	movwf	(_I2C_Status^(0+256)+21)
  8792     17D0                     l3651:
  8793                           
  8794                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8795     17D0  15BC               	bsf	(_I2C_Status^(0+256)+28),3
  8796                           
  8797                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8798     17D1  302B               	movlw	low _I2C_CallbackReturnStop
  8799     17D2  00A0               	movwf	_I2C_Status^(0+256)
  8800     17D3  3012               	movlw	high _I2C_CallbackReturnStop
  8801     17D4  00A1               	movwf	(_I2C_Status^(0+256)+1)
  8802     17D5                     l3653:
  8803                           
  8804                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8805     17D5  01AC               	clrf	(low ((_I2C_Status| (0+256)+12)))^0
  8806     17D6                     l3655:
  8807                           
  8808                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8809     17D6  302B               	movlw	low _I2C_CallbackReturnStop
  8810     17D7  00A2               	movwf	(low ((_I2C_Status| (0+256)+2)))^0
  8811     17D8  3012               	movlw	high _I2C_CallbackReturnStop
  8812     17D9  00A3               	movwf	((low ((_I2C_Status| (0+256)+2)))^0+1)
  8813                           
  8814                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8815     17DA  01AD               	clrf	(low ((_I2C_Status| (0+256)+13)))^0
  8816     17DB                     l3657:
  8817                           
  8818                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8819     17DB  302B               	movlw	low _I2C_CallbackReturnStop
  8820     17DC  00A4               	movwf	(low ((_I2C_Status| (0+256)+4)))^0
  8821     17DD  3012               	movlw	high _I2C_CallbackReturnStop
  8822     17DE  00A5               	movwf	((low ((_I2C_Status| (0+256)+4)))^0+1)
  8823     17DF                     l3659:
  8824                           
  8825                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8826     17DF  01AE               	clrf	(low ((_I2C_Status| (0+256)+14)))^0
  8827                           
  8828                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8829     17E0  302B               	movlw	low _I2C_CallbackReturnStop
  8830     17E1  00A6               	movwf	(low ((_I2C_Status| (0+256)+6)))^0
  8831     17E2  3012               	movlw	high _I2C_CallbackReturnStop
  8832     17E3  00A7               	movwf	((low ((_I2C_Status| (0+256)+6)))^0+1)
  8833     17E4                     l3661:
  8834                           
  8835                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8836     17E4  01AF               	clrf	(low ((_I2C_Status| (0+256)+15)))^0
  8837     17E5                     l3663:
  8838                           
  8839                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8840     17E5  3002               	movlw	low _I2C_CallbackReturnReset
  8841     17E6  00A8               	movwf	(low ((_I2C_Status| (0+256)+8)))^0
  8842     17E7  3000               	movlw	high _I2C_CallbackReturnReset
  8843     17E8  00A9               	movwf	((low ((_I2C_Status| (0+256)+8)))^0+1)
  8844                           
  8845                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8846     17E9  01B0               	clrf	(low ((_I2C_Status| (0+256)+16)))^0
  8847     17EA                     l3665:
  8848                           
  8849                           ;mcc_generated_files/i2c_master.c: 202:         I2C_SetInterruptHandler(I2C_MasterIsr);
  8850     17EA  3061               	movlw	low _I2C_MasterIsr
  8851     17EB  0020               	movlb	0	; select bank0
  8852     17EC  00A0               	movwf	I2C_SetInterruptHandler@InterruptHandler
  8853     17ED  3012               	movlw	high _I2C_MasterIsr
  8854     17EE  00A1               	movwf	I2C_SetInterruptHandler@InterruptHandler+1
  8855     17EF  3192  22D7  3197   	fcall	_I2C_SetInterruptHandler
  8856     17F2                     l3667:
  8857                           
  8858                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterClearIrq();
  8859     17F2  3192  2242  3197   	fcall	_I2C_MasterClearIrq
  8860     17F5                     l3669:
  8861                           
  8862                           ;mcc_generated_files/i2c_master.c: 204:         I2C_MasterOpen();
  8863     17F5  3193  237C  3197   	fcall	_I2C_MasterOpen
  8864     17F8                     l3671:
  8865                           
  8866                           ;mcc_generated_files/i2c_master.c: 205:         I2C_MasterEnableIrq();
  8867     17F8  3192  224E  3197   	fcall	_I2C_MasterEnableIrq
  8868                           
  8869                           ;mcc_generated_files/i2c_master.c: 206:         returnValue = I2C_NOERR;
  8870     17FB  0020               	movlb	0	; select bank0
  8871     17FC  01A3               	clrf	I2C_Open@returnValue
  8872     17FD                     l3673:
  8873                           
  8874                           ;mcc_generated_files/i2c_master.c: 208:     return returnValue;
  8875     17FD  0020               	movlb	0	; select bank0
  8876     17FE  0823               	movf	I2C_Open@returnValue,w
  8877     17FF                     l518:
  8878     17FF  0008               	return
  8879     1800                     __end_of_I2C_Open:
  8880                           
  8881                           	psect	text30
  8882     12D7                     __ptext30:	
  8883 ;; *************** function _I2C_SetInterruptHandler *****************
  8884 ;; Defined at:
  8885 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8888 ;;		 -> I2C_MasterIsr(1), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8900 ;;      Params:         0       2       0       0       0       0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0       0
  8903 ;;      Totals:         0       2       0       0       0       0       0       0
  8904 ;;Total ram usage:        2 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 7
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;;		_I2C_Open
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914     12D7                     _I2C_SetInterruptHandler:	
  8915                           ;psect for function _I2C_SetInterruptHandler
  8916                           
  8917     12D7                     l3553:	
  8918                           ;incstack = 0
  8919                           ; Regs used in _I2C_SetInterruptHandler: [wreg]
  8920                           
  8921                           
  8922                           ;mcc_generated_files/i2c_master.c: 299: void I2C_SetInterruptHandler(void (* InterruptHa
      +                          ndler)(void));mcc_generated_files/i2c_master.c: 300: {;mcc_generated_files/i2c_master.c:
      +                           301:     MSSP_InterruptHandler = InterruptHandler;
  8923     12D7  0020               	movlb	0	; select bank0
  8924     12D8  0821               	movf	I2C_SetInterruptHandler@InterruptHandler+1,w
  8925     12D9  0021               	movlb	1	; select bank1
  8926     12DA  00E2               	movwf	(_MSSP_InterruptHandler+1)^(0+128)
  8927     12DB  0020               	movlb	0	; select bank0
  8928     12DC  0820               	movf	I2C_SetInterruptHandler@InterruptHandler,w
  8929     12DD  0021               	movlb	1	; select bank1
  8930     12DE  00E1               	movwf	_MSSP_InterruptHandler^(0+128)
  8931     12DF                     l559:
  8932     12DF  0008               	return
  8933     12E0                     __end_of_I2C_SetInterruptHandler:
  8934                           
  8935                           	psect	text31
  8936     137C                     __ptext31:	
  8937 ;; *************** function _I2C_MasterOpen *****************
  8938 ;; Defined at:
  8939 ;;		line 544 in file "mcc_generated_files/i2c_master.c"
  8940 ;; Parameters:    Size  Location     Type
  8941 ;;		None
  8942 ;; Auto vars:     Size  Location     Type
  8943 ;;		None
  8944 ;; Return value:  Size  Location     Type
  8945 ;;                  1    wreg      _Bool 
  8946 ;; Registers used:
  8947 ;;		wreg, status,2
  8948 ;; Tracked objects:
  8949 ;;		On entry : 0/0
  8950 ;;		On exit  : 0/0
  8951 ;;		Unchanged: 0/0
  8952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8953 ;;      Params:         0       0       0       0       0       0       0       0
  8954 ;;      Locals:         0       0       0       0       0       0       0       0
  8955 ;;      Temps:          0       0       0       0       0       0       0       0
  8956 ;;      Totals:         0       0       0       0       0       0       0       0
  8957 ;;Total ram usage:        0 bytes
  8958 ;; Hardware stack levels used: 1
  8959 ;; Hardware stack levels required when called: 7
  8960 ;; This function calls:
  8961 ;;		Nothing
  8962 ;; This function is called by:
  8963 ;;		_I2C_Open
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967     137C                     _I2C_MasterOpen:	
  8968                           ;psect for function _I2C_MasterOpen
  8969                           
  8970     137C                     l3557:	
  8971                           ;incstack = 0
  8972                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  8973                           
  8974                           
  8975                           ;mcc_generated_files/i2c_master.c: 546:     if(!SSPCON1bits.SSPEN)
  8976     137C  0024               	movlb	4	; select bank4
  8977     137D  1A95               	btfsc	21,5	;volatile
  8978     137E  2B80               	goto	u2391
  8979     137F  2B81               	goto	u2390
  8980     1380                     u2391:
  8981     1380  2B88               	goto	l683
  8982     1381                     u2390:
  8983     1381                     l3559:
  8984                           
  8985                           ;mcc_generated_files/i2c_master.c: 547:     {;mcc_generated_files/i2c_master.c: 548:    
      +                               SSPSTAT = 0x00;
  8986     1381  0194               	clrf	20	;volatile
  8987     1382                     l3561:
  8988                           
  8989                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON1 = 0x08;
  8990     1382  3008               	movlw	8
  8991     1383  0095               	movwf	21	;volatile
  8992     1384                     l3563:
  8993                           
  8994                           ;mcc_generated_files/i2c_master.c: 550:         SSPCON2 = 0x00;
  8995     1384  0196               	clrf	22	;volatile
  8996                           
  8997                           ;mcc_generated_files/i2c_master.c: 551:         SSPADD = 0x13;
  8998     1385  3013               	movlw	19
  8999     1386  0092               	movwf	18	;volatile
  9000     1387                     l3565:
  9001                           
  9002                           ;mcc_generated_files/i2c_master.c: 552:         SSPCON1bits.SSPEN = 1;
  9003     1387  1695               	bsf	21,5	;volatile
  9004     1388                     l683:
  9005     1388  0008               	return
  9006     1389                     __end_of_I2C_MasterOpen:
  9007                           
  9008                           	psect	text32
  9009     124E                     __ptext32:	
  9010 ;; *************** function _I2C_MasterEnableIrq *****************
  9011 ;; Defined at:
  9012 ;;		line 627 in file "mcc_generated_files/i2c_master.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;		None
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		None
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9026 ;;      Params:         0       0       0       0       0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0
  9029 ;;      Totals:         0       0       0       0       0       0       0       0
  9030 ;;Total ram usage:        0 bytes
  9031 ;; Hardware stack levels used: 1
  9032 ;; Hardware stack levels required when called: 7
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_I2C_Open
  9037 ;;		_I2C_SetTimeOut
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041     124E                     _I2C_MasterEnableIrq:	
  9042                           ;psect for function _I2C_MasterEnableIrq
  9043                           
  9044     124E                     l3569:	
  9045                           ;incstack = 0
  9046                           ; Regs used in _I2C_MasterEnableIrq: []
  9047                           
  9048                           
  9049                           ;mcc_generated_files/i2c_master.c: 629:     PIE1bits.SSPIE = 1;
  9050     124E  0021               	movlb	1	; select bank1
  9051     124F  1591               	bsf	17,3	;volatile
  9052     1250                     l725:
  9053     1250  0008               	return
  9054     1251                     __end_of_I2C_MasterEnableIrq:
  9055                           
  9056                           	psect	text33
  9057     129F                     __ptext33:	
  9058 ;; *************** function _I2C_MasterRead *****************
  9059 ;; Defined at:
  9060 ;;		line 247 in file "mcc_generated_files/i2c_master.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;		None
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;		None
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      enum E358
  9067 ;; Registers used:
  9068 ;;		wreg, status,2, status,0, pclath, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9074 ;;      Params:         0       0       0       0       0       0       0       0
  9075 ;;      Locals:         0       0       0       0       0       0       0       0
  9076 ;;      Temps:          0       0       0       0       0       0       0       0
  9077 ;;      Totals:         0       0       0       0       0       0       0       0
  9078 ;;Total ram usage:        0 bytes
  9079 ;; Hardware stack levels used: 1
  9080 ;; Hardware stack levels required when called: 9
  9081 ;; This function calls:
  9082 ;;		_I2C_MasterOperation
  9083 ;; This function is called by:
  9084 ;;		_I2C_ReadNBytes
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088     129F                     _I2C_MasterRead:	
  9089                           ;psect for function _I2C_MasterRead
  9090                           
  9091     129F                     l3709:	
  9092                           ;incstack = 0
  9093                           ; Regs used in _I2C_MasterRead: [wreg+status,2+status,0+pclath+cstack]
  9094                           
  9095                           
  9096                           ;mcc_generated_files/i2c_master.c: 249:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9097     129F  3001               	movlw	1
  9098     12A0  3194  24F0  3192   	fcall	_I2C_MasterOperation
  9099     12A3                     l531:
  9100     12A3  0008               	return
  9101     12A4                     __end_of_I2C_MasterRead:
  9102                           
  9103                           	psect	text34
  9104     14F0                     __ptext34:	
  9105 ;; *************** function _I2C_MasterOperation *****************
  9106 ;; Defined at:
  9107 ;;		line 226 in file "mcc_generated_files/i2c_master.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  read            1    wreg     _Bool 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  read            1    0[BANK0 ] _Bool 
  9112 ;;  returnValue     1    1[BANK0 ] enum E358
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      enum E358
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0, pclath, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9122 ;;      Params:         0       0       0       0       0       0       0       0
  9123 ;;      Locals:         0       2       0       0       0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0
  9125 ;;      Totals:         0       2       0       0       0       0       0       0
  9126 ;;Total ram usage:        2 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 8
  9129 ;; This function calls:
  9130 ;;		_I2C_MasterStart
  9131 ;; This function is called by:
  9132 ;;		_I2C_MasterRead
  9133 ;;		_I2C_MasterWrite
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137     14F0                     _I2C_MasterOperation:	
  9138                           ;psect for function _I2C_MasterOperation
  9139                           
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in _I2C_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
  9143                           ;I2C_MasterOperation@read stored from wreg
  9144     14F0  0020               	movlb	0	; select bank0
  9145     14F1  00A0               	movwf	I2C_MasterOperation@read
  9146     14F2                     l3575:
  9147                           
  9148                           ;mcc_generated_files/i2c_master.c: 226: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 227: {;mcc_generated_files/i2c_master.c: 228:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9149     14F2  01A1               	clrf	I2C_MasterOperation@returnValue
  9150     14F3  0AA1               	incf	I2C_MasterOperation@returnValue,f
  9151                           
  9152                           ;mcc_generated_files/i2c_master.c: 229:     if(!I2C_Status.busy)
  9153     14F4  0022               	movlb	2	; select bank2
  9154     14F5  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9155     14F6  2CF8               	goto	u2401
  9156     14F7  2CF9               	goto	u2400
  9157     14F8                     u2401:
  9158     14F8  2D0B               	goto	l3589
  9159     14F9                     u2400:
  9160     14F9                     l3577:
  9161                           
  9162                           ;mcc_generated_files/i2c_master.c: 230:     {;mcc_generated_files/i2c_master.c: 231:    
      +                               I2C_Status.busy = 1;
  9163     14F9  14BC               	bsf	(_I2C_Status^(0+256)+28),1
  9164     14FA                     l3579:
  9165                           
  9166                           ;mcc_generated_files/i2c_master.c: 232:         returnValue = I2C_NOERR;
  9167     14FA  0020               	movlb	0	; select bank0
  9168     14FB  01A1               	clrf	I2C_MasterOperation@returnValue
  9169     14FC                     l3581:
  9170                           
  9171                           ;mcc_generated_files/i2c_master.c: 234:         if(read)
  9172     14FC  0820               	movf	I2C_MasterOperation@read,w
  9173     14FD  1903               	btfsc	3,2
  9174     14FE  2D00               	goto	u2411
  9175     14FF  2D01               	goto	u2410
  9176     1500                     u2411:
  9177     1500  2D05               	goto	l3585
  9178     1501                     u2410:
  9179     1501                     l3583:
  9180                           
  9181                           ;mcc_generated_files/i2c_master.c: 235:         {;mcc_generated_files/i2c_master.c: 236:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9182     1501  0022               	movlb	2	; select bank2
  9183     1502  01BA               	clrf	(_I2C_Status^(0+256)+26)
  9184     1503  0ABA               	incf	(_I2C_Status^(0+256)+26),f
  9185                           
  9186                           ;mcc_generated_files/i2c_master.c: 237:         }
  9187     1504  2D08               	goto	l3587
  9188     1505                     l3585:
  9189                           
  9190                           ;mcc_generated_files/i2c_master.c: 239:         {;mcc_generated_files/i2c_master.c: 240:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9191     1505  3002               	movlw	2
  9192     1506  0022               	movlb	2	; select bank2
  9193     1507  00BA               	movwf	(_I2C_Status^(0+256)+26)
  9194     1508                     l3587:
  9195                           
  9196                           ;mcc_generated_files/i2c_master.c: 242:         I2C_MasterStart();
  9197     1508  3192  224B  3194   	fcall	_I2C_MasterStart
  9198     150B                     l3589:
  9199                           
  9200                           ;mcc_generated_files/i2c_master.c: 244:     return returnValue;
  9201     150B  0020               	movlb	0	; select bank0
  9202     150C  0821               	movf	I2C_MasterOperation@returnValue,w
  9203     150D                     l528:
  9204     150D  0008               	return
  9205     150E                     __end_of_I2C_MasterOperation:
  9206                           
  9207                           	psect	text35
  9208     124B                     __ptext35:	
  9209 ;; *************** function _I2C_MasterStart *****************
  9210 ;; Defined at:
  9211 ;;		line 589 in file "mcc_generated_files/i2c_master.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		None
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9225 ;;      Params:         0       0       0       0       0       0       0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used: 1
  9231 ;; Hardware stack levels required when called: 7
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		_I2C_MasterOperation
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239     124B                     _I2C_MasterStart:	
  9240                           ;psect for function _I2C_MasterStart
  9241                           
  9242     124B                     l3487:	
  9243                           ;incstack = 0
  9244                           ; Regs used in _I2C_MasterStart: []
  9245                           
  9246                           
  9247                           ;mcc_generated_files/i2c_master.c: 591:     SSPCON2bits.SEN = 1;
  9248     124B  0024               	movlb	4	; select bank4
  9249     124C  1416               	bsf	22,0	;volatile
  9250     124D                     l704:
  9251     124D  0008               	return
  9252     124E                     __end_of_I2C_MasterStart:
  9253                           
  9254                           	psect	text36
  9255     149E                     __ptext36:	
  9256 ;; *************** function _I2C_Close *****************
  9257 ;; Defined at:
  9258 ;;		line 211 in file "mcc_generated_files/i2c_master.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;		None
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;  returnValue     1    0[BANK0 ] enum E358
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      enum E358
  9265 ;; Registers used:
  9266 ;;		wreg, status,2, status,0, pclath, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9272 ;;      Params:         0       0       0       0       0       0       0       0
  9273 ;;      Locals:         0       1       0       0       0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0
  9275 ;;      Totals:         0       1       0       0       0       0       0       0
  9276 ;;Total ram usage:        1 bytes
  9277 ;; Hardware stack levels used: 1
  9278 ;; Hardware stack levels required when called: 8
  9279 ;; This function calls:
  9280 ;;		_I2C_MasterClearIrq
  9281 ;;		_I2C_MasterClose
  9282 ;;		_I2C_MasterDisableIrq
  9283 ;; This function is called by:
  9284 ;;		_I2C_WriteNBytes
  9285 ;;		_I2C_ReadNBytes
  9286 ;;		_I2C_Read1ByteRegister
  9287 ;;		_I2C_Read2ByteRegister
  9288 ;;		_I2C_Write1ByteRegister
  9289 ;;		_I2C_Write2ByteRegister
  9290 ;;		_I2C_ReadDataBlock
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294     149E                     _I2C_Close:	
  9295                           ;psect for function _I2C_Close
  9296                           
  9297     149E                     l3691:	
  9298                           ;incstack = 0
  9299                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  9300                           
  9301                           
  9302                           ;mcc_generated_files/i2c_master.c: 213:     i2c_error_t returnValue = I2C_BUSY;
  9303     149E  0020               	movlb	0	; select bank0
  9304     149F  01A0               	clrf	I2C_Close@returnValue
  9305     14A0  0AA0               	incf	I2C_Close@returnValue,f
  9306                           
  9307                           ;mcc_generated_files/i2c_master.c: 214:     if(!I2C_Status.busy)
  9308     14A1  0022               	movlb	2	; select bank2
  9309     14A2  18BC               	btfsc	(_I2C_Status^(0+256)+28),1
  9310     14A3  2CA5               	goto	u2511
  9311     14A4  2CA6               	goto	u2510
  9312     14A5                     u2511:
  9313     14A5  2CB6               	goto	l3705
  9314     14A6                     u2510:
  9315     14A6                     l3693:
  9316                           
  9317                           ;mcc_generated_files/i2c_master.c: 215:     {;mcc_generated_files/i2c_master.c: 216:    
      +                               I2C_Status.inUse = 0;
  9318     14A6  113C               	bcf	(_I2C_Status^(0+256)+28),2
  9319     14A7                     l3695:
  9320                           
  9321                           ;mcc_generated_files/i2c_master.c: 217:         I2C_Status.address = 0xff;
  9322     14A7  30FF               	movlw	255
  9323     14A8  00B6               	movwf	(_I2C_Status^(0+256)+22)
  9324     14A9                     l3697:
  9325                           
  9326                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClearIrq();
  9327     14A9  3192  2242  3194   	fcall	_I2C_MasterClearIrq
  9328     14AC                     l3699:
  9329                           
  9330                           ;mcc_generated_files/i2c_master.c: 219:         I2C_MasterDisableIrq();
  9331     14AC  3192  2248  3194   	fcall	_I2C_MasterDisableIrq
  9332     14AF                     l3701:
  9333                           
  9334                           ;mcc_generated_files/i2c_master.c: 220:         I2C_MasterClose();
  9335     14AF  3192  2245  3194   	fcall	_I2C_MasterClose
  9336     14B2                     l3703:
  9337                           
  9338                           ;mcc_generated_files/i2c_master.c: 221:         returnValue = I2C_Status.error;
  9339     14B2  0022               	movlb	2	; select bank2
  9340     14B3  083B               	movf	(_I2C_Status^(0+256)+27),w
  9341     14B4  0020               	movlb	0	; select bank0
  9342     14B5  00A0               	movwf	I2C_Close@returnValue
  9343     14B6                     l3705:
  9344                           
  9345                           ;mcc_generated_files/i2c_master.c: 223:     return returnValue;
  9346     14B6  0020               	movlb	0	; select bank0
  9347     14B7  0820               	movf	I2C_Close@returnValue,w
  9348     14B8                     l522:
  9349     14B8  0008               	return
  9350     14B9                     __end_of_I2C_Close:
  9351                           
  9352                           	psect	text37
  9353     1248                     __ptext37:	
  9354 ;; *************** function _I2C_MasterDisableIrq *****************
  9355 ;; Defined at:
  9356 ;;		line 637 in file "mcc_generated_files/i2c_master.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		None
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9370 ;;      Params:         0       0       0       0       0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0
  9373 ;;      Totals:         0       0       0       0       0       0       0       0
  9374 ;;Total ram usage:        0 bytes
  9375 ;; Hardware stack levels used: 1
  9376 ;; Hardware stack levels required when called: 7
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_I2C_Close
  9381 ;;		_I2C_SetTimeOut
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385     1248                     _I2C_MasterDisableIrq:	
  9386                           ;psect for function _I2C_MasterDisableIrq
  9387                           
  9388     1248                     l3571:	
  9389                           ;incstack = 0
  9390                           ; Regs used in _I2C_MasterDisableIrq: []
  9391                           
  9392                           
  9393                           ;mcc_generated_files/i2c_master.c: 639:     PIE1bits.SSPIE = 0;
  9394     1248  0021               	movlb	1	; select bank1
  9395     1249  1191               	bcf	17,3	;volatile
  9396     124A                     l731:
  9397     124A  0008               	return
  9398     124B                     __end_of_I2C_MasterDisableIrq:
  9399                           
  9400                           	psect	text38
  9401     1245                     __ptext38:	
  9402 ;; *************** function _I2C_MasterClose *****************
  9403 ;; Defined at:
  9404 ;;		line 558 in file "mcc_generated_files/i2c_master.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;		None
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		None
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9418 ;;      Params:         0       0       0       0       0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0
  9421 ;;      Totals:         0       0       0       0       0       0       0       0
  9422 ;;Total ram usage:        0 bytes
  9423 ;; Hardware stack levels used: 1
  9424 ;; Hardware stack levels required when called: 7
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_I2C_Close
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432     1245                     _I2C_MasterClose:	
  9433                           ;psect for function _I2C_MasterClose
  9434                           
  9435     1245                     l3573:	
  9436                           ;incstack = 0
  9437                           ; Regs used in _I2C_MasterClose: []
  9438                           
  9439                           
  9440                           ;mcc_generated_files/i2c_master.c: 561:     SSPCON1bits.SSPEN = 0;
  9441     1245  0024               	movlb	4	; select bank4
  9442     1246  1295               	bcf	21,5	;volatile
  9443     1247                     l686:
  9444     1247  0008               	return
  9445     1248                     __end_of_I2C_MasterClose:
  9446                           
  9447                           	psect	text39
  9448     1242                     __ptext39:	
  9449 ;; *************** function _I2C_MasterClearIrq *****************
  9450 ;; Defined at:
  9451 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;		None
  9454 ;; Auto vars:     Size  Location     Type
  9455 ;;		None
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		None
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9465 ;;      Params:         0       0       0       0       0       0       0       0
  9466 ;;      Locals:         0       0       0       0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0
  9468 ;;      Totals:         0       0       0       0       0       0       0       0
  9469 ;;Total ram usage:        0 bytes
  9470 ;; Hardware stack levels used: 1
  9471 ;; Hardware stack levels required when called: 7
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_I2C_Open
  9476 ;;		_I2C_Close
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480     1242                     _I2C_MasterClearIrq:	
  9481                           ;psect for function _I2C_MasterClearIrq
  9482                           
  9483     1242                     l3555:	
  9484                           ;incstack = 0
  9485                           ; Regs used in _I2C_MasterClearIrq: []
  9486                           
  9487                           
  9488                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  9489     1242  0020               	movlb	0	; select bank0
  9490     1243  1191               	bcf	17,3	;volatile
  9491     1244                     l734:
  9492     1244  0008               	return
  9493     1245                     __end_of_I2C_MasterClearIrq:
  9494                           
  9495                           	psect	text40
  9496     1419                     __ptext40:	
  9497 ;; *************** function _Task_MB *****************
  9498 ;; Defined at:
  9499 ;;		line 256 in file "Mobbus_Slave.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9513 ;;      Params:         0       0       0       0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0
  9516 ;;      Totals:         0       0       0       0       0       0       0       0
  9517 ;;Total ram usage:        0 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; Hardware stack levels required when called: 12
  9520 ;; This function calls:
  9521 ;;		_ModbusSlave_Init
  9522 ;;		_ModbusSlave_Process
  9523 ;; This function is called by:
  9524 ;;		_App_Process
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528     1419                     _Task_MB:	
  9529                           ;psect for function _Task_MB
  9530                           
  9531     1419                     l4991:	
  9532                           ;incstack = 0
  9533                           ; Regs used in _Task_MB: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9534                           
  9535                           
  9536                           ;Mobbus_Slave.c: 257:     static _Bool f_Modbus_Init = 0;;Mobbus_Slave.c: 258:     if (!
      +                          f_Modbus_Init) {
  9537     1419  087C               	movf	Task_MB@f_Modbus_Init,w
  9538     141A  1D03               	btfss	3,2
  9539     141B  2C1D               	goto	u4301
  9540     141C  2C1E               	goto	u4300
  9541     141D                     u4301:
  9542     141D  2C26               	goto	l4997
  9543     141E                     u4300:
  9544     141E                     l4993:
  9545                           
  9546                           ;Mobbus_Slave.c: 259:         ModbusSlave_Init(SW_Ad);
  9547     141E  0020               	movlb	0	; select bank0
  9548     141F  0869               	movf	_SW_Ad,w
  9549     1420  3188  2070  3194   	fcall	_ModbusSlave_Init
  9550     1423                     l4995:
  9551                           
  9552                           ;Mobbus_Slave.c: 260:         f_Modbus_Init = 1;
  9553     1423  01FC               	clrf	Task_MB@f_Modbus_Init
  9554     1424  0AFC               	incf	Task_MB@f_Modbus_Init,f
  9555                           
  9556                           ;Mobbus_Slave.c: 261:     } else {
  9557     1425  2C29               	goto	l987
  9558     1426                     l4997:
  9559                           
  9560                           ;Mobbus_Slave.c: 262:         ModbusSlave_Process();
  9561     1426  3194  2484  3194   	fcall	_ModbusSlave_Process
  9562     1429                     l987:
  9563     1429  0008               	return
  9564     142A                     __end_of_Task_MB:
  9565                           
  9566                           	psect	text41
  9567     1484                     __ptext41:	
  9568 ;; *************** function _ModbusSlave_Process *****************
  9569 ;; Defined at:
  9570 ;;		line 247 in file "Mobbus_Slave.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;		None
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;  state           1    0        unsigned char 
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9584 ;;      Params:         0       0       0       0       0       0       0       0
  9585 ;;      Locals:         0       0       0       0       0       0       0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0
  9587 ;;      Totals:         0       0       0       0       0       0       0       0
  9588 ;;Total ram usage:        0 bytes
  9589 ;; Hardware stack levels used: 1
  9590 ;; Hardware stack levels required when called: 11
  9591 ;; This function calls:
  9592 ;;		_ModbusRTU_Slave_Poll
  9593 ;; This function is called by:
  9594 ;;		_Task_MB
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598     1484                     _ModbusSlave_Process:	
  9599                           ;psect for function _ModbusSlave_Process
  9600                           
  9601     1484                     l4783:	
  9602                           ;incstack = 0
  9603                           ; Regs used in _ModbusSlave_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9604                           
  9605     1484                     l4785:
  9606                           
  9607                           ;Mobbus_Slave.c: 250:     MB_Register[0] = SensorAmbient.T.Val16;
  9608     1484  0021               	movlb	1	; select bank1
  9609     1485  085C               	movf	(_SensorAmbient+1)^(0+128),w
  9610     1486  0022               	movlb	2	; select bank2
  9611     1487  00DE               	movwf	(_MB_Register+1)^(0+256)
  9612     1488  0021               	movlb	1	; select bank1
  9613     1489  085B               	movf	_SensorAmbient^(0+128),w
  9614     148A  0022               	movlb	2	; select bank2
  9615     148B  00DD               	movwf	_MB_Register^(0+256)
  9616     148C                     l4787:
  9617                           
  9618                           ;Mobbus_Slave.c: 251:     MB_Register[1] = SensorAmbient.H.Val16;
  9619     148C  0021               	movlb	1	; select bank1
  9620     148D  085E               	movf	((_SensorAmbient+1)^(0+128)+2),w
  9621     148E  0022               	movlb	2	; select bank2
  9622     148F  00E0               	movwf	((_MB_Register+1)^(0+256)+2)
  9623     1490  0021               	movlb	1	; select bank1
  9624     1491  085D               	movf	(_SensorAmbient^(0+128)+2),w
  9625     1492  0022               	movlb	2	; select bank2
  9626     1493  00DF               	movwf	(_MB_Register^(0+256)+2)
  9627     1494                     l4789:
  9628     1494  3002               	movlw	2
  9629     1495  0020               	movlb	0	; select bank0
  9630     1496  00D4               	movwf	ModbusRTU_Slave_Poll@size
  9631     1497  3000               	movlw	0
  9632     1498  00D5               	movwf	ModbusRTU_Slave_Poll@size+1
  9633     1499  305D               	movlw	(low (_MB_Register| (0+256)))& (0+255)
  9634     149A  3187  2722  3194   	fcall	_ModbusRTU_Slave_Poll
  9635     149D                     l980:
  9636     149D  0008               	return
  9637     149E                     __end_of_ModbusSlave_Process:
  9638                           
  9639                           	psect	text42
  9640     0722                     __ptext42:	
  9641 ;; *************** function _ModbusRTU_Slave_Poll *****************
  9642 ;; Defined at:
  9643 ;;		line 125 in file "Mobbus_Slave.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  reg             1    wreg     PTR unsigned short 
  9646 ;;		 -> MB_Register(4), 
  9647 ;;  size            2   52[BANK0 ] unsigned short 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  reg             1   62[BANK0 ] PTR unsigned short 
  9650 ;;		 -> MB_Register(4), 
  9651 ;;  u8exception     1   65[BANK0 ] unsigned char 
  9652 ;;  i8state         1   64[BANK0 ] unsigned char 
  9653 ;;  u8Current       1   63[BANK0 ] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      unsigned char 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9663 ;;      Params:         0       2       0       0       0       0       0       0
  9664 ;;      Locals:         0       4       0       0       0       0       0       0
  9665 ;;      Temps:          0       8       0       0       0       0       0       0
  9666 ;;      Totals:         0      14       0       0       0       0       0       0
  9667 ;;Total ram usage:       14 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 10
  9670 ;; This function calls:
  9671 ;;		_Get_millis
  9672 ;;		_ModbusSlaveF04
  9673 ;;		_Modbus_getRxBuff
  9674 ;;		_Modbus_sendTxBuff
  9675 ;;		_buildException
  9676 ;;		_validateRequest
  9677 ;; This function is called by:
  9678 ;;		_ModbusSlave_Process
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682     0722                     _ModbusRTU_Slave_Poll:	
  9683                           ;psect for function _ModbusRTU_Slave_Poll
  9684                           
  9685                           
  9686                           ;incstack = 0
  9687                           ; Regs used in _ModbusRTU_Slave_Poll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9688                           ;ModbusRTU_Slave_Poll@reg stored from wreg
  9689     0722  0020               	movlb	0	; select bank0
  9690     0723  00DE               	movwf	ModbusRTU_Slave_Poll@reg
  9691     0724                     l3959:
  9692                           
  9693                           ;Mobbus_Slave.c: 127:     SES_Modbus.u8regsize = size;
  9694     0724  30EA               	movlw	234
  9695     0725  0086               	movwf	6
  9696     0726  3021               	movlw	33
  9697     0727  0087               	movwf	7
  9698     0728  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9699     0729  3FC0               	movwi [0]fsr1
  9700     072A  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9701     072B  3FC1               	movwi [1]fsr1
  9702     072C                     l3961:
  9703                           
  9704                           ;Mobbus_Slave.c: 128:     uint8_t u8Current;;Mobbus_Slave.c: 130:     u8Current = eusart
      +                          RxCount;
  9705     072C  086A               	movf	_eusartRxCount,w	;volatile
  9706     072D  00DF               	movwf	ModbusRTU_Slave_Poll@u8Current
  9707     072E                     l3963:
  9708                           
  9709                           ;Mobbus_Slave.c: 132:     if (u8Current == 0) return 0;
  9710     072E  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9711     072F  1D03               	btfss	3,2
  9712     0730  2F32               	goto	u2681
  9713     0731  2F33               	goto	u2680
  9714     0732                     u2681:
  9715     0732  2F35               	goto	l3969
  9716     0733                     u2680:
  9717     0733                     l3965:
  9718     0733  3000               	movlw	0
  9719     0734  2FED               	goto	l935
  9720     0735                     l3969:
  9721                           
  9722                           ;Mobbus_Slave.c: 135:     if (u8Current != SES_Modbus.u8lastRec) {
  9723     0735  30D3               	movlw	211
  9724     0736  0086               	movwf	6
  9725     0737  3021               	movlw	33
  9726     0738  0087               	movwf	7
  9727     0739  0801               	movf	1,w
  9728     073A  065F               	xorwf	ModbusRTU_Slave_Poll@u8Current,w
  9729     073B  1903               	skipnz
  9730     073C  2F3E               	goto	u2691
  9731     073D  2F3F               	goto	u2690
  9732     073E                     u2691:
  9733     073E  2F56               	goto	l3979
  9734     073F                     u2690:
  9735     073F                     l3971:
  9736                           
  9737                           ;Mobbus_Slave.c: 136:         SES_Modbus.u8lastRec = u8Current;
  9738     073F  30D3               	movlw	211
  9739     0740  0086               	movwf	6
  9740     0741  3021               	movlw	33
  9741     0742  0087               	movwf	7
  9742     0743  085F               	movf	ModbusRTU_Slave_Poll@u8Current,w
  9743     0744  0081               	movwf	1
  9744     0745                     l3973:
  9745                           
  9746                           ;Mobbus_Slave.c: 137:         SES_Modbus.u32time = Get_millis();
  9747     0745  3194  2408  3187   	fcall	_Get_millis
  9748     0748  30DE               	movlw	222
  9749     0749  0086               	movwf	6
  9750     074A  3021               	movlw	33
  9751     074B  0087               	movwf	7
  9752     074C  0020               	movlb	0	; select bank0
  9753     074D  0820               	movf	?_Get_millis,w
  9754     074E  3FC0               	movwi [0]fsr1
  9755     074F  0821               	movf	?_Get_millis+1,w
  9756     0750  3FC1               	movwi [1]fsr1
  9757     0751  0822               	movf	?_Get_millis+2,w
  9758     0752  3FC2               	movwi [2]fsr1
  9759     0753  0823               	movf	?_Get_millis+3,w
  9760     0754  3FC3               	movwi [3]fsr1
  9761     0755  2F33               	goto	l3965
  9762     0756                     l3979:
  9763                           
  9764                           ;Mobbus_Slave.c: 140:     if ((unsigned long) (Get_millis() - SES_Modbus.u32time) < (uns
      +                          igned long) 4) return 0;
  9765     0756  30DE               	movlw	222
  9766     0757  0086               	movwf	6
  9767     0758  3021               	movlw	33
  9768     0759  0087               	movwf	7
  9769     075A  3F40               	moviw [0]fsr1
  9770     075B  00D6               	movwf	??_ModbusRTU_Slave_Poll
  9771     075C  3F41               	moviw [1]fsr1
  9772     075D  00D7               	movwf	??_ModbusRTU_Slave_Poll+1
  9773     075E  3F42               	moviw [2]fsr1
  9774     075F  00D8               	movwf	??_ModbusRTU_Slave_Poll+2
  9775     0760  3F43               	moviw [3]fsr1
  9776     0761  00D9               	movwf	??_ModbusRTU_Slave_Poll+3
  9777     0762  3194  2408  3187   	fcall	_Get_millis
  9778     0765  0020               	movlb	0	; select bank0
  9779     0766  0820               	movf	?_Get_millis,w
  9780     0767  00DA               	movwf	??_ModbusRTU_Slave_Poll+4
  9781     0768  0821               	movf	?_Get_millis+1,w
  9782     0769  00DB               	movwf	??_ModbusRTU_Slave_Poll+5
  9783     076A  0822               	movf	?_Get_millis+2,w
  9784     076B  00DC               	movwf	??_ModbusRTU_Slave_Poll+6
  9785     076C  0823               	movf	?_Get_millis+3,w
  9786     076D  00DD               	movwf	??_ModbusRTU_Slave_Poll+7
  9787     076E  0856               	movf	??_ModbusRTU_Slave_Poll,w
  9788     076F  02DA               	subwf	??_ModbusRTU_Slave_Poll+4,f
  9789     0770  0857               	movf	??_ModbusRTU_Slave_Poll+1,w
  9790     0771  3BDB               	subwfb	??_ModbusRTU_Slave_Poll+5,f
  9791     0772  0858               	movf	??_ModbusRTU_Slave_Poll+2,w
  9792     0773  3BDC               	subwfb	??_ModbusRTU_Slave_Poll+6,f
  9793     0774  0859               	movf	??_ModbusRTU_Slave_Poll+3,w
  9794     0775  3BDD               	subwfb	??_ModbusRTU_Slave_Poll+7,f
  9795     0776  085D               	movf	??_ModbusRTU_Slave_Poll+7,w
  9796     0777  1D03               	btfss	3,2
  9797     0778  2F84               	goto	u2701
  9798     0779  085C               	movf	??_ModbusRTU_Slave_Poll+6,w
  9799     077A  1D03               	btfss	3,2
  9800     077B  2F84               	goto	u2701
  9801     077C  085B               	movf	??_ModbusRTU_Slave_Poll+5,w
  9802     077D  1D03               	btfss	3,2
  9803     077E  2F84               	goto	u2701
  9804     077F  3004               	movlw	4
  9805     0780  025A               	subwf	??_ModbusRTU_Slave_Poll+4,w
  9806     0781  1803               	btfsc	3,0
  9807     0782  2F84               	goto	u2701
  9808     0783  2F85               	goto	u2700
  9809     0784                     u2701:
  9810     0784  2F86               	goto	l3985
  9811     0785                     u2700:
  9812     0785  2F33               	goto	l3965
  9813     0786                     l3985:
  9814                           
  9815                           ;Mobbus_Slave.c: 142:     SES_Modbus.u8lastRec = 0;
  9816     0786  30D3               	movlw	211
  9817     0787  0086               	movwf	6
  9818     0788  3021               	movlw	33
  9819     0789  0087               	movwf	7
  9820     078A  0181               	clrf	1
  9821     078B                     l3987:
  9822                           
  9823                           ;Mobbus_Slave.c: 143:     uint8_t i8state = Modbus_getRxBuff();
  9824     078B  3189  2114  3187   	fcall	_Modbus_getRxBuff
  9825     078E  0020               	movlb	0	; select bank0
  9826     078F  00E0               	movwf	ModbusRTU_Slave_Poll@i8state
  9827     0790                     l3989:
  9828                           
  9829                           ;Mobbus_Slave.c: 144:     SES_Modbus.u8lastError = i8state;
  9830     0790  303B               	movlw	59
  9831     0791  0086               	movwf	6
  9832     0792  3021               	movlw	33
  9833     0793  0087               	movwf	7
  9834     0794  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9835     0795  0081               	movwf	1
  9836     0796                     l3991:
  9837                           
  9838                           ;Mobbus_Slave.c: 145:     if (i8state < 7) return i8state;
  9839     0796  3007               	movlw	7
  9840     0797  0260               	subwf	ModbusRTU_Slave_Poll@i8state,w
  9841     0798  1803               	skipnc
  9842     0799  2F9B               	goto	u2711
  9843     079A  2F9C               	goto	u2710
  9844     079B                     u2711:
  9845     079B  2F9F               	goto	l3997
  9846     079C                     u2710:
  9847     079C                     l3993:
  9848     079C  0020               	movlb	0	; select bank0
  9849     079D  0860               	movf	ModbusRTU_Slave_Poll@i8state,w
  9850     079E  2FED               	goto	l935
  9851     079F                     l3997:
  9852                           
  9853                           ;Mobbus_Slave.c: 148:     if (SES_Modbus.au8Buffer[ ID ] != SES_Modbus.u8id) return 0;
  9854     079F  3038               	movlw	56
  9855     07A0  0086               	movwf	6
  9856     07A1  3021               	movlw	33
  9857     07A2  0087               	movwf	7
  9858     07A3  3038               	movlw	56
  9859     07A4  0084               	movwf	4
  9860     07A5  3021               	movlw	33
  9861     07A6  0085               	movwf	5
  9862     07A7  3104               	addfsr 0,4
  9863     07A8  0800               	movf	0,w
  9864     07A9  0601               	xorwf	1,w
  9865     07AA  1903               	skipnz
  9866     07AB  2FAD               	goto	u2721
  9867     07AC  2FAE               	goto	u2720
  9868     07AD                     u2721:
  9869     07AD  2FAF               	goto	l4003
  9870     07AE                     u2720:
  9871     07AE  2F33               	goto	l3965
  9872     07AF                     l4003:
  9873                           
  9874                           ;Mobbus_Slave.c: 151:     uint8_t u8exception = validateRequest();
  9875     07AF  318A  22AE  3187   	fcall	_validateRequest
  9876     07B2  0020               	movlb	0	; select bank0
  9877     07B3  00E1               	movwf	ModbusRTU_Slave_Poll@u8exception
  9878     07B4                     l4005:
  9879                           
  9880                           ;Mobbus_Slave.c: 152:     if (u8exception > 0) {
  9881     07B4  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9882     07B5  1903               	btfsc	3,2
  9883     07B6  2FB8               	goto	u2731
  9884     07B7  2FB9               	goto	u2730
  9885     07B8                     u2731:
  9886     07B8  2FCE               	goto	l4017
  9887     07B9                     u2730:
  9888     07B9                     l4007:
  9889                           
  9890                           ;Mobbus_Slave.c: 153:         if (u8exception != NO_REPLY) {
  9891     07B9  0A61               	incf	ModbusRTU_Slave_Poll@u8exception,w
  9892     07BA  1903               	btfsc	3,2
  9893     07BB  2FBD               	goto	u2741
  9894     07BC  2FBE               	goto	u2740
  9895     07BD                     u2741:
  9896     07BD  2FC5               	goto	l4011
  9897     07BE                     u2740:
  9898     07BE                     l4009:
  9899                           
  9900                           ;Mobbus_Slave.c: 154:             buildException(u8exception);
  9901     07BE  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9902     07BF  3196  2642  3187   	fcall	_buildException
  9903                           
  9904                           ;Mobbus_Slave.c: 155:             Modbus_sendTxBuff();
  9905     07C2  318D  2519  3187   	fcall	_Modbus_sendTxBuff
  9906     07C5                     l4011:
  9907                           
  9908                           ;Mobbus_Slave.c: 157:         SES_Modbus.u8lastError = u8exception;
  9909     07C5  303B               	movlw	59
  9910     07C6  0086               	movwf	6
  9911     07C7  3021               	movlw	33
  9912     07C8  0087               	movwf	7
  9913     07C9  0020               	movlb	0	; select bank0
  9914     07CA  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9915     07CB  0081               	movwf	1
  9916     07CC                     l4013:
  9917                           
  9918                           ;Mobbus_Slave.c: 158:         return u8exception;
  9919     07CC  0861               	movf	ModbusRTU_Slave_Poll@u8exception,w
  9920     07CD  2FED               	goto	l935
  9921     07CE                     l4017:
  9922                           
  9923                           ;Mobbus_Slave.c: 161:     SES_Modbus.u32timeOut = Get_millis();
  9924     07CE  3194  2408  3187   	fcall	_Get_millis
  9925     07D1  30E2               	movlw	226
  9926     07D2  0086               	movwf	6
  9927     07D3  3021               	movlw	33
  9928     07D4  0087               	movwf	7
  9929     07D5  0020               	movlb	0	; select bank0
  9930     07D6  0820               	movf	?_Get_millis,w
  9931     07D7  3FC0               	movwi [0]fsr1
  9932     07D8  0821               	movf	?_Get_millis+1,w
  9933     07D9  3FC1               	movwi [1]fsr1
  9934     07DA  0822               	movf	?_Get_millis+2,w
  9935     07DB  3FC2               	movwi [2]fsr1
  9936     07DC  0823               	movf	?_Get_millis+3,w
  9937     07DD  3FC3               	movwi [3]fsr1
  9938     07DE                     l4019:
  9939                           
  9940                           ;Mobbus_Slave.c: 162:     SES_Modbus.u8lastError = 0;
  9941     07DE  3038               	movlw	56
  9942     07DF  0086               	movwf	6
  9943     07E0  3021               	movlw	33
  9944     07E1  0087               	movwf	7
  9945     07E2  3143               	addfsr 1,3
  9946     07E3  0181               	clrf	1
  9947     07E4                     l4021:
  9948                           
  9949                           ;Mobbus_Slave.c: 164:     ModbusSlaveF04(reg, size);
  9950     07E4  0855               	movf	ModbusRTU_Slave_Poll@size+1,w
  9951     07E5  00BF               	movwf	ModbusSlaveF04@size+1
  9952     07E6  0854               	movf	ModbusRTU_Slave_Poll@size,w
  9953     07E7  00BE               	movwf	ModbusSlaveF04@size
  9954     07E8  085E               	movf	ModbusRTU_Slave_Poll@reg,w
  9955     07E9  318B  23CA  3187   	fcall	_ModbusSlaveF04
  9956     07EC  2F9C               	goto	l3993
  9957     07ED                     l935:
  9958     07ED  0008               	return
  9959     07EE                     __end_of_ModbusRTU_Slave_Poll:
  9960                           
  9961                           	psect	text43
  9962     0AAE                     __ptext43:	
  9963 ;; *************** function _validateRequest *****************
  9964 ;; Defined at:
  9965 ;;		line 98 in file "Mobbus_Slave.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;		None
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;  u16MsgCRC       2   28[BANK0 ] unsigned short 
  9970 ;;  i               1   31[BANK0 ] unsigned char 
  9971 ;;  isSupported     1   30[BANK0 ] _Bool 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1    wreg      unsigned char 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9981 ;;      Params:         0       0       0       0       0       0       0       0
  9982 ;;      Locals:         0       4       0       0       0       0       0       0
  9983 ;;      Temps:          0      13       0       0       0       0       0       0
  9984 ;;      Totals:         0      17       0       0       0       0       0       0
  9985 ;;Total ram usage:       17 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 8
  9988 ;; This function calls:
  9989 ;;		_Modbus_calcCRC
  9990 ;; This function is called by:
  9991 ;;		_ModbusRTU_Slave_Poll
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995     0AAE                     _validateRequest:	
  9996                           ;psect for function _validateRequest
  9997                           
  9998     0AAE                     l3785:	
  9999                           ;incstack = 0
 10000                           ; Regs used in _validateRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10001                           
 10002                           
 10003                           ;Mobbus_Slave.c: 100:     uint16_t u16MsgCRC = (uint16_t)
 10004     0AAE  30D2               	movlw	210
 10005     0AAF  0086               	movwf	6
 10006     0AB0  3021               	movlw	33
 10007     0AB1  0087               	movwf	7
 10008     0AB2  0801               	movf	1,w
 10009     0AB3  0020               	movlb	0	; select bank0
 10010     0AB4  00AF               	movwf	??_validateRequest
 10011     0AB5  01B0               	clrf	??_validateRequest+1
 10012     0AB6  303B               	movlw	59
 10013     0AB7  00B1               	movwf	??_validateRequest+2
 10014     0AB8  3021               	movlw	33
 10015     0AB9  00B2               	movwf	??_validateRequest+3
 10016     0ABA  082F               	movf	??_validateRequest,w
 10017     0ABB  0731               	addwf	??_validateRequest+2,w
 10018     0ABC  0086               	movwf	6
 10019     0ABD  0830               	movf	??_validateRequest+1,w
 10020     0ABE  3D32               	addwfc	??_validateRequest+3,w
 10021     0ABF  0087               	movwf	7
 10022     0AC0  0801               	movf	1,w
 10023     0AC1  00B3               	movwf	??_validateRequest+4
 10024     0AC2  01B4               	clrf	??_validateRequest+5
 10025     0AC3  30D2               	movlw	210
 10026     0AC4  0086               	movwf	6
 10027     0AC5  3021               	movlw	33
 10028     0AC6  0087               	movwf	7
 10029     0AC7  0801               	movf	1,w
 10030     0AC8  00B5               	movwf	??_validateRequest+6
 10031     0AC9  01B6               	clrf	??_validateRequest+7
 10032     0ACA  303A               	movlw	58
 10033     0ACB  00B7               	movwf	??_validateRequest+8
 10034     0ACC  3021               	movlw	33
 10035     0ACD  00B8               	movwf	??_validateRequest+9
 10036     0ACE  0835               	movf	??_validateRequest+6,w
 10037     0ACF  0737               	addwf	??_validateRequest+8,w
 10038     0AD0  0086               	movwf	6
 10039     0AD1  0836               	movf	??_validateRequest+7,w
 10040     0AD2  3D38               	addwfc	??_validateRequest+9,w
 10041     0AD3  0087               	movwf	7
 10042     0AD4  0801               	movf	1,w
 10043     0AD5  00B9               	movwf	??_validateRequest+10
 10044     0AD6  01BA               	clrf	??_validateRequest+11
 10045     0AD7  0839               	movf	??_validateRequest+10,w
 10046     0AD8  00BA               	movwf	??_validateRequest+11
 10047     0AD9  01B9               	clrf	??_validateRequest+10
 10048     0ADA  0833               	movf	??_validateRequest+4,w
 10049     0ADB  0439               	iorwf	??_validateRequest+10,w
 10050     0ADC  00BC               	movwf	validateRequest@u16MsgCRC
 10051     0ADD  0834               	movf	??_validateRequest+5,w
 10052     0ADE  043A               	iorwf	??_validateRequest+11,w
 10053     0ADF  00BD               	movwf	validateRequest@u16MsgCRC+1
 10054     0AE0                     l3787:
 10055                           
 10056                           ;Mobbus_Slave.c: 103:     if (Modbus_calcCRC(SES_Modbus.u8BufferSize - 2) != u16MsgCRC) 
      +                          {
 10057     0AE0  30D2               	movlw	210
 10058     0AE1  0086               	movwf	6
 10059     0AE2  3021               	movlw	33
 10060     0AE3  0087               	movwf	7
 10061     0AE4  0801               	movf	1,w
 10062     0AE5  3EFE               	addlw	254
 10063     0AE6  3189  2170  318A   	fcall	_Modbus_calcCRC
 10064     0AE9  0020               	movlb	0	; select bank0
 10065     0AEA  083D               	movf	validateRequest@u16MsgCRC+1,w
 10066     0AEB  0621               	xorwf	?_Modbus_calcCRC+1,w
 10067     0AEC  1D03               	skipz
 10068     0AED  2AF0               	goto	u2565
 10069     0AEE  083C               	movf	validateRequest@u16MsgCRC,w
 10070     0AEF  0620               	xorwf	?_Modbus_calcCRC,w
 10071     0AF0                     u2565:
 10072     0AF0  1903               	skipnz
 10073     0AF1  2AF3               	goto	u2561
 10074     0AF2  2AF4               	goto	u2560
 10075     0AF3                     u2561:
 10076     0AF3  2AFF               	goto	l3795
 10077     0AF4                     u2560:
 10078     0AF4                     l3789:
 10079                           
 10080                           ;Mobbus_Slave.c: 104:         SES_Modbus.u16errCnt++;
 10081     0AF4  30DA               	movlw	218
 10082     0AF5  0086               	movwf	6
 10083     0AF6  3021               	movlw	33
 10084     0AF7  0087               	movwf	7
 10085     0AF8  3001               	movlw	1
 10086     0AF9  0781               	addwf	1,f
 10087     0AFA  3141               	addfsr 1,1
 10088     0AFB  1803               	skipnc
 10089     0AFC  0A81               	incf	1,f
 10090     0AFD                     l3791:
 10091                           
 10092                           ;Mobbus_Slave.c: 105:         return NO_REPLY;
 10093     0AFD  30FF               	movlw	255
 10094     0AFE  2B32               	goto	l927
 10095     0AFF                     l3795:
 10096                           
 10097                           ;Mobbus_Slave.c: 109:     _Bool isSupported = 0;
 10098     0AFF  01BE               	clrf	validateRequest@isSupported
 10099                           
 10100                           ;Mobbus_Slave.c: 110:     uint8_t i = 0;
 10101     0B00  01BF               	clrf	validateRequest@i
 10102                           
 10103                           ;Mobbus_Slave.c: 111:     for (i = 0; i< sizeof ( fctsupported); i++) {
 10104     0B01  01BF               	clrf	validateRequest@i
 10105     0B02                     l3801:
 10106                           
 10107                           ;Mobbus_Slave.c: 112:         if (fctsupported[i] == SES_Modbus.au8Buffer[FUNC]) {
 10108     0B02  3038               	movlw	56
 10109     0B03  0086               	movwf	6
 10110     0B04  3021               	movlw	33
 10111     0B05  0087               	movwf	7
 10112     0B06  3145               	addfsr 1,5
 10113     0B07  083F               	movf	validateRequest@i,w
 10114     0B08  3E20               	addlw	low (_fctsupported| (0+32768))
 10115     0B09  0084               	movwf	4
 10116     0B0A  3098               	movlw	high (_fctsupported| (0+32768))
 10117     0B0B  1803               	skipnc
 10118     0B0C  3E01               	addlw	1
 10119     0B0D  0085               	movwf	5
 10120     0B0E  0800               	movf	0,w	;code access
 10121     0B0F  0601               	xorwf	1,w
 10122     0B10  1D03               	skipz
 10123     0B11  2B13               	goto	u2571
 10124     0B12  2B14               	goto	u2570
 10125     0B13                     u2571:
 10126     0B13  2B17               	goto	l3805
 10127     0B14                     u2570:
 10128     0B14                     l3803:
 10129                           
 10130                           ;Mobbus_Slave.c: 113:             isSupported = 1;
 10131     0B14  01BE               	clrf	validateRequest@isSupported
 10132     0B15  0ABE               	incf	validateRequest@isSupported,f
 10133                           
 10134                           ;Mobbus_Slave.c: 114:             break;
 10135     0B16  2B21               	goto	l3809
 10136     0B17                     l3805:
 10137                           
 10138                           ;Mobbus_Slave.c: 116:     }
 10139     0B17  3001               	movlw	1
 10140     0B18  00AF               	movwf	??_validateRequest
 10141     0B19  082F               	movf	??_validateRequest,w
 10142     0B1A  07BF               	addwf	validateRequest@i,f
 10143     0B1B                     l3807:
 10144     0B1B  3008               	movlw	8
 10145     0B1C  023F               	subwf	validateRequest@i,w
 10146     0B1D  1C03               	skipc
 10147     0B1E  2B20               	goto	u2581
 10148     0B1F  2B21               	goto	u2580
 10149     0B20                     u2581:
 10150     0B20  2B02               	goto	l3801
 10151     0B21                     u2580:
 10152     0B21                     l3809:
 10153                           
 10154                           ;Mobbus_Slave.c: 117:     if (!isSupported) {
 10155     0B21  083E               	movf	validateRequest@isSupported,w
 10156     0B22  1D03               	btfss	3,2
 10157     0B23  2B25               	goto	u2591
 10158     0B24  2B26               	goto	u2590
 10159     0B25                     u2591:
 10160     0B25  2B31               	goto	l3817
 10161     0B26                     u2590:
 10162     0B26                     l3811:
 10163                           
 10164                           ;Mobbus_Slave.c: 118:         SES_Modbus.u16errCnt++;
 10165     0B26  30DA               	movlw	218
 10166     0B27  0086               	movwf	6
 10167     0B28  3021               	movlw	33
 10168     0B29  0087               	movwf	7
 10169     0B2A  3001               	movlw	1
 10170     0B2B  0781               	addwf	1,f
 10171     0B2C  3141               	addfsr 1,1
 10172     0B2D  1803               	skipnc
 10173     0B2E  0A81               	incf	1,f
 10174     0B2F                     l3813:
 10175                           
 10176                           ;Mobbus_Slave.c: 119:         return EXC_FUNC_CODE;
 10177     0B2F  3001               	movlw	1
 10178     0B30  2B32               	goto	l927
 10179     0B31                     l3817:
 10180                           
 10181                           ;Mobbus_Slave.c: 122:     return 0;
 10182     0B31  3000               	movlw	0
 10183     0B32                     l927:
 10184     0B32  0008               	return
 10185     0B33                     __end_of_validateRequest:
 10186                           
 10187                           	psect	text44
 10188     1642                     __ptext44:	
 10189 ;; *************** function _buildException *****************
 10190 ;; Defined at:
 10191 ;;		line 64 in file "Mobbus_Slave.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  exception       1    wreg     unsigned char 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;  exception       1    1[BANK0 ] unsigned char 
 10196 ;;  u8func          1    2[BANK0 ] unsigned char 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  1    wreg      void 
 10199 ;; Registers used:
 10200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10206 ;;      Params:         0       0       0       0       0       0       0       0
 10207 ;;      Locals:         0       2       0       0       0       0       0       0
 10208 ;;      Temps:          0       1       0       0       0       0       0       0
 10209 ;;      Totals:         0       3       0       0       0       0       0       0
 10210 ;;Total ram usage:        3 bytes
 10211 ;; Hardware stack levels used: 1
 10212 ;; Hardware stack levels required when called: 7
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_ModbusRTU_Slave_Poll
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220     1642                     _buildException:	
 10221                           ;psect for function _buildException
 10222                           
 10223                           
 10224                           ;incstack = 0
 10225                           ; Regs used in _buildException: [wreg+fsr1l+fsr1h+status,2+status,0]
 10226                           ;buildException@exception stored from wreg
 10227     1642  0020               	movlb	0	; select bank0
 10228     1643  00A1               	movwf	buildException@exception
 10229     1644                     l3747:
 10230                           
 10231                           ;Mobbus_Slave.c: 66:     uint8_t u8func = SES_Modbus.au8Buffer[ FUNC ];
 10232     1644  3038               	movlw	56
 10233     1645  0086               	movwf	6
 10234     1646  3021               	movlw	33
 10235     1647  0087               	movwf	7
 10236     1648  3145               	addfsr 1,5
 10237     1649  0801               	movf	1,w
 10238     164A  00A2               	movwf	buildException@u8func
 10239                           
 10240                           ;Mobbus_Slave.c: 68:     SES_Modbus.au8Buffer[ ID ] = SES_Modbus.u8id;
 10241     164B  3038               	movlw	56
 10242     164C  0086               	movwf	6
 10243     164D  3021               	movlw	33
 10244     164E  0087               	movwf	7
 10245     164F  0801               	movf	1,w
 10246     1650  00A0               	movwf	??_buildException
 10247     1651  303C               	movlw	60
 10248     1652  0086               	movwf	6
 10249     1653  3021               	movlw	33
 10250     1654  0087               	movwf	7
 10251     1655  0820               	movf	??_buildException,w
 10252     1656  0081               	movwf	1
 10253     1657                     l3749:
 10254                           
 10255                           ;Mobbus_Slave.c: 69:     SES_Modbus.au8Buffer[ FUNC ] = u8func + 0x80;
 10256     1657  0822               	movf	buildException@u8func,w
 10257     1658  3E80               	addlw	128
 10258     1659  00A0               	movwf	??_buildException
 10259     165A  303D               	movlw	61
 10260     165B  0086               	movwf	6
 10261     165C  3021               	movlw	33
 10262     165D  0087               	movwf	7
 10263     165E  0820               	movf	??_buildException,w
 10264     165F  0081               	movwf	1
 10265     1660                     l3751:
 10266                           
 10267                           ;Mobbus_Slave.c: 70:     SES_Modbus.au8Buffer[ 2 ] = exception;
 10268     1660  303E               	movlw	62
 10269     1661  0086               	movwf	6
 10270     1662  3021               	movlw	33
 10271     1663  0087               	movwf	7
 10272     1664  0821               	movf	buildException@exception,w
 10273     1665  0081               	movwf	1
 10274     1666                     l3753:
 10275                           
 10276                           ;Mobbus_Slave.c: 71:     SES_Modbus.u8BufferSize = EXCEPTION_SIZE;
 10277     1666  30D2               	movlw	210
 10278     1667  0086               	movwf	6
 10279     1668  3021               	movlw	33
 10280     1669  0087               	movwf	7
 10281     166A  3003               	movlw	3
 10282     166B  0081               	movwf	1
 10283     166C                     l914:
 10284     166C  0008               	return
 10285     166D                     __end_of_buildException:
 10286                           
 10287                           	psect	text45
 10288     0914                     __ptext45:	
 10289 ;; *************** function _Modbus_getRxBuff *****************
 10290 ;; Defined at:
 10291 ;;		line 74 in file "Mobbus_Slave.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;		None
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  bBuffOverflo    1    9[BANK0 ] _Bool 
 10296 ;; Return value:  Size  Location     Type
 10297 ;;                  1    wreg      unsigned char 
 10298 ;; Registers used:
 10299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10300 ;; Tracked objects:
 10301 ;;		On entry : 0/0
 10302 ;;		On exit  : 0/0
 10303 ;;		Unchanged: 0/0
 10304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10305 ;;      Params:         0       0       0       0       0       0       0       0
 10306 ;;      Locals:         0       1       0       0       0       0       0       0
 10307 ;;      Temps:          0       7       0       0       0       0       0       0
 10308 ;;      Totals:         0       8       0       0       0       0       0       0
 10309 ;;Total ram usage:        8 bytes
 10310 ;; Hardware stack levels used: 1
 10311 ;; Hardware stack levels required when called: 8
 10312 ;; This function calls:
 10313 ;;		_EUSART_Read
 10314 ;; This function is called by:
 10315 ;;		_ModbusRTU_Slave_Poll
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319     0914                     _Modbus_getRxBuff:	
 10320                           ;psect for function _Modbus_getRxBuff
 10321                           
 10322     0914                     l3755:	
 10323                           ;incstack = 0
 10324                           ; Regs used in _Modbus_getRxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10325                           
 10326                           
 10327                           ;Mobbus_Slave.c: 75:     _Bool bBuffOverflow = 0;
 10328     0914  0020               	movlb	0	; select bank0
 10329     0915  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10330     0916                     l3759:
 10331                           
 10332                           ;Mobbus_Slave.c: 81:     SES_Modbus.u8BufferSize = 0;
 10333     0916  30D2               	movlw	210
 10334     0917  0086               	movwf	6
 10335     0918  3021               	movlw	33
 10336     0919  0087               	movwf	7
 10337     091A  0181               	clrf	1
 10338                           
 10339                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10340     091B  294C               	goto	l3769
 10341     091C                     l3761:
 10342                           
 10343                           ;Mobbus_Slave.c: 83:         SES_Modbus.au8Buffer [SES_Modbus.u8BufferSize] = EUSART_Rea
      +                          d();
 10344     091C  3195  25EF  3189   	fcall	_EUSART_Read
 10345     091F  0020               	movlb	0	; select bank0
 10346     0920  00A2               	movwf	??_Modbus_getRxBuff
 10347     0921  30D2               	movlw	210
 10348     0922  0086               	movwf	6
 10349     0923  3021               	movlw	33
 10350     0924  0087               	movwf	7
 10351     0925  0801               	movf	1,w
 10352     0926  00A3               	movwf	??_Modbus_getRxBuff+1
 10353     0927  01A4               	clrf	??_Modbus_getRxBuff+2
 10354     0928  303C               	movlw	60
 10355     0929  00A5               	movwf	??_Modbus_getRxBuff+3
 10356     092A  3021               	movlw	33
 10357     092B  00A6               	movwf	??_Modbus_getRxBuff+4
 10358     092C  0823               	movf	??_Modbus_getRxBuff+1,w
 10359     092D  0725               	addwf	??_Modbus_getRxBuff+3,w
 10360     092E  00A7               	movwf	??_Modbus_getRxBuff+5
 10361     092F  0824               	movf	??_Modbus_getRxBuff+2,w
 10362     0930  3D26               	addwfc	??_Modbus_getRxBuff+4,w
 10363     0931  00A8               	movwf	??_Modbus_getRxBuff+6
 10364     0932  0827               	movf	??_Modbus_getRxBuff+5,w
 10365     0933  0086               	movwf	6
 10366     0934  0828               	movf	??_Modbus_getRxBuff+6,w
 10367     0935  0087               	movwf	7
 10368     0936  0822               	movf	??_Modbus_getRxBuff,w
 10369     0937  0081               	movwf	1
 10370     0938                     l3763:
 10371                           
 10372                           ;Mobbus_Slave.c: 84:         SES_Modbus.u8BufferSize++;
 10373     0938  3001               	movlw	1
 10374     0939  00A2               	movwf	??_Modbus_getRxBuff
 10375     093A  30D2               	movlw	210
 10376     093B  0086               	movwf	6
 10377     093C  3021               	movlw	33
 10378     093D  0087               	movwf	7
 10379     093E  0822               	movf	??_Modbus_getRxBuff,w
 10380     093F  0781               	addwf	1,f
 10381     0940                     l3765:
 10382                           
 10383                           ;Mobbus_Slave.c: 86:         if (SES_Modbus.u8BufferSize >= 150) bBuffOverflow = 1;
 10384     0940  30D2               	movlw	210
 10385     0941  0086               	movwf	6
 10386     0942  3021               	movlw	33
 10387     0943  0087               	movwf	7
 10388     0944  3096               	movlw	150
 10389     0945  0201               	subwf	1,w
 10390     0946  1C03               	skipc
 10391     0947  2949               	goto	u2531
 10392     0948  294A               	goto	u2530
 10393     0949                     u2531:
 10394     0949  294C               	goto	l3769
 10395     094A                     u2530:
 10396     094A                     l3767:
 10397     094A  01A9               	clrf	Modbus_getRxBuff@bBuffOverflow
 10398     094B  0AA9               	incf	Modbus_getRxBuff@bBuffOverflow,f
 10399     094C                     l3769:
 10400                           
 10401                           ;Mobbus_Slave.c: 82:     while (eusartRxCount) {
 10402     094C  086A               	movf	_eusartRxCount,w	;volatile
 10403     094D  1D03               	btfss	3,2
 10404     094E  2950               	goto	u2541
 10405     094F  2951               	goto	u2540
 10406     0950                     u2541:
 10407     0950  291C               	goto	l3761
 10408     0951                     u2540:
 10409     0951                     l3771:
 10410                           
 10411                           ;Mobbus_Slave.c: 88:     SES_Modbus.u16InCnt++;
 10412     0951  30D6               	movlw	214
 10413     0952  0086               	movwf	6
 10414     0953  3021               	movlw	33
 10415     0954  0087               	movwf	7
 10416     0955  3001               	movlw	1
 10417     0956  0781               	addwf	1,f
 10418     0957  3141               	addfsr 1,1
 10419     0958  1803               	skipnc
 10420     0959  0A81               	incf	1,f
 10421     095A                     l3773:
 10422                           
 10423                           ;Mobbus_Slave.c: 90:     if (bBuffOverflow) {
 10424     095A  0829               	movf	Modbus_getRxBuff@bBuffOverflow,w
 10425     095B  1903               	btfsc	3,2
 10426     095C  295E               	goto	u2551
 10427     095D  295F               	goto	u2550
 10428     095E                     u2551:
 10429     095E  296A               	goto	l3781
 10430     095F                     u2550:
 10431     095F                     l3775:
 10432                           
 10433                           ;Mobbus_Slave.c: 91:         SES_Modbus.u16errCnt++;
 10434     095F  30DA               	movlw	218
 10435     0960  0086               	movwf	6
 10436     0961  3021               	movlw	33
 10437     0962  0087               	movwf	7
 10438     0963  3001               	movlw	1
 10439     0964  0781               	addwf	1,f
 10440     0965  3141               	addfsr 1,1
 10441     0966  1803               	skipnc
 10442     0967  0A81               	incf	1,f
 10443     0968                     l3777:
 10444                           
 10445                           ;Mobbus_Slave.c: 92:         return (uint8_t) ERR_BUFF_OVERFLOW;
 10446     0968  30FD               	movlw	253
 10447     0969  296F               	goto	l923
 10448     096A                     l3781:
 10449                           
 10450                           ;Mobbus_Slave.c: 95:     return SES_Modbus.u8BufferSize;
 10451     096A  30D2               	movlw	210
 10452     096B  0086               	movwf	6
 10453     096C  3021               	movlw	33
 10454     096D  0087               	movwf	7
 10455     096E  0801               	movf	1,w
 10456     096F                     l923:
 10457     096F  0008               	return
 10458     0970                     __end_of_Modbus_getRxBuff:
 10459                           
 10460                           	psect	text46
 10461     15EF                     __ptext46:	
 10462 ;; *************** function _EUSART_Read *****************
 10463 ;; Defined at:
 10464 ;;		line 151 in file "mcc_generated_files/eusart.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;		None
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  readValue       1    1[BANK0 ] unsigned char 
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  1    wreg      unsigned char 
 10471 ;; Registers used:
 10472 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10478 ;;      Params:         0       0       0       0       0       0       0       0
 10479 ;;      Locals:         0       1       0       0       0       0       0       0
 10480 ;;      Temps:          0       1       0       0       0       0       0       0
 10481 ;;      Totals:         0       2       0       0       0       0       0       0
 10482 ;;Total ram usage:        2 bytes
 10483 ;; Hardware stack levels used: 1
 10484 ;; Hardware stack levels required when called: 7
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_Modbus_getRxBuff
 10489 ;;		_getch
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493     15EF                     _EUSART_Read:	
 10494                           ;psect for function _EUSART_Read
 10495                           
 10496     15EF                     l3531:	
 10497                           ;incstack = 0
 10498                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10499                           
 10500     15EF                     l3533:	
 10501                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10502                           
 10503                           
 10504                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
 10505     15EF  0020               	movlb	0	; select bank0
 10506     15F0  086A               	movf	_eusartRxCount,w	;volatile
 10507     15F1  1903               	btfsc	3,2
 10508     15F2  2DF4               	goto	u2371
 10509     15F3  2DF5               	goto	u2370
 10510     15F4                     u2371:
 10511     15F4  2DEF               	goto	l3533
 10512     15F5                     u2370:
 10513     15F5                     l3535:
 10514                           
 10515                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
 10516     15F5  086B               	movf	_eusartRxTail,w	;volatile
 10517     15F6  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 10518     15F7  0086               	movwf	6
 10519     15F8  3001               	movlw	1	; select bank2/3
 10520     15F9  0087               	movwf	7
 10521     15FA  0801               	movf	1,w
 10522     15FB  00FD               	movwf	_eusartRxLastError	;volatile
 10523                           
 10524                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
 10525     15FC  086B               	movf	_eusartRxTail,w
 10526     15FD  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10527     15FE  0086               	movwf	6
 10528     15FF  3001               	movlw	1	; select bank2/3
 10529     1600  0087               	movwf	7
 10530     1601  0801               	movf	1,w
 10531     1602  00A1               	movwf	EUSART_Read@readValue
 10532     1603                     l3537:
 10533     1603  3001               	movlw	1
 10534     1604  00A0               	movwf	??_EUSART_Read
 10535     1605  0820               	movf	??_EUSART_Read,w
 10536     1606  07EB               	addwf	_eusartRxTail,f	;volatile
 10537     1607                     l3539:
 10538                           
 10539                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10540     1607  3008               	movlw	8
 10541     1608  026B               	subwf	_eusartRxTail,w	;volatile
 10542     1609  1C03               	skipc
 10543     160A  2E0C               	goto	u2381
 10544     160B  2E0D               	goto	u2380
 10545     160C                     u2381:
 10546     160C  2E0E               	goto	l3543
 10547     160D                     u2380:
 10548     160D                     l3541:
 10549                           
 10550                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
 10551     160D  01EB               	clrf	_eusartRxTail	;volatile
 10552     160E                     l3543:
 10553                           
 10554                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
 10555     160E  0021               	movlb	1	; select bank1
 10556     160F  1291               	bcf	17,5	;volatile
 10557     1610                     l3545:
 10558                           
 10559                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
 10560     1610  3001               	movlw	1
 10561     1611  0020               	movlb	0	; select bank0
 10562     1612  02EA               	subwf	_eusartRxCount,f	;volatile
 10563     1613                     l3547:
 10564                           
 10565                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
 10566     1613  0021               	movlb	1	; select bank1
 10567     1614  1691               	bsf	17,5	;volatile
 10568     1615                     l3549:
 10569                           
 10570                           ;mcc_generated_files/eusart.c: 170:     return readValue;
 10571     1615  0020               	movlb	0	; select bank0
 10572     1616  0821               	movf	EUSART_Read@readValue,w
 10573     1617                     l298:
 10574     1617  0008               	return
 10575     1618                     __end_of_EUSART_Read:
 10576                           
 10577                           	psect	text47
 10578     0BCA                     __ptext47:	
 10579 ;; *************** function _ModbusSlaveF04 *****************
 10580 ;; Defined at:
 10581 ;;		line 36 in file "Mobbus_Slave.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  reg             1    wreg     PTR unsigned short 
 10584 ;;		 -> MB_Register(4), 
 10585 ;;  size            2   30[BANK0 ] unsigned short 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  reg             1   45[BANK0 ] PTR unsigned short 
 10588 ;;		 -> MB_Register(4), 
 10589 ;;  i               2   50[BANK0 ] unsigned short 
 10590 ;;  valueRegsno     2   48[BANK0 ] struct .
 10591 ;;  valueAdd        2   46[BANK0 ] struct .
 10592 ;;  u8StartAdd      2   42[BANK0 ] unsigned short 
 10593 ;;  u8regsno        1   44[BANK0 ] unsigned char 
 10594 ;;  u8CopyBuffer    1    0        unsigned char 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      unsigned char 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10604 ;;      Params:         0       2       0       0       0       0       0       0
 10605 ;;      Locals:         0      10       0       0       0       0       0       0
 10606 ;;      Temps:          0      10       0       0       0       0       0       0
 10607 ;;      Totals:         0      22       0       0       0       0       0       0
 10608 ;;Total ram usage:       22 bytes
 10609 ;; Hardware stack levels used: 1
 10610 ;; Hardware stack levels required when called: 9
 10611 ;; This function calls:
 10612 ;;		_Modbus_sendTxBuff
 10613 ;; This function is called by:
 10614 ;;		_ModbusRTU_Slave_Poll
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618     0BCA                     _ModbusSlaveF04:	
 10619                           ;psect for function _ModbusSlaveF04
 10620                           
 10621                           
 10622                           ;incstack = 0
 10623                           ; Regs used in _ModbusSlaveF04: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10624                           ;ModbusSlaveF04@reg stored from wreg
 10625     0BCA  0020               	movlb	0	; select bank0
 10626     0BCB  00CD               	movwf	ModbusSlaveF04@reg
 10627     0BCC                     l3719:
 10628                           
 10629                           ;Mobbus_Slave.c: 37:     VALUE16 valueAdd, valueRegsno;;Mobbus_Slave.c: 38:     valueAdd
      +                          ._Byte[1] = SES_Modbus.au8Buffer[ADD_HI];
 10630     0BCC  3038               	movlw	56
 10631     0BCD  0086               	movwf	6
 10632     0BCE  3021               	movlw	33
 10633     0BCF  0087               	movwf	7
 10634     0BD0  3146               	addfsr 1,6
 10635     0BD1  0801               	movf	1,w
 10636     0BD2  00CF               	movwf	ModbusSlaveF04@valueAdd+1
 10637                           
 10638                           ;Mobbus_Slave.c: 39:     valueAdd._Byte[0] = SES_Modbus.au8Buffer[ADD_LO];
 10639     0BD3  3038               	movlw	56
 10640     0BD4  0086               	movwf	6
 10641     0BD5  3021               	movlw	33
 10642     0BD6  0087               	movwf	7
 10643     0BD7  3147               	addfsr 1,7
 10644     0BD8  0801               	movf	1,w
 10645     0BD9  00CE               	movwf	ModbusSlaveF04@valueAdd
 10646     0BDA                     l3721:
 10647                           
 10648                           ;Mobbus_Slave.c: 40:     uint16_t u8StartAdd = (uint16_t) valueAdd.Val16;
 10649     0BDA  084F               	movf	ModbusSlaveF04@valueAdd+1,w
 10650     0BDB  00CB               	movwf	ModbusSlaveF04@u8StartAdd+1
 10651     0BDC  084E               	movf	ModbusSlaveF04@valueAdd,w
 10652     0BDD  00CA               	movwf	ModbusSlaveF04@u8StartAdd
 10653     0BDE                     l3723:
 10654                           
 10655                           ;Mobbus_Slave.c: 42:     valueRegsno._Byte[1] = SES_Modbus.au8Buffer[ NB_HI];
 10656     0BDE  3038               	movlw	56
 10657     0BDF  0086               	movwf	6
 10658     0BE0  3021               	movlw	33
 10659     0BE1  0087               	movwf	7
 10660     0BE2  3148               	addfsr 1,8
 10661     0BE3  0801               	movf	1,w
 10662     0BE4  00D1               	movwf	ModbusSlaveF04@valueRegsno+1
 10663     0BE5                     l3725:
 10664                           
 10665                           ;Mobbus_Slave.c: 43:     valueRegsno._Byte[0] = SES_Modbus.au8Buffer[ NB_LO];
 10666     0BE5  3038               	movlw	56
 10667     0BE6  0086               	movwf	6
 10668     0BE7  3021               	movlw	33
 10669     0BE8  0087               	movwf	7
 10670     0BE9  3149               	addfsr 1,9
 10671     0BEA  0801               	movf	1,w
 10672     0BEB  00D0               	movwf	ModbusSlaveF04@valueRegsno
 10673     0BEC                     l3727:
 10674                           
 10675                           ;Mobbus_Slave.c: 44:     uint8_t u8regsno = (uint8_t) valueRegsno.Val16;
 10676     0BEC  0850               	movf	ModbusSlaveF04@valueRegsno,w
 10677     0BED  00CC               	movwf	ModbusSlaveF04@u8regsno
 10678     0BEE                     l3729:
 10679                           
 10680                           ;Mobbus_Slave.c: 46:     uint8_t u8CopyBufferSize;;Mobbus_Slave.c: 47:     uint16_t i;;M
      +                          obbus_Slave.c: 49:     SES_Modbus.au8Buffer[ 2 ] = u8regsno * 2;
 10681     0BEE  354C               	lslf	ModbusSlaveF04@u8regsno,w
 10682     0BEF  00C0               	movwf	??_ModbusSlaveF04
 10683     0BF0  303E               	movlw	62
 10684     0BF1  0086               	movwf	6
 10685     0BF2  3021               	movlw	33
 10686     0BF3  0087               	movwf	7
 10687     0BF4  0840               	movf	??_ModbusSlaveF04,w
 10688     0BF5  0081               	movwf	1
 10689     0BF6                     l3731:
 10690                           
 10691                           ;Mobbus_Slave.c: 50:     SES_Modbus.u8BufferSize = 3;
 10692     0BF6  30D2               	movlw	210
 10693     0BF7  0086               	movwf	6
 10694     0BF8  3021               	movlw	33
 10695     0BF9  0087               	movwf	7
 10696     0BFA  3003               	movlw	3
 10697     0BFB  0081               	movwf	1
 10698     0BFC                     l3733:
 10699                           
 10700                           ;Mobbus_Slave.c: 52:     for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++) {
 10701     0BFC  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10702     0BFD  00D3               	movwf	ModbusSlaveF04@i+1
 10703     0BFE  084A               	movf	ModbusSlaveF04@u8StartAdd,w
 10704     0BFF  00D2               	movwf	ModbusSlaveF04@i
 10705     0C00  2C59               	goto	l3739
 10706     0C01                     l3735:
 10707                           
 10708                           ;Mobbus_Slave.c: 53:         SES_Modbus.au8Buffer[SES_Modbus.u8BufferSize ] = ((uint8_t)
      +                           ((reg[i]) >> 8));
 10709     0C01  3552               	lslf	ModbusSlaveF04@i,w
 10710     0C02  074D               	addwf	ModbusSlaveF04@reg,w
 10711     0C03  00C0               	movwf	??_ModbusSlaveF04
 10712     0C04  0840               	movf	??_ModbusSlaveF04,w
 10713     0C05  0086               	movwf	6
 10714     0C06  3001               	movlw	1	; select bank2/3
 10715     0C07  0087               	movwf	7
 10716     0C08  3F40               	moviw [0]fsr1
 10717     0C09  00C1               	movwf	??_ModbusSlaveF04+1
 10718     0C0A  3F41               	moviw [1]fsr1
 10719     0C0B  00C2               	movwf	??_ModbusSlaveF04+2
 10720     0C0C  0842               	movf	??_ModbusSlaveF04+2,w
 10721     0C0D  00C3               	movwf	??_ModbusSlaveF04+3
 10722     0C0E  30D2               	movlw	210
 10723     0C0F  0086               	movwf	6
 10724     0C10  3021               	movlw	33
 10725     0C11  0087               	movwf	7
 10726     0C12  0801               	movf	1,w
 10727     0C13  00C4               	movwf	??_ModbusSlaveF04+4
 10728     0C14  01C5               	clrf	??_ModbusSlaveF04+5
 10729     0C15  303C               	movlw	60
 10730     0C16  00C6               	movwf	??_ModbusSlaveF04+6
 10731     0C17  3021               	movlw	33
 10732     0C18  00C7               	movwf	??_ModbusSlaveF04+7
 10733     0C19  0844               	movf	??_ModbusSlaveF04+4,w
 10734     0C1A  0746               	addwf	??_ModbusSlaveF04+6,w
 10735     0C1B  00C8               	movwf	??_ModbusSlaveF04+8
 10736     0C1C  0845               	movf	??_ModbusSlaveF04+5,w
 10737     0C1D  3D47               	addwfc	??_ModbusSlaveF04+7,w
 10738     0C1E  00C9               	movwf	??_ModbusSlaveF04+9
 10739     0C1F  0848               	movf	??_ModbusSlaveF04+8,w
 10740     0C20  0086               	movwf	6
 10741     0C21  0849               	movf	??_ModbusSlaveF04+9,w
 10742     0C22  0087               	movwf	7
 10743     0C23  0843               	movf	??_ModbusSlaveF04+3,w
 10744     0C24  0081               	movwf	1
 10745                           
 10746                           ;Mobbus_Slave.c: 54:         SES_Modbus.u8BufferSize++;
 10747     0C25  3001               	movlw	1
 10748     0C26  00C0               	movwf	??_ModbusSlaveF04
 10749     0C27  30D2               	movlw	210
 10750     0C28  0086               	movwf	6
 10751     0C29  3021               	movlw	33
 10752     0C2A  0087               	movwf	7
 10753     0C2B  0840               	movf	??_ModbusSlaveF04,w
 10754     0C2C  0781               	addwf	1,f
 10755                           
 10756                           ;Mobbus_Slave.c: 55:         SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = ((uint8_t
      +                          ) ((reg[i]) & 0xff));
 10757     0C2D  3552               	lslf	ModbusSlaveF04@i,w
 10758     0C2E  074D               	addwf	ModbusSlaveF04@reg,w
 10759     0C2F  00C0               	movwf	??_ModbusSlaveF04
 10760     0C30  0840               	movf	??_ModbusSlaveF04,w
 10761     0C31  0086               	movwf	6
 10762     0C32  3001               	movlw	1	; select bank2/3
 10763     0C33  0087               	movwf	7
 10764     0C34  0801               	movf	1,w
 10765     0C35  00C1               	movwf	??_ModbusSlaveF04+1
 10766     0C36  30D2               	movlw	210
 10767     0C37  0086               	movwf	6
 10768     0C38  3021               	movlw	33
 10769     0C39  0087               	movwf	7
 10770     0C3A  0801               	movf	1,w
 10771     0C3B  00C2               	movwf	??_ModbusSlaveF04+2
 10772     0C3C  01C3               	clrf	??_ModbusSlaveF04+3
 10773     0C3D  303C               	movlw	60
 10774     0C3E  00C4               	movwf	??_ModbusSlaveF04+4
 10775     0C3F  3021               	movlw	33
 10776     0C40  00C5               	movwf	??_ModbusSlaveF04+5
 10777     0C41  0842               	movf	??_ModbusSlaveF04+2,w
 10778     0C42  0744               	addwf	??_ModbusSlaveF04+4,w
 10779     0C43  00C6               	movwf	??_ModbusSlaveF04+6
 10780     0C44  0843               	movf	??_ModbusSlaveF04+3,w
 10781     0C45  3D45               	addwfc	??_ModbusSlaveF04+5,w
 10782     0C46  00C7               	movwf	??_ModbusSlaveF04+7
 10783     0C47  0846               	movf	??_ModbusSlaveF04+6,w
 10784     0C48  0086               	movwf	6
 10785     0C49  0847               	movf	??_ModbusSlaveF04+7,w
 10786     0C4A  0087               	movwf	7
 10787     0C4B  0841               	movf	??_ModbusSlaveF04+1,w
 10788     0C4C  0081               	movwf	1
 10789                           
 10790                           ;Mobbus_Slave.c: 56:         SES_Modbus.u8BufferSize++;
 10791     0C4D  3001               	movlw	1
 10792     0C4E  00C0               	movwf	??_ModbusSlaveF04
 10793     0C4F  30D2               	movlw	210
 10794     0C50  0086               	movwf	6
 10795     0C51  3021               	movlw	33
 10796     0C52  0087               	movwf	7
 10797     0C53  0840               	movf	??_ModbusSlaveF04,w
 10798     0C54  0781               	addwf	1,f
 10799     0C55                     l3737:
 10800                           
 10801                           ;Mobbus_Slave.c: 57:     }
 10802     0C55  3001               	movlw	1
 10803     0C56  07D2               	addwf	ModbusSlaveF04@i,f
 10804     0C57  3000               	movlw	0
 10805     0C58  3DD3               	addwfc	ModbusSlaveF04@i+1,f
 10806     0C59                     l3739:
 10807     0C59  084C               	movf	ModbusSlaveF04@u8regsno,w
 10808     0C5A  074A               	addwf	ModbusSlaveF04@u8StartAdd,w
 10809     0C5B  00C0               	movwf	??_ModbusSlaveF04
 10810     0C5C  084B               	movf	ModbusSlaveF04@u8StartAdd+1,w
 10811     0C5D  1803               	skipnc
 10812     0C5E  0A4B               	incf	ModbusSlaveF04@u8StartAdd+1,w
 10813     0C5F  00C1               	movwf	??_ModbusSlaveF04+1
 10814     0C60  0841               	movf	??_ModbusSlaveF04+1,w
 10815     0C61  0253               	subwf	ModbusSlaveF04@i+1,w
 10816     0C62  1D03               	skipz
 10817     0C63  2C66               	goto	u2525
 10818     0C64  0840               	movf	??_ModbusSlaveF04,w
 10819     0C65  0252               	subwf	ModbusSlaveF04@i,w
 10820     0C66                     u2525:
 10821     0C66  1C03               	skipc
 10822     0C67  2C69               	goto	u2521
 10823     0C68  2C6A               	goto	u2520
 10824     0C69                     u2521:
 10825     0C69  2C01               	goto	l3735
 10826     0C6A                     u2520:
 10827     0C6A                     l3741:
 10828     0C6A                     l3743:
 10829                           
 10830                           ;Mobbus_Slave.c: 59:     Modbus_sendTxBuff();
 10831     0C6A  318D  2519  318B   	fcall	_Modbus_sendTxBuff
 10832     0C6D                     l911:
 10833     0C6D  0008               	return
 10834     0C6E                     __end_of_ModbusSlaveF04:
 10835                           
 10836                           	psect	text48
 10837     0D19                     __ptext48:	
 10838 ;; *************** function _Modbus_sendTxBuff *****************
 10839 ;; Defined at:
 10840 ;;		line 169 in file "Mobbus_Slave.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;  u32overTimec    4   26[BANK0 ] volatile unsigned long 
 10845 ;;  index           2   24[BANK0 ] int 
 10846 ;;  u16crc          2   22[BANK0 ] unsigned short 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10856 ;;      Params:         0       0       0       0       0       0       0       0
 10857 ;;      Locals:         0       8       0       0       0       0       0       0
 10858 ;;      Temps:          0       7       0       0       0       0       0       0
 10859 ;;      Totals:         0      15       0       0       0       0       0       0
 10860 ;;Total ram usage:       15 bytes
 10861 ;; Hardware stack levels used: 1
 10862 ;; Hardware stack levels required when called: 8
 10863 ;; This function calls:
 10864 ;;		_EUSART_Write
 10865 ;;		_EUSART_is_tx_done
 10866 ;;		_Get_millis
 10867 ;;		_Modbus_calcCRC
 10868 ;; This function is called by:
 10869 ;;		_ModbusSlaveF04
 10870 ;;		_ModbusRTU_Slave_Poll
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874     0D19                     _Modbus_sendTxBuff:	
 10875                           ;psect for function _Modbus_sendTxBuff
 10876                           
 10877     0D19                     l3599:	
 10878                           ;incstack = 0
 10879                           ; Regs used in _Modbus_sendTxBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10880                           
 10881                           
 10882                           ;Mobbus_Slave.c: 170:     uint16_t u16crc = Modbus_calcCRC(SES_Modbus.u8BufferSize);
 10883     0D19  30D2               	movlw	210
 10884     0D1A  0086               	movwf	6
 10885     0D1B  3021               	movlw	33
 10886     0D1C  0087               	movwf	7
 10887     0D1D  0801               	movf	1,w
 10888     0D1E  3189  2170  318D   	fcall	_Modbus_calcCRC
 10889     0D21  0020               	movlb	0	; select bank0
 10890     0D22  0821               	movf	?_Modbus_calcCRC+1,w
 10891     0D23  00B7               	movwf	Modbus_sendTxBuff@u16crc+1
 10892     0D24  0820               	movf	?_Modbus_calcCRC,w
 10893     0D25  00B6               	movwf	Modbus_sendTxBuff@u16crc
 10894     0D26                     l3601:
 10895                           
 10896                           ;Mobbus_Slave.c: 171:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc >> 8;
 10897     0D26  0837               	movf	Modbus_sendTxBuff@u16crc+1,w
 10898     0D27  00AF               	movwf	??_Modbus_sendTxBuff
 10899     0D28  30D2               	movlw	210
 10900     0D29  0086               	movwf	6
 10901     0D2A  3021               	movlw	33
 10902     0D2B  0087               	movwf	7
 10903     0D2C  0801               	movf	1,w
 10904     0D2D  00B0               	movwf	??_Modbus_sendTxBuff+1
 10905     0D2E  01B1               	clrf	??_Modbus_sendTxBuff+2
 10906     0D2F  303C               	movlw	60
 10907     0D30  00B2               	movwf	??_Modbus_sendTxBuff+3
 10908     0D31  3021               	movlw	33
 10909     0D32  00B3               	movwf	??_Modbus_sendTxBuff+4
 10910     0D33  0830               	movf	??_Modbus_sendTxBuff+1,w
 10911     0D34  0732               	addwf	??_Modbus_sendTxBuff+3,w
 10912     0D35  00B4               	movwf	??_Modbus_sendTxBuff+5
 10913     0D36  0831               	movf	??_Modbus_sendTxBuff+2,w
 10914     0D37  3D33               	addwfc	??_Modbus_sendTxBuff+4,w
 10915     0D38  00B5               	movwf	??_Modbus_sendTxBuff+6
 10916     0D39  0834               	movf	??_Modbus_sendTxBuff+5,w
 10917     0D3A  0086               	movwf	6
 10918     0D3B  0835               	movf	??_Modbus_sendTxBuff+6,w
 10919     0D3C  0087               	movwf	7
 10920     0D3D  082F               	movf	??_Modbus_sendTxBuff,w
 10921     0D3E  0081               	movwf	1
 10922     0D3F                     l3603:
 10923                           
 10924                           ;Mobbus_Slave.c: 172:     SES_Modbus.u8BufferSize++;
 10925     0D3F  3001               	movlw	1
 10926     0D40  00AF               	movwf	??_Modbus_sendTxBuff
 10927     0D41  30D2               	movlw	210
 10928     0D42  0086               	movwf	6
 10929     0D43  3021               	movlw	33
 10930     0D44  0087               	movwf	7
 10931     0D45  082F               	movf	??_Modbus_sendTxBuff,w
 10932     0D46  0781               	addwf	1,f
 10933     0D47                     l3605:
 10934                           
 10935                           ;Mobbus_Slave.c: 173:     SES_Modbus.au8Buffer[ SES_Modbus.u8BufferSize ] = u16crc & 0x0
      +                          0ff;
 10936     0D47  30D2               	movlw	210
 10937     0D48  0086               	movwf	6
 10938     0D49  3021               	movlw	33
 10939     0D4A  0087               	movwf	7
 10940     0D4B  0801               	movf	1,w
 10941     0D4C  00AF               	movwf	??_Modbus_sendTxBuff
 10942     0D4D  01B0               	clrf	??_Modbus_sendTxBuff+1
 10943     0D4E  303C               	movlw	60
 10944     0D4F  00B1               	movwf	??_Modbus_sendTxBuff+2
 10945     0D50  3021               	movlw	33
 10946     0D51  00B2               	movwf	??_Modbus_sendTxBuff+3
 10947     0D52  082F               	movf	??_Modbus_sendTxBuff,w
 10948     0D53  0731               	addwf	??_Modbus_sendTxBuff+2,w
 10949     0D54  00B3               	movwf	??_Modbus_sendTxBuff+4
 10950     0D55  0830               	movf	??_Modbus_sendTxBuff+1,w
 10951     0D56  3D32               	addwfc	??_Modbus_sendTxBuff+3,w
 10952     0D57  00B4               	movwf	??_Modbus_sendTxBuff+5
 10953     0D58  0833               	movf	??_Modbus_sendTxBuff+4,w
 10954     0D59  0086               	movwf	6
 10955     0D5A  0834               	movf	??_Modbus_sendTxBuff+5,w
 10956     0D5B  0087               	movwf	7
 10957     0D5C  0836               	movf	Modbus_sendTxBuff@u16crc,w
 10958     0D5D  0081               	movwf	1
 10959     0D5E                     l3607:
 10960                           
 10961                           ;Mobbus_Slave.c: 174:     SES_Modbus.u8BufferSize++;
 10962     0D5E  3001               	movlw	1
 10963     0D5F  00AF               	movwf	??_Modbus_sendTxBuff
 10964     0D60  30D2               	movlw	210
 10965     0D61  0086               	movwf	6
 10966     0D62  3021               	movlw	33
 10967     0D63  0087               	movwf	7
 10968     0D64  082F               	movf	??_Modbus_sendTxBuff,w
 10969     0D65  0781               	addwf	1,f
 10970     0D66                     l3609:
 10971                           
 10972                           ;Mobbus_Slave.c: 177:     if (SES_Modbus.u8txenpin > 1) {
 10973     0D66  3038               	movlw	56
 10974     0D67  0086               	movwf	6
 10975     0D68  3021               	movlw	33
 10976     0D69  0087               	movwf	7
 10977     0D6A  3141               	addfsr 1,1
 10978     0D6B  3002               	movlw	2
 10979     0D6C  0201               	subwf	1,w
 10980     0D6D  1C03               	skipc
 10981     0D6E  2D70               	goto	u2431
 10982     0D6F  2D71               	goto	u2430
 10983     0D70                     u2431:
 10984     0D70  2D73               	goto	l3611
 10985     0D71                     u2430:
 10986     0D71                     l945:	
 10987                           ;Mobbus_Slave.c: 178:         do { LATCbits.LATC5 = 1; } while(0);
 10988                           
 10989     0D71  0022               	movlb	2	; select bank2
 10990     0D72  168E               	bsf	14,5	;volatile
 10991     0D73                     l3611:
 10992                           
 10993                           ;Mobbus_Slave.c: 184:     for (int index = 0; index < SES_Modbus.u8BufferSize; index++) 
      +                          {
 10994     0D73  0020               	movlb	0	; select bank0
 10995     0D74  01B8               	clrf	Modbus_sendTxBuff@index
 10996     0D75  01B9               	clrf	Modbus_sendTxBuff@index+1
 10997     0D76  2D8B               	goto	l3617
 10998     0D77                     l3613:
 10999                           
 11000                           ;Mobbus_Slave.c: 185:         EUSART_Write(SES_Modbus.au8Buffer[index]);
 11001     0D77  303C               	movlw	60
 11002     0D78  0020               	movlb	0	; select bank0
 11003     0D79  00AF               	movwf	??_Modbus_sendTxBuff
 11004     0D7A  3021               	movlw	33
 11005     0D7B  00B0               	movwf	??_Modbus_sendTxBuff+1
 11006     0D7C  0838               	movf	Modbus_sendTxBuff@index,w
 11007     0D7D  072F               	addwf	??_Modbus_sendTxBuff,w
 11008     0D7E  0086               	movwf	6
 11009     0D7F  0839               	movf	Modbus_sendTxBuff@index+1,w
 11010     0D80  3D30               	addwfc	??_Modbus_sendTxBuff+1,w
 11011     0D81  0087               	movwf	7
 11012     0D82  0801               	movf	1,w
 11013     0D83  3196  2618  318D   	fcall	_EUSART_Write
 11014     0D86                     l3615:
 11015                           
 11016                           ;Mobbus_Slave.c: 186:     }
 11017     0D86  3001               	movlw	1
 11018     0D87  0020               	movlb	0	; select bank0
 11019     0D88  07B8               	addwf	Modbus_sendTxBuff@index,f
 11020     0D89  3000               	movlw	0
 11021     0D8A  3DB9               	addwfc	Modbus_sendTxBuff@index+1,f
 11022     0D8B                     l3617:
 11023     0D8B  30D2               	movlw	210
 11024     0D8C  0086               	movwf	6
 11025     0D8D  3021               	movlw	33
 11026     0D8E  0087               	movwf	7
 11027     0D8F  0839               	movf	Modbus_sendTxBuff@index+1,w
 11028     0D90  3A80               	xorlw	128
 11029     0D91  00AF               	movwf	??_Modbus_sendTxBuff
 11030     0D92  3080               	movlw	128
 11031     0D93  022F               	subwf	??_Modbus_sendTxBuff,w
 11032     0D94  1D03               	skipz
 11033     0D95  2D98               	goto	u2445
 11034     0D96  0801               	movf	1,w
 11035     0D97  0238               	subwf	Modbus_sendTxBuff@index,w
 11036     0D98                     u2445:
 11037     0D98  1C03               	skipc
 11038     0D99  2D9B               	goto	u2441
 11039     0D9A  2D9C               	goto	u2440
 11040     0D9B                     u2441:
 11041     0D9B  2D77               	goto	l3613
 11042     0D9C                     u2440:
 11043     0D9C                     l3619:
 11044                           
 11045                           ;Mobbus_Slave.c: 188:     if (SES_Modbus.u8txenpin > 1) {
 11046     0D9C  3038               	movlw	56
 11047     0D9D  0086               	movwf	6
 11048     0D9E  3021               	movlw	33
 11049     0D9F  0087               	movwf	7
 11050     0DA0  3141               	addfsr 1,1
 11051     0DA1  3002               	movlw	2
 11052     0DA2  0201               	subwf	1,w
 11053     0DA3  1C03               	skipc
 11054     0DA4  2DA6               	goto	u2451
 11055     0DA5  2DA7               	goto	u2450
 11056     0DA6                     u2451:
 11057     0DA6  2DDD               	goto	l3629
 11058     0DA7                     u2450:
 11059     0DA7                     l3623:
 11060     0DA7  3192  2265  318D   	fcall	_EUSART_is_tx_done
 11061     0DAA  3A00               	xorlw	0
 11062     0DAB  1903               	skipnz
 11063     0DAC  2DAE               	goto	u2461
 11064     0DAD  2DAF               	goto	u2460
 11065     0DAE                     u2461:
 11066     0DAE  2DA7               	goto	l3623
 11067     0DAF                     u2460:
 11068     0DAF                     l3625:
 11069                           
 11070                           ;Mobbus_Slave.c: 196:         volatile uint32_t u32overTimecountDown = SES_Modbus.u32ove
      +                          rTime;
 11071     0DAF  30E6               	movlw	230
 11072     0DB0  0086               	movwf	6
 11073     0DB1  3021               	movlw	33
 11074     0DB2  0087               	movwf	7
 11075     0DB3  3F40               	moviw [0]fsr1
 11076     0DB4  0020               	movlb	0	; select bank0
 11077     0DB5  00BA               	movwf	Modbus_sendTxBuff@u32overTimecountDown	;volatile
 11078     0DB6  3F41               	moviw [1]fsr1
 11079     0DB7  00BB               	movwf	Modbus_sendTxBuff@u32overTimecountDown+1	;volatile
 11080     0DB8  3F42               	moviw [2]fsr1
 11081     0DB9  00BC               	movwf	Modbus_sendTxBuff@u32overTimecountDown+2	;volatile
 11082     0DBA  3F43               	moviw [3]fsr1
 11083     0DBB  00BD               	movwf	Modbus_sendTxBuff@u32overTimecountDown+3	;volatile
 11084     0DBC                     l3627:	
 11085                           ;Mobbus_Slave.c: 198:         while (u32overTimecountDown-- > 0);
 11086                           
 11087     0DBC  3001               	movlw	1
 11088     0DBD  0020               	movlb	0	; select bank0
 11089     0DBE  00AF               	movwf	??_Modbus_sendTxBuff
 11090     0DBF  3000               	movlw	0
 11091     0DC0  00B0               	movwf	??_Modbus_sendTxBuff+1
 11092     0DC1  3000               	movlw	0
 11093     0DC2  00B1               	movwf	??_Modbus_sendTxBuff+2
 11094     0DC3  3000               	movlw	0
 11095     0DC4  00B2               	movwf	??_Modbus_sendTxBuff+3
 11096     0DC5  082F               	movf	??_Modbus_sendTxBuff,w
 11097     0DC6  02BA               	subwf	Modbus_sendTxBuff@u32overTimecountDown,f	;volatile
 11098     0DC7  0830               	movf	??_Modbus_sendTxBuff+1,w
 11099     0DC8  3BBB               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+1,f	;volatile
 11100     0DC9  0831               	movf	??_Modbus_sendTxBuff+2,w
 11101     0DCA  3BBC               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+2,f	;volatile
 11102     0DCB  0832               	movf	??_Modbus_sendTxBuff+3,w
 11103     0DCC  3BBD               	subwfb	Modbus_sendTxBuff@u32overTimecountDown+3,f	;volatile
 11104     0DCD  0A3A               	incf	Modbus_sendTxBuff@u32overTimecountDown,w	;volatile
 11105     0DCE  1D03               	skipz
 11106     0DCF  2DDA               	goto	u2471
 11107     0DD0  0A3B               	incf	Modbus_sendTxBuff@u32overTimecountDown+1,w	;volatile
 11108     0DD1  1D03               	skipz
 11109     0DD2  2DDA               	goto	u2471
 11110     0DD3  0A3C               	incf	Modbus_sendTxBuff@u32overTimecountDown+2,w	;volatile
 11111     0DD4  1D03               	skipz
 11112     0DD5  2DDA               	goto	u2471
 11113     0DD6  0A3D               	incf	Modbus_sendTxBuff@u32overTimecountDown+3,w	;volatile
 11114     0DD7  1D03               	btfss	3,2
 11115     0DD8  2DDA               	goto	u2471
 11116     0DD9  2DDB               	goto	u2470
 11117     0DDA                     u2471:
 11118     0DDA  2DBC               	goto	l3627
 11119     0DDB                     u2470:
 11120     0DDB                     l957:	
 11121                           ;Mobbus_Slave.c: 199:         do { LATCbits.LATC5 = 0; } while(0);
 11122                           
 11123     0DDB  0022               	movlb	2	; select bank2
 11124     0DDC  128E               	bcf	14,5	;volatile
 11125     0DDD                     l3629:
 11126                           
 11127                           ;Mobbus_Slave.c: 202:     SES_Modbus.u8BufferSize = 0;
 11128     0DDD  30D2               	movlw	210
 11129     0DDE  0086               	movwf	6
 11130     0DDF  3021               	movlw	33
 11131     0DE0  0087               	movwf	7
 11132     0DE1  0181               	clrf	1
 11133     0DE2                     l3631:
 11134                           
 11135                           ;Mobbus_Slave.c: 205:     SES_Modbus.u32timeOut = Get_millis();
 11136     0DE2  3194  2408  318D   	fcall	_Get_millis
 11137     0DE5  30E2               	movlw	226
 11138     0DE6  0086               	movwf	6
 11139     0DE7  3021               	movlw	33
 11140     0DE8  0087               	movwf	7
 11141     0DE9  0020               	movlb	0	; select bank0
 11142     0DEA  0820               	movf	?_Get_millis,w
 11143     0DEB  3FC0               	movwi [0]fsr1
 11144     0DEC  0821               	movf	?_Get_millis+1,w
 11145     0DED  3FC1               	movwi [1]fsr1
 11146     0DEE  0822               	movf	?_Get_millis+2,w
 11147     0DEF  3FC2               	movwi [2]fsr1
 11148     0DF0  0823               	movf	?_Get_millis+3,w
 11149     0DF1  3FC3               	movwi [3]fsr1
 11150     0DF2                     l3633:
 11151                           
 11152                           ;Mobbus_Slave.c: 208:     SES_Modbus.u16OutCnt++;
 11153     0DF2  30D8               	movlw	216
 11154     0DF3  0086               	movwf	6
 11155     0DF4  3021               	movlw	33
 11156     0DF5  0087               	movwf	7
 11157     0DF6  3001               	movlw	1
 11158     0DF7  0781               	addwf	1,f
 11159     0DF8  3141               	addfsr 1,1
 11160     0DF9  1803               	skipnc
 11161     0DFA  0A81               	incf	1,f
 11162     0DFB                     l959:
 11163     0DFB  0008               	return
 11164     0DFC                     __end_of_Modbus_sendTxBuff:
 11165                           
 11166                           	psect	text49
 11167     0970                     __ptext49:	
 11168 ;; *************** function _Modbus_calcCRC *****************
 11169 ;; Defined at:
 11170 ;;		line 211 in file "Mobbus_Slave.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;  len             1    wreg     unsigned char 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  len             1   10[BANK0 ] unsigned char 
 11175 ;;  j               1   12[BANK0 ] unsigned char 
 11176 ;;  temp            2   13[BANK0 ] unsigned int 
 11177 ;;  flag            2    8[BANK0 ] unsigned int 
 11178 ;;  temp2           2    6[BANK0 ] unsigned int 
 11179 ;;  i               1   11[BANK0 ] unsigned char 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  2    0[BANK0 ] unsigned short 
 11182 ;; Registers used:
 11183 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11189 ;;      Params:         0       2       0       0       0       0       0       0
 11190 ;;      Locals:         0       9       0       0       0       0       0       0
 11191 ;;      Temps:          0       4       0       0       0       0       0       0
 11192 ;;      Totals:         0      15       0       0       0       0       0       0
 11193 ;;Total ram usage:       15 bytes
 11194 ;; Hardware stack levels used: 1
 11195 ;; Hardware stack levels required when called: 7
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_validateRequest
 11200 ;;		_Modbus_sendTxBuff
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204     0970                     _Modbus_calcCRC:	
 11205                           ;psect for function _Modbus_calcCRC
 11206                           
 11207                           
 11208                           ;incstack = 0
 11209                           ; Regs used in _Modbus_calcCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
 11210                           ;Modbus_calcCRC@len stored from wreg
 11211     0970  0020               	movlb	0	; select bank0
 11212     0971  00AA               	movwf	Modbus_calcCRC@len
 11213     0972                     l3493:
 11214                           
 11215                           ;Mobbus_Slave.c: 212:     unsigned int temp, temp2, flag;;Mobbus_Slave.c: 213:     temp 
      +                          = 0xFFFF;
 11216     0972  30FF               	movlw	255
 11217     0973  00AD               	movwf	Modbus_calcCRC@temp
 11218     0974  30FF               	movlw	255
 11219     0975  00AE               	movwf	Modbus_calcCRC@temp+1
 11220     0976                     l3495:
 11221                           
 11222                           ;Mobbus_Slave.c: 214:     unsigned char i = 0;
 11223     0976  01AB               	clrf	Modbus_calcCRC@i
 11224                           
 11225                           ;Mobbus_Slave.c: 215:     for (i = 0; i < len; i++) {
 11226     0977  01AB               	clrf	Modbus_calcCRC@i
 11227     0978  29B0               	goto	l3521
 11228     0979                     l3497:
 11229                           
 11230                           ;Mobbus_Slave.c: 216:         temp = temp ^ SES_Modbus.au8Buffer[i];
 11231     0979  082B               	movf	Modbus_calcCRC@i,w
 11232     097A  00A2               	movwf	??_Modbus_calcCRC
 11233     097B  01A3               	clrf	??_Modbus_calcCRC+1
 11234     097C  303C               	movlw	60
 11235     097D  00A4               	movwf	??_Modbus_calcCRC+2
 11236     097E  3021               	movlw	33
 11237     097F  00A5               	movwf	??_Modbus_calcCRC+3
 11238     0980  0822               	movf	??_Modbus_calcCRC,w
 11239     0981  0724               	addwf	??_Modbus_calcCRC+2,w
 11240     0982  0086               	movwf	6
 11241     0983  0823               	movf	??_Modbus_calcCRC+1,w
 11242     0984  3D25               	addwfc	??_Modbus_calcCRC+3,w
 11243     0985  0087               	movwf	7
 11244     0986  082D               	movf	Modbus_calcCRC@temp,w
 11245     0987  0601               	xorwf	1,w
 11246     0988  00AD               	movwf	Modbus_calcCRC@temp
 11247     0989  082E               	movf	Modbus_calcCRC@temp+1,w
 11248     098A  00AE               	movwf	Modbus_calcCRC@temp+1
 11249     098B                     l3499:
 11250     098B                     l3501:
 11251                           
 11252                           ;Mobbus_Slave.c: 218:         for (j = 1; j <= 8; j++) {
 11253     098B  01AC               	clrf	Modbus_calcCRC@j
 11254     098C  0AAC               	incf	Modbus_calcCRC@j,f
 11255     098D                     l3507:
 11256                           
 11257                           ;Mobbus_Slave.c: 219:             flag = temp & 0x0001;
 11258     098D  3001               	movlw	1
 11259     098E  052D               	andwf	Modbus_calcCRC@temp,w
 11260     098F  00A8               	movwf	Modbus_calcCRC@flag
 11261     0990  3000               	movlw	0
 11262     0991  052E               	andwf	Modbus_calcCRC@temp+1,w
 11263     0992  00A9               	movwf	Modbus_calcCRC@flag+1
 11264     0993                     l3509:
 11265                           
 11266                           ;Mobbus_Slave.c: 220:             temp >>= 1;
 11267     0993  3001               	movlw	1
 11268     0994                     u2335:
 11269     0994  36AE               	lsrf	Modbus_calcCRC@temp+1,f
 11270     0995  0CAD               	rrf	Modbus_calcCRC@temp,f
 11271     0996  0B89               	decfsz	9,f
 11272     0997  2994               	goto	u2335
 11273     0998                     l3511:
 11274                           
 11275                           ;Mobbus_Slave.c: 221:             if (flag)
 11276     0998  0828               	movf	Modbus_calcCRC@flag,w
 11277     0999  0429               	iorwf	Modbus_calcCRC@flag+1,w
 11278     099A  1903               	btfsc	3,2
 11279     099B  299D               	goto	u2341
 11280     099C  299E               	goto	u2340
 11281     099D                     u2341:
 11282     099D  29A2               	goto	l3515
 11283     099E                     u2340:
 11284     099E                     l3513:
 11285                           
 11286                           ;Mobbus_Slave.c: 222:                 temp ^= 0xA001;
 11287     099E  3001               	movlw	1
 11288     099F  06AD               	xorwf	Modbus_calcCRC@temp,f
 11289     09A0  30A0               	movlw	160
 11290     09A1  06AE               	xorwf	Modbus_calcCRC@temp+1,f
 11291     09A2                     l3515:
 11292                           
 11293                           ;Mobbus_Slave.c: 223:         }
 11294     09A2  3001               	movlw	1
 11295     09A3  00A2               	movwf	??_Modbus_calcCRC
 11296     09A4  0822               	movf	??_Modbus_calcCRC,w
 11297     09A5  07AC               	addwf	Modbus_calcCRC@j,f
 11298     09A6                     l3517:
 11299     09A6  3009               	movlw	9
 11300     09A7  022C               	subwf	Modbus_calcCRC@j,w
 11301     09A8  1C03               	skipc
 11302     09A9  29AB               	goto	u2351
 11303     09AA  29AC               	goto	u2350
 11304     09AB                     u2351:
 11305     09AB  298D               	goto	l3507
 11306     09AC                     u2350:
 11307     09AC                     l3519:
 11308                           
 11309                           ;Mobbus_Slave.c: 224:     }
 11310     09AC  3001               	movlw	1
 11311     09AD  00A2               	movwf	??_Modbus_calcCRC
 11312     09AE  0822               	movf	??_Modbus_calcCRC,w
 11313     09AF  07AB               	addwf	Modbus_calcCRC@i,f
 11314     09B0                     l3521:
 11315     09B0  082A               	movf	Modbus_calcCRC@len,w
 11316     09B1  022B               	subwf	Modbus_calcCRC@i,w
 11317     09B2  1C03               	skipc
 11318     09B3  29B5               	goto	u2361
 11319     09B4  29B6               	goto	u2360
 11320     09B5                     u2361:
 11321     09B5  2979               	goto	l3497
 11322     09B6                     u2360:
 11323     09B6                     l3523:
 11324                           
 11325                           ;Mobbus_Slave.c: 226:     temp2 = temp >> 8;
 11326     09B6  082E               	movf	Modbus_calcCRC@temp+1,w
 11327     09B7  00A3               	movwf	??_Modbus_calcCRC+1
 11328     09B8  082D               	movf	Modbus_calcCRC@temp,w
 11329     09B9  00A2               	movwf	??_Modbus_calcCRC
 11330     09BA  0823               	movf	??_Modbus_calcCRC+1,w
 11331     09BB  00A2               	movwf	??_Modbus_calcCRC
 11332     09BC  01A3               	clrf	??_Modbus_calcCRC+1
 11333     09BD  0822               	movf	??_Modbus_calcCRC,w
 11334     09BE  00A6               	movwf	Modbus_calcCRC@temp2
 11335     09BF  0823               	movf	??_Modbus_calcCRC+1,w
 11336     09C0  00A7               	movwf	Modbus_calcCRC@temp2+1
 11337     09C1                     l3525:
 11338                           
 11339                           ;Mobbus_Slave.c: 227:     temp = (temp << 8) | temp2;
 11340     09C1  082D               	movf	Modbus_calcCRC@temp,w
 11341     09C2  00A3               	movwf	??_Modbus_calcCRC+1
 11342     09C3  01A2               	clrf	??_Modbus_calcCRC
 11343     09C4  0826               	movf	Modbus_calcCRC@temp2,w
 11344     09C5  0422               	iorwf	??_Modbus_calcCRC,w
 11345     09C6  00AD               	movwf	Modbus_calcCRC@temp
 11346     09C7  0827               	movf	Modbus_calcCRC@temp2+1,w
 11347     09C8  0423               	iorwf	??_Modbus_calcCRC+1,w
 11348     09C9  00AE               	movwf	Modbus_calcCRC@temp+1
 11349     09CA                     l3527:
 11350                           
 11351                           ;Mobbus_Slave.c: 231:     return temp;
 11352     09CA  082E               	movf	Modbus_calcCRC@temp+1,w
 11353     09CB  00A1               	movwf	?_Modbus_calcCRC+1
 11354     09CC  082D               	movf	Modbus_calcCRC@temp,w
 11355     09CD  00A0               	movwf	?_Modbus_calcCRC
 11356     09CE                     l968:
 11357     09CE  0008               	return
 11358     09CF                     __end_of_Modbus_calcCRC:
 11359                           
 11360                           	psect	text50
 11361     1408                     __ptext50:	
 11362 ;; *************** function _Get_millis *****************
 11363 ;; Defined at:
 11364 ;;		line 15 in file "tick.c"
 11365 ;; Parameters:    Size  Location     Type
 11366 ;;		None
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;		None
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  4    0[BANK0 ] unsigned long 
 11371 ;; Registers used:
 11372 ;;		wreg
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11378 ;;      Params:         0       4       0       0       0       0       0       0
 11379 ;;      Locals:         0       0       0       0       0       0       0       0
 11380 ;;      Temps:          0       0       0       0       0       0       0       0
 11381 ;;      Totals:         0       4       0       0       0       0       0       0
 11382 ;;Total ram usage:        4 bytes
 11383 ;; Hardware stack levels used: 1
 11384 ;; Hardware stack levels required when called: 7
 11385 ;; This function calls:
 11386 ;;		Nothing
 11387 ;; This function is called by:
 11388 ;;		_ReadData
 11389 ;;		_Task_Sensor
 11390 ;;		_ModbusRTU_Slave_Poll
 11391 ;;		_Modbus_sendTxBuff
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395     1408                     _Get_millis:	
 11396                           ;psect for function _Get_millis
 11397                           
 11398     1408                     l3489:	
 11399                           ;incstack = 0
 11400                           ; Regs used in _Get_millis: [wreg]
 11401                           
 11402                           
 11403                           ;tick.c: 16:     return device_time;
 11404     1408  0021               	movlb	1	; select bank1
 11405     1409  085A               	movf	(_device_time+3)^(0+128),w	;volatile
 11406     140A  0020               	movlb	0	; select bank0
 11407     140B  00A3               	movwf	?_Get_millis+3
 11408     140C  0021               	movlb	1	; select bank1
 11409     140D  0859               	movf	(_device_time+2)^(0+128),w	;volatile
 11410     140E  0020               	movlb	0	; select bank0
 11411     140F  00A2               	movwf	?_Get_millis+2
 11412     1410  0021               	movlb	1	; select bank1
 11413     1411  0858               	movf	(_device_time+1)^(0+128),w	;volatile
 11414     1412  0020               	movlb	0	; select bank0
 11415     1413  00A1               	movwf	?_Get_millis+1
 11416     1414  0021               	movlb	1	; select bank1
 11417     1415  0857               	movf	_device_time^(0+128),w	;volatile
 11418     1416  0020               	movlb	0	; select bank0
 11419     1417  00A0               	movwf	?_Get_millis
 11420     1418                     l1004:
 11421     1418  0008               	return
 11422     1419                     __end_of_Get_millis:
 11423                           
 11424                           	psect	text51
 11425     1265                     __ptext51:	
 11426 ;; *************** function _EUSART_is_tx_done *****************
 11427 ;; Defined at:
 11428 ;;		line 142 in file "mcc_generated_files/eusart.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;		None
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;		None
 11433 ;; Return value:  Size  Location     Type
 11434 ;;                  1    wreg      _Bool 
 11435 ;; Registers used:
 11436 ;;		wreg, status,2, status,0
 11437 ;; Tracked objects:
 11438 ;;		On entry : 0/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11442 ;;      Params:         0       0       0       0       0       0       0       0
 11443 ;;      Locals:         0       0       0       0       0       0       0       0
 11444 ;;      Temps:          0       0       0       0       0       0       0       0
 11445 ;;      Totals:         0       0       0       0       0       0       0       0
 11446 ;;Total ram usage:        0 bytes
 11447 ;; Hardware stack levels used: 1
 11448 ;; Hardware stack levels required when called: 7
 11449 ;; This function calls:
 11450 ;;		Nothing
 11451 ;; This function is called by:
 11452 ;;		_Modbus_sendTxBuff
 11453 ;; This function uses a non-reentrant model
 11454 ;;
 11455                           
 11456     1265                     _EUSART_is_tx_done:	
 11457                           ;psect for function _EUSART_is_tx_done
 11458                           
 11459     1265                     l3465:	
 11460                           ;incstack = 0
 11461                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
 11462                           
 11463                           
 11464                           ;mcc_generated_files/eusart.c: 144:     return TXSTAbits.TRMT;
 11465     1265  0023               	movlb	3	; select bank3
 11466     1266  0C1E               	rrf	30,w	;volatile
 11467     1267  3901               	andlw	1
 11468     1268                     l288:
 11469     1268  0008               	return
 11470     1269                     __end_of_EUSART_is_tx_done:
 11471                           
 11472                           	psect	text52
 11473     1618                     __ptext52:	
 11474 ;; *************** function _EUSART_Write *****************
 11475 ;; Defined at:
 11476 ;;		line 173 in file "mcc_generated_files/eusart.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  txData          1    wreg     unsigned char 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  txData          1    1[BANK0 ] unsigned char 
 11481 ;; Return value:  Size  Location     Type
 11482 ;;                  1    wreg      void 
 11483 ;; Registers used:
 11484 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11485 ;; Tracked objects:
 11486 ;;		On entry : 0/0
 11487 ;;		On exit  : 0/0
 11488 ;;		Unchanged: 0/0
 11489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11490 ;;      Params:         0       0       0       0       0       0       0       0
 11491 ;;      Locals:         0       1       0       0       0       0       0       0
 11492 ;;      Temps:          0       1       0       0       0       0       0       0
 11493 ;;      Totals:         0       2       0       0       0       0       0       0
 11494 ;;Total ram usage:        2 bytes
 11495 ;; Hardware stack levels used: 1
 11496 ;; Hardware stack levels required when called: 7
 11497 ;; This function calls:
 11498 ;;		Nothing
 11499 ;; This function is called by:
 11500 ;;		_Modbus_sendTxBuff
 11501 ;;		_putch
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505     1618                     _EUSART_Write:	
 11506                           ;psect for function _EUSART_Write
 11507                           
 11508                           
 11509                           ;incstack = 0
 11510                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 11511                           ;EUSART_Write@txData stored from wreg
 11512     1618  0020               	movlb	0	; select bank0
 11513     1619  00A1               	movwf	EUSART_Write@txData
 11514     161A                     l3469:
 11515     161A                     l3471:	
 11516                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
 11517                           
 11518                           
 11519                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
 11520     161A  086D               	movf	_eusartTxBufferRemaining,w	;volatile
 11521     161B  1903               	btfsc	3,2
 11522     161C  2E1E               	goto	u2301
 11523     161D  2E1F               	goto	u2300
 11524     161E                     u2301:
 11525     161E  2E1A               	goto	l3471
 11526     161F                     u2300:
 11527     161F                     l303:
 11528                           
 11529                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
 11530     161F  0021               	movlb	1	; select bank1
 11531     1620  1A11               	btfsc	17,4	;volatile
 11532     1621  2E23               	goto	u2311
 11533     1622  2E24               	goto	u2310
 11534     1623                     u2311:
 11535     1623  2E29               	goto	l304
 11536     1624                     u2310:
 11537     1624                     l3473:
 11538                           
 11539                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
 11540     1624  0020               	movlb	0	; select bank0
 11541     1625  0821               	movf	EUSART_Write@txData,w
 11542     1626  0023               	movlb	3	; select bank3
 11543     1627  009A               	movwf	26	;volatile
 11544                           
 11545                           ;mcc_generated_files/eusart.c: 182:     }
 11546     1628  2E3F               	goto	l3485
 11547     1629                     l304:	
 11548                           ;mcc_generated_files/eusart.c: 183:     else
 11549                           
 11550                           
 11551                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
 11552     1629  1211               	bcf	17,4	;volatile
 11553     162A                     l3475:
 11554                           
 11555                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
 11556     162A  0020               	movlb	0	; select bank0
 11557     162B  086F               	movf	_eusartTxHead,w
 11558     162C  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11559     162D  0086               	movwf	6
 11560     162E  3001               	movlw	1	; select bank2/3
 11561     162F  0087               	movwf	7
 11562     1630  0821               	movf	EUSART_Write@txData,w
 11563     1631  0081               	movwf	1
 11564     1632                     l3477:
 11565     1632  3001               	movlw	1
 11566     1633  00A0               	movwf	??_EUSART_Write
 11567     1634  0820               	movf	??_EUSART_Write,w
 11568     1635  07EF               	addwf	_eusartTxHead,f	;volatile
 11569     1636                     l3479:
 11570                           
 11571                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
 11572     1636  3008               	movlw	8
 11573     1637  026F               	subwf	_eusartTxHead,w	;volatile
 11574     1638  1C03               	skipc
 11575     1639  2E3B               	goto	u2321
 11576     163A  2E3C               	goto	u2320
 11577     163B                     u2321:
 11578     163B  2E3D               	goto	l3483
 11579     163C                     u2320:
 11580     163C                     l3481:
 11581                           
 11582                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
 11583     163C  01EF               	clrf	_eusartTxHead	;volatile
 11584     163D                     l3483:
 11585                           
 11586                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
 11587     163D  3001               	movlw	1
 11588     163E  02ED               	subwf	_eusartTxBufferRemaining,f	;volatile
 11589     163F                     l3485:
 11590                           
 11591                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
 11592     163F  0021               	movlb	1	; select bank1
 11593     1640  1611               	bsf	17,4	;volatile
 11594     1641                     l307:
 11595     1641  0008               	return
 11596     1642                     __end_of_EUSART_Write:
 11597                           
 11598                           	psect	text53
 11599     0870                     __ptext53:	
 11600 ;; *************** function _ModbusSlave_Init *****************
 11601 ;; Defined at:
 11602 ;;		line 234 in file "Mobbus_Slave.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;  _SW_Ad          1    wreg     unsigned char 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;  _SW_Ad          1    0[BANK0 ] unsigned char 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11616 ;;      Params:         0       0       0       0       0       0       0       0
 11617 ;;      Locals:         0       1       0       0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0
 11619 ;;      Totals:         0       1       0       0       0       0       0       0
 11620 ;;Total ram usage:        1 bytes
 11621 ;; Hardware stack levels used: 1
 11622 ;; Hardware stack levels required when called: 7
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_Task_MB
 11627 ;; This function uses a non-reentrant model
 11628 ;;
 11629                           
 11630     0870                     _ModbusSlave_Init:	
 11631                           ;psect for function _ModbusSlave_Init
 11632                           
 11633                           
 11634                           ;incstack = 0
 11635                           ; Regs used in _ModbusSlave_Init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11636                           ;ModbusSlave_Init@_SW_Ad stored from wreg
 11637     0870  0020               	movlb	0	; select bank0
 11638     0871  00A0               	movwf	ModbusSlave_Init@_SW_Ad
 11639     0872                     l4775:
 11640                           
 11641                           ;Mobbus_Slave.c: 235:     SES_Modbus.u8id = (uint8_t) _SW_Ad;
 11642     0872  3038               	movlw	56
 11643     0873  0086               	movwf	6
 11644     0874  3021               	movlw	33
 11645     0875  0087               	movwf	7
 11646     0876  0820               	movf	ModbusSlave_Init@_SW_Ad,w
 11647     0877  3FC0               	movwi [0]fsr1
 11648                           
 11649                           ;Mobbus_Slave.c: 236:     SES_Modbus.u8txenpin = RS485;
 11650     0878  3039               	movlw	57
 11651     0879  0086               	movwf	6
 11652     087A  3021               	movlw	33
 11653     087B  0087               	movwf	7
 11654     087C  3002               	movlw	2
 11655     087D  0081               	movwf	1
 11656     087E                     l4777:
 11657                           
 11658                           ;Mobbus_Slave.c: 237:     SES_Modbus.u16timeOut = 1000;
 11659     087E  30DC               	movlw	220
 11660     087F  0086               	movwf	6
 11661     0880  3021               	movlw	33
 11662     0881  0087               	movwf	7
 11663     0882  30E8               	movlw	232
 11664     0883  3FC0               	movwi [0]fsr1
 11665     0884  3003               	movlw	3
 11666     0885  3FC1               	movwi [1]fsr1
 11667     0886                     l4779:
 11668                           
 11669                           ;Mobbus_Slave.c: 238:     SES_Modbus.u32overTime = 0;
 11670     0886  30E6               	movlw	230
 11671     0887  0086               	movwf	6
 11672     0888  3021               	movlw	33
 11673     0889  0087               	movwf	7
 11674     088A  3000               	movlw	0
 11675     088B  3FC0               	movwi [0]fsr1
 11676     088C  3FC1               	movwi [1]fsr1
 11677     088D  3FC2               	movwi [2]fsr1
 11678     088E  3FC3               	movwi [3]fsr1
 11679                           
 11680                           ;Mobbus_Slave.c: 240:     if (SES_Modbus.u8txenpin > 1) do { LATCbits.LATC5 = 0; } while
      +                          (0);
 11681     088F  3038               	movlw	56
 11682     0890  0086               	movwf	6
 11683     0891  3021               	movlw	33
 11684     0892  0087               	movwf	7
 11685     0893  3141               	addfsr 1,1
 11686     0894  3002               	movlw	2
 11687     0895  0201               	subwf	1,w
 11688     0896  1C03               	skipc
 11689     0897  2899               	goto	u4041
 11690     0898  289A               	goto	u4040
 11691     0899                     u4041:
 11692     0899  289D               	goto	l975
 11693     089A                     u4040:
 11694     089A                     l972:
 11695     089A  0022               	movlb	2	; select bank2
 11696     089B  128E               	bcf	14,5	;volatile
 11697     089C  289F               	goto	l4781
 11698     089D                     l975:
 11699     089D  0022               	movlb	2	; select bank2
 11700     089E  168E               	bsf	14,5	;volatile
 11701     089F                     l4781:
 11702                           
 11703                           ;Mobbus_Slave.c: 243:     SES_Modbus.u8lastRec = SES_Modbus.u8BufferSize = 0;
 11704     089F  30D2               	movlw	210
 11705     08A0  0086               	movwf	6
 11706     08A1  3021               	movlw	33
 11707     08A2  0087               	movwf	7
 11708     08A3  0181               	clrf	1
 11709     08A4  30D3               	movlw	211
 11710     08A5  0086               	movwf	6
 11711     08A6  3021               	movlw	33
 11712     08A7  0087               	movwf	7
 11713     08A8  0181               	clrf	1
 11714                           
 11715                           ;Mobbus_Slave.c: 244:     SES_Modbus.u16InCnt = SES_Modbus.u16OutCnt = SES_Modbus.u16err
      +                          Cnt = 0;
 11716     08A9  30DA               	movlw	218
 11717     08AA  0086               	movwf	6
 11718     08AB  3021               	movlw	33
 11719     08AC  0087               	movwf	7
 11720     08AD  3000               	movlw	0
 11721     08AE  3FC0               	movwi [0]fsr1
 11722     08AF  3FC1               	movwi [1]fsr1
 11723     08B0  30D8               	movlw	216
 11724     08B1  0086               	movwf	6
 11725     08B2  3021               	movlw	33
 11726     08B3  0087               	movwf	7
 11727     08B4  3000               	movlw	0
 11728     08B5  3FC0               	movwi [0]fsr1
 11729     08B6  3FC1               	movwi [1]fsr1
 11730     08B7  30D6               	movlw	214
 11731     08B8  0086               	movwf	6
 11732     08B9  3021               	movlw	33
 11733     08BA  0087               	movwf	7
 11734     08BB  3000               	movlw	0
 11735     08BC  3FC0               	movwi [0]fsr1
 11736     08BD  3FC1               	movwi [1]fsr1
 11737     08BE                     l977:
 11738     08BE  0008               	return
 11739     08BF                     __end_of_ModbusSlave_Init:
 11740                           
 11741                           	psect	text54
 11742     16C5                     __ptext54:	
 11743 ;; *************** function _Task_Indicator *****************
 11744 ;; Defined at:
 11745 ;;		line 7 in file "MCU.c"
 11746 ;; Parameters:    Size  Location     Type
 11747 ;;		None
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;		None
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      void 
 11752 ;; Registers used:
 11753 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11759 ;;      Params:         0       0       0       0       0       0       0       0
 11760 ;;      Locals:         0       0       0       0       0       0       0       0
 11761 ;;      Temps:          0       2       0       0       0       0       0       0
 11762 ;;      Totals:         0       2       0       0       0       0       0       0
 11763 ;;Total ram usage:        2 bytes
 11764 ;; Hardware stack levels used: 1
 11765 ;; Hardware stack levels required when called: 7
 11766 ;; This function calls:
 11767 ;;		Nothing
 11768 ;; This function is called by:
 11769 ;;		_App_Process
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773     16C5                     _Task_Indicator:	
 11774                           ;psect for function _Task_Indicator
 11775                           
 11776     16C5                     l4931:	
 11777                           ;incstack = 0
 11778                           ; Regs used in _Task_Indicator: [wreg-fsr0h+status,2+status,0]
 11779                           
 11780                           
 11781                           ;MCU.c: 8:     switch (f_Indicator) {
 11782     16C5  2EDC               	goto	l4939
 11783     16C6                     l844:	
 11784                           ;MCU.c: 10:         {;MCU.c: 11:             do { LATCbits.LATC1 = 1; } while(0);
 11785                           
 11786     16C6  0022               	movlb	2	; select bank2
 11787     16C7  148E               	bsf	14,1	;volatile
 11788     16C8                     l846:	
 11789                           ;MCU.c: 12:             do { LATCbits.LATC0 = 1; } while(0);
 11790                           
 11791     16C8  140E               	bsf	14,0	;volatile
 11792     16C9  2EF3               	goto	l859
 11793     16CA                     l4933:
 11794     16CA  1003               	clrc
 11795     16CB  0022               	movlb	2	; select bank2
 11796     16CC  1C8E               	btfss	14,1	;volatile
 11797     16CD  1403               	setc
 11798     16CE  1803               	btfsc	3,0
 11799     16CF  2ED1               	goto	u4121
 11800     16D0  2ED4               	goto	u4120
 11801     16D1                     u4121:
 11802     16D1  0022               	movlb	2	; select bank2
 11803     16D2  148E               	bsf	14,1	;volatile
 11804     16D3  2ED6               	goto	u4134
 11805     16D4                     u4120:
 11806     16D4  0022               	movlb	2	; select bank2
 11807     16D5  108E               	bcf	14,1	;volatile
 11808     16D6                     u4134:
 11809     16D6                     l4935:
 11810     16D6  140E               	bsf	14,0	;volatile
 11811     16D7  2EF3               	goto	l859
 11812     16D8                     l855:	
 11813                           ;MCU.c: 22:         {;MCU.c: 23:             do { LATCbits.LATC1 = 1; } while(0);
 11814                           
 11815     16D8  0022               	movlb	2	; select bank2
 11816     16D9  148E               	bsf	14,1	;volatile
 11817     16DA                     l857:	
 11818                           ;MCU.c: 24:             do { LATCbits.LATC0 = 0; } while(0);
 11819                           
 11820     16DA  100E               	bcf	14,0	;volatile
 11821     16DB  2EF3               	goto	l859
 11822     16DC                     l4939:
 11823     16DC  0021               	movlb	1	; select bank1
 11824     16DD  0863               	movf	_f_Indicator^(0+128),w
 11825     16DE  0020               	movlb	0	; select bank0
 11826     16DF  00A0               	movwf	??_Task_Indicator
 11827     16E0  01A1               	clrf	??_Task_Indicator+1
 11828     16E1  1BA0               	btfsc	??_Task_Indicator,7
 11829     16E2  03A1               	decf	??_Task_Indicator+1,f
 11830                           
 11831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11832                           ; Switch size 1, requested type "simple"
 11833                           ; Number of cases is 1, Range of values is 0 to 0
 11834                           ; switch strategies available:
 11835                           ; Name         Instructions Cycles
 11836                           ; simple_byte            4     3 (average)
 11837                           ; direct_byte            8     6 (fixed)
 11838                           ; jumptable            260     6 (fixed)
 11839                           ;	Chosen strategy is simple_byte
 11840     16E3  0821               	movf	??_Task_Indicator+1,w
 11841     16E4  3A00               	xorlw	0	; case 0
 11842     16E5  1903               	skipnz
 11843     16E6  2EE8               	goto	l5325
 11844     16E7  2EF3               	goto	l859
 11845     16E8                     l5325:
 11846                           
 11847                           ; Switch size 1, requested type "simple"
 11848                           ; Number of cases is 3, Range of values is 0 to 2
 11849                           ; switch strategies available:
 11850                           ; Name         Instructions Cycles
 11851                           ; simple_byte           10     6 (average)
 11852                           ; direct_byte           12     6 (fixed)
 11853                           ; jumptable            260     6 (fixed)
 11854                           ;	Chosen strategy is simple_byte
 11855     16E8  0820               	movf	??_Task_Indicator,w
 11856     16E9  3A00               	xorlw	0	; case 0
 11857     16EA  1903               	skipnz
 11858     16EB  2EC6               	goto	l844
 11859     16EC  3A01               	xorlw	1	; case 1
 11860     16ED  1903               	skipnz
 11861     16EE  2ECA               	goto	l4933
 11862     16EF  3A03               	xorlw	3	; case 2
 11863     16F0  1903               	skipnz
 11864     16F1  2ED8               	goto	l855
 11865     16F2  2EF3               	goto	l859
 11866     16F3                     l859:
 11867     16F3  0008               	return
 11868     16F4                     __end_of_Task_Indicator:
 11869                           
 11870                           	psect	text55
 11871     1320                     __ptext55:	
 11872 ;; *************** function _App_Init *****************
 11873 ;; Defined at:
 11874 ;;		line 54 in file "MCU.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2, status,0, pclath, cstack
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11888 ;;      Params:         0       0       0       0       0       0       0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0
 11890 ;;      Temps:          0       0       0       0       0       0       0       0
 11891 ;;      Totals:         0       0       0       0       0       0       0       0
 11892 ;;Total ram usage:        0 bytes
 11893 ;; Hardware stack levels used: 1
 11894 ;; Hardware stack levels required when called: 9
 11895 ;; This function calls:
 11896 ;;		_Device_Init
 11897 ;;		_TMR1_StartTimer
 11898 ;;		_Tick_Init_SES
 11899 ;; This function is called by:
 11900 ;;		_main
 11901 ;; This function uses a non-reentrant model
 11902 ;;
 11903                           
 11904     1320                     _App_Init:	
 11905                           ;psect for function _App_Init
 11906                           
 11907     1320                     l5039:	
 11908                           ;incstack = 0
 11909                           ; Regs used in _App_Init: [wreg+status,2+status,0+pclath+cstack]
 11910                           
 11911                           
 11912                           ;MCU.c: 55:     Device_Init();
 11913     1320  3189  21CF  3193   	fcall	_Device_Init
 11914     1323                     l5041:
 11915                           
 11916                           ;MCU.c: 56:     TMR1_StartTimer();
 11917     1323  3192  223F  3193   	fcall	_TMR1_StartTimer
 11918     1326                     l5043:
 11919                           
 11920                           ;MCU.c: 57:     Tick_Init_SES();
 11921     1326  3187  27EE  3193   	fcall	_Tick_Init_SES
 11922     1329                     l872:
 11923     1329  0008               	return
 11924     132A                     __end_of_App_Init:
 11925                           
 11926                           	psect	text56
 11927     07EE                     __ptext56:	
 11928 ;; *************** function _Tick_Init_SES *****************
 11929 ;; Defined at:
 11930 ;;		line 6 in file "tick.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      void 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0, pclath, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11944 ;;      Params:         0       0       0       0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used: 1
 11950 ;; Hardware stack levels required when called: 8
 11951 ;; This function calls:
 11952 ;;		_TMR1_SetInterruptHandler
 11953 ;; This function is called by:
 11954 ;;		_App_Init
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958     07EE                     _Tick_Init_SES:	
 11959                           ;psect for function _Tick_Init_SES
 11960                           
 11961     07EE                     l4987:	
 11962                           ;incstack = 0
 11963                           ; Regs used in _Tick_Init_SES: [wreg+status,2+status,0+pclath+cstack]
 11964                           
 11965                           
 11966                           ;tick.c: 7:     device_time = 0;
 11967     07EE  3000               	movlw	0
 11968     07EF  0021               	movlb	1	; select bank1
 11969     07F0  00DA               	movwf	(_device_time+3)^(0+128)	;volatile
 11970     07F1  3000               	movlw	0
 11971     07F2  00D9               	movwf	(_device_time+2)^(0+128)	;volatile
 11972     07F3  3000               	movlw	0
 11973     07F4  00D8               	movwf	(_device_time+1)^(0+128)	;volatile
 11974     07F5  3000               	movlw	0
 11975     07F6  00D7               	movwf	_device_time^(0+128)	;volatile
 11976     07F7                     l4989:
 11977                           
 11978                           ;tick.c: 8:     TMR1_SetInterruptHandler(rtcc_handle);
 11979     07F7  3016               	movlw	low _rtcc_handle
 11980     07F8  0020               	movlb	0	; select bank0
 11981     07F9  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11982     07FA  3013               	movlw	high _rtcc_handle
 11983     07FB  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11984     07FC  3192  22CE  3187   	fcall	_TMR1_SetInterruptHandler
 11985     07FF                     l998:
 11986     07FF  0008               	return
 11987     0800                     __end_of_Tick_Init_SES:
 11988                           
 11989                           	psect	text57
 11990     12CE                     __ptext57:	
 11991 ;; *************** function _TMR1_SetInterruptHandler *****************
 11992 ;; Defined at:
 11993 ;;		line 188 in file "mcc_generated_files/tmr1.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11996 ;;		 -> rtcc_handle(1), TMR1_DefaultInterruptHandler(1), 
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12008 ;;      Params:         0       2       0       0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0
 12011 ;;      Totals:         0       2       0       0       0       0       0       0
 12012 ;;Total ram usage:        2 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; Hardware stack levels required when called: 7
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_TMR1_Initialize
 12019 ;;		_Tick_Init_SES
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023     12CE                     _TMR1_SetInterruptHandler:	
 12024                           ;psect for function _TMR1_SetInterruptHandler
 12025                           
 12026     12CE                     l4601:	
 12027                           ;incstack = 0
 12028                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12029                           
 12030                           
 12031                           ;mcc_generated_files/tmr1.c: 189:     TMR1_InterruptHandler = InterruptHandler;
 12032     12CE  0020               	movlb	0	; select bank0
 12033     12CF  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 12034     12D0  0022               	movlb	2	; select bank2
 12035     12D1  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 12036     12D2  0020               	movlb	0	; select bank0
 12037     12D3  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 12038     12D4  0022               	movlb	2	; select bank2
 12039     12D5  00E1               	movwf	_TMR1_InterruptHandler^(0+256)
 12040     12D6                     l402:
 12041     12D6  0008               	return
 12042     12D7                     __end_of_TMR1_SetInterruptHandler:
 12043                           
 12044                           	psect	text58
 12045     123F                     __ptext58:	
 12046 ;; *************** function _TMR1_StartTimer *****************
 12047 ;; Defined at:
 12048 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;		None
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;		None
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		None
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12062 ;;      Params:         0       0       0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0
 12065 ;;      Totals:         0       0       0       0       0       0       0       0
 12066 ;;Total ram usage:        0 bytes
 12067 ;; Hardware stack levels used: 1
 12068 ;; Hardware stack levels required when called: 7
 12069 ;; This function calls:
 12070 ;;		Nothing
 12071 ;; This function is called by:
 12072 ;;		_App_Init
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076     123F                     _TMR1_StartTimer:	
 12077                           ;psect for function _TMR1_StartTimer
 12078                           
 12079     123F                     l4887:	
 12080                           ;incstack = 0
 12081                           ; Regs used in _TMR1_StartTimer: []
 12082                           
 12083                           
 12084                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 12085     123F  0020               	movlb	0	; select bank0
 12086     1240  1418               	bsf	24,0	;volatile
 12087     1241                     l384:
 12088     1241  0008               	return
 12089     1242                     __end_of_TMR1_StartTimer:
 12090                           
 12091                           	psect	text59
 12092     09CF                     __ptext59:	
 12093 ;; *************** function _Device_Init *****************
 12094 ;; Defined at:
 12095 ;;		line 30 in file "MCU.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;		None
 12098 ;; Auto vars:     Size  Location     Type
 12099 ;;  value_SW4       1    3[BANK0 ] char 
 12100 ;;  value_SW3       1    2[BANK0 ] char 
 12101 ;;  value_SW2       1    1[BANK0 ] char 
 12102 ;;  value_SW1       1    0[BANK0 ] char 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      void 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12112 ;;      Params:         0       0       0       0       0       0       0       0
 12113 ;;      Locals:         0       4       0       0       0       0       0       0
 12114 ;;      Temps:          0       0       0       0       0       0       0       0
 12115 ;;      Totals:         0       4       0       0       0       0       0       0
 12116 ;;Total ram usage:        4 bytes
 12117 ;; Hardware stack levels used: 1
 12118 ;; Hardware stack levels required when called: 7
 12119 ;; This function calls:
 12120 ;;		Nothing
 12121 ;; This function is called by:
 12122 ;;		_App_Init
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126     09CF                     _Device_Init:	
 12127                           ;psect for function _Device_Init
 12128                           
 12129     09CF                     l4945:	
 12130                           ;incstack = 0
 12131                           ; Regs used in _Device_Init: [wreg+status,2+status,0]
 12132                           
 12133                           
 12134                           ;MCU.c: 31:     int8_t value_SW1, value_SW2, value_SW3, value_SW4;;MCU.c: 33:     value_
      +                          SW1 = PORTAbits.RA0;
 12135     09CF  3000               	movlw	0
 12136     09D0  0020               	movlb	0	; select bank0
 12137     09D1  180C               	btfsc	12,0	;volatile
 12138     09D2  3001               	movlw	1
 12139     09D3  00A0               	movwf	Device_Init@value_SW1
 12140                           
 12141                           ;MCU.c: 34:     value_SW2 = PORTAbits.RA1;
 12142     09D4  3000               	movlw	0
 12143     09D5  188C               	btfsc	12,1	;volatile
 12144     09D6  3001               	movlw	1
 12145     09D7  00A1               	movwf	Device_Init@value_SW2
 12146                           
 12147                           ;MCU.c: 35:     value_SW3 = PORTAbits.RA2;
 12148     09D8  3000               	movlw	0
 12149     09D9  190C               	btfsc	12,2	;volatile
 12150     09DA  3001               	movlw	1
 12151     09DB  00A2               	movwf	Device_Init@value_SW3
 12152                           
 12153                           ;MCU.c: 36:     value_SW4 = PORTAbits.RA3;
 12154     09DC  3000               	movlw	0
 12155     09DD  198C               	btfsc	12,3	;volatile
 12156     09DE  3001               	movlw	1
 12157     09DF  00A3               	movwf	Device_Init@value_SW4
 12158     09E0                     l4947:
 12159                           
 12160                           ;MCU.c: 39:     if ((value_SW1 == 1) && (value_SW2 == 0) && (value_SW3 == 0) && (value_S
      +                          W4 == 0))
 12161     09E0  0320               	decf	Device_Init@value_SW1,w
 12162     09E1  1D03               	btfss	3,2
 12163     09E2  29E4               	goto	u4141
 12164     09E3  29E5               	goto	u4140
 12165     09E4                     u4141:
 12166     09E4  29F7               	goto	l4957
 12167     09E5                     u4140:
 12168     09E5                     l4949:
 12169     09E5  0821               	movf	Device_Init@value_SW2,w
 12170     09E6  1D03               	btfss	3,2
 12171     09E7  29E9               	goto	u4151
 12172     09E8  29EA               	goto	u4150
 12173     09E9                     u4151:
 12174     09E9  29F7               	goto	l4957
 12175     09EA                     u4150:
 12176     09EA                     l4951:
 12177     09EA  0822               	movf	Device_Init@value_SW3,w
 12178     09EB  1D03               	btfss	3,2
 12179     09EC  29EE               	goto	u4161
 12180     09ED  29EF               	goto	u4160
 12181     09EE                     u4161:
 12182     09EE  29F7               	goto	l4957
 12183     09EF                     u4160:
 12184     09EF                     l4953:
 12185     09EF  0823               	movf	Device_Init@value_SW4,w
 12186     09F0  1D03               	btfss	3,2
 12187     09F1  29F3               	goto	u4171
 12188     09F2  29F4               	goto	u4170
 12189     09F3                     u4171:
 12190     09F3  29F7               	goto	l4957
 12191     09F4                     u4170:
 12192     09F4                     l4955:
 12193                           
 12194                           ;MCU.c: 40:     {;MCU.c: 41:         SW_Ad = 0x01;
 12195     09F4  01E9               	clrf	_SW_Ad
 12196     09F5  0AE9               	incf	_SW_Ad,f
 12197                           
 12198                           ;MCU.c: 42:     } else if ((value_SW1 == 0) && (value_SW2 == 1) && (value_SW3 == 0) && (
      +                          value_SW4 == 0))
 12199     09F6  2A3C               	goto	l869
 12200     09F7                     l4957:
 12201     09F7  0820               	movf	Device_Init@value_SW1,w
 12202     09F8  1D03               	btfss	3,2
 12203     09F9  29FB               	goto	u4181
 12204     09FA  29FC               	goto	u4180
 12205     09FB                     u4181:
 12206     09FB  2A0E               	goto	l4967
 12207     09FC                     u4180:
 12208     09FC                     l4959:
 12209     09FC  0321               	decf	Device_Init@value_SW2,w
 12210     09FD  1D03               	btfss	3,2
 12211     09FE  2A00               	goto	u4191
 12212     09FF  2A01               	goto	u4190
 12213     0A00                     u4191:
 12214     0A00  2A0E               	goto	l4967
 12215     0A01                     u4190:
 12216     0A01                     l4961:
 12217     0A01  0822               	movf	Device_Init@value_SW3,w
 12218     0A02  1D03               	btfss	3,2
 12219     0A03  2A05               	goto	u4201
 12220     0A04  2A06               	goto	u4200
 12221     0A05                     u4201:
 12222     0A05  2A0E               	goto	l4967
 12223     0A06                     u4200:
 12224     0A06                     l4963:
 12225     0A06  0823               	movf	Device_Init@value_SW4,w
 12226     0A07  1D03               	btfss	3,2
 12227     0A08  2A0A               	goto	u4211
 12228     0A09  2A0B               	goto	u4210
 12229     0A0A                     u4211:
 12230     0A0A  2A0E               	goto	l4967
 12231     0A0B                     u4210:
 12232     0A0B                     l4965:
 12233                           
 12234                           ;MCU.c: 43:     {;MCU.c: 44:         SW_Ad = 0x02;
 12235     0A0B  3002               	movlw	2
 12236     0A0C  00E9               	movwf	_SW_Ad
 12237                           
 12238                           ;MCU.c: 45:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 1) && (
      +                          value_SW4 == 0))
 12239     0A0D  2A3C               	goto	l869
 12240     0A0E                     l4967:
 12241     0A0E  0820               	movf	Device_Init@value_SW1,w
 12242     0A0F  1D03               	btfss	3,2
 12243     0A10  2A12               	goto	u4221
 12244     0A11  2A13               	goto	u4220
 12245     0A12                     u4221:
 12246     0A12  2A25               	goto	l4977
 12247     0A13                     u4220:
 12248     0A13                     l4969:
 12249     0A13  0821               	movf	Device_Init@value_SW2,w
 12250     0A14  1D03               	btfss	3,2
 12251     0A15  2A17               	goto	u4231
 12252     0A16  2A18               	goto	u4230
 12253     0A17                     u4231:
 12254     0A17  2A25               	goto	l4977
 12255     0A18                     u4230:
 12256     0A18                     l4971:
 12257     0A18  0322               	decf	Device_Init@value_SW3,w
 12258     0A19  1D03               	btfss	3,2
 12259     0A1A  2A1C               	goto	u4241
 12260     0A1B  2A1D               	goto	u4240
 12261     0A1C                     u4241:
 12262     0A1C  2A25               	goto	l4977
 12263     0A1D                     u4240:
 12264     0A1D                     l4973:
 12265     0A1D  0823               	movf	Device_Init@value_SW4,w
 12266     0A1E  1D03               	btfss	3,2
 12267     0A1F  2A21               	goto	u4251
 12268     0A20  2A22               	goto	u4250
 12269     0A21                     u4251:
 12270     0A21  2A25               	goto	l4977
 12271     0A22                     u4250:
 12272     0A22                     l4975:
 12273                           
 12274                           ;MCU.c: 46:     {;MCU.c: 47:         SW_Ad = 0x04;
 12275     0A22  3004               	movlw	4
 12276     0A23  00E9               	movwf	_SW_Ad
 12277                           
 12278                           ;MCU.c: 48:     } else if ((value_SW1 == 0) && (value_SW2 == 0) && (value_SW3 == 0) && (
      +                          value_SW4 == 1))
 12279     0A24  2A3C               	goto	l869
 12280     0A25                     l4977:
 12281     0A25  0820               	movf	Device_Init@value_SW1,w
 12282     0A26  1D03               	btfss	3,2
 12283     0A27  2A29               	goto	u4261
 12284     0A28  2A2A               	goto	u4260
 12285     0A29                     u4261:
 12286     0A29  2A3C               	goto	l865
 12287     0A2A                     u4260:
 12288     0A2A                     l4979:
 12289     0A2A  0821               	movf	Device_Init@value_SW2,w
 12290     0A2B  1D03               	btfss	3,2
 12291     0A2C  2A2E               	goto	u4271
 12292     0A2D  2A2F               	goto	u4270
 12293     0A2E                     u4271:
 12294     0A2E  2A3C               	goto	l865
 12295     0A2F                     u4270:
 12296     0A2F                     l4981:
 12297     0A2F  0822               	movf	Device_Init@value_SW3,w
 12298     0A30  1D03               	btfss	3,2
 12299     0A31  2A33               	goto	u4281
 12300     0A32  2A34               	goto	u4280
 12301     0A33                     u4281:
 12302     0A33  2A3C               	goto	l865
 12303     0A34                     u4280:
 12304     0A34                     l4983:
 12305     0A34  0323               	decf	Device_Init@value_SW4,w
 12306     0A35  1D03               	btfss	3,2
 12307     0A36  2A38               	goto	u4291
 12308     0A37  2A39               	goto	u4290
 12309     0A38                     u4291:
 12310     0A38  2A3C               	goto	l865
 12311     0A39                     u4290:
 12312     0A39                     l4985:
 12313                           
 12314                           ;MCU.c: 49:     {;MCU.c: 50:         SW_Ad = 0x08;
 12315     0A39  3008               	movlw	8
 12316     0A3A  00E9               	movwf	_SW_Ad
 12317     0A3B  2A3C               	goto	l869
 12318     0A3C                     l865:
 12319     0A3C                     l869:
 12320     0A3C  0008               	return
 12321     0A3D                     __end_of_Device_Init:
 12322                           
 12323                           	psect	intentry
 12324     0004                     __pintentry:	
 12325 ;; *************** function _INTERRUPT_InterruptManager *****************
 12326 ;; Defined at:
 12327 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;		None
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12341 ;;      Params:         0       0       0       0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0
 12344 ;;      Totals:         0       0       0       0       0       0       0       0
 12345 ;;Total ram usage:        0 bytes
 12346 ;; Hardware stack levels used: 1
 12347 ;; Hardware stack levels required when called: 6
 12348 ;; This function calls:
 12349 ;;		NULL
 12350 ;;		_EUSART_Receive_ISR
 12351 ;;		_EUSART_Transmit_ISR
 12352 ;;		_I2C_MasterIsr
 12353 ;;		_TMR1_ISR
 12354 ;; This function is called by:
 12355 ;;		Interrupt level 1
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359     0004                     _INTERRUPT_InterruptManager:
 12360                           
 12361                           ;incstack = 0
 12362     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12363                           
 12364                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12365     0005  3180               	pagesel	$
 12366     0006                     i1l5111:
 12367                           
 12368                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12369     0006  1F0B               	btfss	11,6	;volatile
 12370     0007  2809               	goto	u446_21
 12371     0008  280A               	goto	u446_20
 12372     0009                     u446_21:
 12373     0009  2856               	goto	i1l204
 12374     000A                     u446_20:
 12375     000A                     i1l5113:
 12376                           
 12377                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 12378     000A  0021               	movlb	1	; select bank1
 12379     000B  1E11               	btfss	17,4	;volatile
 12380     000C  280E               	goto	u447_21
 12381     000D  280F               	goto	u447_20
 12382     000E                     u447_21:
 12383     000E  281B               	goto	i1l193
 12384     000F                     u447_20:
 12385     000F                     i1l5115:
 12386     000F  0020               	movlb	0	; select bank0
 12387     0010  1E11               	btfss	17,4	;volatile
 12388     0011  2813               	goto	u448_21
 12389     0012  2814               	goto	u448_20
 12390     0013                     u448_21:
 12391     0013  281B               	goto	i1l193
 12392     0014                     u448_20:
 12393     0014                     i1l5117:
 12394                           
 12395                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 12396     0014  0022               	movlb	2	; select bank2
 12397     0015  086C               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 12398     0016  008A               	movwf	10
 12399     0017  086B               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 12400     0018  000A               	callw
 12401     0019  3180               	pagesel	$
 12402                           
 12403                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12404     001A  2856               	goto	i1l204
 12405     001B                     i1l193:	
 12406                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 12407                           
 12408     001B  0021               	movlb	1	; select bank1
 12409     001C  1E91               	btfss	17,5	;volatile
 12410     001D  281F               	goto	u449_21
 12411     001E  2820               	goto	u449_20
 12412     001F                     u449_21:
 12413     001F  282C               	goto	i1l195
 12414     0020                     u449_20:
 12415     0020                     i1l5119:
 12416     0020  0020               	movlb	0	; select bank0
 12417     0021  1E91               	btfss	17,5	;volatile
 12418     0022  2824               	goto	u450_21
 12419     0023  2825               	goto	u450_20
 12420     0024                     u450_21:
 12421     0024  282C               	goto	i1l195
 12422     0025                     u450_20:
 12423     0025                     i1l5121:
 12424                           
 12425                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 12426     0025  0022               	movlb	2	; select bank2
 12427     0026  086A               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 12428     0027  008A               	movwf	10
 12429     0028  0869               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 12430     0029  000A               	callw
 12431     002A  3180               	pagesel	$
 12432                           
 12433                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 12434     002B  2856               	goto	i1l204
 12435     002C                     i1l195:	
 12436                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
 12437                           
 12438     002C  0021               	movlb	1	; select bank1
 12439     002D  1D92               	btfss	18,3	;volatile
 12440     002E  2830               	goto	u451_21
 12441     002F  2831               	goto	u451_20
 12442     0030                     u451_21:
 12443     0030  283D               	goto	i1l197
 12444     0031                     u451_20:
 12445     0031                     i1l5123:
 12446     0031  0020               	movlb	0	; select bank0
 12447     0032  1D92               	btfss	18,3	;volatile
 12448     0033  2835               	goto	u452_21
 12449     0034  2836               	goto	u452_20
 12450     0035                     u452_21:
 12451     0035  283D               	goto	i1l197
 12452     0036                     u452_20:
 12453     0036                     i1l5125:
 12454                           
 12455                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
 12456     0036  0021               	movlb	1	; select bank1
 12457     0037  0862               	movf	(_MSSP_InterruptHandler+1)^(0+128),w
 12458     0038  008A               	movwf	10
 12459     0039  0861               	movf	_MSSP_InterruptHandler^(0+128),w
 12460     003A  000A               	callw
 12461     003B  3180               	pagesel	$
 12462                           
 12463                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 12464     003C  2856               	goto	i1l204
 12465     003D                     i1l197:	
 12466                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
 12467                           
 12468     003D  0021               	movlb	1	; select bank1
 12469     003E  1D91               	btfss	17,3	;volatile
 12470     003F  2841               	goto	u453_21
 12471     0040  2842               	goto	u453_20
 12472     0041                     u453_21:
 12473     0041  2848               	goto	i1l199
 12474     0042                     u453_20:
 12475     0042                     i1l5127:
 12476     0042  0020               	movlb	0	; select bank0
 12477     0043  1D91               	btfss	17,3	;volatile
 12478     0044  2846               	goto	u454_21
 12479     0045  2847               	goto	u454_20
 12480     0046                     u454_21:
 12481     0046  2848               	goto	i1l199
 12482     0047                     u454_20:
 12483     0047  2836               	goto	i1l5125
 12484     0048                     i1l199:	
 12485                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 12486                           
 12487     0048  0021               	movlb	1	; select bank1
 12488     0049  1C11               	btfss	17,0	;volatile
 12489     004A  284C               	goto	u455_21
 12490     004B  284D               	goto	u455_20
 12491     004C                     u455_21:
 12492     004C  2856               	goto	i1l198
 12493     004D                     u455_20:
 12494     004D                     i1l5131:
 12495     004D  0020               	movlb	0	; select bank0
 12496     004E  1C11               	btfss	17,0	;volatile
 12497     004F  2851               	goto	u456_21
 12498     0050  2852               	goto	u456_20
 12499     0051                     u456_21:
 12500     0051  2856               	goto	i1l198
 12501     0052                     u456_20:
 12502     0052                     i1l5133:
 12503                           
 12504                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 12505     0052  3193  2397  3180   	fcall	_TMR1_ISR
 12506                           
 12507                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 12508     0055  2856               	goto	i1l204
 12509     0056                     i1l198:
 12510     0056                     i1l204:
 12511     0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12512     0057  0009               	retfie
 12513     0058                     __end_of_INTERRUPT_InterruptManager:
 12514                           
 12515                           	psect	text61
 12516     1397                     __ptext61:	
 12517 ;; *************** function _TMR1_ISR *****************
 12518 ;; Defined at:
 12519 ;;		line 167 in file "mcc_generated_files/tmr1.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;		None
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;		None
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      void 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2, status,0, pclath, cstack
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12533 ;;      Params:         0       0       0       0       0       0       0       0
 12534 ;;      Locals:         0       0       0       0       0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0
 12536 ;;      Totals:         0       0       0       0       0       0       0       0
 12537 ;;Total ram usage:        0 bytes
 12538 ;; Hardware stack levels used: 1
 12539 ;; Hardware stack levels required when called: 2
 12540 ;; This function calls:
 12541 ;;		_TMR1_CallBack
 12542 ;;		_TMR1_WriteTimer
 12543 ;; This function is called by:
 12544 ;;		_INTERRUPT_InterruptManager
 12545 ;; This function uses a non-reentrant model
 12546 ;;
 12547                           
 12548     1397                     _TMR1_ISR:	
 12549                           ;psect for function _TMR1_ISR
 12550                           
 12551     1397                     i1l5001:	
 12552                           ;incstack = 0
 12553                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 12554                           
 12555                           
 12556                           ;mcc_generated_files/tmr1.c: 171:     PIR1bits.TMR1IF = 0;
 12557     1397  0020               	movlb	0	; select bank0
 12558     1398  1011               	bcf	17,0	;volatile
 12559     1399                     i1l5003:
 12560                           
 12561                           ;mcc_generated_files/tmr1.c: 172:     TMR1_WriteTimer(timer1ReloadVal);
 12562     1399  0021               	movlb	1	; select bank1
 12563     139A  0860               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 12564     139B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 12565     139C  085F               	movf	_timer1ReloadVal^(0+128),w	;volatile
 12566     139D  00F0               	movwf	TMR1_WriteTimer@timerVal
 12567     139E  3193  23F7  3193   	fcall	_TMR1_WriteTimer
 12568                           
 12569                           ;mcc_generated_files/tmr1.c: 176:     TMR1_CallBack();
 12570     13A1  3193  236F  3193   	fcall	_TMR1_CallBack
 12571     13A4                     i1l395:
 12572     13A4  0008               	return
 12573     13A5                     __end_of_TMR1_ISR:
 12574                           
 12575                           	psect	text62
 12576     13F7                     __ptext62:	
 12577 ;; *************** function _TMR1_WriteTimer *****************
 12578 ;; Defined at:
 12579 ;;		line 133 in file "mcc_generated_files/tmr1.c"
 12580 ;; Parameters:    Size  Location     Type
 12581 ;;  timerVal        2    0[COMMON] unsigned short 
 12582 ;; Auto vars:     Size  Location     Type
 12583 ;;		None
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      void 
 12586 ;; Registers used:
 12587 ;;		wreg, status,2
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/0
 12590 ;;		On exit  : 0/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12593 ;;      Params:         2       0       0       0       0       0       0       0
 12594 ;;      Locals:         0       0       0       0       0       0       0       0
 12595 ;;      Temps:          0       0       0       0       0       0       0       0
 12596 ;;      Totals:         2       0       0       0       0       0       0       0
 12597 ;;Total ram usage:        2 bytes
 12598 ;; Hardware stack levels used: 1
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_TMR1_ISR
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606     13F7                     _TMR1_WriteTimer:	
 12607                           ;psect for function _TMR1_WriteTimer
 12608                           
 12609     13F7                     i1l4889:	
 12610                           ;incstack = 0
 12611                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 12612                           
 12613                           
 12614                           ;mcc_generated_files/tmr1.c: 133: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 134: {;mcc_generated_files/tmr1.c: 135:     if (T1CONbits.nT1SYNC == 1)
 12615     13F7  0020               	movlb	0	; select bank0
 12616     13F8  1D18               	btfss	24,2	;volatile
 12617     13F9  2BFB               	goto	u405_21
 12618     13FA  2BFC               	goto	u405_20
 12619     13FB                     u405_21:
 12620     13FB  2C03               	goto	i1l4899
 12621     13FC                     u405_20:
 12622     13FC                     i1l4891:
 12623                           
 12624                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         T1CONbi
      +                          ts.TMR1ON = 0;
 12625     13FC  1018               	bcf	24,0	;volatile
 12626     13FD                     i1l4893:
 12627                           
 12628                           ;mcc_generated_files/tmr1.c: 141:         TMR1H = (uint8_t)(timerVal >> 8);
 12629     13FD  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12630     13FE  0097               	movwf	23	;volatile
 12631     13FF                     i1l4895:
 12632                           
 12633                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
 12634     13FF  0870               	movf	TMR1_WriteTimer@timerVal,w
 12635     1400  0096               	movwf	22	;volatile
 12636     1401                     i1l4897:
 12637                           
 12638                           ;mcc_generated_files/tmr1.c: 145:         T1CONbits.TMR1ON =1;
 12639     1401  1418               	bsf	24,0	;volatile
 12640                           
 12641                           ;mcc_generated_files/tmr1.c: 146:     }
 12642     1402  2C07               	goto	i1l392
 12643     1403                     i1l4899:
 12644                           
 12645                           ;mcc_generated_files/tmr1.c: 148:     {;mcc_generated_files/tmr1.c: 150:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 12646     1403  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 12647     1404  0097               	movwf	23	;volatile
 12648     1405                     i1l4901:
 12649                           
 12650                           ;mcc_generated_files/tmr1.c: 151:         TMR1L = (uint8_t)timerVal;
 12651     1405  0870               	movf	TMR1_WriteTimer@timerVal,w
 12652     1406  0096               	movwf	22	;volatile
 12653     1407                     i1l392:
 12654     1407  0008               	return
 12655     1408                     __end_of_TMR1_WriteTimer:
 12656                           
 12657                           	psect	text63
 12658     136F                     __ptext63:	
 12659 ;; *************** function _TMR1_CallBack *****************
 12660 ;; Defined at:
 12661 ;;		line 179 in file "mcc_generated_files/tmr1.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1    wreg      void 
 12668 ;; Registers used:
 12669 ;;		wreg, status,2, status,0, pclath, cstack
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12675 ;;      Params:         0       0       0       0       0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0
 12678 ;;      Totals:         0       0       0       0       0       0       0       0
 12679 ;;Total ram usage:        0 bytes
 12680 ;; Hardware stack levels used: 1
 12681 ;; Hardware stack levels required when called: 1
 12682 ;; This function calls:
 12683 ;;		NULL
 12684 ;;		_TMR1_DefaultInterruptHandler
 12685 ;;		_rtcc_handle
 12686 ;; This function is called by:
 12687 ;;		_TMR1_ISR
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691     136F                     _TMR1_CallBack:	
 12692                           ;psect for function _TMR1_CallBack
 12693                           
 12694     136F                     i1l4903:	
 12695                           ;incstack = 0
 12696                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 12697                           
 12698                           
 12699                           ;mcc_generated_files/tmr1.c: 182:     if(TMR1_InterruptHandler)
 12700     136F  0022               	movlb	2	; select bank2
 12701     1370  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 12702     1371  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 12703     1372  1903               	btfsc	3,2
 12704     1373  2B75               	goto	u406_21
 12705     1374  2B76               	goto	u406_20
 12706     1375                     u406_21:
 12707     1375  2B7B               	goto	i1l399
 12708     1376                     u406_20:
 12709     1376                     i1l4905:
 12710                           
 12711                           ;mcc_generated_files/tmr1.c: 183:     {;mcc_generated_files/tmr1.c: 184:         TMR1_In
      +                          terruptHandler();
 12712     1376  0862               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 12713     1377  008A               	movwf	10
 12714     1378  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 12715     1379  000A               	callw
 12716     137A  3193               	pagesel	$
 12717     137B                     i1l399:
 12718     137B  0008               	return
 12719     137C                     __end_of_TMR1_CallBack:
 12720                           
 12721                           	psect	text64
 12722     122A                     __ptext64:	
 12723 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 12724 ;; Defined at:
 12725 ;;		line 192 in file "mcc_generated_files/tmr1.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;		None
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		None
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12739 ;;      Params:         0       0       0       0       0       0       0       0
 12740 ;;      Locals:         0       0       0       0       0       0       0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0
 12742 ;;      Totals:         0       0       0       0       0       0       0       0
 12743 ;;Total ram usage:        0 bytes
 12744 ;; Hardware stack levels used: 1
 12745 ;; This function calls:
 12746 ;;		Nothing
 12747 ;; This function is called by:
 12748 ;;		_TMR1_Initialize
 12749 ;;		_TMR1_CallBack
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753     122A                     _TMR1_DefaultInterruptHandler:	
 12754                           ;psect for function _TMR1_DefaultInterruptHandler
 12755                           
 12756     122A                     i1l405:	
 12757                           ;incstack = 0
 12758                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 12759                           
 12760     122A  0008               	return
 12761     122B                     __end_of_TMR1_DefaultInterruptHandler:
 12762                           
 12763                           	psect	text65
 12764     1316                     __ptext65:	
 12765 ;; *************** function _rtcc_handle *****************
 12766 ;; Defined at:
 12767 ;;		line 11 in file "tick.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;		None
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;		None
 12772 ;; Return value:  Size  Location     Type
 12773 ;;                  1    wreg      void 
 12774 ;; Registers used:
 12775 ;;		wreg
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12781 ;;      Params:         0       0       0       0       0       0       0       0
 12782 ;;      Locals:         0       0       0       0       0       0       0       0
 12783 ;;      Temps:          0       0       0       0       0       0       0       0
 12784 ;;      Totals:         0       0       0       0       0       0       0       0
 12785 ;;Total ram usage:        0 bytes
 12786 ;; Hardware stack levels used: 1
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_Tick_Init_SES
 12791 ;;		_TMR1_CallBack
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795     1316                     _rtcc_handle:	
 12796                           ;psect for function _rtcc_handle
 12797                           
 12798     1316                     i1l4791:	
 12799                           ;incstack = 0
 12800                           ; Regs used in _rtcc_handle: [wreg]
 12801                           
 12802                           
 12803                           ;tick.c: 12:     device_time++;
 12804     1316  3001               	movlw	1
 12805     1317  0021               	movlb	1	; select bank1
 12806     1318  07D7               	addwf	_device_time^(0+128),f	;volatile
 12807     1319  3000               	movlw	0
 12808     131A  3DD8               	addwfc	(_device_time+1)^(0+128),f	;volatile
 12809     131B  3000               	movlw	0
 12810     131C  3DD9               	addwfc	(_device_time+2)^(0+128),f	;volatile
 12811     131D  3000               	movlw	0
 12812     131E  3DDA               	addwfc	(_device_time+3)^(0+128),f	;volatile
 12813     131F                     i1l1001:
 12814     131F  0008               	return
 12815     1320                     __end_of_rtcc_handle:
 12816                           
 12817                           	psect	text66
 12818     1261                     __ptext66:	
 12819 ;; *************** function _I2C_MasterIsr *****************
 12820 ;; Defined at:
 12821 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;		None
 12824 ;; Auto vars:     Size  Location     Type
 12825 ;;		None
 12826 ;; Return value:  Size  Location     Type
 12827 ;;                  1    wreg      void 
 12828 ;; Registers used:
 12829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12830 ;; Tracked objects:
 12831 ;;		On entry : 0/0
 12832 ;;		On exit  : 0/0
 12833 ;;		Unchanged: 0/0
 12834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12835 ;;      Params:         0       0       0       0       0       0       0       0
 12836 ;;      Locals:         0       0       0       0       0       0       0       0
 12837 ;;      Temps:          0       0       0       0       0       0       0       0
 12838 ;;      Totals:         0       0       0       0       0       0       0       0
 12839 ;;Total ram usage:        0 bytes
 12840 ;; Hardware stack levels used: 1
 12841 ;; Hardware stack levels required when called: 5
 12842 ;; This function calls:
 12843 ;;		_I2C_MasterFsm
 12844 ;; This function is called by:
 12845 ;;		_I2C_Open
 12846 ;;		_INTERRUPT_InterruptManager
 12847 ;; This function uses a non-reentrant model
 12848 ;;
 12849                           
 12850     1261                     _I2C_MasterIsr:	
 12851                           ;psect for function _I2C_MasterIsr
 12852                           
 12853     1261                     i1l5037:	
 12854                           ;incstack = 0
 12855                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12856                           
 12857                           
 12858                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
 12859     1261  3195  259E  3192   	fcall	_I2C_MasterFsm
 12860     1264                     i1l567:
 12861     1264  0008               	return
 12862     1265                     __end_of_I2C_MasterIsr:
 12863                           
 12864                           	psect	text67
 12865     159E                     __ptext67:	
 12866 ;; *************** function _I2C_MasterFsm *****************
 12867 ;; Defined at:
 12868 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;		None
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  1    wreg      void 
 12875 ;; Registers used:
 12876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12882 ;;      Params:         0       0       0       0       0       0       0       0
 12883 ;;      Locals:         0       0       0       0       0       0       0       0
 12884 ;;      Temps:          2       0       0       0       0       0       0       0
 12885 ;;      Totals:         2       0       0       0       0       0       0       0
 12886 ;;Total ram usage:        2 bytes
 12887 ;; Hardware stack levels used: 1
 12888 ;; Hardware stack levels required when called: 4
 12889 ;; This function calls:
 12890 ;;		_I2C_DO_ADDRESS_NACK
 12891 ;;		_I2C_DO_IDLE
 12892 ;;		_I2C_DO_RCEN
 12893 ;;		_I2C_DO_RESET
 12894 ;;		_I2C_DO_RX
 12895 ;;		_I2C_DO_RX_ACK
 12896 ;;		_I2C_DO_RX_NACK_RESTART
 12897 ;;		_I2C_DO_RX_NACK_STOP
 12898 ;;		_I2C_DO_SEND_ADR_READ
 12899 ;;		_I2C_DO_SEND_ADR_WRITE
 12900 ;;		_I2C_DO_SEND_RESTART
 12901 ;;		_I2C_DO_SEND_RESTART_READ
 12902 ;;		_I2C_DO_SEND_RESTART_WRITE
 12903 ;;		_I2C_DO_SEND_STOP
 12904 ;;		_I2C_DO_TX
 12905 ;;		_I2C_DO_TX_EMPTY
 12906 ;;		_I2C_MasterIsNack
 12907 ;;		i1_I2C_MasterClearIrq
 12908 ;; This function is called by:
 12909 ;;		_I2C_MasterIsr
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913     159E                     _I2C_MasterFsm:	
 12914                           ;psect for function _I2C_MasterFsm
 12915                           
 12916     159E                     i1l4907:	
 12917                           ;incstack = 0
 12918                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12919                           
 12920                           
 12921                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
 12922     159E  3192  223C  3195   	fcall	i1_I2C_MasterClearIrq
 12923     15A1                     i1l4909:
 12924                           
 12925                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12926     15A1  0022               	movlb	2	; select bank2
 12927     15A2  1C3C               	btfss	(_I2C_Status^(0+256)+28),0
 12928     15A3  2DA5               	goto	u407_21
 12929     15A4  2DA6               	goto	u407_20
 12930     15A5                     u407_21:
 12931     15A5  2DB1               	goto	i1l4915
 12932     15A6                     u407_20:
 12933     15A6                     i1l4911:
 12934     15A6  3192  22A9  3195   	fcall	_I2C_MasterIsNack
 12935     15A9  3A00               	xorlw	0
 12936     15AA  1903               	skipnz
 12937     15AB  2DAD               	goto	u408_21
 12938     15AC  2DAE               	goto	u408_20
 12939     15AD                     u408_21:
 12940     15AD  2DB1               	goto	i1l4915
 12941     15AE                     u408_20:
 12942     15AE                     i1l4913:
 12943                           
 12944                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12945     15AE  300F               	movlw	15
 12946     15AF  0022               	movlb	2	; select bank2
 12947     15B0  00BA               	movwf	(_I2C_Status^(0+256)+26)
 12948     15B1                     i1l4915:
 12949                           
 12950                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12951     15B1  0022               	movlb	2	; select bank2
 12952     15B2  083A               	movf	(_I2C_Status^(0+256)+26),w
 12953     15B3  00FA               	movwf	??_I2C_MasterFsm
 12954     15B4  01FB               	clrf	??_I2C_MasterFsm+1
 12955     15B5  35FA               	lslf	??_I2C_MasterFsm,f
 12956     15B6  0DFB               	rlf	??_I2C_MasterFsm+1,f
 12957     15B7  3000               	movlw	low _i2c_fsmStateTable
 12958     15B8  077A               	addwf	??_I2C_MasterFsm,w
 12959     15B9  0084               	movwf	4
 12960     15BA  3018               	movlw	high _i2c_fsmStateTable
 12961     15BB  3D7B               	addwfc	??_I2C_MasterFsm+1,w
 12962     15BC  3880               	iorlw	128
 12963     15BD  0085               	movwf	5
 12964     15BE  3F01               	moviw [1]fsr0
 12965     15BF  008A               	movwf	10
 12966     15C0  3F00               	moviw [0]fsr0
 12967     15C1  000A               	callw
 12968     15C2  3195               	pagesel	$
 12969     15C3  0022               	movlb	2	; select bank2
 12970     15C4  00BA               	movwf	(_I2C_Status^(0+256)+26)
 12971     15C5                     i1l571:
 12972     15C5  0008               	return
 12973     15C6                     __end_of_I2C_MasterFsm:
 12974                           
 12975                           	psect	text68
 12976     123C                     __ptext68:	
 12977 ;; *************** function i1_I2C_MasterClearIrq *****************
 12978 ;; Defined at:
 12979 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		None
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12993 ;;      Params:         0       0       0       0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used: 1
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_I2C_MasterFsm
 13003 ;; This function uses a non-reentrant model
 13004 ;;
 13005                           
 13006     123C                     i1_I2C_MasterClearIrq:	
 13007                           ;psect for function i1_I2C_MasterClearIrq
 13008                           
 13009     123C                     i1l4793:	
 13010                           ;incstack = 0
 13011                           ; Regs used in i1_I2C_MasterClearIrq: []
 13012                           
 13013                           
 13014                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
 13015     123C  0020               	movlb	0	; select bank0
 13016     123D  1191               	bcf	17,3	;volatile
 13017     123E                     i1l734:
 13018     123E  0008               	return
 13019     123F                     __end_ofi1_I2C_MasterClearIrq:
 13020                           
 13021                           	psect	text69
 13022     15C6                     __ptext69:	
 13023 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 13024 ;; Defined at:
 13025 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;		None
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;		None
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  1    wreg      enum E3112
 13032 ;; Registers used:
 13033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13039 ;;      Params:         0       0       0       0       0       0       0       0
 13040 ;;      Locals:         0       0       0       0       0       0       0       0
 13041 ;;      Temps:          2       0       0       0       0       0       0       0
 13042 ;;      Totals:         2       0       0       0       0       0       0       0
 13043 ;;Total ram usage:        2 bytes
 13044 ;; Hardware stack levels used: 1
 13045 ;; Hardware stack levels required when called: 3
 13046 ;; This function calls:
 13047 ;;		NULL
 13048 ;;		_I2C_CallbackReturnReset
 13049 ;;		_I2C_CallbackReturnStop
 13050 ;;		_I2C_DO_SEND_RESTART
 13051 ;;		_I2C_DO_SEND_STOP
 13052 ;;		_rd1RegCompleteHandler
 13053 ;;		_rd2RegCompleteHandler
 13054 ;;		_rdBlkRegCompleteHandler
 13055 ;;		_wr1RegCompleteHandler
 13056 ;;		_wr2RegCompleteHandler
 13057 ;; This function is called by:
 13058 ;;		_I2C_MasterFsm
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062     15C6                     _I2C_DO_ADDRESS_NACK:	
 13063                           ;psect for function _I2C_DO_ADDRESS_NACK
 13064                           
 13065     15C6                     i1l4741:	
 13066                           ;incstack = 0
 13067                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13068                           
 13069                           
 13070                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
 13071     15C6  0022               	movlb	2	; select bank2
 13072     15C7  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13073     15C8                     i1l4743:
 13074                           
 13075                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
 13076     15C8  3002               	movlw	2
 13077     15C9  00BB               	movwf	(_I2C_Status^(0+256)+27)
 13078                           
 13079                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 13080     15CA  2DD3               	goto	i1l4755
 13081     15CB                     i1l4745:
 13082                           
 13083                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
 13084     15CB  3192  2281  3195   	fcall	_I2C_DO_SEND_RESTART
 13085     15CE  2DEE               	goto	i1l662
 13086     15CF                     i1l4749:
 13087                           
 13088                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
 13089     15CF  3192  2286  3195   	fcall	_I2C_DO_SEND_STOP
 13090     15D2  2DEE               	goto	i1l662
 13091     15D3                     i1l4755:
 13092     15D3  082E               	movf	(low ((_I2C_Status| (0+256)+14)))^0,w
 13093     15D4  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13094     15D5  3004               	movlw	4
 13095     15D6  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13096     15D7  0086               	movwf	6
 13097     15D8  3001               	movlw	1	; select bank2/3
 13098     15D9  0087               	movwf	7
 13099     15DA  3F41               	moviw [1]fsr1
 13100     15DB  008A               	movwf	10
 13101     15DC  3F40               	moviw [0]fsr1
 13102     15DD  000A               	callw
 13103     15DE  3195               	pagesel	$
 13104     15DF  00F8               	movwf	??_I2C_DO_ADDRESS_NACK
 13105     15E0  01F9               	clrf	??_I2C_DO_ADDRESS_NACK+1
 13106                           
 13107                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13108                           ; Switch size 1, requested type "simple"
 13109                           ; Number of cases is 1, Range of values is 0 to 0
 13110                           ; switch strategies available:
 13111                           ; Name         Instructions Cycles
 13112                           ; simple_byte            4     3 (average)
 13113                           ; direct_byte            8     6 (fixed)
 13114                           ; jumptable            260     6 (fixed)
 13115                           ;	Chosen strategy is simple_byte
 13116     15E1  0879               	movf	??_I2C_DO_ADDRESS_NACK+1,w
 13117     15E2  3A00               	xorlw	0	; case 0
 13118     15E3  1903               	skipnz
 13119     15E4  2DE6               	goto	i1l5327
 13120     15E5  2DCF               	goto	i1l4749
 13121     15E6                     i1l5327:
 13122                           
 13123                           ; Switch size 1, requested type "simple"
 13124                           ; Number of cases is 2, Range of values is 2 to 3
 13125                           ; switch strategies available:
 13126                           ; Name         Instructions Cycles
 13127                           ; simple_byte            7     4 (average)
 13128                           ; direct_byte           13     9 (fixed)
 13129                           ; jumptable            263     9 (fixed)
 13130                           ;	Chosen strategy is simple_byte
 13131     15E6  0878               	movf	??_I2C_DO_ADDRESS_NACK,w
 13132     15E7  3A02               	xorlw	2	; case 2
 13133     15E8  1903               	skipnz
 13134     15E9  2DCB               	goto	i1l4745
 13135     15EA  3A01               	xorlw	1	; case 3
 13136     15EB  1903               	skipnz
 13137     15EC  2DCB               	goto	i1l4745
 13138     15ED  2DCF               	goto	i1l4749
 13139     15EE                     i1l662:
 13140     15EE  0008               	return
 13141     15EF                     __end_of_I2C_DO_ADDRESS_NACK:
 13142                           
 13143                           	psect	text70
 13144     129A                     __ptext70:	
 13145 ;; *************** function _I2C_DO_RESET *****************
 13146 ;; Defined at:
 13147 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;		None
 13150 ;; Auto vars:     Size  Location     Type
 13151 ;;		None
 13152 ;; Return value:  Size  Location     Type
 13153 ;;                  1    wreg      enum E3112
 13154 ;; Registers used:
 13155 ;;		wreg, status,2
 13156 ;; Tracked objects:
 13157 ;;		On entry : 0/0
 13158 ;;		On exit  : 0/0
 13159 ;;		Unchanged: 0/0
 13160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13161 ;;      Params:         0       0       0       0       0       0       0       0
 13162 ;;      Locals:         0       0       0       0       0       0       0       0
 13163 ;;      Temps:          0       0       0       0       0       0       0       0
 13164 ;;      Totals:         0       0       0       0       0       0       0       0
 13165 ;;Total ram usage:        0 bytes
 13166 ;; Hardware stack levels used: 1
 13167 ;; This function calls:
 13168 ;;		Nothing
 13169 ;; This function is called by:
 13170 ;;		_I2C_MasterFsm
 13171 ;; This function uses a non-reentrant model
 13172 ;;
 13173                           
 13174     129A                     _I2C_DO_RESET:	
 13175                           ;psect for function _I2C_DO_RESET
 13176                           
 13177     129A                     i1l4733:	
 13178                           ;incstack = 0
 13179                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
 13180                           
 13181                           
 13182                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
 13183     129A  0022               	movlb	2	; select bank2
 13184     129B  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 13185     129C                     i1l4735:
 13186                           
 13187                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
 13188     129C  01BB               	clrf	(_I2C_Status^(0+256)+27)
 13189     129D                     i1l4737:
 13190                           
 13191                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
 13192     129D  300E               	movlw	14
 13193     129E                     i1l656:
 13194     129E  0008               	return
 13195     129F                     __end_of_I2C_DO_RESET:
 13196                           
 13197                           	psect	text71
 13198     1295                     __ptext71:	
 13199 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13200 ;; Defined at:
 13201 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
 13202 ;; Parameters:    Size  Location     Type
 13203 ;;		None
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      enum E3112
 13208 ;; Registers used:
 13209 ;;		wreg, status,2, status,0, pclath, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13215 ;;      Params:         0       0       0       0       0       0       0       0
 13216 ;;      Locals:         0       0       0       0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0       0       0       0
 13218 ;;      Totals:         0       0       0       0       0       0       0       0
 13219 ;;Total ram usage:        0 bytes
 13220 ;; Hardware stack levels used: 1
 13221 ;; Hardware stack levels required when called: 1
 13222 ;; This function calls:
 13223 ;;		_I2C_MasterSendNack
 13224 ;; This function is called by:
 13225 ;;		_I2C_DO_RX
 13226 ;;		_I2C_MasterFsm
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230     1295                     _I2C_DO_RX_NACK_RESTART:	
 13231                           ;psect for function _I2C_DO_RX_NACK_RESTART
 13232                           
 13233     1295                     i1l3929:	
 13234                           ;incstack = 0
 13235                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13236                           
 13237                           
 13238                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
 13239     1295  3192  2259  3192   	fcall	_I2C_MasterSendNack
 13240     1298                     i1l3931:
 13241                           
 13242                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
 13243     1298  3009               	movlw	9
 13244     1299                     i1l653:
 13245     1299  0008               	return
 13246     129A                     __end_of_I2C_DO_RX_NACK_RESTART:
 13247                           
 13248                           	psect	text72
 13249     1290                     __ptext72:	
 13250 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13251 ;; Defined at:
 13252 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;		None
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1    wreg      enum E3112
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0, pclath, cstack
 13261 ;; Tracked objects:
 13262 ;;		On entry : 0/0
 13263 ;;		On exit  : 0/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13266 ;;      Params:         0       0       0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used: 1
 13272 ;; Hardware stack levels required when called: 1
 13273 ;; This function calls:
 13274 ;;		_I2C_MasterSendNack
 13275 ;; This function is called by:
 13276 ;;		_I2C_DO_RX
 13277 ;;		_I2C_MasterFsm
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281     1290                     _I2C_DO_RX_NACK_STOP:	
 13282                           ;psect for function _I2C_DO_RX_NACK_STOP
 13283                           
 13284     1290                     i1l3935:	
 13285                           ;incstack = 0
 13286                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13287                           
 13288                           
 13289                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
 13290     1290  3192  2259  3192   	fcall	_I2C_MasterSendNack
 13291     1293                     i1l3937:
 13292                           
 13293                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
 13294     1293  300A               	movlw	10
 13295     1294                     i1l650:
 13296     1294  0008               	return
 13297     1295                     __end_of_I2C_DO_RX_NACK_STOP:
 13298                           
 13299                           	psect	text73
 13300     128B                     __ptext73:	
 13301 ;; *************** function _I2C_DO_RX_ACK *****************
 13302 ;; Defined at:
 13303 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;		None
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      enum E3112
 13310 ;; Registers used:
 13311 ;;		wreg, status,2, status,0, pclath, cstack
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13317 ;;      Params:         0       0       0       0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0
 13320 ;;      Totals:         0       0       0       0       0       0       0       0
 13321 ;;Total ram usage:        0 bytes
 13322 ;; Hardware stack levels used: 1
 13323 ;; Hardware stack levels required when called: 1
 13324 ;; This function calls:
 13325 ;;		_I2C_MasterSendAck
 13326 ;; This function is called by:
 13327 ;;		_I2C_MasterFsm
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331     128B                     _I2C_DO_RX_ACK:	
 13332                           ;psect for function _I2C_DO_RX_ACK
 13333                           
 13334     128B                     i1l4727:	
 13335                           ;incstack = 0
 13336                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13337                           
 13338                           
 13339                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
 13340     128B  3192  225D  3192   	fcall	_I2C_MasterSendAck
 13341     128E                     i1l4729:
 13342                           
 13343                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
 13344     128E  3005               	movlw	5
 13345     128F                     i1l647:
 13346     128F  0008               	return
 13347     1290                     __end_of_I2C_DO_RX_ACK:
 13348                           
 13349                           	psect	text74
 13350     1286                     __ptext74:	
 13351 ;; *************** function _I2C_DO_SEND_STOP *****************
 13352 ;; Defined at:
 13353 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;		None
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  1    wreg      enum E3112
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0, pclath, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13367 ;;      Params:         0       0       0       0       0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used: 1
 13373 ;; Hardware stack levels required when called: 1
 13374 ;; This function calls:
 13375 ;;		_I2C_MasterStop
 13376 ;; This function is called by:
 13377 ;;		_I2C_DO_TX
 13378 ;;		_I2C_DO_TX_EMPTY
 13379 ;;		_I2C_DO_ADDRESS_NACK
 13380 ;;		_I2C_MasterFsm
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384     1286                     _I2C_DO_SEND_STOP:	
 13385                           ;psect for function _I2C_DO_SEND_STOP
 13386                           
 13387     1286                     i1l3917:	
 13388                           ;incstack = 0
 13389                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13390                           
 13391                           
 13392                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
 13393     1286  3192  2230  3192   	fcall	_I2C_MasterStop
 13394     1289                     i1l3919:
 13395                           
 13396                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
 13397     1289  3000               	movlw	0
 13398     128A                     i1l644:
 13399     128A  0008               	return
 13400     128B                     __end_of_I2C_DO_SEND_STOP:
 13401                           
 13402                           	psect	text75
 13403     1281                     __ptext75:	
 13404 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13405 ;; Defined at:
 13406 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;		None
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;		None
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  1    wreg      enum E3112
 13413 ;; Registers used:
 13414 ;;		wreg, status,2, status,0, pclath, cstack
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13420 ;;      Params:         0       0       0       0       0       0       0       0
 13421 ;;      Locals:         0       0       0       0       0       0       0       0
 13422 ;;      Temps:          0       0       0       0       0       0       0       0
 13423 ;;      Totals:         0       0       0       0       0       0       0       0
 13424 ;;Total ram usage:        0 bytes
 13425 ;; Hardware stack levels used: 1
 13426 ;; Hardware stack levels required when called: 1
 13427 ;; This function calls:
 13428 ;;		_I2C_MasterEnableRestart
 13429 ;; This function is called by:
 13430 ;;		_I2C_DO_TX_EMPTY
 13431 ;;		_I2C_DO_ADDRESS_NACK
 13432 ;;		_I2C_MasterFsm
 13433 ;; This function uses a non-reentrant model
 13434 ;;
 13435                           
 13436     1281                     _I2C_DO_SEND_RESTART:	
 13437                           ;psect for function _I2C_DO_SEND_RESTART
 13438                           
 13439     1281                     i1l3943:	
 13440                           ;incstack = 0
 13441                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13442                           
 13443                           
 13444                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
 13445     1281  3192  222D  3192   	fcall	_I2C_MasterEnableRestart
 13446     1284                     i1l3945:
 13447                           
 13448                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
 13449     1284  3001               	movlw	1
 13450     1285                     i1l641:
 13451     1285  0008               	return
 13452     1286                     __end_of_I2C_DO_SEND_RESTART:
 13453                           
 13454                           	psect	text76
 13455     127C                     __ptext76:	
 13456 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13457 ;; Defined at:
 13458 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;		None
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      enum E3112
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0, pclath, cstack
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13472 ;;      Params:         0       0       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0       0
 13474 ;;      Temps:          0       0       0       0       0       0       0       0
 13475 ;;      Totals:         0       0       0       0       0       0       0       0
 13476 ;;Total ram usage:        0 bytes
 13477 ;; Hardware stack levels used: 1
 13478 ;; Hardware stack levels required when called: 1
 13479 ;; This function calls:
 13480 ;;		_I2C_MasterEnableRestart
 13481 ;; This function is called by:
 13482 ;;		_I2C_DO_TX
 13483 ;;		_I2C_MasterFsm
 13484 ;; This function uses a non-reentrant model
 13485 ;;
 13486                           
 13487     127C                     _I2C_DO_SEND_RESTART_WRITE:	
 13488                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
 13489                           
 13490     127C                     i1l3911:	
 13491                           ;incstack = 0
 13492                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13493                           
 13494                           
 13495                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
 13496     127C  3192  222D  3192   	fcall	_I2C_MasterEnableRestart
 13497     127F                     i1l3913:
 13498                           
 13499                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
 13500     127F  3002               	movlw	2
 13501     1280                     i1l638:
 13502     1280  0008               	return
 13503     1281                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13504                           
 13505                           	psect	text77
 13506     1277                     __ptext77:	
 13507 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13508 ;; Defined at:
 13509 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;		None
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;		None
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  1    wreg      enum E3112
 13516 ;; Registers used:
 13517 ;;		wreg, status,2, status,0, pclath, cstack
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13523 ;;      Params:         0       0       0       0       0       0       0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0
 13526 ;;      Totals:         0       0       0       0       0       0       0       0
 13527 ;;Total ram usage:        0 bytes
 13528 ;; Hardware stack levels used: 1
 13529 ;; Hardware stack levels required when called: 1
 13530 ;; This function calls:
 13531 ;;		_I2C_MasterEnableRestart
 13532 ;; This function is called by:
 13533 ;;		_I2C_DO_TX
 13534 ;;		_I2C_MasterFsm
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538     1277                     _I2C_DO_SEND_RESTART_READ:	
 13539                           ;psect for function _I2C_DO_SEND_RESTART_READ
 13540                           
 13541     1277                     i1l3905:	
 13542                           ;incstack = 0
 13543                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13544                           
 13545                           
 13546                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
 13547     1277  3192  222D  3192   	fcall	_I2C_MasterEnableRestart
 13548     127A                     i1l3907:
 13549                           
 13550                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
 13551     127A  3001               	movlw	1
 13552     127B                     i1l635:
 13553     127B  0008               	return
 13554     127C                     __end_of_I2C_DO_SEND_RESTART_READ:
 13555                           
 13556                           	psect	text78
 13557     12AF                     __ptext78:	
 13558 ;; *************** function _I2C_DO_RCEN *****************
 13559 ;; Defined at:
 13560 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;		None
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      enum E3112
 13567 ;; Registers used:
 13568 ;;		wreg, status,2, status,0, pclath, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13574 ;;      Params:         0       0       0       0       0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0
 13576 ;;      Temps:          0       0       0       0       0       0       0       0
 13577 ;;      Totals:         0       0       0       0       0       0       0       0
 13578 ;;Total ram usage:        0 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 1
 13581 ;; This function calls:
 13582 ;;		_I2C_MasterStartRx
 13583 ;; This function is called by:
 13584 ;;		_I2C_MasterFsm
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588     12AF                     _I2C_DO_RCEN:	
 13589                           ;psect for function _I2C_DO_RCEN
 13590                           
 13591     12AF                     i1l4693:	
 13592                           ;incstack = 0
 13593                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13594                           
 13595                           
 13596                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
 13597     12AF  0022               	movlb	2	; select bank2
 13598     12B0  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13599     12B1                     i1l4695:
 13600                           
 13601                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
 13602     12B1  3192  2233  3192   	fcall	_I2C_MasterStartRx
 13603     12B4                     i1l4697:
 13604                           
 13605                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
 13606     12B4  3004               	movlw	4
 13607     12B5                     i1l611:
 13608     12B5  0008               	return
 13609     12B6                     __end_of_I2C_DO_RCEN:
 13610                           
 13611                           	psect	text79
 13612     1777                     __ptext79:	
 13613 ;; *************** function _I2C_DO_RX *****************
 13614 ;; Defined at:
 13615 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      enum E3112
 13622 ;; Registers used:
 13623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13629 ;;      Params:         0       0       0       0       0       0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0
 13631 ;;      Temps:          2       0       0       0       0       0       0       0
 13632 ;;      Totals:         2       0       0       0       0       0       0       0
 13633 ;;Total ram usage:        2 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; Hardware stack levels required when called: 3
 13636 ;; This function calls:
 13637 ;;		NULL
 13638 ;;		_I2C_CallbackReturnReset
 13639 ;;		_I2C_CallbackReturnStop
 13640 ;;		_I2C_DO_RX_NACK_RESTART
 13641 ;;		_I2C_DO_RX_NACK_STOP
 13642 ;;		_I2C_MasterGetRxData
 13643 ;;		_I2C_MasterSendAck
 13644 ;;		_rd1RegCompleteHandler
 13645 ;;		_rd2RegCompleteHandler
 13646 ;;		_rdBlkRegCompleteHandler
 13647 ;;		_wr1RegCompleteHandler
 13648 ;;		_wr2RegCompleteHandler
 13649 ;; This function is called by:
 13650 ;;		_I2C_MasterFsm
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654     1777                     _I2C_DO_RX:	
 13655                           ;psect for function _I2C_DO_RX
 13656                           
 13657     1777                     i1l4661:	
 13658                           ;incstack = 0
 13659                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13660                           
 13661                           
 13662                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13663     1777  0022               	movlb	2	; select bank2
 13664     1778  0837               	movf	(low ((_I2C_Status| (0+256)+23)))^0,w
 13665     1779  0086               	movwf	6
 13666     177A  0187               	clrf	7
 13667     177B  3192  2236  3197   	fcall	_I2C_MasterGetRxData
 13668     177E  0081               	movwf	1
 13669     177F                     i1l4663:
 13670     177F  3001               	movlw	1
 13671     1780  00F8               	movwf	??_I2C_DO_RX
 13672     1781  0878               	movf	??_I2C_DO_RX,w
 13673     1782  0022               	movlb	2	; select bank2
 13674     1783  07B7               	addwf	(low ((_I2C_Status| (0+256)+23)))^0,f
 13675     1784                     i1l4665:
 13676                           
 13677                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
 13678     1784  3001               	movlw	1
 13679     1785  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13680     1786  3000               	movlw	0
 13681     1787  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13682     1788  0838               	movf	(_I2C_Status^(0+256)+24),w
 13683     1789  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13684     178A  1903               	btfsc	3,2
 13685     178B  2F8D               	goto	u400_21
 13686     178C  2F8E               	goto	u400_20
 13687     178D                     u400_21:
 13688     178D  2F93               	goto	i1l599
 13689     178E                     u400_20:
 13690     178E                     i1l4667:
 13691                           
 13692                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
 13693     178E  3192  225D  3197   	fcall	_I2C_MasterSendAck
 13694     1791                     i1l4669:
 13695                           
 13696                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
 13697     1791  3005               	movlw	5
 13698     1792  2FB9               	goto	i1l600
 13699     1793                     i1l599:	
 13700                           ;mcc_generated_files/i2c_master.c: 388:     else
 13701                           
 13702                           
 13703                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
 13704     1793  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 13705                           
 13706                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13707     1794  2F9D               	goto	i1l4685
 13708     1795                     i1l4675:
 13709                           
 13710                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
 13711     1795  3192  2295  3197   	fcall	_I2C_DO_RX_NACK_RESTART
 13712     1798  2FB9               	goto	i1l600
 13713     1799                     i1l4679:
 13714                           
 13715                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
 13716     1799  3192  2290  3197   	fcall	_I2C_DO_RX_NACK_STOP
 13717     179C  2FB9               	goto	i1l600
 13718     179D                     i1l4685:
 13719     179D  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 13720     179E  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13721     179F  0821               	movf	(_I2C_Status+1)^(0+256),w
 13722     17A0  008A               	movwf	10
 13723     17A1  0820               	movf	_I2C_Status^(0+256),w
 13724     17A2  000A               	callw
 13725     17A3  3197               	pagesel	$
 13726     17A4  00F8               	movwf	??_I2C_DO_RX
 13727     17A5  01F9               	clrf	??_I2C_DO_RX+1
 13728                           
 13729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13730                           ; Switch size 1, requested type "simple"
 13731                           ; Number of cases is 1, Range of values is 0 to 0
 13732                           ; switch strategies available:
 13733                           ; Name         Instructions Cycles
 13734                           ; simple_byte            4     3 (average)
 13735                           ; direct_byte            8     6 (fixed)
 13736                           ; jumptable            260     6 (fixed)
 13737                           ;	Chosen strategy is simple_byte
 13738     17A6  0879               	movf	??_I2C_DO_RX+1,w
 13739     17A7  3A00               	xorlw	0	; case 0
 13740     17A8  1903               	skipnz
 13741     17A9  2FAB               	goto	i1l5329
 13742     17AA  2F99               	goto	i1l4679
 13743     17AB                     i1l5329:
 13744                           
 13745                           ; Switch size 1, requested type "simple"
 13746                           ; Number of cases is 4, Range of values is 1 to 4
 13747                           ; switch strategies available:
 13748                           ; Name         Instructions Cycles
 13749                           ; simple_byte           13     7 (average)
 13750                           ; direct_byte           17     9 (fixed)
 13751                           ; jumptable            263     9 (fixed)
 13752                           ;	Chosen strategy is simple_byte
 13753     17AB  0878               	movf	??_I2C_DO_RX,w
 13754     17AC  3A01               	xorlw	1	; case 1
 13755     17AD  1903               	skipnz
 13756     17AE  2F99               	goto	i1l4679
 13757     17AF  3A03               	xorlw	3	; case 2
 13758     17B0  1903               	skipnz
 13759     17B1  2F95               	goto	i1l4675
 13760     17B2  3A01               	xorlw	1	; case 3
 13761     17B3  1903               	skipnz
 13762     17B4  2F95               	goto	i1l4675
 13763     17B5  3A07               	xorlw	7	; case 4
 13764     17B6  1903               	skipnz
 13765     17B7  2F99               	goto	i1l4679
 13766     17B8  2F99               	goto	i1l4679
 13767     17B9                     i1l600:
 13768     17B9  0008               	return
 13769     17BA                     __end_of_I2C_DO_RX:
 13770                           
 13771                           	psect	text80
 13772     08BF                     __ptext80:	
 13773 ;; *************** function _I2C_DO_TX *****************
 13774 ;; Defined at:
 13775 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;		None
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;		None
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      enum E3112
 13782 ;; Registers used:
 13783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13789 ;;      Params:         0       0       0       0       0       0       0       0
 13790 ;;      Locals:         0       0       0       0       0       0       0       0
 13791 ;;      Temps:          2       0       0       0       0       0       0       0
 13792 ;;      Totals:         2       0       0       0       0       0       0       0
 13793 ;;Total ram usage:        2 bytes
 13794 ;; Hardware stack levels used: 1
 13795 ;; Hardware stack levels required when called: 3
 13796 ;; This function calls:
 13797 ;;		NULL
 13798 ;;		_I2C_CallbackReturnReset
 13799 ;;		_I2C_CallbackReturnStop
 13800 ;;		_I2C_DO_SEND_RESTART_READ
 13801 ;;		_I2C_DO_SEND_RESTART_WRITE
 13802 ;;		_I2C_DO_SEND_STOP
 13803 ;;		_I2C_MasterIsNack
 13804 ;;		_I2C_MasterSendTxData
 13805 ;;		_rd1RegCompleteHandler
 13806 ;;		_rd2RegCompleteHandler
 13807 ;;		_rdBlkRegCompleteHandler
 13808 ;;		_wr1RegCompleteHandler
 13809 ;;		_wr2RegCompleteHandler
 13810 ;; This function is called by:
 13811 ;;		_I2C_MasterFsm
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815     08BF                     _I2C_DO_TX:	
 13816                           ;psect for function _I2C_DO_TX
 13817                           
 13818     08BF                     i1l4627:	
 13819                           ;incstack = 0
 13820                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13821                           
 13822                           
 13823                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
 13824     08BF  3192  22A9  3188   	fcall	_I2C_MasterIsNack
 13825     08C2  3A00               	xorlw	0
 13826     08C3  1903               	skipnz
 13827     08C4  28C6               	goto	u398_21
 13828     08C5  28C7               	goto	u398_20
 13829     08C6                     u398_21:
 13830     08C6  28F6               	goto	i1l583
 13831     08C7                     u398_20:
 13832     08C7  28D4               	goto	i1l4645
 13833     08C8                     i1l4631:
 13834                           
 13835                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13836     08C8  3192  2277  3188   	fcall	_I2C_DO_SEND_RESTART_READ
 13837     08CB  2913               	goto	i1l586
 13838     08CC                     i1l4635:
 13839                           
 13840                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13841     08CC  3192  227C  3188   	fcall	_I2C_DO_SEND_RESTART_WRITE
 13842     08CF  2913               	goto	i1l586
 13843     08D0                     i1l4639:
 13844                           
 13845                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
 13846     08D0  3192  2286  3188   	fcall	_I2C_DO_SEND_STOP
 13847     08D3  2913               	goto	i1l586
 13848     08D4                     i1l4645:
 13849     08D4  0022               	movlb	2	; select bank2
 13850     08D5  082F               	movf	(low ((_I2C_Status| (0+256)+15)))^0,w
 13851     08D6  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 13852     08D7  3006               	movlw	6
 13853     08D8  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13854     08D9  0086               	movwf	6
 13855     08DA  3001               	movlw	1	; select bank2/3
 13856     08DB  0087               	movwf	7
 13857     08DC  3F41               	moviw [1]fsr1
 13858     08DD  008A               	movwf	10
 13859     08DE  3F40               	moviw [0]fsr1
 13860     08DF  000A               	callw
 13861     08E0  3188               	pagesel	$
 13862     08E1  00F8               	movwf	??_I2C_DO_TX
 13863     08E2  01F9               	clrf	??_I2C_DO_TX+1
 13864                           
 13865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13866                           ; Switch size 1, requested type "simple"
 13867                           ; Number of cases is 1, Range of values is 0 to 0
 13868                           ; switch strategies available:
 13869                           ; Name         Instructions Cycles
 13870                           ; simple_byte            4     3 (average)
 13871                           ; direct_byte            8     6 (fixed)
 13872                           ; jumptable            260     6 (fixed)
 13873                           ;	Chosen strategy is simple_byte
 13874     08E3  0879               	movf	??_I2C_DO_TX+1,w
 13875     08E4  3A00               	xorlw	0	; case 0
 13876     08E5  1903               	skipnz
 13877     08E6  28E8               	goto	i1l5331
 13878     08E7  28D0               	goto	i1l4639
 13879     08E8                     i1l5331:
 13880                           
 13881                           ; Switch size 1, requested type "simple"
 13882                           ; Number of cases is 4, Range of values is 1 to 4
 13883                           ; switch strategies available:
 13884                           ; Name         Instructions Cycles
 13885                           ; simple_byte           13     7 (average)
 13886                           ; direct_byte           17     9 (fixed)
 13887                           ; jumptable            263     9 (fixed)
 13888                           ;	Chosen strategy is simple_byte
 13889     08E8  0878               	movf	??_I2C_DO_TX,w
 13890     08E9  3A01               	xorlw	1	; case 1
 13891     08EA  1903               	skipnz
 13892     08EB  28D0               	goto	i1l4639
 13893     08EC  3A03               	xorlw	3	; case 2
 13894     08ED  1903               	skipnz
 13895     08EE  28C8               	goto	i1l4631
 13896     08EF  3A01               	xorlw	1	; case 3
 13897     08F0  1903               	skipnz
 13898     08F1  28CC               	goto	i1l4635
 13899     08F2  3A07               	xorlw	7	; case 4
 13900     08F3  1903               	skipnz
 13901     08F4  28D0               	goto	i1l4639
 13902     08F5  28D0               	goto	i1l4639
 13903     08F6                     i1l583:	
 13904                           ;mcc_generated_files/i2c_master.c: 372:     else
 13905                           
 13906                           
 13907                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
 13908     08F6  0022               	movlb	2	; select bank2
 13909     08F7  103C               	bcf	(_I2C_Status^(0+256)+28),0
 13910     08F8                     i1l4647:
 13911                           
 13912                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13913     08F8  3017               	movlw	23
 13914     08F9  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 13915     08FA  0086               	movwf	6
 13916     08FB  3001               	movlw	1	; select bank2/3
 13917     08FC  0087               	movwf	7
 13918     08FD  3F40               	moviw [0]fsr1
 13919     08FE  0084               	movwf	4
 13920     08FF  0185               	clrf	5
 13921     0900  0A81               	incf	1,f
 13922     0901  0800               	movf	0,w
 13923     0902  3192  226D  3188   	fcall	_I2C_MasterSendTxData
 13924     0905                     i1l4649:
 13925                           
 13926                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13927     0905  3001               	movlw	1
 13928     0906  0022               	movlb	2	; select bank2
 13929     0907  02B8               	subwf	(_I2C_Status^(0+256)+24),f
 13930     0908  3000               	movlw	0
 13931     0909  3BB9               	subwfb	((_I2C_Status+1)^(0+256)+24),f
 13932     090A  0838               	movf	(_I2C_Status^(0+256)+24),w
 13933     090B  0439               	iorwf	((_I2C_Status+1)^(0+256)+24),w
 13934     090C  1D03               	btfss	3,2
 13935     090D  290F               	goto	u399_21
 13936     090E  2910               	goto	u399_20
 13937     090F                     u399_21:
 13938     090F  2912               	goto	i1l4653
 13939     0910                     u399_20:
 13940     0910                     i1l4651:
 13941     0910  3006               	movlw	6
 13942     0911  2913               	goto	i1l586
 13943     0912                     i1l4653:
 13944     0912  3003               	movlw	3
 13945     0913                     i1l586:
 13946     0913  0008               	return
 13947     0914                     __end_of_I2C_DO_TX:
 13948                           
 13949                           	psect	text81
 13950     12BD                     __ptext81:	
 13951 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13952 ;; Defined at:
 13953 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  1    wreg      enum E3112
 13960 ;; Registers used:
 13961 ;;		wreg, status,2, status,0, pclath, cstack
 13962 ;; Tracked objects:
 13963 ;;		On entry : 0/0
 13964 ;;		On exit  : 0/0
 13965 ;;		Unchanged: 0/0
 13966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 13967 ;;      Params:         0       0       0       0       0       0       0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0
 13970 ;;      Totals:         0       0       0       0       0       0       0       0
 13971 ;;Total ram usage:        0 bytes
 13972 ;; Hardware stack levels used: 1
 13973 ;; Hardware stack levels required when called: 1
 13974 ;; This function calls:
 13975 ;;		_I2C_MasterSendTxData
 13976 ;; This function is called by:
 13977 ;;		_I2C_MasterFsm
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981     12BD                     _I2C_DO_SEND_ADR_WRITE:	
 13982                           ;psect for function _I2C_DO_SEND_ADR_WRITE
 13983                           
 13984     12BD                     i1l4619:	
 13985                           ;incstack = 0
 13986                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13987                           
 13988                           
 13989                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
 13990     12BD  0022               	movlb	2	; select bank2
 13991     12BE  143C               	bsf	(_I2C_Status^(0+256)+28),0
 13992     12BF                     i1l4621:
 13993                           
 13994                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 13995     12BF  3536               	lslf	(_I2C_Status^(0+256)+22),w
 13996     12C0  3192  226D  3192   	fcall	_I2C_MasterSendTxData
 13997     12C3                     i1l4623:
 13998                           
 13999                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
 14000     12C3  3003               	movlw	3
 14001     12C4                     i1l580:
 14002     12C4  0008               	return
 14003     12C5                     __end_of_I2C_DO_SEND_ADR_WRITE:
 14004                           
 14005                           	psect	text82
 14006     12C5                     __ptext82:	
 14007 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 14008 ;; Defined at:
 14009 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;		None
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;		None
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      enum E3112
 14016 ;; Registers used:
 14017 ;;		wreg, status,2, status,0, pclath, cstack
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14023 ;;      Params:         0       0       0       0       0       0       0       0
 14024 ;;      Locals:         0       0       0       0       0       0       0       0
 14025 ;;      Temps:          0       0       0       0       0       0       0       0
 14026 ;;      Totals:         0       0       0       0       0       0       0       0
 14027 ;;Total ram usage:        0 bytes
 14028 ;; Hardware stack levels used: 1
 14029 ;; Hardware stack levels required when called: 1
 14030 ;; This function calls:
 14031 ;;		_I2C_MasterSendTxData
 14032 ;; This function is called by:
 14033 ;;		_I2C_MasterFsm
 14034 ;; This function uses a non-reentrant model
 14035 ;;
 14036                           
 14037     12C5                     _I2C_DO_SEND_ADR_READ:	
 14038                           ;psect for function _I2C_DO_SEND_ADR_READ
 14039                           
 14040     12C5                     i1l4611:	
 14041                           ;incstack = 0
 14042                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14043                           
 14044                           
 14045                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
 14046     12C5  0022               	movlb	2	; select bank2
 14047     12C6  143C               	bsf	(_I2C_Status^(0+256)+28),0
 14048     12C7                     i1l4613:
 14049                           
 14050                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 14051     12C7  1403               	setc
 14052     12C8  0D36               	rlf	(_I2C_Status^(0+256)+22),w
 14053     12C9  3192  226D  3192   	fcall	_I2C_MasterSendTxData
 14054     12CC                     i1l4615:
 14055                           
 14056                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
 14057     12CC  3005               	movlw	5
 14058     12CD                     i1l577:
 14059     12CD  0008               	return
 14060     12CE                     __end_of_I2C_DO_SEND_ADR_READ:
 14061                           
 14062                           	psect	text83
 14063     1272                     __ptext83:	
 14064 ;; *************** function _I2C_DO_IDLE *****************
 14065 ;; Defined at:
 14066 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;		None
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1    wreg      enum E3112
 14073 ;; Registers used:
 14074 ;;		wreg, status,2
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14080 ;;      Params:         0       0       0       0       0       0       0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0
 14083 ;;      Totals:         0       0       0       0       0       0       0       0
 14084 ;;Total ram usage:        0 bytes
 14085 ;; Hardware stack levels used: 1
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		_I2C_MasterFsm
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093     1272                     _I2C_DO_IDLE:	
 14094                           ;psect for function _I2C_DO_IDLE
 14095                           
 14096     1272                     i1l4603:	
 14097                           ;incstack = 0
 14098                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
 14099                           
 14100                           
 14101                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
 14102     1272  0022               	movlb	2	; select bank2
 14103     1273  10BC               	bcf	(_I2C_Status^(0+256)+28),1
 14104     1274                     i1l4605:
 14105                           
 14106                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
 14107     1274  01BB               	clrf	(_I2C_Status^(0+256)+27)
 14108     1275                     i1l4607:
 14109                           
 14110                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
 14111     1275  300E               	movlw	14
 14112     1276                     i1l574:
 14113     1276  0008               	return
 14114     1277                     __end_of_I2C_DO_IDLE:
 14115                           
 14116                           	psect	text84
 14117     1698                     __ptext84:	
 14118 ;; *************** function _I2C_DO_TX_EMPTY *****************
 14119 ;; Defined at:
 14120 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;		None
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  1    wreg      enum E3112
 14127 ;; Registers used:
 14128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14134 ;;      Params:         0       0       0       0       0       0       0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0
 14136 ;;      Temps:          2       0       0       0       0       0       0       0
 14137 ;;      Totals:         2       0       0       0       0       0       0       0
 14138 ;;Total ram usage:        2 bytes
 14139 ;; Hardware stack levels used: 1
 14140 ;; Hardware stack levels required when called: 3
 14141 ;; This function calls:
 14142 ;;		NULL
 14143 ;;		_I2C_CallbackReturnReset
 14144 ;;		_I2C_CallbackReturnStop
 14145 ;;		_I2C_DO_SEND_RESTART
 14146 ;;		_I2C_DO_SEND_STOP
 14147 ;;		_I2C_MasterSetIrq
 14148 ;;		_rd1RegCompleteHandler
 14149 ;;		_rd2RegCompleteHandler
 14150 ;;		_rdBlkRegCompleteHandler
 14151 ;;		_wr1RegCompleteHandler
 14152 ;;		_wr2RegCompleteHandler
 14153 ;; This function is called by:
 14154 ;;		_I2C_MasterFsm
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158     1698                     _I2C_DO_TX_EMPTY:	
 14159                           ;psect for function _I2C_DO_TX_EMPTY
 14160                           
 14161     1698                     i1l4701:	
 14162                           ;incstack = 0
 14163                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14164                           
 14165                           
 14166                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
 14167     1698  0022               	movlb	2	; select bank2
 14168     1699  15BC               	bsf	(_I2C_Status^(0+256)+28),3
 14169                           
 14170                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14171     169A  2EA8               	goto	i1l4719
 14172     169B                     i1l4703:
 14173                           
 14174                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
 14175     169B  3192  2281  3196   	fcall	_I2C_DO_SEND_RESTART
 14176     169E  2EC4               	goto	i1l617
 14177     169F                     i1l4707:
 14178                           
 14179                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
 14180     169F  3192  2239  3196   	fcall	_I2C_MasterSetIrq
 14181     16A2                     i1l4709:
 14182                           
 14183                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
 14184     16A2  3003               	movlw	3
 14185     16A3  2EC4               	goto	i1l617
 14186     16A4                     i1l4713:
 14187                           
 14188                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
 14189     16A4  3192  2286  3196   	fcall	_I2C_DO_SEND_STOP
 14190     16A7  2EC4               	goto	i1l617
 14191     16A8                     i1l4719:
 14192     16A8  082C               	movf	(low ((_I2C_Status| (0+256)+12)))^0,w
 14193     16A9  00F7               	movwf	I2C_CallbackReturnReset@funPtr
 14194     16AA  0821               	movf	(_I2C_Status+1)^(0+256),w
 14195     16AB  008A               	movwf	10
 14196     16AC  0820               	movf	_I2C_Status^(0+256),w
 14197     16AD  000A               	callw
 14198     16AE  3196               	pagesel	$
 14199     16AF  00F8               	movwf	??_I2C_DO_TX_EMPTY
 14200     16B0  01F9               	clrf	??_I2C_DO_TX_EMPTY+1
 14201                           
 14202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14203                           ; Switch size 1, requested type "simple"
 14204                           ; Number of cases is 1, Range of values is 0 to 0
 14205                           ; switch strategies available:
 14206                           ; Name         Instructions Cycles
 14207                           ; simple_byte            4     3 (average)
 14208                           ; direct_byte            8     6 (fixed)
 14209                           ; jumptable            260     6 (fixed)
 14210                           ;	Chosen strategy is simple_byte
 14211     16B1  0879               	movf	??_I2C_DO_TX_EMPTY+1,w
 14212     16B2  3A00               	xorlw	0	; case 0
 14213     16B3  1903               	skipnz
 14214     16B4  2EB6               	goto	i1l5333
 14215     16B5  2EA4               	goto	i1l4713
 14216     16B6                     i1l5333:
 14217                           
 14218                           ; Switch size 1, requested type "simple"
 14219                           ; Number of cases is 4, Range of values is 1 to 4
 14220                           ; switch strategies available:
 14221                           ; Name         Instructions Cycles
 14222                           ; simple_byte           13     7 (average)
 14223                           ; direct_byte           17     9 (fixed)
 14224                           ; jumptable            263     9 (fixed)
 14225                           ;	Chosen strategy is simple_byte
 14226     16B6  0878               	movf	??_I2C_DO_TX_EMPTY,w
 14227     16B7  3A01               	xorlw	1	; case 1
 14228     16B8  1903               	skipnz
 14229     16B9  2EA4               	goto	i1l4713
 14230     16BA  3A03               	xorlw	3	; case 2
 14231     16BB  1903               	skipnz
 14232     16BC  2E9B               	goto	i1l4703
 14233     16BD  3A01               	xorlw	1	; case 3
 14234     16BE  1903               	skipnz
 14235     16BF  2E9B               	goto	i1l4703
 14236     16C0  3A07               	xorlw	7	; case 4
 14237     16C1  1903               	skipnz
 14238     16C2  2E9F               	goto	i1l4707
 14239     16C3  2EA4               	goto	i1l4713
 14240     16C4                     i1l617:
 14241     16C4  0008               	return
 14242     16C5                     __end_of_I2C_DO_TX_EMPTY:
 14243                           
 14244                           	psect	text85
 14245     1239                     __ptext85:	
 14246 ;; *************** function _I2C_MasterSetIrq *****************
 14247 ;; Defined at:
 14248 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
 14249 ;; Parameters:    Size  Location     Type
 14250 ;;		None
 14251 ;; Auto vars:     Size  Location     Type
 14252 ;;		None
 14253 ;; Return value:  Size  Location     Type
 14254 ;;                  1    wreg      void 
 14255 ;; Registers used:
 14256 ;;		None
 14257 ;; Tracked objects:
 14258 ;;		On entry : 0/0
 14259 ;;		On exit  : 0/0
 14260 ;;		Unchanged: 0/0
 14261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14262 ;;      Params:         0       0       0       0       0       0       0       0
 14263 ;;      Locals:         0       0       0       0       0       0       0       0
 14264 ;;      Temps:          0       0       0       0       0       0       0       0
 14265 ;;      Totals:         0       0       0       0       0       0       0       0
 14266 ;;Total ram usage:        0 bytes
 14267 ;; Hardware stack levels used: 1
 14268 ;; This function calls:
 14269 ;;		Nothing
 14270 ;; This function is called by:
 14271 ;;		_I2C_DO_TX_EMPTY
 14272 ;; This function uses a non-reentrant model
 14273 ;;
 14274                           
 14275     1239                     _I2C_MasterSetIrq:	
 14276                           ;psect for function _I2C_MasterSetIrq
 14277                           
 14278     1239                     i1l3949:	
 14279                           ;incstack = 0
 14280                           ; Regs used in _I2C_MasterSetIrq: []
 14281                           
 14282                           
 14283                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
 14284     1239  0020               	movlb	0	; select bank0
 14285     123A  1591               	bsf	17,3	;volatile
 14286     123B                     i1l737:
 14287     123B  0008               	return
 14288     123C                     __end_of_I2C_MasterSetIrq:
 14289                           
 14290                           	psect	text86
 14291     12A9                     __ptext86:	
 14292 ;; *************** function _I2C_MasterIsNack *****************
 14293 ;; Defined at:
 14294 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;		None
 14297 ;; Auto vars:     Size  Location     Type
 14298 ;;		None
 14299 ;; Return value:  Size  Location     Type
 14300 ;;                  1    wreg      _Bool 
 14301 ;; Registers used:
 14302 ;;		wreg, status,2, status,0
 14303 ;; Tracked objects:
 14304 ;;		On entry : 0/0
 14305 ;;		On exit  : 0/0
 14306 ;;		Unchanged: 0/0
 14307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14308 ;;      Params:         0       0       0       0       0       0       0       0
 14309 ;;      Locals:         0       0       0       0       0       0       0       0
 14310 ;;      Temps:          0       0       0       0       0       0       0       0
 14311 ;;      Totals:         0       0       0       0       0       0       0       0
 14312 ;;Total ram usage:        0 bytes
 14313 ;; Hardware stack levels used: 1
 14314 ;; This function calls:
 14315 ;;		Nothing
 14316 ;; This function is called by:
 14317 ;;		_I2C_MasterFsm
 14318 ;;		_I2C_DO_TX
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322     12A9                     _I2C_MasterIsNack:	
 14323                           ;psect for function _I2C_MasterIsNack
 14324                           
 14325     12A9                     i1l3899:	
 14326                           ;incstack = 0
 14327                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
 14328                           
 14329                           
 14330                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
 14331     12A9  0024               	movlb	4	; select bank4
 14332     12AA  0E16               	swapf	22,w	;volatile
 14333     12AB  0C89               	rrf	9,f
 14334     12AC  0C89               	rrf	9,f
 14335     12AD  3901               	andlw	1
 14336     12AE                     i1l710:
 14337     12AE  0008               	return
 14338     12AF                     __end_of_I2C_MasterIsNack:
 14339                           
 14340                           	psect	text87
 14341     126D                     __ptext87:	
 14342 ;; *************** function _I2C_MasterSendTxData *****************
 14343 ;; Defined at:
 14344 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;  data            1    wreg     unsigned char 
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;  data            1    0[COMMON] unsigned char 
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 0/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14358 ;;      Params:         0       0       0       0       0       0       0       0
 14359 ;;      Locals:         1       0       0       0       0       0       0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0
 14361 ;;      Totals:         1       0       0       0       0       0       0       0
 14362 ;;Total ram usage:        1 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_I2C_DO_SEND_ADR_READ
 14368 ;;		_I2C_DO_SEND_ADR_WRITE
 14369 ;;		_I2C_DO_TX
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373     126D                     _I2C_MasterSendTxData:	
 14374                           ;psect for function _I2C_MasterSendTxData
 14375                           
 14376                           
 14377                           ;incstack = 0
 14378                           ; Regs used in _I2C_MasterSendTxData: [wreg]
 14379                           ;I2C_MasterSendTxData@data stored from wreg
 14380     126D  00F0               	movwf	I2C_MasterSendTxData@data
 14381     126E                     i1l3903:
 14382                           
 14383                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
 14384     126E  0870               	movf	I2C_MasterSendTxData@data,w
 14385     126F  0024               	movlb	4	; select bank4
 14386     1270  0091               	movwf	17	;volatile
 14387     1271                     i1l692:
 14388     1271  0008               	return
 14389     1272                     __end_of_I2C_MasterSendTxData:
 14390                           
 14391                           	psect	text88
 14392     125D                     __ptext88:	
 14393 ;; *************** function _I2C_MasterSendAck *****************
 14394 ;; Defined at:
 14395 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;		None
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;		None
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  1    wreg      void 
 14402 ;; Registers used:
 14403 ;;		None
 14404 ;; Tracked objects:
 14405 ;;		On entry : 0/0
 14406 ;;		On exit  : 0/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14409 ;;      Params:         0       0       0       0       0       0       0       0
 14410 ;;      Locals:         0       0       0       0       0       0       0       0
 14411 ;;      Temps:          0       0       0       0       0       0       0       0
 14412 ;;      Totals:         0       0       0       0       0       0       0       0
 14413 ;;Total ram usage:        0 bytes
 14414 ;; Hardware stack levels used: 1
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_I2C_DO_RX
 14419 ;;		_I2C_DO_RX_ACK
 14420 ;; This function uses a non-reentrant model
 14421 ;;
 14422                           
 14423     125D                     _I2C_MasterSendAck:	
 14424                           ;psect for function _I2C_MasterSendAck
 14425                           
 14426     125D                     i1l3927:	
 14427                           ;incstack = 0
 14428                           ; Regs used in _I2C_MasterSendAck: []
 14429                           
 14430                           
 14431                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
 14432     125D  0024               	movlb	4	; select bank4
 14433     125E  1296               	bcf	22,5	;volatile
 14434                           
 14435                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
 14436     125F  1616               	bsf	22,4	;volatile
 14437     1260                     i1l713:
 14438     1260  0008               	return
 14439     1261                     __end_of_I2C_MasterSendAck:
 14440                           
 14441                           	psect	text89
 14442     1236                     __ptext89:	
 14443 ;; *************** function _I2C_MasterGetRxData *****************
 14444 ;; Defined at:
 14445 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;		None
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;		None
 14450 ;; Return value:  Size  Location     Type
 14451 ;;                  1    wreg      unsigned char 
 14452 ;; Registers used:
 14453 ;;		wreg
 14454 ;; Tracked objects:
 14455 ;;		On entry : 0/0
 14456 ;;		On exit  : 0/0
 14457 ;;		Unchanged: 0/0
 14458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14459 ;;      Params:         0       0       0       0       0       0       0       0
 14460 ;;      Locals:         0       0       0       0       0       0       0       0
 14461 ;;      Temps:          0       0       0       0       0       0       0       0
 14462 ;;      Totals:         0       0       0       0       0       0       0       0
 14463 ;;Total ram usage:        0 bytes
 14464 ;; Hardware stack levels used: 1
 14465 ;; This function calls:
 14466 ;;		Nothing
 14467 ;; This function is called by:
 14468 ;;		_I2C_DO_RX
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472     1236                     _I2C_MasterGetRxData:	
 14473                           ;psect for function _I2C_MasterGetRxData
 14474                           
 14475     1236                     i1l3923:	
 14476                           ;incstack = 0
 14477                           ; Regs used in _I2C_MasterGetRxData: [wreg]
 14478                           
 14479                           
 14480                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
 14481     1236  0024               	movlb	4	; select bank4
 14482     1237  0811               	movf	17,w	;volatile
 14483     1238                     i1l689:
 14484     1238  0008               	return
 14485     1239                     __end_of_I2C_MasterGetRxData:
 14486                           
 14487                           	psect	text90
 14488     1259                     __ptext90:	
 14489 ;; *************** function _I2C_MasterSendNack *****************
 14490 ;; Defined at:
 14491 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
 14492 ;; Parameters:    Size  Location     Type
 14493 ;;		None
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;		None
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  1    wreg      void 
 14498 ;; Registers used:
 14499 ;;		None
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14505 ;;      Params:         0       0       0       0       0       0       0       0
 14506 ;;      Locals:         0       0       0       0       0       0       0       0
 14507 ;;      Temps:          0       0       0       0       0       0       0       0
 14508 ;;      Totals:         0       0       0       0       0       0       0       0
 14509 ;;Total ram usage:        0 bytes
 14510 ;; Hardware stack levels used: 1
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_I2C_DO_RX_NACK_STOP
 14515 ;;		_I2C_DO_RX_NACK_RESTART
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519     1259                     _I2C_MasterSendNack:	
 14520                           ;psect for function _I2C_MasterSendNack
 14521                           
 14522     1259                     i1l3717:	
 14523                           ;incstack = 0
 14524                           ; Regs used in _I2C_MasterSendNack: []
 14525                           
 14526                           
 14527                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
 14528     1259  0024               	movlb	4	; select bank4
 14529     125A  1696               	bsf	22,5	;volatile
 14530                           
 14531                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
 14532     125B  1616               	bsf	22,4	;volatile
 14533     125C                     i1l716:
 14534     125C  0008               	return
 14535     125D                     __end_of_I2C_MasterSendNack:
 14536                           
 14537                           	psect	text91
 14538     1233                     __ptext91:	
 14539 ;; *************** function _I2C_MasterStartRx *****************
 14540 ;; Defined at:
 14541 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;		None
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;		None
 14546 ;; Return value:  Size  Location     Type
 14547 ;;                  1    wreg      void 
 14548 ;; Registers used:
 14549 ;;		None
 14550 ;; Tracked objects:
 14551 ;;		On entry : 0/0
 14552 ;;		On exit  : 0/0
 14553 ;;		Unchanged: 0/0
 14554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14555 ;;      Params:         0       0       0       0       0       0       0       0
 14556 ;;      Locals:         0       0       0       0       0       0       0       0
 14557 ;;      Temps:          0       0       0       0       0       0       0       0
 14558 ;;      Totals:         0       0       0       0       0       0       0       0
 14559 ;;Total ram usage:        0 bytes
 14560 ;; Hardware stack levels used: 1
 14561 ;; This function calls:
 14562 ;;		Nothing
 14563 ;; This function is called by:
 14564 ;;		_I2C_DO_RCEN
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568     1233                     _I2C_MasterStartRx:	
 14569                           ;psect for function _I2C_MasterStartRx
 14570                           
 14571     1233                     i1l3941:	
 14572                           ;incstack = 0
 14573                           ; Regs used in _I2C_MasterStartRx: []
 14574                           
 14575                           
 14576                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
 14577     1233  0024               	movlb	4	; select bank4
 14578     1234  1596               	bsf	22,3	;volatile
 14579     1235                     i1l701:
 14580     1235  0008               	return
 14581     1236                     __end_of_I2C_MasterStartRx:
 14582                           
 14583                           	psect	text92
 14584     0002                     __ptext92:	
 14585 ;; *************** function _I2C_CallbackReturnReset *****************
 14586 ;; Defined at:
 14587 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
 14588 ;; Parameters:    Size  Location     Type
 14589 ;;  funPtr          1    7[COMMON] PTR void 
 14590 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14591 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;		None
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  1    wreg      enum E363
 14596 ;; Registers used:
 14597 ;;		wreg
 14598 ;; Tracked objects:
 14599 ;;		On entry : 0/0
 14600 ;;		On exit  : 0/0
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14603 ;;      Params:         1       0       0       0       0       0       0       0
 14604 ;;      Locals:         0       0       0       0       0       0       0       0
 14605 ;;      Temps:          0       0       0       0       0       0       0       0
 14606 ;;      Totals:         1       0       0       0       0       0       0       0
 14607 ;;Total ram usage:        1 bytes
 14608 ;; Hardware stack levels used: 1
 14609 ;; This function calls:
 14610 ;;		Nothing
 14611 ;; This function is called by:
 14612 ;;		_I2C_Open
 14613 ;;		_I2C_DO_TX
 14614 ;;		_I2C_DO_RX
 14615 ;;		_I2C_DO_TX_EMPTY
 14616 ;;		_I2C_DO_ADDRESS_NACK
 14617 ;;		_I2C_DO_RX_EMPTY
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621     0002                     _I2C_CallbackReturnReset:	
 14622                           ;psect for function _I2C_CallbackReturnReset
 14623                           
 14624     0002                     i1l3955:	
 14625                           ;incstack = 0
 14626                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
 14627                           
 14628                           
 14629                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
 14630     0002  3005               	movlw	5
 14631     0003                     i1l673:
 14632     0003  0008               	return
 14633     0004                     __end_of_I2C_CallbackReturnReset:
 14634                           
 14635                           	psect	text93
 14636     122B                     __ptext93:	
 14637 ;; *************** function _I2C_CallbackReturnStop *****************
 14638 ;; Defined at:
 14639 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
 14640 ;; Parameters:    Size  Location     Type
 14641 ;;  funPtr          1    7[COMMON] PTR void 
 14642 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14643 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;		None
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  1    wreg      enum E363
 14648 ;; Registers used:
 14649 ;;		wreg
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14655 ;;      Params:         1       0       0       0       0       0       0       0
 14656 ;;      Locals:         0       0       0       0       0       0       0       0
 14657 ;;      Temps:          0       0       0       0       0       0       0       0
 14658 ;;      Totals:         1       0       0       0       0       0       0       0
 14659 ;;Total ram usage:        1 bytes
 14660 ;; Hardware stack levels used: 1
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_I2C_Open
 14665 ;;		_I2C_SetCallback
 14666 ;;		i1_I2C_SetCallback
 14667 ;;		_I2C_DO_TX
 14668 ;;		_I2C_DO_RX
 14669 ;;		_I2C_DO_TX_EMPTY
 14670 ;;		_I2C_DO_ADDRESS_NACK
 14671 ;;		_I2C_DO_RX_EMPTY
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675     122B                     _I2C_CallbackReturnStop:	
 14676                           ;psect for function _I2C_CallbackReturnStop
 14677                           
 14678     122B                     i1l3951:	
 14679                           ;incstack = 0
 14680                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
 14681                           
 14682                           
 14683                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
 14684     122B  3001               	movlw	1
 14685     122C                     i1l670:
 14686     122C  0008               	return
 14687     122D                     __end_of_I2C_CallbackReturnStop:
 14688                           
 14689                           	psect	text94
 14690     1452                     __ptext94:	
 14691 ;; *************** function _rdBlkRegCompleteHandler *****************
 14692 ;; Defined at:
 14693 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14694 ;; Parameters:    Size  Location     Type
 14695 ;;  ptr             1    7[COMMON] PTR void 
 14696 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14697 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;		None
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  1    wreg      enum E363
 14702 ;; Registers used:
 14703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14709 ;;      Params:         1       0       0       0       0       0       0       0
 14710 ;;      Locals:         0       0       0       0       0       0       0       0
 14711 ;;      Temps:          0       0       0       0       0       0       0       0
 14712 ;;      Totals:         1       0       0       0       0       0       0       0
 14713 ;;Total ram usage:        1 bytes
 14714 ;; Hardware stack levels used: 1
 14715 ;; Hardware stack levels required when called: 2
 14716 ;; This function calls:
 14717 ;;		_I2C_SetDataCompleteCallback
 14718 ;;		i1_I2C_SetBuffer
 14719 ;; This function is called by:
 14720 ;;		_I2C_ReadDataBlock
 14721 ;;		_I2C_DO_TX
 14722 ;;		_I2C_DO_RX
 14723 ;;		_I2C_DO_TX_EMPTY
 14724 ;;		_I2C_DO_ADDRESS_NACK
 14725 ;;		_I2C_DO_RX_EMPTY
 14726 ;; This function uses a non-reentrant model
 14727 ;;
 14728                           
 14729     1452                     _rdBlkRegCompleteHandler:	
 14730                           ;psect for function _rdBlkRegCompleteHandler
 14731                           
 14732     1452                     i1l3893:	
 14733                           ;incstack = 0
 14734                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14735                           
 14736                           
 14737                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14738     1452  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14739     1453  0086               	movwf	6
 14740     1454  0187               	clrf	7
 14741     1455  3F40               	moviw [0]fsr1
 14742     1456  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14743     1457  3F41               	moviw [1]fsr1
 14744     1458  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14745     1459  0877               	movf	rdBlkRegCompleteHandler@ptr,w
 14746     145A  3E02               	addlw	2
 14747     145B  0086               	movwf	6
 14748     145C  0187               	clrf	7
 14749     145D  0801               	movf	1,w
 14750     145E  3193  2389  3194   	fcall	i1_I2C_SetBuffer
 14751                           
 14752                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14753     1461  3000               	movlw	0
 14754     1462  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14755     1463  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14756     1464  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14757     1465  3193  2334  3194   	fcall	_I2C_SetDataCompleteCallback
 14758     1468                     i1l3895:
 14759                           
 14760                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14761     1468  3002               	movlw	2
 14762     1469                     i1l104:
 14763     1469  0008               	return
 14764     146A                     __end_of_rdBlkRegCompleteHandler:
 14765                           
 14766                           	psect	text95
 14767     13E6                     __ptext95:	
 14768 ;; *************** function _wr1RegCompleteHandler *****************
 14769 ;; Defined at:
 14770 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14771 ;; Parameters:    Size  Location     Type
 14772 ;;  ptr             1    7[COMMON] PTR void 
 14773 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14774 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      enum E363
 14779 ;; Registers used:
 14780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14786 ;;      Params:         1       0       0       0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0
 14789 ;;      Totals:         1       0       0       0       0       0       0       0
 14790 ;;Total ram usage:        1 bytes
 14791 ;; Hardware stack levels used: 1
 14792 ;; Hardware stack levels required when called: 2
 14793 ;; This function calls:
 14794 ;;		_I2C_SetDataCompleteCallback
 14795 ;;		i1_I2C_SetBuffer
 14796 ;; This function is called by:
 14797 ;;		_I2C_Write1ByteRegister
 14798 ;;		_I2C_DO_TX
 14799 ;;		_I2C_DO_RX
 14800 ;;		_I2C_DO_TX_EMPTY
 14801 ;;		_I2C_DO_ADDRESS_NACK
 14802 ;;		_I2C_DO_RX_EMPTY
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806     13E6                     _wr1RegCompleteHandler:	
 14807                           ;psect for function _wr1RegCompleteHandler
 14808                           
 14809     13E6                     i1l3877:	
 14810                           ;incstack = 0
 14811                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14812                           
 14813                           
 14814                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14815     13E6  3001               	movlw	1
 14816     13E7  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14817     13E8  3000               	movlw	0
 14818     13E9  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14819     13EA  0877               	movf	wr1RegCompleteHandler@ptr,w
 14820     13EB  3193  2389  3193   	fcall	i1_I2C_SetBuffer
 14821     13EE                     i1l3879:
 14822                           
 14823                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14824     13EE  3000               	movlw	0
 14825     13EF  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14826     13F0  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14827     13F1  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14828     13F2  3193  2334  3193   	fcall	_I2C_SetDataCompleteCallback
 14829     13F5                     i1l3881:
 14830                           
 14831                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14832     13F5  3004               	movlw	4
 14833     13F6                     i1l98:
 14834     13F6  0008               	return
 14835     13F7                     __end_of_wr1RegCompleteHandler:
 14836                           
 14837                           	psect	text96
 14838     13D5                     __ptext96:	
 14839 ;; *************** function _rd2RegCompleteHandler *****************
 14840 ;; Defined at:
 14841 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;  ptr             1    7[COMMON] PTR void 
 14844 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14845 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14846 ;; Auto vars:     Size  Location     Type
 14847 ;;		None
 14848 ;; Return value:  Size  Location     Type
 14849 ;;                  1    wreg      enum E363
 14850 ;; Registers used:
 14851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14852 ;; Tracked objects:
 14853 ;;		On entry : 0/0
 14854 ;;		On exit  : 0/0
 14855 ;;		Unchanged: 0/0
 14856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14857 ;;      Params:         1       0       0       0       0       0       0       0
 14858 ;;      Locals:         0       0       0       0       0       0       0       0
 14859 ;;      Temps:          0       0       0       0       0       0       0       0
 14860 ;;      Totals:         1       0       0       0       0       0       0       0
 14861 ;;Total ram usage:        1 bytes
 14862 ;; Hardware stack levels used: 1
 14863 ;; Hardware stack levels required when called: 2
 14864 ;; This function calls:
 14865 ;;		_I2C_SetDataCompleteCallback
 14866 ;;		i1_I2C_SetBuffer
 14867 ;; This function is called by:
 14868 ;;		_I2C_Read2ByteRegister
 14869 ;;		_I2C_DO_TX
 14870 ;;		_I2C_DO_RX
 14871 ;;		_I2C_DO_TX_EMPTY
 14872 ;;		_I2C_DO_ADDRESS_NACK
 14873 ;;		_I2C_DO_RX_EMPTY
 14874 ;; This function uses a non-reentrant model
 14875 ;;
 14876                           
 14877     13D5                     _rd2RegCompleteHandler:	
 14878                           ;psect for function _rd2RegCompleteHandler
 14879                           
 14880     13D5                     i1l3869:	
 14881                           ;incstack = 0
 14882                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14883                           
 14884                           
 14885                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14886     13D5  3002               	movlw	2
 14887     13D6  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14888     13D7  3000               	movlw	0
 14889     13D8  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14890     13D9  0877               	movf	rd2RegCompleteHandler@ptr,w
 14891     13DA  3193  2389  3193   	fcall	i1_I2C_SetBuffer
 14892     13DD                     i1l3871:
 14893                           
 14894                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14895     13DD  3000               	movlw	0
 14896     13DE  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14897     13DF  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14898     13E0  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14899     13E1  3193  2334  3193   	fcall	_I2C_SetDataCompleteCallback
 14900     13E4                     i1l3873:
 14901                           
 14902                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14903     13E4  3002               	movlw	2
 14904     13E5                     i1l95:
 14905     13E5  0008               	return
 14906     13E6                     __end_of_rd2RegCompleteHandler:
 14907                           
 14908                           	psect	text97
 14909     13C4                     __ptext97:	
 14910 ;; *************** function _rd1RegCompleteHandler *****************
 14911 ;; Defined at:
 14912 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  ptr             1    7[COMMON] PTR void 
 14915 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14916 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14917 ;; Auto vars:     Size  Location     Type
 14918 ;;		None
 14919 ;; Return value:  Size  Location     Type
 14920 ;;                  1    wreg      enum E363
 14921 ;; Registers used:
 14922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14923 ;; Tracked objects:
 14924 ;;		On entry : 0/0
 14925 ;;		On exit  : 0/0
 14926 ;;		Unchanged: 0/0
 14927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14928 ;;      Params:         1       0       0       0       0       0       0       0
 14929 ;;      Locals:         0       0       0       0       0       0       0       0
 14930 ;;      Temps:          0       0       0       0       0       0       0       0
 14931 ;;      Totals:         1       0       0       0       0       0       0       0
 14932 ;;Total ram usage:        1 bytes
 14933 ;; Hardware stack levels used: 1
 14934 ;; Hardware stack levels required when called: 2
 14935 ;; This function calls:
 14936 ;;		_I2C_SetDataCompleteCallback
 14937 ;;		i1_I2C_SetBuffer
 14938 ;; This function is called by:
 14939 ;;		_I2C_Read1ByteRegister
 14940 ;;		_I2C_DO_TX
 14941 ;;		_I2C_DO_RX
 14942 ;;		_I2C_DO_TX_EMPTY
 14943 ;;		_I2C_DO_ADDRESS_NACK
 14944 ;;		_I2C_DO_RX_EMPTY
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948     13C4                     _rd1RegCompleteHandler:	
 14949                           ;psect for function _rd1RegCompleteHandler
 14950                           
 14951     13C4                     i1l3861:	
 14952                           ;incstack = 0
 14953                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14954                           
 14955                           
 14956                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14957     13C4  3001               	movlw	1
 14958     13C5  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 14959     13C6  3000               	movlw	0
 14960     13C7  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 14961     13C8  0877               	movf	rd1RegCompleteHandler@ptr,w
 14962     13C9  3193  2389  3193   	fcall	i1_I2C_SetBuffer
 14963     13CC                     i1l3863:
 14964                           
 14965                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14966     13CC  3000               	movlw	0
 14967     13CD  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 14968     13CE  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 14969     13CF  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 14970     13D0  3193  2334  3193   	fcall	_I2C_SetDataCompleteCallback
 14971     13D3                     i1l3865:
 14972                           
 14973                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14974     13D3  3002               	movlw	2
 14975     13D4                     i1l92:
 14976     13D4  0008               	return
 14977     13D5                     __end_of_rd1RegCompleteHandler:
 14978                           
 14979                           	psect	text98
 14980     13B3                     __ptext98:	
 14981 ;; *************** function _wr2RegCompleteHandler *****************
 14982 ;; Defined at:
 14983 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;  ptr             1    7[COMMON] PTR void 
 14986 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14987 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14988 ;; Auto vars:     Size  Location     Type
 14989 ;;		None
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  1    wreg      enum E363
 14992 ;; Registers used:
 14993 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 14999 ;;      Params:         1       0       0       0       0       0       0       0
 15000 ;;      Locals:         0       0       0       0       0       0       0       0
 15001 ;;      Temps:          0       0       0       0       0       0       0       0
 15002 ;;      Totals:         1       0       0       0       0       0       0       0
 15003 ;;Total ram usage:        1 bytes
 15004 ;; Hardware stack levels used: 1
 15005 ;; Hardware stack levels required when called: 2
 15006 ;; This function calls:
 15007 ;;		_I2C_SetDataCompleteCallback
 15008 ;;		i1_I2C_SetBuffer
 15009 ;; This function is called by:
 15010 ;;		_I2C_Write2ByteRegister
 15011 ;;		_I2C_DO_TX
 15012 ;;		_I2C_DO_RX
 15013 ;;		_I2C_DO_TX_EMPTY
 15014 ;;		_I2C_DO_ADDRESS_NACK
 15015 ;;		_I2C_DO_RX_EMPTY
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019     13B3                     _wr2RegCompleteHandler:	
 15020                           ;psect for function _wr2RegCompleteHandler
 15021                           
 15022     13B3                     i1l3885:	
 15023                           ;incstack = 0
 15024                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15025                           
 15026                           
 15027                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 15028     13B3  3002               	movlw	2
 15029     13B4  00F0               	movwf	i1I2C_SetBuffer@bufferSize
 15030     13B5  3000               	movlw	0
 15031     13B6  00F1               	movwf	i1I2C_SetBuffer@bufferSize+1
 15032     13B7  0877               	movf	wr2RegCompleteHandler@ptr,w
 15033     13B8  3193  2389  3193   	fcall	i1_I2C_SetBuffer
 15034     13BB                     i1l3887:
 15035                           
 15036                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15037     13BB  3000               	movlw	0
 15038     13BC  00F4               	movwf	I2C_SetDataCompleteCallback@cb
 15039     13BD  00F5               	movwf	I2C_SetDataCompleteCallback@cb+1
 15040     13BE  01F6               	clrf	I2C_SetDataCompleteCallback@ptr
 15041     13BF  3193  2334  3193   	fcall	_I2C_SetDataCompleteCallback
 15042     13C2                     i1l3889:
 15043                           
 15044                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 15045     13C2  3004               	movlw	4
 15046     13C3                     i1l101:
 15047     13C3  0008               	return
 15048     13C4                     __end_of_wr2RegCompleteHandler:
 15049                           
 15050                           	psect	text99
 15051     1389                     __ptext99:	
 15052 ;; *************** function i1_I2C_SetBuffer *****************
 15053 ;; Defined at:
 15054 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;  buffer          1    wreg     PTR void 
 15057 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15058 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15059 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15060 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15061 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15062 ;;  bufferSize      2    0[COMMON] unsigned int 
 15063 ;; Auto vars:     Size  Location     Type
 15064 ;;  buffer          1    2[COMMON] PTR void 
 15065 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
 15066 ;;		 -> ReadData@aData(6), SHT30_CMD_MEASURE_H_Enable(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 15067 ;;		 -> bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15068 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), 
 15069 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  1    wreg      void 
 15072 ;; Registers used:
 15073 ;;		wreg
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15079 ;;      Params:         2       0       0       0       0       0       0       0
 15080 ;;      Locals:         1       0       0       0       0       0       0       0
 15081 ;;      Temps:          0       0       0       0       0       0       0       0
 15082 ;;      Totals:         3       0       0       0       0       0       0       0
 15083 ;;Total ram usage:        3 bytes
 15084 ;; Hardware stack levels used: 1
 15085 ;; This function calls:
 15086 ;;		Nothing
 15087 ;; This function is called by:
 15088 ;;		_rd1RegCompleteHandler
 15089 ;;		_rd2RegCompleteHandler
 15090 ;;		_wr1RegCompleteHandler
 15091 ;;		_wr2RegCompleteHandler
 15092 ;;		_rdBlkRegCompleteHandler
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096     1389                     i1_I2C_SetBuffer:	
 15097                           ;psect for function i1_I2C_SetBuffer
 15098                           
 15099                           
 15100                           ;incstack = 0
 15101                           ; Regs used in i1_I2C_SetBuffer: [wreg]
 15102                           ;i1I2C_SetBuffer@buffer stored from wreg
 15103     1389  00F2               	movwf	i1I2C_SetBuffer@buffer
 15104     138A                     i1l3835:
 15105                           
 15106                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
 15107     138A  0022               	movlb	2	; select bank2
 15108     138B  1DBC               	btfss	(_I2C_Status^(0+256)+28),3
 15109     138C  2B8E               	goto	u263_21
 15110     138D  2B8F               	goto	u263_20
 15111     138E                     u263_21:
 15112     138E  2B96               	goto	i1l541
 15113     138F                     u263_20:
 15114     138F                     i1l3837:
 15115                           
 15116                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
 15117     138F  0872               	movf	i1I2C_SetBuffer@buffer,w
 15118     1390  00B7               	movwf	(low ((_I2C_Status| (0+256)+23)))^0
 15119                           
 15120                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
 15121     1391  0871               	movf	i1I2C_SetBuffer@bufferSize+1,w
 15122     1392  00B9               	movwf	((_I2C_Status+1)^(0+256)+24)
 15123     1393  0870               	movf	i1I2C_SetBuffer@bufferSize,w
 15124     1394  00B8               	movwf	(_I2C_Status^(0+256)+24)
 15125     1395                     i1l3839:
 15126                           
 15127                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
 15128     1395  11BC               	bcf	(_I2C_Status^(0+256)+28),3
 15129     1396                     i1l541:
 15130     1396  0008               	return
 15131     1397                     __end_ofi1_I2C_SetBuffer:
 15132                           
 15133                           	psect	text100
 15134     1334                     __ptext100:	
 15135 ;; *************** function _I2C_SetDataCompleteCallback *****************
 15136 ;; Defined at:
 15137 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
 15138 ;; Parameters:    Size  Location     Type
 15139 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 15140 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15141 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15142 ;;  ptr             1    6[COMMON] PTR void 
 15143 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15144 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;		None
 15147 ;; Return value:  Size  Location     Type
 15148 ;;                  1    wreg      void 
 15149 ;; Registers used:
 15150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15151 ;; Tracked objects:
 15152 ;;		On entry : 0/0
 15153 ;;		On exit  : 0/0
 15154 ;;		Unchanged: 0/0
 15155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15156 ;;      Params:         3       0       0       0       0       0       0       0
 15157 ;;      Locals:         0       0       0       0       0       0       0       0
 15158 ;;      Temps:          0       0       0       0       0       0       0       0
 15159 ;;      Totals:         3       0       0       0       0       0       0       0
 15160 ;;Total ram usage:        3 bytes
 15161 ;; Hardware stack levels used: 1
 15162 ;; Hardware stack levels required when called: 1
 15163 ;; This function calls:
 15164 ;;		i1_I2C_SetCallback
 15165 ;; This function is called by:
 15166 ;;		_rd1RegCompleteHandler
 15167 ;;		_rd2RegCompleteHandler
 15168 ;;		_wr1RegCompleteHandler
 15169 ;;		_wr2RegCompleteHandler
 15170 ;;		_rdBlkRegCompleteHandler
 15171 ;;		_I2C_Read1ByteRegister
 15172 ;;		_I2C_Read2ByteRegister
 15173 ;;		_I2C_Write1ByteRegister
 15174 ;;		_I2C_Write2ByteRegister
 15175 ;;		_I2C_ReadDataBlock
 15176 ;; This function uses a non-reentrant model
 15177 ;;
 15178                           
 15179     1334                     _I2C_SetDataCompleteCallback:	
 15180                           ;psect for function _I2C_SetDataCompleteCallback
 15181                           
 15182     1334                     i1l3677:	
 15183                           ;incstack = 0
 15184                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15185                           
 15186                           
 15187                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15188     1334  0875               	movf	I2C_SetDataCompleteCallback@cb+1,w
 15189     1335  00F1               	movwf	i1I2C_SetCallback@cb+1
 15190     1336  0874               	movf	I2C_SetDataCompleteCallback@cb,w
 15191     1337  00F0               	movwf	i1I2C_SetCallback@cb
 15192     1338  0876               	movf	I2C_SetDataCompleteCallback@ptr,w
 15193     1339  00F2               	movwf	i1I2C_SetCallback@ptr
 15194     133A  3000               	movlw	0
 15195     133B  3195  2576  3193   	fcall	i1_I2C_SetCallback
 15196     133E                     i1l544:
 15197     133E  0008               	return
 15198     133F                     __end_of_I2C_SetDataCompleteCallback:
 15199                           
 15200                           	psect	text101
 15201     1576                     __ptext101:	
 15202 ;; *************** function i1_I2C_SetCallback *****************
 15203 ;; Defined at:
 15204 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;  idx             1    wreg     enum E3130
 15207 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 15208 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15209 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15210 ;;  ptr             1    2[COMMON] PTR void 
 15211 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15212 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  idx             1    3[COMMON] enum E3130
 15215 ;; Return value:  Size  Location     Type
 15216 ;;                  1    wreg      void 
 15217 ;; Registers used:
 15218 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15219 ;; Tracked objects:
 15220 ;;		On entry : 0/0
 15221 ;;		On exit  : 0/0
 15222 ;;		Unchanged: 0/0
 15223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15224 ;;      Params:         3       0       0       0       0       0       0       0
 15225 ;;      Locals:         1       0       0       0       0       0       0       0
 15226 ;;      Temps:          0       0       0       0       0       0       0       0
 15227 ;;      Totals:         4       0       0       0       0       0       0       0
 15228 ;;Total ram usage:        4 bytes
 15229 ;; Hardware stack levels used: 1
 15230 ;; This function calls:
 15231 ;;		Nothing
 15232 ;; This function is called by:
 15233 ;;		_I2C_SetDataCompleteCallback
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237     1576                     i1_I2C_SetCallback:	
 15238                           ;psect for function i1_I2C_SetCallback
 15239                           
 15240                           
 15241                           ;incstack = 0
 15242                           ; Regs used in i1_I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15243                           ;i1I2C_SetCallback@idx stored from wreg
 15244     1576  00F3               	movwf	i1I2C_SetCallback@idx
 15245     1577                     i1l3635:
 15246                           
 15247                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
 15248     1577  0870               	movf	i1I2C_SetCallback@cb,w
 15249     1578  0471               	iorwf	i1I2C_SetCallback@cb+1,w
 15250     1579  1903               	btfsc	3,2
 15251     157A  2D7C               	goto	u248_21
 15252     157B  2D7D               	goto	u248_20
 15253     157C                     u248_21:
 15254     157C  2D8E               	goto	i1l3639
 15255     157D                     u248_20:
 15256     157D                     i1l3637:
 15257                           
 15258                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15259     157D  3573               	lslf	i1I2C_SetCallback@idx,w
 15260     157E  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15261     157F  0086               	movwf	6
 15262     1580  3001               	movlw	1	; select bank2/3
 15263     1581  0087               	movwf	7
 15264     1582  0870               	movf	i1I2C_SetCallback@cb,w
 15265     1583  3FC0               	movwi [0]fsr1
 15266     1584  0871               	movf	i1I2C_SetCallback@cb+1,w
 15267     1585  3FC1               	movwi [1]fsr1
 15268                           
 15269                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
 15270     1586  0873               	movf	i1I2C_SetCallback@idx,w
 15271     1587  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15272     1588  0086               	movwf	6
 15273     1589  3001               	movlw	1	; select bank2/3
 15274     158A  0087               	movwf	7
 15275     158B  0872               	movf	i1I2C_SetCallback@ptr,w
 15276     158C  0081               	movwf	1
 15277                           
 15278                           ;mcc_generated_files/i2c_master.c: 310:     }
 15279     158D  2D9D               	goto	i1l564
 15280     158E                     i1l3639:
 15281                           
 15282                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15283     158E  3573               	lslf	i1I2C_SetCallback@idx,w
 15284     158F  3E20               	addlw	(low (_I2C_Status| (0+256)))& (0+255)
 15285     1590  0086               	movwf	6
 15286     1591  3001               	movlw	1	; select bank2/3
 15287     1592  0087               	movwf	7
 15288     1593  302B               	movlw	low _I2C_CallbackReturnStop
 15289     1594  3FC0               	movwi [0]fsr1
 15290     1595  3012               	movlw	high _I2C_CallbackReturnStop
 15291     1596  3FC1               	movwi [1]fsr1
 15292                           
 15293                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15294     1597  0873               	movf	i1I2C_SetCallback@idx,w
 15295     1598  3E2C               	addlw	(low ((_I2C_Status| (0+256)+12)))& (0+255)
 15296     1599  0086               	movwf	6
 15297     159A  3001               	movlw	1	; select bank2/3
 15298     159B  0087               	movwf	7
 15299     159C  0181               	clrf	1
 15300     159D                     i1l564:
 15301     159D  0008               	return
 15302     159E                     __end_ofi1_I2C_SetCallback:
 15303                           
 15304                           	psect	text102
 15305     1230                     __ptext102:	
 15306 ;; *************** function _I2C_MasterStop *****************
 15307 ;; Defined at:
 15308 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
 15309 ;; Parameters:    Size  Location     Type
 15310 ;;		None
 15311 ;; Auto vars:     Size  Location     Type
 15312 ;;		None
 15313 ;; Return value:  Size  Location     Type
 15314 ;;                  1    wreg      void 
 15315 ;; Registers used:
 15316 ;;		None
 15317 ;; Tracked objects:
 15318 ;;		On entry : 0/0
 15319 ;;		On exit  : 0/0
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15322 ;;      Params:         0       0       0       0       0       0       0       0
 15323 ;;      Locals:         0       0       0       0       0       0       0       0
 15324 ;;      Temps:          0       0       0       0       0       0       0       0
 15325 ;;      Totals:         0       0       0       0       0       0       0       0
 15326 ;;Total ram usage:        0 bytes
 15327 ;; Hardware stack levels used: 1
 15328 ;; This function calls:
 15329 ;;		Nothing
 15330 ;; This function is called by:
 15331 ;;		_I2C_DO_SEND_STOP
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           
 15335     1230                     _I2C_MasterStop:	
 15336                           ;psect for function _I2C_MasterStop
 15337                           
 15338     1230                     i1l3715:	
 15339                           ;incstack = 0
 15340                           ; Regs used in _I2C_MasterStop: []
 15341                           
 15342                           
 15343                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
 15344     1230  0024               	movlb	4	; select bank4
 15345     1231  1516               	bsf	22,2	;volatile
 15346     1232                     i1l707:
 15347     1232  0008               	return
 15348     1233                     __end_of_I2C_MasterStop:
 15349                           
 15350                           	psect	text103
 15351     122D                     __ptext103:	
 15352 ;; *************** function _I2C_MasterEnableRestart *****************
 15353 ;; Defined at:
 15354 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;		None
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		None
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15368 ;;      Params:         0       0       0       0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		_I2C_DO_SEND_RESTART_READ
 15378 ;;		_I2C_DO_SEND_RESTART_WRITE
 15379 ;;		_I2C_DO_SEND_RESTART
 15380 ;;		_I2C_DO_RX_EMPTY
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384     122D                     _I2C_MasterEnableRestart:	
 15385                           ;psect for function _I2C_MasterEnableRestart
 15386                           
 15387     122D                     i1l3713:	
 15388                           ;incstack = 0
 15389                           ; Regs used in _I2C_MasterEnableRestart: []
 15390                           
 15391                           
 15392                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
 15393     122D  0024               	movlb	4	; select bank4
 15394     122E  1496               	bsf	22,1	;volatile
 15395     122F                     i1l695:
 15396     122F  0008               	return
 15397     1230                     __end_of_I2C_MasterEnableRestart:
 15398                           
 15399                           	psect	text104
 15400     152F                     __ptext104:	
 15401 ;; *************** function _EUSART_Transmit_ISR *****************
 15402 ;; Defined at:
 15403 ;;		line 206 in file "mcc_generated_files/eusart.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15417 ;;      Params:         0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0
 15419 ;;      Temps:          1       0       0       0       0       0       0       0
 15420 ;;      Totals:         1       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        1 bytes
 15422 ;; Hardware stack levels used: 1
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_EUSART_Initialize
 15427 ;;		_INTERRUPT_InterruptManager
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431     152F                     _EUSART_Transmit_ISR:	
 15432                           ;psect for function _EUSART_Transmit_ISR
 15433                           
 15434     152F                     i1l5005:	
 15435                           ;incstack = 0
 15436                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15437                           
 15438                           
 15439                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 15440     152F  3008               	movlw	8
 15441     1530  0020               	movlb	0	; select bank0
 15442     1531  026D               	subwf	_eusartTxBufferRemaining,w	;volatile
 15443     1532  1803               	skipnc
 15444     1533  2D35               	goto	u431_21
 15445     1534  2D36               	goto	u431_20
 15446     1535                     u431_21:
 15447     1535  2D4F               	goto	i1l316
 15448     1536                     u431_20:
 15449     1536                     i1l5007:
 15450                           
 15451                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 15452     1536  086E               	movf	_eusartTxTail,w
 15453     1537  3E4D               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 15454     1538  0086               	movwf	6
 15455     1539  3001               	movlw	1	; select bank2/3
 15456     153A  0087               	movwf	7
 15457     153B  0801               	movf	1,w
 15458     153C  0023               	movlb	3	; select bank3
 15459     153D  009A               	movwf	26	;volatile
 15460     153E                     i1l5009:
 15461     153E  3001               	movlw	1
 15462     153F  00F0               	movwf	??_EUSART_Transmit_ISR
 15463     1540  0870               	movf	??_EUSART_Transmit_ISR,w
 15464     1541  0020               	movlb	0	; select bank0
 15465     1542  07EE               	addwf	_eusartTxTail,f	;volatile
 15466     1543                     i1l5011:
 15467                           
 15468                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15469     1543  3008               	movlw	8
 15470     1544  026E               	subwf	_eusartTxTail,w	;volatile
 15471     1545  1C03               	skipc
 15472     1546  2D48               	goto	u432_21
 15473     1547  2D49               	goto	u432_20
 15474     1548                     u432_21:
 15475     1548  2D4A               	goto	i1l5015
 15476     1549                     u432_20:
 15477     1549                     i1l5013:
 15478                           
 15479                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 15480     1549  01EE               	clrf	_eusartTxTail	;volatile
 15481     154A                     i1l5015:
 15482                           
 15483                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 15484     154A  3001               	movlw	1
 15485     154B  00F0               	movwf	??_EUSART_Transmit_ISR
 15486     154C  0870               	movf	??_EUSART_Transmit_ISR,w
 15487     154D  07ED               	addwf	_eusartTxBufferRemaining,f	;volatile
 15488                           
 15489                           ;mcc_generated_files/eusart.c: 218:     }
 15490     154E  2D51               	goto	i1l319
 15491     154F                     i1l316:	
 15492                           ;mcc_generated_files/eusart.c: 219:     else
 15493                           
 15494                           
 15495                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 15496     154F  0021               	movlb	1	; select bank1
 15497     1550  1211               	bcf	17,4	;volatile
 15498     1551                     i1l319:
 15499     1551  0008               	return
 15500     1552                     __end_of_EUSART_Transmit_ISR:
 15501                           
 15502                           	psect	text105
 15503     16F4                     __ptext105:	
 15504 ;; *************** function _EUSART_Receive_ISR *****************
 15505 ;; Defined at:
 15506 ;;		line 225 in file "mcc_generated_files/eusart.c"
 15507 ;; Parameters:    Size  Location     Type
 15508 ;;		None
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;		None
 15511 ;; Return value:  Size  Location     Type
 15512 ;;                  1    wreg      void 
 15513 ;; Registers used:
 15514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15520 ;;      Params:         0       0       0       0       0       0       0       0
 15521 ;;      Locals:         0       0       0       0       0       0       0       0
 15522 ;;      Temps:          0       0       0       0       0       0       0       0
 15523 ;;      Totals:         0       0       0       0       0       0       0       0
 15524 ;;Total ram usage:        0 bytes
 15525 ;; Hardware stack levels used: 1
 15526 ;; Hardware stack levels required when called: 2
 15527 ;; This function calls:
 15528 ;;		NULL
 15529 ;;		_EUSART_DefaultErrorHandler
 15530 ;;		_EUSART_DefaultFramingErrorHandler
 15531 ;;		_EUSART_DefaultOverrunErrorHandler
 15532 ;;		_EUSART_RxDataHandler
 15533 ;; This function is called by:
 15534 ;;		_EUSART_Initialize
 15535 ;;		_INTERRUPT_InterruptManager
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539     16F4                     _EUSART_Receive_ISR:	
 15540                           ;psect for function _EUSART_Receive_ISR
 15541                           
 15542     16F4                     i1l5017:	
 15543                           ;incstack = 0
 15544                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15545                           
 15546                           
 15547                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 15548     16F4  0020               	movlb	0	; select bank0
 15549     16F5  086C               	movf	_eusartRxHead,w	;volatile
 15550     16F6  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15551     16F7  0086               	movwf	6
 15552     16F8  3001               	movlw	1	; select bank2/3
 15553     16F9  0087               	movwf	7
 15554     16FA  0181               	clrf	1
 15555     16FB                     i1l5019:
 15556                           
 15557                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 15558     16FB  0023               	movlb	3	; select bank3
 15559     16FC  1D1D               	btfss	29,2	;volatile
 15560     16FD  2EFF               	goto	u433_21
 15561     16FE  2F00               	goto	u433_20
 15562     16FF                     u433_21:
 15563     16FF  2F0D               	goto	i1l5025
 15564     1700                     u433_20:
 15565     1700                     i1l5021:
 15566                           
 15567                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 15568     1700  0020               	movlb	0	; select bank0
 15569     1701  086C               	movf	_eusartRxHead,w	;volatile
 15570     1702  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15571     1703  0086               	movwf	6
 15572     1704  3001               	movlw	1	; select bank2/3
 15573     1705  0087               	movwf	7
 15574     1706  1481               	bsf	1,1
 15575     1707                     i1l5023:
 15576                           
 15577                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 15578     1707  0022               	movlb	2	; select bank2
 15579     1708  0868               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
 15580     1709  008A               	movwf	10
 15581     170A  0867               	movf	_EUSART_FramingErrorHandler^(0+256),w
 15582     170B  000A               	callw
 15583     170C  3196               	pagesel	$
 15584     170D                     i1l5025:
 15585                           
 15586                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 15587     170D  0023               	movlb	3	; select bank3
 15588     170E  1C9D               	btfss	29,1	;volatile
 15589     170F  2F11               	goto	u434_21
 15590     1710  2F12               	goto	u434_20
 15591     1711                     u434_21:
 15592     1711  2F1F               	goto	i1l5031
 15593     1712                     u434_20:
 15594     1712                     i1l5027:
 15595                           
 15596                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 15597     1712  0020               	movlb	0	; select bank0
 15598     1713  086C               	movf	_eusartRxHead,w	;volatile
 15599     1714  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15600     1715  0086               	movwf	6
 15601     1716  3001               	movlw	1	; select bank2/3
 15602     1717  0087               	movwf	7
 15603     1718  1501               	bsf	1,2
 15604     1719                     i1l5029:
 15605                           
 15606                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 15607     1719  0022               	movlb	2	; select bank2
 15608     171A  0866               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
 15609     171B  008A               	movwf	10
 15610     171C  0865               	movf	_EUSART_OverrunErrorHandler^(0+256),w
 15611     171D  000A               	callw
 15612     171E  3196               	pagesel	$
 15613     171F                     i1l5031:
 15614                           
 15615                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 15616     171F  0020               	movlb	0	; select bank0
 15617     1720  086C               	movf	_eusartRxHead,w	;volatile
 15618     1721  3E3D               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 15619     1722  0086               	movwf	6
 15620     1723  3001               	movlw	1	; select bank2/3
 15621     1724  0087               	movwf	7
 15622     1725  0801               	movf	1,w
 15623     1726  1903               	btfsc	3,2
 15624     1727  2F29               	goto	u435_21
 15625     1728  2F2A               	goto	u435_20
 15626     1729                     u435_21:
 15627     1729  2F31               	goto	i1l5035
 15628     172A                     u435_20:
 15629     172A                     i1l5033:
 15630                           
 15631                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 15632     172A  0022               	movlb	2	; select bank2
 15633     172B  0864               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
 15634     172C  008A               	movwf	10
 15635     172D  0863               	movf	_EUSART_ErrorHandler^(0+256),w
 15636     172E  000A               	callw
 15637     172F  3196               	pagesel	$
 15638                           
 15639                           ;mcc_generated_files/eusart.c: 242:     } else {
 15640     1730  2F34               	goto	i1l326
 15641     1731                     i1l5035:
 15642                           
 15643                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 15644     1731  3194  246A  3196   	fcall	_EUSART_RxDataHandler
 15645     1734                     i1l326:
 15646     1734  0008               	return
 15647     1735                     __end_of_EUSART_Receive_ISR:
 15648                           
 15649                           	psect	text106
 15650     1255                     __ptext106:	
 15651 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 15652 ;; Defined at:
 15653 ;;		line 261 in file "mcc_generated_files/eusart.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;		None
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      void 
 15660 ;; Registers used:
 15661 ;;		None
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15667 ;;      Params:         0       0       0       0       0       0       0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0
 15669 ;;      Temps:          0       0       0       0       0       0       0       0
 15670 ;;      Totals:         0       0       0       0       0       0       0       0
 15671 ;;Total ram usage:        0 bytes
 15672 ;; Hardware stack levels used: 1
 15673 ;; This function calls:
 15674 ;;		Nothing
 15675 ;; This function is called by:
 15676 ;;		_EUSART_Initialize
 15677 ;;		_EUSART_Receive_ISR
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681     1255                     _EUSART_DefaultOverrunErrorHandler:	
 15682                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 15683                           
 15684     1255                     i1l4883:	
 15685                           ;incstack = 0
 15686                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 15687                           
 15688                           
 15689                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 15690     1255  0023               	movlb	3	; select bank3
 15691     1256  121D               	bcf	29,4	;volatile
 15692                           
 15693                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 15694     1257  161D               	bsf	29,4	;volatile
 15695     1258                     i1l336:
 15696     1258  0008               	return
 15697     1259                     __end_of_EUSART_DefaultOverrunErrorHandler:
 15698                           
 15699                           	psect	text107
 15700     1229                     __ptext107:	
 15701 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 15702 ;; Defined at:
 15703 ;;		line 259 in file "mcc_generated_files/eusart.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;		None
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;		None
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      void 
 15710 ;; Registers used:
 15711 ;;		None
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15717 ;;      Params:         0       0       0       0       0       0       0       0
 15718 ;;      Locals:         0       0       0       0       0       0       0       0
 15719 ;;      Temps:          0       0       0       0       0       0       0       0
 15720 ;;      Totals:         0       0       0       0       0       0       0       0
 15721 ;;Total ram usage:        0 bytes
 15722 ;; Hardware stack levels used: 1
 15723 ;; This function calls:
 15724 ;;		Nothing
 15725 ;; This function is called by:
 15726 ;;		_EUSART_Initialize
 15727 ;;		_EUSART_Receive_ISR
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731     1229                     _EUSART_DefaultFramingErrorHandler:	
 15732                           ;psect for function _EUSART_DefaultFramingErrorHandler
 15733                           
 15734     1229                     i1l333:	
 15735                           ;incstack = 0
 15736                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 15737                           
 15738     1229  0008               	return
 15739     122A                     __end_of_EUSART_DefaultFramingErrorHandler:
 15740                           
 15741                           	psect	text108
 15742     1251                     __ptext108:	
 15743 ;; *************** function _EUSART_DefaultErrorHandler *****************
 15744 ;; Defined at:
 15745 ;;		line 269 in file "mcc_generated_files/eusart.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;		None
 15748 ;; Auto vars:     Size  Location     Type
 15749 ;;		None
 15750 ;; Return value:  Size  Location     Type
 15751 ;;                  1    wreg      void 
 15752 ;; Registers used:
 15753 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15754 ;; Tracked objects:
 15755 ;;		On entry : 0/0
 15756 ;;		On exit  : 0/0
 15757 ;;		Unchanged: 0/0
 15758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15759 ;;      Params:         0       0       0       0       0       0       0       0
 15760 ;;      Locals:         0       0       0       0       0       0       0       0
 15761 ;;      Temps:          0       0       0       0       0       0       0       0
 15762 ;;      Totals:         0       0       0       0       0       0       0       0
 15763 ;;Total ram usage:        0 bytes
 15764 ;; Hardware stack levels used: 1
 15765 ;; Hardware stack levels required when called: 1
 15766 ;; This function calls:
 15767 ;;		_EUSART_RxDataHandler
 15768 ;; This function is called by:
 15769 ;;		_EUSART_Initialize
 15770 ;;		_EUSART_Receive_ISR
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774     1251                     _EUSART_DefaultErrorHandler:	
 15775                           ;psect for function _EUSART_DefaultErrorHandler
 15776                           
 15777     1251                     i1l4885:	
 15778                           ;incstack = 0
 15779                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 15780                           
 15781                           
 15782                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 15783     1251  3194  246A  3192   	fcall	_EUSART_RxDataHandler
 15784     1254                     i1l339:
 15785     1254  0008               	return
 15786     1255                     __end_of_EUSART_DefaultErrorHandler:
 15787                           
 15788                           	psect	text109
 15789     146A                     __ptext109:	
 15790 ;; *************** function _EUSART_RxDataHandler *****************
 15791 ;; Defined at:
 15792 ;;		line 249 in file "mcc_generated_files/eusart.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      void 
 15799 ;; Registers used:
 15800 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 15806 ;;      Params:         0       0       0       0       0       0       0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0
 15808 ;;      Temps:          1       0       0       0       0       0       0       0
 15809 ;;      Totals:         1       0       0       0       0       0       0       0
 15810 ;;Total ram usage:        1 bytes
 15811 ;; Hardware stack levels used: 1
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_EUSART_Receive_ISR
 15816 ;;		_EUSART_DefaultErrorHandler
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820     146A                     _EUSART_RxDataHandler:	
 15821                           ;psect for function _EUSART_RxDataHandler
 15822                           
 15823     146A                     i1l4591:	
 15824                           ;incstack = 0
 15825                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 15826                           
 15827                           
 15828                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 15829     146A  0020               	movlb	0	; select bank0
 15830     146B  086C               	movf	_eusartRxHead,w
 15831     146C  3E45               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 15832     146D  0086               	movwf	6
 15833     146E  3001               	movlw	1	; select bank2/3
 15834     146F  0087               	movwf	7
 15835     1470  0023               	movlb	3	; select bank3
 15836     1471  0819               	movf	25,w	;volatile
 15837     1472  0081               	movwf	1
 15838     1473                     i1l4593:
 15839     1473  3001               	movlw	1
 15840     1474  00F0               	movwf	??_EUSART_RxDataHandler
 15841     1475  0870               	movf	??_EUSART_RxDataHandler,w
 15842     1476  0020               	movlb	0	; select bank0
 15843     1477  07EC               	addwf	_eusartRxHead,f	;volatile
 15844     1478                     i1l4595:
 15845                           
 15846                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15847     1478  3008               	movlw	8
 15848     1479  026C               	subwf	_eusartRxHead,w	;volatile
 15849     147A  1C03               	skipc
 15850     147B  2C7D               	goto	u397_21
 15851     147C  2C7E               	goto	u397_20
 15852     147D                     u397_21:
 15853     147D  2C7F               	goto	i1l4599
 15854     147E                     u397_20:
 15855     147E                     i1l4597:
 15856                           
 15857                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 15858     147E  01EC               	clrf	_eusartRxHead	;volatile
 15859     147F                     i1l4599:
 15860                           
 15861                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 15862     147F  3001               	movlw	1
 15863     1480  00F0               	movwf	??_EUSART_RxDataHandler
 15864     1481  0870               	movf	??_EUSART_RxDataHandler,w
 15865     1482  07EA               	addwf	_eusartRxCount,f	;volatile
 15866     1483                     i1l330:
 15867     1483  0008               	return
 15868     1484                     __end_of_EUSART_RxDataHandler:
 15869     007E                     btemp	set	126	;btemp
 15870     007E                     int$flags	set	126
 15871     007E                     wtemp0	set	126
 15872     2138                     
 15873                           	psect	idloc
 15874                           
 15875                           ;Config register IDLOC0 @ 0x8000
 15876                           ;	unspecified, using default values
 15877     8000                     	org	32768
 15878     8000  3FFF               	dw	16383
 15879                           
 15880                           ;Config register IDLOC1 @ 0x8001
 15881                           ;	unspecified, using default values
 15882     8001                     	org	32769
 15883     8001  3FFF               	dw	16383
 15884                           
 15885                           ;Config register IDLOC2 @ 0x8002
 15886                           ;	unspecified, using default values
 15887     8002                     	org	32770
 15888     8002  3FFF               	dw	16383
 15889                           
 15890                           ;Config register IDLOC3 @ 0x8003
 15891                           ;	unspecified, using default values
 15892     8003                     	org	32771
 15893     8003  3FFF               	dw	16383
 15894                           
 15895                           	psect	config
 15896                           
 15897                           ;Config register CONFIG1 @ 0x8007
 15898                           ;	Oscillator Selection
 15899                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15900                           ;	Watchdog Timer Enable
 15901                           ;	WDTE = ON, WDT enabled
 15902                           ;	Power-up Timer Enable
 15903                           ;	PWRTE = OFF, PWRT disabled
 15904                           ;	MCLR Pin Function Select
 15905                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15906                           ;	Flash Program Memory Code Protection
 15907                           ;	CP = OFF, Program memory code protection is disabled
 15908                           ;	Data Memory Code Protection
 15909                           ;	CPD = OFF, Data memory code protection is disabled
 15910                           ;	Brown-out Reset Enable
 15911                           ;	BOREN = ON, Brown-out Reset enabled
 15912                           ;	Clock Out Enable
 15913                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15914                           ;	Internal/External Switchover
 15915                           ;	IESO = ON, Internal/External Switchover mode is enabled
 15916                           ;	Fail-Safe Clock Monitor Enable
 15917                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15918     8007                     	org	32775
 15919     8007  3FFC               	dw	16380
 15920                           
 15921                           ;Config register CONFIG2 @ 0x8008
 15922                           ;	Flash Memory Self-Write Protection
 15923                           ;	WRT = OFF, Write protection off
 15924                           ;	Voltage Regulator Capacitor Enable
 15925                           ;	VCAPEN = RA5, VCAP functionality is enabled on RA5
 15926                           ;	PLL Enable
 15927                           ;	PLLEN = OFF, 4x PLL disabled
 15928                           ;	Stack Overflow/Underflow Reset Enable
 15929                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15930                           ;	Brown-out Reset Voltage Selection
 15931                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15932                           ;	Low-Voltage Programming Enable
 15933                           ;	LVP = ON, Low-voltage programming enabled
 15934     8008                     	org	32776
 15935     8008  3EDF               	dw	16095

Data Sizes:
    Strings     0
    Constant    40
    Data        12
    BSS         87
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     73      80
    BANK1            80     55      80
    BANK2            80      0      77
    BANK3            72      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2364$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2369	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2364	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2363	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ModbusRTU_Slave_Poll@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    ModbusSlaveF04@reg	PTR unsigned short  size(1) Largest target is 4
		 -> MB_Register(BANK2[4]), 

    S1479$INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.INPUT_REGS	PTR unsigned short  size(2) Largest target is 0

    S1479$HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.HOLDING_REGS	PTR unsigned short  size(2) Largest target is 0

    S1479$au16regs	PTR unsigned short  size(2) Largest target is 0

    SES_Modbus.au16regs	PTR unsigned short  size(2) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> ReadData@aData(BANK1[6]), SHT30_CMD_MEASURE_H_Enable(BANK1[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[4]), 
		 -> bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S826$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), NULL(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rtcc_handle(), NULL(), TMR1_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_Transmit_ISR(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[4]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(1) Largest target is 6
		 -> ReadData@aData(BANK1[6]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 2
		 -> SHT30_CMD_MEASURE_H_Enable(BANK1[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _I2C_MasterIsr->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->i1_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _llabs->_Get_millis
    _ReadData->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___fladd
    ___fladd->___flmul
    _I2C_WriteNBytes->_I2C_SetAddressNackCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_ReadNBytes->_I2C_Open
    _I2C_Open->_I2C_SetInterruptHandler
    _I2C_MasterRead->_I2C_MasterOperation
    _ModbusSlave_Process->_ModbusRTU_Slave_Poll
    _ModbusRTU_Slave_Poll->_ModbusSlaveF04
    _validateRequest->_Modbus_calcCRC
    _Modbus_getRxBuff->_EUSART_Read
    _ModbusSlaveF04->_Modbus_sendTxBuff
    _Modbus_sendTxBuff->_Modbus_calcCRC
    _App_Init->_Device_Init
    _Tick_Init_SES->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _App_Process->_Task_Sensor
    _Task_Sensor->_ReadData
    _ReadData->___fldiv

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17125
                           _App_Init
                        _App_Process
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _App_Process                                          0     0      0   15931
                     _Task_Indicator
                            _Task_MB
                        _Task_Sensor
 ---------------------------------------------------------------------------------
 (2) _Task_Sensor                                         12    12      0   13697
                                             43 BANK1     12    12      0
                         _Get_millis
                           _ReadData
                              _llabs
 ---------------------------------------------------------------------------------
 (3) _llabs                                                8     0      8     142
                                              4 BANK0      8     0      8
                         _Get_millis (ARG)
 ---------------------------------------------------------------------------------
 (3) _ReadData                                            30    30      0   13555
                                             13 BANK1     30    30      0
                         _Get_millis
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    3177
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1425
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2566
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      4     1      3    3472
                                              8 BANK0      4     1      3
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1818
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      4     1      3     862
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadNBytes                                       4     1      3    1654
                                              4 BANK0      4     1      3
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        3     1      2    1222
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0     144
                                              2 BANK0      2     2      0
                 _I2C_MasterClearIrq
                _I2C_MasterEnableIrq
                     _I2C_MasterOpen
            _I2C_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (6) _I2C_SetInterruptHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterRead                                       0     0      0      46
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0      46
                                              0 BANK0      2     2      0
                    _I2C_MasterStart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Task_MB                                              0     0      0    2234
                   _ModbusSlave_Init
                _ModbusSlave_Process
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Process                                  1     1      0    2212
               _ModbusRTU_Slave_Poll
 ---------------------------------------------------------------------------------
 (4) _ModbusRTU_Slave_Poll                                14    12      2    2210
                                             52 BANK0     14    12      2
                         _Get_millis
                     _ModbusSlaveF04
                   _Modbus_getRxBuff
                  _Modbus_sendTxBuff
                     _buildException
                    _validateRequest
 ---------------------------------------------------------------------------------
 (5) _validateRequest                                     17    17      0     393
                                             15 BANK0     17    17      0
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (5) _buildException                                       3     3      0      45
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _Modbus_getRxBuff                                     8     8      0      48
                                              2 BANK0      8     8      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _ModbusSlaveF04                                      23    21      2     847
                                             30 BANK0     22    20      2
                  _Modbus_sendTxBuff
 ---------------------------------------------------------------------------------
 (5) _Modbus_sendTxBuff                                   15    15      0     435
                                             15 BANK0     15    15      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                         _Get_millis
                     _Modbus_calcCRC
 ---------------------------------------------------------------------------------
 (6) _Modbus_calcCRC                                      15    13      2     277
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (4) _Get_millis                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ModbusSlave_Init                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Task_Indicator                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _App_Init                                             0     0      0     530
                        _Device_Init
                    _TMR1_StartTimer
                      _Tick_Init_SES
 ---------------------------------------------------------------------------------
 (2) _Tick_Init_SES                                        0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Device_Init                                          4     4      0     356
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   40698
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     164
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                        _rtcc_handle *
 ---------------------------------------------------------------------------------
 (11) _rtcc_handle                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsr                                        0     0      0   40534
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterFsm                                       2     2      0   40534
                                             10 COMMON     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                   _I2C_MasterIsNack
               i1_I2C_MasterClearIrq
 ---------------------------------------------------------------------------------
 (11) i1_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX_EMPTY                                     2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_TX                                           2     2      0   10139
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX                                           2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_ADDRESS_NACK                                 2     2      0   10117
                                              8 COMMON     2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) _wr2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _wr1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rdBlkRegCompleteHandler                             1     0      1    1988
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd2RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (12) _rd1RegCompleteHandler                               1     0      1    1966
                                              7 COMMON     1     0      1
        _I2C_SetDataCompleteCallback
                    i1_I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (13) i1_I2C_SetBuffer                                     3     1      2     174
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (13) _I2C_SetDataCompleteCallback                         3     0      3    1770
                                              4 COMMON     3     0      3
                  i1_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (14) i1_I2C_SetCallback                                   4     1      3     206
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) _I2C_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _App_Init
     _Device_Init
     _TMR1_StartTimer
     _Tick_Init_SES
       _TMR1_SetInterruptHandler
   _App_Process
     _Task_Indicator
     _Task_MB
       _ModbusSlave_Init
       _ModbusSlave_Process
         _ModbusRTU_Slave_Poll
           _Get_millis
           _ModbusSlaveF04
             _Modbus_sendTxBuff
               _EUSART_Write
               _EUSART_is_tx_done
               _Get_millis
               _Modbus_calcCRC
           _Modbus_getRxBuff
             _EUSART_Read
           _Modbus_sendTxBuff
           _buildException
           _validateRequest
             _Modbus_calcCRC
     _Task_Sensor
       _Get_millis
       _ReadData
         _Get_millis
         _I2C_ReadNBytes
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterRead
             _I2C_MasterOperation
               _I2C_MasterStart
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterEnableIrq
             _I2C_MasterOpen
             _I2C_SetInterruptHandler
           _I2C_SetBuffer
         _I2C_WriteNBytes
           _I2C_Close
           _I2C_MasterWrite
             _I2C_MasterOperation
           _I2C_Open
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___fltol
         ___xxtofl
       _llabs
         _Get_millis (ARG)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
             i1_I2C_SetCallback
           i1_I2C_SetBuffer
         _rd2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _rdBlkRegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr1RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
         _wr2RegCompleteHandler *
           _I2C_SetDataCompleteCallback
           i1_I2C_SetBuffer
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         NULL(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterIsNack *
       i1_I2C_MasterClearIrq *
   _TMR1_ISR *
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _rtcc_handle *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      FB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     49      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     37      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               48      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      FB      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Apr 28 10:17:13 2023

                            _Modbus_sendTxBuff 0D19                           ?_ModbusSlave_Process 0070  
                ?_EUSART_SetRxInterruptHandler 0020                         ??_I2C_DO_SEND_ADR_READ 0070  
                                 ___fldiv@aexp 00AC                                   ___fldiv@bexp 00AB  
                                 ___fldiv@sign 00A4                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                             ?_Modbus_sendTxBuff 0070  
                                           l71 1697                                             l80 152E  
                      buildException@exception 0021                                  _ReadData$2361 00C3  
                                _ReadData$2362 00C7                          ??_I2C_DO_SEND_RESTART 0070  
                          __Umul8_16@word_mpld 0026                                            l303 161F  
                                          l135 14EF                                            l304 1629  
                                          l402 12D6                                            l307 1641  
                                          l163 143C                                            l342 12F1  
                                          l166 12BC                                            l351 130C  
                                          l345 12FA                                            l169 126C  
                                          l522 14B8                                            l354 1303  
                                          l514 1315                                            l531 12A3  
                                          l348 12E8                                            l541 1451  
                                          l381 14D3                                            l518 17FF  
                                          l534 12A8                                            l550 134A  
                                          l279 1776                                            l384 1241  
                                          l288 1268                                            l704 124D  
                                          l528 150D                                            l298 1617  
                                          l731 124A                                            l564 0828  
                                          l725 1250                                            l734 1244  
                                          l911 0C6D                                            l559 12DF  
                                          l808 02DE                                            l817 0BC9  
                                          l914 166C                                            l923 096F  
                                          l683 1388                                            l844 16C6  
                                          l846 16C8                                            l686 1247  
                                          l855 16D8                                            l927 0B32  
                                          l935 07ED                                            l872 1329  
                                          l865 0A3C                                            l857 16DA  
                                          l945 0D71                                            l859 16F3  
                                          l875 1333                                            l972 089A  
                                          l980 149D                                            l869 0A3C  
                                          l957 0DDB                                            l975 089D  
                                          l959 0DFB                                            l968 09CE  
                                          l977 08BE                                            l987 1429  
                                          l998 07FF                            __end_of_App_Process 1334  
                              _timer1ReloadVal 00DF                         ??_EUSART_RxDataHandler 0070  
                          ??_Modbus_sendTxBuff 002F                 ?_EUSART_SetFramingErrorHandler 0020  
                                          wreg 0009                                   ___flmul@aexp 0040  
                                 ___flmul@bexp 0041                            __end_of_Device_Init 0A3D  
                 ??_I2C_SetAddressNackCallback 0028                                   ___flmul@sign 003B  
                                 ___flmul@temp 0046                                   ___flmul@prod 0042  
                                 ?_EUSART_Read 0070                       ??_I2C_CallbackReturnStop 0078  
                                 _I2C_DO_RESET 129A                                   ___fltol@exp1 0029  
                              ?_buildException 0070                                           l1004 1418  
                      ??_rd2RegCompleteHandler 0078                                           l1511 0E5F  
                                         l1513 0FFF                                           l1601 0CCA  
                                         l4011 07C5                                           l4003 07AF  
                                         l1355 0A98                                           l1532 0FC7  
                                         l1348 0AAD                                           l4021 07E4  
                                         l4013 07CC                                           l4005 07B4  
                                         l1461 05CB                                           l4101 0565  
                                         l1533 0FE5                                           l1358 0AAD  
                                         l1614 086F                                           l4007 07B9  
                                         l4111 057E                                           l1455 0570  
                                         l4103 0566                                           l1535 0FF4  
                                         l1527 0F74                                           l1551 0519  
                                         l1480 069F                                           l1608 0CE4  
                                         l4009 07BE                                           l4017 07CE  
                                         l4121 0588                                           l4113 0580  
                                         l4105 0568                                           l4041 0A6C  
                                         l4033 0A50                                           l1609 0CF0  
                                         l1617 086F                                           l1570 1565  
                                         l4019 07DE                                           l4211 06A6  
                                         l4203 0693                                           l1459 05ED  
                                         l4131 0592                                           l4123 058A  
                                         l4115 0582                                           l4107 0576  
                                         l1563 050D                                           l4043 0A70  
                                         l4051 0A88                                           l4035 0A61  
                                         l4027 0A3D                                           l1476 067D  
                                         l1468 0721                                           l1572 1575  
                                         l3501 098B                                           l4221 06B4  
                                         l4213 06A8                                           l4205 069A  
                                         l4133 0594                                           l4125 058C  
                                         l4117 0584                                           l4109 057A  
                                         l4141 059C                                           l4301 0E79  
                                         l1557 0499                                           l4061 0AA2  
                                         l4037 0A62                                           l4029 0A47  
                                         l1486 06C1                                           l3511 0998  
                                         l4231 06CB                                           l4223 06B8  
                                         l4215 06AD                                           l4207 069E  
                                         l4151 05D5                                           l4143 059D  
                                         l4135 0596                                           l4127 058E  
                                         l4119 0586                                           l4071 0525  
                                         l4063 051A                                           l4311 0E92  
                                         l4039 0A6A                                           l5041 1323  
                                         l3513 099E                                           l3521 09B0  
                                         l3601 0D26                                           l1497 071A  
                                         l4241 0702                                           l4233 06D3  
                                         l1489 06F8                                           l4225 06BE  
                                         l4209 06A3                                           l4217 06AF  
                                         l4161 05F1                                           l4153 05D9  
                                         l4145 05B4                                           l4137 0598  
                                         l4129 0590                                           l4073 052A  
                                         l4081 053A                                           l4065 051E  
                                         l4321 0ECC                                           l4313 0EA8  
                                         l4305 0E82                                           l4401 02E5  
                                         l4057 0A8F                                           l4049 0A78  
                                         l1498 0721                                           l5043 1326  
                                         l3523 09B6                                           l3515 09A2  
                                         l3507 098D                                           l3611 0D73  
                                         l3603 0D3F                                           l3531 15EF  
                                         l4251 0716                                           l4243 070A  
                                         l4235 06D7                                           l4171 060B  
                                         l4219 06B3                                           l4163 05F6  
                                         l4155 05DA                                           l4147 05CF  
                                         l4139 059A                                           l4091 054E  
                                         l4083 0542                                           l4075 052F  
                                         l4067 0520                                           l4323 0ED1  
                                         l4331 0EEF                                           l4315 0EB8  
                                         l4307 0E88                                           l4411 02FC  
                                         l4403 02E9                                           l4059 0A9D  
                                         l1595 0C91                                           l3525 09C1  
                                         l3517 09A6                                           l3509 0993  
                                         l3613 0D77                                           l3605 0D47  
                                         l3541 160D                                           l3533 15EF  
                                         l3701 14AF                                           l4253 071C  
                                         l4245 070F                                           l4237 06F4  
                                         l4229 06C6                                           l4181 061A  
                                         l4173 060F                                           l4157 05E2  
                                         l4149 05D3                                           l4093 0552  
                                         l4085 0545                                           l4077 0537  
                                         l4069 0524                                           l4341 0F26  
                                         l4333 0F09                                           l4325 0EE0  
                                         l4317 0EC1                                           l4261 0E05  
                                         l4501 0496                                           l4421 0311  
                                         l4413 02FE                                           l4405 02EA  
                                         l1597 0D18                                           l5045 132A  
                                         l5039 1320                                           l3471 161A  
                                         l3527 09CA                                           l3519 09AC  
                                         l3631 0DE2                                           l3623 0DA7  
                                         l3615 0D86                                           l3607 0D5E  
                                         l3543 160E                                           l3535 15F5  
                                         l3703 14B2                                           l4255 0720  
                                         l4247 0710                                           l4239 06FD  
                                         l4191 0667                                           l4183 0622  
                                         l4175 0613                                           l4167 05FF  
                                         l4159 05E6                                           l4095 0553  
                                         l4087 054B                                           l4079 0538  
                                         l4351 0F3E                                           l4343 0F2E  
                                         l4335 0F0A                                           l4327 0EE5  
                                         l4319 0ECA                                           l4271 0E20  
                                         l4263 0E0A                                           l4511 04AF  
                                         l4431 0326                                           l4423 0312  
                                         l4415 0306                                           l4407 02EF  
                                         l5047 132D                                           l4601 12CE  
                                         l3481 163C                                           l3473 1624  
                                         l3465 1265                                           l3633 0DF2  
                                         l3625 0DAF                                           l3617 0D8B  
                                         l3609 0D66                                           l3721 0BDA  
                                         l3545 1610                                           l3537 1603  
                                         l3801 0B02                                           l3705 14B6  
                                         l3561 1382                                           l3553 12D7  
                                         l3641 17BC                                           l4249 0714  
                                         l4193 066C                                           l4177 0615  
                                         l4169 0607                                           l4185 0627  
                                         l4097 0558                                           l4089 054C  
                                         l4361 0F55                                           l4353 0F46  
                                         l4345 0F30                                           l4337 0F1A  
                                         l4329 0EE7                                           l4281 0E37  
                                         l4273 0E22                                           l4265 0E0C  
                                         l4257 0DFC                                           l4521 04F0  
                                         l4513 04C7                                           l4505 049E  
                                         l4441 0341                                           l4433 032E  
                                         l4425 0317                                           l4417 030B  
                                         l4409 02F4                                           l5049 1330  
                                         l3483 163D                                           l3475 162A  
                                         l3627 0DBC                                           l3619 0D9C  
                                         l3731 0BF6                                           l3723 0BDE  
                                         l3547 1613                                           l3539 1607  
                                         l3811 0B26                                           l3803 0B14  
                                         l3555 1242                                           l3571 1248  
                                         l3563 1384                                           l3651 17D0  
                                         l3643 17C3                                           l4187 063D  
                                         l4195 0675                                           l4179 0619  
                                         l4099 055D                                           l4371 0F88  
                                         l4363 0F70                                           l4347 0F37  
                                         l4355 0F4A                                           l4339 0F20  
                                         l4291 0E52                                           l4283 0E3C  
                                         l4267 0E12                                           l4275 0E24  
                                         l4259 0E01                                           l4531 050B  
                                         l4523 04F9                                           l4507 04A3  
                                         l4515 04CB                                           l4451 0396  
                                         l4443 034C                                           l4435 0333  
                                         l4427 031C                                           l4419 030D  
                                         l5325 16E8                                           l3477 1632  
                                         l3485 163F                                           l3469 161A  
                                         l3493 0972                                           l3629 0DDD  
                                         l3741 0C6A                                           l3733 0BFC  
                                         l3725 0BE5                                           l3549 1615  
                                         l3813 0B2F                                           l3805 0B17  
                                         l3573 1245                                           l3581 14FC  
                                         l3709 129F                                           l3565 1387  
                                         l3557 137C                                           l3661 17E4  
                                         l3653 17D5                                           l3645 17C7  
                                         l4197 0685                                           l4189 0661  
                                         l4381 0FD7                                           l4373 0F8C  
                                         l4357 0F4F                                           l4349 0F3C  
                                         l4293 0E54                                           l4285 0E3E  
                                         l4277 0E2D                                           l4269 0E17  
                                         l3821 1554                                           l4533 0511  
                                         l4525 04FB                                           l4517 04D8  
                                         l4509 04AB                                           l4461 03C9  
                                         l4453 03A3                                           l4445 0359  
                                         l4437 0338                                           l4429 0324  
                                         l4541 0C79                                           l3479 1636  
                                         l3495 0976                                           l3743 0C6A  
                                         l3735 0C01                                           l3727 0BEC  
                                         l3719 0BCC                                           l3751 1660  
                                         l3807 0B1B                                           l3487 124B  
                                         l3583 1501                                           l3575 14F2  
                                         l3559 1381                                           l3671 17F8  
                                         l3663 17E5                                           l3655 17D6  
                                         l3647 17C8                                           l4199 068A  
                                         l4391 0FEF                                           l4383 0FDA  
                                         l4375 0FA4                                           l4367 0F79  
                                         l4359 0F51                                           l4287 0E44  
                                         l4295 0E56                                           l4279 0E33  
                                         l3831 1571                                           l3823 1556  
                                         l4527 0506                                           l4519 04E2  
                                         l4471 0406                                           l4463 03D4  
                                         l4455 03B0                                           l4447 0371  
                                         l4551 0CA5                                           l4543 0C89  
                                         l5191 13AC                                           l3489 1408  
                                         l3497 0979                                           l3737 0C55  
                                         l3729 0BEE                                           l3761 091C  
                                         l3753 1666                                           l3817 0B31  
                                         l3809 0B21                                           l3585 1505  
                                         l3577 14F9                                           l3569 124E  
                                         l3665 17EA                                           l3657 17DB  
                                         l3649 17C9                                           l3673 17FD  
                                         l3681 1444                                           l3593 0802  
                                         l3841 166F                                           l4385 0FE3  
                                         l4369 0F7F                                           l4377 0FA9  
                                         l4297 0E67                                           l4289 0E49  
                                         l3825 155D                                           l4529 050A  
                                         l4481 0456                                           l4473 0411  
                                         l4465 03DB                                           l4457 03B7  
                                         l4449 037E                                           l4561 0CD1  
                                         l4553 0CB0                                           l4545 0C99  
                                         l4537 0C70                                           l4801 14DD  
                                         l5193 13AD                                           l3499 098B  
                                         l3739 0C59                                           l3771 0951  
                                         l3763 0938                                           l3755 0914  
                                         l3747 1644                                           l3691 149E  
                                         l3587 1508                                           l3579 14FA  
                                         l3667 17F2                                           l3659 17DF  
                                         l3683 1450                                           l3595 0808  
                                         l3851 168F                                           l3843 166F  
                                         l4387 0FE8                                           l4379 0FB9  
                                         l4299 0E73                                           l3827 1561  
                                         l4491 0475                                           l4483 0462  
                                         l4475 0423                                           l4467 03ED  
                                         l4459 03C2                                           l4571 0D06  
                                         l4563 0CDA                                           l4555 0CB7  
                                         l4539 0C75                                           l4811 14E8  
                                         l4803 14DF                                           l5187 13A5  
                                         l3781 096A                                           l3773 095A  
                                         l3765 0940                                           l3749 1657  
                                         l3693 14A6                                           l3589 150B  
                                         l3669 17F5                                           l3853 1510  
                                         l3597 0819                                           l3685 133F  
                                         l3845 1679                                           l4389 0FEC  
                                         l3829 156C                                           l4485 0469  
                                         l4493 0479                                           l4477 0438  
                                         l4469 03F4                                           l4397 02DF  
                                         l4573 0D0B                                           l4565 0CDE  
                                         l4557 0CBB                                           l4549 0CA2  
                                         l4581 12FB                                           l4821 130F  
                                         l4813 14EA                                           l4805 14E1  
                                         l5189 13AB                                           l3599 0D19  
                                         l3775 095F                                           l3767 094A  
                                         l3759 0916                                           l3791 0AFD  
                                         l3695 14A7                                           l3679 143F  
                                         l3855 1510                                           l3687 12A4  
                                         l3847 1682                                           l4495 047D  
                                         l4487 046D                                           l4479 044F  
                                         l4399 02E3                                           l4575 0D0F  
                                         l4567 0CE8                                           l4559 0CC3  
                                         l4583 1304                                           l4823 1311  
                                         l4831 12BA                                           l4815 14EB  
                                         l4807 14E3                                           l3777 0968  
                                         l3769 094C                                           l3785 0AAE  
                                         l3961 072C                                           l3697 14A9  
                                         l3857 151A                                           l3849 168C  
                                         l4497 047E                                           l4489 046E  
                                         l4577 0D10                                           l4569 0CF2  
                                         l4921 0BAC                                           l4585 12E9  
                                         l4825 1314                                           l4817 14ED  
                                         l4809 14E6                                           l4841 14BF  
                                         l4833 1269                                           l4931 16C5  
                                         l3795 0AFF                                           l3787 0AE0  
                                         l3971 073F                                           l3963 072E  
                                         l3699 14AC                                           l3859 1526  
                                         l4499 0482                                           l4763 0096  
                                         l4771 0829                                           l4923 0BAF  
                                         l4587 12F2                                           l4851 1735  
                                         l4819 130D                                           l4827 12B6  
                                         l4843 14C0                                           l4835 14B9  
                                         l4933 16CA                                           l4781 089F  
                                         l3789 0AF4                                           l3973 0745  
                                         l3965 0733                                           l4765 00A1  
                                         l4773 0847                                           l4925 0BB2  
                                         l4917 0B33                                           l4589 12E0  
                                         l4861 174E                                           l4853 1737  
                                         l4829 12B9                                           l4845 14C7  
                                         l4837 14BB                                           l4951 09EA  
                                         l4935 16D6                                           l4775 0872  
                                         l3991 0796                                           l3959 0724  
                                         l4783 1484                                           l4767 00B4  
                                         l4927 0BB9                                           l4919 0B99  
                                         l4871 1763                                           l4863 1750  
                                         l4855 173F                                           l4847 14C8  
                                         l4839 14BD                                           l4961 0A01  
                                         l4953 09EF                                           l4945 09CF  
                                         l4777 087E                                           l3993 079C  
                                         l3985 0786                                           l3969 0735  
                                         l4785 1484                                           l4769 00DE  
                                         l4929 0BBF                                           l4881 1774  
                                         l4873 176F                                           l4865 1752  
                                         l4857 1749                                           l4849 14D0  
                                         l4971 0A18                                           l4963 0A06  
                                         l4955 09F4                                           l4947 09E0  
                                         l4939 16DC                                           l4779 0886  
                                         l3987 078B                                           l3979 0756  
                                         l4787 148C                                           l4875 1771  
                                         l4867 1753                                           l4859 174C  
                                         l4795 14D4                                           l4981 0A2F  
                                         l4973 0A1D                                           l4965 0A0B  
                                         l4949 09E5                                           l4957 09F7  
                                         l3997 079F                                           l3989 0790  
                                         l4789 1494                                           l4877 1772  
                                         l4869 175B                                           l4797 14D8  
                                         l4983 0A34                                           l4975 0A22  
                                         l4959 09FC                                           l4967 0A0E  
                                         l4887 123F                                           l4991 1419  
                                         l4879 1773                                           l4799 14DA  
                                         l4985 0A39                                           l4969 0A13  
                                         l4977 0A25                                           l4993 141E  
                                         l4979 0A2A                                           l4987 07EE  
                                         l4995 1423                                           l4989 07F7  
                                         l4997 1426                                           l4999 142A  
                                         u3000 05ED                                           u3001 05EC  
                                         u3010 05F1                                           u3011 05F0  
                                         u2300 161F                                           u3100 068A  
                                         u3020 05F6                                           u2301 161E  
                                         u3101 0689                                           u3021 05F5  
                                         _LATA 010C                                           u2310 1624  
                                         u3030 060B                                           _LATB 010D  
                                         u2311 1623                                           u3031 060A  
                                         _LATC 010E                                           u2320 163C  
                                         u2400 14F9                                           u3200 06D7  
                                         u3120 069E                                           u3040 060F  
                                         u2321 163B                                           u2401 14F8  
                                         u3201 06D6                                           u3121 069D  
                                         u3041 060E                                           _LATE 0110  
                                         u2410 1501                                           u3210 06E5  
                                         u3130 06A3                                           u3050 0619  
                                         u4010 00DE                                           u2411 1500  
                                         u3131 06A2                                           u3115 0694  
                                         u3051 0618                                           u4011 00DD  
                                         u2340 099E                                           u2500 1444  
                                         u2420 0808                                           u3220 06F4  
                                         u3140 06AD                                           u3300 0E17  
                                         u4020 0847                                           u4100 0BB9  
                                         u2341 099D                                           u2501 1443  
                                         u2421 0807                                           u3221 06F3  
                                         u3141 06AC                                           u3301 0E16  
                                         u4021 0846                                           u4101 0BB8  
                                         u2350 09AC                                           u2430 0D71  
                                         u2510 14A6                                           u3230 06FD  
                                         u3150 06B3                                           u3070 063D  
                                         u3310 0E3C                                           u4110 0BBF  
                                         u2351 09AB                                           u2335 0994  
                                         u2431 0D70                                           u2511 14A5  
                                         u3231 06FC                                           u3215 06E1  
                                         u3151 06B2                                           u3071 063C  
                                         u3311 0E3B                                           u4111 0BBE  
                                         u4200 0A06                                           u4120 16D4  
                                         u4040 089A                                           u2360 09B6  
                                         u2440 0D9C                                           u2520 0C6A  
                                         u3240 0702                                           u3160 06B8  
                                         u3080 066C                                           u3320 0E44  
                                         u2600 1561                                           u4201 0A05  
                                         u4121 16D1                                           u4041 0899  
                                         u2361 09B5                                           u2441 0D9B  
                                         u2521 0C69                                           u3241 0701  
                                         u3161 06B7                                           u3081 066B  
                                         u3073 0639                                           u3065 061C  
                                         u3321 0E43                                           u2601 1560  
                                         u4210 0A0B                                           u2450 0DA7  
                                         u2370 15F5                                           u2530 094A  
                                         u3250 070F                                           u3170 06BE  
                                         u3090 0685                                           u3410 0F09  
                                         u3330 0E49                                           u4211 0A0A  
                                         u2451 0DA6                                           u2371 15F4  
                                         u2531 0949                                           u3251 070E  
                                         u3171 06BD                                           u3091 0684  
                                         u3411 0F08                                           u3331 0E48  
                                         u4220 0A13                                           u4140 09E5  
                                         u2460 0DAF                                           u2380 160D  
                                         u2540 0951                                           u2700 0785  
                                         u4300 141E                                           u3260 0714  
                                         u3180 06C5                                           u3500 0F78  
                                         u3420 0F26                                           u3340 0E67  
                                         u2620 1571                                           u4221 0A12  
                                         u4141 09E4                                           u2461 0DAE  
                                         u2445 0D98                                           u2525 0C66  
                                         u2381 160C                                           u2541 0950  
                                         u2701 0784                                           u4301 141D  
                                         u3261 0713                                           u3181 06C4  
                                         u3501 0F77                                           u3421 0F25  
                                         u3405 0EE8                                           u3341 0E66  
                                         u2621 1570                                           u4230 0A18  
                                         u4150 09EA                                           u4134 16D6  
                                         u2470 0DDB                                           u2550 095F  
                                         u2710 079C                                           u2390 1381  
                                         u3270 0720                                           u3190 06CB  
                                         u3510 0F7F                                           u3430 0F2E  
                                         u3350 0E88                                           u4231 0A17  
                                         u4151 09E9                                           u2471 0DDA  
                                         u2551 095E                                           u2711 079B  
                                         u2391 1380                                           u3271 071F  
                                         u3191 06CA                                           u3511 0F7E  
                                         u3431 0F2D                                           u3415 0F05  
                                         u3351 0E87                                           u2615 1566  
                                         u4240 0A1D                                           u4160 09EF  
                                         u2560 0AF4                                           u2720 07AE  
                                         u2640 1679                                           u3520 0F8C  
                                         u3360 0ED1                                           u3280 0E0A  
                                         u3600 0311                                           u2800 0A87  
                                         u4241 0A1C                                           u4161 09EE  
                                         u2561 0AF3                                           u2721 07AD  
                                         u2641 1678                                           u3521 0F8B  
                                         u3361 0ED0                                           u3281 0E09  
                                         u3601 0310                                           u2801 0A86  
                                         u4250 0A22                                           u4170 09F4  
                                         u2570 0B14                                           u2730 07B9  
                                         u2490 17C3                                           u2650 1697  
                                         u3530 0F9A                                           u3450 0F3C  
                                         u3290 0E12                                           u3610 0317  
                                         u2810 0A8E                                           u4090 0B99  
                                         u4251 0A21                                           u4171 09F3  
                                         u2571 0B13                                           u2731 07B8  
                                         u2491 17C2                                           u2651 1696  
                                         u3451 0F3B                                           u3291 0E11  
                                         u3611 0316                                           u2811 0A8D  
                                         u4091 0B98                                           u4260 0A2A  
                                         u4180 09FC                                           u2580 0B21  
                                         u2740 07BE                                           u2660 151A  
                                         u2900 0558                                           u3540 0FB9  
                                         u3620 031C                                           u4261 0A29  
                                         u4181 09FB                                           u2581 0B20  
                                         u2565 0AF0                                           u2741 07BD  
                                         u2661 1519                                           u2901 0557  
                                         u3541 0FB8                                           u3445 0F31  
                                         u3621 031B                                           u4270 0A2F  
                                         u4190 0A01                                           u2590 0B26  
                                         u2670 152E                                           u2910 055D  
                                         u3550 0FD7                                           u3470 0F4F  
                                         u3390 0EE5                                           u3710 046D  
                                         u3630 0333                                           u2830 0A9D  
                                         u2750 0A47                                           u4271 0A2E  
                                         u4191 0A00                                           u2591 0B25  
                                         u2671 152D                                           u2911 055C  
                                         u3551 0FD6                                           u3535 0F96  
                                         u3471 0F4E                                           u3391 0EE4  
                                         u3375 0ED2                                           u3711 046C  
                                         u3631 0332                                           u2831 0A9C  
                                         u2751 0A46                                           u4280 0A34  
                                         u2680 0733                                           u2920 0576  
                                         u3560 0FEC                                           u3480 0F55  
                                         u3800 04D8                                           u3640 0338  
                                         u2840 0AA2                                           u2760 0A5D  
                                         u4281 0A33                                           u2681 0732  
                                         u2921 0575                                           u3561 0FEB  
                                         u3545 0FB5                                           u3481 0F54  
                                         u3465 0F3F                                           u3385 0ED9  
                                         u3801 04D7                                           u3705 0463  
                                         u3641 0337                                           u2841 0AA1  
                                         u2825 0A90                                           u4290 0A39  
                                         u2690 073F                                           u2930 057A  
                                         u2850 0524                                           u3490 0F70  
                                         u3810 04F0                                           u3730 047D  
                                         u3570 02E9                                           u2770 0A70  
                                         u4291 0A38                                           u2691 073E  
                                         u2931 0579                                           u2851 0523  
                                         u3555 0FD3                                           u3491 0F6F  
                                         u3811 04EF                                           u3731 047C  
                                         u3571 02E8                                           u2771 0A6F  
                                         u2940 05B4                                           u2860 052A  
                                         u3820 050A                                           u3740 0482  
                                         u3580 02EF                                           u2780 0A77  
                                         u2941 05B3                                           u2861 0529  
                                         u3821 0509                                           u3805 04D4  
                                         u3741 0481                                           u3725 046F  
                                         u3581 02EE                                           u2781 0A76  
                                         u2765 0A59                                           u2950 05BE  
                                         u2870 052F                                           u3750 0496  
                                         u3670 042E                                           u3590 02F4  
                                         u3910 0CDE                                           u3830 0C75  
                                         u2951 05BC                                           u2871 052E  
                                         u3815 04EC                                           u3751 0495  
                                         u3655 03B1                                           u3591 02F3  
                                         u3911 0CDD                                           u3831 0C74  
                                         u2960 05BF                                           u2880 054B  
                                         u3760 049D                                           u3680 0445  
                                         u3920 0CE4                                           u3840 0C79  
                                         u2945 05B0                                           u2881 054A  
                                         u3761 049C                                           u3665 03DC  
                                         u3921 0CE3                                           u3905 0CD4  
                                         u3841 0C78                                           u2970 05CF  
                                         u2890 0552                                           u3770 04A3  
                                         u3930 0CE8                                           u3850 0C99  
                                         u2971 05CE                                           u2891 0551  
                                         u3771 04A2                                           u3675 042A  
                                         u2795 0A79                                           u3931 0CE7  
                                         u3851 0C98                                           u2980 05D9  
                                         u3780 04AF                                           u3940 0CFC  
                                         u2981 05D8                                           u3781 04AE  
                                         u3685 0441                                           u3790 04BD  
                                         u3950 0D0B                                           u3870 0CB6  
                                         u3695 0450                                           u3951 0D0A  
                                         u3871 0CB5                                           u3960 0D0F  
                                         u3961 0D0E                                           u3945 0CF8  
                                         u3865 0CAA                                           u3890 0CD0  
                                         u2995 05DC                                           u3795 04B9  
                                         u3891 0CCF                                           i1l92 13D4  
                                         u3885 0CC4                                           i1l95 13E5  
                                         i1l98 13F6                                           _WPUB 020D  
                                         _WPUE 0210                        ??_wr2RegCompleteHandler 0078  
                                         _main 13A5                       ?_I2C_CallbackReturnReset 0077  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                             __end_of_I2C_Open 1800                                           btemp 007E  
                                         start 0058                      __end_of_Modbus_sendTxBuff 0DFC  
                      _I2C_SetInterruptHandler 12D7                                ___fldiv@new_exp 00A5  
                              ?_Task_Indicator 0070                     ??_TMR1_SetInterruptHandler 0022  
                        ??_ModbusSlave_Process 0062                               ?_I2C_MasterClose 0070  
                              __end_of_Task_MB 142A                                _I2C_WriteNBytes 166D  
                                ?_EUSART_Write 0070                               ?_I2C_MasterStart 0070  
                                _I2C_DO_RX_ACK 128B                               ?_I2C_MasterWrite 0070  
                __end_of_OSCILLATOR_Initialize 12BD                                  ___fltol@sign1 0028  
                              __end_of___fladd 0722                                          ?_main 0070  
                              __end_of___fldiv 1000                                __end_of___flmul 051A  
                              __end_of___fltol 0AAE                                _TMR1_StartTimer 123F  
                                        _T1CON 0018                                          i1l101 13C3  
                                        i1l104 1469                                          i1l204 0056  
                                        i1l330 1483                                          i1l316 154F  
                                        i1l333 1229                                          i1l405 122A  
                                        i1l326 1734                                          i1l319 1551  
                                        i1l336 1258                                          i1l600 17B9  
                                        i1l193 001B                                          i1l339 1254  
                                        i1l611 12B5                                          i1l195 002C  
                                        i1l541 1396                                          i1l701 1235  
                                        i1l197 003D                                          i1l710 12AE  
                                        i1l198 0056                                          i1l199 0048  
                                        i1l544 133E                                          i1l392 1407  
                                        i1l713 1260                                          i1l617 16C4  
                                        i1l641 1285                                          i1l650 1294  
                                        i1l707 1232                                          i1l635 127B  
                                        i1l571 15C5                                          i1l395 13A4  
                                        i1l564 159D                                          i1l716 125C  
                                        i1l580 12C4                                          i1l644 128A  
                                        i1l653 1299                                          i1l670 122C  
                                        i1l574 1276                                          i1l638 1280  
                                        i1l662 15EE                                          i1l734 123E  
                                        i1l583 08F6                                          i1l647 128F  
                                        i1l567 1264                                          i1l399 137B  
                                        i1l656 129E                                          i1l673 0003  
                                        i1l737 123B                                          i1l577 12CD  
                                        i1l586 0913                                          i1l692 1271  
                                        i1l695 122F                                          i1l599 1793  
                                        i1l689 1238                                          _RCREG 0199  
                                        _RCSTA 019D                               ?_validateRequest 0070  
                                        _TMR1H 0017                                          _TMR1L 0016  
                            ??_I2C_DO_TX_EMPTY 0078                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          _TXREG 019A  
                                        _TXSTA 019E                                          _SW_Ad 0069  
                                   _Get_millis 1408                               __end_of_TMR1_ISR 13A5  
                            __end_of_I2C_DO_RX 17BA                              __end_of_I2C_DO_TX 0914  
                               _WDT_Initialize 1269                                          _llabs 0829  
                            __end_of_I2C_Close 14B9                 I2C_MasterOperation@returnValue 0021  
                      _I2C_MasterEnableRestart 122D                        __end_of_TMR1_Initialize 14D4  
                                        pclath 000A                               ?_I2C_SetCallback 0020  
                 I2C_SetAddressNackCallback@cb 0024                                          status 0003  
                                        wtemp0 007E                              ?_I2C_DO_SEND_STOP 0070  
                            ??i1_I2C_SetBuffer 0072                                _TMR1_WriteTimer 13F7  
                             __end_of_App_Init 132A                             ??_I2C_DO_SEND_STOP 0070  
                              __initialization 005A                                   __end_of_main 13B3  
                                  _App_Process 132A                      ?_I2C_DO_SEND_RESTART_READ 0070  
                             __end_of_ReadData 02DF                                 ??_EUSART_Write 0020  
                               ?_I2C_DO_RX_ACK 0070                    ?_INTERRUPT_InterruptManager 0070  
                 __end_of_ModbusRTU_Slave_Poll 07EE                 ??_EUSART_SetRxInterruptHandler 0022  
                                  _Device_Init 09CF                                         ??_main 0069  
                 __end_ofi1_I2C_MasterClearIrq 123F                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                         i1I2C_SetCallback@idx 0073                           i1I2C_SetCallback@ptr 0072  
                       __end_of_WDT_Initialize 126D                             ??_I2C_MasterSetIrq 0070  
                                ??_Task_Sensor 00CB      __end_of_EUSART_DefaultFramingErrorHandler 122A  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 1229                     _EUSART_OverrunErrorHandler 0165  
                                       ?_llabs 0024                __end_of_I2C_CallbackReturnReset 0004  
                                       _APFCON 011D                  I2C_SetDataCompleteCallback@cb 0074  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1001 131F                        TMR1_WriteTimer@timerVal 0070  
                                       i1l5001 1397                                         i1l5011 1543  
                                       i1l5003 1399                                         i1l5021 1700  
                                       i1l5013 1549                                         i1l5005 152F  
                                       i1l5031 171F                                         i1l5023 1707  
                                       i1l5015 154A                                         i1l5007 1536  
                                       i1l5111 0006                                         i1l5033 172A  
                                       i1l5025 170D                                         i1l5017 16F4  
                                       i1l5009 153E                                         i1l5121 0025  
                                       i1l5113 000A                                         i1l5035 1731  
                                       i1l5027 1712                                         i1l5019 16FB  
                                       i1l5131 004D                                         i1l5123 0031  
                                       i1l5115 000F                                         i1l5029 1719  
                                       i1l5037 1261                                         i1l5133 0052  
                                       i1l5125 0036                                         i1l5117 0014  
                                       i1l5127 0042                                         i1l5119 0020  
                                       i1l3713 122D                                         i1l3715 1230  
                                       i1l3635 1577                                         i1l4603 1272  
                                       i1l4611 12C5                                         i1l5331 08E8  
                                       i1l3637 157D                                         i1l3717 1259  
                                       i1l5333 16B6                                         i1l4701 1698  
                                       i1l4605 1274                                         i1l4613 12C7  
                                       i1l4621 12BF                                         i1l3639 158E  
                                       i1l3903 126E                                         i1l4703 169B  
                                       i1l4607 1275                                         i1l4615 12CC  
                                       i1l4623 12C3                                         i1l4631 08C8  
                                       i1l3911 127C                                         i1l5327 15E6  
                                       i1l4713 16A4                                         i1l5329 17AB  
                                       i1l3905 1277                                         i1l3913 127F  
                                       i1l3835 138A                                         i1l3923 1236  
                                       i1l4707 169F                                         i1l4619 12BD  
                                       i1l4651 0910                                         i1l4635 08CC  
                                       i1l4627 08BF                                         i1l3907 127A  
                                       i1l3931 1298                                         i1l3677 1334  
                                       i1l3837 138F                                         i1l3861 13C4  
                                       i1l3941 1233                                         i1l4709 16A2  
                                       i1l4653 0912                                         i1l4645 08D4  
                                       i1l4661 1777                                         i1l3917 1286  
                                       i1l4733 129A                                         i1l4741 15C6  
                                       i1l4901 1405                                         i1l4591 146A  
                                       i1l3839 1395                                         i1l3863 13CC  
                                       i1l3871 13DD                                         i1l3951 122B  
                                       i1l3927 125D                                         i1l4719 16A8  
                                       i1l4647 08F8                                         i1l4639 08D0  
                                       i1l4663 177F                                         i1l3943 1281  
                                       i1l3919 1289                                         i1l4727 128B  
                                       i1l3935 1290                                         i1l4735 129C  
                                       i1l4743 15C8                                         i1l4911 15A6  
                                       i1l4903 136F                                         i1l4593 1473  
                                       i1l3865 13D3                                         i1l3873 13E4  
                                       i1l3881 13F5                                         i1l4649 0905  
                                       i1l4665 1784                                         i1l3945 1284  
                                       i1l4729 128E                                         i1l3937 1293  
                                       i1l3929 1295                                         i1l4737 129D  
                                       i1l4745 15CB                                         i1l4913 15AE  
                                       i1l4905 1376                                         i1l4595 1478  
                                       i1l3955 0002                                         i1l4675 1795  
                                       i1l4667 178E                                         i1l4755 15D3  
                                       i1l4915 15B1                                         i1l4907 159E  
                                       i1l4597 147E                                         i1l3885 13B3  
                                       i1l3869 13D5                                         i1l3877 13E6  
                                       i1l3893 1452                                         i1l3949 1239  
                                       i1l4685 179D                                         i1l4669 1791  
                                       i1l4693 12AF                                         i1l4749 15CF  
                                       i1l4909 15A1                                         i1l4599 147F  
                                       i1l3887 13BB                                         i1l3879 13EE  
                                       i1l3895 1468                                         i1l4679 1799  
                                       i1l4695 12B1                                         i1l4791 1316  
                                       i1l3889 13C2                                         i1l4697 12B4  
                                       i1l4793 123C                                         i1l4883 1255  
                                       i1l3899 12A9                                         i1l4891 13FC  
                                       i1l4885 1251                                         i1l4893 13FD  
                                       i1l4895 13FF                                         i1l4897 1401  
                                       i1l4889 13F7                                         i1l4899 1403  
                                       u400_20 178E                                         u400_21 178D  
                                       u405_20 13FC                                         u405_21 13FB  
                                       u406_20 1376                                         u406_21 1375  
                                       u431_20 1536                                         u263_20 138F  
                                       u407_20 15A6                                         u431_21 1535  
                                       u263_21 138E                                         u407_21 15A5  
                                       u432_20 1549                                         u248_20 157D  
                                       u408_20 15AE                                         u432_21 1548  
                                       u248_21 157C                                         u408_21 15AD  
                                       u433_20 1700                                         u433_21 16FF  
                                       u434_20 1712                                         u450_20 0025  
                                       u434_21 1711                                         u450_21 0024  
                                       u435_20 172A                                         u451_20 0031  
                                       u435_21 1729                                         u451_21 0030  
                                       u452_20 0036                                         u452_21 0035  
                                       u453_20 0042                                         u453_21 0041  
                                       u454_20 0047                                         u446_20 000A  
                                       u454_21 0046                                         u446_21 0009  
                                       u455_20 004D                                         u447_20 000F  
                                       u455_21 004C                                         u447_21 000E  
                                       u456_20 0052                                         u448_20 0014  
                                       u456_21 0051                                         u448_21 0013  
                                       u449_20 0020                                         u449_21 001F  
                                       _OSCCON 0099                                         u397_20 147E  
                                       u397_21 147D                                         u398_20 08C7  
                                       u398_21 08C6                                         u399_20 0910  
                                       u399_21 090F                                         u403lld 086E  
                    ??_I2C_SetInterruptHandler 0022                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       _SSPADD 0212                                         _SSPBUF 0211  
                             __end_of___xxtofl 0D19                            _I2C_MasterEnableIrq 124E  
                          _I2C_MasterGetRxData 1236                        __end_of_I2C_WriteNBytes 1698  
                                    ??_Task_MB 0062           __end_of_TMR1_DefaultInterruptHandler 122B  
                 _TMR1_DefaultInterruptHandler 122A                        __end_of_TMR1_StartTimer 1242  
                                    ??___fladd 0050                                      ??___fldiv 0064  
                                _I2C_MasterFsm 159E                                  _I2C_MasterIsr 1261  
                                    ??___flmul 0036                                      ??___fltol 0024  
                          _EUSART_Transmit_ISR 152F                              I2C_SetCallback@cb 0020  
                                _I2C_SetBuffer 143D                   __end_of_I2C_MasterDisableIrq 124B  
                                       llabs@a 0024                           ?_I2C_MasterEnableIrq 0070  
                          _I2C_DO_ADDRESS_NACK 15C6                           ?_I2C_MasterGetRxData 0070  
                                    ?_I2C_Open 0070             __end_of_I2C_SetAddressNackCallback 134B  
                   _I2C_SetAddressNackCallback 133F                                    ?_Get_millis 0020  
                                 ?_rtcc_handle 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070        I2C_SetInterruptHandler@InterruptHandler 0020  
     TMR1_SetInterruptHandler@InterruptHandler 0020                        __end_of_TMR1_WriteTimer 1408  
                         ?_EUSART_Transmit_ISR 0070                          __end_of_TMR1_CallBack 137C  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 142A  
                                 ___xxtofl@val 0020                        __end_of__initialization 0092  
                          _I2C_MasterOperation 14F0                            __end_of_Task_Sensor 0BCA  
                     validateRequest@u16MsgCRC 003C                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                                     ___fltol@f1 0020  
         __end_of_EUSART_SetTxInterruptHandler 130D                   _EUSART_SetTxInterruptHandler 1304  
                      _rdBlkRegCompleteHandler 1452                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                 ?_I2C_MasterIsr 0070  
                              ??_I2C_DO_RX_ACK 0070                                   __pidataBANK1 1363  
                       _I2C_CallbackReturnStop 122B                            ??_SYSTEM_Initialize 0022  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                __end_of_llabs 0870                           __end_of_fctsupported 1828  
                               ?_I2C_SetBuffer 0020                  __end_of_I2C_DO_SEND_ADR_WRITE 12C5  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                           ?_I2C_MasterOperation 0070  
                        ??_I2C_MasterEnableIrq 0020                          ??_I2C_MasterGetRxData 0070  
                               _OPTION_REGbits 0095                               ??_buildException 0020  
                        I2C_ReadNBytes@address 0027                                     ??_I2C_Open 0022  
                         _eusartRxStatusBuffer 013D                                      ?_App_Init 0070  
                   __end_of_I2C_MasterClearIrq 1245                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_llabs 002C                      __end_of_SYSTEM_Initialize 143D  
                        ??_EUSART_Transmit_ISR 0070                              _I2C_MasterSendAck 125D  
                                   __pbssBANK0 0069                                     __pbssBANK1 00D7  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 1642  
                                ??_I2C_DO_IDLE 0070                                      ?_ReadData 0070  
                                ??_I2C_DO_RCEN 0070                               ??_Task_Indicator 0020  
                __end_of_rd2RegCompleteHandler 13E6                   __end_of_I2C_MasterSendTxData 1272  
                           ?_I2C_MasterSendAck 0070                              _I2C_MasterStartRx 1233  
                         _ModbusRTU_Slave_Poll 0722                          ??_I2C_DO_ADDRESS_NACK 0078  
                __end_of_wr2RegCompleteHandler 13C4                           Task_MB@f_Modbus_Init 007C  
                          _I2C_DO_RX_NACK_STOP 1290                           i1_I2C_MasterClearIrq 123C  
                        _rd1RegCompleteHandler 13C4                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 125D                              __end_of__Umul8_16 1576  
                             ?_I2C_WriteNBytes 0028                         I2C_WriteNBytes@address 002B  
                        _wr1RegCompleteHandler 13E6                       ModbusRTU_Slave_Poll@size 0054  
                                   __pmaintext 13A5                            ??_I2C_MasterSendAck 0070  
                     rd1RegCompleteHandler@ptr 0077                                  ReadData@aData 00B5  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 016B  
                  __end_of_I2C_DO_SEND_RESTART 1286                                _I2C_DO_TX_EMPTY 1698  
                          I2C_SetBuffer@buffer 0022                               ?_TMR1_StartTimer 0070  
                                   ??_TMR1_ISR 0072                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0070                                  ReadData@ctemp 00BB  
                                      _BAUDCON 019F                   ??_EUSART_DefaultErrorHandler 0071  
                        ??_I2C_MasterOperation 0020                 I2C_SetDataCompleteCallback@ptr 0076  
                     ??_I2C_DO_RX_NACK_RESTART 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 1281  
                         ?_I2C_DO_RX_NACK_STOP 0070                                  _eusartRxCount 006A  
                                    ?___xxtofl 0020                                     ??_App_Init 0024  
                              i1_I2C_SetBuffer 1389                      __end_of_I2C_MasterSendAck 1261  
                                      _OSCTUNE 0098                               _ModbusSlave_Init 0870  
                                  _Task_Sensor 0B33                       ??_EUSART_SetErrorHandler 0022  
                                      _SSPCON1 0215                                        _SSPCON2 0216  
                                      _SSPSTAT 0214                     validateRequest@isSupported 003E  
                             ?_TMR1_WriteTimer 0070                      __end_of_I2C_MasterStartRx 1236  
                         I2C_Close@returnValue 0020                   ?_I2C_SetDataCompleteCallback 0074  
                                    _I2C_DO_RX 1777                                      _I2C_DO_TX 08BF  
                              ReadData@valTime 0159               __end_of_I2C_DO_SEND_RESTART_READ 127C  
                                   ??_ReadData 00AD                          ?_ModbusRTU_Slave_Poll 0054  
                  __end_of_ModbusSlave_Process 149E                                      _I2C_Close 149E  
                    ??_rdBlkRegCompleteHandler 0078                          ?i1_I2C_MasterClearIrq 0070  
                         _I2C_MasterDisableIrq 1248                                ??_I2C_MasterFsm 007A  
                              ??_I2C_MasterIsr 007C                                        _Task_MB 1419  
                               _I2C_ReadNBytes 150E                            __end_of_I2C_DO_IDLE 1277  
                          __end_of_I2C_DO_RCEN 12B6                                        ___fladd 051A  
                                 ?_App_Process 0070                                        ___fldiv 0DFC  
                                      ___flmul 02DF                                        ___fltol 0A3D  
                              ??_I2C_SetBuffer 0022                        I2C_SetBuffer@bufferSize 0020  
                           I2C_ReadNBytes@data 0024                                 _I2C_MasterRead 129F  
                               _I2C_MasterOpen 137C                                 _I2C_MasterStop 1230  
                               _I2C_Initialize 130D                                   ?_Device_Init 0070  
                                      __ptext1 142A                                        __ptext2 1269  
                                      __ptext3 14B9                                        __ptext4 14D4  
                                      __ptext5 12B6                                        __ptext6 130D  
                                      __ptext7 1735                                        __ptext8 1304  
                                      __ptext9 12FB                          ??_I2C_DO_RX_NACK_STOP 0070  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 12B6                                     ??___xxtofl 0024  
                           I2C_SetCallback@idx 0023                       ??_PIN_MANAGER_Initialize 0020  
                I2C_CallbackReturnReset@funPtr 0077                      ?_TMR1_SetInterruptHandler 0020  
                           I2C_SetCallback@ptr 0022                       wr1RegCompleteHandler@ptr 0077  
                   _SHT30_CMD_MEASURE_H_Enable 00EE                                ModbusSlaveF04@i 0052  
                    i1I2C_SetBuffer@bufferSize 0070                                        clrloop0 134C  
                   _SHT30_CMD_MEASURE_L_Enable 00EA                           end_of_initialization 0092  
                       Modbus_sendTxBuff@index 0038                     _SHT30_CMD_MEASURE_M_Enable 00EC  
                                   ?_I2C_DO_RX 0070                                     ?_I2C_DO_TX 0070  
        __end_of_EUSART_SetOverrunErrorHandler 12FB                  _EUSART_SetOverrunErrorHandler 12F2  
                                      init_ram 1357                               _Modbus_getRxBuff 0914  
                                   ?_I2C_Close 0070                         ?_rd1RegCompleteHandler 0077  
                            i1_I2C_SetCallback 1576                                        initloop 1358  
                      __end_of_I2C_DO_TX_EMPTY 16C5                          ?_I2C_MasterDisableIrq 0070  
                       __end_of_I2C_ReadNBytes 152F                              _EUSART_Initialize 1735  
                  _SHT30_CMD_MEASURE_H_Disable 00E8                         ?_wr1RegCompleteHandler 0077  
                           ?i1_I2C_SetCallback 0070                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                  _Tick_Init_SES 07EE  
                       __end_of_I2C_MasterRead 12A4                         __end_of_I2C_MasterOpen 1389  
                       __end_of_I2C_MasterStop 1233                         __end_of_I2C_Initialize 1316  
                  _SHT30_CMD_MEASURE_L_Disable 00E4                            ??i1_I2C_SetCallback 0073  
                  _SHT30_CMD_MEASURE_M_Disable 00E6                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                      ModbusSlaveF04@valueRegsno 0050  
                           ModbusSlaveF04@size 003E                 ??_EUSART_SetTxInterruptHandler 0022  
                      __end_ofi1_I2C_SetBuffer 1397                                      _PORTAbits 000C  
              __end_of_rdBlkRegCompleteHandler 146A                           _I2C_MasterSendTxData 126D  
                              Modbus_calcCRC@i 002B                                Modbus_calcCRC@j 002C  
                                  ___fladd@grs 005B                                   ??_Get_millis 0024  
                                ___xxtofl@sign 0028                    ?_I2C_SetAddressNackCallback 0024  
                                  ___fldiv@grs 00A7                                    _f_Indicator 00E3  
                                  ___fldiv@rem 00A0                         ??_ModbusRTU_Slave_Poll 0056  
                ModbusRTU_Slave_Poll@u8Current 005F                      __end_ofi1_I2C_SetCallback 159E  
                                 _fctsupported 1820                         ??i1_I2C_MasterClearIrq 0070  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 1777  
                                  _I2C_DO_IDLE 1272                                    _I2C_DO_RCEN 12AF  
                   rdBlkRegCompleteHandler@ptr 0077                               validateRequest@i 003F  
                                    _TXSTAbits 019E                                ?_I2C_ReadNBytes 0024  
                      ?_I2C_CallbackReturnStop 0077                       _I2C_DO_SEND_RESTART_READ 1277  
                               ?_Tick_Init_SES 0070                             __end_of_Get_millis 1419  
                 I2C_CallbackReturnStop@funPtr 0077                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 0002  
           __end_of_EUSART_DefaultErrorHandler 1255                     _EUSART_DefaultErrorHandler 1251  
                                 _EUSART_Write 1618                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 005A                                  ??_EUSART_Read 0020  
                                ?_I2C_DO_RESET 0070                       ?_I2C_SetInterruptHandler 0020  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  ??_I2C_DO_RX 0078                                    ??_I2C_DO_TX 0078  
                          i1I2C_SetCallback@cb 0070                              ??_I2C_MasterClose 0020  
                  ModbusRTU_Slave_Poll@i8state 0060                         ??_I2C_MasterDisableIrq 0020  
                                  ??_I2C_Close 0020                              ??_I2C_MasterStart 0020  
                            ??_I2C_MasterWrite 0022                 __end_of_I2C_CallbackReturnStop 122D  
                       _I2C_DO_RX_NACK_RESTART 1295                                 _ModbusSlaveF04 0BCA  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 1242  
                            ??_validateRequest 002F                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 0167                                 _Modbus_calcCRC 0970  
                     __end_of_ModbusSlave_Init 08BF                         _EUSART_SetErrorHandler 12E0  
                  __end_of_I2C_MasterEnableIrq 1251                            ?_I2C_MasterClearIrq 0070  
                                    __Umul8_16 1552                    __end_of_I2C_MasterGetRxData 1239  
                                  __pdataBANK1 00E4                          __end_of_I2C_DO_RX_ACK 1290  
                       ModbusSlave_Init@_SW_Ad 0020                               _I2C_DO_SEND_STOP 1286  
                            ??_I2C_SetCallback 0023                               ?i1_I2C_SetBuffer 0070  
                          I2C_Open@returnValue 0023                             _I2C_MasterSendNack 1259  
                     ?_I2C_MasterEnableRestart 0070                                      ___fladd@a 004C  
                                    ___fladd@b 0048                              _i2c_fsmStateTable 1800  
                                    ___fldiv@a 005C                                      ___fldiv@b 0060  
                                  __pbssBIGRAM 2138                    __end_of_EUSART_Transmit_ISR 1552  
                        _I2C_DO_SEND_ADR_WRITE 12BD                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                    __pbssCOMMON 007C  
                                    ___latbits 0002                                  _SensorAmbient 00DB  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                               ??_I2C_DO_RESET 0070                            ?_I2C_MasterSendNack 0070  
                                 ?_Task_Sensor 0070                   __end_of_I2C_DO_SEND_ADR_READ 12CE  
                         ??_I2C_MasterClearIrq 0020                    __end_of_I2C_DO_ADDRESS_NACK 15EF  
                       __end_of_ModbusSlaveF04 0C6E                     __end_of_EUSART_Receive_ISR 1735  
                             _I2C_MasterIsNack 12A9                      _I2C_DO_SEND_RESTART_WRITE 127C  
             _EUSART_RxDefaultInterruptHandler 0169                            __end_of_EUSART_Read 1618  
                             _I2C_MasterSetIrq 1239                                      __pnvBANK2 0161  
                        _rd2RegCompleteHandler 13D5                                ??_Tick_Init_SES 0022  
                       __end_of_Modbus_calcCRC 09CF                   __end_of_EUSART_RxDataHandler 1484  
                                     ?_Task_MB 0070                         _PIN_MANAGER_Initialize 14D4  
                        _wr2RegCompleteHandler 13B3                      ??_I2C_CallbackReturnReset 0078  
                      ModbusRTU_Slave_Poll@reg 005E                           EUSART_Read@readValue 0021  
                  __end_of_I2C_MasterOperation 150E                           ??_I2C_MasterSendNack 0070  
                     rd2RegCompleteHandler@ptr 0077               __end_of_TMR1_SetInterruptHandler 12D7  
                                     ?___fladd 0048                                       ?___fldiv 005C  
                                    __ptext100 1334                                      __ptext101 1576  
                                    __ptext102 1230                                      __ptext103 122D  
                                    __ptext104 152F                                      __ptext105 16F4  
                                    __ptext106 1255                                      __ptext107 1229  
                                    __ptext108 1251                                      __ptext109 146A  
                                     ?___flmul 002E                                       ?___fltol 0020  
                                   ?__Umul8_16 0020                                   _eusartRxHead 006C  
                                 _eusartTxHead 006F                                   _eusartRxTail 006B  
                       ??_I2C_MasterSendTxData 0070                                   _eusartTxTail 006E  
                    __end_of_i2c_fsmStateTable 1820                   ??_INTERRUPT_InterruptManager 007C  
                     __end_of_Modbus_getRxBuff 0970                        _eusartTxBufferRemaining 006D  
              __end_of_I2C_SetInterruptHandler 12E0                         ModbusSlaveF04@u8regsno 004C  
                      I2C_MasterOperation@read 0020                                       _I2C_Open 17BA  
                                  _device_time 00D7                              I2C_ReadNBytes@len 0025  
                      ??_rd1RegCompleteHandler 0078                                 _eusartRxBuffer 0145  
                              ?_ModbusSlaveF04 003E                        ??_wr1RegCompleteHandler 0078  
                     ModbusSlaveF04@u8StartAdd 004A                                  _TMR1_CallBack 136F  
                               _eusartTxBuffer 014D         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATCbits 010E                                      clear_ram0 134B  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 007D                                ?_Modbus_calcCRC 0020  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                     _PIR2bits 0012                         ModbusSlaveF04@valueAdd 004E  
                        __end_of_I2C_MasterFsm 15C6                          __end_of_I2C_MasterIsr 1265  
                            _EUSART_is_tx_done 1265                    __end_of_I2C_DO_RX_NACK_STOP 1295  
    __end_of_EUSART_DefaultOverrunErrorHandler 1259            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 1255  
                                     _TMR1_ISR 1397                              ModbusSlaveF04@reg 004D  
              __end_of_I2C_MasterEnableRestart 1230                             ?_EUSART_is_tx_done 0070  
                         buildException@u8func 0022                          __end_of_I2C_SetBuffer 1452  
                            ??_TMR1_Initialize 0022                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                            ??_EUSART_is_tx_done 0020  
                             ReadData@humidity 00BF                                  ??_rtcc_handle 0070  
                                     _App_Init 1320                       wr2RegCompleteHandler@ptr 0077  
                                  _EUSART_Read 15EF                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0077                               ??_I2C_ReadNBytes 0027  
                               ?_TMR1_CallBack 0070          Modbus_sendTxBuff@u32overTimecountDown 003A  
                                   _I2C_Status 0120                                       _ReadData 0096  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0077                               ??_I2C_MasterRead 0022  
                          I2C_WriteNBytes@data 0028                               ??_I2C_MasterOpen 0020  
                       ?_wr2RegCompleteHandler 0077                               ??_I2C_MasterStop 0070  
                             ??_I2C_Initialize 0020                      __end_of_EUSART_is_tx_done 1269  
                        i1I2C_SetBuffer@buffer 0072                           __end_of_I2C_DO_RESET 129F  
                      ??_OSCILLATOR_Initialize 0020                                    ??__Umul8_16 0022  
                          _EUSART_ErrorHandler 0163                           _I2C_DO_SEND_ADR_READ 12C5  
                  ?_EUSART_DefaultErrorHandler 0070                       _TMR1_SetInterruptHandler 12CE  
                        _TMR1_InterruptHandler 0161                                _I2C_MasterClose 1245  
                I2C_SetAddressNackCallback@ptr 0026                                I2C_Open@address 0022  
                                     ___xxtofl 0C6E                                _I2C_MasterStart 124B  
                              _I2C_MasterWrite 12A4                           _EUSART_RxDataHandler 146A  
                            ??_I2C_WriteNBytes 002B                                       __ptext10 12F2  
                                     __ptext11 12E9                                       __ptext20 1552  
                                     __ptext12 12E0                                       __ptext21 0DFC  
                                     __ptext13 132A                                       __ptext30 12D7  
                                     __ptext22 051A                                       __ptext14 0B33  
                                     __ptext31 137C                                       __ptext23 166D  
                                     __ptext15 0829                                       __ptext40 1419  
                                     __ptext32 124E                                       __ptext24 133F  
                                     __ptext16 0096                                       __ptext41 1484  
                                     __ptext33 129F                                       __ptext25 0800  
                                     __ptext17 0C6E                                       __ptext50 1408  
                                     __ptext42 0722                                       __ptext34 14F0  
                                     __ptext26 12A4                                       __ptext18 0A3D  
                                     __ptext51 1265                                       __ptext43 0AAE  
                                     __ptext35 124B                                       __ptext27 150E  
                                     __ptext19 02DF                                       __ptext52 1618  
                                     __ptext44 1642                                       __ptext36 149E  
                                     __ptext28 143D                                       __ptext61 1397  
                                     __ptext53 0870                                       __ptext45 0914  
                                     __ptext37 1248                                       __ptext29 17BA  
                                     __ptext70 129A                                       __ptext62 13F7  
                                     __ptext54 16C5                                       __ptext46 15EF  
                                     __ptext38 1245                                       __ptext71 1295  
                                     __ptext63 136F                                       __ptext55 1320  
                                     __ptext47 0BCA                                       __ptext39 1242  
                                     __ptext80 08BF                                       __ptext72 1290  
                                     __ptext64 122A                                       __ptext56 07EE  
                                     __ptext48 0D19                                       __ptext81 12BD  
                                     __ptext73 128B                                       __ptext65 1316  
                                     __ptext57 12CE                                       __ptext49 0970  
                                     __ptext90 1259                                       __ptext82 12C5  
                                     __ptext74 1286                                       __ptext66 1261  
                                     __ptext58 123F                                       __ptext91 1233  
                                     __ptext83 1272                                       __ptext75 1281  
                                     __ptext67 159E                                       __ptext59 09CF  
                                     __ptext92 0002                                       __ptext84 1698  
                                     __ptext76 127C                                       __ptext68 123C  
                                     __ptext93 122B                                       __ptext85 1239  
                                     __ptext77 1277                                       __ptext69 15C6  
                                     __ptext94 1452                                       __ptext86 12A9  
                                     __ptext78 12AF                                       __ptext95 13E6  
                                     __ptext87 126D                                       __ptext79 1777  
                                     __ptext96 13D5                                       __ptext88 125D  
                                     __ptext97 13C4                                       __ptext89 1236  
                                     __ptext98 13B3                                       __ptext99 1389  
                              _validateRequest 0AAE            __end_of_I2C_SetDataCompleteCallback 133F  
                  _I2C_SetDataCompleteCallback 1334                              ??_TMR1_StartTimer 0020  
                      ?_I2C_DO_RX_NACK_RESTART 0070                            __end_of_rtcc_handle 1320  
                     __end_of_I2C_DO_SEND_STOP 128B                  Modbus_getRxBuff@bBuffOverflow 0029  
                      ?_EUSART_SetErrorHandler 0020                                _I2C_SetCallback 0800  
                ??_I2C_SetDataCompleteCallback 0077  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
                          Modbus_calcCRC@temp2 0026                        Modbus_sendTxBuff@u16crc 0036  
                                  _MB_Register 015D                                       int$flags 007E  
                            ?_ModbusSlave_Init 0070                          ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_INTERRUPT_InterruptManager 0058                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 12F2                  _EUSART_SetFramingErrorHandler 12E9  
                            ??_TMR1_WriteTimer 0072                             ??_ModbusSlave_Init 0020  
                     __end_of_I2C_MasterIsNack 12AF                       __end_of_I2C_MasterSetIrq 123C  
                                   _INTCONbits 000B                             I2C_WriteNBytes@len 0029  
                        ?_EUSART_RxDataHandler 0070                 __end_of_I2C_DO_RX_NACK_RESTART 129A  
                              ??_TMR1_CallBack 0070                                       intlevel1 0000  
                               _buildException 1642                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 12E9                            _I2C_DO_SEND_RESTART 1281  
         __end_of_EUSART_SetRxInterruptHandler 1304                   _EUSART_SetRxInterruptHandler 12FB  
                         Device_Init@value_SW1 0020                           Device_Init@value_SW2 0021  
                         Device_Init@value_SW3 0022                           Device_Init@value_SW4 0023  
                           Modbus_calcCRC@flag 0028                             Modbus_calcCRC@temp 002D  
                                ??_App_Process 0069                                 _Task_Indicator 16C5  
                           _EUSART_Receive_ISR 16F4  EUSART_SetFramingErrorHandler@interruptHandler 0020  
                      __end_of_I2C_MasterClose 1248                        __end_of_I2C_MasterStart 124E  
              ModbusRTU_Slave_Poll@u8exception 0061                        __end_of_I2C_MasterWrite 12A9  
                                ??_Device_Init 0020                                  __pstringtext1 1800  
                                __pstringtext2 1820                         __Umul8_16@multiplicand 0020  
                         ?_I2C_DO_SEND_RESTART 0070                              ?_Modbus_getRxBuff 0070  
                          ?_EUSART_Receive_ISR 0070                        __end_of_validateRequest 0B33  
                           ??_Modbus_getRxBuff 0022                                    _rtcc_handle 1316  
                             ??_ModbusSlaveF04 0040                              Modbus_calcCRC@len 002A  
                                  _SSPCON1bits 0215                                    _SSPCON2bits 0216  
                          _ModbusSlave_Process 1484                         __end_of_buildException 166D  
                                ___fladd@signs 0058                                     _SES_Modbus 2138  
                           EUSART_Write@txData 0021                        __end_of_I2C_SetCallback 0829  
               __end_of_PIN_MANAGER_Initialize 14F0                               ??_Modbus_calcCRC 0022  
                __end_of_rd1RegCompleteHandler 13D5                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0028                  __end_of_wr1RegCompleteHandler 13F7  
                        _MSSP_InterruptHandler 00E1                                _TMR1_Initialize 14B9  
                           Task_Sensor@valTime 0155                         __end_of_Task_Indicator 16F4  
                            __Umul8_16@product 0024                          __end_of_Tick_Init_SES 0800  
